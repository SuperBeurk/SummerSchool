

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 06 11:34:38 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	text80,global,reloc=2,class=CODE,delta=1
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	text83,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	text86,global,reloc=2,class=CODE,delta=1
   100                           	psect	text87,global,reloc=2,class=CODE,delta=1
   101                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   105                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   106  0000                     
   107                           ; Version 2.32
   108                           ; Generated 02/02/2021 GMT
   109                           ; 
   110                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   111                           ; All rights reserved.
   112                           ; 
   113                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   114                           ; 
   115                           ; Redistribution and use in source and binary forms, with or without modification, are
   116                           ; permitted provided that the following conditions are met:
   117                           ; 
   118                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   119                           ;        conditions and the following disclaimer.
   120                           ; 
   121                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   122                           ;        of conditions and the following disclaimer in the documentation and/or other
   123                           ;        materials provided with the distribution. Publication is not required when
   124                           ;        this file is used in an embedded application.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18LF25K22 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     
   143                           	psect	mediumconst
   144  00783A                     __pmediumconst:
   145                           	callstack 0
   146  00783A  00                 	db	0
   147  00783B                     _arialNarrow_12ptBitmaps:
   148                           	callstack 0
   149  00783B  00                 	db	0
   150  00783C  00                 	db	0
   151  00783D  00                 	db	0
   152  00783E  00                 	db	0
   153  00783F  00                 	db	0
   154  007840  00                 	db	0
   155  007841  00                 	db	0
   156  007842  00                 	db	0
   157  007843  00                 	db	0
   158  007844  00                 	db	0
   159  007845  00                 	db	0
   160  007846  00                 	db	0
   161  007847  00                 	db	0
   162  007848  00                 	db	0
   163  007849  00                 	db	0
   164  00784A  00                 	db	0
   165  00784B  C0                 	db	192
   166  00784C  C0                 	db	192
   167  00784D  C0                 	db	192
   168  00784E  C0                 	db	192
   169  00784F  C0                 	db	192
   170  007850  C0                 	db	192
   171  007851  C0                 	db	192
   172  007852  C0                 	db	192
   173  007853  00                 	db	0
   174  007854  C0                 	db	192
   175  007855  C0                 	db	192
   176  007856  00                 	db	0
   177  007857  00                 	db	0
   178  007858  00                 	db	0
   179  007859  00                 	db	0
   180  00785A  D8                 	db	216
   181  00785B  D8                 	db	216
   182  00785C  D8                 	db	216
   183  00785D  D8                 	db	216
   184  00785E  00                 	db	0
   185  00785F  00                 	db	0
   186  007860  00                 	db	0
   187  007861  00                 	db	0
   188  007862  00                 	db	0
   189  007863  00                 	db	0
   190  007864  00                 	db	0
   191  007865  00                 	db	0
   192  007866  00                 	db	0
   193  007867  00                 	db	0
   194  007868  00                 	db	0
   195  007869  12                 	db	18
   196  00786A  12                 	db	18
   197  00786B  24                 	db	36
   198  00786C  FE                 	db	254
   199  00786D  FE                 	db	254
   200  00786E  48                 	db	72
   201  00786F  FE                 	db	254
   202  007870  FE                 	db	254
   203  007871  48                 	db	72
   204  007872  90                 	db	144
   205  007873  90                 	db	144
   206  007874  00                 	db	0
   207  007875  00                 	db	0
   208  007876  00                 	db	0
   209  007877  10                 	db	16
   210  007878  7C                 	db	124
   211  007879  FC                 	db	252
   212  00787A  D6                 	db	214
   213  00787B  D0                 	db	208
   214  00787C  F0                 	db	240
   215  00787D  7C                 	db	124
   216  00787E  1E                 	db	30
   217  00787F  16                 	db	22
   218  007880  D6                 	db	214
   219  007881  7E                 	db	126
   220  007882  7C                 	db	124
   221  007883  10                 	db	16
   222  007884  00                 	db	0
   223  007885  00                 	db	0
   224  007886  00                 	db	0
   225  007887  00                 	db	0
   226  007888  61                 	db	97
   227  007889  00                 	db	0
   228  00788A  91                 	db	145
   229  00788B  00                 	db	0
   230  00788C  92                 	db	146
   231  00788D  00                 	db	0
   232  00788E  92                 	db	146
   233  00788F  00                 	db	0
   234  007890  94                 	db	148
   235  007891  00                 	db	0
   236  007892  65                 	db	101
   237  007893  80                 	db	128
   238  007894  06                 	db	6
   239  007895  40                 	db	64
   240  007896  0A                 	db	10
   241  007897  40                 	db	64
   242  007898  0A                 	db	10
   243  007899  40                 	db	64
   244  00789A  12                 	db	18
   245  00789B  40                 	db	64
   246  00789C  11                 	db	17
   247  00789D  80                 	db	128
   248  00789E  00                 	db	0
   249  00789F  00                 	db	0
   250  0078A0  00                 	db	0
   251  0078A1  00                 	db	0
   252  0078A2  00                 	db	0
   253  0078A3  00                 	db	0
   254  0078A4  00                 	db	0
   255  0078A5  38                 	db	56
   256  0078A6  7C                 	db	124
   257  0078A7  6C                 	db	108
   258  0078A8  7C                 	db	124
   259  0078A9  30                 	db	48
   260  0078AA  78                 	db	120
   261  0078AB  DA                 	db	218
   262  0078AC  CE                 	db	206
   263  0078AD  CE                 	db	206
   264  0078AE  FF                 	db	255
   265  0078AF  7A                 	db	122
   266  0078B0  00                 	db	0
   267  0078B1  00                 	db	0
   268  0078B2  00                 	db	0
   269  0078B3  00                 	db	0
   270  0078B4  C0                 	db	192
   271  0078B5  C0                 	db	192
   272  0078B6  C0                 	db	192
   273  0078B7  C0                 	db	192
   274  0078B8  00                 	db	0
   275  0078B9  00                 	db	0
   276  0078BA  00                 	db	0
   277  0078BB  00                 	db	0
   278  0078BC  00                 	db	0
   279  0078BD  00                 	db	0
   280  0078BE  00                 	db	0
   281  0078BF  00                 	db	0
   282  0078C0  00                 	db	0
   283  0078C1  00                 	db	0
   284  0078C2  00                 	db	0
   285  0078C3  10                 	db	16
   286  0078C4  20                 	db	32
   287  0078C5  60                 	db	96
   288  0078C6  60                 	db	96
   289  0078C7  C0                 	db	192
   290  0078C8  C0                 	db	192
   291  0078C9  C0                 	db	192
   292  0078CA  C0                 	db	192
   293  0078CB  C0                 	db	192
   294  0078CC  C0                 	db	192
   295  0078CD  60                 	db	96
   296  0078CE  60                 	db	96
   297  0078CF  20                 	db	32
   298  0078D0  10                 	db	16
   299  0078D1  00                 	db	0
   300  0078D2  80                 	db	128
   301  0078D3  40                 	db	64
   302  0078D4  60                 	db	96
   303  0078D5  20                 	db	32
   304  0078D6  30                 	db	48
   305  0078D7  30                 	db	48
   306  0078D8  30                 	db	48
   307  0078D9  30                 	db	48
   308  0078DA  30                 	db	48
   309  0078DB  30                 	db	48
   310  0078DC  60                 	db	96
   311  0078DD  60                 	db	96
   312  0078DE  40                 	db	64
   313  0078DF  80                 	db	128
   314  0078E0  00                 	db	0
   315  0078E1  20                 	db	32
   316  0078E2  A8                 	db	168
   317  0078E3  F8                 	db	248
   318  0078E4  20                 	db	32
   319  0078E5  50                 	db	80
   320  0078E6  50                 	db	80
   321  0078E7  00                 	db	0
   322  0078E8  00                 	db	0
   323  0078E9  00                 	db	0
   324  0078EA  00                 	db	0
   325  0078EB  00                 	db	0
   326  0078EC  00                 	db	0
   327  0078ED  00                 	db	0
   328  0078EE  00                 	db	0
   329  0078EF  00                 	db	0
   330  0078F0  00                 	db	0
   331  0078F1  00                 	db	0
   332  0078F2  00                 	db	0
   333  0078F3  30                 	db	48
   334  0078F4  30                 	db	48
   335  0078F5  30                 	db	48
   336  0078F6  FC                 	db	252
   337  0078F7  FC                 	db	252
   338  0078F8  30                 	db	48
   339  0078F9  30                 	db	48
   340  0078FA  30                 	db	48
   341  0078FB  00                 	db	0
   342  0078FC  00                 	db	0
   343  0078FD  00                 	db	0
   344  0078FE  00                 	db	0
   345  0078FF  00                 	db	0
   346  007900  00                 	db	0
   347  007901  00                 	db	0
   348  007902  00                 	db	0
   349  007903  00                 	db	0
   350  007904  00                 	db	0
   351  007905  00                 	db	0
   352  007906  00                 	db	0
   353  007907  00                 	db	0
   354  007908  C0                 	db	192
   355  007909  C0                 	db	192
   356  00790A  40                 	db	64
   357  00790B  40                 	db	64
   358  00790C  80                 	db	128
   359  00790D  00                 	db	0
   360  00790E  00                 	db	0
   361  00790F  00                 	db	0
   362  007910  00                 	db	0
   363  007911  00                 	db	0
   364  007912  00                 	db	0
   365  007913  00                 	db	0
   366  007914  F0                 	db	240
   367  007915  F0                 	db	240
   368  007916  00                 	db	0
   369  007917  00                 	db	0
   370  007918  00                 	db	0
   371  007919  00                 	db	0
   372  00791A  00                 	db	0
   373  00791B  00                 	db	0
   374  00791C  00                 	db	0
   375  00791D  00                 	db	0
   376  00791E  00                 	db	0
   377  00791F  00                 	db	0
   378  007920  00                 	db	0
   379  007921  00                 	db	0
   380  007922  00                 	db	0
   381  007923  00                 	db	0
   382  007924  00                 	db	0
   383  007925  00                 	db	0
   384  007926  C0                 	db	192
   385  007927  C0                 	db	192
   386  007928  00                 	db	0
   387  007929  00                 	db	0
   388  00792A  00                 	db	0
   389  00792B  00                 	db	0
   390  00792C  30                 	db	48
   391  00792D  30                 	db	48
   392  00792E  30                 	db	48
   393  00792F  60                 	db	96
   394  007930  60                 	db	96
   395  007931  60                 	db	96
   396  007932  60                 	db	96
   397  007933  60                 	db	96
   398  007934  C0                 	db	192
   399  007935  C0                 	db	192
   400  007936  C0                 	db	192
   401  007937  00                 	db	0
   402  007938  00                 	db	0
   403  007939  00                 	db	0
   404  00793A  00                 	db	0
   405  00793B  78                 	db	120
   406  00793C  78                 	db	120
   407  00793D  CC                 	db	204
   408  00793E  CC                 	db	204
   409  00793F  CC                 	db	204
   410  007940  CC                 	db	204
   411  007941  CC                 	db	204
   412  007942  CC                 	db	204
   413  007943  CC                 	db	204
   414  007944  78                 	db	120
   415  007945  78                 	db	120
   416  007946  00                 	db	0
   417  007947  00                 	db	0
   418  007948  00                 	db	0
   419  007949  00                 	db	0
   420  00794A  30                 	db	48
   421  00794B  30                 	db	48
   422  00794C  70                 	db	112
   423  00794D  F0                 	db	240
   424  00794E  B0                 	db	176
   425  00794F  30                 	db	48
   426  007950  30                 	db	48
   427  007951  30                 	db	48
   428  007952  30                 	db	48
   429  007953  30                 	db	48
   430  007954  30                 	db	48
   431  007955  00                 	db	0
   432  007956  00                 	db	0
   433  007957  00                 	db	0
   434  007958  00                 	db	0
   435  007959  38                 	db	56
   436  00795A  7C                 	db	124
   437  00795B  CC                 	db	204
   438  00795C  CC                 	db	204
   439  00795D  0C                 	db	12
   440  00795E  18                 	db	24
   441  00795F  38                 	db	56
   442  007960  70                 	db	112
   443  007961  60                 	db	96
   444  007962  FC                 	db	252
   445  007963  FC                 	db	252
   446  007964  00                 	db	0
   447  007965  00                 	db	0
   448  007966  00                 	db	0
   449  007967  00                 	db	0
   450  007968  78                 	db	120
   451  007969  FC                 	db	252
   452  00796A  CC                 	db	204
   453  00796B  0C                 	db	12
   454  00796C  38                 	db	56
   455  00796D  38                 	db	56
   456  00796E  0C                 	db	12
   457  00796F  0C                 	db	12
   458  007970  CC                 	db	204
   459  007971  F8                 	db	248
   460  007972  78                 	db	120
   461  007973  00                 	db	0
   462  007974  00                 	db	0
   463  007975  00                 	db	0
   464  007976  00                 	db	0
   465  007977  0C                 	db	12
   466  007978  1C                 	db	28
   467  007979  1C                 	db	28
   468  00797A  3C                 	db	60
   469  00797B  2C                 	db	44
   470  00797C  6C                 	db	108
   471  00797D  CC                 	db	204
   472  00797E  FE                 	db	254
   473  00797F  FE                 	db	254
   474  007980  0C                 	db	12
   475  007981  0C                 	db	12
   476  007982  00                 	db	0
   477  007983  00                 	db	0
   478  007984  00                 	db	0
   479  007985  00                 	db	0
   480  007986  7C                 	db	124
   481  007987  7C                 	db	124
   482  007988  60                 	db	96
   483  007989  D8                 	db	216
   484  00798A  FC                 	db	252
   485  00798B  CC                 	db	204
   486  00798C  0C                 	db	12
   487  00798D  CC                 	db	204
   488  00798E  CC                 	db	204
   489  00798F  78                 	db	120
   490  007990  78                 	db	120
   491  007991  00                 	db	0
   492  007992  00                 	db	0
   493  007993  00                 	db	0
   494  007994  00                 	db	0
   495  007995  70                 	db	112
   496  007996  78                 	db	120
   497  007997  D8                 	db	216
   498  007998  C0                 	db	192
   499  007999  F0                 	db	240
   500  00799A  F8                 	db	248
   501  00799B  D8                 	db	216
   502  00799C  D8                 	db	216
   503  00799D  D8                 	db	216
   504  00799E  78                 	db	120
   505  00799F  70                 	db	112
   506  0079A0  00                 	db	0
   507  0079A1  00                 	db	0
   508  0079A2  00                 	db	0
   509  0079A3  00                 	db	0
   510  0079A4  F8                 	db	248
   511  0079A5  F8                 	db	248
   512  0079A6  18                 	db	24
   513  0079A7  10                 	db	16
   514  0079A8  30                 	db	48
   515  0079A9  30                 	db	48
   516  0079AA  20                 	db	32
   517  0079AB  60                 	db	96
   518  0079AC  60                 	db	96
   519  0079AD  60                 	db	96
   520  0079AE  60                 	db	96
   521  0079AF  00                 	db	0
   522  0079B0  00                 	db	0
   523  0079B1  00                 	db	0
   524  0079B2  00                 	db	0
   525  0079B3  78                 	db	120
   526  0079B4  FC                 	db	252
   527  0079B5  CC                 	db	204
   528  0079B6  CC                 	db	204
   529  0079B7  78                 	db	120
   530  0079B8  78                 	db	120
   531  0079B9  CC                 	db	204
   532  0079BA  CC                 	db	204
   533  0079BB  CC                 	db	204
   534  0079BC  FC                 	db	252
   535  0079BD  78                 	db	120
   536  0079BE  00                 	db	0
   537  0079BF  00                 	db	0
   538  0079C0  00                 	db	0
   539  0079C1  00                 	db	0
   540  0079C2  70                 	db	112
   541  0079C3  F8                 	db	248
   542  0079C4  CC                 	db	204
   543  0079C5  CC                 	db	204
   544  0079C6  CC                 	db	204
   545  0079C7  FC                 	db	252
   546  0079C8  7C                 	db	124
   547  0079C9  0C                 	db	12
   548  0079CA  CC                 	db	204
   549  0079CB  F8                 	db	248
   550  0079CC  70                 	db	112
   551  0079CD  00                 	db	0
   552  0079CE  00                 	db	0
   553  0079CF  00                 	db	0
   554  0079D0  00                 	db	0
   555  0079D1  00                 	db	0
   556  0079D2  00                 	db	0
   557  0079D3  00                 	db	0
   558  0079D4  C0                 	db	192
   559  0079D5  C0                 	db	192
   560  0079D6  00                 	db	0
   561  0079D7  00                 	db	0
   562  0079D8  00                 	db	0
   563  0079D9  00                 	db	0
   564  0079DA  C0                 	db	192
   565  0079DB  C0                 	db	192
   566  0079DC  00                 	db	0
   567  0079DD  00                 	db	0
   568  0079DE  00                 	db	0
   569  0079DF  00                 	db	0
   570  0079E0  00                 	db	0
   571  0079E1  00                 	db	0
   572  0079E2  00                 	db	0
   573  0079E3  C0                 	db	192
   574  0079E4  C0                 	db	192
   575  0079E5  00                 	db	0
   576  0079E6  00                 	db	0
   577  0079E7  00                 	db	0
   578  0079E8  00                 	db	0
   579  0079E9  C0                 	db	192
   580  0079EA  C0                 	db	192
   581  0079EB  40                 	db	64
   582  0079EC  40                 	db	64
   583  0079ED  80                 	db	128
   584  0079EE  00                 	db	0
   585  0079EF  00                 	db	0
   586  0079F0  04                 	db	4
   587  0079F1  1C                 	db	28
   588  0079F2  38                 	db	56
   589  0079F3  F0                 	db	240
   590  0079F4  C0                 	db	192
   591  0079F5  F0                 	db	240
   592  0079F6  38                 	db	56
   593  0079F7  1C                 	db	28
   594  0079F8  04                 	db	4
   595  0079F9  00                 	db	0
   596  0079FA  00                 	db	0
   597  0079FB  00                 	db	0
   598  0079FC  00                 	db	0
   599  0079FD  00                 	db	0
   600  0079FE  00                 	db	0
   601  0079FF  00                 	db	0
   602  007A00  00                 	db	0
   603  007A01  FC                 	db	252
   604  007A02  FC                 	db	252
   605  007A03  00                 	db	0
   606  007A04  FC                 	db	252
   607  007A05  FC                 	db	252
   608  007A06  00                 	db	0
   609  007A07  00                 	db	0
   610  007A08  00                 	db	0
   611  007A09  00                 	db	0
   612  007A0A  00                 	db	0
   613  007A0B  00                 	db	0
   614  007A0C  00                 	db	0
   615  007A0D  00                 	db	0
   616  007A0E  80                 	db	128
   617  007A0F  E0                 	db	224
   618  007A10  70                 	db	112
   619  007A11  3C                 	db	60
   620  007A12  0C                 	db	12
   621  007A13  1C                 	db	28
   622  007A14  70                 	db	112
   623  007A15  E0                 	db	224
   624  007A16  80                 	db	128
   625  007A17  00                 	db	0
   626  007A18  00                 	db	0
   627  007A19  00                 	db	0
   628  007A1A  00                 	db	0
   629  007A1B  00                 	db	0
   630  007A1C  78                 	db	120
   631  007A1D  FC                 	db	252
   632  007A1E  CC                 	db	204
   633  007A1F  CC                 	db	204
   634  007A20  1C                 	db	28
   635  007A21  18                 	db	24
   636  007A22  30                 	db	48
   637  007A23  30                 	db	48
   638  007A24  00                 	db	0
   639  007A25  30                 	db	48
   640  007A26  30                 	db	48
   641  007A27  00                 	db	0
   642  007A28  00                 	db	0
   643  007A29  00                 	db	0
   644  007A2A  00                 	db	0
   645  007A2B  00                 	db	0
   646  007A2C  0F                 	db	15
   647  007A2D  C0                 	db	192
   648  007A2E  1F                 	db	31
   649  007A2F  E0                 	db	224
   650  007A30  30                 	db	48
   651  007A31  30                 	db	48
   652  007A32  66                 	db	102
   653  007A33  D8                 	db	216
   654  007A34  EF                 	db	239
   655  007A35  D8                 	db	216
   656  007A36  DD                 	db	221
   657  007A37  D8                 	db	216
   658  007A38  D8                 	db	216
   659  007A39  98                 	db	152
   660  007A3A  D9                 	db	217
   661  007A3B  98                 	db	152
   662  007A3C  D9                 	db	217
   663  007A3D  B0                 	db	176
   664  007A3E  DF                 	db	223
   665  007A3F  F0                 	db	240
   666  007A40  6E                 	db	110
   667  007A41  C8                 	db	200
   668  007A42  70                 	db	112
   669  007A43  10                 	db	16
   670  007A44  3F                 	db	63
   671  007A45  E0                 	db	224
   672  007A46  0F                 	db	15
   673  007A47  C0                 	db	192
   674  007A48  00                 	db	0
   675  007A49  00                 	db	0
   676  007A4A  1C                 	db	28
   677  007A4B  00                 	db	0
   678  007A4C  1C                 	db	28
   679  007A4D  00                 	db	0
   680  007A4E  1C                 	db	28
   681  007A4F  00                 	db	0
   682  007A50  36                 	db	54
   683  007A51  00                 	db	0
   684  007A52  36                 	db	54
   685  007A53  00                 	db	0
   686  007A54  36                 	db	54
   687  007A55  00                 	db	0
   688  007A56  63                 	db	99
   689  007A57  00                 	db	0
   690  007A58  7F                 	db	127
   691  007A59  00                 	db	0
   692  007A5A  7F                 	db	127
   693  007A5B  00                 	db	0
   694  007A5C  C1                 	db	193
   695  007A5D  80                 	db	128
   696  007A5E  C1                 	db	193
   697  007A5F  80                 	db	128
   698  007A60  00                 	db	0
   699  007A61  00                 	db	0
   700  007A62  00                 	db	0
   701  007A63  00                 	db	0
   702  007A64  00                 	db	0
   703  007A65  00                 	db	0
   704  007A66  00                 	db	0
   705  007A67  FC                 	db	252
   706  007A68  FE                 	db	254
   707  007A69  C6                 	db	198
   708  007A6A  C6                 	db	198
   709  007A6B  FC                 	db	252
   710  007A6C  FC                 	db	252
   711  007A6D  C6                 	db	198
   712  007A6E  C6                 	db	198
   713  007A6F  C6                 	db	198
   714  007A70  FE                 	db	254
   715  007A71  FC                 	db	252
   716  007A72  00                 	db	0
   717  007A73  00                 	db	0
   718  007A74  00                 	db	0
   719  007A75  00                 	db	0
   720  007A76  3C                 	db	60
   721  007A77  7E                 	db	126
   722  007A78  67                 	db	103
   723  007A79  C2                 	db	194
   724  007A7A  C0                 	db	192
   725  007A7B  C0                 	db	192
   726  007A7C  C0                 	db	192
   727  007A7D  C2                 	db	194
   728  007A7E  67                 	db	103
   729  007A7F  7E                 	db	126
   730  007A80  3C                 	db	60
   731  007A81  00                 	db	0
   732  007A82  00                 	db	0
   733  007A83  00                 	db	0
   734  007A84  00                 	db	0
   735  007A85  F8                 	db	248
   736  007A86  FC                 	db	252
   737  007A87  CE                 	db	206
   738  007A88  C6                 	db	198
   739  007A89  C6                 	db	198
   740  007A8A  C6                 	db	198
   741  007A8B  C6                 	db	198
   742  007A8C  C6                 	db	198
   743  007A8D  CE                 	db	206
   744  007A8E  FC                 	db	252
   745  007A8F  F8                 	db	248
   746  007A90  00                 	db	0
   747  007A91  00                 	db	0
   748  007A92  00                 	db	0
   749  007A93  00                 	db	0
   750  007A94  FE                 	db	254
   751  007A95  FE                 	db	254
   752  007A96  C0                 	db	192
   753  007A97  C0                 	db	192
   754  007A98  FE                 	db	254
   755  007A99  FE                 	db	254
   756  007A9A  C0                 	db	192
   757  007A9B  C0                 	db	192
   758  007A9C  C0                 	db	192
   759  007A9D  FE                 	db	254
   760  007A9E  FE                 	db	254
   761  007A9F  00                 	db	0
   762  007AA0  00                 	db	0
   763  007AA1  00                 	db	0
   764  007AA2  00                 	db	0
   765  007AA3  FC                 	db	252
   766  007AA4  FC                 	db	252
   767  007AA5  C0                 	db	192
   768  007AA6  C0                 	db	192
   769  007AA7  F8                 	db	248
   770  007AA8  F8                 	db	248
   771  007AA9  C0                 	db	192
   772  007AAA  C0                 	db	192
   773  007AAB  C0                 	db	192
   774  007AAC  C0                 	db	192
   775  007AAD  C0                 	db	192
   776  007AAE  00                 	db	0
   777  007AAF  00                 	db	0
   778  007AB0  00                 	db	0
   779  007AB1  00                 	db	0
   780  007AB2  3C                 	db	60
   781  007AB3  7E                 	db	126
   782  007AB4  67                 	db	103
   783  007AB5  C3                 	db	195
   784  007AB6  C0                 	db	192
   785  007AB7  CF                 	db	207
   786  007AB8  CF                 	db	207
   787  007AB9  C3                 	db	195
   788  007ABA  63                 	db	99
   789  007ABB  7F                 	db	127
   790  007ABC  3C                 	db	60
   791  007ABD  00                 	db	0
   792  007ABE  00                 	db	0
   793  007ABF  00                 	db	0
   794  007AC0  00                 	db	0
   795  007AC1  C6                 	db	198
   796  007AC2  C6                 	db	198
   797  007AC3  C6                 	db	198
   798  007AC4  C6                 	db	198
   799  007AC5  FE                 	db	254
   800  007AC6  FE                 	db	254
   801  007AC7  C6                 	db	198
   802  007AC8  C6                 	db	198
   803  007AC9  C6                 	db	198
   804  007ACA  C6                 	db	198
   805  007ACB  C6                 	db	198
   806  007ACC  00                 	db	0
   807  007ACD  00                 	db	0
   808  007ACE  00                 	db	0
   809  007ACF  00                 	db	0
   810  007AD0  C0                 	db	192
   811  007AD1  C0                 	db	192
   812  007AD2  C0                 	db	192
   813  007AD3  C0                 	db	192
   814  007AD4  C0                 	db	192
   815  007AD5  C0                 	db	192
   816  007AD6  C0                 	db	192
   817  007AD7  C0                 	db	192
   818  007AD8  C0                 	db	192
   819  007AD9  C0                 	db	192
   820  007ADA  C0                 	db	192
   821  007ADB  00                 	db	0
   822  007ADC  00                 	db	0
   823  007ADD  00                 	db	0
   824  007ADE  00                 	db	0
   825  007ADF  0C                 	db	12
   826  007AE0  0C                 	db	12
   827  007AE1  0C                 	db	12
   828  007AE2  0C                 	db	12
   829  007AE3  0C                 	db	12
   830  007AE4  0C                 	db	12
   831  007AE5  0C                 	db	12
   832  007AE6  CC                 	db	204
   833  007AE7  CC                 	db	204
   834  007AE8  FC                 	db	252
   835  007AE9  78                 	db	120
   836  007AEA  00                 	db	0
   837  007AEB  00                 	db	0
   838  007AEC  00                 	db	0
   839  007AED  00                 	db	0
   840  007AEE  C3                 	db	195
   841  007AEF  C6                 	db	198
   842  007AF0  CC                 	db	204
   843  007AF1  CC                 	db	204
   844  007AF2  D8                 	db	216
   845  007AF3  FC                 	db	252
   846  007AF4  EC                 	db	236
   847  007AF5  C6                 	db	198
   848  007AF6  C6                 	db	198
   849  007AF7  C3                 	db	195
   850  007AF8  C3                 	db	195
   851  007AF9  00                 	db	0
   852  007AFA  00                 	db	0
   853  007AFB  00                 	db	0
   854  007AFC  00                 	db	0
   855  007AFD  C0                 	db	192
   856  007AFE  C0                 	db	192
   857  007AFF  C0                 	db	192
   858  007B00  C0                 	db	192
   859  007B01  C0                 	db	192
   860  007B02  C0                 	db	192
   861  007B03  C0                 	db	192
   862  007B04  C0                 	db	192
   863  007B05  C0                 	db	192
   864  007B06  FE                 	db	254
   865  007B07  FE                 	db	254
   866  007B08  00                 	db	0
   867  007B09  00                 	db	0
   868  007B0A  00                 	db	0
   869  007B0B  00                 	db	0
   870  007B0C  00                 	db	0
   871  007B0D  E3                 	db	227
   872  007B0E  80                 	db	128
   873  007B0F  E3                 	db	227
   874  007B10  80                 	db	128
   875  007B11  E3                 	db	227
   876  007B12  80                 	db	128
   877  007B13  F7                 	db	247
   878  007B14  80                 	db	128
   879  007B15  D5                 	db	213
   880  007B16  80                 	db	128
   881  007B17  D5                 	db	213
   882  007B18  80                 	db	128
   883  007B19  D5                 	db	213
   884  007B1A  80                 	db	128
   885  007B1B  D5                 	db	213
   886  007B1C  80                 	db	128
   887  007B1D  DD                 	db	221
   888  007B1E  80                 	db	128
   889  007B1F  D9                 	db	217
   890  007B20  80                 	db	128
   891  007B21  C9                 	db	201
   892  007B22  80                 	db	128
   893  007B23  00                 	db	0
   894  007B24  00                 	db	0
   895  007B25  00                 	db	0
   896  007B26  00                 	db	0
   897  007B27  00                 	db	0
   898  007B28  00                 	db	0
   899  007B29  00                 	db	0
   900  007B2A  C6                 	db	198
   901  007B2B  E6                 	db	230
   902  007B2C  E6                 	db	230
   903  007B2D  E6                 	db	230
   904  007B2E  F6                 	db	246
   905  007B2F  D6                 	db	214
   906  007B30  DE                 	db	222
   907  007B31  DE                 	db	222
   908  007B32  CE                 	db	206
   909  007B33  CE                 	db	206
   910  007B34  C6                 	db	198
   911  007B35  00                 	db	0
   912  007B36  00                 	db	0
   913  007B37  00                 	db	0
   914  007B38  00                 	db	0
   915  007B39  3C                 	db	60
   916  007B3A  7E                 	db	126
   917  007B3B  67                 	db	103
   918  007B3C  C3                 	db	195
   919  007B3D  C3                 	db	195
   920  007B3E  C3                 	db	195
   921  007B3F  C3                 	db	195
   922  007B40  C3                 	db	195
   923  007B41  66                 	db	102
   924  007B42  7E                 	db	126
   925  007B43  3C                 	db	60
   926  007B44  00                 	db	0
   927  007B45  00                 	db	0
   928  007B46  00                 	db	0
   929  007B47  00                 	db	0
   930  007B48  FC                 	db	252
   931  007B49  FE                 	db	254
   932  007B4A  C6                 	db	198
   933  007B4B  C6                 	db	198
   934  007B4C  C6                 	db	198
   935  007B4D  FE                 	db	254
   936  007B4E  FC                 	db	252
   937  007B4F  C0                 	db	192
   938  007B50  C0                 	db	192
   939  007B51  C0                 	db	192
   940  007B52  C0                 	db	192
   941  007B53  00                 	db	0
   942  007B54  00                 	db	0
   943  007B55  00                 	db	0
   944  007B56  00                 	db	0
   945  007B57  00                 	db	0
   946  007B58  3C                 	db	60
   947  007B59  00                 	db	0
   948  007B5A  7E                 	db	126
   949  007B5B  00                 	db	0
   950  007B5C  E7                 	db	231
   951  007B5D  00                 	db	0
   952  007B5E  C3                 	db	195
   953  007B5F  00                 	db	0
   954  007B60  C3                 	db	195
   955  007B61  00                 	db	0
   956  007B62  C3                 	db	195
   957  007B63  00                 	db	0
   958  007B64  C3                 	db	195
   959  007B65  00                 	db	0
   960  007B66  CB                 	db	203
   961  007B67  00                 	db	0
   962  007B68  66                 	db	102
   963  007B69  00                 	db	0
   964  007B6A  7F                 	db	127
   965  007B6B  00                 	db	0
   966  007B6C  3D                 	db	61
   967  007B6D  80                 	db	128
   968  007B6E  00                 	db	0
   969  007B6F  80                 	db	128
   970  007B70  00                 	db	0
   971  007B71  00                 	db	0
   972  007B72  00                 	db	0
   973  007B73  00                 	db	0
   974  007B74  00                 	db	0
   975  007B75  FC                 	db	252
   976  007B76  FE                 	db	254
   977  007B77  C6                 	db	198
   978  007B78  C6                 	db	198
   979  007B79  FE                 	db	254
   980  007B7A  FC                 	db	252
   981  007B7B  CC                 	db	204
   982  007B7C  C6                 	db	198
   983  007B7D  C6                 	db	198
   984  007B7E  C6                 	db	198
   985  007B7F  C3                 	db	195
   986  007B80  00                 	db	0
   987  007B81  00                 	db	0
   988  007B82  00                 	db	0
   989  007B83  00                 	db	0
   990  007B84  7C                 	db	124
   991  007B85  FE                 	db	254
   992  007B86  C6                 	db	198
   993  007B87  C6                 	db	198
   994  007B88  F0                 	db	240
   995  007B89  7C                 	db	124
   996  007B8A  0E                 	db	14
   997  007B8B  C6                 	db	198
   998  007B8C  C6                 	db	198
   999  007B8D  FE                 	db	254
  1000  007B8E  7C                 	db	124
  1001  007B8F  00                 	db	0
  1002  007B90  00                 	db	0
  1003  007B91  00                 	db	0
  1004  007B92  00                 	db	0
  1005  007B93  FF                 	db	255
  1006  007B94  FF                 	db	255
  1007  007B95  18                 	db	24
  1008  007B96  18                 	db	24
  1009  007B97  18                 	db	24
  1010  007B98  18                 	db	24
  1011  007B99  18                 	db	24
  1012  007B9A  18                 	db	24
  1013  007B9B  18                 	db	24
  1014  007B9C  18                 	db	24
  1015  007B9D  18                 	db	24
  1016  007B9E  00                 	db	0
  1017  007B9F  00                 	db	0
  1018  007BA0  00                 	db	0
  1019  007BA1  00                 	db	0
  1020  007BA2  C6                 	db	198
  1021  007BA3  C6                 	db	198
  1022  007BA4  C6                 	db	198
  1023  007BA5  C6                 	db	198
  1024  007BA6  C6                 	db	198
  1025  007BA7  C6                 	db	198
  1026  007BA8  C6                 	db	198
  1027  007BA9  C6                 	db	198
  1028  007BAA  C6                 	db	198
  1029  007BAB  7E                 	db	126
  1030  007BAC  38                 	db	56
  1031  007BAD  00                 	db	0
  1032  007BAE  00                 	db	0
  1033  007BAF  00                 	db	0
  1034  007BB0  00                 	db	0
  1035  007BB1  00                 	db	0
  1036  007BB2  C1                 	db	193
  1037  007BB3  80                 	db	128
  1038  007BB4  C1                 	db	193
  1039  007BB5  80                 	db	128
  1040  007BB6  63                 	db	99
  1041  007BB7  00                 	db	0
  1042  007BB8  63                 	db	99
  1043  007BB9  00                 	db	0
  1044  007BBA  63                 	db	99
  1045  007BBB  00                 	db	0
  1046  007BBC  36                 	db	54
  1047  007BBD  00                 	db	0
  1048  007BBE  36                 	db	54
  1049  007BBF  00                 	db	0
  1050  007BC0  36                 	db	54
  1051  007BC1  00                 	db	0
  1052  007BC2  1C                 	db	28
  1053  007BC3  00                 	db	0
  1054  007BC4  1C                 	db	28
  1055  007BC5  00                 	db	0
  1056  007BC6  1C                 	db	28
  1057  007BC7  00                 	db	0
  1058  007BC8  00                 	db	0
  1059  007BC9  00                 	db	0
  1060  007BCA  00                 	db	0
  1061  007BCB  00                 	db	0
  1062  007BCC  00                 	db	0
  1063  007BCD  00                 	db	0
  1064  007BCE  00                 	db	0
  1065  007BCF  00                 	db	0
  1066  007BD0  C4                 	db	196
  1067  007BD1  60                 	db	96
  1068  007BD2  C4                 	db	196
  1069  007BD3  60                 	db	96
  1070  007BD4  CA                 	db	202
  1071  007BD5  60                 	db	96
  1072  007BD6  6A                 	db	106
  1073  007BD7  C0                 	db	192
  1074  007BD8  6A                 	db	106
  1075  007BD9  C0                 	db	192
  1076  007BDA  6A                 	db	106
  1077  007BDB  C0                 	db	192
  1078  007BDC  6A                 	db	106
  1079  007BDD  C0                 	db	192
  1080  007BDE  6A                 	db	106
  1081  007BDF  C0                 	db	192
  1082  007BE0  31                 	db	49
  1083  007BE1  80                 	db	128
  1084  007BE2  31                 	db	49
  1085  007BE3  80                 	db	128
  1086  007BE4  31                 	db	49
  1087  007BE5  80                 	db	128
  1088  007BE6  00                 	db	0
  1089  007BE7  00                 	db	0
  1090  007BE8  00                 	db	0
  1091  007BE9  00                 	db	0
  1092  007BEA  00                 	db	0
  1093  007BEB  00                 	db	0
  1094  007BEC  00                 	db	0
  1095  007BED  00                 	db	0
  1096  007BEE  C1                 	db	193
  1097  007BEF  80                 	db	128
  1098  007BF0  63                 	db	99
  1099  007BF1  00                 	db	0
  1100  007BF2  36                 	db	54
  1101  007BF3  00                 	db	0
  1102  007BF4  36                 	db	54
  1103  007BF5  00                 	db	0
  1104  007BF6  1C                 	db	28
  1105  007BF7  00                 	db	0
  1106  007BF8  1C                 	db	28
  1107  007BF9  00                 	db	0
  1108  007BFA  1C                 	db	28
  1109  007BFB  00                 	db	0
  1110  007BFC  36                 	db	54
  1111  007BFD  00                 	db	0
  1112  007BFE  36                 	db	54
  1113  007BFF  00                 	db	0
  1114  007C00  63                 	db	99
  1115  007C01  00                 	db	0
  1116  007C02  C1                 	db	193
  1117  007C03  80                 	db	128
  1118  007C04  00                 	db	0
  1119  007C05  00                 	db	0
  1120  007C06  00                 	db	0
  1121  007C07  00                 	db	0
  1122  007C08  00                 	db	0
  1123  007C09  00                 	db	0
  1124  007C0A  00                 	db	0
  1125  007C0B  C3                 	db	195
  1126  007C0C  66                 	db	102
  1127  007C0D  66                 	db	102
  1128  007C0E  3C                 	db	60
  1129  007C0F  3C                 	db	60
  1130  007C10  18                 	db	24
  1131  007C11  18                 	db	24
  1132  007C12  18                 	db	24
  1133  007C13  18                 	db	24
  1134  007C14  18                 	db	24
  1135  007C15  18                 	db	24
  1136  007C16  00                 	db	0
  1137  007C17  00                 	db	0
  1138  007C18  00                 	db	0
  1139  007C19  00                 	db	0
  1140  007C1A  FE                 	db	254
  1141  007C1B  FE                 	db	254
  1142  007C1C  06                 	db	6
  1143  007C1D  0C                 	db	12
  1144  007C1E  18                 	db	24
  1145  007C1F  30                 	db	48
  1146  007C20  30                 	db	48
  1147  007C21  60                 	db	96
  1148  007C22  C0                 	db	192
  1149  007C23  FE                 	db	254
  1150  007C24  FE                 	db	254
  1151  007C25  00                 	db	0
  1152  007C26  00                 	db	0
  1153  007C27  00                 	db	0
  1154  007C28  00                 	db	0
  1155  007C29  E0                 	db	224
  1156  007C2A  E0                 	db	224
  1157  007C2B  C0                 	db	192
  1158  007C2C  C0                 	db	192
  1159  007C2D  C0                 	db	192
  1160  007C2E  C0                 	db	192
  1161  007C2F  C0                 	db	192
  1162  007C30  C0                 	db	192
  1163  007C31  C0                 	db	192
  1164  007C32  C0                 	db	192
  1165  007C33  C0                 	db	192
  1166  007C34  C0                 	db	192
  1167  007C35  E0                 	db	224
  1168  007C36  E0                 	db	224
  1169  007C37  00                 	db	0
  1170  007C38  C0                 	db	192
  1171  007C39  C0                 	db	192
  1172  007C3A  C0                 	db	192
  1173  007C3B  60                 	db	96
  1174  007C3C  60                 	db	96
  1175  007C3D  60                 	db	96
  1176  007C3E  60                 	db	96
  1177  007C3F  60                 	db	96
  1178  007C40  30                 	db	48
  1179  007C41  30                 	db	48
  1180  007C42  30                 	db	48
  1181  007C43  00                 	db	0
  1182  007C44  00                 	db	0
  1183  007C45  00                 	db	0
  1184  007C46  00                 	db	0
  1185  007C47  E0                 	db	224
  1186  007C48  E0                 	db	224
  1187  007C49  60                 	db	96
  1188  007C4A  60                 	db	96
  1189  007C4B  60                 	db	96
  1190  007C4C  60                 	db	96
  1191  007C4D  60                 	db	96
  1192  007C4E  60                 	db	96
  1193  007C4F  60                 	db	96
  1194  007C50  60                 	db	96
  1195  007C51  60                 	db	96
  1196  007C52  60                 	db	96
  1197  007C53  E0                 	db	224
  1198  007C54  E0                 	db	224
  1199  007C55  00                 	db	0
  1200  007C56  38                 	db	56
  1201  007C57  38                 	db	56
  1202  007C58  6C                 	db	108
  1203  007C59  6C                 	db	108
  1204  007C5A  6C                 	db	108
  1205  007C5B  C6                 	db	198
  1206  007C5C  00                 	db	0
  1207  007C5D  00                 	db	0
  1208  007C5E  00                 	db	0
  1209  007C5F  00                 	db	0
  1210  007C60  00                 	db	0
  1211  007C61  00                 	db	0
  1212  007C62  00                 	db	0
  1213  007C63  00                 	db	0
  1214  007C64  00                 	db	0
  1215  007C65  00                 	db	0
  1216  007C66  00                 	db	0
  1217  007C67  00                 	db	0
  1218  007C68  00                 	db	0
  1219  007C69  00                 	db	0
  1220  007C6A  00                 	db	0
  1221  007C6B  00                 	db	0
  1222  007C6C  00                 	db	0
  1223  007C6D  00                 	db	0
  1224  007C6E  00                 	db	0
  1225  007C6F  00                 	db	0
  1226  007C70  00                 	db	0
  1227  007C71  FE                 	db	254
  1228  007C72  00                 	db	0
  1229  007C73  00                 	db	0
  1230  007C74  C0                 	db	192
  1231  007C75  60                 	db	96
  1232  007C76  00                 	db	0
  1233  007C77  00                 	db	0
  1234  007C78  00                 	db	0
  1235  007C79  00                 	db	0
  1236  007C7A  00                 	db	0
  1237  007C7B  00                 	db	0
  1238  007C7C  00                 	db	0
  1239  007C7D  00                 	db	0
  1240  007C7E  00                 	db	0
  1241  007C7F  00                 	db	0
  1242  007C80  00                 	db	0
  1243  007C81  00                 	db	0
  1244  007C82  00                 	db	0
  1245  007C83  00                 	db	0
  1246  007C84  00                 	db	0
  1247  007C85  00                 	db	0
  1248  007C86  78                 	db	120
  1249  007C87  FC                 	db	252
  1250  007C88  CC                 	db	204
  1251  007C89  3C                 	db	60
  1252  007C8A  FC                 	db	252
  1253  007C8B  CC                 	db	204
  1254  007C8C  FC                 	db	252
  1255  007C8D  6C                 	db	108
  1256  007C8E  00                 	db	0
  1257  007C8F  00                 	db	0
  1258  007C90  00                 	db	0
  1259  007C91  00                 	db	0
  1260  007C92  C0                 	db	192
  1261  007C93  C0                 	db	192
  1262  007C94  C0                 	db	192
  1263  007C95  F8                 	db	248
  1264  007C96  FC                 	db	252
  1265  007C97  CC                 	db	204
  1266  007C98  CC                 	db	204
  1267  007C99  CC                 	db	204
  1268  007C9A  CC                 	db	204
  1269  007C9B  F8                 	db	248
  1270  007C9C  F8                 	db	248
  1271  007C9D  00                 	db	0
  1272  007C9E  00                 	db	0
  1273  007C9F  00                 	db	0
  1274  007CA0  00                 	db	0
  1275  007CA1  00                 	db	0
  1276  007CA2  00                 	db	0
  1277  007CA3  00                 	db	0
  1278  007CA4  70                 	db	112
  1279  007CA5  78                 	db	120
  1280  007CA6  D8                 	db	216
  1281  007CA7  C0                 	db	192
  1282  007CA8  C0                 	db	192
  1283  007CA9  D8                 	db	216
  1284  007CAA  78                 	db	120
  1285  007CAB  70                 	db	112
  1286  007CAC  00                 	db	0
  1287  007CAD  00                 	db	0
  1288  007CAE  00                 	db	0
  1289  007CAF  00                 	db	0
  1290  007CB0  0C                 	db	12
  1291  007CB1  0C                 	db	12
  1292  007CB2  0C                 	db	12
  1293  007CB3  7C                 	db	124
  1294  007CB4  FC                 	db	252
  1295  007CB5  CC                 	db	204
  1296  007CB6  CC                 	db	204
  1297  007CB7  CC                 	db	204
  1298  007CB8  CC                 	db	204
  1299  007CB9  FC                 	db	252
  1300  007CBA  7C                 	db	124
  1301  007CBB  00                 	db	0
  1302  007CBC  00                 	db	0
  1303  007CBD  00                 	db	0
  1304  007CBE  00                 	db	0
  1305  007CBF  00                 	db	0
  1306  007CC0  00                 	db	0
  1307  007CC1  00                 	db	0
  1308  007CC2  70                 	db	112
  1309  007CC3  F8                 	db	248
  1310  007CC4  D8                 	db	216
  1311  007CC5  F8                 	db	248
  1312  007CC6  C0                 	db	192
  1313  007CC7  D8                 	db	216
  1314  007CC8  F8                 	db	248
  1315  007CC9  70                 	db	112
  1316  007CCA  00                 	db	0
  1317  007CCB  00                 	db	0
  1318  007CCC  00                 	db	0
  1319  007CCD  00                 	db	0
  1320  007CCE  30                 	db	48
  1321  007CCF  70                 	db	112
  1322  007CD0  60                 	db	96
  1323  007CD1  F0                 	db	240
  1324  007CD2  F0                 	db	240
  1325  007CD3  60                 	db	96
  1326  007CD4  60                 	db	96
  1327  007CD5  60                 	db	96
  1328  007CD6  60                 	db	96
  1329  007CD7  60                 	db	96
  1330  007CD8  60                 	db	96
  1331  007CD9  00                 	db	0
  1332  007CDA  00                 	db	0
  1333  007CDB  00                 	db	0
  1334  007CDC  00                 	db	0
  1335  007CDD  00                 	db	0
  1336  007CDE  00                 	db	0
  1337  007CDF  00                 	db	0
  1338  007CE0  6C                 	db	108
  1339  007CE1  FC                 	db	252
  1340  007CE2  CC                 	db	204
  1341  007CE3  CC                 	db	204
  1342  007CE4  CC                 	db	204
  1343  007CE5  CC                 	db	204
  1344  007CE6  FC                 	db	252
  1345  007CE7  6C                 	db	108
  1346  007CE8  0C                 	db	12
  1347  007CE9  CC                 	db	204
  1348  007CEA  78                 	db	120
  1349  007CEB  00                 	db	0
  1350  007CEC  C0                 	db	192
  1351  007CED  C0                 	db	192
  1352  007CEE  C0                 	db	192
  1353  007CEF  D8                 	db	216
  1354  007CF0  FC                 	db	252
  1355  007CF1  CC                 	db	204
  1356  007CF2  CC                 	db	204
  1357  007CF3  CC                 	db	204
  1358  007CF4  CC                 	db	204
  1359  007CF5  CC                 	db	204
  1360  007CF6  CC                 	db	204
  1361  007CF7  00                 	db	0
  1362  007CF8  00                 	db	0
  1363  007CF9  00                 	db	0
  1364  007CFA  00                 	db	0
  1365  007CFB  C0                 	db	192
  1366  007CFC  C0                 	db	192
  1367  007CFD  00                 	db	0
  1368  007CFE  C0                 	db	192
  1369  007CFF  C0                 	db	192
  1370  007D00  C0                 	db	192
  1371  007D01  C0                 	db	192
  1372  007D02  C0                 	db	192
  1373  007D03  C0                 	db	192
  1374  007D04  C0                 	db	192
  1375  007D05  C0                 	db	192
  1376  007D06  00                 	db	0
  1377  007D07  00                 	db	0
  1378  007D08  00                 	db	0
  1379  007D09  00                 	db	0
  1380  007D0A  30                 	db	48
  1381  007D0B  30                 	db	48
  1382  007D0C  00                 	db	0
  1383  007D0D  30                 	db	48
  1384  007D0E  30                 	db	48
  1385  007D0F  30                 	db	48
  1386  007D10  30                 	db	48
  1387  007D11  30                 	db	48
  1388  007D12  30                 	db	48
  1389  007D13  30                 	db	48
  1390  007D14  30                 	db	48
  1391  007D15  30                 	db	48
  1392  007D16  F0                 	db	240
  1393  007D17  E0                 	db	224
  1394  007D18  00                 	db	0
  1395  007D19  C0                 	db	192
  1396  007D1A  C0                 	db	192
  1397  007D1B  C0                 	db	192
  1398  007D1C  CC                 	db	204
  1399  007D1D  D8                 	db	216
  1400  007D1E  F0                 	db	240
  1401  007D1F  F8                 	db	248
  1402  007D20  D8                 	db	216
  1403  007D21  D8                 	db	216
  1404  007D22  CC                 	db	204
  1405  007D23  CC                 	db	204
  1406  007D24  00                 	db	0
  1407  007D25  00                 	db	0
  1408  007D26  00                 	db	0
  1409  007D27  00                 	db	0
  1410  007D28  C0                 	db	192
  1411  007D29  C0                 	db	192
  1412  007D2A  C0                 	db	192
  1413  007D2B  C0                 	db	192
  1414  007D2C  C0                 	db	192
  1415  007D2D  C0                 	db	192
  1416  007D2E  C0                 	db	192
  1417  007D2F  C0                 	db	192
  1418  007D30  C0                 	db	192
  1419  007D31  C0                 	db	192
  1420  007D32  C0                 	db	192
  1421  007D33  00                 	db	0
  1422  007D34  00                 	db	0
  1423  007D35  00                 	db	0
  1424  007D36  00                 	db	0
  1425  007D37  00                 	db	0
  1426  007D38  00                 	db	0
  1427  007D39  00                 	db	0
  1428  007D3A  00                 	db	0
  1429  007D3B  00                 	db	0
  1430  007D3C  00                 	db	0
  1431  007D3D  00                 	db	0
  1432  007D3E  D9                 	db	217
  1433  007D3F  80                 	db	128
  1434  007D40  FF                 	db	255
  1435  007D41  C0                 	db	192
  1436  007D42  CC                 	db	204
  1437  007D43  C0                 	db	192
  1438  007D44  CC                 	db	204
  1439  007D45  C0                 	db	192
  1440  007D46  CC                 	db	204
  1441  007D47  C0                 	db	192
  1442  007D48  CC                 	db	204
  1443  007D49  C0                 	db	192
  1444  007D4A  CC                 	db	204
  1445  007D4B  C0                 	db	192
  1446  007D4C  CC                 	db	204
  1447  007D4D  C0                 	db	192
  1448  007D4E  00                 	db	0
  1449  007D4F  00                 	db	0
  1450  007D50  00                 	db	0
  1451  007D51  00                 	db	0
  1452  007D52  00                 	db	0
  1453  007D53  00                 	db	0
  1454  007D54  00                 	db	0
  1455  007D55  00                 	db	0
  1456  007D56  00                 	db	0
  1457  007D57  00                 	db	0
  1458  007D58  D8                 	db	216
  1459  007D59  FC                 	db	252
  1460  007D5A  CC                 	db	204
  1461  007D5B  CC                 	db	204
  1462  007D5C  CC                 	db	204
  1463  007D5D  CC                 	db	204
  1464  007D5E  CC                 	db	204
  1465  007D5F  CC                 	db	204
  1466  007D60  00                 	db	0
  1467  007D61  00                 	db	0
  1468  007D62  00                 	db	0
  1469  007D63  00                 	db	0
  1470  007D64  00                 	db	0
  1471  007D65  00                 	db	0
  1472  007D66  00                 	db	0
  1473  007D67  78                 	db	120
  1474  007D68  78                 	db	120
  1475  007D69  CC                 	db	204
  1476  007D6A  CC                 	db	204
  1477  007D6B  CC                 	db	204
  1478  007D6C  CC                 	db	204
  1479  007D6D  78                 	db	120
  1480  007D6E  78                 	db	120
  1481  007D6F  00                 	db	0
  1482  007D70  00                 	db	0
  1483  007D71  00                 	db	0
  1484  007D72  00                 	db	0
  1485  007D73  00                 	db	0
  1486  007D74  00                 	db	0
  1487  007D75  00                 	db	0
  1488  007D76  D8                 	db	216
  1489  007D77  FC                 	db	252
  1490  007D78  CC                 	db	204
  1491  007D79  CC                 	db	204
  1492  007D7A  CC                 	db	204
  1493  007D7B  CC                 	db	204
  1494  007D7C  F8                 	db	248
  1495  007D7D  D8                 	db	216
  1496  007D7E  C0                 	db	192
  1497  007D7F  C0                 	db	192
  1498  007D80  C0                 	db	192
  1499  007D81  00                 	db	0
  1500  007D82  00                 	db	0
  1501  007D83  00                 	db	0
  1502  007D84  00                 	db	0
  1503  007D85  6C                 	db	108
  1504  007D86  FC                 	db	252
  1505  007D87  CC                 	db	204
  1506  007D88  CC                 	db	204
  1507  007D89  CC                 	db	204
  1508  007D8A  CC                 	db	204
  1509  007D8B  FC                 	db	252
  1510  007D8C  6C                 	db	108
  1511  007D8D  0C                 	db	12
  1512  007D8E  0C                 	db	12
  1513  007D8F  0C                 	db	12
  1514  007D90  00                 	db	0
  1515  007D91  00                 	db	0
  1516  007D92  00                 	db	0
  1517  007D93  00                 	db	0
  1518  007D94  D0                 	db	208
  1519  007D95  F0                 	db	240
  1520  007D96  C0                 	db	192
  1521  007D97  C0                 	db	192
  1522  007D98  C0                 	db	192
  1523  007D99  C0                 	db	192
  1524  007D9A  C0                 	db	192
  1525  007D9B  C0                 	db	192
  1526  007D9C  00                 	db	0
  1527  007D9D  00                 	db	0
  1528  007D9E  00                 	db	0
  1529  007D9F  00                 	db	0
  1530  007DA0  00                 	db	0
  1531  007DA1  00                 	db	0
  1532  007DA2  00                 	db	0
  1533  007DA3  70                 	db	112
  1534  007DA4  F8                 	db	248
  1535  007DA5  C8                 	db	200
  1536  007DA6  E0                 	db	224
  1537  007DA7  38                 	db	56
  1538  007DA8  98                 	db	152
  1539  007DA9  F8                 	db	248
  1540  007DAA  70                 	db	112
  1541  007DAB  00                 	db	0
  1542  007DAC  00                 	db	0
  1543  007DAD  00                 	db	0
  1544  007DAE  00                 	db	0
  1545  007DAF  20                 	db	32
  1546  007DB0  60                 	db	96
  1547  007DB1  60                 	db	96
  1548  007DB2  F0                 	db	240
  1549  007DB3  F0                 	db	240
  1550  007DB4  60                 	db	96
  1551  007DB5  60                 	db	96
  1552  007DB6  60                 	db	96
  1553  007DB7  60                 	db	96
  1554  007DB8  70                 	db	112
  1555  007DB9  70                 	db	112
  1556  007DBA  00                 	db	0
  1557  007DBB  00                 	db	0
  1558  007DBC  00                 	db	0
  1559  007DBD  00                 	db	0
  1560  007DBE  00                 	db	0
  1561  007DBF  00                 	db	0
  1562  007DC0  00                 	db	0
  1563  007DC1  CC                 	db	204
  1564  007DC2  CC                 	db	204
  1565  007DC3  CC                 	db	204
  1566  007DC4  CC                 	db	204
  1567  007DC5  CC                 	db	204
  1568  007DC6  CC                 	db	204
  1569  007DC7  FC                 	db	252
  1570  007DC8  6C                 	db	108
  1571  007DC9  00                 	db	0
  1572  007DCA  00                 	db	0
  1573  007DCB  00                 	db	0
  1574  007DCC  00                 	db	0
  1575  007DCD  00                 	db	0
  1576  007DCE  00                 	db	0
  1577  007DCF  00                 	db	0
  1578  007DD0  C6                 	db	198
  1579  007DD1  C6                 	db	198
  1580  007DD2  6C                 	db	108
  1581  007DD3  6C                 	db	108
  1582  007DD4  6C                 	db	108
  1583  007DD5  38                 	db	56
  1584  007DD6  38                 	db	56
  1585  007DD7  38                 	db	56
  1586  007DD8  00                 	db	0
  1587  007DD9  00                 	db	0
  1588  007DDA  00                 	db	0
  1589  007DDB  00                 	db	0
  1590  007DDC  00                 	db	0
  1591  007DDD  00                 	db	0
  1592  007DDE  00                 	db	0
  1593  007DDF  00                 	db	0
  1594  007DE0  00                 	db	0
  1595  007DE1  00                 	db	0
  1596  007DE2  00                 	db	0
  1597  007DE3  DD                 	db	221
  1598  007DE4  80                 	db	128
  1599  007DE5  DD                 	db	221
  1600  007DE6  80                 	db	128
  1601  007DE7  DD                 	db	221
  1602  007DE8  80                 	db	128
  1603  007DE9  D5                 	db	213
  1604  007DEA  80                 	db	128
  1605  007DEB  55                 	db	85
  1606  007DEC  00                 	db	0
  1607  007DED  77                 	db	119
  1608  007DEE  00                 	db	0
  1609  007DEF  77                 	db	119
  1610  007DF0  00                 	db	0
  1611  007DF1  77                 	db	119
  1612  007DF2  00                 	db	0
  1613  007DF3  00                 	db	0
  1614  007DF4  00                 	db	0
  1615  007DF5  00                 	db	0
  1616  007DF6  00                 	db	0
  1617  007DF7  00                 	db	0
  1618  007DF8  00                 	db	0
  1619  007DF9  00                 	db	0
  1620  007DFA  00                 	db	0
  1621  007DFB  00                 	db	0
  1622  007DFC  00                 	db	0
  1623  007DFD  CC                 	db	204
  1624  007DFE  78                 	db	120
  1625  007DFF  78                 	db	120
  1626  007E00  30                 	db	48
  1627  007E01  30                 	db	48
  1628  007E02  78                 	db	120
  1629  007E03  78                 	db	120
  1630  007E04  CC                 	db	204
  1631  007E05  00                 	db	0
  1632  007E06  00                 	db	0
  1633  007E07  00                 	db	0
  1634  007E08  00                 	db	0
  1635  007E09  00                 	db	0
  1636  007E0A  00                 	db	0
  1637  007E0B  00                 	db	0
  1638  007E0C  C6                 	db	198
  1639  007E0D  C6                 	db	198
  1640  007E0E  6C                 	db	108
  1641  007E0F  6C                 	db	108
  1642  007E10  6C                 	db	108
  1643  007E11  38                 	db	56
  1644  007E12  38                 	db	56
  1645  007E13  38                 	db	56
  1646  007E14  30                 	db	48
  1647  007E15  F0                 	db	240
  1648  007E16  E0                 	db	224
  1649  007E17  00                 	db	0
  1650  007E18  00                 	db	0
  1651  007E19  00                 	db	0
  1652  007E1A  00                 	db	0
  1653  007E1B  FC                 	db	252
  1654  007E1C  FC                 	db	252
  1655  007E1D  18                 	db	24
  1656  007E1E  30                 	db	48
  1657  007E1F  30                 	db	48
  1658  007E20  60                 	db	96
  1659  007E21  FC                 	db	252
  1660  007E22  FC                 	db	252
  1661  007E23  00                 	db	0
  1662  007E24  00                 	db	0
  1663  007E25  00                 	db	0
  1664  007E26  00                 	db	0
  1665  007E27  30                 	db	48
  1666  007E28  70                 	db	112
  1667  007E29  60                 	db	96
  1668  007E2A  60                 	db	96
  1669  007E2B  60                 	db	96
  1670  007E2C  60                 	db	96
  1671  007E2D  C0                 	db	192
  1672  007E2E  C0                 	db	192
  1673  007E2F  60                 	db	96
  1674  007E30  60                 	db	96
  1675  007E31  60                 	db	96
  1676  007E32  60                 	db	96
  1677  007E33  70                 	db	112
  1678  007E34  30                 	db	48
  1679  007E35  00                 	db	0
  1680  007E36  C0                 	db	192
  1681  007E37  C0                 	db	192
  1682  007E38  C0                 	db	192
  1683  007E39  C0                 	db	192
  1684  007E3A  C0                 	db	192
  1685  007E3B  C0                 	db	192
  1686  007E3C  C0                 	db	192
  1687  007E3D  C0                 	db	192
  1688  007E3E  C0                 	db	192
  1689  007E3F  C0                 	db	192
  1690  007E40  C0                 	db	192
  1691  007E41  C0                 	db	192
  1692  007E42  C0                 	db	192
  1693  007E43  C0                 	db	192
  1694  007E44  00                 	db	0
  1695  007E45  C0                 	db	192
  1696  007E46  E0                 	db	224
  1697  007E47  60                 	db	96
  1698  007E48  60                 	db	96
  1699  007E49  60                 	db	96
  1700  007E4A  60                 	db	96
  1701  007E4B  30                 	db	48
  1702  007E4C  30                 	db	48
  1703  007E4D  60                 	db	96
  1704  007E4E  60                 	db	96
  1705  007E4F  60                 	db	96
  1706  007E50  60                 	db	96
  1707  007E51  E0                 	db	224
  1708  007E52  C0                 	db	192
  1709  007E53  00                 	db	0
  1710  007E54  00                 	db	0
  1711  007E55  00                 	db	0
  1712  007E56  00                 	db	0
  1713  007E57  00                 	db	0
  1714  007E58  E4                 	db	228
  1715  007E59  FC                 	db	252
  1716  007E5A  9C                 	db	156
  1717  007E5B  00                 	db	0
  1718  007E5C  00                 	db	0
  1719  007E5D  00                 	db	0
  1720  007E5E  00                 	db	0
  1721  007E5F  00                 	db	0
  1722  007E60  00                 	db	0
  1723  007E61  00                 	db	0
  1724  007E62                     __end_of_arialNarrow_12ptBitmaps:
  1725                           	callstack 0
  1726  007E62                     _arialNarrow_12ptDescriptors:
  1727                           	callstack 0
  1728  007E62  08                 	db	8
  1729  007E63  0000               	dw	0
  1730  007E65  02                 	db	2
  1731  007E66  000F               	dw	15
  1732  007E68  05                 	db	5
  1733  007E69  001E               	dw	30
  1734  007E6B  07                 	db	7
  1735  007E6C  002D               	dw	45
  1736  007E6E  07                 	db	7
  1737  007E6F  003C               	dw	60
  1738  007E71  0A                 	db	10
  1739  007E72  004B               	dw	75
  1740  007E74  08                 	db	8
  1741  007E75  0069               	dw	105
  1742  007E77  02                 	db	2
  1743  007E78  0078               	dw	120
  1744  007E7A  04                 	db	4
  1745  007E7B  0087               	dw	135
  1746  007E7D  04                 	db	4
  1747  007E7E  0096               	dw	150
  1748  007E80  05                 	db	5
  1749  007E81  00A5               	dw	165
  1750  007E83  06                 	db	6
  1751  007E84  00B4               	dw	180
  1752  007E86  02                 	db	2
  1753  007E87  00C3               	dw	195
  1754  007E89  04                 	db	4
  1755  007E8A  00D2               	dw	210
  1756  007E8C  02                 	db	2
  1757  007E8D  00E1               	dw	225
  1758  007E8F  04                 	db	4
  1759  007E90  00F0               	dw	240
  1760  007E92  06                 	db	6
  1761  007E93  00FF               	dw	255
  1762  007E95  04                 	db	4
  1763  007E96  010E               	dw	270
  1764  007E98  06                 	db	6
  1765  007E99  011D               	dw	285
  1766  007E9B  06                 	db	6
  1767  007E9C  012C               	dw	300
  1768  007E9E  07                 	db	7
  1769  007E9F  013B               	dw	315
  1770  007EA1  06                 	db	6
  1771  007EA2  014A               	dw	330
  1772  007EA4  05                 	db	5
  1773  007EA5  0159               	dw	345
  1774  007EA7  05                 	db	5
  1775  007EA8  0168               	dw	360
  1776  007EAA  06                 	db	6
  1777  007EAB  0177               	dw	375
  1778  007EAD  06                 	db	6
  1779  007EAE  0186               	dw	390
  1780  007EB0  02                 	db	2
  1781  007EB1  0195               	dw	405
  1782  007EB3  02                 	db	2
  1783  007EB4  01A4               	dw	420
  1784  007EB6  06                 	db	6
  1785  007EB7  01B3               	dw	435
  1786  007EB9  06                 	db	6
  1787  007EBA  01C2               	dw	450
  1788  007EBC  06                 	db	6
  1789  007EBD  01D1               	dw	465
  1790  007EBF  06                 	db	6
  1791  007EC0  01E0               	dw	480
  1792  007EC2  0D                 	db	13
  1793  007EC3  01EF               	dw	495
  1794  007EC5  09                 	db	9
  1795  007EC6  020D               	dw	525
  1796  007EC8  07                 	db	7
  1797  007EC9  022B               	dw	555
  1798  007ECB  08                 	db	8
  1799  007ECC  023A               	dw	570
  1800  007ECE  07                 	db	7
  1801  007ECF  0249               	dw	585
  1802  007ED1  07                 	db	7
  1803  007ED2  0258               	dw	600
  1804  007ED4  06                 	db	6
  1805  007ED5  0267               	dw	615
  1806  007ED7  08                 	db	8
  1807  007ED8  0276               	dw	630
  1808  007EDA  07                 	db	7
  1809  007EDB  0285               	dw	645
  1810  007EDD  02                 	db	2
  1811  007EDE  0294               	dw	660
  1812  007EE0  06                 	db	6
  1813  007EE1  02A3               	dw	675
  1814  007EE3  08                 	db	8
  1815  007EE4  02B2               	dw	690
  1816  007EE6  07                 	db	7
  1817  007EE7  02C1               	dw	705
  1818  007EE9  09                 	db	9
  1819  007EEA  02D0               	dw	720
  1820  007EEC  07                 	db	7
  1821  007EED  02EE               	dw	750
  1822  007EEF  08                 	db	8
  1823  007EF0  02FD               	dw	765
  1824  007EF2  07                 	db	7
  1825  007EF3  030C               	dw	780
  1826  007EF5  09                 	db	9
  1827  007EF6  031B               	dw	795
  1828  007EF8  08                 	db	8
  1829  007EF9  0339               	dw	825
  1830  007EFB  07                 	db	7
  1831  007EFC  0348               	dw	840
  1832  007EFE  08                 	db	8
  1833  007EFF  0357               	dw	855
  1834  007F01  07                 	db	7
  1835  007F02  0366               	dw	870
  1836  007F04  09                 	db	9
  1837  007F05  0375               	dw	885
  1838  007F07  0B                 	db	11
  1839  007F08  0393               	dw	915
  1840  007F0A  09                 	db	9
  1841  007F0B  03B1               	dw	945
  1842  007F0D  08                 	db	8
  1843  007F0E  03CF               	dw	975
  1844  007F10  07                 	db	7
  1845  007F11  03DE               	dw	990
  1846  007F13  03                 	db	3
  1847  007F14  03ED               	dw	1005
  1848  007F16  04                 	db	4
  1849  007F17  03FC               	dw	1020
  1850  007F19  03                 	db	3
  1851  007F1A  040B               	dw	1035
  1852  007F1C  07                 	db	7
  1853  007F1D  041A               	dw	1050
  1854  007F1F  07                 	db	7
  1855  007F20  0429               	dw	1065
  1856  007F22  03                 	db	3
  1857  007F23  0438               	dw	1080
  1858  007F25  06                 	db	6
  1859  007F26  0447               	dw	1095
  1860  007F28  06                 	db	6
  1861  007F29  0456               	dw	1110
  1862  007F2B  05                 	db	5
  1863  007F2C  0465               	dw	1125
  1864  007F2E  06                 	db	6
  1865  007F2F  0474               	dw	1140
  1866  007F31  05                 	db	5
  1867  007F32  0483               	dw	1155
  1868  007F34  04                 	db	4
  1869  007F35  0492               	dw	1170
  1870  007F37  06                 	db	6
  1871  007F38  04A1               	dw	1185
  1872  007F3A  06                 	db	6
  1873  007F3B  04B0               	dw	1200
  1874  007F3D  02                 	db	2
  1875  007F3E  04BF               	dw	1215
  1876  007F40  04                 	db	4
  1877  007F41  04CE               	dw	1230
  1878  007F43  06                 	db	6
  1879  007F44  04DD               	dw	1245
  1880  007F46  02                 	db	2
  1881  007F47  04EC               	dw	1260
  1882  007F49  0A                 	db	10
  1883  007F4A  04FB               	dw	1275
  1884  007F4C  06                 	db	6
  1885  007F4D  0519               	dw	1305
  1886  007F4F  06                 	db	6
  1887  007F50  0528               	dw	1320
  1888  007F52  06                 	db	6
  1889  007F53  0537               	dw	1335
  1890  007F55  06                 	db	6
  1891  007F56  0546               	dw	1350
  1892  007F58  04                 	db	4
  1893  007F59  0555               	dw	1365
  1894  007F5B  05                 	db	5
  1895  007F5C  0564               	dw	1380
  1896  007F5E  04                 	db	4
  1897  007F5F  0573               	dw	1395
  1898  007F61  06                 	db	6
  1899  007F62  0582               	dw	1410
  1900  007F64  07                 	db	7
  1901  007F65  0591               	dw	1425
  1902  007F67  09                 	db	9
  1903  007F68  05A0               	dw	1440
  1904  007F6A  06                 	db	6
  1905  007F6B  05BE               	dw	1470
  1906  007F6D  07                 	db	7
  1907  007F6E  05CD               	dw	1485
  1908  007F70  06                 	db	6
  1909  007F71  05DC               	dw	1500
  1910  007F73  04                 	db	4
  1911  007F74  05EB               	dw	1515
  1912  007F76  02                 	db	2
  1913  007F77  05FA               	dw	1530
  1914  007F79  04                 	db	4
  1915  007F7A  0609               	dw	1545
  1916  007F7C  06                 	db	6
  1917  007F7D  0618               	dw	1560
  1918  007F7F                     __end_of_arialNarrow_12ptDescriptors:
  1919                           	callstack 0
  1920  007F7F                     _arialNarrow_12ptFontInfo:
  1921                           	callstack 0
  1922  007F7F  0F                 	db	15
  1923  007F80  20                 	db	32
  1924  007F81  7E                 	db	126
  1925  007F82  62                 	db	low _arialNarrow_12ptDescriptors
  1926  007F83  7E                 	db	high _arialNarrow_12ptDescriptors
  1927  007F84  3B                 	db	low _arialNarrow_12ptBitmaps
  1928  007F85  78                 	db	high _arialNarrow_12ptBitmaps
  1929  007F86                     __end_of_arialNarrow_12ptFontInfo:
  1930                           	callstack 0
  1931  0000                     _ANSB2	set	31178
  1932  0000                     _ANSB1	set	31177
  1933  0000                     _WPUB	set	3937
  1934  0000                     _PORTBbits	set	3969
  1935  0000                     _ADRESL	set	4035
  1936  0000                     _ADRESH	set	4036
  1937  0000                     _ADCON0	set	4034
  1938  0000                     _TRISA	set	3986
  1939  0000                     _PORTA	set	3968
  1940  0000                     _ADCON2	set	4032
  1941  0000                     _T2CONbits	set	4026
  1942  0000                     _CCPR2L	set	3943
  1943  0000                     _CCP2CONbits	set	3942
  1944  0000                     _PR2	set	4027
  1945  0000                     _TMR0L	set	4054
  1946  0000                     _TMR0H	set	4055
  1947  0000                     _T0CON	set	4053
  1948  0000                     _OSCCON	set	4051
  1949  0000                     _TMR0IF	set	32658
  1950  0000                     _LATB4	set	31828
  1951  0000                     _LATB3	set	31827
  1952  0000                     _LATB1	set	31825
  1953  0000                     _TRISB4	set	31900
  1954  0000                     _TRISB3	set	31899
  1955  0000                     _INTEDG1	set	32653
  1956  0000                     _RBPU	set	32655
  1957  0000                     _TRISB1	set	31897
  1958  0000                     _LATB2	set	31826
  1959  0000                     _TRISB2	set	31898
  1960  0000                     _INT1IF	set	32640
  1961  0000                     _LATC2	set	31834
  1962  0000                     _LATC5	set	31837
  1963  0000                     _TRISC4	set	31908
  1964  0000                     _TRISC3	set	31907
  1965  0000                     _TRISC2	set	31906
  1966  0000                     _TRISC5	set	31909
  1967  0000                     _LATC3	set	31835
  1968  0000                     _LATC4	set	31836
  1969  0000                     _TMR2IF	set	31985
  1970  0000                     _TRISC1	set	31905
  1971  0000                     _TMR0IE	set	32661
  1972  0000                     _LATC0	set	31832
  1973  0000                     _TRISC0	set	31904
  1974  0000                     _INT1IE	set	32643
  1975  0000                     _GIE	set	32663
  1976  0000                     _PLLEN	set	31966
  1977  007F86                     STR_14:
  1978  007F86  50                 	db	80	;'P'
  1979  007F87  4C                 	db	76	;'L'
  1980  007F88  41                 	db	65	;'A'
  1981  007F89  59                 	db	89	;'Y'
  1982  007F8A  45                 	db	69	;'E'
  1983  007F8B  52                 	db	82	;'R'
  1984  007F8C  20                 	db	32
  1985  007F8D  31                 	db	49	;'1'
  1986  007F8E  20                 	db	32
  1987  007F8F  57                 	db	87	;'W'
  1988  007F90  49                 	db	73	;'I'
  1989  007F91  4E                 	db	78	;'N'
  1990  007F92  00                 	db	0
  1991  007F93                     STR_13:
  1992  007F93  50                 	db	80	;'P'
  1993  007F94  4C                 	db	76	;'L'
  1994  007F95  41                 	db	65	;'A'
  1995  007F96  59                 	db	89	;'Y'
  1996  007F97  45                 	db	69	;'E'
  1997  007F98  52                 	db	82	;'R'
  1998  007F99  20                 	db	32
  1999  007F9A  32                 	db	50	;'2'
  2000  007F9B  20                 	db	32
  2001  007F9C  57                 	db	87	;'W'
  2002  007F9D  49                 	db	73	;'I'
  2003  007F9E  4E                 	db	78	;'N'
  2004  007F9F  00                 	db	0
  2005  007FA0                     STR_12:
  2006  007FA0  50                 	db	80	;'P'
  2007  007FA1  41                 	db	65	;'A'
  2008  007FA2  52                 	db	82	;'R'
  2009  007FA3  41                 	db	65	;'A'
  2010  007FA4  4D                 	db	77	;'M'
  2011  007FA5  45                 	db	69	;'E'
  2012  007FA6  54                 	db	84	;'T'
  2013  007FA7  45                 	db	69	;'E'
  2014  007FA8  52                 	db	82	;'R'
  2015  007FA9  53                 	db	83	;'S'
  2016  007FAA  00                 	db	0
  2017  007FAB                     STR_4:
  2018  007FAB  50                 	db	80	;'P'
  2019  007FAC  61                 	db	97	;'a'
  2020  007FAD  72                 	db	114	;'r'
  2021  007FAE  61                 	db	97	;'a'
  2022  007FAF  6D                 	db	109	;'m'
  2023  007FB0  65                 	db	101	;'e'
  2024  007FB1  74                 	db	116	;'t'
  2025  007FB2  72                 	db	114	;'r'
  2026  007FB3  65                 	db	101	;'e'
  2027  007FB4  73                 	db	115	;'s'
  2028  007FB5  00                 	db	0
  2029  007FB6                     STR_1:
  2030  007FB6  4D                 	db	77	;'M'
  2031  007FB7  65                 	db	101	;'e'
  2032  007FB8  6E                 	db	110	;'n'
  2033  007FB9  75                 	db	117	;'u'
  2034  007FBA  53                 	db	83	;'S'
  2035  007FBB  74                 	db	116	;'t'
  2036  007FBC  61                 	db	97	;'a'
  2037  007FBD  72                 	db	114	;'r'
  2038  007FBE  74                 	db	116	;'t'
  2039  007FBF  00                 	db	0
  2040  007FC0                     STR_10:
  2041  007FC0  4E                 	db	78	;'N'
  2042  007FC1  65                 	db	101	;'e'
  2043  007FC2  77                 	db	119	;'w'
  2044  007FC3  20                 	db	32
  2045  007FC4  47                 	db	71	;'G'
  2046  007FC5  61                 	db	97	;'a'
  2047  007FC6  6D                 	db	109	;'m'
  2048  007FC7  65                 	db	101	;'e'
  2049  007FC8  00                 	db	0
  2050  007FC9                     STR_5:
  2051  007FC9  31                 	db	49	;'1'
  2052  007FCA  20                 	db	32
  2053  007FCB  50                 	db	80	;'P'
  2054  007FCC  6C                 	db	108	;'l'
  2055  007FCD  61                 	db	97	;'a'
  2056  007FCE  79                 	db	121	;'y'
  2057  007FCF  65                 	db	101	;'e'
  2058  007FD0  72                 	db	114	;'r'
  2059  007FD1  00                 	db	0
  2060  007FD2                     STR_6:
  2061  007FD2  32                 	db	50	;'2'
  2062  007FD3  20                 	db	32
  2063  007FD4  50                 	db	80	;'P'
  2064  007FD5  6C                 	db	108	;'l'
  2065  007FD6  61                 	db	97	;'a'
  2066  007FD7  79                 	db	121	;'y'
  2067  007FD8  65                 	db	101	;'e'
  2068  007FD9  72                 	db	114	;'r'
  2069  007FDA  00                 	db	0
  2070  007FDB                     STR_11:
  2071  007FDB  57                 	db	87	;'W'
  2072  007FDC  45                 	db	69	;'E'
  2073  007FDD  4C                 	db	76	;'L'
  2074  007FDE  43                 	db	67	;'C'
  2075  007FDF  4F                 	db	79	;'O'
  2076  007FE0  4D                 	db	77	;'M'
  2077  007FE1  45                 	db	69	;'E'
  2078  007FE2  00                 	db	0
  2079  007FE3                     STR_7:
  2080  007FE3  51                 	db	81	;'Q'
  2081  007FE4  55                 	db	85	;'U'
  2082  007FE5  49                 	db	73	;'I'
  2083  007FE6  54                 	db	84	;'T'
  2084  007FE7  54                 	db	84	;'T'
  2085  007FE8  45                 	db	69	;'E'
  2086  007FE9  52                 	db	82	;'R'
  2087  007FEA  00                 	db	0
  2088  007FEB                     STR_15:
  2089  007FEB  58                 	db	88	;'X'
  2090  007FEC  3A                 	db	58	;':'
  2091  007FED  20                 	db	32
  2092  007FEE  25                 	db	37
  2093  007FEF  64                 	db	100	;'d'
  2094  007FF0  00                 	db	0
  2095  007FF1                     STR_16:
  2096  007FF1  59                 	db	89	;'Y'
  2097  007FF2  3A                 	db	58	;':'
  2098  007FF3  20                 	db	32
  2099  007FF4  25                 	db	37
  2100  007FF5  64                 	db	100	;'d'
  2101  007FF6  00                 	db	0
  2102  007FF7                     STR_8:
  2103  007FF7  3C                 	db	60	;'<'
  2104  007FF8  2D                 	db	45
  2105  007FF9  2D                 	db	45
  2106  007FFA  00                 	db	0
  2107  007FFB                     STR_9:
  2108  007FFB  2D                 	db	45
  2109  007FFC  2D                 	db	45
  2110  007FFD  3E                 	db	62	;'>'
  2111  007FFE  00                 	db	0
  2112  007FFF  00                 	db	0	; dummy byte at the end
  2113  0000                     
  2114                           ; #config settings
  2115                           
  2116                           	psect	cinit
  2117  006270                     __pcinit:
  2118                           	callstack 0
  2119  006270                     start_initialization:
  2120                           	callstack 0
  2121  006270                     __initialization:
  2122                           	callstack 0
  2123                           
  2124                           ; Clear objects allocated to BANK1 (239 bytes)
  2125  006270  EE01  F000         	lfsr	0,__pbssBANK1
  2126  006274  0EEF               	movlw	239
  2127  006276                     clear_0:
  2128  006276  6AEE               	clrf	postinc0,c
  2129  006278  06E8               	decf	wreg,f,c
  2130  00627A  E1FD               	bnz	clear_0
  2131                           
  2132                           ; Clear objects allocated to BANK0 (75 bytes)
  2133  00627C  EE00  F0B5         	lfsr	0,__pbssBANK0
  2134  006280  0E4B               	movlw	75
  2135  006282                     clear_1:
  2136  006282  6AEE               	clrf	postinc0,c
  2137  006284  06E8               	decf	wreg,f,c
  2138  006286  E1FD               	bnz	clear_1
  2139                           
  2140                           ; Clear objects allocated to COMRAM (7 bytes)
  2141  006288  EE00  F047         	lfsr	0,__pbssCOMRAM
  2142  00628C  0E07               	movlw	7
  2143  00628E                     clear_2:
  2144  00628E  6AEE               	clrf	postinc0,c
  2145  006290  06E8               	decf	wreg,f,c
  2146  006292  E1FD               	bnz	clear_2
  2147  006294                     end_of_initialization:
  2148                           	callstack 0
  2149  006294                     __end_of__initialization:
  2150                           	callstack 0
  2151  006294  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2152  006296  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2153  006298  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2154  00629A  6EF8               	movwf	tblptru,c
  2155  00629C  0100               	movlb	0
  2156  00629E  EF1B  F032         	goto	_main	;jump to C main() function
  2157                           
  2158                           	psect	bssCOMRAM
  2159  000047                     __pbssCOMRAM:
  2160                           	callstack 0
  2161  000047                     _width:
  2162                           	callstack 0
  2163  000047                     	ds	2
  2164  000049                     _prec:
  2165                           	callstack 0
  2166  000049                     	ds	2
  2167  00004B                     _flags:
  2168                           	callstack 0
  2169  00004B                     	ds	2
  2170  00004D                     _gameControllerState:
  2171                           	callstack 0
  2172  00004D                     	ds	1
  2173                           
  2174                           	psect	bssBANK0
  2175  0000B5                     __pbssBANK0:
  2176                           	callstack 0
  2177  0000B5                     _theXF:
  2178                           	callstack 0
  2179  0000B5                     	ds	38
  2180  0000DB                     _nout:
  2181                           	callstack 0
  2182  0000DB                     	ds	2
  2183  0000DD                     _displayState:
  2184                           	callstack 0
  2185  0000DD                     	ds	1
  2186  0000DE                     _touchScreenState:
  2187                           	callstack 0
  2188  0000DE                     	ds	1
  2189  0000DF                     _sleepState:
  2190                           	callstack 0
  2191  0000DF                     	ds	1
  2192  0000E0                     _dbuf:
  2193                           	callstack 0
  2194  0000E0                     	ds	32
  2195                           
  2196                           	psect	bssBANK1
  2197  000100                     __pbssBANK1:
  2198                           	callstack 0
  2199  000100                     _g1:
  2200                           	callstack 0
  2201  000100                     	ds	239
  2202                           
  2203                           	psect	cstackBANK1
  2204  0001EF                     __pcstackBANK1:
  2205                           	callstack 0
  2206  0001EF                     Factory_exec@ev:
  2207                           	callstack 0
  2208                           
  2209                           ; 1 bytes @ 0x0
  2210  0001EF                     	ds	1
  2211                           
  2212                           	psect	cstackBANK0
  2213  000060                     __pcstackBANK0:
  2214                           	callstack 0
  2215  000060                     _dtoa$4938:
  2216                           	callstack 0
  2217  000060                     LCD_Bitmap@bfOffBits:
  2218                           	callstack 0
  2219                           
  2220                           ; 4 bytes @ 0x0
  2221  000060                     	ds	2
  2222  000062                     dtoa@p:
  2223                           	callstack 0
  2224                           
  2225                           ; 2 bytes @ 0x2
  2226  000062                     	ds	2
  2227  000064                     LCD_Bitmap@endOfImage:
  2228                           	callstack 0
  2229  000064                     dtoa@w:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x4
  2233  000064                     	ds	1
  2234  000065                     LCD_Bitmap@jumpCount:
  2235                           	callstack 0
  2236                           
  2237                           ; 2 bytes @ 0x5
  2238  000065                     	ds	1
  2239  000066                     dtoa@s:
  2240                           	callstack 0
  2241                           
  2242                           ; 2 bytes @ 0x6
  2243  000066                     	ds	1
  2244  000067                     LCD_Bitmap@curYPos:
  2245                           	callstack 0
  2246                           
  2247                           ; 2 bytes @ 0x7
  2248  000067                     	ds	1
  2249  000068                     dtoa@n:
  2250                           	callstack 0
  2251                           
  2252                           ; 8 bytes @ 0x8
  2253  000068                     	ds	1
  2254  000069                     LCD_Bitmap@colorTablePtr:
  2255                           	callstack 0
  2256                           
  2257                           ; 2 bytes @ 0x9
  2258  000069                     	ds	2
  2259  00006B                     LCD_Bitmap@biHeight:
  2260                           	callstack 0
  2261                           
  2262                           ; 2 bytes @ 0xB
  2263  00006B                     	ds	2
  2264  00006D                     LCD_Bitmap@color:
  2265                           	callstack 0
  2266                           
  2267                           ; 2 bytes @ 0xD
  2268  00006D                     	ds	2
  2269  00006F                     LCD_Bitmap@curXPos:
  2270                           	callstack 0
  2271                           
  2272                           ; 2 bytes @ 0xF
  2273  00006F                     	ds	1
  2274  000070                     dtoa@i:
  2275                           	callstack 0
  2276                           
  2277                           ; 2 bytes @ 0x10
  2278  000070                     	ds	1
  2279  000071                     LCD_Bitmap@strPtr:
  2280                           	callstack 0
  2281                           
  2282                           ; 2 bytes @ 0x11
  2283  000071                     	ds	1
  2284  000072                     vfpfcnvrt@ll:
  2285                           	callstack 0
  2286                           
  2287                           ; 8 bytes @ 0x12
  2288  000072                     	ds	1
  2289  000073                     LCD_Bitmap@newY:
  2290                           	callstack 0
  2291                           
  2292                           ; 2 bytes @ 0x13
  2293  000073                     	ds	2
  2294  000075                     LCD_Bitmap@pixelCount:
  2295                           	callstack 0
  2296                           
  2297                           ; 1 bytes @ 0x15
  2298  000075                     	ds	1
  2299  000076                     LCD_Bitmap@biWidth:
  2300                           	callstack 0
  2301                           
  2302                           ; 2 bytes @ 0x16
  2303  000076                     	ds	2
  2304  000078                     LCD_Bitmap@jumpColor:
  2305                           	callstack 0
  2306                           
  2307                           ; 2 bytes @ 0x18
  2308  000078                     	ds	2
  2309  00007A                     ?_vfprintf:
  2310                           	callstack 0
  2311  00007A                     LCD_Bitmap@i:
  2312                           	callstack 0
  2313  00007A                     vfprintf@fp:
  2314                           	callstack 0
  2315                           
  2316                           ; 2 bytes @ 0x1A
  2317  00007A                     	ds	2
  2318  00007C                     LCD_ButtonDraw@button:
  2319                           	callstack 0
  2320  00007C                     vfprintf@fmt:
  2321                           	callstack 0
  2322                           
  2323                           ; 2 bytes @ 0x1C
  2324  00007C                     	ds	2
  2325  00007E                     ??_LCD_ButtonDraw:
  2326  00007E                     vfprintf@ap:
  2327                           	callstack 0
  2328                           
  2329                           ; 2 bytes @ 0x1E
  2330  00007E                     	ds	2
  2331  000080                     vfprintf@cfmt:
  2332                           	callstack 0
  2333                           
  2334                           ; 2 bytes @ 0x20
  2335  000080                     	ds	2
  2336  000082                     ?_sprintf:
  2337                           	callstack 0
  2338  000082                     sprintf@s:
  2339                           	callstack 0
  2340                           
  2341                           ; 2 bytes @ 0x22
  2342  000082                     	ds	2
  2343  000084                     sprintf@fmt:
  2344                           	callstack 0
  2345                           
  2346                           ; 2 bytes @ 0x24
  2347  000084                     	ds	4
  2348  000088                     sprintf@ap:
  2349                           	callstack 0
  2350                           
  2351                           ; 2 bytes @ 0x28
  2352  000088                     	ds	2
  2353  00008A                     LCD_ButtonDraw@tempChar:
  2354                           	callstack 0
  2355  00008A                     sprintf@f:
  2356                           	callstack 0
  2357                           
  2358                           ; 6 bytes @ 0x2A
  2359  00008A                     	ds	1
  2360  00008B                     LCD_ButtonDraw@width:
  2361                           	callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x2B
  2364  00008B                     	ds	2
  2365  00008D                     LCD_ButtonDraw@x1:
  2366                           	callstack 0
  2367                           
  2368                           ; 2 bytes @ 0x2D
  2369  00008D                     	ds	2
  2370  00008F                     LCD_ButtonDraw@x2:
  2371                           	callstack 0
  2372                           
  2373                           ; 2 bytes @ 0x2F
  2374  00008F                     	ds	1
  2375  000090                     Score_draw@s:
  2376                           	callstack 0
  2377  000090                     touchScreenController@g:
  2378                           	callstack 0
  2379                           
  2380                           ; 2 bytes @ 0x30
  2381  000090                     	ds	1
  2382  000091                     LCD_ButtonDraw@y1:
  2383                           	callstack 0
  2384                           
  2385                           ; 2 bytes @ 0x31
  2386  000091                     	ds	1
  2387  000092                     ??_touchScreenController:
  2388  000092                     Menu_inGameDraw@g:
  2389                           	callstack 0
  2390                           
  2391                           ; 2 bytes @ 0x32
  2392  000092                     	ds	1
  2393  000093                     LCD_ButtonDraw@y2:
  2394                           	callstack 0
  2395                           
  2396                           ; 2 bytes @ 0x33
  2397  000093                     	ds	2
  2398  000095                     LCD_ButtonDraw@xText:
  2399                           	callstack 0
  2400                           
  2401                           ; 2 bytes @ 0x35
  2402  000095                     	ds	2
  2403  000097                     LCD_ButtonDraw@yText:
  2404                           	callstack 0
  2405                           
  2406                           ; 2 bytes @ 0x37
  2407  000097                     	ds	1
  2408  000098                     touchScreenController@s:
  2409                           	callstack 0
  2410                           
  2411                           ; 20 bytes @ 0x38
  2412  000098                     	ds	1
  2413  000099                     LCD_ButtonDraw@i:
  2414                           	callstack 0
  2415                           
  2416                           ; 1 bytes @ 0x39
  2417  000099                     	ds	1
  2418  00009A                     LCD_ButtonDraw@bmpPtr:
  2419                           	callstack 0
  2420                           
  2421                           ; 2 bytes @ 0x3A
  2422  00009A                     	ds	2
  2423  00009C                     Menu_welcomeDraw@g:
  2424                           	callstack 0
  2425  00009C                     Menu_parametersDraw@g:
  2426                           	callstack 0
  2427  00009C                     Menu_endGame@g:
  2428                           	callstack 0
  2429                           
  2430                           ; 2 bytes @ 0x3C
  2431  00009C                     	ds	2
  2432  00009E                     displayController@g:
  2433                           	callstack 0
  2434                           
  2435                           ; 2 bytes @ 0x3E
  2436  00009E                     	ds	2
  2437  0000A0                     displayController@ev:
  2438                           	callstack 0
  2439                           
  2440                           ; 1 bytes @ 0x40
  2441  0000A0                     	ds	1
  2442  0000A1                     ??_displayController:
  2443                           
  2444                           ; 1 bytes @ 0x41
  2445  0000A1                     	ds	2
  2446  0000A3                     displayInit@g:
  2447                           	callstack 0
  2448  0000A3                     displaySM@g:
  2449                           	callstack 0
  2450                           
  2451                           ; 2 bytes @ 0x43
  2452  0000A3                     	ds	2
  2453  0000A5                     ??_displaySM:
  2454  0000A5                     sleepInit@g:
  2455                           	callstack 0
  2456                           
  2457                           ; 2 bytes @ 0x45
  2458  0000A5                     	ds	2
  2459  0000A7                     ??_Factory_init:
  2460  0000A7                     displaySM@ev:
  2461                           	callstack 0
  2462                           
  2463                           ; 1 bytes @ 0x47
  2464  0000A7                     	ds	5
  2465  0000AC                     touchScreenController@valueY:
  2466                           	callstack 0
  2467                           
  2468                           ; 2 bytes @ 0x4C
  2469  0000AC                     	ds	2
  2470  0000AE                     touchScreenController@valueX:
  2471                           	callstack 0
  2472                           
  2473                           ; 2 bytes @ 0x4E
  2474  0000AE                     	ds	2
  2475  0000B0                     touchScreenSM@g:
  2476                           	callstack 0
  2477                           
  2478                           ; 2 bytes @ 0x50
  2479  0000B0                     	ds	2
  2480  0000B2                     ??_touchScreenSM:
  2481                           
  2482                           ; 1 bytes @ 0x52
  2483  0000B2                     	ds	2
  2484  0000B4                     touchScreenSM@ev:
  2485                           	callstack 0
  2486                           
  2487                           ; 1 bytes @ 0x54
  2488  0000B4                     	ds	1
  2489                           
  2490                           	psect	cstackCOMRAM
  2491  000001                     __pcstackCOMRAM:
  2492                           	callstack 0
  2493  000001                     ?i2___wmul:
  2494                           	callstack 0
  2495  000001                     ?i2___awmod:
  2496                           	callstack 0
  2497  000001                     i2ENTERCRITICAL@inISR:
  2498                           	callstack 0
  2499  000001                     i2LEAVECRITICAL@inISR:
  2500                           	callstack 0
  2501  000001                     i2___wmul@multiplier:
  2502                           	callstack 0
  2503  000001                     i2___awmod@dividend:
  2504                           	callstack 0
  2505                           
  2506                           ; 2 bytes @ 0x0
  2507  000001                     	ds	1
  2508  000002                     XF_unscheduleTimer@inISR:
  2509                           	callstack 0
  2510  000002                     i2XF_scheduleTimer@tm:
  2511                           	callstack 0
  2512                           
  2513                           ; 2 bytes @ 0x1
  2514  000002                     	ds	1
  2515  000003                     XF_unscheduleTimer@id:
  2516                           	callstack 0
  2517  000003                     i2___wmul@multiplicand:
  2518                           	callstack 0
  2519  000003                     i2___awmod@divisor:
  2520                           	callstack 0
  2521                           
  2522                           ; 2 bytes @ 0x2
  2523  000003                     	ds	1
  2524  000004                     i2XF_scheduleTimer@ev:
  2525                           	callstack 0
  2526                           
  2527                           ; 1 bytes @ 0x3
  2528  000004                     	ds	1
  2529  000005                     i2XF_scheduleTimer@inISR:
  2530                           	callstack 0
  2531  000005                     i2___awmod@counter:
  2532                           	callstack 0
  2533  000005                     i2___wmul@product:
  2534                           	callstack 0
  2535                           
  2536                           ; 2 bytes @ 0x4
  2537  000005                     	ds	1
  2538  000006                     i2XF_scheduleTimer@i:
  2539                           	callstack 0
  2540  000006                     i2___awmod@sign:
  2541                           	callstack 0
  2542                           
  2543                           ; 1 bytes @ 0x5
  2544  000006                     	ds	1
  2545  000007                     i2XF_pushEvent@inISR:
  2546                           	callstack 0
  2547                           
  2548                           ; 1 bytes @ 0x6
  2549  000007                     	ds	1
  2550  000008                     i2XF_pushEvent@ev:
  2551                           	callstack 0
  2552                           
  2553                           ; 1 bytes @ 0x7
  2554  000008                     	ds	1
  2555  000009                     i2XF_pushEvent@temp:
  2556                           	callstack 0
  2557                           
  2558                           ; 1 bytes @ 0x8
  2559  000009                     	ds	1
  2560  00000A                     
  2561                           ; 1 bytes @ 0x9
  2562  00000A                     	ds	2
  2563  00000C                     XF_decrementAndQueueTimers@i:
  2564                           	callstack 0
  2565                           
  2566                           ; 2 bytes @ 0xB
  2567  00000C                     	ds	2
  2568  00000E                     ??_isr:
  2569                           
  2570                           ; 1 bytes @ 0xD
  2571  00000E                     	ds	4
  2572  000012                     ??_LCD_Lowlevel_Init:
  2573  000012                     ??_sleepController:
  2574  000012                     ?_LCD_Read:
  2575                           	callstack 0
  2576  000012                     ?_strlen:
  2577                           	callstack 0
  2578  000012                     ?_RGB2LCD:
  2579                           	callstack 0
  2580  000012                     ?___awdiv:
  2581                           	callstack 0
  2582  000012                     ?___awmod:
  2583                           	callstack 0
  2584  000012                     ?___lwmod:
  2585                           	callstack 0
  2586  000012                     ?___xxtofl:
  2587                           	callstack 0
  2588  000012                     ?___aodiv:
  2589                           	callstack 0
  2590  000012                     ?___aomod:
  2591                           	callstack 0
  2592  000012                     configMeasure@channel:
  2593                           	callstack 0
  2594  000012                     ENTERCRITICAL@inISR:
  2595                           	callstack 0
  2596  000012                     LEAVECRITICAL@inISR:
  2597                           	callstack 0
  2598  000012                     Ball_init@b:
  2599                           	callstack 0
  2600  000012                     Ball_Update@b:
  2601                           	callstack 0
  2602  000012                     Paddle_init@p:
  2603                           	callstack 0
  2604  000012                     Paddle_addX@p:
  2605                           	callstack 0
  2606  000012                     GameParameters_setBackLight@s:
  2607                           	callstack 0
  2608  000012                     GameParameters_resetPos@s:
  2609                           	callstack 0
  2610  000012                     GameParameters_setX@s:
  2611                           	callstack 0
  2612  000012                     GameParameters_setY@s:
  2613                           	callstack 0
  2614  000012                     LCD_Fill@color:
  2615                           	callstack 0
  2616  000012                     LCD_SliderCreate@posX:
  2617                           	callstack 0
  2618  000012                     LCD_ButtonCreate@posX:
  2619                           	callstack 0
  2620  000012                     LCD_InButton@button:
  2621                           	callstack 0
  2622  000012                     LCD_InSlider@slider:
  2623                           	callstack 0
  2624  000012                     LCD_DrawRect@posX1:
  2625                           	callstack 0
  2626  000012                     RGB2LCD@colorTableEntry:
  2627                           	callstack 0
  2628  000012                     LCD_Read@posX:
  2629                           	callstack 0
  2630  000012                     ___awdiv@dividend:
  2631                           	callstack 0
  2632  000012                     ___awmod@dividend:
  2633                           	callstack 0
  2634  000012                     ___lwmod@dividend:
  2635                           	callstack 0
  2636  000012                     fputc@c:
  2637                           	callstack 0
  2638  000012                     strlen@s:
  2639                           	callstack 0
  2640  000012                     ___xxtofl@val:
  2641                           	callstack 0
  2642  000012                     ___aodiv@dividend:
  2643                           	callstack 0
  2644  000012                     ___aomod@dividend:
  2645                           	callstack 0
  2646                           
  2647                           ; 8 bytes @ 0x11
  2648  000012                     	ds	1
  2649  000013                     XF_scheduleTimer@tm:
  2650                           	callstack 0
  2651  000013                     LCD_Lowlevel_Init@i:
  2652                           	callstack 0
  2653                           
  2654                           ; 4 bytes @ 0x12
  2655  000013                     	ds	1
  2656  000014                     ??_sleepSM:
  2657  000014                     ??_Ball_Update:
  2658  000014                     ??_RGB2LCD:
  2659  000014                     LCD_Fill@colorH:
  2660                           	callstack 0
  2661  000014                     Paddle_init@team:
  2662                           	callstack 0
  2663  000014                     Paddle_addX@value:
  2664                           	callstack 0
  2665  000014                     GameParameters_setBackLight@value:
  2666                           	callstack 0
  2667  000014                     GameParameters_setX@value:
  2668                           	callstack 0
  2669  000014                     GameParameters_setY@value:
  2670                           	callstack 0
  2671  000014                     LCD_SliderCreate@posY:
  2672                           	callstack 0
  2673  000014                     LCD_ButtonCreate@posY:
  2674                           	callstack 0
  2675  000014                     LCD_InButton@posX:
  2676                           	callstack 0
  2677  000014                     LCD_InSlider@posX:
  2678                           	callstack 0
  2679  000014                     LCD_DrawRect@posY1:
  2680                           	callstack 0
  2681  000014                     LCD_Read@posY:
  2682                           	callstack 0
  2683  000014                     ___awdiv@divisor:
  2684                           	callstack 0
  2685  000014                     ___awmod@divisor:
  2686                           	callstack 0
  2687  000014                     ___lwmod@divisor:
  2688                           	callstack 0
  2689  000014                     fputc@fp:
  2690                           	callstack 0
  2691  000014                     strlen@a:
  2692                           	callstack 0
  2693                           
  2694                           ; 2 bytes @ 0x13
  2695  000014                     	ds	1
  2696  000015                     LCD_Fill@colorL:
  2697                           	callstack 0
  2698  000015                     XF_scheduleTimer@ev:
  2699                           	callstack 0
  2700                           
  2701                           ; 1 bytes @ 0x14
  2702  000015                     	ds	1
  2703  000016                     ??_LCD_Read:
  2704  000016                     ??_fputc:
  2705  000016                     ??___xxtofl:
  2706  000016                     sleepSM@ev:
  2707                           	callstack 0
  2708  000016                     XF_scheduleTimer@inISR:
  2709                           	callstack 0
  2710  000016                     ___awdiv@counter:
  2711                           	callstack 0
  2712  000016                     ___awmod@counter:
  2713                           	callstack 0
  2714  000016                     ___lwmod@counter:
  2715                           	callstack 0
  2716  000016                     Paddle_addX@add:
  2717                           	callstack 0
  2718  000016                     LCD_Fill@column:
  2719                           	callstack 0
  2720  000016                     LCD_SliderCreate@width:
  2721                           	callstack 0
  2722  000016                     LCD_ButtonCreate@width:
  2723                           	callstack 0
  2724  000016                     LCD_InButton@posY:
  2725                           	callstack 0
  2726  000016                     LCD_InSlider@posY:
  2727                           	callstack 0
  2728  000016                     LCD_DrawRect@posX2:
  2729                           	callstack 0
  2730                           
  2731                           ; 2 bytes @ 0x15
  2732  000016                     	ds	1
  2733  000017                     ??_LCD_Init:
  2734  000017                     XF_scheduleTimer@i:
  2735                           	callstack 0
  2736  000017                     ___awdiv@sign:
  2737                           	callstack 0
  2738  000017                     ___awmod@sign:
  2739                           	callstack 0
  2740                           
  2741                           ; 1 bytes @ 0x16
  2742  000017                     	ds	1
  2743  000018                     ??_Paddle_addX:
  2744  000018                     ??_LCD_InButton:
  2745  000018                     ??_LCD_InSlider:
  2746  000018                     LCD_Init@i:
  2747                           	callstack 0
  2748  000018                     XF_pushEvent@inISR:
  2749                           	callstack 0
  2750  000018                     XF_popEvent@ev:
  2751                           	callstack 0
  2752  000018                     LCD_Fill@page:
  2753                           	callstack 0
  2754  000018                     LCD_SliderCreate@height:
  2755                           	callstack 0
  2756  000018                     LCD_ButtonCreate@height:
  2757                           	callstack 0
  2758  000018                     LCD_DrawRect@posY2:
  2759                           	callstack 0
  2760  000018                     RGB2LCD@red:
  2761                           	callstack 0
  2762  000018                     LCD_Read@color:
  2763                           	callstack 0
  2764  000018                     backlightController@g:
  2765                           	callstack 0
  2766  000018                     ___awdiv@quotient:
  2767                           	callstack 0
  2768                           
  2769                           ; 2 bytes @ 0x17
  2770  000018                     	ds	1
  2771  000019                     XF_pushEvent@ev:
  2772                           	callstack 0
  2773  000019                     XF_popEvent@inISR:
  2774                           	callstack 0
  2775                           
  2776                           ; 1 bytes @ 0x18
  2777  000019                     	ds	1
  2778  00001A                     ?___wmul:
  2779                           	callstack 0
  2780  00001A                     LCD_DrawRect@fill:
  2781                           	callstack 0
  2782  00001A                     XF_pushEvent@temp:
  2783                           	callstack 0
  2784  00001A                     ___xxtofl@sign:
  2785                           	callstack 0
  2786  00001A                     LCD_SliderCreate@sldColor:
  2787                           	callstack 0
  2788  00001A                     LCD_ButtonCreate@txtColor:
  2789                           	callstack 0
  2790  00001A                     RGB2LCD@green:
  2791                           	callstack 0
  2792  00001A                     LCD_Read@temp16:
  2793                           	callstack 0
  2794  00001A                     ___wmul@multiplier:
  2795                           	callstack 0
  2796  00001A                     ___aodiv@divisor:
  2797                           	callstack 0
  2798  00001A                     ___aomod@divisor:
  2799                           	callstack 0
  2800                           
  2801                           ; 8 bytes @ 0x19
  2802  00001A                     	ds	1
  2803  00001B                     ___xxtofl@exp:
  2804                           	callstack 0
  2805  00001B                     LCD_DrawRect@color:
  2806                           	callstack 0
  2807  00001B                     checkCollision@g:
  2808                           	callstack 0
  2809  00001B                     fputs@s:
  2810                           	callstack 0
  2811                           
  2812                           ; 2 bytes @ 0x1A
  2813  00001B                     	ds	1
  2814  00001C                     LCD_SliderCreate@bgColor:
  2815                           	callstack 0
  2816  00001C                     LCD_ButtonCreate@bgColor:
  2817                           	callstack 0
  2818  00001C                     RGB2LCD@blue:
  2819                           	callstack 0
  2820  00001C                     moovePaddle@g:
  2821                           	callstack 0
  2822  00001C                     ___wmul@multiplicand:
  2823                           	callstack 0
  2824  00001C                     ___xxtofl@arg:
  2825                           	callstack 0
  2826                           
  2827                           ; 4 bytes @ 0x1B
  2828  00001C                     	ds	1
  2829  00001D                     ??_checkCollision:
  2830  00001D                     LCD_DrawRect@j:
  2831                           	callstack 0
  2832  00001D                     fputs@fp:
  2833                           	callstack 0
  2834                           
  2835                           ; 2 bytes @ 0x1C
  2836  00001D                     	ds	1
  2837  00001E                     LCD_SliderCreate@borderColor:
  2838                           	callstack 0
  2839  00001E                     LCD_ButtonCreate@textOrBmp:
  2840                           	callstack 0
  2841  00001E                     RGB2LCD@color:
  2842                           	callstack 0
  2843  00001E                     ___wmul@product:
  2844                           	callstack 0
  2845                           
  2846                           ; 2 bytes @ 0x1D
  2847  00001E                     	ds	1
  2848  00001F                     fputs@c:
  2849                           	callstack 0
  2850  00001F                     LCD_DrawRect@temp:
  2851                           	callstack 0
  2852                           
  2853                           ; 2 bytes @ 0x1E
  2854  00001F                     	ds	1
  2855  000020                     ?___lwdiv:
  2856                           	callstack 0
  2857  000020                     ?___fldiv:
  2858                           	callstack 0
  2859  000020                     LCD_SliderCreate@cursorWidth:
  2860                           	callstack 0
  2861  000020                     LCD_ButtonCreate@font:
  2862                           	callstack 0
  2863  000020                     LCD_DrawText@msg:
  2864                           	callstack 0
  2865  000020                     XF_init@i:
  2866                           	callstack 0
  2867  000020                     ___lwdiv@dividend:
  2868                           	callstack 0
  2869  000020                     fputs@i:
  2870                           	callstack 0
  2871  000020                     ___fldiv@b:
  2872                           	callstack 0
  2873                           
  2874                           ; 4 bytes @ 0x1F
  2875  000020                     	ds	1
  2876  000021                     LCD_DrawRect@colorH:
  2877                           	callstack 0
  2878                           
  2879                           ; 1 bytes @ 0x20
  2880  000021                     	ds	1
  2881  000022                     ?_pad:
  2882                           	callstack 0
  2883  000022                     LCD_DrawRect@colorL:
  2884                           	callstack 0
  2885  000022                     ___aodiv@counter:
  2886                           	callstack 0
  2887  000022                     ___aomod@counter:
  2888                           	callstack 0
  2889  000022                     LCD_SliderCreate@steps:
  2890                           	callstack 0
  2891  000022                     LCD_ButtonCreate@fpPress:
  2892                           	callstack 0
  2893  000022                     LCD_DrawText@font:
  2894                           	callstack 0
  2895  000022                     ___lwdiv@divisor:
  2896                           	callstack 0
  2897  000022                     pad@fp:
  2898                           	callstack 0
  2899                           
  2900                           ; 2 bytes @ 0x21
  2901  000022                     	ds	1
  2902  000023                     ___aodiv@sign:
  2903                           	callstack 0
  2904  000023                     ___aomod@sign:
  2905                           	callstack 0
  2906  000023                     LCD_DrawRect@i:
  2907                           	callstack 0
  2908                           
  2909                           ; 2 bytes @ 0x22
  2910  000023                     	ds	1
  2911  000024                     ?_abs:
  2912                           	callstack 0
  2913  000024                     LCD_DrawText@align:
  2914                           	callstack 0
  2915  000024                     ___lwdiv@counter:
  2916                           	callstack 0
  2917  000024                     LCD_SliderCreate@fpPress:
  2918                           	callstack 0
  2919  000024                     LCD_ButtonCreate@fpReleased:
  2920                           	callstack 0
  2921  000024                     pad@buf:
  2922                           	callstack 0
  2923  000024                     abs@a:
  2924                           	callstack 0
  2925  000024                     ___fldiv@a:
  2926                           	callstack 0
  2927  000024                     ___aodiv@quotient:
  2928                           	callstack 0
  2929                           
  2930                           ; 8 bytes @ 0x23
  2931  000024                     	ds	1
  2932  000025                     Ball_draw@b:
  2933                           	callstack 0
  2934  000025                     Paddle_draw@p:
  2935                           	callstack 0
  2936  000025                     LCD_ButtonUpdate@button:
  2937                           	callstack 0
  2938  000025                     LCD_DrawText@posX:
  2939                           	callstack 0
  2940  000025                     mooveBall@g:
  2941                           	callstack 0
  2942  000025                     ___lwdiv@quotient:
  2943                           	callstack 0
  2944                           
  2945                           ; 2 bytes @ 0x24
  2946  000025                     	ds	1
  2947  000026                     ??_abs:
  2948  000026                     LCD_SliderCreate@slider:
  2949                           	callstack 0
  2950  000026                     LCD_ButtonCreate@fpOut:
  2951                           	callstack 0
  2952  000026                     pad@p:
  2953                           	callstack 0
  2954                           
  2955                           ; 2 bytes @ 0x25
  2956  000026                     	ds	1
  2957  000027                     ??_Ball_draw:
  2958  000027                     ??_Paddle_draw:
  2959  000027                     ??_LCD_ButtonUpdate:
  2960  000027                     LCD_SliderUpdate@slider:
  2961                           	callstack 0
  2962  000027                     LCD_DrawText@posY:
  2963                           	callstack 0
  2964  000027                     LCD_Bitmap@bmpPtr:
  2965                           	callstack 0
  2966                           
  2967                           ; 2 bytes @ 0x26
  2968  000027                     	ds	1
  2969  000028                     ??___fldiv:
  2970  000028                     ??_pad:
  2971  000028                     LCD_ButtonCreate@button:
  2972                           	callstack 0
  2973                           
  2974                           ; 2 bytes @ 0x27
  2975  000028                     	ds	1
  2976  000029                     ??_LCD_SliderUpdate:
  2977  000029                     LCD_DrawText@color:
  2978                           	callstack 0
  2979  000029                     LCD_Bitmap@posX:
  2980                           	callstack 0
  2981  000029                     pad@i:
  2982                           	callstack 0
  2983                           
  2984                           ; 2 bytes @ 0x28
  2985  000029                     	ds	1
  2986  00002A                     LCD_ButtonCreate@index:
  2987                           	callstack 0
  2988                           
  2989                           ; 1 bytes @ 0x29
  2990  00002A                     	ds	1
  2991  00002B                     GameParameters_init@s:
  2992                           	callstack 0
  2993  00002B                     LCD_ButtonUpdate@colorOut:
  2994                           	callstack 0
  2995  00002B                     LCD_DrawText@bg_color:
  2996                           	callstack 0
  2997  00002B                     LCD_Bitmap@posY:
  2998                           	callstack 0
  2999  00002B                     pad@w:
  3000                           	callstack 0
  3001                           
  3002                           ; 2 bytes @ 0x2A
  3003  00002B                     	ds	1
  3004  00002C                     ___fldiv@rem:
  3005                           	callstack 0
  3006                           
  3007                           ; 4 bytes @ 0x2B
  3008  00002C                     	ds	1
  3009  00002D                     ??_LCD_DrawText:
  3010  00002D                     ??_LCD_Bitmap:
  3011  00002D                     ?_dtoa:
  3012                           	callstack 0
  3013  00002D                     LCD_ButtonUpdate@colorIn:
  3014                           	callstack 0
  3015  00002D                     dtoa@fp:
  3016                           	callstack 0
  3017                           
  3018                           ; 2 bytes @ 0x2C
  3019  00002D                     	ds	2
  3020  00002F                     LCD_SliderUpdate@x2:
  3021                           	callstack 0
  3022  00002F                     LCD_ButtonUpdate@x2:
  3023                           	callstack 0
  3024  00002F                     dtoa@d:
  3025                           	callstack 0
  3026                           
  3027                           ; 8 bytes @ 0x2E
  3028  00002F                     	ds	1
  3029  000030                     ___fldiv@sign:
  3030                           	callstack 0
  3031                           
  3032                           ; 1 bytes @ 0x2F
  3033  000030                     	ds	1
  3034  000031                     LCD_SliderUpdate@y1:
  3035                           	callstack 0
  3036  000031                     LCD_ButtonUpdate@y1:
  3037                           	callstack 0
  3038  000031                     ___fldiv@new_exp:
  3039                           	callstack 0
  3040                           
  3041                           ; 2 bytes @ 0x30
  3042  000031                     	ds	2
  3043  000033                     LCD_SliderUpdate@y2:
  3044                           	callstack 0
  3045  000033                     LCD_ButtonUpdate@x1:
  3046                           	callstack 0
  3047  000033                     LCD_DrawText@offset:
  3048                           	callstack 0
  3049  000033                     ___fldiv@grs:
  3050                           	callstack 0
  3051                           
  3052                           ; 4 bytes @ 0x32
  3053  000033                     	ds	2
  3054  000035                     LCD_SliderUpdate@x1:
  3055                           	callstack 0
  3056  000035                     LCD_ButtonUpdate@y2:
  3057                           	callstack 0
  3058  000035                     LCD_DrawText@yOffset:
  3059                           	callstack 0
  3060                           
  3061                           ; 2 bytes @ 0x34
  3062  000035                     	ds	2
  3063  000037                     ??_dtoa:
  3064  000037                     LCD_DrawText@fontByte:
  3065                           	callstack 0
  3066  000037                     ___fldiv@bexp:
  3067                           	callstack 0
  3068  000037                     LCD_SliderDraw@slider:
  3069                           	callstack 0
  3070  000037                     gameControllerController@g:
  3071                           	callstack 0
  3072                           
  3073                           ; 2 bytes @ 0x36
  3074  000037                     	ds	1
  3075  000038                     LCD_DrawText@fontPixel:
  3076                           	callstack 0
  3077  000038                     ___fldiv@aexp:
  3078                           	callstack 0
  3079                           
  3080                           ; 1 bytes @ 0x37
  3081  000038                     	ds	1
  3082  000039                     ??_LCD_SliderDraw:
  3083  000039                     ?___fltol:
  3084                           	callstack 0
  3085  000039                     gameControllerController@ev:
  3086                           	callstack 0
  3087  000039                     LCD_DrawText@posYEnd:
  3088                           	callstack 0
  3089  000039                     ___fltol@f1:
  3090                           	callstack 0
  3091                           
  3092                           ; 4 bytes @ 0x38
  3093  000039                     	ds	1
  3094  00003A                     ??_gameControllerController:
  3095                           
  3096                           ; 1 bytes @ 0x39
  3097  00003A                     	ds	1
  3098  00003B                     LCD_DrawText@posXEnd:
  3099                           	callstack 0
  3100                           
  3101                           ; 2 bytes @ 0x3A
  3102  00003B                     	ds	1
  3103  00003C                     gameControllerInit@g:
  3104                           	callstack 0
  3105  00003C                     gameControllerSM@g:
  3106                           	callstack 0
  3107                           
  3108                           ; 2 bytes @ 0x3B
  3109  00003C                     	ds	1
  3110  00003D                     ??___fltol:
  3111  00003D                     LCD_DrawText@y:
  3112                           	callstack 0
  3113  00003D                     LCD_SliderDraw@x1:
  3114                           	callstack 0
  3115                           
  3116                           ; 2 bytes @ 0x3C
  3117  00003D                     	ds	1
  3118  00003E                     ??_gameControllerSM:
  3119  00003E                     LCD_DrawText@i:
  3120                           	callstack 0
  3121                           
  3122                           ; 1 bytes @ 0x3D
  3123  00003E                     	ds	1
  3124  00003F                     ?_vfpfcnvrt:
  3125                           	callstack 0
  3126  00003F                     LCD_DrawText@tempChar:
  3127                           	callstack 0
  3128  00003F                     LCD_SliderDraw@x2:
  3129                           	callstack 0
  3130  00003F                     vfpfcnvrt@fp:
  3131                           	callstack 0
  3132                           
  3133                           ; 2 bytes @ 0x3E
  3134  00003F                     	ds	1
  3135  000040                     LCD_DrawText@x:
  3136                           	callstack 0
  3137  000040                     gameControllerSM@ev:
  3138                           	callstack 0
  3139                           
  3140                           ; 1 bytes @ 0x3F
  3141  000040                     	ds	1
  3142  000041                     LCD_DrawText@width:
  3143                           	callstack 0
  3144  000041                     ___fltol@sign1:
  3145                           	callstack 0
  3146  000041                     LCD_SliderDraw@y1:
  3147                           	callstack 0
  3148  000041                     vfpfcnvrt@fmt:
  3149                           	callstack 0
  3150                           
  3151                           ; 2 bytes @ 0x40
  3152  000041                     	ds	1
  3153  000042                     ___fltol@exp1:
  3154                           	callstack 0
  3155                           
  3156                           ; 1 bytes @ 0x41
  3157  000042                     	ds	1
  3158  000043                     LCD_SliderDraw@y2:
  3159                           	callstack 0
  3160  000043                     vfpfcnvrt@ap:
  3161                           	callstack 0
  3162                           
  3163                           ; 2 bytes @ 0x42
  3164  000043                     	ds	2
  3165  000045                     ??_vfpfcnvrt:
  3166                           
  3167                           ; 1 bytes @ 0x44
  3168  000045                     	ds	2
  3169  000047                     
  3170                           ; 1 bytes @ 0x46
  3171 ;;
  3172 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3173 ;;
  3174 ;; *************** function _main *****************
  3175 ;; Defined at:
  3176 ;;		line 49 in file "main.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3190 ;;      Params:         0       0       0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0       0       0
  3193 ;;      Totals:         0       0       0       0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels required when called: 17
  3196 ;; This function calls:
  3197 ;;		_Factory_exec
  3198 ;;		_Factory_init
  3199 ;; This function is called by:
  3200 ;;		Startup code after reset
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text0
  3205  006436                     __ptext0:
  3206                           	callstack 0
  3207  006436                     _main:
  3208                           	callstack 14
  3209  006436                     
  3210                           ;main.c: 51:     Factory_init();
  3211  006436  EC2C  F02A         	call	_Factory_init	;wreg free
  3212  00643A                     l808:
  3213                           
  3214                           ;main.c: 53:     {;main.c: 54:         Factory_exec();
  3215  00643A  ECCD  F02F         	call	_Factory_exec	;wreg free
  3216  00643E  EF1D  F032         	goto	l808
  3217  006442  EF62  F000         	goto	start
  3218  006446                     __end_of_main:
  3219                           	callstack 0
  3220                           
  3221 ;; *************** function _Factory_init *****************
  3222 ;; Defined at:
  3223 ;;		line 11 in file "class/factory.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3237 ;;      Params:         0       0       0       0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0
  3239 ;;      Temps:          0       2       0       0       0       0       0
  3240 ;;      Totals:         0       2       0       0       0       0       0
  3241 ;;Total ram usage:        2 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 16
  3244 ;; This function calls:
  3245 ;;		_GameParameters_init
  3246 ;;		_LCD_DrawText
  3247 ;;		_LCD_Fill
  3248 ;;		_LCD_Init
  3249 ;;		_XF_init
  3250 ;;		_sleepInit
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text1
  3257  005458                     __ptext1:
  3258                           	callstack 0
  3259  005458                     _Factory_init:
  3260                           	callstack 14
  3261  005458                     
  3262                           ;class/factory.c: 14:     PLLEN = 1;
  3263  005458  8C9B               	bsf	3995,6,c	;volatile
  3264  00545A                     
  3265                           ;class/factory.c: 15:     OSCCON = 0b01110000;
  3266  00545A  0E70               	movlw	112
  3267  00545C  6ED3               	movwf	211,c	;volatile
  3268  00545E                     
  3269                           ;class/factory.c: 16:     _delay((unsigned long)((100)*(64000000L/4000.0)));
  3270  00545E  0E09               	movlw	9
  3271  005460  0100               	movlb	0	; () banked
  3272  005462  6FA8               	movwf	(??_Factory_init+1)& (0+255),b
  3273  005464  0E1E               	movlw	30
  3274  005466  6FA7               	movwf	??_Factory_init& (0+255),b
  3275  005468  0EE4               	movlw	228
  3276  00546A                     u8077:
  3277  00546A  2EE8               	decfsz	wreg,f,c
  3278  00546C  D7FE               	bra	u8077
  3279  00546E  2FA7               	decfsz	??_Factory_init& (0+255),f,b
  3280  005470  D7FC               	bra	u8077
  3281  005472  2FA8               	decfsz	(??_Factory_init+1)& (0+255),f,b
  3282  005474  D7FA               	bra	u8077
  3283  005476  F000               	nop	
  3284  005478                     
  3285                           ;class/factory.c: 18:     LCD_Init();
  3286  005478  EC6D  F019         	call	_LCD_Init	;wreg free
  3287  00547C                     
  3288                           ;class/factory.c: 19:     LCD_Fill(0b0000000000011111);
  3289  00547C  0E00               	movlw	0
  3290  00547E  6E13               	movwf	(LCD_Fill@color+1)^0,c
  3291  005480  0E1F               	movlw	31
  3292  005482  6E12               	movwf	LCD_Fill@color^0,c
  3293  005484  EC6C  F029         	call	_LCD_Fill	;wreg free
  3294  005488                     
  3295                           ;class/factory.c: 20:     LCD_DrawText("MenuStart",&arialNarrow_12ptFontInfo,A_CENTER,50
      +                          ,50,0b0000000000000000,0b1111111111111111);
  3296  005488  0EB6               	movlw	low STR_1
  3297  00548A  6E20               	movwf	LCD_DrawText@msg^0,c
  3298  00548C  0E7F               	movlw	high STR_1
  3299  00548E  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  3300  005490  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  3301  005492  6E22               	movwf	LCD_DrawText@font^0,c
  3302  005494  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  3303  005496  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  3304  005498  0E02               	movlw	2
  3305  00549A  6E24               	movwf	LCD_DrawText@align^0,c
  3306  00549C  0E00               	movlw	0
  3307  00549E  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  3308  0054A0  0E32               	movlw	50
  3309  0054A2  6E25               	movwf	LCD_DrawText@posX^0,c
  3310  0054A4  0E00               	movlw	0
  3311  0054A6  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  3312  0054A8  0E32               	movlw	50
  3313  0054AA  6E27               	movwf	LCD_DrawText@posY^0,c
  3314  0054AC  0E00               	movlw	0
  3315  0054AE  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  3316  0054B0  0E00               	movlw	0
  3317  0054B2  6E29               	movwf	LCD_DrawText@color^0,c
  3318  0054B4  0EFF               	movlw	255
  3319  0054B6  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  3320  0054B8  682B               	setf	LCD_DrawText@bg_color^0,c
  3321  0054BA  ECDB  F00E         	call	_LCD_DrawText	;wreg free
  3322  0054BE                     
  3323                           ;class/factory.c: 25:     GIE=1;
  3324  0054BE  8EF2               	bsf	4082,7,c	;volatile
  3325  0054C0                     
  3326                           ;class/factory.c: 26:     INT1IE=0;
  3327  0054C0  96F0               	bcf	4080,3,c	;volatile
  3328  0054C2                     
  3329                           ;class/factory.c: 27:     TRISC0=0;
  3330  0054C2  9094               	bcf	3988,0,c	;volatile
  3331  0054C4                     
  3332                           ;class/factory.c: 28:     LATC0=1;
  3333  0054C4  808B               	bsf	3979,0,c	;volatile
  3334  0054C6                     
  3335                           ;class/factory.c: 31:     T0CON=0b10000110;
  3336  0054C6  0E86               	movlw	134
  3337  0054C8  6ED5               	movwf	213,c	;volatile
  3338  0054CA                     
  3339                           ;class/factory.c: 32:     TMR0H=0xFB;
  3340  0054CA  0EFB               	movlw	251
  3341  0054CC  6ED7               	movwf	215,c	;volatile
  3342  0054CE                     
  3343                           ;class/factory.c: 33:     TMR0L=0x1D;
  3344  0054CE  0E1D               	movlw	29
  3345  0054D0  6ED6               	movwf	214,c	;volatile
  3346  0054D2                     
  3347                           ;class/factory.c: 34:     TMR0IE=1;
  3348  0054D2  8AF2               	bsf	4082,5,c	;volatile
  3349  0054D4                     
  3350                           ;class/factory.c: 37:     TRISC1=0;
  3351  0054D4  9294               	bcf	3988,1,c	;volatile
  3352  0054D6                     
  3353                           ;class/factory.c: 38:     PR2=255;
  3354  0054D6  68BB               	setf	187,c	;volatile
  3355  0054D8                     
  3356                           ;class/factory.c: 39:     CCP2CONbits.CCP2M = 0xC;
  3357  0054D8  5066               	movf	102,w,c	;volatile
  3358  0054DA  0BF0               	andlw	-16
  3359  0054DC  090C               	iorlw	12
  3360  0054DE  6E66               	movwf	102,c	;volatile
  3361  0054E0                     
  3362                           ;class/factory.c: 40:     CCPR2L = 255;
  3363  0054E0  6867               	setf	103,c	;volatile
  3364  0054E2                     
  3365                           ;class/factory.c: 41:     CCP2CONbits.DC2B = 0;
  3366  0054E2  0ECF               	movlw	-49
  3367  0054E4  1666               	andwf	102,f,c	;volatile
  3368  0054E6                     
  3369                           ;class/factory.c: 42:     TMR2IF=0;
  3370  0054E6  929E               	bcf	3998,1,c	;volatile
  3371  0054E8                     
  3372                           ;class/factory.c: 43:     T2CONbits.T2CKPS0 = 1;
  3373  0054E8  80BA               	bsf	186,0,c	;volatile
  3374  0054EA                     
  3375                           ;class/factory.c: 44:     T2CONbits.T2CKPS1 = 0;
  3376  0054EA  92BA               	bcf	186,1,c	;volatile
  3377  0054EC                     
  3378                           ;class/factory.c: 45:     T2CONbits.TMR2ON = 1;
  3379  0054EC  84BA               	bsf	186,2,c	;volatile
  3380  0054EE                     
  3381                           ;class/factory.c: 47:     ADCON2=0b10100110;
  3382  0054EE  0EA6               	movlw	166
  3383  0054F0  6EC0               	movwf	192,c	;volatile
  3384  0054F2                     
  3385                           ;class/factory.c: 50:     XF_init();
  3386  0054F2  EC89  F02A         	call	_XF_init	;wreg free
  3387  0054F6                     
  3388                           ;class/factory.c: 51:     GameParameters_init(&g1);
  3389  0054F6  0E00               	movlw	low _g1
  3390  0054F8  6E2B               	movwf	GameParameters_init@s^0,c
  3391  0054FA  0E01               	movlw	high _g1
  3392  0054FC  6E2C               	movwf	(GameParameters_init@s+1)^0,c
  3393  0054FE  EC00  F011         	call	_GameParameters_init	;wreg free
  3394  005502                     
  3395                           ;class/factory.c: 52:     sleepInit(&g1);
  3396  005502  0E00               	movlw	low _g1
  3397  005504  0100               	movlb	0	; () banked
  3398  005506  6FA5               	movwf	sleepInit@g& (0+255),b
  3399  005508  0E01               	movlw	high _g1
  3400  00550A  6FA6               	movwf	(sleepInit@g+1)& (0+255),b
  3401  00550C  EC66  F031         	call	_sleepInit	;wreg free
  3402  005510  0012               	return		;funcret
  3403  005512                     __end_of_Factory_init:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _sleepInit *****************
  3407 ;; Defined at:
  3408 ;;		line 11 in file "stateMachine/sleepSM.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  g               2   69[BANK0 ] PTR struct GameParameter
  3411 ;;		 -> g1(239), 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3423 ;;      Params:         0       2       0       0       0       0       0
  3424 ;;      Locals:         0       0       0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0
  3426 ;;      Totals:         0       2       0       0       0       0       0
  3427 ;;Total ram usage:        2 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 15
  3430 ;; This function calls:
  3431 ;;		_displayInit
  3432 ;;		_gameControllerInit
  3433 ;;		_sleepController
  3434 ;;		_touchScreenInit
  3435 ;; This function is called by:
  3436 ;;		_Factory_init
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text2
  3441  0062CC                     __ptext2:
  3442                           	callstack 0
  3443  0062CC                     _sleepInit:
  3444                           	callstack 14
  3445  0062CC                     
  3446                           ;stateMachine/sleepSM.c: 11: void sleepInit(GameParameters* g);stateMachine/sleepSM.c: 1
      +                          2: {;stateMachine/sleepSM.c: 13:     sleepState=WAKEUP;
  3447  0062CC  0E00               	movlw	0
  3448  0062CE  0100               	movlb	0	; () banked
  3449  0062D0  6FDF               	movwf	_sleepState& (0+255),b
  3450  0062D2                     
  3451                           ; BSR set to: 0
  3452                           ;stateMachine/sleepSM.c: 14:     displayInit(g);
  3453  0062D2  C0A5  F0A3         	movff	sleepInit@g,displayInit@g
  3454  0062D6  C0A6  F0A4         	movff	sleepInit@g+1,displayInit@g+1
  3455  0062DA  ECC2  F031         	call	_displayInit	;wreg free
  3456  0062DE                     
  3457                           ;stateMachine/sleepSM.c: 15:     gameControllerInit(g);
  3458  0062DE  C0A5  F03C         	movff	sleepInit@g,gameControllerInit@g
  3459  0062E2  C0A6  F03D         	movff	sleepInit@g+1,gameControllerInit@g+1
  3460  0062E6  ECCE  F031         	call	_gameControllerInit	;wreg free
  3461  0062EA                     
  3462                           ;stateMachine/sleepSM.c: 16:     touchScreenInit();
  3463  0062EA  EC23  F032         	call	_touchScreenInit	;wreg free
  3464  0062EE                     
  3465                           ;stateMachine/sleepSM.c: 17:     sleepController();
  3466  0062EE  EC1D  F031         	call	_sleepController	;wreg free
  3467  0062F2  0012               	return		;funcret
  3468  0062F4                     __end_of_sleepInit:
  3469                           	callstack 0
  3470                           
  3471 ;; *************** function _touchScreenInit *****************
  3472 ;; Defined at:
  3473 ;;		line 17 in file "stateMachine/touchScreenSM.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3487 ;;      Params:         0       0       0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used: 1
  3493 ;; Hardware stack levels required when called: 5
  3494 ;; This function calls:
  3495 ;;		_configTouch
  3496 ;; This function is called by:
  3497 ;;		_sleepInit
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text3
  3502  006446                     __ptext3:
  3503                           	callstack 0
  3504  006446                     _touchScreenInit:
  3505                           	callstack 23
  3506  006446                     
  3507                           ;stateMachine/touchScreenSM.c: 19:     touchScreenState=WAITING;
  3508  006446  0E00               	movlw	0
  3509  006448  0100               	movlb	0	; () banked
  3510  00644A  6FDE               	movwf	_touchScreenState& (0+255),b
  3511  00644C                     
  3512                           ; BSR set to: 0
  3513                           ;stateMachine/touchScreenSM.c: 20:     configTouch();
  3514  00644C  ECB4  F031         	call	_configTouch	;wreg free
  3515  006450  0012               	return		;funcret
  3516  006452                     __end_of_touchScreenInit:
  3517                           	callstack 0
  3518                           
  3519 ;; *************** function _gameControllerInit *****************
  3520 ;; Defined at:
  3521 ;;		line 12 in file "stateMachine/gameController.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  g               2   59[COMRAM] PTR struct GameParameter
  3524 ;;		 -> g1(239), 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;		None
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3536 ;;      Params:         2       0       0       0       0       0       0
  3537 ;;      Locals:         0       0       0       0       0       0       0
  3538 ;;      Temps:          0       0       0       0       0       0       0
  3539 ;;      Totals:         2       0       0       0       0       0       0
  3540 ;;Total ram usage:        2 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 9
  3543 ;; This function calls:
  3544 ;;		_gameControllerController
  3545 ;; This function is called by:
  3546 ;;		_sleepInit
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text4
  3551  00639C                     __ptext4:
  3552                           	callstack 0
  3553  00639C                     _gameControllerInit:
  3554                           	callstack 19
  3555  00639C                     
  3556                           ;stateMachine/gameController.c: 12: void gameControllerInit(GameParameters* g);stateMach
      +                          ine/gameController.c: 13: {;stateMachine/gameController.c: 14:     gameControllerState=N
      +                          OGAME;
  3557  00639C  0E00               	movlw	0
  3558  00639E  6E4D               	movwf	_gameControllerState^0,c
  3559  0063A0                     
  3560                           ;stateMachine/gameController.c: 15:     gameControllerController(g,NULLEVENT);
  3561  0063A0  C03C  F037         	movff	gameControllerInit@g,gameControllerController@g
  3562  0063A4  C03D  F038         	movff	gameControllerInit@g+1,gameControllerController@g+1
  3563  0063A8  0E00               	movlw	0
  3564  0063AA  6E39               	movwf	gameControllerController@ev^0,c
  3565  0063AC  ECB7  F014         	call	_gameControllerController	;wreg free
  3566  0063B0  0012               	return		;funcret
  3567  0063B2                     __end_of_gameControllerInit:
  3568                           	callstack 0
  3569                           
  3570 ;; *************** function _displayInit *****************
  3571 ;; Defined at:
  3572 ;;		line 16 in file "stateMachine/display.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  g               2   67[BANK0 ] PTR struct GameParameter
  3575 ;;		 -> g1(239), 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3587 ;;      Params:         0       2       0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0
  3590 ;;      Totals:         0       2       0       0       0       0       0
  3591 ;;Total ram usage:        2 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 14
  3594 ;; This function calls:
  3595 ;;		_displayController
  3596 ;; This function is called by:
  3597 ;;		_sleepInit
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text5
  3602  006384                     __ptext5:
  3603                           	callstack 0
  3604  006384                     _displayInit:
  3605                           	callstack 14
  3606  006384                     
  3607                           ;stateMachine/display.c: 16: void displayInit(GameParameters* g);stateMachine/display.c:
      +                           17: {;stateMachine/display.c: 18:     displayState=WELCOME;
  3608  006384  0E00               	movlw	0
  3609  006386  0100               	movlb	0	; () banked
  3610  006388  6FDD               	movwf	_displayState& (0+255),b
  3611  00638A                     
  3612                           ; BSR set to: 0
  3613                           ;stateMachine/display.c: 19:     displayController(g,NULLEVENT);
  3614  00638A  C0A3  F09E         	movff	displayInit@g,displayController@g
  3615  00638E  C0A4  F09F         	movff	displayInit@g+1,displayController@g+1
  3616  006392  0E00               	movlw	0
  3617  006394  6FA0               	movwf	displayController@ev& (0+255),b
  3618  006396  ECBC  F023         	call	_displayController	;wreg free
  3619  00639A  0012               	return		;funcret
  3620  00639C                     __end_of_displayInit:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function _XF_init *****************
  3624 ;; Defined at:
  3625 ;;		line 25 in file "xf/xf.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  i               2   31[COMRAM] int 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3639 ;;      Params:         0       0       0       0       0       0       0
  3640 ;;      Locals:         2       0       0       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0
  3642 ;;      Totals:         2       0       0       0       0       0       0
  3643 ;;Total ram usage:        2 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 5
  3646 ;; This function calls:
  3647 ;;		___wmul
  3648 ;; This function is called by:
  3649 ;;		_Factory_init
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text6
  3654  005512                     __ptext6:
  3655                           	callstack 0
  3656  005512                     _XF_init:
  3657                           	callstack 24
  3658  005512                     
  3659                           ;xf/xf.c: 27:     int i;;xf/xf.c: 28:     for (i=0; i<12; i++)
  3660  005512  0E00               	movlw	0
  3661  005514  6E21               	movwf	(XF_init@i+1)^0,c
  3662  005516  0E00               	movlw	0
  3663  005518  6E20               	movwf	XF_init@i^0,c
  3664  00551A                     l10270:
  3665                           
  3666                           ;xf/xf.c: 29:     {;xf/xf.c: 30:         theXF.eventQueue[i] = NULLEVENT;
  3667  00551A  0ECD               	movlw	low (_theXF+24)
  3668  00551C  2420               	addwf	XF_init@i^0,w,c
  3669  00551E  6ED9               	movwf	fsr2l,c
  3670  005520  0E00               	movlw	high (_theXF+24)
  3671  005522  2021               	addwfc	(XF_init@i+1)^0,w,c
  3672  005524  6EDA               	movwf	fsr2h,c
  3673  005526  0E00               	movlw	0
  3674  005528  6EDF               	movwf	indf2,c
  3675  00552A                     
  3676                           ;xf/xf.c: 31:     }
  3677  00552A  4A20               	infsnz	XF_init@i^0,f,c
  3678  00552C  2A21               	incf	(XF_init@i+1)^0,f,c
  3679  00552E  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3680  005530  EFA3  F02A         	goto	u7871
  3681  005534  5021               	movf	(XF_init@i+1)^0,w,c
  3682  005536  E109               	bnz	u7870
  3683  005538  0E0C               	movlw	12
  3684  00553A  5C20               	subwf	XF_init@i^0,w,c
  3685  00553C  A0D8               	btfss	status,0,c
  3686  00553E  EFA3  F02A         	goto	u7871
  3687  005542  EFA5  F02A         	goto	u7870
  3688  005546                     u7871:
  3689  005546  EF8D  F02A         	goto	l10270
  3690  00554A                     u7870:
  3691  00554A                     
  3692                           ;xf/xf.c: 33:     for (i=0; i<8; i++)
  3693  00554A  0E00               	movlw	0
  3694  00554C  6E21               	movwf	(XF_init@i+1)^0,c
  3695  00554E  0E00               	movlw	0
  3696  005550  6E20               	movwf	XF_init@i^0,c
  3697  005552                     l10282:
  3698                           
  3699                           ;xf/xf.c: 34:     {;xf/xf.c: 35:         theXF.timerList[i].tm = 0;
  3700  005552  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3701  005556  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3702  00555A  0E00               	movlw	0
  3703  00555C  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3704  00555E  0E03               	movlw	3
  3705  005560  6E1C               	movwf	___wmul@multiplicand^0,c
  3706  005562  EC8E  F031         	call	___wmul	;wreg free
  3707  005566  0EB5               	movlw	low _theXF
  3708  005568  241A               	addwf	?___wmul^0,w,c
  3709  00556A  6ED9               	movwf	fsr2l,c
  3710  00556C  0E00               	movlw	high _theXF
  3711  00556E  201B               	addwfc	(?___wmul+1)^0,w,c
  3712  005570  6EDA               	movwf	fsr2h,c
  3713  005572  0E00               	movlw	0
  3714  005574  6EDE               	movwf	postinc2,c
  3715  005576  0E00               	movlw	0
  3716  005578  6EDD               	movwf	postdec2,c
  3717                           
  3718                           ;xf/xf.c: 36:         theXF.timerList[i].ev = NULLEVENT;
  3719  00557A  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3720  00557E  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3721  005582  0E00               	movlw	0
  3722  005584  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3723  005586  0E03               	movlw	3
  3724  005588  6E1C               	movwf	___wmul@multiplicand^0,c
  3725  00558A  EC8E  F031         	call	___wmul	;wreg free
  3726  00558E  0EB7               	movlw	low (_theXF+2)
  3727  005590  241A               	addwf	?___wmul^0,w,c
  3728  005592  6ED9               	movwf	fsr2l,c
  3729  005594  0E00               	movlw	high (_theXF+2)
  3730  005596  201B               	addwfc	(?___wmul+1)^0,w,c
  3731  005598  6EDA               	movwf	fsr2h,c
  3732  00559A  0E00               	movlw	0
  3733  00559C  6EDF               	movwf	indf2,c
  3734  00559E                     
  3735                           ;xf/xf.c: 37:     }
  3736  00559E  4A20               	infsnz	XF_init@i^0,f,c
  3737  0055A0  2A21               	incf	(XF_init@i+1)^0,f,c
  3738  0055A2  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3739  0055A4  EFDD  F02A         	goto	u7881
  3740  0055A8  5021               	movf	(XF_init@i+1)^0,w,c
  3741  0055AA  E109               	bnz	u7880
  3742  0055AC  0E08               	movlw	8
  3743  0055AE  5C20               	subwf	XF_init@i^0,w,c
  3744  0055B0  A0D8               	btfss	status,0,c
  3745  0055B2  EFDD  F02A         	goto	u7881
  3746  0055B6  EFDF  F02A         	goto	u7880
  3747  0055BA                     u7881:
  3748  0055BA  EFA9  F02A         	goto	l10282
  3749  0055BE                     u7880:
  3750  0055BE                     
  3751                           ;xf/xf.c: 38:     theXF.in = 0;
  3752  0055BE  0E00               	movlw	0
  3753  0055C0  0100               	movlb	0	; () banked
  3754  0055C2  6FD9               	movwf	(_theXF+36)& (0+255),b
  3755                           
  3756                           ;xf/xf.c: 39:     theXF.out = 0;
  3757  0055C4  0E00               	movlw	0
  3758  0055C6  6FDA               	movwf	(_theXF+37)& (0+255),b
  3759  0055C8                     
  3760                           ; BSR set to: 0
  3761  0055C8  0012               	return		;funcret
  3762  0055CA                     __end_of_XF_init:
  3763                           	callstack 0
  3764                           
  3765 ;; *************** function _LCD_Init *****************
  3766 ;; Defined at:
  3767 ;;		line 20 in file "libraries/lcd_highlevel.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  i               1   23[COMRAM] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2, status,0, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3781 ;;      Params:         0       0       0       0       0       0       0
  3782 ;;      Locals:         1       0       0       0       0       0       0
  3783 ;;      Temps:          1       0       0       0       0       0       0
  3784 ;;      Totals:         2       0       0       0       0       0       0
  3785 ;;Total ram usage:        2 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 5
  3788 ;; This function calls:
  3789 ;;		_LCD_Lowlevel_Init
  3790 ;; This function is called by:
  3791 ;;		_Factory_init
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text7
  3796  0032DA                     __ptext7:
  3797                           	callstack 0
  3798  0032DA                     _LCD_Init:
  3799                           	callstack 24
  3800  0032DA                     
  3801                           ;libraries/lcd_highlevel.c: 22:   uint8_t i;;libraries/lcd_highlevel.c: 86:   LCD_Lowlev
      +                          el_Init();
  3802  0032DA  EC96  F02C         	call	_LCD_Lowlevel_Init	;wreg free
  3803  0032DE                     
  3804                           ;libraries/lcd_highlevel.c: 87:   PORTA = 0x11; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3805  0032DE  0E11               	movlw	17
  3806  0032E0  6E80               	movwf	128,c	;volatile
  3807  0032E2  988B               	bcf	3979,4,c	;volatile
  3808  0032E4  968B               	bcf	3979,3,c	;volatile
  3809  0032E6  868B               	bsf	3979,3,c	;volatile
  3810  0032E8  888B               	bsf	3979,4,c	;volatile
  3811  0032EA                     
  3812                           ;libraries/lcd_highlevel.c: 88:   for(i=0;i<10;i++)
  3813  0032EA  0E00               	movlw	0
  3814  0032EC  6E18               	movwf	LCD_Init@i^0,c
  3815  0032EE                     l4016:
  3816                           
  3817                           ;libraries/lcd_highlevel.c: 89:   {;libraries/lcd_highlevel.c: 90:     _delay((unsigned 
      +                          long)((10)*(64000000L/4000.0)));
  3818  0032EE  0ED0               	movlw	208
  3819  0032F0  6E17               	movwf	??_LCD_Init^0,c
  3820  0032F2  0ECA               	movlw	202
  3821  0032F4                     u8087:
  3822  0032F4  2EE8               	decfsz	wreg,f,c
  3823  0032F6  D7FE               	bra	u8087
  3824  0032F8  2E17               	decfsz	??_LCD_Init^0,f,c
  3825  0032FA  D7FC               	bra	u8087
  3826  0032FC                     
  3827                           ;libraries/lcd_highlevel.c: 91:   }
  3828  0032FC  2A18               	incf	LCD_Init@i^0,f,c
  3829  0032FE  0E09               	movlw	9
  3830  003300  6418               	cpfsgt	LCD_Init@i^0,c
  3831  003302  EF85  F019         	goto	u2451
  3832  003306  EF87  F019         	goto	u2450
  3833  00330A                     u2451:
  3834  00330A  EF77  F019         	goto	l4016
  3835  00330E                     u2450:
  3836  00330E                     
  3837                           ;libraries/lcd_highlevel.c: 92:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3838  00330E  0E36               	movlw	54
  3839  003310  6E80               	movwf	128,c	;volatile
  3840  003312  988B               	bcf	3979,4,c	;volatile
  3841  003314  968B               	bcf	3979,3,c	;volatile
  3842  003316  868B               	bsf	3979,3,c	;volatile
  3843  003318  888B               	bsf	3979,4,c	;volatile
  3844                           
  3845                           ;libraries/lcd_highlevel.c: 93:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
  3846  00331A  0E00               	movlw	0
  3847  00331C  6E80               	movwf	128,c	;volatile
  3848  00331E  968B               	bcf	3979,3,c	;volatile
  3849  003320  868B               	bsf	3979,3,c	;volatile
  3850                           
  3851                           ;libraries/lcd_highlevel.c: 94:   PORTA = 0x3A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3852  003322  0E3A               	movlw	58
  3853  003324  6E80               	movwf	128,c	;volatile
  3854  003326  988B               	bcf	3979,4,c	;volatile
  3855  003328  968B               	bcf	3979,3,c	;volatile
  3856  00332A  868B               	bsf	3979,3,c	;volatile
  3857  00332C  888B               	bsf	3979,4,c	;volatile
  3858                           
  3859                           ;libraries/lcd_highlevel.c: 95:   PORTA = 0x55; LATC3 = 0; LATC3 = 1;;
  3860  00332E  0E55               	movlw	85
  3861  003330  6E80               	movwf	128,c	;volatile
  3862  003332  968B               	bcf	3979,3,c	;volatile
  3863  003334  868B               	bsf	3979,3,c	;volatile
  3864                           
  3865                           ;libraries/lcd_highlevel.c: 96:   PORTA = 0xB2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3866  003336  0EB2               	movlw	178
  3867  003338  6E80               	movwf	128,c	;volatile
  3868  00333A  988B               	bcf	3979,4,c	;volatile
  3869  00333C  968B               	bcf	3979,3,c	;volatile
  3870  00333E  868B               	bsf	3979,3,c	;volatile
  3871  003340  888B               	bsf	3979,4,c	;volatile
  3872                           
  3873                           ;libraries/lcd_highlevel.c: 97:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3874  003342  0E0C               	movlw	12
  3875  003344  6E80               	movwf	128,c	;volatile
  3876  003346  968B               	bcf	3979,3,c	;volatile
  3877  003348  868B               	bsf	3979,3,c	;volatile
  3878                           
  3879                           ;libraries/lcd_highlevel.c: 98:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3880  00334A  0E0C               	movlw	12
  3881  00334C  6E80               	movwf	128,c	;volatile
  3882  00334E  968B               	bcf	3979,3,c	;volatile
  3883  003350  868B               	bsf	3979,3,c	;volatile
  3884                           
  3885                           ;libraries/lcd_highlevel.c: 99:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3886  003352  0E33               	movlw	51
  3887  003354  6E80               	movwf	128,c	;volatile
  3888  003356  968B               	bcf	3979,3,c	;volatile
  3889  003358  868B               	bsf	3979,3,c	;volatile
  3890                           
  3891                           ;libraries/lcd_highlevel.c: 100:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3892  00335A  0E33               	movlw	51
  3893  00335C  6E80               	movwf	128,c	;volatile
  3894  00335E  968B               	bcf	3979,3,c	;volatile
  3895  003360  868B               	bsf	3979,3,c	;volatile
  3896                           
  3897                           ;libraries/lcd_highlevel.c: 101:   PORTA = 0xB7; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3898  003362  0EB7               	movlw	183
  3899  003364  6E80               	movwf	128,c	;volatile
  3900  003366  988B               	bcf	3979,4,c	;volatile
  3901  003368  968B               	bcf	3979,3,c	;volatile
  3902  00336A  868B               	bsf	3979,3,c	;volatile
  3903  00336C  888B               	bsf	3979,4,c	;volatile
  3904                           
  3905                           ;libraries/lcd_highlevel.c: 102:   PORTA = 0x35; LATC3 = 0; LATC3 = 1;;
  3906  00336E  0E35               	movlw	53
  3907  003370  6E80               	movwf	128,c	;volatile
  3908  003372  968B               	bcf	3979,3,c	;volatile
  3909  003374  868B               	bsf	3979,3,c	;volatile
  3910                           
  3911                           ;libraries/lcd_highlevel.c: 103:   PORTA = 0xBB; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3912  003376  0EBB               	movlw	187
  3913  003378  6E80               	movwf	128,c	;volatile
  3914  00337A  988B               	bcf	3979,4,c	;volatile
  3915  00337C  968B               	bcf	3979,3,c	;volatile
  3916  00337E  868B               	bsf	3979,3,c	;volatile
  3917  003380  888B               	bsf	3979,4,c	;volatile
  3918                           
  3919                           ;libraries/lcd_highlevel.c: 104:   PORTA = 0x2B; LATC3 = 0; LATC3 = 1;;
  3920  003382  0E2B               	movlw	43
  3921  003384  6E80               	movwf	128,c	;volatile
  3922  003386  968B               	bcf	3979,3,c	;volatile
  3923  003388  868B               	bsf	3979,3,c	;volatile
  3924                           
  3925                           ;libraries/lcd_highlevel.c: 105:   PORTA = 0xC0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3926  00338A  0EC0               	movlw	192
  3927  00338C  6E80               	movwf	128,c	;volatile
  3928  00338E  988B               	bcf	3979,4,c	;volatile
  3929  003390  968B               	bcf	3979,3,c	;volatile
  3930  003392  868B               	bsf	3979,3,c	;volatile
  3931  003394  888B               	bsf	3979,4,c	;volatile
  3932                           
  3933                           ;libraries/lcd_highlevel.c: 106:   PORTA = 0x2C; LATC3 = 0; LATC3 = 1;;
  3934  003396  0E2C               	movlw	44
  3935  003398  6E80               	movwf	128,c	;volatile
  3936  00339A  968B               	bcf	3979,3,c	;volatile
  3937  00339C  868B               	bsf	3979,3,c	;volatile
  3938                           
  3939                           ;libraries/lcd_highlevel.c: 107:   PORTA = 0xC2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3940  00339E  0EC2               	movlw	194
  3941  0033A0  6E80               	movwf	128,c	;volatile
  3942  0033A2  988B               	bcf	3979,4,c	;volatile
  3943  0033A4  968B               	bcf	3979,3,c	;volatile
  3944  0033A6  868B               	bsf	3979,3,c	;volatile
  3945  0033A8  888B               	bsf	3979,4,c	;volatile
  3946                           
  3947                           ;libraries/lcd_highlevel.c: 108:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  3948  0033AA  0E01               	movlw	1
  3949  0033AC  6E80               	movwf	128,c	;volatile
  3950  0033AE  968B               	bcf	3979,3,c	;volatile
  3951  0033B0  868B               	bsf	3979,3,c	;volatile
  3952  0033B2                     
  3953                           ;libraries/lcd_highlevel.c: 109:   PORTA = 0xFF; LATC3 = 0; LATC3 = 1;;
  3954  0033B2  6880               	setf	128,c	;volatile
  3955  0033B4  968B               	bcf	3979,3,c	;volatile
  3956  0033B6  868B               	bsf	3979,3,c	;volatile
  3957                           
  3958                           ;libraries/lcd_highlevel.c: 110:   PORTA = 0XC3; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3959  0033B8  0EC3               	movlw	195
  3960  0033BA  6E80               	movwf	128,c	;volatile
  3961  0033BC  988B               	bcf	3979,4,c	;volatile
  3962  0033BE  968B               	bcf	3979,3,c	;volatile
  3963  0033C0  868B               	bsf	3979,3,c	;volatile
  3964  0033C2  888B               	bsf	3979,4,c	;volatile
  3965                           
  3966                           ;libraries/lcd_highlevel.c: 111:   PORTA = 0x11; LATC3 = 0; LATC3 = 1;;
  3967  0033C4  0E11               	movlw	17
  3968  0033C6  6E80               	movwf	128,c	;volatile
  3969  0033C8  968B               	bcf	3979,3,c	;volatile
  3970  0033CA  868B               	bsf	3979,3,c	;volatile
  3971                           
  3972                           ;libraries/lcd_highlevel.c: 112:   PORTA = 0xC4; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3973  0033CC  0EC4               	movlw	196
  3974  0033CE  6E80               	movwf	128,c	;volatile
  3975  0033D0  988B               	bcf	3979,4,c	;volatile
  3976  0033D2  968B               	bcf	3979,3,c	;volatile
  3977  0033D4  868B               	bsf	3979,3,c	;volatile
  3978  0033D6  888B               	bsf	3979,4,c	;volatile
  3979                           
  3980                           ;libraries/lcd_highlevel.c: 113:   PORTA = 0x20; LATC3 = 0; LATC3 = 1;;
  3981  0033D8  0E20               	movlw	32
  3982  0033DA  6E80               	movwf	128,c	;volatile
  3983  0033DC  968B               	bcf	3979,3,c	;volatile
  3984  0033DE  868B               	bsf	3979,3,c	;volatile
  3985                           
  3986                           ;libraries/lcd_highlevel.c: 114:   PORTA = 0xC6; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3987  0033E0  0EC6               	movlw	198
  3988  0033E2  6E80               	movwf	128,c	;volatile
  3989  0033E4  988B               	bcf	3979,4,c	;volatile
  3990  0033E6  968B               	bcf	3979,3,c	;volatile
  3991  0033E8  868B               	bsf	3979,3,c	;volatile
  3992  0033EA  888B               	bsf	3979,4,c	;volatile
  3993                           
  3994                           ;libraries/lcd_highlevel.c: 115:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  3995  0033EC  0E09               	movlw	9
  3996  0033EE  6E80               	movwf	128,c	;volatile
  3997  0033F0  968B               	bcf	3979,3,c	;volatile
  3998  0033F2  868B               	bsf	3979,3,c	;volatile
  3999                           
  4000                           ;libraries/lcd_highlevel.c: 116:   PORTA = 0xD0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4001  0033F4  0ED0               	movlw	208
  4002  0033F6  6E80               	movwf	128,c	;volatile
  4003  0033F8  988B               	bcf	3979,4,c	;volatile
  4004  0033FA  968B               	bcf	3979,3,c	;volatile
  4005  0033FC  868B               	bsf	3979,3,c	;volatile
  4006  0033FE  888B               	bsf	3979,4,c	;volatile
  4007                           
  4008                           ;libraries/lcd_highlevel.c: 117:   PORTA = 0xA4; LATC3 = 0; LATC3 = 1;;
  4009  003400  0EA4               	movlw	164
  4010  003402  6E80               	movwf	128,c	;volatile
  4011  003404  968B               	bcf	3979,3,c	;volatile
  4012  003406  868B               	bsf	3979,3,c	;volatile
  4013                           
  4014                           ;libraries/lcd_highlevel.c: 118:   PORTA = 0xA1; LATC3 = 0; LATC3 = 1;;
  4015  003408  0EA1               	movlw	161
  4016  00340A  6E80               	movwf	128,c	;volatile
  4017  00340C  968B               	bcf	3979,3,c	;volatile
  4018  00340E  868B               	bsf	3979,3,c	;volatile
  4019                           
  4020                           ;libraries/lcd_highlevel.c: 119:   PORTA = 0xE0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4021  003410  0EE0               	movlw	224
  4022  003412  6E80               	movwf	128,c	;volatile
  4023  003414  988B               	bcf	3979,4,c	;volatile
  4024  003416  968B               	bcf	3979,3,c	;volatile
  4025  003418  868B               	bsf	3979,3,c	;volatile
  4026  00341A  888B               	bsf	3979,4,c	;volatile
  4027                           
  4028                           ;libraries/lcd_highlevel.c: 120:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4029  00341C  0ED0               	movlw	208
  4030  00341E  6E80               	movwf	128,c	;volatile
  4031  003420  968B               	bcf	3979,3,c	;volatile
  4032  003422  868B               	bsf	3979,3,c	;volatile
  4033                           
  4034                           ;libraries/lcd_highlevel.c: 121:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4035  003424  0E00               	movlw	0
  4036  003426  6E80               	movwf	128,c	;volatile
  4037  003428  968B               	bcf	3979,3,c	;volatile
  4038  00342A  868B               	bsf	3979,3,c	;volatile
  4039                           
  4040                           ;libraries/lcd_highlevel.c: 122:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4041  00342C  0E05               	movlw	5
  4042  00342E  6E80               	movwf	128,c	;volatile
  4043  003430  968B               	bcf	3979,3,c	;volatile
  4044  003432  868B               	bsf	3979,3,c	;volatile
  4045                           
  4046                           ;libraries/lcd_highlevel.c: 123:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4047  003434  0E0E               	movlw	14
  4048  003436  6E80               	movwf	128,c	;volatile
  4049  003438  968B               	bcf	3979,3,c	;volatile
  4050  00343A  868B               	bsf	3979,3,c	;volatile
  4051                           
  4052                           ;libraries/lcd_highlevel.c: 124:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4053  00343C  0E15               	movlw	21
  4054  00343E  6E80               	movwf	128,c	;volatile
  4055  003440  968B               	bcf	3979,3,c	;volatile
  4056  003442  868B               	bsf	3979,3,c	;volatile
  4057                           
  4058                           ;libraries/lcd_highlevel.c: 125:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4059  003444  0E0D               	movlw	13
  4060  003446  6E80               	movwf	128,c	;volatile
  4061  003448  968B               	bcf	3979,3,c	;volatile
  4062  00344A  868B               	bsf	3979,3,c	;volatile
  4063                           
  4064                           ;libraries/lcd_highlevel.c: 126:   PORTA = 0x37; LATC3 = 0; LATC3 = 1;;
  4065  00344C  0E37               	movlw	55
  4066  00344E  6E80               	movwf	128,c	;volatile
  4067  003450  968B               	bcf	3979,3,c	;volatile
  4068  003452  868B               	bsf	3979,3,c	;volatile
  4069                           
  4070                           ;libraries/lcd_highlevel.c: 127:   PORTA = 0x43; LATC3 = 0; LATC3 = 1;;
  4071  003454  0E43               	movlw	67
  4072  003456  6E80               	movwf	128,c	;volatile
  4073  003458  968B               	bcf	3979,3,c	;volatile
  4074  00345A  868B               	bsf	3979,3,c	;volatile
  4075                           
  4076                           ;libraries/lcd_highlevel.c: 128:   PORTA = 0x47; LATC3 = 0; LATC3 = 1;;
  4077  00345C  0E47               	movlw	71
  4078  00345E  6E80               	movwf	128,c	;volatile
  4079  003460  968B               	bcf	3979,3,c	;volatile
  4080  003462  868B               	bsf	3979,3,c	;volatile
  4081                           
  4082                           ;libraries/lcd_highlevel.c: 129:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4083  003464  0E09               	movlw	9
  4084  003466  6E80               	movwf	128,c	;volatile
  4085  003468  968B               	bcf	3979,3,c	;volatile
  4086  00346A  868B               	bsf	3979,3,c	;volatile
  4087                           
  4088                           ;libraries/lcd_highlevel.c: 130:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4089  00346C  0E15               	movlw	21
  4090  00346E  6E80               	movwf	128,c	;volatile
  4091  003470  968B               	bcf	3979,3,c	;volatile
  4092  003472  868B               	bsf	3979,3,c	;volatile
  4093                           
  4094                           ;libraries/lcd_highlevel.c: 131:   PORTA = 0x12; LATC3 = 0; LATC3 = 1;;
  4095  003474  0E12               	movlw	18
  4096  003476  6E80               	movwf	128,c	;volatile
  4097  003478  968B               	bcf	3979,3,c	;volatile
  4098  00347A  868B               	bsf	3979,3,c	;volatile
  4099                           
  4100                           ;libraries/lcd_highlevel.c: 132:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4101  00347C  0E16               	movlw	22
  4102  00347E  6E80               	movwf	128,c	;volatile
  4103  003480  968B               	bcf	3979,3,c	;volatile
  4104  003482  868B               	bsf	3979,3,c	;volatile
  4105                           
  4106                           ;libraries/lcd_highlevel.c: 133:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4107  003484  0E19               	movlw	25
  4108  003486  6E80               	movwf	128,c	;volatile
  4109  003488  968B               	bcf	3979,3,c	;volatile
  4110  00348A  868B               	bsf	3979,3,c	;volatile
  4111                           
  4112                           ;libraries/lcd_highlevel.c: 134:   PORTA = 0xE1; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4113  00348C  0EE1               	movlw	225
  4114  00348E  6E80               	movwf	128,c	;volatile
  4115  003490  988B               	bcf	3979,4,c	;volatile
  4116  003492  968B               	bcf	3979,3,c	;volatile
  4117  003494  868B               	bsf	3979,3,c	;volatile
  4118  003496  888B               	bsf	3979,4,c	;volatile
  4119                           
  4120                           ;libraries/lcd_highlevel.c: 135:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4121  003498  0ED0               	movlw	208
  4122  00349A  6E80               	movwf	128,c	;volatile
  4123  00349C  968B               	bcf	3979,3,c	;volatile
  4124  00349E  868B               	bsf	3979,3,c	;volatile
  4125                           
  4126                           ;libraries/lcd_highlevel.c: 136:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4127  0034A0  0E00               	movlw	0
  4128  0034A2  6E80               	movwf	128,c	;volatile
  4129  0034A4  968B               	bcf	3979,3,c	;volatile
  4130  0034A6  868B               	bsf	3979,3,c	;volatile
  4131                           
  4132                           ;libraries/lcd_highlevel.c: 137:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4133  0034A8  0E05               	movlw	5
  4134  0034AA  6E80               	movwf	128,c	;volatile
  4135  0034AC  968B               	bcf	3979,3,c	;volatile
  4136  0034AE  868B               	bsf	3979,3,c	;volatile
  4137                           
  4138                           ;libraries/lcd_highlevel.c: 138:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4139  0034B0  0E0D               	movlw	13
  4140  0034B2  6E80               	movwf	128,c	;volatile
  4141  0034B4  968B               	bcf	3979,3,c	;volatile
  4142  0034B6  868B               	bsf	3979,3,c	;volatile
  4143                           
  4144                           ;libraries/lcd_highlevel.c: 139:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  4145  0034B8  0E0C               	movlw	12
  4146  0034BA  6E80               	movwf	128,c	;volatile
  4147  0034BC  968B               	bcf	3979,3,c	;volatile
  4148  0034BE  868B               	bsf	3979,3,c	;volatile
  4149                           
  4150                           ;libraries/lcd_highlevel.c: 140:   PORTA = 0x06; LATC3 = 0; LATC3 = 1;;
  4151  0034C0  0E06               	movlw	6
  4152  0034C2  6E80               	movwf	128,c	;volatile
  4153  0034C4  968B               	bcf	3979,3,c	;volatile
  4154  0034C6  868B               	bsf	3979,3,c	;volatile
  4155                           
  4156                           ;libraries/lcd_highlevel.c: 141:   PORTA = 0x2D; LATC3 = 0; LATC3 = 1;;
  4157  0034C8  0E2D               	movlw	45
  4158  0034CA  6E80               	movwf	128,c	;volatile
  4159  0034CC  968B               	bcf	3979,3,c	;volatile
  4160  0034CE  868B               	bsf	3979,3,c	;volatile
  4161                           
  4162                           ;libraries/lcd_highlevel.c: 142:   PORTA = 0x44; LATC3 = 0; LATC3 = 1;;
  4163  0034D0  0E44               	movlw	68
  4164  0034D2  6E80               	movwf	128,c	;volatile
  4165  0034D4  968B               	bcf	3979,3,c	;volatile
  4166  0034D6  868B               	bsf	3979,3,c	;volatile
  4167                           
  4168                           ;libraries/lcd_highlevel.c: 143:   PORTA = 0x40; LATC3 = 0; LATC3 = 1;;
  4169  0034D8  0E40               	movlw	64
  4170  0034DA  6E80               	movwf	128,c	;volatile
  4171  0034DC  968B               	bcf	3979,3,c	;volatile
  4172  0034DE  868B               	bsf	3979,3,c	;volatile
  4173                           
  4174                           ;libraries/lcd_highlevel.c: 144:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4175  0034E0  0E0E               	movlw	14
  4176  0034E2  6E80               	movwf	128,c	;volatile
  4177  0034E4  968B               	bcf	3979,3,c	;volatile
  4178  0034E6  868B               	bsf	3979,3,c	;volatile
  4179                           
  4180                           ;libraries/lcd_highlevel.c: 145:   PORTA = 0x1C; LATC3 = 0; LATC3 = 1;;
  4181  0034E8  0E1C               	movlw	28
  4182  0034EA  6E80               	movwf	128,c	;volatile
  4183  0034EC  968B               	bcf	3979,3,c	;volatile
  4184  0034EE  868B               	bsf	3979,3,c	;volatile
  4185                           
  4186                           ;libraries/lcd_highlevel.c: 146:   PORTA = 0x18; LATC3 = 0; LATC3 = 1;;
  4187  0034F0  0E18               	movlw	24
  4188  0034F2  6E80               	movwf	128,c	;volatile
  4189  0034F4  968B               	bcf	3979,3,c	;volatile
  4190  0034F6  868B               	bsf	3979,3,c	;volatile
  4191                           
  4192                           ;libraries/lcd_highlevel.c: 147:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4193  0034F8  0E16               	movlw	22
  4194  0034FA  6E80               	movwf	128,c	;volatile
  4195  0034FC  968B               	bcf	3979,3,c	;volatile
  4196  0034FE  868B               	bsf	3979,3,c	;volatile
  4197                           
  4198                           ;libraries/lcd_highlevel.c: 148:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4199  003500  0E19               	movlw	25
  4200  003502  6E80               	movwf	128,c	;volatile
  4201  003504  968B               	bcf	3979,3,c	;volatile
  4202  003506  868B               	bsf	3979,3,c	;volatile
  4203                           
  4204                           ;libraries/lcd_highlevel.c: 149:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4205  003508  0E2A               	movlw	42
  4206  00350A  6E80               	movwf	128,c	;volatile
  4207  00350C  988B               	bcf	3979,4,c	;volatile
  4208  00350E  968B               	bcf	3979,3,c	;volatile
  4209  003510  868B               	bsf	3979,3,c	;volatile
  4210  003512  888B               	bsf	3979,4,c	;volatile
  4211                           
  4212                           ;libraries/lcd_highlevel.c: 150:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4213  003514  0E00               	movlw	0
  4214  003516  6E80               	movwf	128,c	;volatile
  4215  003518  968B               	bcf	3979,3,c	;volatile
  4216  00351A  868B               	bsf	3979,3,c	;volatile
  4217                           
  4218                           ;libraries/lcd_highlevel.c: 151:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4219  00351C  0E00               	movlw	0
  4220  00351E  6E80               	movwf	128,c	;volatile
  4221  003520  968B               	bcf	3979,3,c	;volatile
  4222  003522  868B               	bsf	3979,3,c	;volatile
  4223                           
  4224                           ;libraries/lcd_highlevel.c: 152:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4225  003524  0E00               	movlw	0
  4226  003526  6E80               	movwf	128,c	;volatile
  4227  003528  968B               	bcf	3979,3,c	;volatile
  4228  00352A  868B               	bsf	3979,3,c	;volatile
  4229                           
  4230                           ;libraries/lcd_highlevel.c: 153:   PORTA = 0xEF; LATC3 = 0; LATC3 = 1;;
  4231  00352C  0EEF               	movlw	239
  4232  00352E  6E80               	movwf	128,c	;volatile
  4233  003530  968B               	bcf	3979,3,c	;volatile
  4234  003532  868B               	bsf	3979,3,c	;volatile
  4235                           
  4236                           ;libraries/lcd_highlevel.c: 154:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4237  003534  0E2B               	movlw	43
  4238  003536  6E80               	movwf	128,c	;volatile
  4239  003538  988B               	bcf	3979,4,c	;volatile
  4240  00353A  968B               	bcf	3979,3,c	;volatile
  4241  00353C  868B               	bsf	3979,3,c	;volatile
  4242  00353E  888B               	bsf	3979,4,c	;volatile
  4243                           
  4244                           ;libraries/lcd_highlevel.c: 155:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4245  003540  0E00               	movlw	0
  4246  003542  6E80               	movwf	128,c	;volatile
  4247  003544  968B               	bcf	3979,3,c	;volatile
  4248  003546  868B               	bsf	3979,3,c	;volatile
  4249                           
  4250                           ;libraries/lcd_highlevel.c: 156:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4251  003548  0E00               	movlw	0
  4252  00354A  6E80               	movwf	128,c	;volatile
  4253  00354C  968B               	bcf	3979,3,c	;volatile
  4254  00354E  868B               	bsf	3979,3,c	;volatile
  4255                           
  4256                           ;libraries/lcd_highlevel.c: 157:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4257  003550  0E01               	movlw	1
  4258  003552  6E80               	movwf	128,c	;volatile
  4259  003554  968B               	bcf	3979,3,c	;volatile
  4260  003556  868B               	bsf	3979,3,c	;volatile
  4261                           
  4262                           ;libraries/lcd_highlevel.c: 158:   PORTA = 0x3F; LATC3 = 0; LATC3 = 1;;
  4263  003558  0E3F               	movlw	63
  4264  00355A  6E80               	movwf	128,c	;volatile
  4265  00355C  968B               	bcf	3979,3,c	;volatile
  4266  00355E  868B               	bsf	3979,3,c	;volatile
  4267                           
  4268                           ;libraries/lcd_highlevel.c: 159:   PORTA = 0x26; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4269  003560  0E26               	movlw	38
  4270  003562  6E80               	movwf	128,c	;volatile
  4271  003564  988B               	bcf	3979,4,c	;volatile
  4272  003566  968B               	bcf	3979,3,c	;volatile
  4273  003568  868B               	bsf	3979,3,c	;volatile
  4274  00356A  888B               	bsf	3979,4,c	;volatile
  4275                           
  4276                           ;libraries/lcd_highlevel.c: 160:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4277  00356C  0E01               	movlw	1
  4278  00356E  6E80               	movwf	128,c	;volatile
  4279  003570  968B               	bcf	3979,3,c	;volatile
  4280  003572  868B               	bsf	3979,3,c	;volatile
  4281                           
  4282                           ;libraries/lcd_highlevel.c: 161:   PORTA = 0x29; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4283  003574  0E29               	movlw	41
  4284  003576  6E80               	movwf	128,c	;volatile
  4285  003578  988B               	bcf	3979,4,c	;volatile
  4286  00357A  968B               	bcf	3979,3,c	;volatile
  4287  00357C  868B               	bsf	3979,3,c	;volatile
  4288  00357E  888B               	bsf	3979,4,c	;volatile
  4289  003580  0012               	return		;funcret
  4290  003582                     __end_of_LCD_Init:
  4291                           	callstack 0
  4292                           
  4293 ;; *************** function _LCD_Lowlevel_Init *****************
  4294 ;; Defined at:
  4295 ;;		line 17 in file "libraries/lcd_lowlevel.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  i               4   18[COMRAM] unsigned long 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4309 ;;      Params:         0       0       0       0       0       0       0
  4310 ;;      Locals:         4       0       0       0       0       0       0
  4311 ;;      Temps:          1       0       0       0       0       0       0
  4312 ;;      Totals:         5       0       0       0       0       0       0
  4313 ;;Total ram usage:        5 bytes
  4314 ;; Hardware stack levels used: 1
  4315 ;; Hardware stack levels required when called: 4
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_LCD_Init
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text8
  4324  00592C                     __ptext8:
  4325                           	callstack 0
  4326  00592C                     _LCD_Lowlevel_Init:
  4327                           	callstack 24
  4328  00592C                     
  4329                           ;libraries/lcd_lowlevel.c: 19:   uint32_t i;;libraries/lcd_lowlevel.c: 20:   TRISC5 = 0;
  4330  00592C  9A94               	bcf	3988,5,c	;volatile
  4331                           
  4332                           ;libraries/lcd_lowlevel.c: 21:   TRISC2 = 0;
  4333  00592E  9494               	bcf	3988,2,c	;volatile
  4334                           
  4335                           ;libraries/lcd_lowlevel.c: 22:   TRISC3 = 0;
  4336  005930  9694               	bcf	3988,3,c	;volatile
  4337                           
  4338                           ;libraries/lcd_lowlevel.c: 23:   TRISC4 = 0;
  4339  005932  9894               	bcf	3988,4,c	;volatile
  4340  005934                     
  4341                           ;libraries/lcd_lowlevel.c: 25:   TRISA = 0x00;
  4342  005934  0E00               	movlw	0
  4343  005936  6E92               	movwf	146,c	;volatile
  4344  005938                     
  4345                           ;libraries/lcd_lowlevel.c: 28:  LATC5 = 0;
  4346  005938  9A8B               	bcf	3979,5,c	;volatile
  4347  00593A                     
  4348                           ;libraries/lcd_lowlevel.c: 29:  LATC2 = 1;
  4349  00593A  848B               	bsf	3979,2,c	;volatile
  4350  00593C                     
  4351                           ;libraries/lcd_lowlevel.c: 30:  LATC3 = 1;
  4352  00593C  868B               	bsf	3979,3,c	;volatile
  4353  00593E                     
  4354                           ;libraries/lcd_lowlevel.c: 31:  LATC4 = 1;
  4355  00593E  888B               	bsf	3979,4,c	;volatile
  4356                           
  4357                           ;libraries/lcd_lowlevel.c: 33:   for(i=0;i<12;i++)
  4358  005940  0E00               	movlw	0
  4359  005942  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4360  005944  0E00               	movlw	0
  4361  005946  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4362  005948  0E00               	movlw	0
  4363  00594A  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4364  00594C  0E00               	movlw	0
  4365  00594E  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4366  005950                     l3862:
  4367                           
  4368                           ;libraries/lcd_lowlevel.c: 34:   {;libraries/lcd_lowlevel.c: 35:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4369  005950  0ED0               	movlw	208
  4370  005952  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4371  005954  0ECA               	movlw	202
  4372  005956                     u8097:
  4373  005956  2EE8               	decfsz	wreg,f,c
  4374  005958  D7FE               	bra	u8097
  4375  00595A  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4376  00595C  D7FC               	bra	u8097
  4377  00595E                     
  4378                           ;libraries/lcd_lowlevel.c: 36:   }
  4379  00595E  0E01               	movlw	1
  4380  005960  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4381  005962  0E00               	movlw	0
  4382  005964  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4383  005966  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4384  005968  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4385  00596A  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4386  00596C  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4387  00596E  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4388  005970  E109               	bnz	u2300
  4389  005972  0E0C               	movlw	12
  4390  005974  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4391  005976  A0D8               	btfss	status,0,c
  4392  005978  EFC0  F02C         	goto	u2301
  4393  00597C  EFC2  F02C         	goto	u2300
  4394  005980                     u2301:
  4395  005980  EFA8  F02C         	goto	l3862
  4396  005984                     u2300:
  4397  005984                     
  4398                           ;libraries/lcd_lowlevel.c: 38:   for(i=0;i<12;i++)
  4399  005984  0E00               	movlw	0
  4400  005986  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4401  005988  0E00               	movlw	0
  4402  00598A  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4403  00598C  0E00               	movlw	0
  4404  00598E  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4405  005990  0E00               	movlw	0
  4406  005992  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4407  005994                     l3874:
  4408                           
  4409                           ;libraries/lcd_lowlevel.c: 39:   {;libraries/lcd_lowlevel.c: 40:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4410  005994  0ED0               	movlw	208
  4411  005996  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4412  005998  0ECA               	movlw	202
  4413  00599A                     u8107:
  4414  00599A  2EE8               	decfsz	wreg,f,c
  4415  00599C  D7FE               	bra	u8107
  4416  00599E  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4417  0059A0  D7FC               	bra	u8107
  4418  0059A2                     
  4419                           ;libraries/lcd_lowlevel.c: 41:   }
  4420  0059A2  0E01               	movlw	1
  4421  0059A4  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4422  0059A6  0E00               	movlw	0
  4423  0059A8  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4424  0059AA  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4425  0059AC  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4426  0059AE  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4427  0059B0  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4428  0059B2  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4429  0059B4  E109               	bnz	u2310
  4430  0059B6  0E0C               	movlw	12
  4431  0059B8  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4432  0059BA  A0D8               	btfss	status,0,c
  4433  0059BC  EFE2  F02C         	goto	u2311
  4434  0059C0  EFE4  F02C         	goto	u2310
  4435  0059C4                     u2311:
  4436  0059C4  EFCA  F02C         	goto	l3874
  4437  0059C8                     u2310:
  4438  0059C8  0012               	return		;funcret
  4439  0059CA                     __end_of_LCD_Lowlevel_Init:
  4440                           	callstack 0
  4441                           
  4442 ;; *************** function _GameParameters_init *****************
  4443 ;; Defined at:
  4444 ;;		line 3 in file "class/gameParameters.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  s               2   42[COMRAM] PTR struct GameParameter
  4447 ;;		 -> g1(239), 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4459 ;;      Params:         2       0       0       0       0       0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0
  4462 ;;      Totals:         2       0       0       0       0       0       0
  4463 ;;Total ram usage:        2 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; Hardware stack levels required when called: 5
  4466 ;; This function calls:
  4467 ;;		_Ball_init
  4468 ;;		_LCD_ButtonCreate
  4469 ;;		_LCD_SliderCreate
  4470 ;;		_Paddle_init
  4471 ;; This function is called by:
  4472 ;;		_Factory_init
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           	psect	text9
  4477  002200                     __ptext9:
  4478                           	callstack 0
  4479  002200                     _GameParameters_init:
  4480                           	callstack 24
  4481  002200                     
  4482                           ;class/gameParameters.c: 3: void GameParameters_init(struct GameParameters* s);class/gam
      +                          eParameters.c: 4: {;class/gameParameters.c: 5:     s->backlight = 11;
  4483  002200  C02B  FFD9         	movff	GameParameters_init@s,fsr2l
  4484  002204  C02C  FFDA         	movff	GameParameters_init@s+1,fsr2h
  4485  002208  0E0B               	movlw	11
  4486  00220A  6EDE               	movwf	postinc2,c
  4487  00220C  0E00               	movlw	0
  4488  00220E  6EDD               	movwf	postdec2,c
  4489  002210                     
  4490                           ;class/gameParameters.c: 6:     CCPR2L = 255;
  4491  002210  6867               	setf	103,c	;volatile
  4492  002212                     
  4493                           ;class/gameParameters.c: 7:     s->player = 0;
  4494  002212  EE20 F002          	lfsr	2,2
  4495  002216  502B               	movf	GameParameters_init@s^0,w,c
  4496  002218  26D9               	addwf	fsr2l,f,c
  4497  00221A  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4498  00221C  22DA               	addwfc	fsr2h,f,c
  4499  00221E  0E00               	movlw	0
  4500  002220  6EDE               	movwf	postinc2,c
  4501  002222  0E00               	movlw	0
  4502  002224  6EDD               	movwf	postdec2,c
  4503  002226                     
  4504                           ;class/gameParameters.c: 8:     s->x=0;
  4505  002226  EE20 F004          	lfsr	2,4
  4506  00222A  502B               	movf	GameParameters_init@s^0,w,c
  4507  00222C  26D9               	addwf	fsr2l,f,c
  4508  00222E  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4509  002230  22DA               	addwfc	fsr2h,f,c
  4510  002232  0E00               	movlw	0
  4511  002234  6EDE               	movwf	postinc2,c
  4512  002236  0E00               	movlw	0
  4513  002238  6EDD               	movwf	postdec2,c
  4514  00223A                     
  4515                           ;class/gameParameters.c: 9:     s->y=0;
  4516  00223A  EE20 F006          	lfsr	2,6
  4517  00223E  502B               	movf	GameParameters_init@s^0,w,c
  4518  002240  26D9               	addwf	fsr2l,f,c
  4519  002242  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4520  002244  22DA               	addwfc	fsr2h,f,c
  4521  002246  0E00               	movlw	0
  4522  002248  6EDE               	movwf	postinc2,c
  4523  00224A  0E00               	movlw	0
  4524  00224C  6EDD               	movwf	postdec2,c
  4525  00224E                     
  4526                           ;class/gameParameters.c: 10:     Ball_init(&(s->b));
  4527  00224E  0EC9               	movlw	201
  4528  002250  242B               	addwf	GameParameters_init@s^0,w,c
  4529  002252  6E12               	movwf	Ball_init@b^0,c
  4530  002254  0E00               	movlw	0
  4531  002256  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4532  002258  6E13               	movwf	(Ball_init@b+1)^0,c
  4533  00225A  ECED  F02D         	call	_Ball_init	;wreg free
  4534  00225E                     
  4535                           ;class/gameParameters.c: 11:     Paddle_init(&(s->p1),0);
  4536  00225E  0ED5               	movlw	213
  4537  002260  242B               	addwf	GameParameters_init@s^0,w,c
  4538  002262  6E12               	movwf	Paddle_init@p^0,c
  4539  002264  0E00               	movlw	0
  4540  002266  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4541  002268  6E13               	movwf	(Paddle_init@p+1)^0,c
  4542  00226A  0E00               	movlw	0
  4543  00226C  6E15               	movwf	(Paddle_init@team+1)^0,c
  4544  00226E  0E00               	movlw	0
  4545  002270  6E14               	movwf	Paddle_init@team^0,c
  4546  002272  ECE5  F02A         	call	_Paddle_init	;wreg free
  4547  002276                     
  4548                           ;class/gameParameters.c: 12:     Paddle_init(&(s->p2),1);
  4549  002276  0EDF               	movlw	223
  4550  002278  242B               	addwf	GameParameters_init@s^0,w,c
  4551  00227A  6E12               	movwf	Paddle_init@p^0,c
  4552  00227C  0E00               	movlw	0
  4553  00227E  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4554  002280  6E13               	movwf	(Paddle_init@p+1)^0,c
  4555  002282  0E00               	movlw	0
  4556  002284  6E15               	movwf	(Paddle_init@team+1)^0,c
  4557  002286  0E01               	movlw	1
  4558  002288  6E14               	movwf	Paddle_init@team^0,c
  4559  00228A  ECE5  F02A         	call	_Paddle_init	;wreg free
  4560  00228E                     
  4561                           ;class/gameParameters.c: 13:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"Parametres",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s
      +                          ->btnParam),1);
  4562  00228E  0E00               	movlw	0
  4563  002290  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4564  002292  0E82               	movlw	130
  4565  002294  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4566  002296  0E00               	movlw	0
  4567  002298  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4568  00229A  0E32               	movlw	50
  4569  00229C  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4570  00229E  0E00               	movlw	0
  4571  0022A0  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4572  0022A2  0E5A               	movlw	90
  4573  0022A4  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4574  0022A6  0E00               	movlw	0
  4575  0022A8  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4576  0022AA  0E14               	movlw	20
  4577  0022AC  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4578  0022AE  0EFF               	movlw	255
  4579  0022B0  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4580  0022B2  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4581  0022B4  0E00               	movlw	0
  4582  0022B6  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4583  0022B8  0E00               	movlw	0
  4584  0022BA  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4585  0022BC  0EAB               	movlw	low STR_4
  4586  0022BE  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4587  0022C0  0E7F               	movlw	high STR_4
  4588  0022C2  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4589  0022C4  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  4590  0022C6  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4591  0022C8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4592  0022CA  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4593  0022CC  0E00               	movlw	0
  4594  0022CE  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4595  0022D0  0E00               	movlw	0
  4596  0022D2  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4597  0022D4  0E00               	movlw	0
  4598  0022D6  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4599  0022D8  0E00               	movlw	0
  4600  0022DA  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4601  0022DC  0E00               	movlw	0
  4602  0022DE  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4603  0022E0  0E00               	movlw	0
  4604  0022E2  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4605  0022E4  0E08               	movlw	8
  4606  0022E6  242B               	addwf	GameParameters_init@s^0,w,c
  4607  0022E8  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4608  0022EA  0E00               	movlw	0
  4609  0022EC  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4610  0022EE  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4611  0022F0  0E01               	movlw	1
  4612  0022F2  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4613  0022F4  ECBE  F024         	call	_LCD_ButtonCreate	;wreg free
  4614  0022F8                     
  4615                           ;class/gameParameters.c: 14:     LCD_ButtonCreate(10,250,70,20,0b1111111111111111,0b0000
      +                          000000000000,"1 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->
      +                          btnOnePlayer),2);
  4616  0022F8  0E00               	movlw	0
  4617  0022FA  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4618  0022FC  0E0A               	movlw	10
  4619  0022FE  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4620  002300  0E00               	movlw	0
  4621  002302  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4622  002304  0EFA               	movlw	250
  4623  002306  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4624  002308  0E00               	movlw	0
  4625  00230A  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4626  00230C  0E46               	movlw	70
  4627  00230E  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4628  002310  0E00               	movlw	0
  4629  002312  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4630  002314  0E14               	movlw	20
  4631  002316  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4632  002318  0EFF               	movlw	255
  4633  00231A  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4634  00231C  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4635  00231E  0E00               	movlw	0
  4636  002320  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4637  002322  0E00               	movlw	0
  4638  002324  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4639  002326  0EC9               	movlw	low STR_5
  4640  002328  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4641  00232A  0E7F               	movlw	high STR_5
  4642  00232C  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4643  00232E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  4644  002330  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4645  002332  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4646  002334  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4647  002336  0E00               	movlw	0
  4648  002338  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4649  00233A  0E00               	movlw	0
  4650  00233C  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4651  00233E  0E00               	movlw	0
  4652  002340  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4653  002342  0E00               	movlw	0
  4654  002344  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4655  002346  0E00               	movlw	0
  4656  002348  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4657  00234A  0E00               	movlw	0
  4658  00234C  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4659  00234E  0E20               	movlw	32
  4660  002350  242B               	addwf	GameParameters_init@s^0,w,c
  4661  002352  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4662  002354  0E00               	movlw	0
  4663  002356  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4664  002358  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4665  00235A  0E02               	movlw	2
  4666  00235C  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4667  00235E  ECBE  F024         	call	_LCD_ButtonCreate	;wreg free
  4668  002362                     
  4669                           ;class/gameParameters.c: 15:     LCD_ButtonCreate(150,250,70,20,0b1111111111111111,0b000
      +                          0000000000000,"2 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnTwoPlayer),3);
  4670  002362  0E00               	movlw	0
  4671  002364  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4672  002366  0E96               	movlw	150
  4673  002368  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4674  00236A  0E00               	movlw	0
  4675  00236C  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4676  00236E  0EFA               	movlw	250
  4677  002370  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4678  002372  0E00               	movlw	0
  4679  002374  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4680  002376  0E46               	movlw	70
  4681  002378  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4682  00237A  0E00               	movlw	0
  4683  00237C  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4684  00237E  0E14               	movlw	20
  4685  002380  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4686  002382  0EFF               	movlw	255
  4687  002384  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4688  002386  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4689  002388  0E00               	movlw	0
  4690  00238A  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4691  00238C  0E00               	movlw	0
  4692  00238E  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4693  002390  0ED2               	movlw	low STR_6
  4694  002392  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4695  002394  0E7F               	movlw	high STR_6
  4696  002396  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4697  002398  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  4698  00239A  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4699  00239C  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4700  00239E  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4701  0023A0  0E00               	movlw	0
  4702  0023A2  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4703  0023A4  0E00               	movlw	0
  4704  0023A6  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4705  0023A8  0E00               	movlw	0
  4706  0023AA  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4707  0023AC  0E00               	movlw	0
  4708  0023AE  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4709  0023B0  0E00               	movlw	0
  4710  0023B2  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4711  0023B4  0E00               	movlw	0
  4712  0023B6  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4713  0023B8  0E38               	movlw	56
  4714  0023BA  242B               	addwf	GameParameters_init@s^0,w,c
  4715  0023BC  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4716  0023BE  0E00               	movlw	0
  4717  0023C0  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4718  0023C2  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4719  0023C4  0E03               	movlw	3
  4720  0023C6  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4721  0023C8  ECBE  F024         	call	_LCD_ButtonCreate	;wreg free
  4722  0023CC                     
  4723                           ;class/gameParameters.c: 16:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"QUITTER",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->b
      +                          tnLeaveParam),4);
  4724  0023CC  0E00               	movlw	0
  4725  0023CE  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4726  0023D0  0E82               	movlw	130
  4727  0023D2  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4728  0023D4  0E00               	movlw	0
  4729  0023D6  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4730  0023D8  0E32               	movlw	50
  4731  0023DA  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4732  0023DC  0E00               	movlw	0
  4733  0023DE  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4734  0023E0  0E5A               	movlw	90
  4735  0023E2  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4736  0023E4  0E00               	movlw	0
  4737  0023E6  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4738  0023E8  0E14               	movlw	20
  4739  0023EA  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4740  0023EC  0EFF               	movlw	255
  4741  0023EE  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4742  0023F0  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4743  0023F2  0E00               	movlw	0
  4744  0023F4  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4745  0023F6  0E00               	movlw	0
  4746  0023F8  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4747  0023FA  0EE3               	movlw	low STR_7
  4748  0023FC  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4749  0023FE  0E7F               	movlw	high STR_7
  4750  002400  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4751  002402  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  4752  002404  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4753  002406  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4754  002408  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4755  00240A  0E00               	movlw	0
  4756  00240C  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4757  00240E  0E00               	movlw	0
  4758  002410  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4759  002412  0E00               	movlw	0
  4760  002414  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4761  002416  0E00               	movlw	0
  4762  002418  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4763  00241A  0E00               	movlw	0
  4764  00241C  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4765  00241E  0E00               	movlw	0
  4766  002420  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4767  002422  0E50               	movlw	80
  4768  002424  242B               	addwf	GameParameters_init@s^0,w,c
  4769  002426  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4770  002428  0E00               	movlw	0
  4771  00242A  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4772  00242C  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4773  00242E  0E04               	movlw	4
  4774  002430  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4775  002432  ECBE  F024         	call	_LCD_ButtonCreate	;wreg free
  4776  002436                     
  4777                           ;class/gameParameters.c: 17:     LCD_ButtonCreate(10,220,70,50,0b0000000000000000,0b1111
      +                          111111111111,"<--",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnLe
      +                          ft),5);
  4778  002436  0E00               	movlw	0
  4779  002438  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4780  00243A  0E0A               	movlw	10
  4781  00243C  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4782  00243E  0E00               	movlw	0
  4783  002440  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4784  002442  0EDC               	movlw	220
  4785  002444  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4786  002446  0E00               	movlw	0
  4787  002448  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4788  00244A  0E46               	movlw	70
  4789  00244C  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4790  00244E  0E00               	movlw	0
  4791  002450  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4792  002452  0E32               	movlw	50
  4793  002454  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4794  002456  0E00               	movlw	0
  4795  002458  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4796  00245A  0E00               	movlw	0
  4797  00245C  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
  4798  00245E  0EFF               	movlw	255
  4799  002460  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4800  002462  681C               	setf	LCD_ButtonCreate@bgColor^0,c
  4801  002464  0EF7               	movlw	low STR_8
  4802  002466  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4803  002468  0E7F               	movlw	high STR_8
  4804  00246A  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4805  00246C  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  4806  00246E  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4807  002470  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4808  002472  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4809  002474  0E00               	movlw	0
  4810  002476  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4811  002478  0E00               	movlw	0
  4812  00247A  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4813  00247C  0E00               	movlw	0
  4814  00247E  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4815  002480  0E00               	movlw	0
  4816  002482  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4817  002484  0E00               	movlw	0
  4818  002486  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4819  002488  0E00               	movlw	0
  4820  00248A  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4821  00248C  0E68               	movlw	104
  4822  00248E  242B               	addwf	GameParameters_init@s^0,w,c
  4823  002490  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4824  002492  0E00               	movlw	0
  4825  002494  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4826  002496  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4827  002498  0E05               	movlw	5
  4828  00249A  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4829  00249C  ECBE  F024         	call	_LCD_ButtonCreate	;wreg free
  4830  0024A0                     
  4831                           ;class/gameParameters.c: 18:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"-->",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnR
      +                          ight),6);
  4832  0024A0  0E00               	movlw	0
  4833  0024A2  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4834  0024A4  0E96               	movlw	150
  4835  0024A6  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4836  0024A8  0E00               	movlw	0
  4837  0024AA  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4838  0024AC  0EDC               	movlw	220
  4839  0024AE  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4840  0024B0  0E00               	movlw	0
  4841  0024B2  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4842  0024B4  0E46               	movlw	70
  4843  0024B6  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4844  0024B8  0E00               	movlw	0
  4845  0024BA  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4846  0024BC  0E32               	movlw	50
  4847  0024BE  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4848  0024C0  0E00               	movlw	0
  4849  0024C2  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4850  0024C4  0E00               	movlw	0
  4851  0024C6  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
  4852  0024C8  0EFF               	movlw	255
  4853  0024CA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4854  0024CC  681C               	setf	LCD_ButtonCreate@bgColor^0,c
  4855  0024CE  0EFB               	movlw	low STR_9
  4856  0024D0  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4857  0024D2  0E7F               	movlw	high STR_9
  4858  0024D4  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4859  0024D6  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  4860  0024D8  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4861  0024DA  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4862  0024DC  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4863  0024DE  0E00               	movlw	0
  4864  0024E0  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4865  0024E2  0E00               	movlw	0
  4866  0024E4  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4867  0024E6  0E00               	movlw	0
  4868  0024E8  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4869  0024EA  0E00               	movlw	0
  4870  0024EC  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4871  0024EE  0E00               	movlw	0
  4872  0024F0  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4873  0024F2  0E00               	movlw	0
  4874  0024F4  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4875  0024F6  0E98               	movlw	152
  4876  0024F8  242B               	addwf	GameParameters_init@s^0,w,c
  4877  0024FA  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4878  0024FC  0E00               	movlw	0
  4879  0024FE  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4880  002500  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4881  002502  0E06               	movlw	6
  4882  002504  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4883  002506  ECBE  F024         	call	_LCD_ButtonCreate	;wreg free
  4884  00250A                     
  4885                           ;class/gameParameters.c: 19:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"New Game",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnNewGame),6);
  4886  00250A  0E00               	movlw	0
  4887  00250C  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4888  00250E  0E96               	movlw	150
  4889  002510  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4890  002512  0E00               	movlw	0
  4891  002514  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4892  002516  0EDC               	movlw	220
  4893  002518  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4894  00251A  0E00               	movlw	0
  4895  00251C  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4896  00251E  0E46               	movlw	70
  4897  002520  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4898  002522  0E00               	movlw	0
  4899  002524  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4900  002526  0E32               	movlw	50
  4901  002528  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4902  00252A  0E00               	movlw	0
  4903  00252C  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4904  00252E  0E00               	movlw	0
  4905  002530  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
  4906  002532  0EFF               	movlw	255
  4907  002534  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4908  002536  681C               	setf	LCD_ButtonCreate@bgColor^0,c
  4909  002538  0EC0               	movlw	low STR_10
  4910  00253A  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4911  00253C  0E7F               	movlw	high STR_10
  4912  00253E  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4913  002540  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  4914  002542  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4915  002544  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4916  002546  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4917  002548  0E00               	movlw	0
  4918  00254A  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4919  00254C  0E00               	movlw	0
  4920  00254E  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4921  002550  0E00               	movlw	0
  4922  002552  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4923  002554  0E00               	movlw	0
  4924  002556  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4925  002558  0E00               	movlw	0
  4926  00255A  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4927  00255C  0E00               	movlw	0
  4928  00255E  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4929  002560  0E80               	movlw	128
  4930  002562  242B               	addwf	GameParameters_init@s^0,w,c
  4931  002564  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4932  002566  0E00               	movlw	0
  4933  002568  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4934  00256A  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4935  00256C  0E06               	movlw	6
  4936  00256E  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4937  002570  ECBE  F024         	call	_LCD_ButtonCreate	;wreg free
  4938  002574                     
  4939                           ;class/gameParameters.c: 20:     LCD_SliderCreate(50,100,165,20,0b0000000000000000,0b111
      +                          1111111111111,0b1111100000000000,0,11,((void*)0),&(s->sldParam));
  4940  002574  0E00               	movlw	0
  4941  002576  6E13               	movwf	(LCD_SliderCreate@posX+1)^0,c
  4942  002578  0E32               	movlw	50
  4943  00257A  6E12               	movwf	LCD_SliderCreate@posX^0,c
  4944  00257C  0E00               	movlw	0
  4945  00257E  6E15               	movwf	(LCD_SliderCreate@posY+1)^0,c
  4946  002580  0E64               	movlw	100
  4947  002582  6E14               	movwf	LCD_SliderCreate@posY^0,c
  4948  002584  0E00               	movlw	0
  4949  002586  6E17               	movwf	(LCD_SliderCreate@width+1)^0,c
  4950  002588  0EA5               	movlw	165
  4951  00258A  6E16               	movwf	LCD_SliderCreate@width^0,c
  4952  00258C  0E00               	movlw	0
  4953  00258E  6E19               	movwf	(LCD_SliderCreate@height+1)^0,c
  4954  002590  0E14               	movlw	20
  4955  002592  6E18               	movwf	LCD_SliderCreate@height^0,c
  4956  002594  0E00               	movlw	0
  4957  002596  6E1B               	movwf	(LCD_SliderCreate@sldColor+1)^0,c
  4958  002598  0E00               	movlw	0
  4959  00259A  6E1A               	movwf	LCD_SliderCreate@sldColor^0,c
  4960  00259C  0EFF               	movlw	255
  4961  00259E  6E1D               	movwf	(LCD_SliderCreate@bgColor+1)^0,c
  4962  0025A0  681C               	setf	LCD_SliderCreate@bgColor^0,c
  4963  0025A2  0EF8               	movlw	248
  4964  0025A4  6E1F               	movwf	(LCD_SliderCreate@borderColor+1)^0,c
  4965  0025A6  0E00               	movlw	0
  4966  0025A8  6E1E               	movwf	LCD_SliderCreate@borderColor^0,c
  4967  0025AA  0E00               	movlw	0
  4968  0025AC  6E21               	movwf	(LCD_SliderCreate@cursorWidth+1)^0,c
  4969  0025AE  0E00               	movlw	0
  4970  0025B0  6E20               	movwf	LCD_SliderCreate@cursorWidth^0,c
  4971  0025B2  0E00               	movlw	0
  4972  0025B4  6E23               	movwf	(LCD_SliderCreate@steps+1)^0,c
  4973  0025B6  0E0B               	movlw	11
  4974  0025B8  6E22               	movwf	LCD_SliderCreate@steps^0,c
  4975  0025BA  0E00               	movlw	0
  4976  0025BC  6E24               	movwf	LCD_SliderCreate@fpPress^0,c
  4977  0025BE  0E00               	movlw	0
  4978  0025C0  6E25               	movwf	(LCD_SliderCreate@fpPress+1)^0,c
  4979  0025C2  0EB0               	movlw	176
  4980  0025C4  242B               	addwf	GameParameters_init@s^0,w,c
  4981  0025C6  6E26               	movwf	LCD_SliderCreate@slider^0,c
  4982  0025C8  0E00               	movlw	0
  4983  0025CA  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4984  0025CC  6E27               	movwf	(LCD_SliderCreate@slider+1)^0,c
  4985  0025CE  ECB5  F025         	call	_LCD_SliderCreate	;wreg free
  4986  0025D2  0012               	return		;funcret
  4987  0025D4                     __end_of_GameParameters_init:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _Paddle_init *****************
  4991 ;; Defined at:
  4992 ;;		line 3 in file "class/paddle.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  p               2   17[COMRAM] PTR struct Paddle
  4995 ;;		 -> g1(239), 
  4996 ;;  team            2   19[COMRAM] unsigned short 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5008 ;;      Params:         4       0       0       0       0       0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0
  5011 ;;      Totals:         4       0       0       0       0       0       0
  5012 ;;Total ram usage:        4 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; Hardware stack levels required when called: 4
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_GameParameters_init
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text10
  5023  0055CA                     __ptext10:
  5024                           	callstack 0
  5025  0055CA                     _Paddle_init:
  5026                           	callstack 24
  5027  0055CA                     
  5028                           ;class/paddle.c: 3: void Paddle_init(struct Paddle* p,uint16_t team);class/paddle.c: 4: 
      +                          {;class/paddle.c: 5:     p->oldx=0;
  5029  0055CA  EE20 F004          	lfsr	2,4
  5030  0055CE  5012               	movf	Paddle_init@p^0,w,c
  5031  0055D0  26D9               	addwf	fsr2l,f,c
  5032  0055D2  5013               	movf	(Paddle_init@p+1)^0,w,c
  5033  0055D4  22DA               	addwfc	fsr2h,f,c
  5034  0055D6  0E00               	movlw	0
  5035  0055D8  6EDE               	movwf	postinc2,c
  5036  0055DA  0E00               	movlw	0
  5037  0055DC  6EDD               	movwf	postdec2,c
  5038                           
  5039                           ;class/paddle.c: 6:     p->oldy=0;
  5040  0055DE  EE20 F006          	lfsr	2,6
  5041  0055E2  5012               	movf	Paddle_init@p^0,w,c
  5042  0055E4  26D9               	addwf	fsr2l,f,c
  5043  0055E6  5013               	movf	(Paddle_init@p+1)^0,w,c
  5044  0055E8  22DA               	addwfc	fsr2h,f,c
  5045  0055EA  0E00               	movlw	0
  5046  0055EC  6EDE               	movwf	postinc2,c
  5047  0055EE  0E00               	movlw	0
  5048  0055F0  6EDD               	movwf	postdec2,c
  5049  0055F2                     
  5050                           ;class/paddle.c: 7:     if(team)
  5051  0055F2  5014               	movf	Paddle_init@team^0,w,c
  5052  0055F4  1015               	iorwf	(Paddle_init@team+1)^0,w,c
  5053  0055F6  B4D8               	btfsc	status,2,c
  5054  0055F8  EF00  F02B         	goto	u5071
  5055  0055FC  EF02  F02B         	goto	u5070
  5056  005600                     u5071:
  5057  005600  EF20  F02B         	goto	l7210
  5058  005604                     u5070:
  5059  005604                     
  5060                           ;class/paddle.c: 8:     {;class/paddle.c: 9:         p->x = 90;
  5061  005604  C012  FFD9         	movff	Paddle_init@p,fsr2l
  5062  005608  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
  5063  00560C  0E5A               	movlw	90
  5064  00560E  6EDE               	movwf	postinc2,c
  5065  005610  0E00               	movlw	0
  5066  005612  6EDD               	movwf	postdec2,c
  5067  005614                     
  5068                           ;class/paddle.c: 10:         p->y = 20;
  5069  005614  EE20 F002          	lfsr	2,2
  5070  005618  5012               	movf	Paddle_init@p^0,w,c
  5071  00561A  26D9               	addwf	fsr2l,f,c
  5072  00561C  5013               	movf	(Paddle_init@p+1)^0,w,c
  5073  00561E  22DA               	addwfc	fsr2h,f,c
  5074  005620  0E14               	movlw	20
  5075  005622  6EDE               	movwf	postinc2,c
  5076  005624  0E00               	movlw	0
  5077  005626  6EDD               	movwf	postdec2,c
  5078  005628                     
  5079                           ;class/paddle.c: 11:         p->color = 0b1111111111111111;
  5080  005628  EE20 F008          	lfsr	2,8
  5081  00562C  5012               	movf	Paddle_init@p^0,w,c
  5082  00562E  26D9               	addwf	fsr2l,f,c
  5083  005630  5013               	movf	(Paddle_init@p+1)^0,w,c
  5084  005632  22DA               	addwfc	fsr2h,f,c
  5085  005634  0EFF               	movlw	255
  5086  005636  6EDE               	movwf	postinc2,c
  5087  005638  0EFF               	movlw	255
  5088  00563A  6EDD               	movwf	postdec2,c
  5089                           
  5090                           ;class/paddle.c: 12:     }
  5091  00563C  EF3C  F02B         	goto	l18
  5092  005640                     l7210:
  5093                           
  5094                           ;class/paddle.c: 14:     {;class/paddle.c: 15:         p->x = 90;
  5095  005640  C012  FFD9         	movff	Paddle_init@p,fsr2l
  5096  005644  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
  5097  005648  0E5A               	movlw	90
  5098  00564A  6EDE               	movwf	postinc2,c
  5099  00564C  0E00               	movlw	0
  5100  00564E  6EDD               	movwf	postdec2,c
  5101  005650                     
  5102                           ;class/paddle.c: 16:         p->y = 280;
  5103  005650  EE20 F002          	lfsr	2,2
  5104  005654  5012               	movf	Paddle_init@p^0,w,c
  5105  005656  26D9               	addwf	fsr2l,f,c
  5106  005658  5013               	movf	(Paddle_init@p+1)^0,w,c
  5107  00565A  22DA               	addwfc	fsr2h,f,c
  5108  00565C  0E18               	movlw	24
  5109  00565E  6EDE               	movwf	postinc2,c
  5110  005660  0E01               	movlw	1
  5111  005662  6EDD               	movwf	postdec2,c
  5112  005664                     
  5113                           ;class/paddle.c: 17:         p->color = 0b1111111111111111;
  5114  005664  EE20 F008          	lfsr	2,8
  5115  005668  5012               	movf	Paddle_init@p^0,w,c
  5116  00566A  26D9               	addwf	fsr2l,f,c
  5117  00566C  5013               	movf	(Paddle_init@p+1)^0,w,c
  5118  00566E  22DA               	addwfc	fsr2h,f,c
  5119  005670  0EFF               	movlw	255
  5120  005672  6EDE               	movwf	postinc2,c
  5121  005674  0EFF               	movlw	255
  5122  005676  6EDD               	movwf	postdec2,c
  5123  005678                     l18:
  5124  005678  0012               	return		;funcret
  5125  00567A                     __end_of_Paddle_init:
  5126                           	callstack 0
  5127                           
  5128 ;; *************** function _LCD_SliderCreate *****************
  5129 ;; Defined at:
  5130 ;;		line 291 in file "libraries/lcd_highlevel.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  posX            2   17[COMRAM] unsigned short 
  5133 ;;  posY            2   19[COMRAM] unsigned short 
  5134 ;;  width           2   21[COMRAM] unsigned short 
  5135 ;;  height          2   23[COMRAM] unsigned short 
  5136 ;;  sldColor        2   25[COMRAM] unsigned short 
  5137 ;;  bgColor         2   27[COMRAM] unsigned short 
  5138 ;;  borderColor     2   29[COMRAM] unsigned short 
  5139 ;;  cursorWidth     2   31[COMRAM] unsigned short 
  5140 ;;  steps           2   33[COMRAM] unsigned short 
  5141 ;;  fpPress         2   35[COMRAM] PTR FTN()void 
  5142 ;;		 -> Absolute function(1), 
  5143 ;;  slider          2   37[COMRAM] PTR struct .
  5144 ;;		 -> g1(239), 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5156 ;;      Params:        22       0       0       0       0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0
  5158 ;;      Temps:          0       0       0       0       0       0       0
  5159 ;;      Totals:        22       0       0       0       0       0       0
  5160 ;;Total ram usage:       22 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; Hardware stack levels required when called: 4
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_GameParameters_init
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text11
  5171  004B6A                     __ptext11:
  5172                           	callstack 0
  5173  004B6A                     _LCD_SliderCreate:
  5174                           	callstack 24
  5175  004B6A                     
  5176                           ;libraries/lcd_highlevel.c: 291: void LCD_SliderCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 292:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 293:                       uint16_t sldColor, uint16_t bgColor, u
      +                          int16_t borderColor,;libraries/lcd_highlevel.c: 294:                       uint16_t curs
      +                          orWidth,;libraries/lcd_highlevel.c: 295:                       uint16_t steps,;libraries
      +                          /lcd_highlevel.c: 296:                       void (* fpPress)(),;libraries/lcd_highlevel
      +                          .c: 297:                       sld_t * slider)
  5177  004B6A  C026  FFD9         	movff	LCD_SliderCreate@slider,fsr2l
  5178  004B6E  C027  FFDA         	movff	LCD_SliderCreate@slider+1,fsr2h
  5179  004B72  C012  FFDE         	movff	LCD_SliderCreate@posX,postinc2
  5180  004B76  C013  FFDD         	movff	LCD_SliderCreate@posX+1,postdec2
  5181  004B7A                     
  5182                           ;libraries/lcd_highlevel.c: 300:   slider->posY = posY;
  5183  004B7A  EE20 F002          	lfsr	2,2
  5184  004B7E  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5185  004B80  26D9               	addwf	fsr2l,f,c
  5186  004B82  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5187  004B84  22DA               	addwfc	fsr2h,f,c
  5188  004B86  C014  FFDE         	movff	LCD_SliderCreate@posY,postinc2
  5189  004B8A  C015  FFDD         	movff	LCD_SliderCreate@posY+1,postdec2
  5190  004B8E                     
  5191                           ;libraries/lcd_highlevel.c: 301:   slider->height = height;
  5192  004B8E  EE20 F006          	lfsr	2,6
  5193  004B92  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5194  004B94  26D9               	addwf	fsr2l,f,c
  5195  004B96  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5196  004B98  22DA               	addwfc	fsr2h,f,c
  5197  004B9A  C018  FFDE         	movff	LCD_SliderCreate@height,postinc2
  5198  004B9E  C019  FFDD         	movff	LCD_SliderCreate@height+1,postdec2
  5199  004BA2                     
  5200                           ;libraries/lcd_highlevel.c: 302:   slider->width = width;
  5201  004BA2  EE20 F004          	lfsr	2,4
  5202  004BA6  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5203  004BA8  26D9               	addwf	fsr2l,f,c
  5204  004BAA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5205  004BAC  22DA               	addwfc	fsr2h,f,c
  5206  004BAE  C016  FFDE         	movff	LCD_SliderCreate@width,postinc2
  5207  004BB2  C017  FFDD         	movff	LCD_SliderCreate@width+1,postdec2
  5208  004BB6                     
  5209                           ;libraries/lcd_highlevel.c: 303:   slider->sldColor = sldColor;
  5210  004BB6  EE20 F008          	lfsr	2,8
  5211  004BBA  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5212  004BBC  26D9               	addwf	fsr2l,f,c
  5213  004BBE  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5214  004BC0  22DA               	addwfc	fsr2h,f,c
  5215  004BC2  C01A  FFDE         	movff	LCD_SliderCreate@sldColor,postinc2
  5216  004BC6  C01B  FFDD         	movff	LCD_SliderCreate@sldColor+1,postdec2
  5217  004BCA                     
  5218                           ;libraries/lcd_highlevel.c: 304:   slider->bgColor = bgColor;
  5219  004BCA  EE20 F00A          	lfsr	2,10
  5220  004BCE  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5221  004BD0  26D9               	addwf	fsr2l,f,c
  5222  004BD2  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5223  004BD4  22DA               	addwfc	fsr2h,f,c
  5224  004BD6  C01C  FFDE         	movff	LCD_SliderCreate@bgColor,postinc2
  5225  004BDA  C01D  FFDD         	movff	LCD_SliderCreate@bgColor+1,postdec2
  5226  004BDE                     
  5227                           ;libraries/lcd_highlevel.c: 305:   slider->borderColor = borderColor;
  5228  004BDE  EE20 F00C          	lfsr	2,12
  5229  004BE2  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5230  004BE4  26D9               	addwf	fsr2l,f,c
  5231  004BE6  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5232  004BE8  22DA               	addwfc	fsr2h,f,c
  5233  004BEA  C01E  FFDE         	movff	LCD_SliderCreate@borderColor,postinc2
  5234  004BEE  C01F  FFDD         	movff	LCD_SliderCreate@borderColor+1,postdec2
  5235  004BF2                     
  5236                           ;libraries/lcd_highlevel.c: 306:   slider->cursorWidth = cursorWidth;
  5237  004BF2  EE20 F00E          	lfsr	2,14
  5238  004BF6  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5239  004BF8  26D9               	addwf	fsr2l,f,c
  5240  004BFA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5241  004BFC  22DA               	addwfc	fsr2h,f,c
  5242  004BFE  C020  FFDE         	movff	LCD_SliderCreate@cursorWidth,postinc2
  5243  004C02  C021  FFDD         	movff	LCD_SliderCreate@cursorWidth+1,postdec2
  5244  004C06                     
  5245                           ;libraries/lcd_highlevel.c: 307:   slider->fpPress = fpPress;
  5246  004C06  EE20 F017          	lfsr	2,23
  5247  004C0A  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5248  004C0C  26D9               	addwf	fsr2l,f,c
  5249  004C0E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5250  004C10  22DA               	addwfc	fsr2h,f,c
  5251  004C12  C024  FFDE         	movff	LCD_SliderCreate@fpPress,postinc2
  5252  004C16  C025  FFDD         	movff	LCD_SliderCreate@fpPress+1,postdec2
  5253  004C1A                     
  5254                           ;libraries/lcd_highlevel.c: 308:   slider->steps = steps;
  5255  004C1A  EE20 F015          	lfsr	2,21
  5256  004C1E  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5257  004C20  26D9               	addwf	fsr2l,f,c
  5258  004C22  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5259  004C24  22DA               	addwfc	fsr2h,f,c
  5260  004C26  C022  FFDE         	movff	LCD_SliderCreate@steps,postinc2
  5261  004C2A  C023  FFDD         	movff	LCD_SliderCreate@steps+1,postdec2
  5262  004C2E                     
  5263                           ;libraries/lcd_highlevel.c: 309:   slider->value = 0;
  5264  004C2E  EE20 F011          	lfsr	2,17
  5265  004C32  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5266  004C34  26D9               	addwf	fsr2l,f,c
  5267  004C36  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5268  004C38  22DA               	addwfc	fsr2h,f,c
  5269  004C3A  0E00               	movlw	0
  5270  004C3C  6EDE               	movwf	postinc2,c
  5271  004C3E  0E00               	movlw	0
  5272  004C40  6EDD               	movwf	postdec2,c
  5273  004C42                     
  5274                           ;libraries/lcd_highlevel.c: 310:   slider->oldValue = 0;
  5275  004C42  EE20 F013          	lfsr	2,19
  5276  004C46  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5277  004C48  26D9               	addwf	fsr2l,f,c
  5278  004C4A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5279  004C4C  22DA               	addwfc	fsr2h,f,c
  5280  004C4E  0E00               	movlw	0
  5281  004C50  6EDE               	movwf	postinc2,c
  5282  004C52  0E00               	movlw	0
  5283  004C54  6EDD               	movwf	postdec2,c
  5284  004C56  0012               	return		;funcret
  5285  004C58                     __end_of_LCD_SliderCreate:
  5286                           	callstack 0
  5287                           
  5288 ;; *************** function _LCD_ButtonCreate *****************
  5289 ;; Defined at:
  5290 ;;		line 396 in file "libraries/lcd_highlevel.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  posX            2   17[COMRAM] unsigned short 
  5293 ;;  posY            2   19[COMRAM] unsigned short 
  5294 ;;  width           2   21[COMRAM] unsigned short 
  5295 ;;  height          2   23[COMRAM] unsigned short 
  5296 ;;  txtColor        2   25[COMRAM] unsigned short 
  5297 ;;  bgColor         2   27[COMRAM] unsigned short 
  5298 ;;  textOrBmp       2   29[COMRAM] PTR const unsigned char 
  5299 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
  5300 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
  5301 ;;  font            2   31[COMRAM] PTR struct .
  5302 ;;		 -> arialNarrow_12ptFontInfo(7), 
  5303 ;;  fpPress         2   33[COMRAM] PTR FTN(unsigned char ,)
  5304 ;;		 -> Absolute function(1), 
  5305 ;;  fpReleased      2   35[COMRAM] PTR FTN(unsigned char ,)
  5306 ;;		 -> Absolute function(1), 
  5307 ;;  fpOut           2   37[COMRAM] PTR FTN(unsigned char ,)
  5308 ;;		 -> Absolute function(1), 
  5309 ;;  button          2   39[COMRAM] PTR struct .
  5310 ;;		 -> g1(239), 
  5311 ;;  index           1   41[COMRAM] unsigned char 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      void 
  5316 ;; Registers used:
  5317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5323 ;;      Params:        25       0       0       0       0       0       0
  5324 ;;      Locals:         0       0       0       0       0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0
  5326 ;;      Totals:        25       0       0       0       0       0       0
  5327 ;;Total ram usage:       25 bytes
  5328 ;; Hardware stack levels used: 1
  5329 ;; Hardware stack levels required when called: 4
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_GameParameters_init
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text12
  5338  00497C                     __ptext12:
  5339                           	callstack 0
  5340  00497C                     _LCD_ButtonCreate:
  5341                           	callstack 24
  5342  00497C                     
  5343                           ;libraries/lcd_highlevel.c: 396: void LCD_ButtonCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 397:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 398:                       uint16_t txtColor, uint16_t bgColor,;l
      +                          ibraries/lcd_highlevel.c: 399:                       const uint8_t * textOrBmp, FONT_INF
      +                          O * font,;libraries/lcd_highlevel.c: 400:                       void (*fpPress)(uint8_t)
      +                          , void (* fpReleased)(uint8_t), void (* fpOut)(uint8_t),;libraries/lcd_highlevel.c: 401:
      +                                                 btn_t * button,
  5344  00497C  C028  FFD9         	movff	LCD_ButtonCreate@button,fsr2l
  5345  004980  C029  FFDA         	movff	LCD_ButtonCreate@button+1,fsr2h
  5346  004984  C012  FFDE         	movff	LCD_ButtonCreate@posX,postinc2
  5347  004988  C013  FFDD         	movff	LCD_ButtonCreate@posX+1,postdec2
  5348  00498C                     
  5349                           ;libraries/lcd_highlevel.c: 405:   button->posY = posY;
  5350  00498C  EE20 F002          	lfsr	2,2
  5351  004990  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5352  004992  26D9               	addwf	fsr2l,f,c
  5353  004994  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5354  004996  22DA               	addwfc	fsr2h,f,c
  5355  004998  C014  FFDE         	movff	LCD_ButtonCreate@posY,postinc2
  5356  00499C  C015  FFDD         	movff	LCD_ButtonCreate@posY+1,postdec2
  5357  0049A0                     
  5358                           ;libraries/lcd_highlevel.c: 406:   button->height = height;
  5359  0049A0  EE20 F006          	lfsr	2,6
  5360  0049A4  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5361  0049A6  26D9               	addwf	fsr2l,f,c
  5362  0049A8  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5363  0049AA  22DA               	addwfc	fsr2h,f,c
  5364  0049AC  C018  FFDE         	movff	LCD_ButtonCreate@height,postinc2
  5365  0049B0  C019  FFDD         	movff	LCD_ButtonCreate@height+1,postdec2
  5366  0049B4                     
  5367                           ;libraries/lcd_highlevel.c: 407:   button->width = width;
  5368  0049B4  EE20 F004          	lfsr	2,4
  5369  0049B8  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5370  0049BA  26D9               	addwf	fsr2l,f,c
  5371  0049BC  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5372  0049BE  22DA               	addwfc	fsr2h,f,c
  5373  0049C0  C016  FFDE         	movff	LCD_ButtonCreate@width,postinc2
  5374  0049C4  C017  FFDD         	movff	LCD_ButtonCreate@width+1,postdec2
  5375  0049C8                     
  5376                           ;libraries/lcd_highlevel.c: 408:   button->txtColor = txtColor;
  5377  0049C8  EE20 F008          	lfsr	2,8
  5378  0049CC  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5379  0049CE  26D9               	addwf	fsr2l,f,c
  5380  0049D0  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5381  0049D2  22DA               	addwfc	fsr2h,f,c
  5382  0049D4  C01A  FFDE         	movff	LCD_ButtonCreate@txtColor,postinc2
  5383  0049D8  C01B  FFDD         	movff	LCD_ButtonCreate@txtColor+1,postdec2
  5384  0049DC                     
  5385                           ;libraries/lcd_highlevel.c: 409:   button->bgColor = bgColor;
  5386  0049DC  EE20 F00A          	lfsr	2,10
  5387  0049E0  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5388  0049E2  26D9               	addwf	fsr2l,f,c
  5389  0049E4  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5390  0049E6  22DA               	addwfc	fsr2h,f,c
  5391  0049E8  C01C  FFDE         	movff	LCD_ButtonCreate@bgColor,postinc2
  5392  0049EC  C01D  FFDD         	movff	LCD_ButtonCreate@bgColor+1,postdec2
  5393  0049F0                     
  5394                           ;libraries/lcd_highlevel.c: 410:   button->text = textOrBmp;
  5395  0049F0  EE20 F00C          	lfsr	2,12
  5396  0049F4  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5397  0049F6  26D9               	addwf	fsr2l,f,c
  5398  0049F8  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5399  0049FA  22DA               	addwfc	fsr2h,f,c
  5400  0049FC  C01E  FFDE         	movff	LCD_ButtonCreate@textOrBmp,postinc2
  5401  004A00  C01F  FFDD         	movff	LCD_ButtonCreate@textOrBmp+1,postdec2
  5402  004A04                     
  5403                           ;libraries/lcd_highlevel.c: 411:   button->font = font;
  5404  004A04  EE20 F00E          	lfsr	2,14
  5405  004A08  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5406  004A0A  26D9               	addwf	fsr2l,f,c
  5407  004A0C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5408  004A0E  22DA               	addwfc	fsr2h,f,c
  5409  004A10  C020  FFDE         	movff	LCD_ButtonCreate@font,postinc2
  5410  004A14  C021  FFDD         	movff	LCD_ButtonCreate@font+1,postdec2
  5411  004A18                     
  5412                           ;libraries/lcd_highlevel.c: 412:   button->fpPress = fpPress;
  5413  004A18  EE20 F011          	lfsr	2,17
  5414  004A1C  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5415  004A1E  26D9               	addwf	fsr2l,f,c
  5416  004A20  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5417  004A22  22DA               	addwfc	fsr2h,f,c
  5418  004A24  C022  FFDE         	movff	LCD_ButtonCreate@fpPress,postinc2
  5419  004A28  C023  FFDD         	movff	LCD_ButtonCreate@fpPress+1,postdec2
  5420  004A2C                     
  5421                           ;libraries/lcd_highlevel.c: 413:   button->fpReleased = fpReleased;
  5422  004A2C  EE20 F013          	lfsr	2,19
  5423  004A30  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5424  004A32  26D9               	addwf	fsr2l,f,c
  5425  004A34  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5426  004A36  22DA               	addwfc	fsr2h,f,c
  5427  004A38  C024  FFDE         	movff	LCD_ButtonCreate@fpReleased,postinc2
  5428  004A3C  C025  FFDD         	movff	LCD_ButtonCreate@fpReleased+1,postdec2
  5429  004A40                     
  5430                           ;libraries/lcd_highlevel.c: 414:   button->fpOut = fpOut;
  5431  004A40  EE20 F015          	lfsr	2,21
  5432  004A44  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5433  004A46  26D9               	addwf	fsr2l,f,c
  5434  004A48  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5435  004A4A  22DA               	addwfc	fsr2h,f,c
  5436  004A4C  C026  FFDE         	movff	LCD_ButtonCreate@fpOut,postinc2
  5437  004A50  C027  FFDD         	movff	LCD_ButtonCreate@fpOut+1,postdec2
  5438  004A54                     
  5439                           ;libraries/lcd_highlevel.c: 415:   button->index = index;
  5440  004A54  EE20 F017          	lfsr	2,23
  5441  004A58  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5442  004A5A  26D9               	addwf	fsr2l,f,c
  5443  004A5C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5444  004A5E  22DA               	addwfc	fsr2h,f,c
  5445  004A60  C02A  FFDF         	movff	LCD_ButtonCreate@index,indf2
  5446  004A64                     
  5447                           ;libraries/lcd_highlevel.c: 416:   button->pressed = 0;
  5448  004A64  EE20 F010          	lfsr	2,16
  5449  004A68  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5450  004A6A  26D9               	addwf	fsr2l,f,c
  5451  004A6C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5452  004A6E  22DA               	addwfc	fsr2h,f,c
  5453  004A70  0E00               	movlw	0
  5454  004A72  6EDF               	movwf	indf2,c
  5455  004A74  0012               	return		;funcret
  5456  004A76                     __end_of_LCD_ButtonCreate:
  5457                           	callstack 0
  5458                           
  5459 ;; *************** function _Ball_init *****************
  5460 ;; Defined at:
  5461 ;;		line 3 in file "class/ball.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  b               2   17[COMRAM] PTR struct Ball
  5464 ;;		 -> g1(239), 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5476 ;;      Params:         2       0       0       0       0       0       0
  5477 ;;      Locals:         0       0       0       0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0
  5479 ;;      Totals:         2       0       0       0       0       0       0
  5480 ;;Total ram usage:        2 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; Hardware stack levels required when called: 4
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_GameParameters_init
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text13
  5491  005BDA                     __ptext13:
  5492                           	callstack 0
  5493  005BDA                     _Ball_init:
  5494                           	callstack 24
  5495  005BDA                     
  5496                           ;class/ball.c: 3: void Ball_init(struct Ball* b);class/ball.c: 4: {;class/ball.c: 5:    
      +                           b->x = 90;
  5497  005BDA  C012  FFD9         	movff	Ball_init@b,fsr2l
  5498  005BDE  C013  FFDA         	movff	Ball_init@b+1,fsr2h
  5499  005BE2  0E5A               	movlw	90
  5500  005BE4  6EDE               	movwf	postinc2,c
  5501  005BE6  0E00               	movlw	0
  5502  005BE8  6EDD               	movwf	postdec2,c
  5503  005BEA                     
  5504                           ;class/ball.c: 6:     b->y = 150;
  5505  005BEA  EE20 F002          	lfsr	2,2
  5506  005BEE  5012               	movf	Ball_init@b^0,w,c
  5507  005BF0  26D9               	addwf	fsr2l,f,c
  5508  005BF2  5013               	movf	(Ball_init@b+1)^0,w,c
  5509  005BF4  22DA               	addwfc	fsr2h,f,c
  5510  005BF6  0E96               	movlw	150
  5511  005BF8  6EDE               	movwf	postinc2,c
  5512  005BFA  0E00               	movlw	0
  5513  005BFC  6EDD               	movwf	postdec2,c
  5514  005BFE                     
  5515                           ;class/ball.c: 7:     b->oldx=20;
  5516  005BFE  EE20 F004          	lfsr	2,4
  5517  005C02  5012               	movf	Ball_init@b^0,w,c
  5518  005C04  26D9               	addwf	fsr2l,f,c
  5519  005C06  5013               	movf	(Ball_init@b+1)^0,w,c
  5520  005C08  22DA               	addwfc	fsr2h,f,c
  5521  005C0A  0E14               	movlw	20
  5522  005C0C  6EDE               	movwf	postinc2,c
  5523  005C0E  0E00               	movlw	0
  5524  005C10  6EDD               	movwf	postdec2,c
  5525  005C12                     
  5526                           ;class/ball.c: 8:     b->oldy=20;
  5527  005C12  EE20 F006          	lfsr	2,6
  5528  005C16  5012               	movf	Ball_init@b^0,w,c
  5529  005C18  26D9               	addwf	fsr2l,f,c
  5530  005C1A  5013               	movf	(Ball_init@b+1)^0,w,c
  5531  005C1C  22DA               	addwfc	fsr2h,f,c
  5532  005C1E  0E14               	movlw	20
  5533  005C20  6EDE               	movwf	postinc2,c
  5534  005C22  0E00               	movlw	0
  5535  005C24  6EDD               	movwf	postdec2,c
  5536  005C26                     
  5537                           ;class/ball.c: 9:     b->dx = 0;
  5538  005C26  EE20 F008          	lfsr	2,8
  5539  005C2A  5012               	movf	Ball_init@b^0,w,c
  5540  005C2C  26D9               	addwf	fsr2l,f,c
  5541  005C2E  5013               	movf	(Ball_init@b+1)^0,w,c
  5542  005C30  22DA               	addwfc	fsr2h,f,c
  5543  005C32  0E00               	movlw	0
  5544  005C34  6EDE               	movwf	postinc2,c
  5545  005C36  0E00               	movlw	0
  5546  005C38  6EDD               	movwf	postdec2,c
  5547  005C3A                     
  5548                           ;class/ball.c: 10:     b->dy = 1;
  5549  005C3A  EE20 F00A          	lfsr	2,10
  5550  005C3E  5012               	movf	Ball_init@b^0,w,c
  5551  005C40  26D9               	addwf	fsr2l,f,c
  5552  005C42  5013               	movf	(Ball_init@b+1)^0,w,c
  5553  005C44  22DA               	addwfc	fsr2h,f,c
  5554  005C46  0E01               	movlw	1
  5555  005C48  6EDE               	movwf	postinc2,c
  5556  005C4A  0E00               	movlw	0
  5557  005C4C  6EDD               	movwf	postdec2,c
  5558  005C4E  0012               	return		;funcret
  5559  005C50                     __end_of_Ball_init:
  5560                           	callstack 0
  5561                           
  5562 ;; *************** function _Factory_exec *****************
  5563 ;; Defined at:
  5564 ;;		line 55 in file "class/factory.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;		None
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  ev              1    0[BANK1 ] unsigned char 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      void 
  5571 ;; Registers used:
  5572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5578 ;;      Params:         0       0       0       0       0       0       0
  5579 ;;      Locals:         0       0       1       0       0       0       0
  5580 ;;      Temps:          0       0       0       0       0       0       0
  5581 ;;      Totals:         0       0       1       0       0       0       0
  5582 ;;Total ram usage:        1 bytes
  5583 ;; Hardware stack levels used: 1
  5584 ;; Hardware stack levels required when called: 15
  5585 ;; This function calls:
  5586 ;;		_XF_popEvent
  5587 ;;		_displaySM
  5588 ;;		_gameControllerSM
  5589 ;;		_sleepSM
  5590 ;;		_touchScreenSM
  5591 ;; This function is called by:
  5592 ;;		_main
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text14
  5597  005F9A                     __ptext14:
  5598                           	callstack 0
  5599  005F9A                     _Factory_exec:
  5600                           	callstack 15
  5601  005F9A                     
  5602                           ;class/factory.c: 58:     Event ev;;class/factory.c: 59:     ev = XF_popEvent(0);
  5603  005F9A  0E00               	movlw	0
  5604  005F9C  EC9D  F02F         	call	_XF_popEvent
  5605  005FA0  0101               	movlb	1	; () banked
  5606  005FA2  6FEF               	movwf	Factory_exec@ev& (0+255),b
  5607  005FA4                     
  5608                           ; BSR set to: 1
  5609                           ;class/factory.c: 60:     if (ev != NULLEVENT)
  5610  005FA4  51EF               	movf	Factory_exec@ev& (0+255),w,b
  5611  005FA6  B4D8               	btfsc	status,2,c
  5612  005FA8  EFD8  F02F         	goto	u8061
  5613  005FAC  EFDA  F02F         	goto	u8060
  5614  005FB0                     u8061:
  5615  005FB0  EFF7  F02F         	goto	l104
  5616  005FB4                     u8060:
  5617  005FB4                     
  5618                           ; BSR set to: 1
  5619                           ;class/factory.c: 61:     {;class/factory.c: 62:         sleepSM(ev);
  5620  005FB4  51EF               	movf	Factory_exec@ev& (0+255),w,b
  5621  005FB6  EC45  F02C         	call	_sleepSM
  5622  005FBA                     
  5623                           ;class/factory.c: 63:         touchScreenSM(ev,&g1);
  5624  005FBA  0E00               	movlw	low _g1
  5625  005FBC  0100               	movlb	0	; () banked
  5626  005FBE  6FB0               	movwf	touchScreenSM@g& (0+255),b
  5627  005FC0  0E01               	movlw	high _g1
  5628  005FC2  6FB1               	movwf	(touchScreenSM@g+1)& (0+255),b
  5629  005FC4  0101               	movlb	1	; () banked
  5630  005FC6  51EF               	movf	Factory_exec@ev& (0+255),w,b
  5631  005FC8  ECE5  F02C         	call	_touchScreenSM
  5632  005FCC                     
  5633                           ;class/factory.c: 64:         displaySM(ev,&g1);
  5634  005FCC  0E00               	movlw	low _g1
  5635  005FCE  0100               	movlb	0	; () banked
  5636  005FD0  6FA3               	movwf	displaySM@g& (0+255),b
  5637  005FD2  0E01               	movlw	high _g1
  5638  005FD4  6FA4               	movwf	(displaySM@g+1)& (0+255),b
  5639  005FD6  0101               	movlb	1	; () banked
  5640  005FD8  51EF               	movf	Factory_exec@ev& (0+255),w,b
  5641  005FDA  EC3E  F024         	call	_displaySM
  5642  005FDE                     
  5643                           ;class/factory.c: 65:         gameControllerSM(ev,&g1);
  5644  005FDE  0E00               	movlw	low _g1
  5645  005FE0  6E3C               	movwf	gameControllerSM@g^0,c
  5646  005FE2  0E01               	movlw	high _g1
  5647  005FE4  6E3D               	movwf	(gameControllerSM@g+1)^0,c
  5648  005FE6  0101               	movlb	1	; () banked
  5649  005FE8  51EF               	movf	Factory_exec@ev& (0+255),w,b
  5650  005FEA  EC45  F028         	call	_gameControllerSM
  5651  005FEE                     l104:
  5652  005FEE  0012               	return		;funcret
  5653  005FF0                     __end_of_Factory_exec:
  5654                           	callstack 0
  5655                           
  5656 ;; *************** function _touchScreenSM *****************
  5657 ;; Defined at:
  5658 ;;		line 25 in file "stateMachine/touchScreenSM.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  ev              1    wreg     unsigned char 
  5661 ;;  g               2   80[BANK0 ] PTR struct GameParameter
  5662 ;;		 -> g1(239), 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  ev              1   84[BANK0 ] unsigned char 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      void 
  5667 ;; Registers used:
  5668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5674 ;;      Params:         0       2       0       0       0       0       0
  5675 ;;      Locals:         0       1       0       0       0       0       0
  5676 ;;      Temps:          0       2       0       0       0       0       0
  5677 ;;      Totals:         0       5       0       0       0       0       0
  5678 ;;Total ram usage:        5 bytes
  5679 ;; Hardware stack levels used: 1
  5680 ;; Hardware stack levels required when called: 13
  5681 ;; This function calls:
  5682 ;;		_touchScreenController
  5683 ;; This function is called by:
  5684 ;;		_Factory_exec
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text15
  5689  0059CA                     __ptext15:
  5690                           	callstack 0
  5691  0059CA                     _touchScreenSM:
  5692                           	callstack 16
  5693                           
  5694                           ;incstack = 0
  5695                           ;touchScreenSM@ev stored from wreg
  5696  0059CA  0100               	movlb	0	; () banked
  5697  0059CC  6FB4               	movwf	touchScreenSM@ev& (0+255),b
  5698  0059CE                     
  5699                           ;stateMachine/touchScreenSM.c: 25: void touchScreenSM(Event ev, GameParameters* g);state
      +                          Machine/touchScreenSM.c: 26: {;stateMachine/touchScreenSM.c: 27:     switch(touchScreenS
      +                          tate)
  5700  0059CE  EF18  F02D         	goto	l10378
  5701  0059D2                     l10360:
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;stateMachine/touchScreenSM.c: 30:             if(ev==evPress)
  5705  0059D2  05B4               	decf	touchScreenSM@ev& (0+255),w,b
  5706  0059D4  A4D8               	btfss	status,2,c
  5707  0059D6  EFEF  F02C         	goto	u7941
  5708  0059DA  EFF1  F02C         	goto	u7940
  5709  0059DE                     u7941:
  5710  0059DE  EF2E  F02D         	goto	l505
  5711  0059E2                     u7940:
  5712  0059E2                     
  5713                           ; BSR set to: 0
  5714                           ;stateMachine/touchScreenSM.c: 31:             {;stateMachine/touchScreenSM.c: 32:      
      +                                     touchScreenState=CALCULATEPOSITION;
  5715  0059E2  0E01               	movlw	1
  5716  0059E4  6FDE               	movwf	_touchScreenState& (0+255),b
  5717  0059E6                     l10364:
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;stateMachine/touchScreenSM.c: 33:                 touchScreenController(g);
  5721  0059E6  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  5722  0059EA  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  5723  0059EE  ECC1  F01A         	call	_touchScreenController	;wreg free
  5724  0059F2  EF2E  F02D         	goto	l505
  5725  0059F6                     l10366:
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;stateMachine/touchScreenSM.c: 37:             if(ev==evRelease)
  5729  0059F6  0E02               	movlw	2
  5730  0059F8  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  5731  0059FA  A4D8               	btfss	status,2,c
  5732  0059FC  EF02  F02D         	goto	u7951
  5733  005A00  EF04  F02D         	goto	u7950
  5734  005A04                     u7951:
  5735  005A04  EF0C  F02D         	goto	l10372
  5736  005A08                     u7950:
  5737  005A08                     
  5738                           ; BSR set to: 0
  5739                           ;stateMachine/touchScreenSM.c: 38:             {;stateMachine/touchScreenSM.c: 39:      
      +                                     touchScreenState=WAITING;
  5740  005A08  0E00               	movlw	0
  5741  005A0A  6FDE               	movwf	_touchScreenState& (0+255),b
  5742  005A0C                     
  5743                           ; BSR set to: 0
  5744                           ;stateMachine/touchScreenSM.c: 40:                 touchScreenController(g);
  5745  005A0C  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  5746  005A10  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  5747  005A14  ECC1  F01A         	call	_touchScreenController	;wreg free
  5748  005A18                     l10372:
  5749                           
  5750                           ;stateMachine/touchScreenSM.c: 42:             if(ev==evTimerPos)
  5751  005A18  0E04               	movlw	4
  5752  005A1A  0100               	movlb	0	; () banked
  5753  005A1C  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  5754  005A1E  A4D8               	btfss	status,2,c
  5755  005A20  EF14  F02D         	goto	u7961
  5756  005A24  EF16  F02D         	goto	u7960
  5757  005A28                     u7961:
  5758  005A28  EF2E  F02D         	goto	l505
  5759  005A2C                     u7960:
  5760  005A2C  EFF3  F02C         	goto	l10364
  5761  005A30                     l10378:
  5762  005A30  0100               	movlb	0	; () banked
  5763  005A32  51DE               	movf	_touchScreenState& (0+255),w,b
  5764  005A34  6FB2               	movwf	??_touchScreenSM& (0+255),b
  5765  005A36  6BB3               	clrf	(??_touchScreenSM+1)& (0+255),b
  5766                           
  5767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5768                           ; Switch size 1, requested type "simple"
  5769                           ; Number of cases is 1, Range of values is 0 to 0
  5770                           ; switch strategies available:
  5771                           ; Name         Instructions Cycles
  5772                           ; simple_byte            4     3 (average)
  5773                           ;	Chosen strategy is simple_byte
  5774  005A38  51B3               	movf	(??_touchScreenSM+1)& (0+255),w,b
  5775  005A3A  0A00               	xorlw	0	; case 0
  5776  005A3C  B4D8               	btfsc	status,2,c
  5777  005A3E  EF23  F02D         	goto	l10750
  5778  005A42  EF2E  F02D         	goto	l505
  5779  005A46                     l10750:
  5780                           
  5781                           ; BSR set to: 0
  5782                           ; Switch size 1, requested type "simple"
  5783                           ; Number of cases is 2, Range of values is 0 to 1
  5784                           ; switch strategies available:
  5785                           ; Name         Instructions Cycles
  5786                           ; simple_byte            7     4 (average)
  5787                           ;	Chosen strategy is simple_byte
  5788  005A46  51B2               	movf	??_touchScreenSM& (0+255),w,b
  5789  005A48  0A00               	xorlw	0	; case 0
  5790  005A4A  B4D8               	btfsc	status,2,c
  5791  005A4C  EFE9  F02C         	goto	l10360
  5792  005A50  0A01               	xorlw	1	; case 1
  5793  005A52  B4D8               	btfsc	status,2,c
  5794  005A54  EFFB  F02C         	goto	l10366
  5795  005A58  EF2E  F02D         	goto	l505
  5796  005A5C                     l505:
  5797  005A5C  0012               	return		;funcret
  5798  005A5E                     __end_of_touchScreenSM:
  5799                           	callstack 0
  5800                           
  5801 ;; *************** function _touchScreenController *****************
  5802 ;; Defined at:
  5803 ;;		line 54 in file "stateMachine/touchScreenSM.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;  g               2   48[BANK0 ] PTR struct GameParameter
  5806 ;;		 -> g1(239), 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  valueX          2   78[BANK0 ] unsigned short 
  5809 ;;  valueY          2   76[BANK0 ] unsigned short 
  5810 ;;  s              20   56[BANK0 ] unsigned char [20]
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5820 ;;      Params:         0       2       0       0       0       0       0
  5821 ;;      Locals:         0      24       0       0       0       0       0
  5822 ;;      Temps:          0       6       0       0       0       0       0
  5823 ;;      Totals:         0      32       0       0       0       0       0
  5824 ;;Total ram usage:       32 bytes
  5825 ;; Hardware stack levels used: 1
  5826 ;; Hardware stack levels required when called: 12
  5827 ;; This function calls:
  5828 ;;		_GameParameters_setX
  5829 ;;		_GameParameters_setY
  5830 ;;		_LCD_DrawText
  5831 ;;		_XF_scheduleTimer
  5832 ;;		___fldiv
  5833 ;;		___fltol
  5834 ;;		___xxtofl
  5835 ;;		_configMeasure
  5836 ;;		_configTouch
  5837 ;;		_sprintf
  5838 ;; This function is called by:
  5839 ;;		_touchScreenSM
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           	psect	text16
  5844  003582                     __ptext16:
  5845                           	callstack 0
  5846  003582                     _touchScreenController:
  5847                           	callstack 16
  5848  003582                     
  5849                           ;stateMachine/touchScreenSM.c: 54: void touchScreenController(GameParameters* g);stateMa
      +                          chine/touchScreenSM.c: 55: {;stateMachine/touchScreenSM.c: 56:     char s[20];;stateMach
      +                          ine/touchScreenSM.c: 58:     switch(touchScreenState)
  5850  003582  EFE0  F01B         	goto	l10256
  5851  003586                     l10212:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;stateMachine/touchScreenSM.c: 63:             configTouch();
  5855  003586  ECB4  F031         	call	_configTouch	;wreg free
  5856                           
  5857                           ;stateMachine/touchScreenSM.c: 65:             break;
  5858  00358A  EFF6  F01B         	goto	l522
  5859  00358E                     l511:
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;stateMachine/touchScreenSM.c: 70:             INT1IE=0;
  5863  00358E  96F0               	bcf	4080,3,c	;volatile
  5864  003590                     
  5865                           ; BSR set to: 0
  5866                           ;stateMachine/touchScreenSM.c: 71:             configMeasure(0);
  5867  003590  0E00               	movlw	0
  5868  003592  EC4C  F030         	call	_configMeasure
  5869  003596                     l512:
  5870  003596  B2C2               	btfsc	194,1,c	;volatile
  5871  003598  EFD0  F01A         	goto	u7821
  5872  00359C  EFD2  F01A         	goto	u7820
  5873  0035A0                     u7821:
  5874  0035A0  EFCB  F01A         	goto	l512
  5875  0035A4                     u7820:
  5876  0035A4                     
  5877                           ;stateMachine/touchScreenSM.c: 73:             uint16_t valueX;;stateMachine/touchScreen
      +                          SM.c: 74:             valueX=(ADRESH<<8)+ADRESL;
  5878  0035A4  50C4               	movf	196,w,c	;volatile
  5879  0035A6  0100               	movlb	0	; () banked
  5880  0035A8  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5881  0035AA  6B92               	clrf	??_touchScreenController& (0+255),b
  5882  0035AC  50C3               	movf	195,w,c	;volatile
  5883  0035AE  2592               	addwf	??_touchScreenController& (0+255),w,b
  5884  0035B0  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5885  0035B2  0E00               	movlw	0
  5886  0035B4  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  5887  0035B6  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5888                           
  5889                           ;stateMachine/touchScreenSM.c: 75:             if(valueX<=120)
  5890  0035B8  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  5891  0035BA  E107               	bnz	u7831
  5892  0035BC  0E79               	movlw	121
  5893  0035BE  5DAE               	subwf	touchScreenController@valueX& (0+255),w,b
  5894  0035C0  B0D8               	btfsc	status,0,c
  5895  0035C2  EFE5  F01A         	goto	u7831
  5896  0035C6  EFE7  F01A         	goto	u7830
  5897  0035CA                     u7831:
  5898  0035CA  EFEB  F01A         	goto	l10220
  5899  0035CE                     u7830:
  5900  0035CE                     
  5901                           ; BSR set to: 0
  5902                           ;stateMachine/touchScreenSM.c: 76:             {;stateMachine/touchScreenSM.c: 77:      
      +                                     valueX=120;
  5903  0035CE  0E00               	movlw	0
  5904  0035D0  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5905  0035D2  0E78               	movlw	120
  5906  0035D4  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5907  0035D6                     l10220:
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;stateMachine/touchScreenSM.c: 79:             valueX=(valueX-120)/2.35;
  5911  0035D6  0E66               	movlw	102
  5912  0035D8  6E24               	movwf	___fldiv@a^0,c
  5913  0035DA  0E66               	movlw	102
  5914  0035DC  6E25               	movwf	(___fldiv@a+1)^0,c
  5915  0035DE  0E16               	movlw	22
  5916  0035E0  6E26               	movwf	(___fldiv@a+2)^0,c
  5917  0035E2  0E40               	movlw	64
  5918  0035E4  6E27               	movwf	(___fldiv@a+3)^0,c
  5919  0035E6  0E88               	movlw	136
  5920  0035E8  6F92               	movwf	??_touchScreenController& (0+255),b
  5921  0035EA  0EFF               	movlw	255
  5922  0035EC  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5923  0035EE  C0AE  F094         	movff	touchScreenController@valueX,??_touchScreenController+2
  5924  0035F2  C0AF  F095         	movff	touchScreenController@valueX+1,??_touchScreenController+3
  5925  0035F6  5192               	movf	??_touchScreenController& (0+255),w,b
  5926  0035F8  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  5927  0035FA  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5928  0035FC  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  5929  0035FE  C094  F012         	movff	??_touchScreenController+2,___xxtofl@val
  5930  003602  C095  F013         	movff	??_touchScreenController+3,___xxtofl@val+1
  5931  003606  6A14               	clrf	(___xxtofl@val+2)^0,c
  5932  003608  6A15               	clrf	(___xxtofl@val+3)^0,c
  5933  00360A  0E00               	movlw	0
  5934  00360C  EC12  F01D         	call	___xxtofl
  5935  003610  C012  F020         	movff	?___xxtofl,___fldiv@b
  5936  003614  C013  F021         	movff	?___xxtofl+1,___fldiv@b+1
  5937  003618  C014  F022         	movff	?___xxtofl+2,___fldiv@b+2
  5938  00361C  C015  F023         	movff	?___xxtofl+3,___fldiv@b+3
  5939  003620  ECEA  F012         	call	___fldiv	;wreg free
  5940  003624  C020  F039         	movff	?___fldiv,___fltol@f1
  5941  003628  C021  F03A         	movff	?___fldiv+1,___fltol@f1+1
  5942  00362C  C022  F03B         	movff	?___fldiv+2,___fltol@f1+2
  5943  003630  C023  F03C         	movff	?___fldiv+3,___fltol@f1+3
  5944  003634  EC39  F023         	call	___fltol	;wreg free
  5945  003638  C039  F0AE         	movff	?___fltol,touchScreenController@valueX
  5946  00363C  C03A  F0AF         	movff	?___fltol+1,touchScreenController@valueX+1
  5947  003640                     
  5948                           ;stateMachine/touchScreenSM.c: 80:             valueX=240 -valueX;
  5949  003640  0100               	movlb	0	; () banked
  5950  003642  51AE               	movf	touchScreenController@valueX& (0+255),w,b
  5951  003644  08F0               	sublw	240
  5952  003646  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5953  003648  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  5954  00364A  A0D8               	btfss	status,0,c
  5955  00364C  2AE8               	incf	wreg,f,c
  5956  00364E  0800               	sublw	0
  5957  003650  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5958  003652                     
  5959                           ; BSR set to: 0
  5960                           ;stateMachine/touchScreenSM.c: 82:             configMeasure(1);
  5961  003652  0E01               	movlw	1
  5962  003654  EC4C  F030         	call	_configMeasure
  5963  003658                     l516:
  5964  003658  B2C2               	btfsc	194,1,c	;volatile
  5965  00365A  EF31  F01B         	goto	u7841
  5966  00365E  EF33  F01B         	goto	u7840
  5967  003662                     u7841:
  5968  003662  EF2C  F01B         	goto	l516
  5969  003666                     u7840:
  5970  003666                     
  5971                           ;stateMachine/touchScreenSM.c: 84:             uint16_t valueY;;stateMachine/touchScreen
      +                          SM.c: 85:             valueY=(ADRESH<<8)+ADRESL;
  5972  003666  50C4               	movf	196,w,c	;volatile
  5973  003668  0100               	movlb	0	; () banked
  5974  00366A  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5975  00366C  6B92               	clrf	??_touchScreenController& (0+255),b
  5976  00366E  50C3               	movf	195,w,c	;volatile
  5977  003670  2592               	addwf	??_touchScreenController& (0+255),w,b
  5978  003672  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  5979  003674  0E00               	movlw	0
  5980  003676  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  5981  003678  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  5982                           
  5983                           ;stateMachine/touchScreenSM.c: 86:             if(valueY<=105)
  5984  00367A  51AD               	movf	(touchScreenController@valueY+1)& (0+255),w,b
  5985  00367C  E107               	bnz	u7851
  5986  00367E  0E6A               	movlw	106
  5987  003680  5DAC               	subwf	touchScreenController@valueY& (0+255),w,b
  5988  003682  B0D8               	btfsc	status,0,c
  5989  003684  EF46  F01B         	goto	u7851
  5990  003688  EF48  F01B         	goto	u7850
  5991  00368C                     u7851:
  5992  00368C  EF4C  F01B         	goto	l10230
  5993  003690                     u7850:
  5994  003690                     
  5995                           ; BSR set to: 0
  5996                           ;stateMachine/touchScreenSM.c: 87:             {;stateMachine/touchScreenSM.c: 88:      
      +                                     valueY=105;
  5997  003690  0E00               	movlw	0
  5998  003692  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  5999  003694  0E69               	movlw	105
  6000  003696  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  6001  003698                     l10230:
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;stateMachine/touchScreenSM.c: 90:             valueY=(valueY-105)/2;
  6005  003698  0E97               	movlw	151
  6006  00369A  6F92               	movwf	??_touchScreenController& (0+255),b
  6007  00369C  0EFF               	movlw	255
  6008  00369E  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  6009  0036A0  C0AC  F094         	movff	touchScreenController@valueY,??_touchScreenController+2
  6010  0036A4  C0AD  F095         	movff	touchScreenController@valueY+1,??_touchScreenController+3
  6011  0036A8  5192               	movf	??_touchScreenController& (0+255),w,b
  6012  0036AA  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  6013  0036AC  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  6014  0036AE  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  6015  0036B0  90D8               	bcf	status,0,c
  6016  0036B2  3195               	rrcf	(??_touchScreenController+3)& (0+255),w,b
  6017  0036B4  6F96               	movwf	(??_touchScreenController+4)& (0+255),b
  6018  0036B6  3194               	rrcf	(??_touchScreenController+2)& (0+255),w,b
  6019  0036B8  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  6020  0036BA  C096  F0AD         	movff	??_touchScreenController+4,touchScreenController@valueY+1
  6021  0036BE                     
  6022                           ; BSR set to: 0
  6023                           ;stateMachine/touchScreenSM.c: 91:             XF_scheduleTimer(9,evTimerPos,0);
  6024  0036BE  0E00               	movlw	0
  6025  0036C0  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  6026  0036C2  0E09               	movlw	9
  6027  0036C4  6E13               	movwf	XF_scheduleTimer@tm^0,c
  6028  0036C6  0E04               	movlw	4
  6029  0036C8  6E15               	movwf	XF_scheduleTimer@ev^0,c
  6030  0036CA  0E00               	movlw	0
  6031  0036CC  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  6032  0036CE  EC28  F02E         	call	_XF_scheduleTimer	;wreg free
  6033  0036D2                     
  6034                           ;stateMachine/touchScreenSM.c: 94:             ADCON0=0b00101001;
  6035  0036D2  0E29               	movlw	41
  6036  0036D4  6EC2               	movwf	194,c	;volatile
  6037  0036D6                     
  6038                           ;stateMachine/touchScreenSM.c: 95:             configTouch();
  6039  0036D6  ECB4  F031         	call	_configTouch	;wreg free
  6040  0036DA                     
  6041                           ;stateMachine/touchScreenSM.c: 96:             INT1IF=0;
  6042  0036DA  90F0               	bcf	4080,0,c	;volatile
  6043  0036DC                     
  6044                           ;stateMachine/touchScreenSM.c: 97:             INT1IE=1;
  6045  0036DC  86F0               	bsf	4080,3,c	;volatile
  6046  0036DE                     
  6047                           ;stateMachine/touchScreenSM.c: 100:             if(PORTBbits.RB1 == 0)
  6048  0036DE  B281               	btfsc	129,1,c	;volatile
  6049  0036E0  EF74  F01B         	goto	u7861
  6050  0036E4  EF76  F01B         	goto	u7860
  6051  0036E8                     u7861:
  6052  0036E8  EFF6  F01B         	goto	l522
  6053  0036EC                     u7860:
  6054  0036EC                     
  6055                           ;stateMachine/touchScreenSM.c: 101:             {;stateMachine/touchScreenSM.c: 102:    
      +                                       sprintf(s,"X: %d",valueX);
  6056  0036EC  0E98               	movlw	low touchScreenController@s
  6057  0036EE  0100               	movlb	0	; () banked
  6058  0036F0  6F82               	movwf	sprintf@s& (0+255),b
  6059  0036F2  0E00               	movlw	high touchScreenController@s
  6060  0036F4  6F83               	movwf	(sprintf@s+1)& (0+255),b
  6061  0036F6  0EEB               	movlw	low STR_15
  6062  0036F8  6F84               	movwf	sprintf@fmt& (0+255),b
  6063  0036FA  0E7F               	movlw	high STR_15
  6064  0036FC  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  6065  0036FE  C0AE  F086         	movff	touchScreenController@valueX,?_sprintf+4
  6066  003702  C0AF  F087         	movff	touchScreenController@valueX+1,?_sprintf+5
  6067  003706  EC23  F030         	call	_sprintf	;wreg free
  6068  00370A                     
  6069                           ;stateMachine/touchScreenSM.c: 103:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,200,0b0000000000000000,0b1111111111111111);
  6070  00370A  0E98               	movlw	low touchScreenController@s
  6071  00370C  6E20               	movwf	LCD_DrawText@msg^0,c
  6072  00370E  0E00               	movlw	high touchScreenController@s
  6073  003710  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  6074  003712  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  6075  003714  6E22               	movwf	LCD_DrawText@font^0,c
  6076  003716  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  6077  003718  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  6078  00371A  0E01               	movlw	1
  6079  00371C  6E24               	movwf	LCD_DrawText@align^0,c
  6080  00371E  0E00               	movlw	0
  6081  003720  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  6082  003722  0EC8               	movlw	200
  6083  003724  6E25               	movwf	LCD_DrawText@posX^0,c
  6084  003726  0E00               	movlw	0
  6085  003728  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  6086  00372A  0EC8               	movlw	200
  6087  00372C  6E27               	movwf	LCD_DrawText@posY^0,c
  6088  00372E  0E00               	movlw	0
  6089  003730  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  6090  003732  0E00               	movlw	0
  6091  003734  6E29               	movwf	LCD_DrawText@color^0,c
  6092  003736  0EFF               	movlw	255
  6093  003738  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  6094  00373A  682B               	setf	LCD_DrawText@bg_color^0,c
  6095  00373C  ECDB  F00E         	call	_LCD_DrawText	;wreg free
  6096  003740                     
  6097                           ;stateMachine/touchScreenSM.c: 104:                 GameParameters_setX(g,valueX);
  6098  003740  C090  F012         	movff	touchScreenController@g,GameParameters_setX@s
  6099  003744  C091  F013         	movff	touchScreenController@g+1,GameParameters_setX@s+1
  6100  003748  C0AE  F014         	movff	touchScreenController@valueX,GameParameters_setX@value
  6101  00374C  C0AF  F015         	movff	touchScreenController@valueX+1,GameParameters_setX@value+1
  6102  003750  ECE4  F031         	call	_GameParameters_setX	;wreg free
  6103  003754                     
  6104                           ;stateMachine/touchScreenSM.c: 105:                 sprintf(s,"Y: %d",valueY);
  6105  003754  0E98               	movlw	low touchScreenController@s
  6106  003756  0100               	movlb	0	; () banked
  6107  003758  6F82               	movwf	sprintf@s& (0+255),b
  6108  00375A  0E00               	movlw	high touchScreenController@s
  6109  00375C  6F83               	movwf	(sprintf@s+1)& (0+255),b
  6110  00375E  0EF1               	movlw	low STR_16
  6111  003760  6F84               	movwf	sprintf@fmt& (0+255),b
  6112  003762  0E7F               	movlw	high STR_16
  6113  003764  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  6114  003766  C0AC  F086         	movff	touchScreenController@valueY,?_sprintf+4
  6115  00376A  C0AD  F087         	movff	touchScreenController@valueY+1,?_sprintf+5
  6116  00376E  EC23  F030         	call	_sprintf	;wreg free
  6117  003772                     
  6118                           ;stateMachine/touchScreenSM.c: 106:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,250,0b0000000000000000,0b1111111111111111);
  6119  003772  0E98               	movlw	low touchScreenController@s
  6120  003774  6E20               	movwf	LCD_DrawText@msg^0,c
  6121  003776  0E00               	movlw	high touchScreenController@s
  6122  003778  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  6123  00377A  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  6124  00377C  6E22               	movwf	LCD_DrawText@font^0,c
  6125  00377E  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  6126  003780  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  6127  003782  0E01               	movlw	1
  6128  003784  6E24               	movwf	LCD_DrawText@align^0,c
  6129  003786  0E00               	movlw	0
  6130  003788  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  6131  00378A  0EC8               	movlw	200
  6132  00378C  6E25               	movwf	LCD_DrawText@posX^0,c
  6133  00378E  0E00               	movlw	0
  6134  003790  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  6135  003792  0EFA               	movlw	250
  6136  003794  6E27               	movwf	LCD_DrawText@posY^0,c
  6137  003796  0E00               	movlw	0
  6138  003798  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  6139  00379A  0E00               	movlw	0
  6140  00379C  6E29               	movwf	LCD_DrawText@color^0,c
  6141  00379E  0EFF               	movlw	255
  6142  0037A0  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  6143  0037A2  682B               	setf	LCD_DrawText@bg_color^0,c
  6144  0037A4  ECDB  F00E         	call	_LCD_DrawText	;wreg free
  6145                           
  6146                           ;stateMachine/touchScreenSM.c: 107:                 GameParameters_setY(g,valueY);
  6147  0037A8  C090  F012         	movff	touchScreenController@g,GameParameters_setY@s
  6148  0037AC  C091  F013         	movff	touchScreenController@g+1,GameParameters_setY@s+1
  6149  0037B0  C0AC  F014         	movff	touchScreenController@valueY,GameParameters_setY@value
  6150  0037B4  C0AD  F015         	movff	touchScreenController@valueY+1,GameParameters_setY@value+1
  6151  0037B8  ECD9  F031         	call	_GameParameters_setY	;wreg free
  6152  0037BC  EFF6  F01B         	goto	l522
  6153  0037C0                     l10256:
  6154  0037C0  0100               	movlb	0	; () banked
  6155  0037C2  51DE               	movf	_touchScreenState& (0+255),w,b
  6156  0037C4  6F92               	movwf	??_touchScreenController& (0+255),b
  6157  0037C6  6B93               	clrf	(??_touchScreenController+1)& (0+255),b
  6158                           
  6159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6160                           ; Switch size 1, requested type "simple"
  6161                           ; Number of cases is 1, Range of values is 0 to 0
  6162                           ; switch strategies available:
  6163                           ; Name         Instructions Cycles
  6164                           ; simple_byte            4     3 (average)
  6165                           ;	Chosen strategy is simple_byte
  6166  0037C8  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  6167  0037CA  0A00               	xorlw	0	; case 0
  6168  0037CC  B4D8               	btfsc	status,2,c
  6169  0037CE  EFEB  F01B         	goto	l10752
  6170  0037D2  EFF6  F01B         	goto	l522
  6171  0037D6                     l10752:
  6172                           
  6173                           ; BSR set to: 0
  6174                           ; Switch size 1, requested type "simple"
  6175                           ; Number of cases is 2, Range of values is 0 to 1
  6176                           ; switch strategies available:
  6177                           ; Name         Instructions Cycles
  6178                           ; simple_byte            7     4 (average)
  6179                           ;	Chosen strategy is simple_byte
  6180  0037D6  5192               	movf	??_touchScreenController& (0+255),w,b
  6181  0037D8  0A00               	xorlw	0	; case 0
  6182  0037DA  B4D8               	btfsc	status,2,c
  6183  0037DC  EFC3  F01A         	goto	l10212
  6184  0037E0  0A01               	xorlw	1	; case 1
  6185  0037E2  B4D8               	btfsc	status,2,c
  6186  0037E4  EFC7  F01A         	goto	l511
  6187  0037E8  EFF6  F01B         	goto	l522
  6188  0037EC                     l522:
  6189  0037EC  0012               	return		;funcret
  6190  0037EE                     __end_of_touchScreenController:
  6191                           	callstack 0
  6192                           
  6193 ;; *************** function _configTouch *****************
  6194 ;; Defined at:
  6195 ;;		line 118 in file "stateMachine/touchScreenSM.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;		None
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6209 ;;      Params:         0       0       0       0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0
  6211 ;;      Temps:          0       0       0       0       0       0       0
  6212 ;;      Totals:         0       0       0       0       0       0       0
  6213 ;;Total ram usage:        0 bytes
  6214 ;; Hardware stack levels used: 1
  6215 ;; Hardware stack levels required when called: 4
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_touchScreenInit
  6220 ;;		_touchScreenController
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text17
  6225  006368                     __ptext17:
  6226                           	callstack 0
  6227  006368                     _configTouch:
  6228                           	callstack 23
  6229  006368                     
  6230                           ;stateMachine/touchScreenSM.c: 120:     ANSB1=0;
  6231  006368  010F               	movlb	15	; () banked
  6232  00636A  9339               	bcf	57,1,b	;volatile
  6233                           
  6234                           ;stateMachine/touchScreenSM.c: 121:     ANSB2=0;
  6235  00636C  9539               	bcf	57,2,b	;volatile
  6236                           
  6237                           ;stateMachine/touchScreenSM.c: 122:     TRISB2=0;
  6238  00636E  9493               	bcf	3987,2,c	;volatile
  6239                           
  6240                           ;stateMachine/touchScreenSM.c: 123:     LATB2=0;
  6241  006370  948A               	bcf	3978,2,c	;volatile
  6242                           
  6243                           ;stateMachine/touchScreenSM.c: 124:     TRISB1=1;
  6244  006372  8293               	bsf	3987,1,c	;volatile
  6245                           
  6246                           ;stateMachine/touchScreenSM.c: 125:     RBPU=0;
  6247  006374  9EF1               	bcf	4081,7,c	;volatile
  6248  006376                     
  6249                           ; BSR set to: 15
  6250                           ;stateMachine/touchScreenSM.c: 126:     WPUB=0b00000010;
  6251  006376  0E02               	movlw	2
  6252  006378  6E61               	movwf	97,c	;volatile
  6253  00637A                     
  6254                           ; BSR set to: 15
  6255                           ;stateMachine/touchScreenSM.c: 127:     INTEDG1=0;
  6256  00637A  9AF1               	bcf	4081,5,c	;volatile
  6257  00637C                     
  6258                           ; BSR set to: 15
  6259                           ;stateMachine/touchScreenSM.c: 128:     TRISB3=1;
  6260  00637C  8693               	bsf	3987,3,c	;volatile
  6261  00637E                     
  6262                           ; BSR set to: 15
  6263                           ;stateMachine/touchScreenSM.c: 129:     TRISB4=1;
  6264  00637E  8893               	bsf	3987,4,c	;volatile
  6265  006380                     
  6266                           ; BSR set to: 15
  6267                           ;stateMachine/touchScreenSM.c: 130:     INT1IE=1;
  6268  006380  86F0               	bsf	4080,3,c	;volatile
  6269  006382                     
  6270                           ; BSR set to: 15
  6271  006382  0012               	return		;funcret
  6272  006384                     __end_of_configTouch:
  6273                           	callstack 0
  6274                           
  6275 ;; *************** function _configMeasure *****************
  6276 ;; Defined at:
  6277 ;;		line 132 in file "stateMachine/touchScreenSM.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  channel         1    wreg     _Bool 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  channel         1   17[COMRAM] _Bool 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6291 ;;      Params:         0       0       0       0       0       0       0
  6292 ;;      Locals:         1       0       0       0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0
  6294 ;;      Totals:         1       0       0       0       0       0       0
  6295 ;;Total ram usage:        1 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; Hardware stack levels required when called: 4
  6298 ;; This function calls:
  6299 ;;		Nothing
  6300 ;; This function is called by:
  6301 ;;		_touchScreenController
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text18
  6306  006098                     __ptext18:
  6307                           	callstack 0
  6308  006098                     _configMeasure:
  6309                           	callstack 23
  6310                           
  6311                           ; BSR set to: 15
  6312                           ;incstack = 0
  6313                           ;configMeasure@channel stored from wreg
  6314  006098  6E12               	movwf	configMeasure@channel^0,c
  6315  00609A                     
  6316                           ;stateMachine/touchScreenSM.c: 132: void configMeasure(_Bool channel);stateMachine/touch
      +                          ScreenSM.c: 133: {;stateMachine/touchScreenSM.c: 134:     if(channel==0)
  6317  00609A  5012               	movf	configMeasure@channel^0,w,c
  6318  00609C  A4D8               	btfss	status,2,c
  6319  00609E  EF53  F030         	goto	u7251
  6320  0060A2  EF55  F030         	goto	u7250
  6321  0060A6                     u7251:
  6322  0060A6  EF60  F030         	goto	l9844
  6323  0060AA                     u7250:
  6324  0060AA                     
  6325                           ;stateMachine/touchScreenSM.c: 135:     {;stateMachine/touchScreenSM.c: 136:         ANS
      +                          B1=0;
  6326  0060AA  010F               	movlb	15	; () banked
  6327  0060AC  9339               	bcf	57,1,b	;volatile
  6328                           
  6329                           ;stateMachine/touchScreenSM.c: 137:         TRISB1=0;
  6330  0060AE  9293               	bcf	3987,1,c	;volatile
  6331                           
  6332                           ;stateMachine/touchScreenSM.c: 138:         LATB1=0;
  6333  0060B0  928A               	bcf	3978,1,c	;volatile
  6334                           
  6335                           ;stateMachine/touchScreenSM.c: 139:         TRISB3=0;
  6336  0060B2  9693               	bcf	3987,3,c	;volatile
  6337                           
  6338                           ;stateMachine/touchScreenSM.c: 140:         LATB3=1;
  6339  0060B4  868A               	bsf	3978,3,c	;volatile
  6340                           
  6341                           ;stateMachine/touchScreenSM.c: 141:         TRISB4=1;
  6342  0060B6  8893               	bsf	3987,4,c	;volatile
  6343                           
  6344                           ;stateMachine/touchScreenSM.c: 142:         TRISB2=1;
  6345  0060B8  8493               	bsf	3987,2,c	;volatile
  6346                           
  6347                           ;stateMachine/touchScreenSM.c: 143:         ANSB2=1;
  6348  0060BA  8539               	bsf	57,2,b	;volatile
  6349  0060BC                     
  6350                           ; BSR set to: 15
  6351                           ;stateMachine/touchScreenSM.c: 144:         ADCON0=0b00100011;
  6352  0060BC  0E23               	movlw	35
  6353  0060BE  6EC2               	movwf	194,c	;volatile
  6354  0060C0                     l9844:
  6355                           
  6356                           ;stateMachine/touchScreenSM.c: 146:     if(channel==1)
  6357  0060C0  0412               	decf	configMeasure@channel^0,w,c
  6358  0060C2  A4D8               	btfss	status,2,c
  6359  0060C4  EF66  F030         	goto	u7261
  6360  0060C8  EF68  F030         	goto	u7260
  6361  0060CC                     u7261:
  6362  0060CC  EF73  F030         	goto	l530
  6363  0060D0                     u7260:
  6364  0060D0                     
  6365                           ;stateMachine/touchScreenSM.c: 147:     {;stateMachine/touchScreenSM.c: 148:         ANS
      +                          B2=0;
  6366  0060D0  010F               	movlb	15	; () banked
  6367  0060D2  9539               	bcf	57,2,b	;volatile
  6368                           
  6369                           ;stateMachine/touchScreenSM.c: 149:         TRISB2=0;
  6370  0060D4  9493               	bcf	3987,2,c	;volatile
  6371                           
  6372                           ;stateMachine/touchScreenSM.c: 150:         LATB2=0;
  6373  0060D6  948A               	bcf	3978,2,c	;volatile
  6374                           
  6375                           ;stateMachine/touchScreenSM.c: 151:         TRISB4=0;
  6376  0060D8  9893               	bcf	3987,4,c	;volatile
  6377                           
  6378                           ;stateMachine/touchScreenSM.c: 152:         LATB4=1;
  6379  0060DA  888A               	bsf	3978,4,c	;volatile
  6380                           
  6381                           ;stateMachine/touchScreenSM.c: 153:         TRISB3=1;
  6382  0060DC  8693               	bsf	3987,3,c	;volatile
  6383                           
  6384                           ;stateMachine/touchScreenSM.c: 154:         TRISB1=1;
  6385  0060DE  8293               	bsf	3987,1,c	;volatile
  6386                           
  6387                           ;stateMachine/touchScreenSM.c: 155:         ANSB1=1;
  6388  0060E0  8339               	bsf	57,1,b	;volatile
  6389  0060E2                     
  6390                           ; BSR set to: 15
  6391                           ;stateMachine/touchScreenSM.c: 156:         ADCON0=0b00101011;
  6392  0060E2  0E2B               	movlw	43
  6393  0060E4  6EC2               	movwf	194,c	;volatile
  6394  0060E6                     l530:
  6395  0060E6  0012               	return		;funcret
  6396  0060E8                     __end_of_configMeasure:
  6397                           	callstack 0
  6398                           
  6399 ;; *************** function ___xxtofl *****************
  6400 ;; Defined at:
  6401 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  sign            1    wreg     unsigned char 
  6404 ;;  val             4   17[COMRAM] long 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;  sign            1   25[COMRAM] unsigned char 
  6407 ;;  arg             4   27[COMRAM] unsigned long 
  6408 ;;  exp             1   26[COMRAM] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  4   17[COMRAM] unsigned char 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6418 ;;      Params:         4       0       0       0       0       0       0
  6419 ;;      Locals:         6       0       0       0       0       0       0
  6420 ;;      Temps:          4       0       0       0       0       0       0
  6421 ;;      Totals:        14       0       0       0       0       0       0
  6422 ;;Total ram usage:       14 bytes
  6423 ;; Hardware stack levels used: 1
  6424 ;; Hardware stack levels required when called: 4
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_touchScreenController
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text19
  6433  003A24                     __ptext19:
  6434                           	callstack 0
  6435  003A24                     ___xxtofl:
  6436                           	callstack 23
  6437                           
  6438                           ;incstack = 0
  6439                           ;___xxtofl@sign stored from wreg
  6440  003A24  6E1A               	movwf	___xxtofl@sign^0,c
  6441  003A26  501A               	movf	___xxtofl@sign^0,w,c
  6442  003A28  B4D8               	btfsc	status,2,c
  6443  003A2A  EF19  F01D         	goto	u7721
  6444  003A2E  EF1B  F01D         	goto	u7720
  6445  003A32                     u7721:
  6446  003A32  EF3D  F01D         	goto	l1469
  6447  003A36                     u7720:
  6448  003A36  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  6449  003A38  EF22  F01D         	goto	u7730
  6450  003A3C  EF20  F01D         	goto	u7731
  6451  003A40                     u7731:
  6452  003A40  EF3D  F01D         	goto	l1469
  6453  003A44                     u7730:
  6454  003A44  C012  F016         	movff	___xxtofl@val,??___xxtofl
  6455  003A48  C013  F017         	movff	___xxtofl@val+1,??___xxtofl+1
  6456  003A4C  C014  F018         	movff	___xxtofl@val+2,??___xxtofl+2
  6457  003A50  C015  F019         	movff	___xxtofl@val+3,??___xxtofl+3
  6458  003A54  1E16               	comf	??___xxtofl^0,f,c
  6459  003A56  1E17               	comf	(??___xxtofl+1)^0,f,c
  6460  003A58  1E18               	comf	(??___xxtofl+2)^0,f,c
  6461  003A5A  1E19               	comf	(??___xxtofl+3)^0,f,c
  6462  003A5C  2A16               	incf	??___xxtofl^0,f,c
  6463  003A5E  0E00               	movlw	0
  6464  003A60  2217               	addwfc	(??___xxtofl+1)^0,f,c
  6465  003A62  2218               	addwfc	(??___xxtofl+2)^0,f,c
  6466  003A64  2219               	addwfc	(??___xxtofl+3)^0,f,c
  6467  003A66  C016  F01C         	movff	??___xxtofl,___xxtofl@arg
  6468  003A6A  C017  F01D         	movff	??___xxtofl+1,___xxtofl@arg+1
  6469  003A6E  C018  F01E         	movff	??___xxtofl+2,___xxtofl@arg+2
  6470  003A72  C019  F01F         	movff	??___xxtofl+3,___xxtofl@arg+3
  6471  003A76  EF45  F01D         	goto	l10138
  6472  003A7A                     l1469:
  6473  003A7A  C012  F01C         	movff	___xxtofl@val,___xxtofl@arg
  6474  003A7E  C013  F01D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6475  003A82  C014  F01E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6476  003A86  C015  F01F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6477  003A8A                     l10138:
  6478  003A8A  5012               	movf	___xxtofl@val^0,w,c
  6479  003A8C  1013               	iorwf	(___xxtofl@val+1)^0,w,c
  6480  003A8E  1014               	iorwf	(___xxtofl@val+2)^0,w,c
  6481  003A90  1015               	iorwf	(___xxtofl@val+3)^0,w,c
  6482  003A92  A4D8               	btfss	status,2,c
  6483  003A94  EF4E  F01D         	goto	u7741
  6484  003A98  EF50  F01D         	goto	u7740
  6485  003A9C                     u7741:
  6486  003A9C  EF5A  F01D         	goto	l10144
  6487  003AA0                     u7740:
  6488  003AA0  0E00               	movlw	0
  6489  003AA2  6E12               	movwf	?___xxtofl^0,c
  6490  003AA4  0E00               	movlw	0
  6491  003AA6  6E13               	movwf	(?___xxtofl+1)^0,c
  6492  003AA8  0E00               	movlw	0
  6493  003AAA  6E14               	movwf	(?___xxtofl+2)^0,c
  6494  003AAC  0E00               	movlw	0
  6495  003AAE  6E15               	movwf	(?___xxtofl+3)^0,c
  6496  003AB0  EFEB  F01D         	goto	l1472
  6497  003AB4                     l10144:
  6498  003AB4  0E96               	movlw	150
  6499  003AB6  6E1B               	movwf	___xxtofl@exp^0,c
  6500  003AB8  EF64  F01D         	goto	l10148
  6501  003ABC                     l10146:
  6502  003ABC  2A1B               	incf	___xxtofl@exp^0,f,c
  6503  003ABE  90D8               	bcf	status,0,c
  6504  003AC0  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  6505  003AC2  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  6506  003AC4  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  6507  003AC6  321C               	rrcf	___xxtofl@arg^0,f,c
  6508  003AC8                     l10148:
  6509  003AC8  0E00               	movlw	0
  6510  003ACA  141C               	andwf	___xxtofl@arg^0,w,c
  6511  003ACC  6E16               	movwf	??___xxtofl^0,c
  6512  003ACE  0E00               	movlw	0
  6513  003AD0  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  6514  003AD2  6E17               	movwf	(??___xxtofl+1)^0,c
  6515  003AD4  0E00               	movlw	0
  6516  003AD6  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  6517  003AD8  6E18               	movwf	(??___xxtofl+2)^0,c
  6518  003ADA  0EFE               	movlw	254
  6519  003ADC  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  6520  003ADE  6E19               	movwf	(??___xxtofl+3)^0,c
  6521  003AE0  5016               	movf	??___xxtofl^0,w,c
  6522  003AE2  1017               	iorwf	(??___xxtofl+1)^0,w,c
  6523  003AE4  1018               	iorwf	(??___xxtofl+2)^0,w,c
  6524  003AE6  1019               	iorwf	(??___xxtofl+3)^0,w,c
  6525  003AE8  A4D8               	btfss	status,2,c
  6526  003AEA  EF79  F01D         	goto	u7751
  6527  003AEE  EF7B  F01D         	goto	u7750
  6528  003AF2                     u7751:
  6529  003AF2  EF5E  F01D         	goto	l10146
  6530  003AF6                     u7750:
  6531  003AF6  EF89  F01D         	goto	l1476
  6532  003AFA                     l10150:
  6533  003AFA  2A1B               	incf	___xxtofl@exp^0,f,c
  6534  003AFC  0E01               	movlw	1
  6535  003AFE  261C               	addwf	___xxtofl@arg^0,f,c
  6536  003B00  0E00               	movlw	0
  6537  003B02  221D               	addwfc	(___xxtofl@arg+1)^0,f,c
  6538  003B04  221E               	addwfc	(___xxtofl@arg+2)^0,f,c
  6539  003B06  221F               	addwfc	(___xxtofl@arg+3)^0,f,c
  6540  003B08  90D8               	bcf	status,0,c
  6541  003B0A  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  6542  003B0C  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  6543  003B0E  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  6544  003B10  321C               	rrcf	___xxtofl@arg^0,f,c
  6545  003B12                     l1476:
  6546  003B12  0E00               	movlw	0
  6547  003B14  141C               	andwf	___xxtofl@arg^0,w,c
  6548  003B16  6E16               	movwf	??___xxtofl^0,c
  6549  003B18  0E00               	movlw	0
  6550  003B1A  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  6551  003B1C  6E17               	movwf	(??___xxtofl+1)^0,c
  6552  003B1E  0E00               	movlw	0
  6553  003B20  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  6554  003B22  6E18               	movwf	(??___xxtofl+2)^0,c
  6555  003B24  0EFF               	movlw	255
  6556  003B26  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  6557  003B28  6E19               	movwf	(??___xxtofl+3)^0,c
  6558  003B2A  5016               	movf	??___xxtofl^0,w,c
  6559  003B2C  1017               	iorwf	(??___xxtofl+1)^0,w,c
  6560  003B2E  1018               	iorwf	(??___xxtofl+2)^0,w,c
  6561  003B30  1019               	iorwf	(??___xxtofl+3)^0,w,c
  6562  003B32  A4D8               	btfss	status,2,c
  6563  003B34  EF9E  F01D         	goto	u7761
  6564  003B38  EFA0  F01D         	goto	u7760
  6565  003B3C                     u7761:
  6566  003B3C  EF7D  F01D         	goto	l10150
  6567  003B40                     u7760:
  6568  003B40  EFA8  F01D         	goto	l10158
  6569  003B44                     l10156:
  6570  003B44  061B               	decf	___xxtofl@exp^0,f,c
  6571  003B46  90D8               	bcf	status,0,c
  6572  003B48  361C               	rlcf	___xxtofl@arg^0,f,c
  6573  003B4A  361D               	rlcf	(___xxtofl@arg+1)^0,f,c
  6574  003B4C  361E               	rlcf	(___xxtofl@arg+2)^0,f,c
  6575  003B4E  361F               	rlcf	(___xxtofl@arg+3)^0,f,c
  6576  003B50                     l10158:
  6577  003B50  BE1E               	btfsc	(___xxtofl@arg+2)^0,7,c
  6578  003B52  EFAD  F01D         	goto	u7771
  6579  003B56  EFAF  F01D         	goto	u7770
  6580  003B5A                     u7771:
  6581  003B5A  EFB7  F01D         	goto	l1483
  6582  003B5E                     u7770:
  6583  003B5E  0E02               	movlw	2
  6584  003B60  601B               	cpfslt	___xxtofl@exp^0,c
  6585  003B62  EFB5  F01D         	goto	u7781
  6586  003B66  EFB7  F01D         	goto	u7780
  6587  003B6A                     u7781:
  6588  003B6A  EFA2  F01D         	goto	l10156
  6589  003B6E                     u7780:
  6590  003B6E                     l1483:
  6591  003B6E  B01B               	btfsc	___xxtofl@exp^0,0,c
  6592  003B70  EFBC  F01D         	goto	u7791
  6593  003B74  EFBE  F01D         	goto	u7790
  6594  003B78                     u7791:
  6595  003B78  EFBF  F01D         	goto	l10164
  6596  003B7C                     u7790:
  6597  003B7C  9E1E               	bcf	(___xxtofl@arg+2)^0,7,c
  6598  003B7E                     l10164:
  6599  003B7E  90D8               	bcf	status,0,c
  6600  003B80  321B               	rrcf	___xxtofl@exp^0,f,c
  6601  003B82  C01B  F016         	movff	___xxtofl@exp,??___xxtofl
  6602  003B86  6A17               	clrf	(??___xxtofl+1)^0,c
  6603  003B88  6A18               	clrf	(??___xxtofl+2)^0,c
  6604  003B8A  6A19               	clrf	(??___xxtofl+3)^0,c
  6605  003B8C  C016  F019         	movff	??___xxtofl,??___xxtofl+3
  6606  003B90  6A18               	clrf	(??___xxtofl+2)^0,c
  6607  003B92  6A17               	clrf	(??___xxtofl+1)^0,c
  6608  003B94  6A16               	clrf	??___xxtofl^0,c
  6609  003B96  5016               	movf	??___xxtofl^0,w,c
  6610  003B98  121C               	iorwf	___xxtofl@arg^0,f,c
  6611  003B9A  5017               	movf	(??___xxtofl+1)^0,w,c
  6612  003B9C  121D               	iorwf	(___xxtofl@arg+1)^0,f,c
  6613  003B9E  5018               	movf	(??___xxtofl+2)^0,w,c
  6614  003BA0  121E               	iorwf	(___xxtofl@arg+2)^0,f,c
  6615  003BA2  5019               	movf	(??___xxtofl+3)^0,w,c
  6616  003BA4  121F               	iorwf	(___xxtofl@arg+3)^0,f,c
  6617  003BA6  501A               	movf	___xxtofl@sign^0,w,c
  6618  003BA8  B4D8               	btfsc	status,2,c
  6619  003BAA  EFD9  F01D         	goto	u7801
  6620  003BAE  EFDB  F01D         	goto	u7800
  6621  003BB2                     u7801:
  6622  003BB2  EFE3  F01D         	goto	l10174
  6623  003BB6                     u7800:
  6624  003BB6  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  6625  003BB8  EFE2  F01D         	goto	u7810
  6626  003BBC  EFE0  F01D         	goto	u7811
  6627  003BC0                     u7811:
  6628  003BC0  EFE3  F01D         	goto	l10174
  6629  003BC4                     u7810:
  6630  003BC4  8E1F               	bsf	(___xxtofl@arg+3)^0,7,c
  6631  003BC6                     l10174:
  6632  003BC6  C01C  F012         	movff	___xxtofl@arg,?___xxtofl
  6633  003BCA  C01D  F013         	movff	___xxtofl@arg+1,?___xxtofl+1
  6634  003BCE  C01E  F014         	movff	___xxtofl@arg+2,?___xxtofl+2
  6635  003BD2  C01F  F015         	movff	___xxtofl@arg+3,?___xxtofl+3
  6636  003BD6                     l1472:
  6637  003BD6  0012               	return		;funcret
  6638  003BD8                     __end_of___xxtofl:
  6639                           	callstack 0
  6640                           
  6641 ;; *************** function ___fltol *****************
  6642 ;; Defined at:
  6643 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  f1              4   56[COMRAM] unsigned char 
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;  exp1            1   65[COMRAM] unsigned char 
  6648 ;;  sign1           1   64[COMRAM] unsigned char 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  4   56[COMRAM] long 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6658 ;;      Params:         4       0       0       0       0       0       0
  6659 ;;      Locals:         2       0       0       0       0       0       0
  6660 ;;      Temps:          4       0       0       0       0       0       0
  6661 ;;      Totals:        10       0       0       0       0       0       0
  6662 ;;Total ram usage:       10 bytes
  6663 ;; Hardware stack levels used: 1
  6664 ;; Hardware stack levels required when called: 4
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_touchScreenController
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text20
  6673  004672                     __ptext20:
  6674                           	callstack 0
  6675  004672                     ___fltol:
  6676                           	callstack 23
  6677  004672  343B               	rlcf	(___fltol@f1+2)^0,w,c
  6678  004674  343C               	rlcf	(___fltol@f1+3)^0,w,c
  6679  004676  6E42               	movwf	___fltol@exp1^0,c
  6680  004678  5042               	movf	___fltol@exp1^0,w,c
  6681  00467A  A4D8               	btfss	status,2,c
  6682  00467C  EF42  F023         	goto	u7651
  6683  004680  EF44  F023         	goto	u7650
  6684  004684                     u7651:
  6685  004684  EF4E  F023         	goto	l10094
  6686  004688                     u7650:
  6687  004688                     l10090:
  6688  004688  0E00               	movlw	0
  6689  00468A  6E39               	movwf	?___fltol^0,c
  6690  00468C  0E00               	movlw	0
  6691  00468E  6E3A               	movwf	(?___fltol+1)^0,c
  6692  004690  0E00               	movlw	0
  6693  004692  6E3B               	movwf	(?___fltol+2)^0,c
  6694  004694  0E00               	movlw	0
  6695  004696  6E3C               	movwf	(?___fltol+3)^0,c
  6696  004698  EFBB  F023         	goto	l1111
  6697  00469C                     l10094:
  6698  00469C  C039  F03D         	movff	___fltol@f1,??___fltol
  6699  0046A0  C03A  F03E         	movff	___fltol@f1+1,??___fltol+1
  6700  0046A4  C03B  F03F         	movff	___fltol@f1+2,??___fltol+2
  6701  0046A8  C03C  F040         	movff	___fltol@f1+3,??___fltol+3
  6702  0046AC  0E20               	movlw	32
  6703  0046AE  EF5E  F023         	goto	u7660
  6704  0046B2                     u7665:
  6705  0046B2  90D8               	bcf	status,0,c
  6706  0046B4  3240               	rrcf	(??___fltol+3)^0,f,c
  6707  0046B6  323F               	rrcf	(??___fltol+2)^0,f,c
  6708  0046B8  323E               	rrcf	(??___fltol+1)^0,f,c
  6709  0046BA  323D               	rrcf	??___fltol^0,f,c
  6710  0046BC                     u7660:
  6711  0046BC  2EE8               	decfsz	wreg,f,c
  6712  0046BE  EF59  F023         	goto	u7665
  6713  0046C2  503D               	movf	??___fltol^0,w,c
  6714  0046C4  6E41               	movwf	___fltol@sign1^0,c
  6715  0046C6  8E3B               	bsf	(___fltol@f1+2)^0,7,c
  6716  0046C8  0EFF               	movlw	255
  6717  0046CA  1639               	andwf	___fltol@f1^0,f,c
  6718  0046CC  0EFF               	movlw	255
  6719  0046CE  163A               	andwf	(___fltol@f1+1)^0,f,c
  6720  0046D0  0EFF               	movlw	255
  6721  0046D2  163B               	andwf	(___fltol@f1+2)^0,f,c
  6722  0046D4  0E00               	movlw	0
  6723  0046D6  163C               	andwf	(___fltol@f1+3)^0,f,c
  6724  0046D8  0E96               	movlw	150
  6725  0046DA  5E42               	subwf	___fltol@exp1^0,f,c
  6726  0046DC  BE42               	btfsc	___fltol@exp1^0,7,c
  6727  0046DE  EF75  F023         	goto	u7670
  6728  0046E2  EF73  F023         	goto	u7671
  6729  0046E6                     u7671:
  6730  0046E6  EF8B  F023         	goto	l10114
  6731  0046EA                     u7670:
  6732  0046EA  5042               	movf	___fltol@exp1^0,w,c
  6733  0046EC  0A80               	xorlw	128
  6734  0046EE  0F97               	addlw	151
  6735  0046F0  B0D8               	btfsc	status,0,c
  6736  0046F2  EF7D  F023         	goto	u7681
  6737  0046F6  EF7F  F023         	goto	u7680
  6738  0046FA                     u7681:
  6739  0046FA  EF81  F023         	goto	l10110
  6740  0046FE                     u7680:
  6741  0046FE  EF44  F023         	goto	l10090
  6742  004702                     l10110:
  6743  004702  90D8               	bcf	status,0,c
  6744  004704  323C               	rrcf	(___fltol@f1+3)^0,f,c
  6745  004706  323B               	rrcf	(___fltol@f1+2)^0,f,c
  6746  004708  323A               	rrcf	(___fltol@f1+1)^0,f,c
  6747  00470A  3239               	rrcf	___fltol@f1^0,f,c
  6748  00470C  3E42               	incfsz	___fltol@exp1^0,f,c
  6749  00470E  EF81  F023         	goto	l10110
  6750  004712  EFA3  F023         	goto	l10124
  6751  004716                     l10114:
  6752  004716  0E1F               	movlw	31
  6753  004718  6442               	cpfsgt	___fltol@exp1^0,c
  6754  00471A  EF91  F023         	goto	u7691
  6755  00471E  EF93  F023         	goto	u7690
  6756  004722                     u7691:
  6757  004722  EF9B  F023         	goto	l10122
  6758  004726                     u7690:
  6759  004726  EF44  F023         	goto	l10090
  6760  00472A                     l10120:
  6761  00472A  90D8               	bcf	status,0,c
  6762  00472C  3639               	rlcf	___fltol@f1^0,f,c
  6763  00472E  363A               	rlcf	(___fltol@f1+1)^0,f,c
  6764  004730  363B               	rlcf	(___fltol@f1+2)^0,f,c
  6765  004732  363C               	rlcf	(___fltol@f1+3)^0,f,c
  6766  004734  0642               	decf	___fltol@exp1^0,f,c
  6767  004736                     l10122:
  6768  004736  5042               	movf	___fltol@exp1^0,w,c
  6769  004738  A4D8               	btfss	status,2,c
  6770  00473A  EFA1  F023         	goto	u7701
  6771  00473E  EFA3  F023         	goto	u7700
  6772  004742                     u7701:
  6773  004742  EF95  F023         	goto	l10120
  6774  004746                     u7700:
  6775  004746                     l10124:
  6776  004746  5041               	movf	___fltol@sign1^0,w,c
  6777  004748  B4D8               	btfsc	status,2,c
  6778  00474A  EFA9  F023         	goto	u7711
  6779  00474E  EFAB  F023         	goto	u7710
  6780  004752                     u7711:
  6781  004752  EFB3  F023         	goto	l10128
  6782  004756                     u7710:
  6783  004756  1E3C               	comf	(___fltol@f1+3)^0,f,c
  6784  004758  1E3B               	comf	(___fltol@f1+2)^0,f,c
  6785  00475A  1E3A               	comf	(___fltol@f1+1)^0,f,c
  6786  00475C  6C39               	negf	___fltol@f1^0,c
  6787  00475E  0E00               	movlw	0
  6788  004760  223A               	addwfc	(___fltol@f1+1)^0,f,c
  6789  004762  223B               	addwfc	(___fltol@f1+2)^0,f,c
  6790  004764  223C               	addwfc	(___fltol@f1+3)^0,f,c
  6791  004766                     l10128:
  6792  004766  C039  F039         	movff	___fltol@f1,?___fltol
  6793  00476A  C03A  F03A         	movff	___fltol@f1+1,?___fltol+1
  6794  00476E  C03B  F03B         	movff	___fltol@f1+2,?___fltol+2
  6795  004772  C03C  F03C         	movff	___fltol@f1+3,?___fltol+3
  6796  004776                     l1111:
  6797  004776  0012               	return		;funcret
  6798  004778                     __end_of___fltol:
  6799                           	callstack 0
  6800                           
  6801 ;; *************** function ___fldiv *****************
  6802 ;; Defined at:
  6803 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  b               4   31[COMRAM] long 
  6806 ;;  a               4   35[COMRAM] long 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  grs             4   50[COMRAM] unsigned long 
  6809 ;;  rem             4   43[COMRAM] unsigned long 
  6810 ;;  new_exp         2   48[COMRAM] short 
  6811 ;;  aexp            1   55[COMRAM] unsigned char 
  6812 ;;  bexp            1   54[COMRAM] unsigned char 
  6813 ;;  sign            1   47[COMRAM] unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  4   31[COMRAM] unsigned char 
  6816 ;; Registers used:
  6817 ;;		wreg, status,2, status,0
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6823 ;;      Params:         8       0       0       0       0       0       0
  6824 ;;      Locals:        13       0       0       0       0       0       0
  6825 ;;      Temps:          4       0       0       0       0       0       0
  6826 ;;      Totals:        25       0       0       0       0       0       0
  6827 ;;Total ram usage:       25 bytes
  6828 ;; Hardware stack levels used: 1
  6829 ;; Hardware stack levels required when called: 4
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		_touchScreenController
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text21
  6838  0025D4                     __ptext21:
  6839                           	callstack 0
  6840  0025D4                     ___fldiv:
  6841                           	callstack 23
  6842  0025D4  5023               	movf	(___fldiv@b+3)^0,w,c
  6843  0025D6  0B80               	andlw	128
  6844  0025D8  6E30               	movwf	___fldiv@sign^0,c
  6845  0025DA  5023               	movf	(___fldiv@b+3)^0,w,c
  6846  0025DC  2423               	addwf	(___fldiv@b+3)^0,w,c
  6847  0025DE  6E37               	movwf	___fldiv@bexp^0,c
  6848  0025E0  AE22               	btfss	(___fldiv@b+2)^0,7,c
  6849  0025E2  EFF5  F012         	goto	u7421
  6850  0025E6  EFF7  F012         	goto	u7420
  6851  0025EA                     u7421:
  6852  0025EA  EFF8  F012         	goto	l9956
  6853  0025EE                     u7420:
  6854  0025EE  8037               	bsf	___fldiv@bexp^0,0,c
  6855  0025F0                     l9956:
  6856  0025F0  5037               	movf	___fldiv@bexp^0,w,c
  6857  0025F2  B4D8               	btfsc	status,2,c
  6858  0025F4  EFFE  F012         	goto	u7431
  6859  0025F8  EF00  F013         	goto	u7430
  6860  0025FC                     u7431:
  6861  0025FC  EF15  F013         	goto	l9966
  6862  002600                     u7430:
  6863  002600  2837               	incf	___fldiv@bexp^0,w,c
  6864  002602  A4D8               	btfss	status,2,c
  6865  002604  EF06  F013         	goto	u7441
  6866  002608  EF08  F013         	goto	u7440
  6867  00260C                     u7441:
  6868  00260C  EF10  F013         	goto	l9962
  6869  002610                     u7440:
  6870  002610  0E00               	movlw	0
  6871  002612  6E20               	movwf	___fldiv@b^0,c
  6872  002614  0E00               	movlw	0
  6873  002616  6E21               	movwf	(___fldiv@b+1)^0,c
  6874  002618  0E00               	movlw	0
  6875  00261A  6E22               	movwf	(___fldiv@b+2)^0,c
  6876  00261C  0E00               	movlw	0
  6877  00261E  6E23               	movwf	(___fldiv@b+3)^0,c
  6878  002620                     l9962:
  6879  002620  8E22               	bsf	(___fldiv@b+2)^0,7,c
  6880  002622  0E00               	movlw	0
  6881  002624  6E23               	movwf	(___fldiv@b+3)^0,c
  6882  002626  EF1D  F013         	goto	l9968
  6883  00262A                     l9966:
  6884  00262A  0E00               	movlw	0
  6885  00262C  6E20               	movwf	___fldiv@b^0,c
  6886  00262E  0E00               	movlw	0
  6887  002630  6E21               	movwf	(___fldiv@b+1)^0,c
  6888  002632  0E00               	movlw	0
  6889  002634  6E22               	movwf	(___fldiv@b+2)^0,c
  6890  002636  0E00               	movlw	0
  6891  002638  6E23               	movwf	(___fldiv@b+3)^0,c
  6892  00263A                     l9968:
  6893  00263A  5027               	movf	(___fldiv@a+3)^0,w,c
  6894  00263C  0B80               	andlw	128
  6895  00263E  1A30               	xorwf	___fldiv@sign^0,f,c
  6896  002640  5027               	movf	(___fldiv@a+3)^0,w,c
  6897  002642  2427               	addwf	(___fldiv@a+3)^0,w,c
  6898  002644  6E38               	movwf	___fldiv@aexp^0,c
  6899  002646  AE26               	btfss	(___fldiv@a+2)^0,7,c
  6900  002648  EF28  F013         	goto	u7451
  6901  00264C  EF2A  F013         	goto	u7450
  6902  002650                     u7451:
  6903  002650  EF2B  F013         	goto	l9976
  6904  002654                     u7450:
  6905  002654  8038               	bsf	___fldiv@aexp^0,0,c
  6906  002656                     l9976:
  6907  002656  5038               	movf	___fldiv@aexp^0,w,c
  6908  002658  B4D8               	btfsc	status,2,c
  6909  00265A  EF31  F013         	goto	u7461
  6910  00265E  EF33  F013         	goto	u7460
  6911  002662                     u7461:
  6912  002662  EF48  F013         	goto	l9986
  6913  002666                     u7460:
  6914  002666  2838               	incf	___fldiv@aexp^0,w,c
  6915  002668  A4D8               	btfss	status,2,c
  6916  00266A  EF39  F013         	goto	u7471
  6917  00266E  EF3B  F013         	goto	u7470
  6918  002672                     u7471:
  6919  002672  EF43  F013         	goto	l9982
  6920  002676                     u7470:
  6921  002676  0E00               	movlw	0
  6922  002678  6E24               	movwf	___fldiv@a^0,c
  6923  00267A  0E00               	movlw	0
  6924  00267C  6E25               	movwf	(___fldiv@a+1)^0,c
  6925  00267E  0E00               	movlw	0
  6926  002680  6E26               	movwf	(___fldiv@a+2)^0,c
  6927  002682  0E00               	movlw	0
  6928  002684  6E27               	movwf	(___fldiv@a+3)^0,c
  6929  002686                     l9982:
  6930  002686  8E26               	bsf	(___fldiv@a+2)^0,7,c
  6931  002688  0E00               	movlw	0
  6932  00268A  6E27               	movwf	(___fldiv@a+3)^0,c
  6933  00268C  EF50  F013         	goto	l9988
  6934  002690                     l9986:
  6935  002690  0E00               	movlw	0
  6936  002692  6E24               	movwf	___fldiv@a^0,c
  6937  002694  0E00               	movlw	0
  6938  002696  6E25               	movwf	(___fldiv@a+1)^0,c
  6939  002698  0E00               	movlw	0
  6940  00269A  6E26               	movwf	(___fldiv@a+2)^0,c
  6941  00269C  0E00               	movlw	0
  6942  00269E  6E27               	movwf	(___fldiv@a+3)^0,c
  6943  0026A0                     l9988:
  6944  0026A0  5024               	movf	___fldiv@a^0,w,c
  6945  0026A2  1025               	iorwf	(___fldiv@a+1)^0,w,c
  6946  0026A4  1026               	iorwf	(___fldiv@a+2)^0,w,c
  6947  0026A6  1027               	iorwf	(___fldiv@a+3)^0,w,c
  6948  0026A8  A4D8               	btfss	status,2,c
  6949  0026AA  EF59  F013         	goto	u7481
  6950  0026AE  EF5B  F013         	goto	u7480
  6951  0026B2                     u7481:
  6952  0026B2  EF73  F013         	goto	l10000
  6953  0026B6                     u7480:
  6954  0026B6  0E00               	movlw	0
  6955  0026B8  6E20               	movwf	___fldiv@b^0,c
  6956  0026BA  0E00               	movlw	0
  6957  0026BC  6E21               	movwf	(___fldiv@b+1)^0,c
  6958  0026BE  0E00               	movlw	0
  6959  0026C0  6E22               	movwf	(___fldiv@b+2)^0,c
  6960  0026C2  0E00               	movlw	0
  6961  0026C4  6E23               	movwf	(___fldiv@b+3)^0,c
  6962  0026C6  0E80               	movlw	128
  6963  0026C8  1222               	iorwf	(___fldiv@b+2)^0,f,c
  6964  0026CA  0E7F               	movlw	127
  6965  0026CC  1223               	iorwf	(___fldiv@b+3)^0,f,c
  6966  0026CE                     l9994:
  6967  0026CE  5030               	movf	___fldiv@sign^0,w,c
  6968  0026D0  1223               	iorwf	(___fldiv@b+3)^0,f,c
  6969  0026D2  C020  F020         	movff	___fldiv@b,?___fldiv
  6970  0026D6  C021  F021         	movff	___fldiv@b+1,?___fldiv+1
  6971  0026DA  C022  F022         	movff	___fldiv@b+2,?___fldiv+2
  6972  0026DE  C023  F023         	movff	___fldiv@b+3,?___fldiv+3
  6973  0026E2  EFB6  F014         	goto	l1396
  6974  0026E6                     l10000:
  6975  0026E6  5037               	movf	___fldiv@bexp^0,w,c
  6976  0026E8  A4D8               	btfss	status,2,c
  6977  0026EA  EF79  F013         	goto	u7491
  6978  0026EE  EF7B  F013         	goto	u7490
  6979  0026F2                     u7491:
  6980  0026F2  EF85  F013         	goto	l10008
  6981  0026F6                     u7490:
  6982  0026F6  0E00               	movlw	0
  6983  0026F8  6E20               	movwf	?___fldiv^0,c
  6984  0026FA  0E00               	movlw	0
  6985  0026FC  6E21               	movwf	(?___fldiv+1)^0,c
  6986  0026FE  0E00               	movlw	0
  6987  002700  6E22               	movwf	(?___fldiv+2)^0,c
  6988  002702  0E00               	movlw	0
  6989  002704  6E23               	movwf	(?___fldiv+3)^0,c
  6990  002706  EFB6  F014         	goto	l1396
  6991  00270A                     l10008:
  6992  00270A  5038               	movf	___fldiv@aexp^0,w,c
  6993  00270C  C037  F028         	movff	___fldiv@bexp,??___fldiv
  6994  002710  6A29               	clrf	(??___fldiv+1)^0,c
  6995  002712  5E28               	subwf	??___fldiv^0,f,c
  6996  002714  0E00               	movlw	0
  6997  002716  5A29               	subwfb	(??___fldiv+1)^0,f,c
  6998  002718  0E7F               	movlw	127
  6999  00271A  2428               	addwf	??___fldiv^0,w,c
  7000  00271C  6E31               	movwf	___fldiv@new_exp^0,c
  7001  00271E  0E00               	movlw	0
  7002  002720  2029               	addwfc	(??___fldiv+1)^0,w,c
  7003  002722  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  7004  002724  C020  F02C         	movff	___fldiv@b,___fldiv@rem
  7005  002728  C021  F02D         	movff	___fldiv@b+1,___fldiv@rem+1
  7006  00272C  C022  F02E         	movff	___fldiv@b+2,___fldiv@rem+2
  7007  002730  C023  F02F         	movff	___fldiv@b+3,___fldiv@rem+3
  7008  002734  0E00               	movlw	0
  7009  002736  6E20               	movwf	___fldiv@b^0,c
  7010  002738  0E00               	movlw	0
  7011  00273A  6E21               	movwf	(___fldiv@b+1)^0,c
  7012  00273C  0E00               	movlw	0
  7013  00273E  6E22               	movwf	(___fldiv@b+2)^0,c
  7014  002740  0E00               	movlw	0
  7015  002742  6E23               	movwf	(___fldiv@b+3)^0,c
  7016  002744  0E00               	movlw	0
  7017  002746  6E33               	movwf	___fldiv@grs^0,c
  7018  002748  0E00               	movlw	0
  7019  00274A  6E34               	movwf	(___fldiv@grs+1)^0,c
  7020  00274C  0E00               	movlw	0
  7021  00274E  6E35               	movwf	(___fldiv@grs+2)^0,c
  7022  002750  0E00               	movlw	0
  7023  002752  6E36               	movwf	(___fldiv@grs+3)^0,c
  7024  002754  0E00               	movlw	0
  7025  002756  6E38               	movwf	___fldiv@aexp^0,c
  7026  002758  EFE6  F013         	goto	l1398
  7027  00275C                     l10018:
  7028  00275C  5038               	movf	___fldiv@aexp^0,w,c
  7029  00275E  B4D8               	btfsc	status,2,c
  7030  002760  EFB4  F013         	goto	u7501
  7031  002764  EFB6  F013         	goto	u7500
  7032  002768                     u7501:
  7033  002768  EFCD  F013         	goto	l10026
  7034  00276C                     u7500:
  7035  00276C  90D8               	bcf	status,0,c
  7036  00276E  362C               	rlcf	___fldiv@rem^0,f,c
  7037  002770  362D               	rlcf	(___fldiv@rem+1)^0,f,c
  7038  002772  362E               	rlcf	(___fldiv@rem+2)^0,f,c
  7039  002774  362F               	rlcf	(___fldiv@rem+3)^0,f,c
  7040  002776  90D8               	bcf	status,0,c
  7041  002778  3620               	rlcf	___fldiv@b^0,f,c
  7042  00277A  3621               	rlcf	(___fldiv@b+1)^0,f,c
  7043  00277C  3622               	rlcf	(___fldiv@b+2)^0,f,c
  7044  00277E  3623               	rlcf	(___fldiv@b+3)^0,f,c
  7045  002780  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  7046  002782  EFC5  F013         	goto	u7511
  7047  002786  EFC7  F013         	goto	u7510
  7048  00278A                     u7511:
  7049  00278A  EFC8  F013         	goto	l1401
  7050  00278E                     u7510:
  7051  00278E  8020               	bsf	___fldiv@b^0,0,c
  7052  002790                     l1401:
  7053  002790  90D8               	bcf	status,0,c
  7054  002792  3633               	rlcf	___fldiv@grs^0,f,c
  7055  002794  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  7056  002796  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  7057  002798  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  7058  00279A                     l10026:
  7059  00279A  5024               	movf	___fldiv@a^0,w,c
  7060  00279C  5C2C               	subwf	___fldiv@rem^0,w,c
  7061  00279E  5025               	movf	(___fldiv@a+1)^0,w,c
  7062  0027A0  582D               	subwfb	(___fldiv@rem+1)^0,w,c
  7063  0027A2  5026               	movf	(___fldiv@a+2)^0,w,c
  7064  0027A4  582E               	subwfb	(___fldiv@rem+2)^0,w,c
  7065  0027A6  5027               	movf	(___fldiv@a+3)^0,w,c
  7066  0027A8  582F               	subwfb	(___fldiv@rem+3)^0,w,c
  7067  0027AA  A0D8               	btfss	status,0,c
  7068  0027AC  EFDA  F013         	goto	u7521
  7069  0027B0  EFDC  F013         	goto	u7520
  7070  0027B4                     u7521:
  7071  0027B4  EFE5  F013         	goto	l10032
  7072  0027B8                     u7520:
  7073  0027B8  8C36               	bsf	(___fldiv@grs+3)^0,6,c
  7074  0027BA  5024               	movf	___fldiv@a^0,w,c
  7075  0027BC  5E2C               	subwf	___fldiv@rem^0,f,c
  7076  0027BE  5025               	movf	(___fldiv@a+1)^0,w,c
  7077  0027C0  5A2D               	subwfb	(___fldiv@rem+1)^0,f,c
  7078  0027C2  5026               	movf	(___fldiv@a+2)^0,w,c
  7079  0027C4  5A2E               	subwfb	(___fldiv@rem+2)^0,f,c
  7080  0027C6  5027               	movf	(___fldiv@a+3)^0,w,c
  7081  0027C8  5A2F               	subwfb	(___fldiv@rem+3)^0,f,c
  7082  0027CA                     l10032:
  7083  0027CA  2A38               	incf	___fldiv@aexp^0,f,c
  7084  0027CC                     l1398:
  7085  0027CC  0E19               	movlw	25
  7086  0027CE  6438               	cpfsgt	___fldiv@aexp^0,c
  7087  0027D0  EFEC  F013         	goto	u7531
  7088  0027D4  EFEE  F013         	goto	u7530
  7089  0027D8                     u7531:
  7090  0027D8  EFAE  F013         	goto	l10018
  7091  0027DC                     u7530:
  7092  0027DC  502C               	movf	___fldiv@rem^0,w,c
  7093  0027DE  102D               	iorwf	(___fldiv@rem+1)^0,w,c
  7094  0027E0  102E               	iorwf	(___fldiv@rem+2)^0,w,c
  7095  0027E2  102F               	iorwf	(___fldiv@rem+3)^0,w,c
  7096  0027E4  B4D8               	btfsc	status,2,c
  7097  0027E6  EFF7  F013         	goto	u7541
  7098  0027EA  EFF9  F013         	goto	u7540
  7099  0027EE                     u7541:
  7100  0027EE  EF11  F014         	goto	l10044
  7101  0027F2                     u7540:
  7102  0027F2  8033               	bsf	___fldiv@grs^0,0,c
  7103  0027F4  EF11  F014         	goto	l10044
  7104  0027F8                     l10038:
  7105  0027F8  90D8               	bcf	status,0,c
  7106  0027FA  3620               	rlcf	___fldiv@b^0,f,c
  7107  0027FC  3621               	rlcf	(___fldiv@b+1)^0,f,c
  7108  0027FE  3622               	rlcf	(___fldiv@b+2)^0,f,c
  7109  002800  3623               	rlcf	(___fldiv@b+3)^0,f,c
  7110  002802  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  7111  002804  EF06  F014         	goto	u7551
  7112  002808  EF08  F014         	goto	u7550
  7113  00280C                     u7551:
  7114  00280C  EF09  F014         	goto	l1407
  7115  002810                     u7550:
  7116  002810  8020               	bsf	___fldiv@b^0,0,c
  7117  002812                     l1407:
  7118  002812  90D8               	bcf	status,0,c
  7119  002814  3633               	rlcf	___fldiv@grs^0,f,c
  7120  002816  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  7121  002818  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  7122  00281A  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  7123  00281C  0631               	decf	___fldiv@new_exp^0,f,c
  7124  00281E  A0D8               	btfss	status,0,c
  7125  002820  0632               	decf	(___fldiv@new_exp+1)^0,f,c
  7126  002822                     l10044:
  7127  002822  AE22               	btfss	(___fldiv@b+2)^0,7,c
  7128  002824  EF16  F014         	goto	u7561
  7129  002828  EF18  F014         	goto	u7560
  7130  00282C                     u7561:
  7131  00282C  EFFC  F013         	goto	l10038
  7132  002830                     u7560:
  7133  002830  0E00               	movlw	0
  7134  002832  6E38               	movwf	___fldiv@aexp^0,c
  7135  002834  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  7136  002836  EF1F  F014         	goto	u7571
  7137  00283A  EF21  F014         	goto	u7570
  7138  00283E                     u7571:
  7139  00283E  EF45  F014         	goto	l1409
  7140  002842                     u7570:
  7141  002842  0EFF               	movlw	255
  7142  002844  1433               	andwf	___fldiv@grs^0,w,c
  7143  002846  6E28               	movwf	??___fldiv^0,c
  7144  002848  0EFF               	movlw	255
  7145  00284A  1434               	andwf	(___fldiv@grs+1)^0,w,c
  7146  00284C  6E29               	movwf	(??___fldiv+1)^0,c
  7147  00284E  0EFF               	movlw	255
  7148  002850  1435               	andwf	(___fldiv@grs+2)^0,w,c
  7149  002852  6E2A               	movwf	(??___fldiv+2)^0,c
  7150  002854  0E7F               	movlw	127
  7151  002856  1436               	andwf	(___fldiv@grs+3)^0,w,c
  7152  002858  6E2B               	movwf	(??___fldiv+3)^0,c
  7153  00285A  5028               	movf	??___fldiv^0,w,c
  7154  00285C  1029               	iorwf	(??___fldiv+1)^0,w,c
  7155  00285E  102A               	iorwf	(??___fldiv+2)^0,w,c
  7156  002860  102B               	iorwf	(??___fldiv+3)^0,w,c
  7157  002862  B4D8               	btfsc	status,2,c
  7158  002864  EF36  F014         	goto	u7581
  7159  002868  EF38  F014         	goto	u7580
  7160  00286C                     u7581:
  7161  00286C  EF3C  F014         	goto	l1410
  7162  002870                     u7580:
  7163  002870                     l10052:
  7164  002870  0E01               	movlw	1
  7165  002872  6E38               	movwf	___fldiv@aexp^0,c
  7166  002874  EF45  F014         	goto	l1409
  7167  002878                     l1410:
  7168  002878  A020               	btfss	___fldiv@b^0,0,c
  7169  00287A  EF41  F014         	goto	u7591
  7170  00287E  EF43  F014         	goto	u7590
  7171  002882                     u7591:
  7172  002882  EF45  F014         	goto	l1409
  7173  002886                     u7590:
  7174  002886  EF38  F014         	goto	l10052
  7175  00288A                     l1409:
  7176  00288A  5038               	movf	___fldiv@aexp^0,w,c
  7177  00288C  B4D8               	btfsc	status,2,c
  7178  00288E  EF4B  F014         	goto	u7601
  7179  002892  EF4D  F014         	goto	u7600
  7180  002896                     u7601:
  7181  002896  EF71  F014         	goto	l10064
  7182  00289A                     u7600:
  7183  00289A  0E01               	movlw	1
  7184  00289C  2620               	addwf	___fldiv@b^0,f,c
  7185  00289E  0E00               	movlw	0
  7186  0028A0  2221               	addwfc	(___fldiv@b+1)^0,f,c
  7187  0028A2  2222               	addwfc	(___fldiv@b+2)^0,f,c
  7188  0028A4  2223               	addwfc	(___fldiv@b+3)^0,f,c
  7189  0028A6  A023               	btfss	(___fldiv@b+3)^0,0,c
  7190  0028A8  EF58  F014         	goto	u7611
  7191  0028AC  EF5A  F014         	goto	u7610
  7192  0028B0                     u7611:
  7193  0028B0  EF71  F014         	goto	l10064
  7194  0028B4                     u7610:
  7195  0028B4  C020  F028         	movff	___fldiv@b,??___fldiv
  7196  0028B8  C021  F029         	movff	___fldiv@b+1,??___fldiv+1
  7197  0028BC  C022  F02A         	movff	___fldiv@b+2,??___fldiv+2
  7198  0028C0  C023  F02B         	movff	___fldiv@b+3,??___fldiv+3
  7199  0028C4  342B               	rlcf	(??___fldiv+3)^0,w,c
  7200  0028C6  322B               	rrcf	(??___fldiv+3)^0,f,c
  7201  0028C8  322A               	rrcf	(??___fldiv+2)^0,f,c
  7202  0028CA  3229               	rrcf	(??___fldiv+1)^0,f,c
  7203  0028CC  3228               	rrcf	??___fldiv^0,f,c
  7204  0028CE  C028  F020         	movff	??___fldiv,___fldiv@b
  7205  0028D2  C029  F021         	movff	??___fldiv+1,___fldiv@b+1
  7206  0028D6  C02A  F022         	movff	??___fldiv+2,___fldiv@b+2
  7207  0028DA  C02B  F023         	movff	??___fldiv+3,___fldiv@b+3
  7208  0028DE  4A31               	infsnz	___fldiv@new_exp^0,f,c
  7209  0028E0  2A32               	incf	(___fldiv@new_exp+1)^0,f,c
  7210  0028E2                     l10064:
  7211  0028E2  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7212  0028E4  EF7C  F014         	goto	u7621
  7213  0028E8  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  7214  0028EA  E108               	bnz	u7620
  7215  0028EC  2831               	incf	___fldiv@new_exp^0,w,c
  7216  0028EE  A0D8               	btfss	status,0,c
  7217  0028F0  EF7C  F014         	goto	u7621
  7218  0028F4  EF7E  F014         	goto	u7620
  7219  0028F8                     u7621:
  7220  0028F8  EF89  F014         	goto	l10068
  7221  0028FC                     u7620:
  7222  0028FC  0E00               	movlw	0
  7223  0028FE  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  7224  002900  6831               	setf	___fldiv@new_exp^0,c
  7225  002902  0E00               	movlw	0
  7226  002904  6E20               	movwf	___fldiv@b^0,c
  7227  002906  0E00               	movlw	0
  7228  002908  6E21               	movwf	(___fldiv@b+1)^0,c
  7229  00290A  0E00               	movlw	0
  7230  00290C  6E22               	movwf	(___fldiv@b+2)^0,c
  7231  00290E  0E00               	movlw	0
  7232  002910  6E23               	movwf	(___fldiv@b+3)^0,c
  7233  002912                     l10068:
  7234  002912  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7235  002914  EF96  F014         	goto	u7630
  7236  002918  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  7237  00291A  E106               	bnz	u7631
  7238  00291C  0431               	decf	___fldiv@new_exp^0,w,c
  7239  00291E  B0D8               	btfsc	status,0,c
  7240  002920  EF94  F014         	goto	u7631
  7241  002924  EF96  F014         	goto	u7630
  7242  002928                     u7631:
  7243  002928  EFA4  F014         	goto	l10072
  7244  00292C                     u7630:
  7245  00292C  0E00               	movlw	0
  7246  00292E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  7247  002930  0E00               	movlw	0
  7248  002932  6E31               	movwf	___fldiv@new_exp^0,c
  7249  002934  0E00               	movlw	0
  7250  002936  6E20               	movwf	___fldiv@b^0,c
  7251  002938  0E00               	movlw	0
  7252  00293A  6E21               	movwf	(___fldiv@b+1)^0,c
  7253  00293C  0E00               	movlw	0
  7254  00293E  6E22               	movwf	(___fldiv@b+2)^0,c
  7255  002940  0E00               	movlw	0
  7256  002942  6E23               	movwf	(___fldiv@b+3)^0,c
  7257  002944  0E00               	movlw	0
  7258  002946  6E30               	movwf	___fldiv@sign^0,c
  7259  002948                     l10072:
  7260  002948  C031  F037         	movff	___fldiv@new_exp,___fldiv@bexp
  7261  00294C  A037               	btfss	___fldiv@bexp^0,0,c
  7262  00294E  EFAB  F014         	goto	u7641
  7263  002952  EFAD  F014         	goto	u7640
  7264  002956                     u7641:
  7265  002956  EFB0  F014         	goto	l10078
  7266  00295A                     u7640:
  7267  00295A  8E22               	bsf	(___fldiv@b+2)^0,7,c
  7268  00295C  EFB1  F014         	goto	l10080
  7269  002960                     l10078:
  7270  002960  9E22               	bcf	(___fldiv@b+2)^0,7,c
  7271  002962                     l10080:
  7272  002962  90D8               	bcf	status,0,c
  7273  002964  3037               	rrcf	___fldiv@bexp^0,w,c
  7274  002966  6E23               	movwf	(___fldiv@b+3)^0,c
  7275  002968  EF67  F013         	goto	l9994
  7276  00296C                     l1396:
  7277  00296C  0012               	return		;funcret
  7278  00296E                     __end_of___fldiv:
  7279                           	callstack 0
  7280                           
  7281 ;; *************** function _XF_scheduleTimer *****************
  7282 ;; Defined at:
  7283 ;;		line 96 in file "xf/xf.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;  tm              2   18[COMRAM] unsigned short 
  7286 ;;  ev              1   20[COMRAM] unsigned char 
  7287 ;;  inISR           1   21[COMRAM] _Bool 
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;  i               1   22[COMRAM] unsigned char 
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      unsigned char 
  7292 ;; Registers used:
  7293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7299 ;;      Params:         4       0       0       0       0       0       0
  7300 ;;      Locals:         1       0       0       0       0       0       0
  7301 ;;      Temps:          0       0       0       0       0       0       0
  7302 ;;      Totals:         5       0       0       0       0       0       0
  7303 ;;Total ram usage:        5 bytes
  7304 ;; Hardware stack levels used: 1
  7305 ;; Hardware stack levels required when called: 5
  7306 ;; This function calls:
  7307 ;;		_ENTERCRITICAL
  7308 ;;		_LEAVECRITICAL
  7309 ;; This function is called by:
  7310 ;;		_touchScreenController
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text22
  7315  005C50                     __ptext22:
  7316                           	callstack 0
  7317  005C50                     _XF_scheduleTimer:
  7318                           	callstack 22
  7319  005C50                     
  7320                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
  7321  005C50  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  7322  005C52  ECFA  F031         	call	_ENTERCRITICAL
  7323  005C56                     
  7324                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
  7325  005C56  0E00               	movlw	0
  7326  005C58  6E17               	movwf	XF_scheduleTimer@i^0,c
  7327  005C5A                     l9858:
  7328                           
  7329                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
  7330  005C5A  5017               	movf	XF_scheduleTimer@i^0,w,c
  7331  005C5C  0D03               	mullw	3
  7332  005C5E  0EB7               	movlw	low (_theXF+2)
  7333  005C60  24F3               	addwf	243,w,c
  7334  005C62  6ED9               	movwf	fsr2l,c
  7335  005C64  0E00               	movlw	high (_theXF+2)
  7336  005C66  20F4               	addwfc	prodh,w,c
  7337  005C68  6EDA               	movwf	fsr2h,c
  7338  005C6A  50DF               	movf	indf2,w,c
  7339  005C6C  A4D8               	btfss	status,2,c
  7340  005C6E  EF3B  F02E         	goto	u7271
  7341  005C72  EF3D  F02E         	goto	u7270
  7342  005C76                     u7271:
  7343  005C76  EF55  F02E         	goto	l9862
  7344  005C7A                     u7270:
  7345  005C7A                     
  7346                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
  7347  005C7A  5017               	movf	XF_scheduleTimer@i^0,w,c
  7348  005C7C  0D03               	mullw	3
  7349  005C7E  0EB5               	movlw	low _theXF
  7350  005C80  24F3               	addwf	243,w,c
  7351  005C82  6ED9               	movwf	fsr2l,c
  7352  005C84  0E00               	movlw	high _theXF
  7353  005C86  20F4               	addwfc	prodh,w,c
  7354  005C88  6EDA               	movwf	fsr2h,c
  7355  005C8A  C013  FFDE         	movff	XF_scheduleTimer@tm,postinc2
  7356  005C8E  C014  FFDD         	movff	XF_scheduleTimer@tm+1,postdec2
  7357                           
  7358                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
  7359  005C92  5017               	movf	XF_scheduleTimer@i^0,w,c
  7360  005C94  0D03               	mullw	3
  7361  005C96  0EB7               	movlw	low (_theXF+2)
  7362  005C98  24F3               	addwf	243,w,c
  7363  005C9A  6ED9               	movwf	fsr2l,c
  7364  005C9C  0E00               	movlw	high (_theXF+2)
  7365  005C9E  20F4               	addwfc	prodh,w,c
  7366  005CA0  6EDA               	movwf	fsr2h,c
  7367  005CA2  C015  FFDF         	movff	XF_scheduleTimer@ev,indf2
  7368                           
  7369                           ;xf/xf.c: 107:             break;
  7370  005CA6  EF5E  F02E         	goto	l9866
  7371  005CAA                     l9862:
  7372                           
  7373                           ;xf/xf.c: 109:     }
  7374  005CAA  2A17               	incf	XF_scheduleTimer@i^0,f,c
  7375  005CAC  0E07               	movlw	7
  7376  005CAE  6417               	cpfsgt	XF_scheduleTimer@i^0,c
  7377  005CB0  EF5C  F02E         	goto	u7281
  7378  005CB4  EF5E  F02E         	goto	u7280
  7379  005CB8                     u7281:
  7380  005CB8  EF2D  F02E         	goto	l9858
  7381  005CBC                     u7280:
  7382  005CBC                     l9866:
  7383                           
  7384                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
  7385  005CBC  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  7386  005CBE  ECEF  F031         	call	_LEAVECRITICAL
  7387  005CC2  0012               	return		;funcret
  7388  005CC4                     __end_of_XF_scheduleTimer:
  7389                           	callstack 0
  7390                           
  7391 ;; *************** function _GameParameters_setY *****************
  7392 ;; Defined at:
  7393 ;;		line 51 in file "class/gameParameters.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  s               2   17[COMRAM] PTR struct GameParameter
  7396 ;;		 -> g1(239), 
  7397 ;;  value           2   19[COMRAM] unsigned short 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7409 ;;      Params:         4       0       0       0       0       0       0
  7410 ;;      Locals:         0       0       0       0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0
  7412 ;;      Totals:         4       0       0       0       0       0       0
  7413 ;;Total ram usage:        4 bytes
  7414 ;; Hardware stack levels used: 1
  7415 ;; Hardware stack levels required when called: 4
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_touchScreenController
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text23
  7424  0063B2                     __ptext23:
  7425                           	callstack 0
  7426  0063B2                     _GameParameters_setY:
  7427                           	callstack 23
  7428  0063B2                     
  7429                           ;class/gameParameters.c: 51: void GameParameters_setY(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 52: {;class/gameParameters.c: 53:     s->y=value;
  7430  0063B2  EE20 F006          	lfsr	2,6
  7431  0063B6  5012               	movf	GameParameters_setY@s^0,w,c
  7432  0063B8  26D9               	addwf	fsr2l,f,c
  7433  0063BA  5013               	movf	(GameParameters_setY@s+1)^0,w,c
  7434  0063BC  22DA               	addwfc	fsr2h,f,c
  7435  0063BE  C014  FFDE         	movff	GameParameters_setY@value,postinc2
  7436  0063C2  C015  FFDD         	movff	GameParameters_setY@value+1,postdec2
  7437  0063C6  0012               	return		;funcret
  7438  0063C8                     __end_of_GameParameters_setY:
  7439                           	callstack 0
  7440                           
  7441 ;; *************** function _GameParameters_setX *****************
  7442 ;; Defined at:
  7443 ;;		line 47 in file "class/gameParameters.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  s               2   17[COMRAM] PTR struct GameParameter
  7446 ;;		 -> g1(239), 
  7447 ;;  value           2   19[COMRAM] unsigned short 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7459 ;;      Params:         4       0       0       0       0       0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0
  7461 ;;      Temps:          0       0       0       0       0       0       0
  7462 ;;      Totals:         4       0       0       0       0       0       0
  7463 ;;Total ram usage:        4 bytes
  7464 ;; Hardware stack levels used: 1
  7465 ;; Hardware stack levels required when called: 4
  7466 ;; This function calls:
  7467 ;;		Nothing
  7468 ;; This function is called by:
  7469 ;;		_touchScreenController
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text24
  7474  0063C8                     __ptext24:
  7475                           	callstack 0
  7476  0063C8                     _GameParameters_setX:
  7477                           	callstack 23
  7478  0063C8                     
  7479                           ;class/gameParameters.c: 47: void GameParameters_setX(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 48: {;class/gameParameters.c: 49:     s->x=value;
  7480  0063C8  EE20 F004          	lfsr	2,4
  7481  0063CC  5012               	movf	GameParameters_setX@s^0,w,c
  7482  0063CE  26D9               	addwf	fsr2l,f,c
  7483  0063D0  5013               	movf	(GameParameters_setX@s+1)^0,w,c
  7484  0063D2  22DA               	addwfc	fsr2h,f,c
  7485  0063D4  C014  FFDE         	movff	GameParameters_setX@value,postinc2
  7486  0063D8  C015  FFDD         	movff	GameParameters_setX@value+1,postdec2
  7487  0063DC  0012               	return		;funcret
  7488  0063DE                     __end_of_GameParameters_setX:
  7489                           	callstack 0
  7490                           
  7491 ;; *************** function _sleepSM *****************
  7492 ;; Defined at:
  7493 ;;		line 19 in file "stateMachine/sleepSM.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  ev              1    wreg     unsigned char 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;  ev              1   21[COMRAM] unsigned char 
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      void 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2, status,0, cstack
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7507 ;;      Params:         0       0       0       0       0       0       0
  7508 ;;      Locals:         1       0       0       0       0       0       0
  7509 ;;      Temps:          2       0       0       0       0       0       0
  7510 ;;      Totals:         3       0       0       0       0       0       0
  7511 ;;Total ram usage:        3 bytes
  7512 ;; Hardware stack levels used: 1
  7513 ;; Hardware stack levels required when called: 5
  7514 ;; This function calls:
  7515 ;;		_sleepController
  7516 ;; This function is called by:
  7517 ;;		_Factory_exec
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text25
  7522  00588A                     __ptext25:
  7523                           	callstack 0
  7524  00588A                     _sleepSM:
  7525                           	callstack 24
  7526                           
  7527                           ;incstack = 0
  7528                           ;sleepSM@ev stored from wreg
  7529  00588A  6E16               	movwf	sleepSM@ev^0,c
  7530  00588C                     
  7531                           ;stateMachine/sleepSM.c: 19: void sleepSM(Event ev);stateMachine/sleepSM.c: 20: {;stateM
      +                          achine/sleepSM.c: 21:    switch(sleepState)
  7532  00588C  EF7B  F02C         	goto	l10350
  7533  005890                     l10324:
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;stateMachine/sleepSM.c: 24:             if(ev==evTimer30)
  7537  005890  0E03               	movlw	3
  7538  005892  1816               	xorwf	sleepSM@ev^0,w,c
  7539  005894  A4D8               	btfss	status,2,c
  7540  005896  EF4F  F02C         	goto	u7901
  7541  00589A  EF51  F02C         	goto	u7900
  7542  00589E                     u7901:
  7543  00589E  EF95  F02C         	goto	l424
  7544  0058A2                     u7900:
  7545  0058A2                     
  7546                           ; BSR set to: 0
  7547                           ;stateMachine/sleepSM.c: 25:             {;stateMachine/sleepSM.c: 26:                sl
      +                          eepState=BACKLIGHTOFF;
  7548  0058A2  0E01               	movlw	1
  7549  0058A4  6FDF               	movwf	_sleepState& (0+255),b
  7550  0058A6                     l10328:
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;stateMachine/sleepSM.c: 27:                sleepController();
  7554  0058A6  EC1D  F031         	call	_sleepController	;wreg free
  7555  0058AA  EF95  F02C         	goto	l424
  7556  0058AE                     l10330:
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;stateMachine/sleepSM.c: 31:             if(ev==evTimer30)
  7560  0058AE  0E03               	movlw	3
  7561  0058B0  1816               	xorwf	sleepSM@ev^0,w,c
  7562  0058B2  A4D8               	btfss	status,2,c
  7563  0058B4  EF5E  F02C         	goto	u7911
  7564  0058B8  EF60  F02C         	goto	u7910
  7565  0058BC                     u7911:
  7566  0058BC  EF64  F02C         	goto	l10336
  7567  0058C0                     u7910:
  7568  0058C0                     
  7569                           ; BSR set to: 0
  7570                           ;stateMachine/sleepSM.c: 32:             {;stateMachine/sleepSM.c: 33:                sl
      +                          eepState=SLEEP;
  7571  0058C0  0E02               	movlw	2
  7572  0058C2  6FDF               	movwf	_sleepState& (0+255),b
  7573  0058C4                     
  7574                           ; BSR set to: 0
  7575                           ;stateMachine/sleepSM.c: 34:                sleepController();
  7576  0058C4  EC1D  F031         	call	_sleepController	;wreg free
  7577  0058C8                     l10336:
  7578                           
  7579                           ;stateMachine/sleepSM.c: 36:             if(ev==evPress)
  7580  0058C8  0416               	decf	sleepSM@ev^0,w,c
  7581  0058CA  A4D8               	btfss	status,2,c
  7582  0058CC  EF6A  F02C         	goto	u7921
  7583  0058D0  EF6C  F02C         	goto	u7920
  7584  0058D4                     u7921:
  7585  0058D4  EF95  F02C         	goto	l424
  7586  0058D8                     u7920:
  7587  0058D8                     l10338:
  7588                           
  7589                           ;stateMachine/sleepSM.c: 37:             {;stateMachine/sleepSM.c: 38:                sl
      +                          eepState=WAKEUP;
  7590  0058D8  0E00               	movlw	0
  7591  0058DA  0100               	movlb	0	; () banked
  7592  0058DC  6FDF               	movwf	_sleepState& (0+255),b
  7593  0058DE  EF53  F02C         	goto	l10328
  7594  0058E2                     l10342:
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;stateMachine/sleepSM.c: 43:             if(ev==evPress)
  7598  0058E2  0416               	decf	sleepSM@ev^0,w,c
  7599  0058E4  A4D8               	btfss	status,2,c
  7600  0058E6  EF77  F02C         	goto	u7931
  7601  0058EA  EF79  F02C         	goto	u7930
  7602  0058EE                     u7931:
  7603  0058EE  EF95  F02C         	goto	l424
  7604  0058F2                     u7930:
  7605  0058F2  EF6C  F02C         	goto	l10338
  7606  0058F6                     l10350:
  7607  0058F6  0100               	movlb	0	; () banked
  7608  0058F8  51DF               	movf	_sleepState& (0+255),w,b
  7609  0058FA  6E14               	movwf	??_sleepSM^0,c
  7610  0058FC  6A15               	clrf	(??_sleepSM+1)^0,c
  7611                           
  7612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7613                           ; Switch size 1, requested type "simple"
  7614                           ; Number of cases is 1, Range of values is 0 to 0
  7615                           ; switch strategies available:
  7616                           ; Name         Instructions Cycles
  7617                           ; simple_byte            4     3 (average)
  7618                           ;	Chosen strategy is simple_byte
  7619  0058FE  5015               	movf	(??_sleepSM+1)^0,w,c
  7620  005900  0A00               	xorlw	0	; case 0
  7621  005902  B4D8               	btfsc	status,2,c
  7622  005904  EF86  F02C         	goto	l10754
  7623  005908  EF95  F02C         	goto	l424
  7624  00590C                     l10754:
  7625                           
  7626                           ; BSR set to: 0
  7627                           ; Switch size 1, requested type "simple"
  7628                           ; Number of cases is 3, Range of values is 0 to 2
  7629                           ; switch strategies available:
  7630                           ; Name         Instructions Cycles
  7631                           ; simple_byte           10     6 (average)
  7632                           ;	Chosen strategy is simple_byte
  7633  00590C  5014               	movf	??_sleepSM^0,w,c
  7634  00590E  0A00               	xorlw	0	; case 0
  7635  005910  B4D8               	btfsc	status,2,c
  7636  005912  EF48  F02C         	goto	l10324
  7637  005916  0A01               	xorlw	1	; case 1
  7638  005918  B4D8               	btfsc	status,2,c
  7639  00591A  EF57  F02C         	goto	l10330
  7640  00591E  0A03               	xorlw	3	; case 2
  7641  005920  B4D8               	btfsc	status,2,c
  7642  005922  EF71  F02C         	goto	l10342
  7643  005926  EF95  F02C         	goto	l424
  7644  00592A                     l424:
  7645  00592A  0012               	return		;funcret
  7646  00592C                     __end_of_sleepSM:
  7647                           	callstack 0
  7648                           
  7649 ;; *************** function _sleepController *****************
  7650 ;; Defined at:
  7651 ;;		line 53 in file "stateMachine/sleepSM.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7665 ;;      Params:         0       0       0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0
  7667 ;;      Temps:          2       0       0       0       0       0       0
  7668 ;;      Totals:         2       0       0       0       0       0       0
  7669 ;;Total ram usage:        2 bytes
  7670 ;; Hardware stack levels used: 1
  7671 ;; Hardware stack levels required when called: 4
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_sleepInit
  7676 ;;		_sleepSM
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text26
  7681  00623A                     __ptext26:
  7682                           	callstack 0
  7683  00623A                     _sleepController:
  7684                           	callstack 24
  7685  00623A  0100               	movlb	0	; () banked
  7686  00623C  51DF               	movf	_sleepState& (0+255),w,b
  7687  00623E  6E12               	movwf	??_sleepController^0,c
  7688  006240  6A13               	clrf	(??_sleepController+1)^0,c
  7689                           
  7690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7691                           ; Switch size 1, requested type "simple"
  7692                           ; Number of cases is 1, Range of values is 0 to 0
  7693                           ; switch strategies available:
  7694                           ; Name         Instructions Cycles
  7695                           ; simple_byte            4     3 (average)
  7696                           ;	Chosen strategy is simple_byte
  7697  006242  5013               	movf	(??_sleepController+1)^0,w,c
  7698  006244  0A00               	xorlw	0	; case 0
  7699  006246  B4D8               	btfsc	status,2,c
  7700  006248  EF28  F031         	goto	l10756
  7701  00624C  EF37  F031         	goto	l433
  7702  006250                     l10756:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ; Switch size 1, requested type "simple"
  7706                           ; Number of cases is 3, Range of values is 0 to 2
  7707                           ; switch strategies available:
  7708                           ; Name         Instructions Cycles
  7709                           ; simple_byte           10     6 (average)
  7710                           ;	Chosen strategy is simple_byte
  7711  006250  5012               	movf	??_sleepController^0,w,c
  7712  006252  0A00               	xorlw	0	; case 0
  7713  006254  B4D8               	btfsc	status,2,c
  7714  006256  EF37  F031         	goto	l433
  7715  00625A  0A01               	xorlw	1	; case 1
  7716  00625C  B4D8               	btfsc	status,2,c
  7717  00625E  EF37  F031         	goto	l433
  7718  006262  0A03               	xorlw	3	; case 2
  7719  006264  B4D8               	btfsc	status,2,c
  7720  006266  EF37  F031         	goto	l433
  7721  00626A  EF37  F031         	goto	l433
  7722  00626E                     l433:
  7723                           
  7724                           ; BSR set to: 0
  7725  00626E  0012               	return		;funcret
  7726  006270                     __end_of_sleepController:
  7727                           	callstack 0
  7728                           
  7729 ;; *************** function _gameControllerSM *****************
  7730 ;; Defined at:
  7731 ;;		line 17 in file "stateMachine/gameController.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  ev              1    wreg     unsigned char 
  7734 ;;  g               2   59[COMRAM] PTR struct GameParameter
  7735 ;;		 -> g1(239), 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  ev              1   63[COMRAM] unsigned char 
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  1    wreg      void 
  7740 ;; Registers used:
  7741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7747 ;;      Params:         2       0       0       0       0       0       0
  7748 ;;      Locals:         1       0       0       0       0       0       0
  7749 ;;      Temps:          2       0       0       0       0       0       0
  7750 ;;      Totals:         5       0       0       0       0       0       0
  7751 ;;Total ram usage:        5 bytes
  7752 ;; Hardware stack levels used: 1
  7753 ;; Hardware stack levels required when called: 9
  7754 ;; This function calls:
  7755 ;;		_gameControllerController
  7756 ;; This function is called by:
  7757 ;;		_Factory_exec
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           	psect	text27
  7762  00508A                     __ptext27:
  7763                           	callstack 0
  7764  00508A                     _gameControllerSM:
  7765                           	callstack 20
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;incstack = 0
  7769                           ;gameControllerSM@ev stored from wreg
  7770  00508A  6E40               	movwf	gameControllerSM@ev^0,c
  7771  00508C                     
  7772                           ;stateMachine/gameController.c: 17: void gameControllerSM(Event ev,GameParameters* g);st
      +                          ateMachine/gameController.c: 18: {;stateMachine/gameController.c: 19:    switch(gameCont
      +                          rollerState)
  7773  00508C  EF87  F028         	goto	l10456
  7774  005090                     l10432:
  7775                           
  7776                           ;stateMachine/gameController.c: 22:             gameControllerController(g,NULLEVENT);
  7777  005090  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  7778  005094  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  7779  005098  0E00               	movlw	0
  7780  00509A  6E39               	movwf	gameControllerController@ev^0,c
  7781  00509C  ECB7  F014         	call	_gameControllerController	;wreg free
  7782  0050A0                     
  7783                           ;stateMachine/gameController.c: 23:             if(ev==evParameters)
  7784  0050A0  0E07               	movlw	7
  7785  0050A2  1840               	xorwf	gameControllerSM@ev^0,w,c
  7786  0050A4  A4D8               	btfss	status,2,c
  7787  0050A6  EF57  F028         	goto	u8031
  7788  0050AA  EF59  F028         	goto	u8030
  7789  0050AE                     u8031:
  7790  0050AE  EF5B  F028         	goto	l10438
  7791  0050B2                     u8030:
  7792  0050B2                     
  7793                           ;stateMachine/gameController.c: 24:             {;stateMachine/gameController.c: 25:    
      +                                       gameControllerState=PARAMETERS;
  7794  0050B2  0E01               	movlw	1
  7795  0050B4  6E4D               	movwf	_gameControllerState^0,c
  7796  0050B6                     l10438:
  7797                           
  7798                           ;stateMachine/gameController.c: 27:             if(ev==evOnePlayer)
  7799  0050B6  0E05               	movlw	5
  7800  0050B8  1840               	xorwf	gameControllerSM@ev^0,w,c
  7801  0050BA  A4D8               	btfss	status,2,c
  7802  0050BC  EF62  F028         	goto	u8041
  7803  0050C0  EF64  F028         	goto	u8040
  7804  0050C4                     u8041:
  7805  0050C4  EFA8  F028         	goto	l629
  7806  0050C8                     u8040:
  7807  0050C8                     
  7808                           ;stateMachine/gameController.c: 28:             {;stateMachine/gameController.c: 29:    
      +                                       gameControllerState=LOCAL;
  7809  0050C8  0E02               	movlw	2
  7810  0050CA  6E4D               	movwf	_gameControllerState^0,c
  7811  0050CC  EFA8  F028         	goto	l629
  7812  0050D0                     l10446:
  7813                           
  7814                           ;stateMachine/gameController.c: 37:             gameControllerController(g,NULLEVENT);
  7815  0050D0  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  7816  0050D4  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  7817  0050D8  0E00               	movlw	0
  7818  0050DA  6E39               	movwf	gameControllerController@ev^0,c
  7819  0050DC  ECB7  F014         	call	_gameControllerController	;wreg free
  7820  0050E0                     
  7821                           ;stateMachine/gameController.c: 38:             if(ev==evLeaveParam)
  7822  0050E0  0E08               	movlw	8
  7823  0050E2  1840               	xorwf	gameControllerSM@ev^0,w,c
  7824  0050E4  A4D8               	btfss	status,2,c
  7825  0050E6  EF77  F028         	goto	u8051
  7826  0050EA  EF79  F028         	goto	u8050
  7827  0050EE                     u8051:
  7828  0050EE  EFA8  F028         	goto	l629
  7829  0050F2                     u8050:
  7830  0050F2                     
  7831                           ;stateMachine/gameController.c: 39:             {;stateMachine/gameController.c: 40:    
      +                                       gameControllerState=NOGAME;
  7832  0050F2  0E00               	movlw	0
  7833  0050F4  6E4D               	movwf	_gameControllerState^0,c
  7834  0050F6  EFA8  F028         	goto	l629
  7835  0050FA                     l10452:
  7836                           
  7837                           ;stateMachine/gameController.c: 44:             gameControllerController(g,ev);
  7838  0050FA  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  7839  0050FE  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  7840  005102  C040  F039         	movff	gameControllerSM@ev,gameControllerController@ev
  7841  005106  ECB7  F014         	call	_gameControllerController	;wreg free
  7842                           
  7843                           ;stateMachine/gameController.c: 45:             break;
  7844  00510A  EFA8  F028         	goto	l629
  7845  00510E                     l10456:
  7846  00510E  504D               	movf	_gameControllerState^0,w,c
  7847  005110  6E3E               	movwf	??_gameControllerSM^0,c
  7848  005112  6A3F               	clrf	(??_gameControllerSM+1)^0,c
  7849                           
  7850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7851                           ; Switch size 1, requested type "simple"
  7852                           ; Number of cases is 1, Range of values is 0 to 0
  7853                           ; switch strategies available:
  7854                           ; Name         Instructions Cycles
  7855                           ; simple_byte            4     3 (average)
  7856                           ;	Chosen strategy is simple_byte
  7857  005114  503F               	movf	(??_gameControllerSM+1)^0,w,c
  7858  005116  0A00               	xorlw	0	; case 0
  7859  005118  B4D8               	btfsc	status,2,c
  7860  00511A  EF91  F028         	goto	l10758
  7861  00511E  EFA8  F028         	goto	l629
  7862  005122                     l10758:
  7863                           
  7864                           ; Switch size 1, requested type "simple"
  7865                           ; Number of cases is 5, Range of values is 0 to 4
  7866                           ; switch strategies available:
  7867                           ; Name         Instructions Cycles
  7868                           ; simple_byte           16     9 (average)
  7869                           ;	Chosen strategy is simple_byte
  7870  005122  503E               	movf	??_gameControllerSM^0,w,c
  7871  005124  0A00               	xorlw	0	; case 0
  7872  005126  B4D8               	btfsc	status,2,c
  7873  005128  EF48  F028         	goto	l10432
  7874  00512C  0A01               	xorlw	1	; case 1
  7875  00512E  B4D8               	btfsc	status,2,c
  7876  005130  EF68  F028         	goto	l10446
  7877  005134  0A03               	xorlw	3	; case 2
  7878  005136  B4D8               	btfsc	status,2,c
  7879  005138  EF7D  F028         	goto	l10452
  7880  00513C  0A01               	xorlw	1	; case 3
  7881  00513E  B4D8               	btfsc	status,2,c
  7882  005140  EFA8  F028         	goto	l629
  7883  005144  0A07               	xorlw	7	; case 4
  7884  005146  B4D8               	btfsc	status,2,c
  7885  005148  EFA8  F028         	goto	l629
  7886  00514C  EFA8  F028         	goto	l629
  7887  005150                     l629:
  7888  005150  0012               	return		;funcret
  7889  005152                     __end_of_gameControllerSM:
  7890                           	callstack 0
  7891                           
  7892 ;; *************** function _gameControllerController *****************
  7893 ;; Defined at:
  7894 ;;		line 55 in file "stateMachine/gameController.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  g               2   54[COMRAM] PTR struct GameParameter
  7897 ;;		 -> g1(239), 
  7898 ;;  ev              1   56[COMRAM] unsigned char 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  1    wreg      void 
  7903 ;; Registers used:
  7904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7910 ;;      Params:         3       0       0       0       0       0       0
  7911 ;;      Locals:         0       0       0       0       0       0       0
  7912 ;;      Temps:          2       0       0       0       0       0       0
  7913 ;;      Totals:         5       0       0       0       0       0       0
  7914 ;;Total ram usage:        5 bytes
  7915 ;; Hardware stack levels used: 1
  7916 ;; Hardware stack levels required when called: 8
  7917 ;; This function calls:
  7918 ;;		_GameParameters_resetPos
  7919 ;;		_LCD_InButton
  7920 ;;		_LCD_InSlider
  7921 ;;		_LCD_SliderUpdate
  7922 ;;		_XF_pushEvent
  7923 ;;		_backlightController
  7924 ;;		_mooveBall
  7925 ;;		_moovePaddle
  7926 ;; This function is called by:
  7927 ;;		_gameControllerInit
  7928 ;;		_gameControllerSM
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           	psect	text28
  7933  00296E                     __ptext28:
  7934                           	callstack 0
  7935  00296E                     _gameControllerController:
  7936                           	callstack 19
  7937  00296E                     
  7938                           ;stateMachine/gameController.c: 55: void gameControllerController(GameParameters* g,Even
      +                          t ev);stateMachine/gameController.c: 56: {;stateMachine/gameController.c: 57:     switch
      +                          (gameControllerState)
  7939  00296E  EF3D  F016         	goto	l9944
  7940  002972                     l9904:
  7941                           
  7942                           ;stateMachine/gameController.c: 60:             if(LCD_InButton(&(g->btnParam),g->x,g->y
      +                          ))
  7943  002972  0E08               	movlw	8
  7944  002974  2437               	addwf	gameControllerController@g^0,w,c
  7945  002976  6E12               	movwf	LCD_InButton@button^0,c
  7946  002978  0E00               	movlw	0
  7947  00297A  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  7948  00297C  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7949  00297E  EE20 F004          	lfsr	2,4
  7950  002982  5037               	movf	gameControllerController@g^0,w,c
  7951  002984  26D9               	addwf	fsr2l,f,c
  7952  002986  5038               	movf	(gameControllerController@g+1)^0,w,c
  7953  002988  22DA               	addwfc	fsr2h,f,c
  7954  00298A  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7955  00298E  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7956  002992  EE20 F006          	lfsr	2,6
  7957  002996  5037               	movf	gameControllerController@g^0,w,c
  7958  002998  26D9               	addwf	fsr2l,f,c
  7959  00299A  5038               	movf	(gameControllerController@g+1)^0,w,c
  7960  00299C  22DA               	addwfc	fsr2h,f,c
  7961  00299E  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7962  0029A2  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7963  0029A6  EC2C  F026         	call	_LCD_InButton	;wreg free
  7964  0029AA  0900               	iorlw	0
  7965  0029AC  B4D8               	btfsc	status,2,c
  7966  0029AE  EFDB  F014         	goto	u7331
  7967  0029B2  EFDD  F014         	goto	u7330
  7968  0029B6                     u7331:
  7969  0029B6  EFE8  F014         	goto	l634
  7970  0029BA                     u7330:
  7971  0029BA                     
  7972                           ;stateMachine/gameController.c: 61:             {;stateMachine/gameController.c: 62:    
      +                                       XF_pushEvent(evParameters,0);
  7973  0029BA  0E00               	movlw	0
  7974  0029BC  6E18               	movwf	XF_pushEvent@inISR^0,c
  7975  0029BE  0E07               	movlw	7
  7976  0029C0  ECD6  F02E         	call	_XF_pushEvent
  7977                           
  7978                           ;stateMachine/gameController.c: 63:                 GameParameters_resetPos(g);;
  7979  0029C4  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  7980  0029C8  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  7981  0029CC  EC51  F031         	call	_GameParameters_resetPos	;wreg free
  7982  0029D0                     l634:
  7983                           
  7984                           ;stateMachine/gameController.c: 65:             if(LCD_InButton(&(g->btnOnePlayer),g->x,
      +                          g->y))
  7985  0029D0  0E20               	movlw	32
  7986  0029D2  2437               	addwf	gameControllerController@g^0,w,c
  7987  0029D4  6E12               	movwf	LCD_InButton@button^0,c
  7988  0029D6  0E00               	movlw	0
  7989  0029D8  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  7990  0029DA  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7991  0029DC  EE20 F004          	lfsr	2,4
  7992  0029E0  5037               	movf	gameControllerController@g^0,w,c
  7993  0029E2  26D9               	addwf	fsr2l,f,c
  7994  0029E4  5038               	movf	(gameControllerController@g+1)^0,w,c
  7995  0029E6  22DA               	addwfc	fsr2h,f,c
  7996  0029E8  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7997  0029EC  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7998  0029F0  EE20 F006          	lfsr	2,6
  7999  0029F4  5037               	movf	gameControllerController@g^0,w,c
  8000  0029F6  26D9               	addwf	fsr2l,f,c
  8001  0029F8  5038               	movf	(gameControllerController@g+1)^0,w,c
  8002  0029FA  22DA               	addwfc	fsr2h,f,c
  8003  0029FC  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8004  002A00  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8005  002A04  EC2C  F026         	call	_LCD_InButton	;wreg free
  8006  002A08  0900               	iorlw	0
  8007  002A0A  B4D8               	btfsc	status,2,c
  8008  002A0C  EF0A  F015         	goto	u7341
  8009  002A10  EF0C  F015         	goto	u7340
  8010  002A14                     u7341:
  8011  002A14  EF17  F015         	goto	l635
  8012  002A18                     u7340:
  8013  002A18                     
  8014                           ;stateMachine/gameController.c: 66:             {;stateMachine/gameController.c: 67:    
      +                                       XF_pushEvent(evOnePlayer,0);
  8015  002A18  0E00               	movlw	0
  8016  002A1A  6E18               	movwf	XF_pushEvent@inISR^0,c
  8017  002A1C  0E05               	movlw	5
  8018  002A1E  ECD6  F02E         	call	_XF_pushEvent
  8019                           
  8020                           ;stateMachine/gameController.c: 68:                 GameParameters_resetPos(g);;
  8021  002A22  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  8022  002A26  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  8023  002A2A  EC51  F031         	call	_GameParameters_resetPos	;wreg free
  8024  002A2E                     l635:
  8025                           
  8026                           ;stateMachine/gameController.c: 70:             if(LCD_InButton(&(g->btnTwoPlayer),g->x,
      +                          g->y))
  8027  002A2E  0E38               	movlw	56
  8028  002A30  2437               	addwf	gameControllerController@g^0,w,c
  8029  002A32  6E12               	movwf	LCD_InButton@button^0,c
  8030  002A34  0E00               	movlw	0
  8031  002A36  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8032  002A38  6E13               	movwf	(LCD_InButton@button+1)^0,c
  8033  002A3A  EE20 F004          	lfsr	2,4
  8034  002A3E  5037               	movf	gameControllerController@g^0,w,c
  8035  002A40  26D9               	addwf	fsr2l,f,c
  8036  002A42  5038               	movf	(gameControllerController@g+1)^0,w,c
  8037  002A44  22DA               	addwfc	fsr2h,f,c
  8038  002A46  CFDE F014          	movff	postinc2,LCD_InButton@posX
  8039  002A4A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  8040  002A4E  EE20 F006          	lfsr	2,6
  8041  002A52  5037               	movf	gameControllerController@g^0,w,c
  8042  002A54  26D9               	addwf	fsr2l,f,c
  8043  002A56  5038               	movf	(gameControllerController@g+1)^0,w,c
  8044  002A58  22DA               	addwfc	fsr2h,f,c
  8045  002A5A  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8046  002A5E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8047  002A62  EC2C  F026         	call	_LCD_InButton	;wreg free
  8048  002A66  0900               	iorlw	0
  8049  002A68  B4D8               	btfsc	status,2,c
  8050  002A6A  EF39  F015         	goto	u7351
  8051  002A6E  EF3B  F015         	goto	u7350
  8052  002A72                     u7351:
  8053  002A72  EF5E  F016         	goto	l651
  8054  002A76                     u7350:
  8055  002A76                     
  8056                           ;stateMachine/gameController.c: 71:             {;stateMachine/gameController.c: 72:    
      +                                       XF_pushEvent(evTwoPlayer,0);
  8057  002A76  0E00               	movlw	0
  8058  002A78  6E18               	movwf	XF_pushEvent@inISR^0,c
  8059  002A7A  0E06               	movlw	6
  8060  002A7C  ECD6  F02E         	call	_XF_pushEvent
  8061                           
  8062                           ;stateMachine/gameController.c: 73:                 GameParameters_resetPos(g);
  8063  002A80  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  8064  002A84  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  8065  002A88  EC51  F031         	call	_GameParameters_resetPos	;wreg free
  8066  002A8C  EF5E  F016         	goto	l651
  8067  002A90                     l9912:
  8068                           
  8069                           ;stateMachine/gameController.c: 77:             if(LCD_InSlider(&(g->sldParam),g->x,g->y
      +                          ))
  8070  002A90  0EB0               	movlw	176
  8071  002A92  2437               	addwf	gameControllerController@g^0,w,c
  8072  002A94  6E12               	movwf	LCD_InSlider@slider^0,c
  8073  002A96  0E00               	movlw	0
  8074  002A98  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8075  002A9A  6E13               	movwf	(LCD_InSlider@slider+1)^0,c
  8076  002A9C  EE20 F004          	lfsr	2,4
  8077  002AA0  5037               	movf	gameControllerController@g^0,w,c
  8078  002AA2  26D9               	addwf	fsr2l,f,c
  8079  002AA4  5038               	movf	(gameControllerController@g+1)^0,w,c
  8080  002AA6  22DA               	addwfc	fsr2h,f,c
  8081  002AA8  CFDE F014          	movff	postinc2,LCD_InSlider@posX
  8082  002AAC  CFDD F015          	movff	postdec2,LCD_InSlider@posX+1
  8083  002AB0  EE20 F006          	lfsr	2,6
  8084  002AB4  5037               	movf	gameControllerController@g^0,w,c
  8085  002AB6  26D9               	addwf	fsr2l,f,c
  8086  002AB8  5038               	movf	(gameControllerController@g+1)^0,w,c
  8087  002ABA  22DA               	addwfc	fsr2h,f,c
  8088  002ABC  CFDE F016          	movff	postinc2,LCD_InSlider@posY
  8089  002AC0  CFDD F017          	movff	postdec2,LCD_InSlider@posY+1
  8090  002AC4  EC9B  F026         	call	_LCD_InSlider	;wreg free
  8091  002AC8  0900               	iorlw	0
  8092  002ACA  B4D8               	btfsc	status,2,c
  8093  002ACC  EF6A  F015         	goto	u7361
  8094  002AD0  EF6C  F015         	goto	u7360
  8095  002AD4                     u7361:
  8096  002AD4  EF80  F015         	goto	l9918
  8097  002AD8                     u7360:
  8098  002AD8                     
  8099                           ;stateMachine/gameController.c: 78:             {;stateMachine/gameController.c: 79:    
      +                                       backlightController(g);
  8100  002AD8  C037  F018         	movff	gameControllerController@g,backlightController@g
  8101  002ADC  C038  F019         	movff	gameControllerController@g+1,backlightController@g+1
  8102  002AE0  EC8C  F00C         	call	_backlightController	;wreg free
  8103                           
  8104                           ;stateMachine/gameController.c: 80:                 LCD_SliderUpdate(&(g->sldParam));
  8105  002AE4  0EB0               	movlw	176
  8106  002AE6  2437               	addwf	gameControllerController@g^0,w,c
  8107  002AE8  6E27               	movwf	LCD_SliderUpdate@slider^0,c
  8108  002AEA  0E00               	movlw	0
  8109  002AEC  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8110  002AEE  6E28               	movwf	(LCD_SliderUpdate@slider+1)^0,c
  8111  002AF0  EC21  F00A         	call	_LCD_SliderUpdate	;wreg free
  8112  002AF4                     
  8113                           ;stateMachine/gameController.c: 81:                 GameParameters_resetPos(g);
  8114  002AF4  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  8115  002AF8  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  8116  002AFC  EC51  F031         	call	_GameParameters_resetPos	;wreg free
  8117  002B00                     l9918:
  8118                           
  8119                           ;stateMachine/gameController.c: 83:             if(LCD_InButton(&(g->btnLeaveParam),g->x
      +                          ,g->y))
  8120  002B00  0E50               	movlw	80
  8121  002B02  2437               	addwf	gameControllerController@g^0,w,c
  8122  002B04  6E12               	movwf	LCD_InButton@button^0,c
  8123  002B06  0E00               	movlw	0
  8124  002B08  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8125  002B0A  6E13               	movwf	(LCD_InButton@button+1)^0,c
  8126  002B0C  EE20 F004          	lfsr	2,4
  8127  002B10  5037               	movf	gameControllerController@g^0,w,c
  8128  002B12  26D9               	addwf	fsr2l,f,c
  8129  002B14  5038               	movf	(gameControllerController@g+1)^0,w,c
  8130  002B16  22DA               	addwfc	fsr2h,f,c
  8131  002B18  CFDE F014          	movff	postinc2,LCD_InButton@posX
  8132  002B1C  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  8133  002B20  EE20 F006          	lfsr	2,6
  8134  002B24  5037               	movf	gameControllerController@g^0,w,c
  8135  002B26  26D9               	addwf	fsr2l,f,c
  8136  002B28  5038               	movf	(gameControllerController@g+1)^0,w,c
  8137  002B2A  22DA               	addwfc	fsr2h,f,c
  8138  002B2C  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8139  002B30  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8140  002B34  EC2C  F026         	call	_LCD_InButton	;wreg free
  8141  002B38  0900               	iorlw	0
  8142  002B3A  B4D8               	btfsc	status,2,c
  8143  002B3C  EFA2  F015         	goto	u7371
  8144  002B40  EFA4  F015         	goto	u7370
  8145  002B44                     u7371:
  8146  002B44  EF5E  F016         	goto	l651
  8147  002B48                     u7370:
  8148  002B48                     
  8149                           ;stateMachine/gameController.c: 84:             {;stateMachine/gameController.c: 85:    
      +                                       XF_pushEvent(evLeaveParam,0);
  8150  002B48  0E00               	movlw	0
  8151  002B4A  6E18               	movwf	XF_pushEvent@inISR^0,c
  8152  002B4C  0E08               	movlw	8
  8153  002B4E  ECD6  F02E         	call	_XF_pushEvent
  8154                           
  8155                           ;stateMachine/gameController.c: 86:                 GameParameters_resetPos(g);
  8156  002B52  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  8157  002B56  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  8158  002B5A  EC51  F031         	call	_GameParameters_resetPos	;wreg free
  8159  002B5E  EF5E  F016         	goto	l651
  8160  002B62                     l9922:
  8161                           
  8162                           ;stateMachine/gameController.c: 90:             if (ev==evPress)
  8163  002B62  0439               	decf	gameControllerController@ev^0,w,c
  8164  002B64  A4D8               	btfss	status,2,c
  8165  002B66  EFB7  F015         	goto	u7381
  8166  002B6A  EFB9  F015         	goto	u7380
  8167  002B6E                     u7381:
  8168  002B6E  EFC1  F015         	goto	l9926
  8169  002B72                     u7380:
  8170  002B72                     
  8171                           ;stateMachine/gameController.c: 91:             {;stateMachine/gameController.c: 92:    
      +                                       moovePaddle(g);
  8172  002B72  C037  F01C         	movff	gameControllerController@g,moovePaddle@g
  8173  002B76  C038  F01D         	movff	gameControllerController@g+1,moovePaddle@g+1
  8174  002B7A  EC3B  F025         	call	_moovePaddle	;wreg free
  8175                           
  8176                           ;stateMachine/gameController.c: 94:             }
  8177  002B7E  EF5E  F016         	goto	l651
  8178  002B82                     l9926:
  8179  002B82  0E0A               	movlw	10
  8180  002B84  1839               	xorwf	gameControllerController@ev^0,w,c
  8181  002B86  A4D8               	btfss	status,2,c
  8182  002B88  EFC8  F015         	goto	u7391
  8183  002B8C  EFCA  F015         	goto	u7390
  8184  002B90                     u7391:
  8185  002B90  EF5E  F016         	goto	l651
  8186  002B94                     u7390:
  8187  002B94                     
  8188                           ;stateMachine/gameController.c: 96:             {;stateMachine/gameController.c: 97:    
      +                                       mooveBall(g);
  8189  002B94  C037  F025         	movff	gameControllerController@g,mooveBall@g
  8190  002B98  C038  F026         	movff	gameControllerController@g+1,mooveBall@g+1
  8191  002B9C  EC7A  F031         	call	_mooveBall	;wreg free
  8192  002BA0                     
  8193                           ;stateMachine/gameController.c: 99:                 if(g->b.x+50>=239)
  8194  002BA0  EE20 F0C9          	lfsr	2,201
  8195  002BA4  5037               	movf	gameControllerController@g^0,w,c
  8196  002BA6  26D9               	addwf	fsr2l,f,c
  8197  002BA8  5038               	movf	(gameControllerController@g+1)^0,w,c
  8198  002BAA  22DA               	addwfc	fsr2h,f,c
  8199  002BAC  CFDE F03A          	movff	postinc2,??_gameControllerController
  8200  002BB0  CFDD F03B          	movff	postdec2,??_gameControllerController+1
  8201  002BB4  0E32               	movlw	50
  8202  002BB6  263A               	addwf	??_gameControllerController^0,f,c
  8203  002BB8  0E00               	movlw	0
  8204  002BBA  223B               	addwfc	(??_gameControllerController+1)^0,f,c
  8205  002BBC  503B               	movf	(??_gameControllerController+1)^0,w,c
  8206  002BBE  E109               	bnz	u7400
  8207  002BC0  0EEF               	movlw	239
  8208  002BC2  5C3A               	subwf	??_gameControllerController^0,w,c
  8209  002BC4  A0D8               	btfss	status,0,c
  8210  002BC6  EFE7  F015         	goto	u7401
  8211  002BCA  EFE9  F015         	goto	u7400
  8212  002BCE                     u7401:
  8213  002BCE  EFF5  F015         	goto	l9934
  8214  002BD2                     u7400:
  8215  002BD2                     
  8216                           ;stateMachine/gameController.c: 100:                 {;stateMachine/gameController.c: 10
      +                          1:                     g->p2.x=239-50;
  8217  002BD2  EE20 F0DF          	lfsr	2,223
  8218  002BD6  5037               	movf	gameControllerController@g^0,w,c
  8219  002BD8  26D9               	addwf	fsr2l,f,c
  8220  002BDA  5038               	movf	(gameControllerController@g+1)^0,w,c
  8221  002BDC  22DA               	addwfc	fsr2h,f,c
  8222  002BDE  0EBD               	movlw	189
  8223  002BE0  6EDE               	movwf	postinc2,c
  8224  002BE2  0E00               	movlw	0
  8225  002BE4  6EDD               	movwf	postdec2,c
  8226                           
  8227                           ;stateMachine/gameController.c: 102:                 }
  8228  002BE6  EF05  F016         	goto	l9936
  8229  002BEA                     l9934:
  8230                           
  8231                           ;stateMachine/gameController.c: 104:                 {;stateMachine/gameController.c: 10
      +                          5:                     g->p2.x=g->b.x;
  8232  002BEA  EE20 F0C9          	lfsr	2,201
  8233  002BEE  5037               	movf	gameControllerController@g^0,w,c
  8234  002BF0  26D9               	addwf	fsr2l,f,c
  8235  002BF2  5038               	movf	(gameControllerController@g+1)^0,w,c
  8236  002BF4  22DA               	addwfc	fsr2h,f,c
  8237  002BF6  EE10 F0DF          	lfsr	1,223
  8238  002BFA  5037               	movf	gameControllerController@g^0,w,c
  8239  002BFC  26E1               	addwf	fsr1l,f,c
  8240  002BFE  5038               	movf	(gameControllerController@g+1)^0,w,c
  8241  002C00  22E2               	addwfc	fsr1h,f,c
  8242  002C02  CFDE FFE6          	movff	postinc2,postinc1
  8243  002C06  CFDD FFE5          	movff	postdec2,postdec1
  8244  002C0A                     l9936:
  8245                           
  8246                           ;stateMachine/gameController.c: 107:                 XF_pushEvent(evRedrawPaddle2,0);
  8247  002C0A  0E00               	movlw	0
  8248  002C0C  6E18               	movwf	XF_pushEvent@inISR^0,c
  8249  002C0E  0E0C               	movlw	12
  8250  002C10  ECD6  F02E         	call	_XF_pushEvent
  8251  002C14  EF5E  F016         	goto	l651
  8252  002C18                     l9938:
  8253                           
  8254                           ;stateMachine/gameController.c: 113:             if(LCD_InButton(&(g->btnNewGame),g->x,g
      +                          ->y))
  8255  002C18  0E80               	movlw	128
  8256  002C1A  2437               	addwf	gameControllerController@g^0,w,c
  8257  002C1C  6E12               	movwf	LCD_InButton@button^0,c
  8258  002C1E  0E00               	movlw	0
  8259  002C20  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8260  002C22  6E13               	movwf	(LCD_InButton@button+1)^0,c
  8261  002C24  EE20 F004          	lfsr	2,4
  8262  002C28  5037               	movf	gameControllerController@g^0,w,c
  8263  002C2A  26D9               	addwf	fsr2l,f,c
  8264  002C2C  5038               	movf	(gameControllerController@g+1)^0,w,c
  8265  002C2E  22DA               	addwfc	fsr2h,f,c
  8266  002C30  CFDE F014          	movff	postinc2,LCD_InButton@posX
  8267  002C34  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  8268  002C38  EE20 F006          	lfsr	2,6
  8269  002C3C  5037               	movf	gameControllerController@g^0,w,c
  8270  002C3E  26D9               	addwf	fsr2l,f,c
  8271  002C40  5038               	movf	(gameControllerController@g+1)^0,w,c
  8272  002C42  22DA               	addwfc	fsr2h,f,c
  8273  002C44  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8274  002C48  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8275  002C4C  EC2C  F026         	call	_LCD_InButton	;wreg free
  8276  002C50  0900               	iorlw	0
  8277  002C52  B4D8               	btfsc	status,2,c
  8278  002C54  EF2E  F016         	goto	u7411
  8279  002C58  EF30  F016         	goto	u7410
  8280  002C5C                     u7411:
  8281  002C5C  EF5E  F016         	goto	l651
  8282  002C60                     u7410:
  8283  002C60                     
  8284                           ;stateMachine/gameController.c: 114:             {;stateMachine/gameController.c: 115:  
      +                                         GameParameters_resetPos(g);
  8285  002C60  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  8286  002C64  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  8287  002C68  EC51  F031         	call	_GameParameters_resetPos	;wreg free
  8288                           
  8289                           ;stateMachine/gameController.c: 116:                 XF_pushEvent(evNewGame,0);
  8290  002C6C  0E00               	movlw	0
  8291  002C6E  6E18               	movwf	XF_pushEvent@inISR^0,c
  8292  002C70  0E0F               	movlw	15
  8293  002C72  ECD6  F02E         	call	_XF_pushEvent
  8294  002C76  EF5E  F016         	goto	l651
  8295  002C7A                     l9944:
  8296  002C7A  504D               	movf	_gameControllerState^0,w,c
  8297  002C7C  6E3A               	movwf	??_gameControllerController^0,c
  8298  002C7E  6A3B               	clrf	(??_gameControllerController+1)^0,c
  8299                           
  8300                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8301                           ; Switch size 1, requested type "simple"
  8302                           ; Number of cases is 1, Range of values is 0 to 0
  8303                           ; switch strategies available:
  8304                           ; Name         Instructions Cycles
  8305                           ; simple_byte            4     3 (average)
  8306                           ;	Chosen strategy is simple_byte
  8307  002C80  503B               	movf	(??_gameControllerController+1)^0,w,c
  8308  002C82  0A00               	xorlw	0	; case 0
  8309  002C84  B4D8               	btfsc	status,2,c
  8310  002C86  EF47  F016         	goto	l10760
  8311  002C8A  EF5E  F016         	goto	l651
  8312  002C8E                     l10760:
  8313                           
  8314                           ; Switch size 1, requested type "simple"
  8315                           ; Number of cases is 5, Range of values is 0 to 4
  8316                           ; switch strategies available:
  8317                           ; Name         Instructions Cycles
  8318                           ; simple_byte           16     9 (average)
  8319                           ;	Chosen strategy is simple_byte
  8320  002C8E  503A               	movf	??_gameControllerController^0,w,c
  8321  002C90  0A00               	xorlw	0	; case 0
  8322  002C92  B4D8               	btfsc	status,2,c
  8323  002C94  EFB9  F014         	goto	l9904
  8324  002C98  0A01               	xorlw	1	; case 1
  8325  002C9A  B4D8               	btfsc	status,2,c
  8326  002C9C  EF48  F015         	goto	l9912
  8327  002CA0  0A03               	xorlw	3	; case 2
  8328  002CA2  B4D8               	btfsc	status,2,c
  8329  002CA4  EFB1  F015         	goto	l9922
  8330  002CA8  0A01               	xorlw	1	; case 3
  8331  002CAA  B4D8               	btfsc	status,2,c
  8332  002CAC  EF5E  F016         	goto	l651
  8333  002CB0  0A07               	xorlw	7	; case 4
  8334  002CB2  B4D8               	btfsc	status,2,c
  8335  002CB4  EF0C  F016         	goto	l9938
  8336  002CB8  EF5E  F016         	goto	l651
  8337  002CBC                     l651:
  8338  002CBC  0012               	return		;funcret
  8339  002CBE                     __end_of_gameControllerController:
  8340                           	callstack 0
  8341                           
  8342 ;; *************** function _moovePaddle *****************
  8343 ;; Defined at:
  8344 ;;		line 123 in file "stateMachine/gameController.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  g               2   27[COMRAM] PTR struct GameParameter
  8347 ;;		 -> g1(239), 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1    wreg      void 
  8352 ;; Registers used:
  8353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8359 ;;      Params:         2       0       0       0       0       0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0
  8361 ;;      Temps:          0       0       0       0       0       0       0
  8362 ;;      Totals:         2       0       0       0       0       0       0
  8363 ;;Total ram usage:        2 bytes
  8364 ;; Hardware stack levels used: 1
  8365 ;; Hardware stack levels required when called: 6
  8366 ;; This function calls:
  8367 ;;		_GameParameters_resetPos
  8368 ;;		_LCD_InButton
  8369 ;;		_Paddle_addX
  8370 ;;		_XF_pushEvent
  8371 ;; This function is called by:
  8372 ;;		_gameControllerController
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text29
  8377  004A76                     __ptext29:
  8378                           	callstack 0
  8379  004A76                     _moovePaddle:
  8380                           	callstack 20
  8381  004A76                     
  8382                           ;stateMachine/gameController.c: 123: void moovePaddle(GameParameters* g);stateMachine/ga
      +                          meController.c: 124: {;stateMachine/gameController.c: 125:     if(LCD_InButton(&(g->btnL
      +                          eft),g->x,g->y))
  8383  004A76  0E68               	movlw	104
  8384  004A78  241C               	addwf	moovePaddle@g^0,w,c
  8385  004A7A  6E12               	movwf	LCD_InButton@button^0,c
  8386  004A7C  0E00               	movlw	0
  8387  004A7E  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  8388  004A80  6E13               	movwf	(LCD_InButton@button+1)^0,c
  8389  004A82  EE20 F004          	lfsr	2,4
  8390  004A86  501C               	movf	moovePaddle@g^0,w,c
  8391  004A88  26D9               	addwf	fsr2l,f,c
  8392  004A8A  501D               	movf	(moovePaddle@g+1)^0,w,c
  8393  004A8C  22DA               	addwfc	fsr2h,f,c
  8394  004A8E  CFDE F014          	movff	postinc2,LCD_InButton@posX
  8395  004A92  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  8396  004A96  EE20 F006          	lfsr	2,6
  8397  004A9A  501C               	movf	moovePaddle@g^0,w,c
  8398  004A9C  26D9               	addwf	fsr2l,f,c
  8399  004A9E  501D               	movf	(moovePaddle@g+1)^0,w,c
  8400  004AA0  22DA               	addwfc	fsr2h,f,c
  8401  004AA2  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8402  004AA6  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8403  004AAA  EC2C  F026         	call	_LCD_InButton	;wreg free
  8404  004AAE  0900               	iorlw	0
  8405  004AB0  B4D8               	btfsc	status,2,c
  8406  004AB2  EF5D  F025         	goto	u7231
  8407  004AB6  EF5F  F025         	goto	u7230
  8408  004ABA                     u7231:
  8409  004ABA  EF75  F025         	goto	l654
  8410  004ABE                     u7230:
  8411  004ABE                     
  8412                           ;stateMachine/gameController.c: 126:     {;stateMachine/gameController.c: 127:         G
      +                          ameParameters_resetPos(g);
  8413  004ABE  C01C  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  8414  004AC2  C01D  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  8415  004AC6  EC51  F031         	call	_GameParameters_resetPos	;wreg free
  8416                           
  8417                           ;stateMachine/gameController.c: 128:         Paddle_addX(&g->p1,8,0);
  8418  004ACA  0ED5               	movlw	213
  8419  004ACC  241C               	addwf	moovePaddle@g^0,w,c
  8420  004ACE  6E12               	movwf	Paddle_addX@p^0,c
  8421  004AD0  0E00               	movlw	0
  8422  004AD2  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  8423  004AD4  6E13               	movwf	(Paddle_addX@p+1)^0,c
  8424  004AD6  0E00               	movlw	0
  8425  004AD8  6E15               	movwf	(Paddle_addX@value+1)^0,c
  8426  004ADA  0E08               	movlw	8
  8427  004ADC  6E14               	movwf	Paddle_addX@value^0,c
  8428  004ADE  0E00               	movlw	0
  8429  004AE0  6E17               	movwf	(Paddle_addX@add+1)^0,c
  8430  004AE2  0E00               	movlw	0
  8431  004AE4  6E16               	movwf	Paddle_addX@add^0,c
  8432  004AE6  EC0A  F027         	call	_Paddle_addX	;wreg free
  8433  004AEA                     l654:
  8434                           
  8435                           ;stateMachine/gameController.c: 130:     if(LCD_InButton(&(g->btnRight),g->x,g->y))
  8436  004AEA  0E98               	movlw	152
  8437  004AEC  241C               	addwf	moovePaddle@g^0,w,c
  8438  004AEE  6E12               	movwf	LCD_InButton@button^0,c
  8439  004AF0  0E00               	movlw	0
  8440  004AF2  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  8441  004AF4  6E13               	movwf	(LCD_InButton@button+1)^0,c
  8442  004AF6  EE20 F004          	lfsr	2,4
  8443  004AFA  501C               	movf	moovePaddle@g^0,w,c
  8444  004AFC  26D9               	addwf	fsr2l,f,c
  8445  004AFE  501D               	movf	(moovePaddle@g+1)^0,w,c
  8446  004B00  22DA               	addwfc	fsr2h,f,c
  8447  004B02  CFDE F014          	movff	postinc2,LCD_InButton@posX
  8448  004B06  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  8449  004B0A  EE20 F006          	lfsr	2,6
  8450  004B0E  501C               	movf	moovePaddle@g^0,w,c
  8451  004B10  26D9               	addwf	fsr2l,f,c
  8452  004B12  501D               	movf	(moovePaddle@g+1)^0,w,c
  8453  004B14  22DA               	addwfc	fsr2h,f,c
  8454  004B16  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8455  004B1A  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8456  004B1E  EC2C  F026         	call	_LCD_InButton	;wreg free
  8457  004B22  0900               	iorlw	0
  8458  004B24  B4D8               	btfsc	status,2,c
  8459  004B26  EF97  F025         	goto	u7241
  8460  004B2A  EF99  F025         	goto	u7240
  8461  004B2E                     u7241:
  8462  004B2E  EFAF  F025         	goto	l655
  8463  004B32                     u7240:
  8464  004B32                     
  8465                           ;stateMachine/gameController.c: 131:     {;stateMachine/gameController.c: 132:         G
      +                          ameParameters_resetPos(g);
  8466  004B32  C01C  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  8467  004B36  C01D  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  8468  004B3A  EC51  F031         	call	_GameParameters_resetPos	;wreg free
  8469                           
  8470                           ;stateMachine/gameController.c: 133:         Paddle_addX(&g->p1,8,1);
  8471  004B3E  0ED5               	movlw	213
  8472  004B40  241C               	addwf	moovePaddle@g^0,w,c
  8473  004B42  6E12               	movwf	Paddle_addX@p^0,c
  8474  004B44  0E00               	movlw	0
  8475  004B46  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  8476  004B48  6E13               	movwf	(Paddle_addX@p+1)^0,c
  8477  004B4A  0E00               	movlw	0
  8478  004B4C  6E15               	movwf	(Paddle_addX@value+1)^0,c
  8479  004B4E  0E08               	movlw	8
  8480  004B50  6E14               	movwf	Paddle_addX@value^0,c
  8481  004B52  0E00               	movlw	0
  8482  004B54  6E17               	movwf	(Paddle_addX@add+1)^0,c
  8483  004B56  0E01               	movlw	1
  8484  004B58  6E16               	movwf	Paddle_addX@add^0,c
  8485  004B5A  EC0A  F027         	call	_Paddle_addX	;wreg free
  8486  004B5E                     l655:
  8487                           
  8488                           ;stateMachine/gameController.c: 135:     XF_pushEvent(evRedrawPaddle1,0);
  8489  004B5E  0E00               	movlw	0
  8490  004B60  6E18               	movwf	XF_pushEvent@inISR^0,c
  8491  004B62  0E0B               	movlw	11
  8492  004B64  ECD6  F02E         	call	_XF_pushEvent
  8493  004B68  0012               	return		;funcret
  8494  004B6A                     __end_of_moovePaddle:
  8495                           	callstack 0
  8496                           
  8497 ;; *************** function _Paddle_addX *****************
  8498 ;; Defined at:
  8499 ;;		line 21 in file "class/paddle.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;  p               2   17[COMRAM] PTR struct Paddle
  8502 ;;		 -> g1(239), 
  8503 ;;  value           2   19[COMRAM] unsigned short 
  8504 ;;  add             2   21[COMRAM] unsigned short 
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;		None
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  1    wreg      void 
  8509 ;; Registers used:
  8510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8516 ;;      Params:         6       0       0       0       0       0       0
  8517 ;;      Locals:         0       0       0       0       0       0       0
  8518 ;;      Temps:          2       0       0       0       0       0       0
  8519 ;;      Totals:         8       0       0       0       0       0       0
  8520 ;;Total ram usage:        8 bytes
  8521 ;; Hardware stack levels used: 1
  8522 ;; Hardware stack levels required when called: 4
  8523 ;; This function calls:
  8524 ;;		Nothing
  8525 ;; This function is called by:
  8526 ;;		_moovePaddle
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text30
  8531  004E14                     __ptext30:
  8532                           	callstack 0
  8533  004E14                     _Paddle_addX:
  8534                           	callstack 21
  8535  004E14                     
  8536                           ;class/paddle.c: 21: void Paddle_addX(struct Paddle* p,uint16_t value,uint16_t add);clas
      +                          s/paddle.c: 22: {;class/paddle.c: 23:     if(add==1)
  8537  004E14  0416               	decf	Paddle_addX@add^0,w,c
  8538  004E16  1017               	iorwf	(Paddle_addX@add+1)^0,w,c
  8539  004E18  A4D8               	btfss	status,2,c
  8540  004E1A  EF11  F027         	goto	u6621
  8541  004E1E  EF13  F027         	goto	u6620
  8542  004E22                     u6621:
  8543  004E22  EF48  F027         	goto	l9400
  8544  004E26                     u6620:
  8545  004E26                     
  8546                           ;class/paddle.c: 24:     {;class/paddle.c: 25:         p->x=(p->x)+value;
  8547  004E26  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  8548  004E2A  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  8549  004E2E  CFDE F018          	movff	postinc2,??_Paddle_addX
  8550  004E32  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  8551  004E36  5014               	movf	Paddle_addX@value^0,w,c
  8552  004E38  2618               	addwf	??_Paddle_addX^0,f,c
  8553  004E3A  5015               	movf	(Paddle_addX@value+1)^0,w,c
  8554  004E3C  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  8555  004E3E  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  8556  004E42  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  8557  004E46  C018  FFDE         	movff	??_Paddle_addX,postinc2
  8558  004E4A  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  8559                           
  8560                           ;class/paddle.c: 26:         if((p->x+50)>239)
  8561  004E4E  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  8562  004E52  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  8563  004E56  CFDE F018          	movff	postinc2,??_Paddle_addX
  8564  004E5A  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  8565  004E5E  0E32               	movlw	50
  8566  004E60  2618               	addwf	??_Paddle_addX^0,f,c
  8567  004E62  0E00               	movlw	0
  8568  004E64  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  8569  004E66  5019               	movf	(??_Paddle_addX+1)^0,w,c
  8570  004E68  E109               	bnz	u6630
  8571  004E6A  0EF0               	movlw	240
  8572  004E6C  5C18               	subwf	??_Paddle_addX^0,w,c
  8573  004E6E  A0D8               	btfss	status,0,c
  8574  004E70  EF3C  F027         	goto	u6631
  8575  004E74  EF3E  F027         	goto	u6630
  8576  004E78                     u6631:
  8577  004E78  EF76  F027         	goto	l26
  8578  004E7C                     u6630:
  8579  004E7C                     
  8580                           ;class/paddle.c: 27:         {;class/paddle.c: 28:             p->x=239-(50);
  8581  004E7C  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  8582  004E80  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  8583  004E84  0EBD               	movlw	189
  8584  004E86  6EDE               	movwf	postinc2,c
  8585  004E88  0E00               	movlw	0
  8586  004E8A  6EDD               	movwf	postdec2,c
  8587  004E8C  EF76  F027         	goto	l26
  8588  004E90                     l9400:
  8589                           
  8590                           ;class/paddle.c: 32:     {;class/paddle.c: 33:         if((p->x)<9)
  8591  004E90  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  8592  004E94  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  8593  004E98  0E01               	movlw	1
  8594  004E9A  50DB               	movf	plusw2,w,c
  8595  004E9C  E107               	bnz	u6641
  8596  004E9E  0E09               	movlw	9
  8597  004EA0  5CDE               	subwf	postinc2,w,c
  8598  004EA2  B0D8               	btfsc	status,0,c
  8599  004EA4  EF56  F027         	goto	u6641
  8600  004EA8  EF58  F027         	goto	u6640
  8601  004EAC                     u6641:
  8602  004EAC  EF62  F027         	goto	l9404
  8603  004EB0                     u6640:
  8604  004EB0                     
  8605                           ;class/paddle.c: 34:         {;class/paddle.c: 35:             p->x=0;
  8606  004EB0  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  8607  004EB4  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  8608  004EB8  0E00               	movlw	0
  8609  004EBA  6EDE               	movwf	postinc2,c
  8610  004EBC  0E00               	movlw	0
  8611  004EBE  6EDD               	movwf	postdec2,c
  8612                           
  8613                           ;class/paddle.c: 36:         }
  8614  004EC0  EF76  F027         	goto	l26
  8615  004EC4                     l9404:
  8616                           
  8617                           ;class/paddle.c: 38:         {;class/paddle.c: 39:             p->x=(p->x)-value;
  8618  004EC4  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  8619  004EC8  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  8620  004ECC  CFDE F018          	movff	postinc2,??_Paddle_addX
  8621  004ED0  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  8622  004ED4  5014               	movf	Paddle_addX@value^0,w,c
  8623  004ED6  5E18               	subwf	??_Paddle_addX^0,f,c
  8624  004ED8  5015               	movf	(Paddle_addX@value+1)^0,w,c
  8625  004EDA  5A19               	subwfb	(??_Paddle_addX+1)^0,f,c
  8626  004EDC  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  8627  004EE0  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  8628  004EE4  C018  FFDE         	movff	??_Paddle_addX,postinc2
  8629  004EE8  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  8630  004EEC                     l26:
  8631  004EEC  0012               	return		;funcret
  8632  004EEE                     __end_of_Paddle_addX:
  8633                           	callstack 0
  8634                           
  8635 ;; *************** function _LCD_InButton *****************
  8636 ;; Defined at:
  8637 ;;		line 514 in file "libraries/lcd_highlevel.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  button          2   17[COMRAM] PTR struct .
  8640 ;;		 -> g1(239), 
  8641 ;;  posX            2   19[COMRAM] unsigned short 
  8642 ;;  posY            2   21[COMRAM] unsigned short 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      unsigned char 
  8647 ;; Registers used:
  8648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8654 ;;      Params:         6       0       0       0       0       0       0
  8655 ;;      Locals:         0       0       0       0       0       0       0
  8656 ;;      Temps:          4       0       0       0       0       0       0
  8657 ;;      Totals:        10       0       0       0       0       0       0
  8658 ;;Total ram usage:       10 bytes
  8659 ;; Hardware stack levels used: 1
  8660 ;; Hardware stack levels required when called: 4
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_gameControllerController
  8665 ;;		_moovePaddle
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           	psect	text31
  8670  004C58                     __ptext31:
  8671                           	callstack 0
  8672  004C58                     _LCD_InButton:
  8673                           	callstack 21
  8674  004C58                     
  8675                           ;libraries/lcd_highlevel.c: 514: uint8_t LCD_InButton(btn_t * button, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 515: {;libraries/lcd_highlevel.c: 517:   if(posX 
      +                          < button->posX)
  8676  004C58  C012  FFD9         	movff	LCD_InButton@button,fsr2l
  8677  004C5C  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
  8678  004C60  50DE               	movf	postinc2,w,c
  8679  004C62  5C14               	subwf	LCD_InButton@posX^0,w,c
  8680  004C64  50DE               	movf	postinc2,w,c
  8681  004C66  5815               	subwfb	(LCD_InButton@posX+1)^0,w,c
  8682  004C68  B0D8               	btfsc	status,0,c
  8683  004C6A  EF39  F026         	goto	u6721
  8684  004C6E  EF3B  F026         	goto	u6720
  8685  004C72                     u6721:
  8686  004C72  EF3E  F026         	goto	l9570
  8687  004C76                     u6720:
  8688  004C76                     l9566:
  8689                           
  8690                           ;libraries/lcd_highlevel.c: 518:   {;libraries/lcd_highlevel.c: 519:     return 0;
  8691  004C76  0E00               	movlw	0
  8692  004C78  EF9A  F026         	goto	l263
  8693  004C7C                     l9570:
  8694                           
  8695                           ;libraries/lcd_highlevel.c: 522:   if(posX > (button->posX + button->width))
  8696  004C7C  EE20 F004          	lfsr	2,4
  8697  004C80  5012               	movf	LCD_InButton@button^0,w,c
  8698  004C82  26D9               	addwf	fsr2l,f,c
  8699  004C84  5013               	movf	(LCD_InButton@button+1)^0,w,c
  8700  004C86  22DA               	addwfc	fsr2h,f,c
  8701  004C88  CFDE F018          	movff	postinc2,??_LCD_InButton
  8702  004C8C  CFDD F019          	movff	postdec2,??_LCD_InButton+1
  8703  004C90  C012  FFD9         	movff	LCD_InButton@button,fsr2l
  8704  004C94  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
  8705  004C98  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
  8706  004C9C  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
  8707  004CA0  5018               	movf	??_LCD_InButton^0,w,c
  8708  004CA2  261A               	addwf	(??_LCD_InButton+2)^0,f,c
  8709  004CA4  5019               	movf	(??_LCD_InButton+1)^0,w,c
  8710  004CA6  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
  8711  004CA8  5014               	movf	LCD_InButton@posX^0,w,c
  8712  004CAA  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
  8713  004CAC  5015               	movf	(LCD_InButton@posX+1)^0,w,c
  8714  004CAE  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
  8715  004CB0  B0D8               	btfsc	status,0,c
  8716  004CB2  EF5D  F026         	goto	u6731
  8717  004CB6  EF5F  F026         	goto	u6730
  8718  004CBA                     u6731:
  8719  004CBA  EF61  F026         	goto	l9576
  8720  004CBE                     u6730:
  8721  004CBE  EF3B  F026         	goto	l9566
  8722  004CC2                     l9576:
  8723                           
  8724                           ;libraries/lcd_highlevel.c: 527:   if(posY < button->posY)
  8725  004CC2  EE20 F002          	lfsr	2,2
  8726  004CC6  5012               	movf	LCD_InButton@button^0,w,c
  8727  004CC8  26D9               	addwf	fsr2l,f,c
  8728  004CCA  5013               	movf	(LCD_InButton@button+1)^0,w,c
  8729  004CCC  22DA               	addwfc	fsr2h,f,c
  8730  004CCE  50DE               	movf	postinc2,w,c
  8731  004CD0  5C16               	subwf	LCD_InButton@posY^0,w,c
  8732  004CD2  50DE               	movf	postinc2,w,c
  8733  004CD4  5817               	subwfb	(LCD_InButton@posY+1)^0,w,c
  8734  004CD6  B0D8               	btfsc	status,0,c
  8735  004CD8  EF70  F026         	goto	u6741
  8736  004CDC  EF72  F026         	goto	u6740
  8737  004CE0                     u6741:
  8738  004CE0  EF74  F026         	goto	l9582
  8739  004CE4                     u6740:
  8740  004CE4  EF3B  F026         	goto	l9566
  8741  004CE8                     l9582:
  8742                           
  8743                           ;libraries/lcd_highlevel.c: 532:   if(posY > (button->posY + button->height))
  8744  004CE8  EE20 F006          	lfsr	2,6
  8745  004CEC  5012               	movf	LCD_InButton@button^0,w,c
  8746  004CEE  26D9               	addwf	fsr2l,f,c
  8747  004CF0  5013               	movf	(LCD_InButton@button+1)^0,w,c
  8748  004CF2  22DA               	addwfc	fsr2h,f,c
  8749  004CF4  CFDE F018          	movff	postinc2,??_LCD_InButton
  8750  004CF8  CFDD F019          	movff	postdec2,??_LCD_InButton+1
  8751  004CFC  EE20 F002          	lfsr	2,2
  8752  004D00  5012               	movf	LCD_InButton@button^0,w,c
  8753  004D02  26D9               	addwf	fsr2l,f,c
  8754  004D04  5013               	movf	(LCD_InButton@button+1)^0,w,c
  8755  004D06  22DA               	addwfc	fsr2h,f,c
  8756  004D08  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
  8757  004D0C  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
  8758  004D10  5018               	movf	??_LCD_InButton^0,w,c
  8759  004D12  261A               	addwf	(??_LCD_InButton+2)^0,f,c
  8760  004D14  5019               	movf	(??_LCD_InButton+1)^0,w,c
  8761  004D16  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
  8762  004D18  5016               	movf	LCD_InButton@posY^0,w,c
  8763  004D1A  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
  8764  004D1C  5017               	movf	(LCD_InButton@posY+1)^0,w,c
  8765  004D1E  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
  8766  004D20  B0D8               	btfsc	status,0,c
  8767  004D22  EF95  F026         	goto	u6751
  8768  004D26  EF97  F026         	goto	u6750
  8769  004D2A                     u6751:
  8770  004D2A  EF99  F026         	goto	l9588
  8771  004D2E                     u6750:
  8772  004D2E  EF3B  F026         	goto	l9566
  8773  004D32                     l9588:
  8774                           
  8775                           ;libraries/lcd_highlevel.c: 536:   return 1;
  8776  004D32  0E01               	movlw	1
  8777  004D34                     l263:
  8778  004D34  0012               	return		;funcret
  8779  004D36                     __end_of_LCD_InButton:
  8780                           	callstack 0
  8781                           
  8782 ;; *************** function _GameParameters_resetPos *****************
  8783 ;; Defined at:
  8784 ;;		line 42 in file "class/gameParameters.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  s               2   17[COMRAM] PTR struct GameParameter
  8787 ;;		 -> g1(239), 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      void 
  8792 ;; Registers used:
  8793 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8799 ;;      Params:         2       0       0       0       0       0       0
  8800 ;;      Locals:         0       0       0       0       0       0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0
  8802 ;;      Totals:         2       0       0       0       0       0       0
  8803 ;;Total ram usage:        2 bytes
  8804 ;; Hardware stack levels used: 1
  8805 ;; Hardware stack levels required when called: 4
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_gameControllerController
  8810 ;;		_moovePaddle
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text32
  8815  0062A2                     __ptext32:
  8816                           	callstack 0
  8817  0062A2                     _GameParameters_resetPos:
  8818                           	callstack 21
  8819  0062A2                     
  8820                           ;class/gameParameters.c: 42: void GameParameters_resetPos(struct GameParameters* s);clas
      +                          s/gameParameters.c: 43: {;class/gameParameters.c: 44:     s->x=0;
  8821  0062A2  EE20 F004          	lfsr	2,4
  8822  0062A6  5012               	movf	GameParameters_resetPos@s^0,w,c
  8823  0062A8  26D9               	addwf	fsr2l,f,c
  8824  0062AA  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  8825  0062AC  22DA               	addwfc	fsr2h,f,c
  8826  0062AE  0E00               	movlw	0
  8827  0062B0  6EDE               	movwf	postinc2,c
  8828  0062B2  0E00               	movlw	0
  8829  0062B4  6EDD               	movwf	postdec2,c
  8830                           
  8831                           ;class/gameParameters.c: 45:     s->y=0;
  8832  0062B6  EE20 F006          	lfsr	2,6
  8833  0062BA  5012               	movf	GameParameters_resetPos@s^0,w,c
  8834  0062BC  26D9               	addwf	fsr2l,f,c
  8835  0062BE  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  8836  0062C0  22DA               	addwfc	fsr2h,f,c
  8837  0062C2  0E00               	movlw	0
  8838  0062C4  6EDE               	movwf	postinc2,c
  8839  0062C6  0E00               	movlw	0
  8840  0062C8  6EDD               	movwf	postdec2,c
  8841  0062CA  0012               	return		;funcret
  8842  0062CC                     __end_of_GameParameters_resetPos:
  8843                           	callstack 0
  8844                           
  8845 ;; *************** function _mooveBall *****************
  8846 ;; Defined at:
  8847 ;;		line 137 in file "stateMachine/gameController.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;  g               2   36[COMRAM] PTR struct GameParameter
  8850 ;;		 -> g1(239), 
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8862 ;;      Params:         2       0       0       0       0       0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0
  8864 ;;      Temps:          0       0       0       0       0       0       0
  8865 ;;      Totals:         2       0       0       0       0       0       0
  8866 ;;Total ram usage:        2 bytes
  8867 ;; Hardware stack levels used: 1
  8868 ;; Hardware stack levels required when called: 7
  8869 ;; This function calls:
  8870 ;;		_Ball_Update
  8871 ;;		_XF_pushEvent
  8872 ;;		_checkCollision
  8873 ;; This function is called by:
  8874 ;;		_gameControllerController
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           	psect	text33
  8879  0062F4                     __ptext33:
  8880                           	callstack 0
  8881  0062F4                     _mooveBall:
  8882                           	callstack 19
  8883  0062F4                     
  8884                           ;stateMachine/gameController.c: 137: void mooveBall(GameParameters* g);stateMachine/game
      +                          Controller.c: 138: {;stateMachine/gameController.c: 139:     checkCollision(g);
  8885  0062F4  C025  F01B         	movff	mooveBall@g,checkCollision@g
  8886  0062F8  C026  F01C         	movff	mooveBall@g+1,checkCollision@g+1
  8887  0062FC  EC64  F000         	call	_checkCollision	;wreg free
  8888                           
  8889                           ;stateMachine/gameController.c: 140:     Ball_Update(&g->b);
  8890  006300  0EC9               	movlw	201
  8891  006302  2425               	addwf	mooveBall@g^0,w,c
  8892  006304  6E12               	movwf	Ball_Update@b^0,c
  8893  006306  0E00               	movlw	0
  8894  006308  2026               	addwfc	(mooveBall@g+1)^0,w,c
  8895  00630A  6E13               	movwf	(Ball_Update@b+1)^0,c
  8896  00630C  EC2F  F02D         	call	_Ball_Update	;wreg free
  8897                           
  8898                           ;stateMachine/gameController.c: 141:     XF_pushEvent(evRedrawBall,0);
  8899  006310  0E00               	movlw	0
  8900  006312  6E18               	movwf	XF_pushEvent@inISR^0,c
  8901  006314  0E0D               	movlw	13
  8902  006316  ECD6  F02E         	call	_XF_pushEvent
  8903  00631A  0012               	return		;funcret
  8904  00631C                     __end_of_mooveBall:
  8905                           	callstack 0
  8906                           
  8907 ;; *************** function _checkCollision *****************
  8908 ;; Defined at:
  8909 ;;		line 143 in file "stateMachine/gameController.c"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;  g               2   26[COMRAM] PTR struct GameParameter
  8912 ;;		 -> g1(239), 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;  s              20    0        unsigned char [20]
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  1    wreg      void 
  8917 ;; Registers used:
  8918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8924 ;;      Params:         2       0       0       0       0       0       0
  8925 ;;      Locals:         0       0       0       0       0       0       0
  8926 ;;      Temps:          8       0       0       0       0       0       0
  8927 ;;      Totals:        10       0       0       0       0       0       0
  8928 ;;Total ram usage:       10 bytes
  8929 ;; Hardware stack levels used: 1
  8930 ;; Hardware stack levels required when called: 6
  8931 ;; This function calls:
  8932 ;;		_XF_pushEvent
  8933 ;; This function is called by:
  8934 ;;		_mooveBall
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           	psect	text34
  8939  0000C8                     __ptext34:
  8940                           	callstack 0
  8941  0000C8                     _checkCollision:
  8942                           	callstack 19
  8943  0000C8                     
  8944                           ;stateMachine/gameController.c: 143: void checkCollision(GameParameters* g);stateMachine
      +                          /gameController.c: 144: {;stateMachine/gameController.c: 145:     char s[20];;stateMachi
      +                          ne/gameController.c: 147:     if(g->b.y+4>=g->p1.y-1)
  8945  0000C8  0EFF               	movlw	255
  8946  0000CA  6E1D               	movwf	??_checkCollision^0,c
  8947  0000CC  0EFF               	movlw	255
  8948  0000CE  6E1E               	movwf	(??_checkCollision+1)^0,c
  8949  0000D0  EE20 F0D7          	lfsr	2,215
  8950  0000D4  501B               	movf	checkCollision@g^0,w,c
  8951  0000D6  26D9               	addwf	fsr2l,f,c
  8952  0000D8  501C               	movf	(checkCollision@g+1)^0,w,c
  8953  0000DA  22DA               	addwfc	fsr2h,f,c
  8954  0000DC  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8955  0000E0  CFDD F020          	movff	postdec2,??_checkCollision+3
  8956  0000E4  501D               	movf	??_checkCollision^0,w,c
  8957  0000E6  261F               	addwf	(??_checkCollision+2)^0,f,c
  8958  0000E8  501E               	movf	(??_checkCollision+1)^0,w,c
  8959  0000EA  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8960  0000EC  EE20 F0CB          	lfsr	2,203
  8961  0000F0  501B               	movf	checkCollision@g^0,w,c
  8962  0000F2  26D9               	addwf	fsr2l,f,c
  8963  0000F4  501C               	movf	(checkCollision@g+1)^0,w,c
  8964  0000F6  22DA               	addwfc	fsr2h,f,c
  8965  0000F8  CFDE F021          	movff	postinc2,??_checkCollision+4
  8966  0000FC  CFDD F022          	movff	postdec2,??_checkCollision+5
  8967  000100  0E04               	movlw	4
  8968  000102  2621               	addwf	(??_checkCollision+4)^0,f,c
  8969  000104  0E00               	movlw	0
  8970  000106  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8971  000108  501F               	movf	(??_checkCollision+2)^0,w,c
  8972  00010A  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8973  00010C  5020               	movf	(??_checkCollision+3)^0,w,c
  8974  00010E  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8975  000110  A0D8               	btfss	status,0,c
  8976  000112  EF8D  F000         	goto	u6761
  8977  000116  EF8F  F000         	goto	u6760
  8978  00011A                     u6761:
  8979  00011A  EF1B  F002         	goto	l9618
  8980  00011E                     u6760:
  8981  00011E                     
  8982                           ;stateMachine/gameController.c: 148:     {;stateMachine/gameController.c: 149:         i
      +                          f(g->b.x+4>g->p1.x)
  8983  00011E  EE20 F0C9          	lfsr	2,201
  8984  000122  501B               	movf	checkCollision@g^0,w,c
  8985  000124  26D9               	addwf	fsr2l,f,c
  8986  000126  501C               	movf	(checkCollision@g+1)^0,w,c
  8987  000128  22DA               	addwfc	fsr2h,f,c
  8988  00012A  CFDE F01D          	movff	postinc2,??_checkCollision
  8989  00012E  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8990  000132  0E04               	movlw	4
  8991  000134  261D               	addwf	??_checkCollision^0,f,c
  8992  000136  0E00               	movlw	0
  8993  000138  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8994  00013A  EE20 F0D5          	lfsr	2,213
  8995  00013E  501B               	movf	checkCollision@g^0,w,c
  8996  000140  26D9               	addwf	fsr2l,f,c
  8997  000142  501C               	movf	(checkCollision@g+1)^0,w,c
  8998  000144  22DA               	addwfc	fsr2h,f,c
  8999  000146  501D               	movf	??_checkCollision^0,w,c
  9000  000148  5CDE               	subwf	postinc2,w,c
  9001  00014A  501E               	movf	(??_checkCollision+1)^0,w,c
  9002  00014C  58DE               	subwfb	postinc2,w,c
  9003  00014E  B0D8               	btfsc	status,0,c
  9004  000150  EFAC  F000         	goto	u6771
  9005  000154  EFAE  F000         	goto	u6770
  9006  000158                     u6771:
  9007  000158  EF1B  F002         	goto	l9618
  9008  00015C                     u6770:
  9009  00015C                     
  9010                           ;stateMachine/gameController.c: 150:         {;stateMachine/gameController.c: 151:      
      +                                 if(g->b.x-4<g->p1.x+50)
  9011  00015C  EE20 F0D5          	lfsr	2,213
  9012  000160  501B               	movf	checkCollision@g^0,w,c
  9013  000162  26D9               	addwf	fsr2l,f,c
  9014  000164  501C               	movf	(checkCollision@g+1)^0,w,c
  9015  000166  22DA               	addwfc	fsr2h,f,c
  9016  000168  CFDE F01D          	movff	postinc2,??_checkCollision
  9017  00016C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9018  000170  0E32               	movlw	50
  9019  000172  261D               	addwf	??_checkCollision^0,f,c
  9020  000174  0E00               	movlw	0
  9021  000176  221E               	addwfc	(??_checkCollision+1)^0,f,c
  9022  000178  0EFC               	movlw	252
  9023  00017A  6E1F               	movwf	(??_checkCollision+2)^0,c
  9024  00017C  0EFF               	movlw	255
  9025  00017E  6E20               	movwf	(??_checkCollision+3)^0,c
  9026  000180  EE20 F0C9          	lfsr	2,201
  9027  000184  501B               	movf	checkCollision@g^0,w,c
  9028  000186  26D9               	addwf	fsr2l,f,c
  9029  000188  501C               	movf	(checkCollision@g+1)^0,w,c
  9030  00018A  22DA               	addwfc	fsr2h,f,c
  9031  00018C  CFDE F021          	movff	postinc2,??_checkCollision+4
  9032  000190  CFDD F022          	movff	postdec2,??_checkCollision+5
  9033  000194  501F               	movf	(??_checkCollision+2)^0,w,c
  9034  000196  2621               	addwf	(??_checkCollision+4)^0,f,c
  9035  000198  5020               	movf	(??_checkCollision+3)^0,w,c
  9036  00019A  2222               	addwfc	(??_checkCollision+5)^0,f,c
  9037  00019C  501D               	movf	??_checkCollision^0,w,c
  9038  00019E  5C21               	subwf	(??_checkCollision+4)^0,w,c
  9039  0001A0  501E               	movf	(??_checkCollision+1)^0,w,c
  9040  0001A2  5822               	subwfb	(??_checkCollision+5)^0,w,c
  9041  0001A4  B0D8               	btfsc	status,0,c
  9042  0001A6  EFD7  F000         	goto	u6781
  9043  0001AA  EFD9  F000         	goto	u6780
  9044  0001AE                     u6781:
  9045  0001AE  EF1B  F002         	goto	l9618
  9046  0001B2                     u6780:
  9047  0001B2                     
  9048                           ;stateMachine/gameController.c: 152:             {;stateMachine/gameController.c: 153:  
      +                                         if(g->b.x-g->p1.x<10)
  9049  0001B2  EE20 F0D5          	lfsr	2,213
  9050  0001B6  501B               	movf	checkCollision@g^0,w,c
  9051  0001B8  26D9               	addwf	fsr2l,f,c
  9052  0001BA  501C               	movf	(checkCollision@g+1)^0,w,c
  9053  0001BC  22DA               	addwfc	fsr2h,f,c
  9054  0001BE  CFDE F01D          	movff	postinc2,??_checkCollision
  9055  0001C2  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9056  0001C6  EE20 F0C9          	lfsr	2,201
  9057  0001CA  501B               	movf	checkCollision@g^0,w,c
  9058  0001CC  26D9               	addwf	fsr2l,f,c
  9059  0001CE  501C               	movf	(checkCollision@g+1)^0,w,c
  9060  0001D0  22DA               	addwfc	fsr2h,f,c
  9061  0001D2  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9062  0001D6  CFDD F020          	movff	postdec2,??_checkCollision+3
  9063  0001DA  501D               	movf	??_checkCollision^0,w,c
  9064  0001DC  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  9065  0001DE  501E               	movf	(??_checkCollision+1)^0,w,c
  9066  0001E0  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  9067  0001E2  5020               	movf	(??_checkCollision+3)^0,w,c
  9068  0001E4  E107               	bnz	u6791
  9069  0001E6  0E0A               	movlw	10
  9070  0001E8  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  9071  0001EA  B0D8               	btfsc	status,0,c
  9072  0001EC  EFFA  F000         	goto	u6791
  9073  0001F0  EFFC  F000         	goto	u6790
  9074  0001F4                     u6791:
  9075  0001F4  EF20  F001         	goto	l9602
  9076  0001F8                     u6790:
  9077  0001F8                     
  9078                           ;stateMachine/gameController.c: 154:                 {;stateMachine/gameController.c: 15
      +                          6:                     g->b.dy=-g->b.dy;
  9079  0001F8  EE20 F0D3          	lfsr	2,211
  9080  0001FC  501B               	movf	checkCollision@g^0,w,c
  9081  0001FE  26D9               	addwf	fsr2l,f,c
  9082  000200  501C               	movf	(checkCollision@g+1)^0,w,c
  9083  000202  22DA               	addwfc	fsr2h,f,c
  9084  000204  CFDE F01D          	movff	postinc2,??_checkCollision
  9085  000208  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9086  00020C  1E1D               	comf	??_checkCollision^0,f,c
  9087  00020E  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9088  000210  4A1D               	infsnz	??_checkCollision^0,f,c
  9089  000212  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9090  000214  EE20 F0D3          	lfsr	2,211
  9091  000218  501B               	movf	checkCollision@g^0,w,c
  9092  00021A  26D9               	addwf	fsr2l,f,c
  9093  00021C  501C               	movf	(checkCollision@g+1)^0,w,c
  9094  00021E  22DA               	addwfc	fsr2h,f,c
  9095  000220  C01D  FFDE         	movff	??_checkCollision,postinc2
  9096  000224  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9097                           
  9098                           ;stateMachine/gameController.c: 157:                     g->b.dx=-2;
  9099  000228  EE20 F0D1          	lfsr	2,209
  9100  00022C  501B               	movf	checkCollision@g^0,w,c
  9101  00022E  26D9               	addwf	fsr2l,f,c
  9102  000230  501C               	movf	(checkCollision@g+1)^0,w,c
  9103  000232  22DA               	addwfc	fsr2h,f,c
  9104  000234  0EFE               	movlw	254
  9105  000236  6EDE               	movwf	postinc2,c
  9106  000238  0EFF               	movlw	255
  9107  00023A  6EDD               	movwf	postdec2,c
  9108                           
  9109                           ;stateMachine/gameController.c: 158:                 }
  9110  00023C  EF0D  F002         	goto	l666
  9111  000240                     l9602:
  9112  000240  EE20 F0D5          	lfsr	2,213
  9113  000244  501B               	movf	checkCollision@g^0,w,c
  9114  000246  26D9               	addwf	fsr2l,f,c
  9115  000248  501C               	movf	(checkCollision@g+1)^0,w,c
  9116  00024A  22DA               	addwfc	fsr2h,f,c
  9117  00024C  CFDE F01D          	movff	postinc2,??_checkCollision
  9118  000250  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9119  000254  EE20 F0C9          	lfsr	2,201
  9120  000258  501B               	movf	checkCollision@g^0,w,c
  9121  00025A  26D9               	addwf	fsr2l,f,c
  9122  00025C  501C               	movf	(checkCollision@g+1)^0,w,c
  9123  00025E  22DA               	addwfc	fsr2h,f,c
  9124  000260  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9125  000264  CFDD F020          	movff	postdec2,??_checkCollision+3
  9126  000268  501D               	movf	??_checkCollision^0,w,c
  9127  00026A  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  9128  00026C  501E               	movf	(??_checkCollision+1)^0,w,c
  9129  00026E  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  9130  000270  5020               	movf	(??_checkCollision+3)^0,w,c
  9131  000272  E107               	bnz	u6801
  9132  000274  0E14               	movlw	20
  9133  000276  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  9134  000278  B0D8               	btfsc	status,0,c
  9135  00027A  EF41  F001         	goto	u6801
  9136  00027E  EF43  F001         	goto	u6800
  9137  000282                     u6801:
  9138  000282  EF67  F001         	goto	l9606
  9139  000286                     u6800:
  9140  000286                     
  9141                           ;stateMachine/gameController.c: 160:                 {;stateMachine/gameController.c: 16
      +                          2:                     g->b.dy=-g->b.dy;
  9142  000286  EE20 F0D3          	lfsr	2,211
  9143  00028A  501B               	movf	checkCollision@g^0,w,c
  9144  00028C  26D9               	addwf	fsr2l,f,c
  9145  00028E  501C               	movf	(checkCollision@g+1)^0,w,c
  9146  000290  22DA               	addwfc	fsr2h,f,c
  9147  000292  CFDE F01D          	movff	postinc2,??_checkCollision
  9148  000296  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9149  00029A  1E1D               	comf	??_checkCollision^0,f,c
  9150  00029C  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9151  00029E  4A1D               	infsnz	??_checkCollision^0,f,c
  9152  0002A0  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9153  0002A2  EE20 F0D3          	lfsr	2,211
  9154  0002A6  501B               	movf	checkCollision@g^0,w,c
  9155  0002A8  26D9               	addwf	fsr2l,f,c
  9156  0002AA  501C               	movf	(checkCollision@g+1)^0,w,c
  9157  0002AC  22DA               	addwfc	fsr2h,f,c
  9158  0002AE  C01D  FFDE         	movff	??_checkCollision,postinc2
  9159  0002B2  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9160                           
  9161                           ;stateMachine/gameController.c: 163:                     g->b.dx=-1;
  9162  0002B6  EE20 F0D1          	lfsr	2,209
  9163  0002BA  501B               	movf	checkCollision@g^0,w,c
  9164  0002BC  26D9               	addwf	fsr2l,f,c
  9165  0002BE  501C               	movf	(checkCollision@g+1)^0,w,c
  9166  0002C0  22DA               	addwfc	fsr2h,f,c
  9167  0002C2  0EFF               	movlw	255
  9168  0002C4  6EDE               	movwf	postinc2,c
  9169  0002C6  0EFF               	movlw	255
  9170  0002C8  6EDD               	movwf	postdec2,c
  9171                           
  9172                           ;stateMachine/gameController.c: 164:                 }
  9173  0002CA  EF0D  F002         	goto	l666
  9174  0002CE                     l9606:
  9175  0002CE  EE20 F0D5          	lfsr	2,213
  9176  0002D2  501B               	movf	checkCollision@g^0,w,c
  9177  0002D4  26D9               	addwf	fsr2l,f,c
  9178  0002D6  501C               	movf	(checkCollision@g+1)^0,w,c
  9179  0002D8  22DA               	addwfc	fsr2h,f,c
  9180  0002DA  CFDE F01D          	movff	postinc2,??_checkCollision
  9181  0002DE  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9182  0002E2  EE20 F0C9          	lfsr	2,201
  9183  0002E6  501B               	movf	checkCollision@g^0,w,c
  9184  0002E8  26D9               	addwf	fsr2l,f,c
  9185  0002EA  501C               	movf	(checkCollision@g+1)^0,w,c
  9186  0002EC  22DA               	addwfc	fsr2h,f,c
  9187  0002EE  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9188  0002F2  CFDD F020          	movff	postdec2,??_checkCollision+3
  9189  0002F6  501D               	movf	??_checkCollision^0,w,c
  9190  0002F8  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  9191  0002FA  501E               	movf	(??_checkCollision+1)^0,w,c
  9192  0002FC  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  9193  0002FE  5020               	movf	(??_checkCollision+3)^0,w,c
  9194  000300  E107               	bnz	u6811
  9195  000302  0E1E               	movlw	30
  9196  000304  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  9197  000306  B0D8               	btfsc	status,0,c
  9198  000308  EF88  F001         	goto	u6811
  9199  00030C  EF8A  F001         	goto	u6810
  9200  000310                     u6811:
  9201  000310  EFA4  F001         	goto	l9610
  9202  000314                     u6810:
  9203  000314                     
  9204                           ;stateMachine/gameController.c: 168:                     g->b.dy=-g->b.dy;
  9205  000314  EE20 F0D3          	lfsr	2,211
  9206  000318  501B               	movf	checkCollision@g^0,w,c
  9207  00031A  26D9               	addwf	fsr2l,f,c
  9208  00031C  501C               	movf	(checkCollision@g+1)^0,w,c
  9209  00031E  22DA               	addwfc	fsr2h,f,c
  9210  000320  CFDE F01D          	movff	postinc2,??_checkCollision
  9211  000324  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9212  000328  1E1D               	comf	??_checkCollision^0,f,c
  9213  00032A  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9214  00032C  4A1D               	infsnz	??_checkCollision^0,f,c
  9215  00032E  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9216  000330  EE20 F0D3          	lfsr	2,211
  9217  000334  501B               	movf	checkCollision@g^0,w,c
  9218  000336  26D9               	addwf	fsr2l,f,c
  9219  000338  501C               	movf	(checkCollision@g+1)^0,w,c
  9220  00033A  22DA               	addwfc	fsr2h,f,c
  9221  00033C  C01D  FFDE         	movff	??_checkCollision,postinc2
  9222  000340  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9223                           
  9224                           ;stateMachine/gameController.c: 169:                 }
  9225  000344  EF0D  F002         	goto	l666
  9226  000348                     l9610:
  9227  000348  EE20 F0D5          	lfsr	2,213
  9228  00034C  501B               	movf	checkCollision@g^0,w,c
  9229  00034E  26D9               	addwf	fsr2l,f,c
  9230  000350  501C               	movf	(checkCollision@g+1)^0,w,c
  9231  000352  22DA               	addwfc	fsr2h,f,c
  9232  000354  CFDE F01D          	movff	postinc2,??_checkCollision
  9233  000358  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9234  00035C  EE20 F0C9          	lfsr	2,201
  9235  000360  501B               	movf	checkCollision@g^0,w,c
  9236  000362  26D9               	addwf	fsr2l,f,c
  9237  000364  501C               	movf	(checkCollision@g+1)^0,w,c
  9238  000366  22DA               	addwfc	fsr2h,f,c
  9239  000368  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9240  00036C  CFDD F020          	movff	postdec2,??_checkCollision+3
  9241  000370  501D               	movf	??_checkCollision^0,w,c
  9242  000372  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  9243  000374  501E               	movf	(??_checkCollision+1)^0,w,c
  9244  000376  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  9245  000378  5020               	movf	(??_checkCollision+3)^0,w,c
  9246  00037A  E107               	bnz	u6821
  9247  00037C  0E28               	movlw	40
  9248  00037E  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  9249  000380  B0D8               	btfsc	status,0,c
  9250  000382  EFC5  F001         	goto	u6821
  9251  000386  EFC7  F001         	goto	u6820
  9252  00038A                     u6821:
  9253  00038A  EFEB  F001         	goto	l9614
  9254  00038E                     u6820:
  9255  00038E                     
  9256                           ;stateMachine/gameController.c: 171:                 {;stateMachine/gameController.c: 17
      +                          3:                     g->b.dy=-g->b.dy;
  9257  00038E  EE20 F0D3          	lfsr	2,211
  9258  000392  501B               	movf	checkCollision@g^0,w,c
  9259  000394  26D9               	addwf	fsr2l,f,c
  9260  000396  501C               	movf	(checkCollision@g+1)^0,w,c
  9261  000398  22DA               	addwfc	fsr2h,f,c
  9262  00039A  CFDE F01D          	movff	postinc2,??_checkCollision
  9263  00039E  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9264  0003A2  1E1D               	comf	??_checkCollision^0,f,c
  9265  0003A4  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9266  0003A6  4A1D               	infsnz	??_checkCollision^0,f,c
  9267  0003A8  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9268  0003AA  EE20 F0D3          	lfsr	2,211
  9269  0003AE  501B               	movf	checkCollision@g^0,w,c
  9270  0003B0  26D9               	addwf	fsr2l,f,c
  9271  0003B2  501C               	movf	(checkCollision@g+1)^0,w,c
  9272  0003B4  22DA               	addwfc	fsr2h,f,c
  9273  0003B6  C01D  FFDE         	movff	??_checkCollision,postinc2
  9274  0003BA  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9275                           
  9276                           ;stateMachine/gameController.c: 174:                     g->b.dx=1;
  9277  0003BE  EE20 F0D1          	lfsr	2,209
  9278  0003C2  501B               	movf	checkCollision@g^0,w,c
  9279  0003C4  26D9               	addwf	fsr2l,f,c
  9280  0003C6  501C               	movf	(checkCollision@g+1)^0,w,c
  9281  0003C8  22DA               	addwfc	fsr2h,f,c
  9282  0003CA  0E01               	movlw	1
  9283  0003CC  6EDE               	movwf	postinc2,c
  9284  0003CE  0E00               	movlw	0
  9285  0003D0  6EDD               	movwf	postdec2,c
  9286                           
  9287                           ;stateMachine/gameController.c: 175:                 }
  9288  0003D2  EF0D  F002         	goto	l666
  9289  0003D6                     l9614:
  9290                           
  9291                           ;stateMachine/gameController.c: 177:                 {;stateMachine/gameController.c: 17
      +                          9:                     g->b.dy=-g->b.dy;
  9292  0003D6  EE20 F0D3          	lfsr	2,211
  9293  0003DA  501B               	movf	checkCollision@g^0,w,c
  9294  0003DC  26D9               	addwf	fsr2l,f,c
  9295  0003DE  501C               	movf	(checkCollision@g+1)^0,w,c
  9296  0003E0  22DA               	addwfc	fsr2h,f,c
  9297  0003E2  CFDE F01D          	movff	postinc2,??_checkCollision
  9298  0003E6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9299  0003EA  1E1D               	comf	??_checkCollision^0,f,c
  9300  0003EC  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9301  0003EE  4A1D               	infsnz	??_checkCollision^0,f,c
  9302  0003F0  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9303  0003F2  EE20 F0D3          	lfsr	2,211
  9304  0003F6  501B               	movf	checkCollision@g^0,w,c
  9305  0003F8  26D9               	addwf	fsr2l,f,c
  9306  0003FA  501C               	movf	(checkCollision@g+1)^0,w,c
  9307  0003FC  22DA               	addwfc	fsr2h,f,c
  9308  0003FE  C01D  FFDE         	movff	??_checkCollision,postinc2
  9309  000402  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9310                           
  9311                           ;stateMachine/gameController.c: 180:                     g->b.dx=2;
  9312  000406  EE20 F0D1          	lfsr	2,209
  9313  00040A  501B               	movf	checkCollision@g^0,w,c
  9314  00040C  26D9               	addwf	fsr2l,f,c
  9315  00040E  501C               	movf	(checkCollision@g+1)^0,w,c
  9316  000410  22DA               	addwfc	fsr2h,f,c
  9317  000412  0E02               	movlw	2
  9318  000414  6EDE               	movwf	postinc2,c
  9319  000416  0E00               	movlw	0
  9320  000418  6EDD               	movwf	postdec2,c
  9321  00041A                     l666:
  9322                           
  9323                           ;stateMachine/gameController.c: 184:                 g->s1.homeScore++;
  9324  00041A  EE20 F0E9          	lfsr	2,233
  9325  00041E  501B               	movf	checkCollision@g^0,w,c
  9326  000420  26D9               	addwf	fsr2l,f,c
  9327  000422  501C               	movf	(checkCollision@g+1)^0,w,c
  9328  000424  22DA               	addwfc	fsr2h,f,c
  9329  000426  2ADE               	incf	postinc2,f,c
  9330  000428  0E00               	movlw	0
  9331  00042A  22DD               	addwfc	postdec2,f,c
  9332  00042C                     
  9333                           ;stateMachine/gameController.c: 185:                 XF_pushEvent(evRedrawScore,0);
  9334  00042C  0E00               	movlw	0
  9335  00042E  6E18               	movwf	XF_pushEvent@inISR^0,c
  9336  000430  0E0E               	movlw	14
  9337  000432  ECD6  F02E         	call	_XF_pushEvent
  9338  000436                     l9618:
  9339                           
  9340                           ;stateMachine/gameController.c: 191:     if(g->b.y-4<=g->p2.y+10 +1)
  9341  000436  0EFC               	movlw	252
  9342  000438  6E1D               	movwf	??_checkCollision^0,c
  9343  00043A  0EFF               	movlw	255
  9344  00043C  6E1E               	movwf	(??_checkCollision+1)^0,c
  9345  00043E  EE20 F0CB          	lfsr	2,203
  9346  000442  501B               	movf	checkCollision@g^0,w,c
  9347  000444  26D9               	addwf	fsr2l,f,c
  9348  000446  501C               	movf	(checkCollision@g+1)^0,w,c
  9349  000448  22DA               	addwfc	fsr2h,f,c
  9350  00044A  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9351  00044E  CFDD F020          	movff	postdec2,??_checkCollision+3
  9352  000452  501D               	movf	??_checkCollision^0,w,c
  9353  000454  261F               	addwf	(??_checkCollision+2)^0,f,c
  9354  000456  501E               	movf	(??_checkCollision+1)^0,w,c
  9355  000458  2220               	addwfc	(??_checkCollision+3)^0,f,c
  9356  00045A  EE20 F0E1          	lfsr	2,225
  9357  00045E  501B               	movf	checkCollision@g^0,w,c
  9358  000460  26D9               	addwf	fsr2l,f,c
  9359  000462  501C               	movf	(checkCollision@g+1)^0,w,c
  9360  000464  22DA               	addwfc	fsr2h,f,c
  9361  000466  CFDE F021          	movff	postinc2,??_checkCollision+4
  9362  00046A  CFDD F022          	movff	postdec2,??_checkCollision+5
  9363  00046E  0E0B               	movlw	11
  9364  000470  2621               	addwf	(??_checkCollision+4)^0,f,c
  9365  000472  0E00               	movlw	0
  9366  000474  2222               	addwfc	(??_checkCollision+5)^0,f,c
  9367  000476  501F               	movf	(??_checkCollision+2)^0,w,c
  9368  000478  5C21               	subwf	(??_checkCollision+4)^0,w,c
  9369  00047A  5020               	movf	(??_checkCollision+3)^0,w,c
  9370  00047C  5822               	subwfb	(??_checkCollision+5)^0,w,c
  9371  00047E  A0D8               	btfss	status,0,c
  9372  000480  EF44  F002         	goto	u6831
  9373  000484  EF46  F002         	goto	u6830
  9374  000488                     u6831:
  9375  000488  EFD2  F003         	goto	l9644
  9376  00048C                     u6830:
  9377  00048C                     
  9378                           ;stateMachine/gameController.c: 192:     {;stateMachine/gameController.c: 193:         i
      +                          f(g->b.x+4>g->p2.x)
  9379  00048C  EE20 F0C9          	lfsr	2,201
  9380  000490  501B               	movf	checkCollision@g^0,w,c
  9381  000492  26D9               	addwf	fsr2l,f,c
  9382  000494  501C               	movf	(checkCollision@g+1)^0,w,c
  9383  000496  22DA               	addwfc	fsr2h,f,c
  9384  000498  CFDE F01D          	movff	postinc2,??_checkCollision
  9385  00049C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9386  0004A0  0E04               	movlw	4
  9387  0004A2  261D               	addwf	??_checkCollision^0,f,c
  9388  0004A4  0E00               	movlw	0
  9389  0004A6  221E               	addwfc	(??_checkCollision+1)^0,f,c
  9390  0004A8  EE20 F0DF          	lfsr	2,223
  9391  0004AC  501B               	movf	checkCollision@g^0,w,c
  9392  0004AE  26D9               	addwf	fsr2l,f,c
  9393  0004B0  501C               	movf	(checkCollision@g+1)^0,w,c
  9394  0004B2  22DA               	addwfc	fsr2h,f,c
  9395  0004B4  501D               	movf	??_checkCollision^0,w,c
  9396  0004B6  5CDE               	subwf	postinc2,w,c
  9397  0004B8  501E               	movf	(??_checkCollision+1)^0,w,c
  9398  0004BA  58DE               	subwfb	postinc2,w,c
  9399  0004BC  B0D8               	btfsc	status,0,c
  9400  0004BE  EF63  F002         	goto	u6841
  9401  0004C2  EF65  F002         	goto	u6840
  9402  0004C6                     u6841:
  9403  0004C6  EFD2  F003         	goto	l9644
  9404  0004CA                     u6840:
  9405  0004CA                     
  9406                           ;stateMachine/gameController.c: 194:         {;stateMachine/gameController.c: 195:      
      +                                 if(g->b.x-4<g->p2.x+50)
  9407  0004CA  EE20 F0DF          	lfsr	2,223
  9408  0004CE  501B               	movf	checkCollision@g^0,w,c
  9409  0004D0  26D9               	addwf	fsr2l,f,c
  9410  0004D2  501C               	movf	(checkCollision@g+1)^0,w,c
  9411  0004D4  22DA               	addwfc	fsr2h,f,c
  9412  0004D6  CFDE F01D          	movff	postinc2,??_checkCollision
  9413  0004DA  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9414  0004DE  0E32               	movlw	50
  9415  0004E0  261D               	addwf	??_checkCollision^0,f,c
  9416  0004E2  0E00               	movlw	0
  9417  0004E4  221E               	addwfc	(??_checkCollision+1)^0,f,c
  9418  0004E6  0EFC               	movlw	252
  9419  0004E8  6E1F               	movwf	(??_checkCollision+2)^0,c
  9420  0004EA  0EFF               	movlw	255
  9421  0004EC  6E20               	movwf	(??_checkCollision+3)^0,c
  9422  0004EE  EE20 F0C9          	lfsr	2,201
  9423  0004F2  501B               	movf	checkCollision@g^0,w,c
  9424  0004F4  26D9               	addwf	fsr2l,f,c
  9425  0004F6  501C               	movf	(checkCollision@g+1)^0,w,c
  9426  0004F8  22DA               	addwfc	fsr2h,f,c
  9427  0004FA  CFDE F021          	movff	postinc2,??_checkCollision+4
  9428  0004FE  CFDD F022          	movff	postdec2,??_checkCollision+5
  9429  000502  501F               	movf	(??_checkCollision+2)^0,w,c
  9430  000504  2621               	addwf	(??_checkCollision+4)^0,f,c
  9431  000506  5020               	movf	(??_checkCollision+3)^0,w,c
  9432  000508  2222               	addwfc	(??_checkCollision+5)^0,f,c
  9433  00050A  501D               	movf	??_checkCollision^0,w,c
  9434  00050C  5C21               	subwf	(??_checkCollision+4)^0,w,c
  9435  00050E  501E               	movf	(??_checkCollision+1)^0,w,c
  9436  000510  5822               	subwfb	(??_checkCollision+5)^0,w,c
  9437  000512  B0D8               	btfsc	status,0,c
  9438  000514  EF8E  F002         	goto	u6851
  9439  000518  EF90  F002         	goto	u6850
  9440  00051C                     u6851:
  9441  00051C  EFD2  F003         	goto	l9644
  9442  000520                     u6850:
  9443  000520                     
  9444                           ;stateMachine/gameController.c: 196:             {;stateMachine/gameController.c: 197:  
      +                                         if(g->b.x-g->p2.x<10)
  9445  000520  EE20 F0DF          	lfsr	2,223
  9446  000524  501B               	movf	checkCollision@g^0,w,c
  9447  000526  26D9               	addwf	fsr2l,f,c
  9448  000528  501C               	movf	(checkCollision@g+1)^0,w,c
  9449  00052A  22DA               	addwfc	fsr2h,f,c
  9450  00052C  CFDE F01D          	movff	postinc2,??_checkCollision
  9451  000530  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9452  000534  EE20 F0C9          	lfsr	2,201
  9453  000538  501B               	movf	checkCollision@g^0,w,c
  9454  00053A  26D9               	addwf	fsr2l,f,c
  9455  00053C  501C               	movf	(checkCollision@g+1)^0,w,c
  9456  00053E  22DA               	addwfc	fsr2h,f,c
  9457  000540  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9458  000544  CFDD F020          	movff	postdec2,??_checkCollision+3
  9459  000548  501D               	movf	??_checkCollision^0,w,c
  9460  00054A  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  9461  00054C  501E               	movf	(??_checkCollision+1)^0,w,c
  9462  00054E  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  9463  000550  5020               	movf	(??_checkCollision+3)^0,w,c
  9464  000552  E107               	bnz	u6861
  9465  000554  0E0A               	movlw	10
  9466  000556  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  9467  000558  B0D8               	btfsc	status,0,c
  9468  00055A  EFB1  F002         	goto	u6861
  9469  00055E  EFB3  F002         	goto	u6860
  9470  000562                     u6861:
  9471  000562  EFD7  F002         	goto	l9628
  9472  000566                     u6860:
  9473  000566                     
  9474                           ;stateMachine/gameController.c: 198:                 {;stateMachine/gameController.c: 20
      +                          0:                     g->b.dy=-g->b.dy;
  9475  000566  EE20 F0D3          	lfsr	2,211
  9476  00056A  501B               	movf	checkCollision@g^0,w,c
  9477  00056C  26D9               	addwf	fsr2l,f,c
  9478  00056E  501C               	movf	(checkCollision@g+1)^0,w,c
  9479  000570  22DA               	addwfc	fsr2h,f,c
  9480  000572  CFDE F01D          	movff	postinc2,??_checkCollision
  9481  000576  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9482  00057A  1E1D               	comf	??_checkCollision^0,f,c
  9483  00057C  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9484  00057E  4A1D               	infsnz	??_checkCollision^0,f,c
  9485  000580  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9486  000582  EE20 F0D3          	lfsr	2,211
  9487  000586  501B               	movf	checkCollision@g^0,w,c
  9488  000588  26D9               	addwf	fsr2l,f,c
  9489  00058A  501C               	movf	(checkCollision@g+1)^0,w,c
  9490  00058C  22DA               	addwfc	fsr2h,f,c
  9491  00058E  C01D  FFDE         	movff	??_checkCollision,postinc2
  9492  000592  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9493                           
  9494                           ;stateMachine/gameController.c: 201:                     g->b.dx=-2;
  9495  000596  EE20 F0D1          	lfsr	2,209
  9496  00059A  501B               	movf	checkCollision@g^0,w,c
  9497  00059C  26D9               	addwf	fsr2l,f,c
  9498  00059E  501C               	movf	(checkCollision@g+1)^0,w,c
  9499  0005A0  22DA               	addwfc	fsr2h,f,c
  9500  0005A2  0EFE               	movlw	254
  9501  0005A4  6EDE               	movwf	postinc2,c
  9502  0005A6  0EFF               	movlw	255
  9503  0005A8  6EDD               	movwf	postdec2,c
  9504                           
  9505                           ;stateMachine/gameController.c: 202:                 }
  9506  0005AA  EFC4  F003         	goto	l677
  9507  0005AE                     l9628:
  9508  0005AE  EE20 F0DF          	lfsr	2,223
  9509  0005B2  501B               	movf	checkCollision@g^0,w,c
  9510  0005B4  26D9               	addwf	fsr2l,f,c
  9511  0005B6  501C               	movf	(checkCollision@g+1)^0,w,c
  9512  0005B8  22DA               	addwfc	fsr2h,f,c
  9513  0005BA  CFDE F01D          	movff	postinc2,??_checkCollision
  9514  0005BE  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9515  0005C2  EE20 F0C9          	lfsr	2,201
  9516  0005C6  501B               	movf	checkCollision@g^0,w,c
  9517  0005C8  26D9               	addwf	fsr2l,f,c
  9518  0005CA  501C               	movf	(checkCollision@g+1)^0,w,c
  9519  0005CC  22DA               	addwfc	fsr2h,f,c
  9520  0005CE  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9521  0005D2  CFDD F020          	movff	postdec2,??_checkCollision+3
  9522  0005D6  501D               	movf	??_checkCollision^0,w,c
  9523  0005D8  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  9524  0005DA  501E               	movf	(??_checkCollision+1)^0,w,c
  9525  0005DC  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  9526  0005DE  5020               	movf	(??_checkCollision+3)^0,w,c
  9527  0005E0  E107               	bnz	u6871
  9528  0005E2  0E14               	movlw	20
  9529  0005E4  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  9530  0005E6  B0D8               	btfsc	status,0,c
  9531  0005E8  EFF8  F002         	goto	u6871
  9532  0005EC  EFFA  F002         	goto	u6870
  9533  0005F0                     u6871:
  9534  0005F0  EF1E  F003         	goto	l9632
  9535  0005F4                     u6870:
  9536  0005F4                     
  9537                           ;stateMachine/gameController.c: 204:                 {;stateMachine/gameController.c: 20
      +                          6:                     g->b.dy=-g->b.dy;
  9538  0005F4  EE20 F0D3          	lfsr	2,211
  9539  0005F8  501B               	movf	checkCollision@g^0,w,c
  9540  0005FA  26D9               	addwf	fsr2l,f,c
  9541  0005FC  501C               	movf	(checkCollision@g+1)^0,w,c
  9542  0005FE  22DA               	addwfc	fsr2h,f,c
  9543  000600  CFDE F01D          	movff	postinc2,??_checkCollision
  9544  000604  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9545  000608  1E1D               	comf	??_checkCollision^0,f,c
  9546  00060A  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9547  00060C  4A1D               	infsnz	??_checkCollision^0,f,c
  9548  00060E  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9549  000610  EE20 F0D3          	lfsr	2,211
  9550  000614  501B               	movf	checkCollision@g^0,w,c
  9551  000616  26D9               	addwf	fsr2l,f,c
  9552  000618  501C               	movf	(checkCollision@g+1)^0,w,c
  9553  00061A  22DA               	addwfc	fsr2h,f,c
  9554  00061C  C01D  FFDE         	movff	??_checkCollision,postinc2
  9555  000620  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9556                           
  9557                           ;stateMachine/gameController.c: 207:                     g->b.dx=-1;
  9558  000624  EE20 F0D1          	lfsr	2,209
  9559  000628  501B               	movf	checkCollision@g^0,w,c
  9560  00062A  26D9               	addwf	fsr2l,f,c
  9561  00062C  501C               	movf	(checkCollision@g+1)^0,w,c
  9562  00062E  22DA               	addwfc	fsr2h,f,c
  9563  000630  0EFF               	movlw	255
  9564  000632  6EDE               	movwf	postinc2,c
  9565  000634  0EFF               	movlw	255
  9566  000636  6EDD               	movwf	postdec2,c
  9567                           
  9568                           ;stateMachine/gameController.c: 208:                 }
  9569  000638  EFC4  F003         	goto	l677
  9570  00063C                     l9632:
  9571  00063C  EE20 F0DF          	lfsr	2,223
  9572  000640  501B               	movf	checkCollision@g^0,w,c
  9573  000642  26D9               	addwf	fsr2l,f,c
  9574  000644  501C               	movf	(checkCollision@g+1)^0,w,c
  9575  000646  22DA               	addwfc	fsr2h,f,c
  9576  000648  CFDE F01D          	movff	postinc2,??_checkCollision
  9577  00064C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9578  000650  EE20 F0C9          	lfsr	2,201
  9579  000654  501B               	movf	checkCollision@g^0,w,c
  9580  000656  26D9               	addwf	fsr2l,f,c
  9581  000658  501C               	movf	(checkCollision@g+1)^0,w,c
  9582  00065A  22DA               	addwfc	fsr2h,f,c
  9583  00065C  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9584  000660  CFDD F020          	movff	postdec2,??_checkCollision+3
  9585  000664  501D               	movf	??_checkCollision^0,w,c
  9586  000666  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  9587  000668  501E               	movf	(??_checkCollision+1)^0,w,c
  9588  00066A  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  9589  00066C  5020               	movf	(??_checkCollision+3)^0,w,c
  9590  00066E  E107               	bnz	u6881
  9591  000670  0E1E               	movlw	30
  9592  000672  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  9593  000674  B0D8               	btfsc	status,0,c
  9594  000676  EF3F  F003         	goto	u6881
  9595  00067A  EF41  F003         	goto	u6880
  9596  00067E                     u6881:
  9597  00067E  EF5B  F003         	goto	l9636
  9598  000682                     u6880:
  9599  000682                     
  9600                           ;stateMachine/gameController.c: 212:                     g->b.dy=-g->b.dy;
  9601  000682  EE20 F0D3          	lfsr	2,211
  9602  000686  501B               	movf	checkCollision@g^0,w,c
  9603  000688  26D9               	addwf	fsr2l,f,c
  9604  00068A  501C               	movf	(checkCollision@g+1)^0,w,c
  9605  00068C  22DA               	addwfc	fsr2h,f,c
  9606  00068E  CFDE F01D          	movff	postinc2,??_checkCollision
  9607  000692  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9608  000696  1E1D               	comf	??_checkCollision^0,f,c
  9609  000698  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9610  00069A  4A1D               	infsnz	??_checkCollision^0,f,c
  9611  00069C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9612  00069E  EE20 F0D3          	lfsr	2,211
  9613  0006A2  501B               	movf	checkCollision@g^0,w,c
  9614  0006A4  26D9               	addwf	fsr2l,f,c
  9615  0006A6  501C               	movf	(checkCollision@g+1)^0,w,c
  9616  0006A8  22DA               	addwfc	fsr2h,f,c
  9617  0006AA  C01D  FFDE         	movff	??_checkCollision,postinc2
  9618  0006AE  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9619                           
  9620                           ;stateMachine/gameController.c: 213:                 }
  9621  0006B2  EFC4  F003         	goto	l677
  9622  0006B6                     l9636:
  9623  0006B6  EE20 F0DF          	lfsr	2,223
  9624  0006BA  501B               	movf	checkCollision@g^0,w,c
  9625  0006BC  26D9               	addwf	fsr2l,f,c
  9626  0006BE  501C               	movf	(checkCollision@g+1)^0,w,c
  9627  0006C0  22DA               	addwfc	fsr2h,f,c
  9628  0006C2  CFDE F01D          	movff	postinc2,??_checkCollision
  9629  0006C6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9630  0006CA  EE20 F0C9          	lfsr	2,201
  9631  0006CE  501B               	movf	checkCollision@g^0,w,c
  9632  0006D0  26D9               	addwf	fsr2l,f,c
  9633  0006D2  501C               	movf	(checkCollision@g+1)^0,w,c
  9634  0006D4  22DA               	addwfc	fsr2h,f,c
  9635  0006D6  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9636  0006DA  CFDD F020          	movff	postdec2,??_checkCollision+3
  9637  0006DE  501D               	movf	??_checkCollision^0,w,c
  9638  0006E0  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  9639  0006E2  501E               	movf	(??_checkCollision+1)^0,w,c
  9640  0006E4  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  9641  0006E6  5020               	movf	(??_checkCollision+3)^0,w,c
  9642  0006E8  E107               	bnz	u6891
  9643  0006EA  0E28               	movlw	40
  9644  0006EC  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  9645  0006EE  B0D8               	btfsc	status,0,c
  9646  0006F0  EF7C  F003         	goto	u6891
  9647  0006F4  EF7E  F003         	goto	u6890
  9648  0006F8                     u6891:
  9649  0006F8  EFA2  F003         	goto	l9640
  9650  0006FC                     u6890:
  9651  0006FC                     
  9652                           ;stateMachine/gameController.c: 215:                 {;stateMachine/gameController.c: 21
      +                          7:                     g->b.dy=-g->b.dy;
  9653  0006FC  EE20 F0D3          	lfsr	2,211
  9654  000700  501B               	movf	checkCollision@g^0,w,c
  9655  000702  26D9               	addwf	fsr2l,f,c
  9656  000704  501C               	movf	(checkCollision@g+1)^0,w,c
  9657  000706  22DA               	addwfc	fsr2h,f,c
  9658  000708  CFDE F01D          	movff	postinc2,??_checkCollision
  9659  00070C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9660  000710  1E1D               	comf	??_checkCollision^0,f,c
  9661  000712  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9662  000714  4A1D               	infsnz	??_checkCollision^0,f,c
  9663  000716  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9664  000718  EE20 F0D3          	lfsr	2,211
  9665  00071C  501B               	movf	checkCollision@g^0,w,c
  9666  00071E  26D9               	addwf	fsr2l,f,c
  9667  000720  501C               	movf	(checkCollision@g+1)^0,w,c
  9668  000722  22DA               	addwfc	fsr2h,f,c
  9669  000724  C01D  FFDE         	movff	??_checkCollision,postinc2
  9670  000728  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9671                           
  9672                           ;stateMachine/gameController.c: 218:                     g->b.dx=1;
  9673  00072C  EE20 F0D1          	lfsr	2,209
  9674  000730  501B               	movf	checkCollision@g^0,w,c
  9675  000732  26D9               	addwf	fsr2l,f,c
  9676  000734  501C               	movf	(checkCollision@g+1)^0,w,c
  9677  000736  22DA               	addwfc	fsr2h,f,c
  9678  000738  0E01               	movlw	1
  9679  00073A  6EDE               	movwf	postinc2,c
  9680  00073C  0E00               	movlw	0
  9681  00073E  6EDD               	movwf	postdec2,c
  9682                           
  9683                           ;stateMachine/gameController.c: 219:                 }
  9684  000740  EFC4  F003         	goto	l677
  9685  000744                     l9640:
  9686                           
  9687                           ;stateMachine/gameController.c: 221:                 {;stateMachine/gameController.c: 22
      +                          3:                     g->b.dy=-g->b.dy;
  9688  000744  EE20 F0D3          	lfsr	2,211
  9689  000748  501B               	movf	checkCollision@g^0,w,c
  9690  00074A  26D9               	addwf	fsr2l,f,c
  9691  00074C  501C               	movf	(checkCollision@g+1)^0,w,c
  9692  00074E  22DA               	addwfc	fsr2h,f,c
  9693  000750  CFDE F01D          	movff	postinc2,??_checkCollision
  9694  000754  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9695  000758  1E1D               	comf	??_checkCollision^0,f,c
  9696  00075A  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9697  00075C  4A1D               	infsnz	??_checkCollision^0,f,c
  9698  00075E  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9699  000760  EE20 F0D3          	lfsr	2,211
  9700  000764  501B               	movf	checkCollision@g^0,w,c
  9701  000766  26D9               	addwf	fsr2l,f,c
  9702  000768  501C               	movf	(checkCollision@g+1)^0,w,c
  9703  00076A  22DA               	addwfc	fsr2h,f,c
  9704  00076C  C01D  FFDE         	movff	??_checkCollision,postinc2
  9705  000770  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9706                           
  9707                           ;stateMachine/gameController.c: 224:                     g->b.dx=2;
  9708  000774  EE20 F0D1          	lfsr	2,209
  9709  000778  501B               	movf	checkCollision@g^0,w,c
  9710  00077A  26D9               	addwf	fsr2l,f,c
  9711  00077C  501C               	movf	(checkCollision@g+1)^0,w,c
  9712  00077E  22DA               	addwfc	fsr2h,f,c
  9713  000780  0E02               	movlw	2
  9714  000782  6EDE               	movwf	postinc2,c
  9715  000784  0E00               	movlw	0
  9716  000786  6EDD               	movwf	postdec2,c
  9717  000788                     l677:
  9718                           
  9719                           ;stateMachine/gameController.c: 227:                 g->s1.awayScore++;
  9720  000788  EE20 F0EB          	lfsr	2,235
  9721  00078C  501B               	movf	checkCollision@g^0,w,c
  9722  00078E  26D9               	addwf	fsr2l,f,c
  9723  000790  501C               	movf	(checkCollision@g+1)^0,w,c
  9724  000792  22DA               	addwfc	fsr2h,f,c
  9725  000794  2ADE               	incf	postinc2,f,c
  9726  000796  0E00               	movlw	0
  9727  000798  22DD               	addwfc	postdec2,f,c
  9728  00079A                     
  9729                           ;stateMachine/gameController.c: 228:                 XF_pushEvent(evRedrawScore,0);
  9730  00079A  0E00               	movlw	0
  9731  00079C  6E18               	movwf	XF_pushEvent@inISR^0,c
  9732  00079E  0E0E               	movlw	14
  9733  0007A0  ECD6  F02E         	call	_XF_pushEvent
  9734  0007A4                     l9644:
  9735                           
  9736                           ;stateMachine/gameController.c: 233:     if(g->b.x+4>=239)
  9737  0007A4  EE20 F0C9          	lfsr	2,201
  9738  0007A8  501B               	movf	checkCollision@g^0,w,c
  9739  0007AA  26D9               	addwf	fsr2l,f,c
  9740  0007AC  501C               	movf	(checkCollision@g+1)^0,w,c
  9741  0007AE  22DA               	addwfc	fsr2h,f,c
  9742  0007B0  CFDE F01D          	movff	postinc2,??_checkCollision
  9743  0007B4  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9744  0007B8  0E04               	movlw	4
  9745  0007BA  261D               	addwf	??_checkCollision^0,f,c
  9746  0007BC  0E00               	movlw	0
  9747  0007BE  221E               	addwfc	(??_checkCollision+1)^0,f,c
  9748  0007C0  501E               	movf	(??_checkCollision+1)^0,w,c
  9749  0007C2  E109               	bnz	u6900
  9750  0007C4  0EEF               	movlw	239
  9751  0007C6  5C1D               	subwf	??_checkCollision^0,w,c
  9752  0007C8  A0D8               	btfss	status,0,c
  9753  0007CA  EFE9  F003         	goto	u6901
  9754  0007CE  EFEB  F003         	goto	u6900
  9755  0007D2                     u6901:
  9756  0007D2  EF03  F004         	goto	l684
  9757  0007D6                     u6900:
  9758  0007D6                     
  9759                           ;stateMachine/gameController.c: 234:     {;stateMachine/gameController.c: 235:         g
      +                          ->b.dx=-g->b.dx;
  9760  0007D6  EE20 F0D1          	lfsr	2,209
  9761  0007DA  501B               	movf	checkCollision@g^0,w,c
  9762  0007DC  26D9               	addwf	fsr2l,f,c
  9763  0007DE  501C               	movf	(checkCollision@g+1)^0,w,c
  9764  0007E0  22DA               	addwfc	fsr2h,f,c
  9765  0007E2  CFDE F01D          	movff	postinc2,??_checkCollision
  9766  0007E6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9767  0007EA  1E1D               	comf	??_checkCollision^0,f,c
  9768  0007EC  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9769  0007EE  4A1D               	infsnz	??_checkCollision^0,f,c
  9770  0007F0  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9771  0007F2  EE20 F0D1          	lfsr	2,209
  9772  0007F6  501B               	movf	checkCollision@g^0,w,c
  9773  0007F8  26D9               	addwf	fsr2l,f,c
  9774  0007FA  501C               	movf	(checkCollision@g+1)^0,w,c
  9775  0007FC  22DA               	addwfc	fsr2h,f,c
  9776  0007FE  C01D  FFDE         	movff	??_checkCollision,postinc2
  9777  000802  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9778  000806                     l684:
  9779                           
  9780                           ;stateMachine/gameController.c: 237:     if(g->b.x-4<=0)
  9781  000806  0EFC               	movlw	252
  9782  000808  6E1D               	movwf	??_checkCollision^0,c
  9783  00080A  0EFF               	movlw	255
  9784  00080C  6E1E               	movwf	(??_checkCollision+1)^0,c
  9785  00080E  EE20 F0C9          	lfsr	2,201
  9786  000812  501B               	movf	checkCollision@g^0,w,c
  9787  000814  26D9               	addwf	fsr2l,f,c
  9788  000816  501C               	movf	(checkCollision@g+1)^0,w,c
  9789  000818  22DA               	addwfc	fsr2h,f,c
  9790  00081A  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9791  00081E  CFDD F020          	movff	postdec2,??_checkCollision+3
  9792  000822  501D               	movf	??_checkCollision^0,w,c
  9793  000824  261F               	addwf	(??_checkCollision+2)^0,f,c
  9794  000826  501E               	movf	(??_checkCollision+1)^0,w,c
  9795  000828  2220               	addwfc	(??_checkCollision+3)^0,f,c
  9796  00082A  501F               	movf	(??_checkCollision+2)^0,w,c
  9797  00082C  1020               	iorwf	(??_checkCollision+3)^0,w,c
  9798  00082E  A4D8               	btfss	status,2,c
  9799  000830  EF1C  F004         	goto	u6911
  9800  000834  EF1E  F004         	goto	u6910
  9801  000838                     u6911:
  9802  000838  EF36  F004         	goto	l685
  9803  00083C                     u6910:
  9804  00083C                     
  9805                           ;stateMachine/gameController.c: 238:     {;stateMachine/gameController.c: 239:         g
      +                          ->b.dx=-g->b.dx;
  9806  00083C  EE20 F0D1          	lfsr	2,209
  9807  000840  501B               	movf	checkCollision@g^0,w,c
  9808  000842  26D9               	addwf	fsr2l,f,c
  9809  000844  501C               	movf	(checkCollision@g+1)^0,w,c
  9810  000846  22DA               	addwfc	fsr2h,f,c
  9811  000848  CFDE F01D          	movff	postinc2,??_checkCollision
  9812  00084C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9813  000850  1E1D               	comf	??_checkCollision^0,f,c
  9814  000852  1E1E               	comf	(??_checkCollision+1)^0,f,c
  9815  000854  4A1D               	infsnz	??_checkCollision^0,f,c
  9816  000856  2A1E               	incf	(??_checkCollision+1)^0,f,c
  9817  000858  EE20 F0D1          	lfsr	2,209
  9818  00085C  501B               	movf	checkCollision@g^0,w,c
  9819  00085E  26D9               	addwf	fsr2l,f,c
  9820  000860  501C               	movf	(checkCollision@g+1)^0,w,c
  9821  000862  22DA               	addwfc	fsr2h,f,c
  9822  000864  C01D  FFDE         	movff	??_checkCollision,postinc2
  9823  000868  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  9824  00086C                     l685:
  9825                           
  9826                           ;stateMachine/gameController.c: 242:     if(g->b.y-4<=g->p2.y-5)
  9827  00086C  0EFC               	movlw	252
  9828  00086E  6E1D               	movwf	??_checkCollision^0,c
  9829  000870  0EFF               	movlw	255
  9830  000872  6E1E               	movwf	(??_checkCollision+1)^0,c
  9831  000874  EE20 F0CB          	lfsr	2,203
  9832  000878  501B               	movf	checkCollision@g^0,w,c
  9833  00087A  26D9               	addwf	fsr2l,f,c
  9834  00087C  501C               	movf	(checkCollision@g+1)^0,w,c
  9835  00087E  22DA               	addwfc	fsr2h,f,c
  9836  000880  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9837  000884  CFDD F020          	movff	postdec2,??_checkCollision+3
  9838  000888  501D               	movf	??_checkCollision^0,w,c
  9839  00088A  261F               	addwf	(??_checkCollision+2)^0,f,c
  9840  00088C  501E               	movf	(??_checkCollision+1)^0,w,c
  9841  00088E  2220               	addwfc	(??_checkCollision+3)^0,f,c
  9842  000890  0EFB               	movlw	251
  9843  000892  6E21               	movwf	(??_checkCollision+4)^0,c
  9844  000894  0EFF               	movlw	255
  9845  000896  6E22               	movwf	(??_checkCollision+5)^0,c
  9846  000898  EE20 F0E1          	lfsr	2,225
  9847  00089C  501B               	movf	checkCollision@g^0,w,c
  9848  00089E  26D9               	addwf	fsr2l,f,c
  9849  0008A0  501C               	movf	(checkCollision@g+1)^0,w,c
  9850  0008A2  22DA               	addwfc	fsr2h,f,c
  9851  0008A4  CFDE F023          	movff	postinc2,??_checkCollision+6
  9852  0008A8  CFDD F024          	movff	postdec2,??_checkCollision+7
  9853  0008AC  5021               	movf	(??_checkCollision+4)^0,w,c
  9854  0008AE  2623               	addwf	(??_checkCollision+6)^0,f,c
  9855  0008B0  5022               	movf	(??_checkCollision+5)^0,w,c
  9856  0008B2  2224               	addwfc	(??_checkCollision+7)^0,f,c
  9857  0008B4  501F               	movf	(??_checkCollision+2)^0,w,c
  9858  0008B6  5C23               	subwf	(??_checkCollision+6)^0,w,c
  9859  0008B8  5020               	movf	(??_checkCollision+3)^0,w,c
  9860  0008BA  5824               	subwfb	(??_checkCollision+7)^0,w,c
  9861  0008BC  A0D8               	btfss	status,0,c
  9862  0008BE  EF63  F004         	goto	u6921
  9863  0008C2  EF65  F004         	goto	u6920
  9864  0008C6                     u6921:
  9865  0008C6  EF76  F004         	goto	l9656
  9866  0008CA                     u6920:
  9867  0008CA                     
  9868                           ;stateMachine/gameController.c: 243:     {;stateMachine/gameController.c: 245:         X
      +                          F_pushEvent(evEndGame,0);
  9869  0008CA  0E00               	movlw	0
  9870  0008CC  6E18               	movwf	XF_pushEvent@inISR^0,c
  9871  0008CE  0E09               	movlw	9
  9872  0008D0  ECD6  F02E         	call	_XF_pushEvent
  9873  0008D4                     
  9874                           ;stateMachine/gameController.c: 246:         g->s1.awayScore=0;
  9875  0008D4  EE20 F0EB          	lfsr	2,235
  9876  0008D8  501B               	movf	checkCollision@g^0,w,c
  9877  0008DA  26D9               	addwf	fsr2l,f,c
  9878  0008DC  501C               	movf	(checkCollision@g+1)^0,w,c
  9879  0008DE  22DA               	addwfc	fsr2h,f,c
  9880  0008E0  0E00               	movlw	0
  9881  0008E2  6EDE               	movwf	postinc2,c
  9882  0008E4  0E00               	movlw	0
  9883  0008E6  6EDD               	movwf	postdec2,c
  9884  0008E8                     
  9885                           ;stateMachine/gameController.c: 247:         gameControllerState=ENDGAME;
  9886  0008E8  0E04               	movlw	4
  9887  0008EA  6E4D               	movwf	_gameControllerState^0,c
  9888  0008EC                     l9656:
  9889                           
  9890                           ;stateMachine/gameController.c: 249:     if(g->b.y+4>=g->p1.y+5)
  9891  0008EC  EE20 F0D7          	lfsr	2,215
  9892  0008F0  501B               	movf	checkCollision@g^0,w,c
  9893  0008F2  26D9               	addwf	fsr2l,f,c
  9894  0008F4  501C               	movf	(checkCollision@g+1)^0,w,c
  9895  0008F6  22DA               	addwfc	fsr2h,f,c
  9896  0008F8  CFDE F01D          	movff	postinc2,??_checkCollision
  9897  0008FC  CFDD F01E          	movff	postdec2,??_checkCollision+1
  9898  000900  0E05               	movlw	5
  9899  000902  261D               	addwf	??_checkCollision^0,f,c
  9900  000904  0E00               	movlw	0
  9901  000906  221E               	addwfc	(??_checkCollision+1)^0,f,c
  9902  000908  EE20 F0CB          	lfsr	2,203
  9903  00090C  501B               	movf	checkCollision@g^0,w,c
  9904  00090E  26D9               	addwf	fsr2l,f,c
  9905  000910  501C               	movf	(checkCollision@g+1)^0,w,c
  9906  000912  22DA               	addwfc	fsr2h,f,c
  9907  000914  CFDE F01F          	movff	postinc2,??_checkCollision+2
  9908  000918  CFDD F020          	movff	postdec2,??_checkCollision+3
  9909  00091C  0E04               	movlw	4
  9910  00091E  261F               	addwf	(??_checkCollision+2)^0,f,c
  9911  000920  0E00               	movlw	0
  9912  000922  2220               	addwfc	(??_checkCollision+3)^0,f,c
  9913  000924  501D               	movf	??_checkCollision^0,w,c
  9914  000926  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  9915  000928  501E               	movf	(??_checkCollision+1)^0,w,c
  9916  00092A  5820               	subwfb	(??_checkCollision+3)^0,w,c
  9917  00092C  A0D8               	btfss	status,0,c
  9918  00092E  EF9B  F004         	goto	u6931
  9919  000932  EF9D  F004         	goto	u6930
  9920  000936                     u6931:
  9921  000936  EFAE  F004         	goto	l688
  9922  00093A                     u6930:
  9923  00093A                     
  9924                           ;stateMachine/gameController.c: 250:     {;stateMachine/gameController.c: 252:         X
      +                          F_pushEvent(evEndGame,0);
  9925  00093A  0E00               	movlw	0
  9926  00093C  6E18               	movwf	XF_pushEvent@inISR^0,c
  9927  00093E  0E09               	movlw	9
  9928  000940  ECD6  F02E         	call	_XF_pushEvent
  9929  000944                     
  9930                           ;stateMachine/gameController.c: 253:         g->s1.homeScore=0;
  9931  000944  EE20 F0E9          	lfsr	2,233
  9932  000948  501B               	movf	checkCollision@g^0,w,c
  9933  00094A  26D9               	addwf	fsr2l,f,c
  9934  00094C  501C               	movf	(checkCollision@g+1)^0,w,c
  9935  00094E  22DA               	addwfc	fsr2h,f,c
  9936  000950  0E00               	movlw	0
  9937  000952  6EDE               	movwf	postinc2,c
  9938  000954  0E00               	movlw	0
  9939  000956  6EDD               	movwf	postdec2,c
  9940  000958                     
  9941                           ;stateMachine/gameController.c: 254:         gameControllerState=ENDGAME;
  9942  000958  0E04               	movlw	4
  9943  00095A  6E4D               	movwf	_gameControllerState^0,c
  9944  00095C                     l688:
  9945  00095C  0012               	return		;funcret
  9946  00095E                     __end_of_checkCollision:
  9947                           	callstack 0
  9948                           
  9949 ;; *************** function _XF_pushEvent *****************
  9950 ;; Defined at:
  9951 ;;		line 49 in file "xf/xf.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;  ev              1    wreg     unsigned char 
  9954 ;;  inISR           1   23[COMRAM] _Bool 
  9955 ;; Auto vars:     Size  Location     Type
  9956 ;;  ev              1   24[COMRAM] unsigned char 
  9957 ;;  temp            1   25[COMRAM] unsigned char 
  9958 ;; Return value:  Size  Location     Type
  9959 ;;                  1    wreg      _Bool 
  9960 ;; Registers used:
  9961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9962 ;; Tracked objects:
  9963 ;;		On entry : 0/0
  9964 ;;		On exit  : 0/0
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9967 ;;      Params:         1       0       0       0       0       0       0
  9968 ;;      Locals:         2       0       0       0       0       0       0
  9969 ;;      Temps:          0       0       0       0       0       0       0
  9970 ;;      Totals:         3       0       0       0       0       0       0
  9971 ;;Total ram usage:        3 bytes
  9972 ;; Hardware stack levels used: 1
  9973 ;; Hardware stack levels required when called: 5
  9974 ;; This function calls:
  9975 ;;		_ENTERCRITICAL
  9976 ;;		_LEAVECRITICAL
  9977 ;;		___awmod
  9978 ;; This function is called by:
  9979 ;;		_gameControllerController
  9980 ;;		_moovePaddle
  9981 ;;		_mooveBall
  9982 ;;		_checkCollision
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text35
  9987  005DAC                     __ptext35:
  9988                           	callstack 0
  9989  005DAC                     _XF_pushEvent:
  9990                           	callstack 20
  9991                           
  9992                           ;incstack = 0
  9993                           ;XF_pushEvent@ev stored from wreg
  9994  005DAC  6E19               	movwf	XF_pushEvent@ev^0,c
  9995  005DAE                     
  9996                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
  9997  005DAE  5018               	movf	XF_pushEvent@inISR^0,w,c
  9998  005DB0  ECFA  F031         	call	_ENTERCRITICAL
  9999  005DB4                     
 10000                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 10001  005DB4  0E01               	movlw	1
 10002  005DB6  0100               	movlb	0	; () banked
 10003  005DB8  25D9               	addwf	(_theXF+36)& (0+255),w,b
 10004  005DBA  6E12               	movwf	___awmod@dividend^0,c
 10005  005DBC  6A13               	clrf	(___awmod@dividend+1)^0,c
 10006  005DBE  0E00               	movlw	0
 10007  005DC0  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 10008  005DC2  0E00               	movlw	0
 10009  005DC4  6E15               	movwf	(___awmod@divisor+1)^0,c
 10010  005DC6  0E0C               	movlw	12
 10011  005DC8  6E14               	movwf	___awmod@divisor^0,c
 10012  005DCA  EC95  F02B         	call	___awmod	;wreg free
 10013  005DCE  5012               	movf	?___awmod^0,w,c
 10014  005DD0  6E1A               	movwf	XF_pushEvent@temp^0,c
 10015  005DD2                     
 10016                           ;xf/xf.c: 55:     if(temp == theXF.out)
 10017  005DD2  501A               	movf	XF_pushEvent@temp^0,w,c
 10018  005DD4  0100               	movlb	0	; () banked
 10019  005DD6  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 10020  005DD8  A4D8               	btfss	status,2,c
 10021  005DDA  EFF1  F02E         	goto	u6601
 10022  005DDE  EFF3  F02E         	goto	u6600
 10023  005DE2                     u6601:
 10024  005DE2  EFF9  F02E         	goto	l9374
 10025  005DE6                     u6600:
 10026  005DE6                     
 10027                           ; BSR set to: 0
 10028                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 10029  005DE6  5018               	movf	XF_pushEvent@inISR^0,w,c
 10030  005DE8  ECEF  F031         	call	_LEAVECRITICAL
 10031  005DEC                     
 10032                           ;xf/xf.c: 58:       return 0;
 10033  005DEC  0E00               	movlw	0
 10034  005DEE  EF07  F02F         	goto	l733
 10035  005DF2                     l9374:
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 10039  005DF2  0ECD               	movlw	low (_theXF+24)
 10040  005DF4  25D9               	addwf	(_theXF+36)& (0+255),w,b
 10041  005DF6  6ED9               	movwf	fsr2l,c
 10042  005DF8  6ADA               	clrf	fsr2h,c
 10043  005DFA  0E00               	movlw	high (_theXF+24)
 10044  005DFC  22DA               	addwfc	fsr2h,f,c
 10045  005DFE  C019  FFDF         	movff	XF_pushEvent@ev,indf2
 10046  005E02                     
 10047                           ; BSR set to: 0
 10048                           ;xf/xf.c: 61:     theXF.in = temp;
 10049  005E02  C01A  F0D9         	movff	XF_pushEvent@temp,_theXF+36
 10050  005E06                     
 10051                           ; BSR set to: 0
 10052                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 10053  005E06  5018               	movf	XF_pushEvent@inISR^0,w,c
 10054  005E08  ECEF  F031         	call	_LEAVECRITICAL
 10055  005E0C                     
 10056                           ;xf/xf.c: 63:     return 1;
 10057  005E0C  0E01               	movlw	1
 10058  005E0E                     l733:
 10059  005E0E  0012               	return		;funcret
 10060  005E10                     __end_of_XF_pushEvent:
 10061                           	callstack 0
 10062                           
 10063 ;; *************** function _Ball_Update *****************
 10064 ;; Defined at:
 10065 ;;		line 12 in file "class/ball.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  b               2   17[COMRAM] PTR struct Ball
 10068 ;;		 -> g1(239), 
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;		None
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  1    wreg      void 
 10073 ;; Registers used:
 10074 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10080 ;;      Params:         2       0       0       0       0       0       0
 10081 ;;      Locals:         0       0       0       0       0       0       0
 10082 ;;      Temps:          4       0       0       0       0       0       0
 10083 ;;      Totals:         6       0       0       0       0       0       0
 10084 ;;Total ram usage:        6 bytes
 10085 ;; Hardware stack levels used: 1
 10086 ;; Hardware stack levels required when called: 4
 10087 ;; This function calls:
 10088 ;;		Nothing
 10089 ;; This function is called by:
 10090 ;;		_mooveBall
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           	psect	text36
 10095  005A5E                     __ptext36:
 10096                           	callstack 0
 10097  005A5E                     _Ball_Update:
 10098                           	callstack 21
 10099  005A5E                     
 10100                           ;class/ball.c: 12: void Ball_Update(struct Ball* b);class/ball.c: 13: {;class/ball.c: 14
      +                          :     b->x=b->x+b->dx;
 10101  005A5E  EE20 F008          	lfsr	2,8
 10102  005A62  5012               	movf	Ball_Update@b^0,w,c
 10103  005A64  26D9               	addwf	fsr2l,f,c
 10104  005A66  5013               	movf	(Ball_Update@b+1)^0,w,c
 10105  005A68  22DA               	addwfc	fsr2h,f,c
 10106  005A6A  CFDE F014          	movff	postinc2,??_Ball_Update
 10107  005A6E  CFDD F015          	movff	postdec2,??_Ball_Update+1
 10108  005A72  C012  FFD9         	movff	Ball_Update@b,fsr2l
 10109  005A76  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
 10110  005A7A  CFDE F016          	movff	postinc2,??_Ball_Update+2
 10111  005A7E  CFDD F017          	movff	postdec2,??_Ball_Update+3
 10112  005A82  5014               	movf	??_Ball_Update^0,w,c
 10113  005A84  2616               	addwf	(??_Ball_Update+2)^0,f,c
 10114  005A86  5015               	movf	(??_Ball_Update+1)^0,w,c
 10115  005A88  2217               	addwfc	(??_Ball_Update+3)^0,f,c
 10116  005A8A  C012  FFD9         	movff	Ball_Update@b,fsr2l
 10117  005A8E  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
 10118  005A92  C016  FFDE         	movff	??_Ball_Update+2,postinc2
 10119  005A96  C017  FFDD         	movff	??_Ball_Update+3,postdec2
 10120                           
 10121                           ;class/ball.c: 15:     b->y=b->y+b->dy;
 10122  005A9A  EE20 F00A          	lfsr	2,10
 10123  005A9E  5012               	movf	Ball_Update@b^0,w,c
 10124  005AA0  26D9               	addwf	fsr2l,f,c
 10125  005AA2  5013               	movf	(Ball_Update@b+1)^0,w,c
 10126  005AA4  22DA               	addwfc	fsr2h,f,c
 10127  005AA6  CFDE F014          	movff	postinc2,??_Ball_Update
 10128  005AAA  CFDD F015          	movff	postdec2,??_Ball_Update+1
 10129  005AAE  EE20 F002          	lfsr	2,2
 10130  005AB2  5012               	movf	Ball_Update@b^0,w,c
 10131  005AB4  26D9               	addwf	fsr2l,f,c
 10132  005AB6  5013               	movf	(Ball_Update@b+1)^0,w,c
 10133  005AB8  22DA               	addwfc	fsr2h,f,c
 10134  005ABA  CFDE F016          	movff	postinc2,??_Ball_Update+2
 10135  005ABE  CFDD F017          	movff	postdec2,??_Ball_Update+3
 10136  005AC2  5014               	movf	??_Ball_Update^0,w,c
 10137  005AC4  2616               	addwf	(??_Ball_Update+2)^0,f,c
 10138  005AC6  5015               	movf	(??_Ball_Update+1)^0,w,c
 10139  005AC8  2217               	addwfc	(??_Ball_Update+3)^0,f,c
 10140  005ACA  EE20 F002          	lfsr	2,2
 10141  005ACE  5012               	movf	Ball_Update@b^0,w,c
 10142  005AD0  26D9               	addwf	fsr2l,f,c
 10143  005AD2  5013               	movf	(Ball_Update@b+1)^0,w,c
 10144  005AD4  22DA               	addwfc	fsr2h,f,c
 10145  005AD6  C016  FFDE         	movff	??_Ball_Update+2,postinc2
 10146  005ADA  C017  FFDD         	movff	??_Ball_Update+3,postdec2
 10147  005ADE  0012               	return		;funcret
 10148  005AE0                     __end_of_Ball_Update:
 10149                           	callstack 0
 10150                           
 10151 ;; *************** function _backlightController *****************
 10152 ;; Defined at:
 10153 ;;		line 258 in file "stateMachine/gameController.c"
 10154 ;; Parameters:    Size  Location     Type
 10155 ;;  g               2   23[COMRAM] PTR struct GameParameter
 10156 ;;		 -> g1(239), 
 10157 ;; Auto vars:     Size  Location     Type
 10158 ;;		None
 10159 ;; Return value:  Size  Location     Type
 10160 ;;                  1    wreg      void 
 10161 ;; Registers used:
 10162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10163 ;; Tracked objects:
 10164 ;;		On entry : 0/0
 10165 ;;		On exit  : 0/0
 10166 ;;		Unchanged: 0/0
 10167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10168 ;;      Params:         2       0       0       0       0       0       0
 10169 ;;      Locals:         0       0       0       0       0       0       0
 10170 ;;      Temps:          2       0       0       0       0       0       0
 10171 ;;      Totals:         4       0       0       0       0       0       0
 10172 ;;Total ram usage:        4 bytes
 10173 ;; Hardware stack levels used: 1
 10174 ;; Hardware stack levels required when called: 5
 10175 ;; This function calls:
 10176 ;;		_GameParameters_setBackLight
 10177 ;; This function is called by:
 10178 ;;		_gameControllerController
 10179 ;; This function uses a non-reentrant model
 10180 ;;
 10181                           
 10182                           	psect	text37
 10183  001918                     __ptext37:
 10184                           	callstack 0
 10185  001918                     _backlightController:
 10186                           	callstack 21
 10187  001918                     
 10188                           ;stateMachine/gameController.c: 258: void backlightController(GameParameters* g);stateMa
      +                          chine/gameController.c: 259: {;stateMachine/gameController.c: 260:     if(((g->x)>=50)&&
      +                          ((g->x)<64))
 10189  001918  EE20 F004          	lfsr	2,4
 10190  00191C  5018               	movf	backlightController@g^0,w,c
 10191  00191E  26D9               	addwf	fsr2l,f,c
 10192  001920  5019               	movf	(backlightController@g+1)^0,w,c
 10193  001922  22DA               	addwfc	fsr2h,f,c
 10194  001924  0E01               	movlw	1
 10195  001926  50DB               	movf	plusw2,w,c
 10196  001928  E109               	bnz	u6990
 10197  00192A  0E32               	movlw	50
 10198  00192C  5CDE               	subwf	postinc2,w,c
 10199  00192E  A0D8               	btfss	status,0,c
 10200  001930  EF9C  F00C         	goto	u6991
 10201  001934  EF9E  F00C         	goto	u6990
 10202  001938                     u6991:
 10203  001938  EFBC  F00C         	goto	l9746
 10204  00193C                     u6990:
 10205  00193C  EE20 F004          	lfsr	2,4
 10206  001940  5018               	movf	backlightController@g^0,w,c
 10207  001942  26D9               	addwf	fsr2l,f,c
 10208  001944  5019               	movf	(backlightController@g+1)^0,w,c
 10209  001946  22DA               	addwfc	fsr2h,f,c
 10210  001948  0E01               	movlw	1
 10211  00194A  50DB               	movf	plusw2,w,c
 10212  00194C  E107               	bnz	u7001
 10213  00194E  0E40               	movlw	64
 10214  001950  5CDE               	subwf	postinc2,w,c
 10215  001952  B0D8               	btfsc	status,0,c
 10216  001954  EFAE  F00C         	goto	u7001
 10217  001958  EFB0  F00C         	goto	u7000
 10218  00195C                     u7001:
 10219  00195C  EFBC  F00C         	goto	l9746
 10220  001960                     u7000:
 10221  001960                     
 10222                           ;stateMachine/gameController.c: 261:     {;stateMachine/gameController.c: 262:         G
      +                          ameParameters_setBackLight(g,0);
 10223  001960  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10224  001964  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10225  001968  0E00               	movlw	0
 10226  00196A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10227  00196C  0E00               	movlw	0
 10228  00196E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10229  001970  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10230                           
 10231                           ;stateMachine/gameController.c: 263:     }
 10232  001974  EFCC  F00E         	goto	l9812
 10233  001978                     l9746:
 10234  001978  EE20 F004          	lfsr	2,4
 10235  00197C  5018               	movf	backlightController@g^0,w,c
 10236  00197E  26D9               	addwf	fsr2l,f,c
 10237  001980  5019               	movf	(backlightController@g+1)^0,w,c
 10238  001982  22DA               	addwfc	fsr2h,f,c
 10239  001984  0E01               	movlw	1
 10240  001986  50DB               	movf	plusw2,w,c
 10241  001988  E109               	bnz	u7010
 10242  00198A  0E40               	movlw	64
 10243  00198C  5CDE               	subwf	postinc2,w,c
 10244  00198E  A0D8               	btfss	status,0,c
 10245  001990  EFCC  F00C         	goto	u7011
 10246  001994  EFCE  F00C         	goto	u7010
 10247  001998                     u7011:
 10248  001998  EFEC  F00C         	goto	l9752
 10249  00199C                     u7010:
 10250  00199C  EE20 F004          	lfsr	2,4
 10251  0019A0  5018               	movf	backlightController@g^0,w,c
 10252  0019A2  26D9               	addwf	fsr2l,f,c
 10253  0019A4  5019               	movf	(backlightController@g+1)^0,w,c
 10254  0019A6  22DA               	addwfc	fsr2h,f,c
 10255  0019A8  0E01               	movlw	1
 10256  0019AA  50DB               	movf	plusw2,w,c
 10257  0019AC  E107               	bnz	u7021
 10258  0019AE  0E4E               	movlw	78
 10259  0019B0  5CDE               	subwf	postinc2,w,c
 10260  0019B2  B0D8               	btfsc	status,0,c
 10261  0019B4  EFDE  F00C         	goto	u7021
 10262  0019B8  EFE0  F00C         	goto	u7020
 10263  0019BC                     u7021:
 10264  0019BC  EFEC  F00C         	goto	l9752
 10265  0019C0                     u7020:
 10266  0019C0                     
 10267                           ;stateMachine/gameController.c: 265:     {;stateMachine/gameController.c: 266:         G
      +                          ameParameters_setBackLight(g,1);
 10268  0019C0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10269  0019C4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10270  0019C8  0E00               	movlw	0
 10271  0019CA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10272  0019CC  0E01               	movlw	1
 10273  0019CE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10274  0019D0  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10275                           
 10276                           ;stateMachine/gameController.c: 267:     }
 10277  0019D4  EFCC  F00E         	goto	l9812
 10278  0019D8                     l9752:
 10279  0019D8  EE20 F004          	lfsr	2,4
 10280  0019DC  5018               	movf	backlightController@g^0,w,c
 10281  0019DE  26D9               	addwf	fsr2l,f,c
 10282  0019E0  5019               	movf	(backlightController@g+1)^0,w,c
 10283  0019E2  22DA               	addwfc	fsr2h,f,c
 10284  0019E4  0E01               	movlw	1
 10285  0019E6  50DB               	movf	plusw2,w,c
 10286  0019E8  E109               	bnz	u7030
 10287  0019EA  0E4E               	movlw	78
 10288  0019EC  5CDE               	subwf	postinc2,w,c
 10289  0019EE  A0D8               	btfss	status,0,c
 10290  0019F0  EFFC  F00C         	goto	u7031
 10291  0019F4  EFFE  F00C         	goto	u7030
 10292  0019F8                     u7031:
 10293  0019F8  EF1C  F00D         	goto	l9758
 10294  0019FC                     u7030:
 10295  0019FC  EE20 F004          	lfsr	2,4
 10296  001A00  5018               	movf	backlightController@g^0,w,c
 10297  001A02  26D9               	addwf	fsr2l,f,c
 10298  001A04  5019               	movf	(backlightController@g+1)^0,w,c
 10299  001A06  22DA               	addwfc	fsr2h,f,c
 10300  001A08  0E01               	movlw	1
 10301  001A0A  50DB               	movf	plusw2,w,c
 10302  001A0C  E107               	bnz	u7041
 10303  001A0E  0E5C               	movlw	92
 10304  001A10  5CDE               	subwf	postinc2,w,c
 10305  001A12  B0D8               	btfsc	status,0,c
 10306  001A14  EF0E  F00D         	goto	u7041
 10307  001A18  EF10  F00D         	goto	u7040
 10308  001A1C                     u7041:
 10309  001A1C  EF1C  F00D         	goto	l9758
 10310  001A20                     u7040:
 10311  001A20                     
 10312                           ;stateMachine/gameController.c: 269:     {;stateMachine/gameController.c: 270:         G
      +                          ameParameters_setBackLight(g,2);
 10313  001A20  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10314  001A24  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10315  001A28  0E00               	movlw	0
 10316  001A2A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10317  001A2C  0E02               	movlw	2
 10318  001A2E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10319  001A30  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10320                           
 10321                           ;stateMachine/gameController.c: 271:     }
 10322  001A34  EFCC  F00E         	goto	l9812
 10323  001A38                     l9758:
 10324  001A38  EE20 F004          	lfsr	2,4
 10325  001A3C  5018               	movf	backlightController@g^0,w,c
 10326  001A3E  26D9               	addwf	fsr2l,f,c
 10327  001A40  5019               	movf	(backlightController@g+1)^0,w,c
 10328  001A42  22DA               	addwfc	fsr2h,f,c
 10329  001A44  0E01               	movlw	1
 10330  001A46  50DB               	movf	plusw2,w,c
 10331  001A48  E109               	bnz	u7050
 10332  001A4A  0E5C               	movlw	92
 10333  001A4C  5CDE               	subwf	postinc2,w,c
 10334  001A4E  A0D8               	btfss	status,0,c
 10335  001A50  EF2C  F00D         	goto	u7051
 10336  001A54  EF2E  F00D         	goto	u7050
 10337  001A58                     u7051:
 10338  001A58  EF4C  F00D         	goto	l9764
 10339  001A5C                     u7050:
 10340  001A5C  EE20 F004          	lfsr	2,4
 10341  001A60  5018               	movf	backlightController@g^0,w,c
 10342  001A62  26D9               	addwf	fsr2l,f,c
 10343  001A64  5019               	movf	(backlightController@g+1)^0,w,c
 10344  001A66  22DA               	addwfc	fsr2h,f,c
 10345  001A68  0E01               	movlw	1
 10346  001A6A  50DB               	movf	plusw2,w,c
 10347  001A6C  E107               	bnz	u7061
 10348  001A6E  0E6A               	movlw	106
 10349  001A70  5CDE               	subwf	postinc2,w,c
 10350  001A72  B0D8               	btfsc	status,0,c
 10351  001A74  EF3E  F00D         	goto	u7061
 10352  001A78  EF40  F00D         	goto	u7060
 10353  001A7C                     u7061:
 10354  001A7C  EF4C  F00D         	goto	l9764
 10355  001A80                     u7060:
 10356  001A80                     
 10357                           ;stateMachine/gameController.c: 273:     {;stateMachine/gameController.c: 274:         G
      +                          ameParameters_setBackLight(g,3);
 10358  001A80  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10359  001A84  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10360  001A88  0E00               	movlw	0
 10361  001A8A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10362  001A8C  0E03               	movlw	3
 10363  001A8E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10364  001A90  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10365                           
 10366                           ;stateMachine/gameController.c: 275:     }
 10367  001A94  EFCC  F00E         	goto	l9812
 10368  001A98                     l9764:
 10369  001A98  EE20 F004          	lfsr	2,4
 10370  001A9C  5018               	movf	backlightController@g^0,w,c
 10371  001A9E  26D9               	addwf	fsr2l,f,c
 10372  001AA0  5019               	movf	(backlightController@g+1)^0,w,c
 10373  001AA2  22DA               	addwfc	fsr2h,f,c
 10374  001AA4  0E01               	movlw	1
 10375  001AA6  50DB               	movf	plusw2,w,c
 10376  001AA8  E109               	bnz	u7070
 10377  001AAA  0E6A               	movlw	106
 10378  001AAC  5CDE               	subwf	postinc2,w,c
 10379  001AAE  A0D8               	btfss	status,0,c
 10380  001AB0  EF5C  F00D         	goto	u7071
 10381  001AB4  EF5E  F00D         	goto	u7070
 10382  001AB8                     u7071:
 10383  001AB8  EF7C  F00D         	goto	l9770
 10384  001ABC                     u7070:
 10385  001ABC  EE20 F004          	lfsr	2,4
 10386  001AC0  5018               	movf	backlightController@g^0,w,c
 10387  001AC2  26D9               	addwf	fsr2l,f,c
 10388  001AC4  5019               	movf	(backlightController@g+1)^0,w,c
 10389  001AC6  22DA               	addwfc	fsr2h,f,c
 10390  001AC8  0E01               	movlw	1
 10391  001ACA  50DB               	movf	plusw2,w,c
 10392  001ACC  E107               	bnz	u7081
 10393  001ACE  0E78               	movlw	120
 10394  001AD0  5CDE               	subwf	postinc2,w,c
 10395  001AD2  B0D8               	btfsc	status,0,c
 10396  001AD4  EF6E  F00D         	goto	u7081
 10397  001AD8  EF70  F00D         	goto	u7080
 10398  001ADC                     u7081:
 10399  001ADC  EF7C  F00D         	goto	l9770
 10400  001AE0                     u7080:
 10401  001AE0                     
 10402                           ;stateMachine/gameController.c: 277:     {;stateMachine/gameController.c: 278:         G
      +                          ameParameters_setBackLight(g,4);
 10403  001AE0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10404  001AE4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10405  001AE8  0E00               	movlw	0
 10406  001AEA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10407  001AEC  0E04               	movlw	4
 10408  001AEE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10409  001AF0  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10410                           
 10411                           ;stateMachine/gameController.c: 279:     }
 10412  001AF4  EFCC  F00E         	goto	l9812
 10413  001AF8                     l9770:
 10414  001AF8  EE20 F004          	lfsr	2,4
 10415  001AFC  5018               	movf	backlightController@g^0,w,c
 10416  001AFE  26D9               	addwf	fsr2l,f,c
 10417  001B00  5019               	movf	(backlightController@g+1)^0,w,c
 10418  001B02  22DA               	addwfc	fsr2h,f,c
 10419  001B04  0E01               	movlw	1
 10420  001B06  50DB               	movf	plusw2,w,c
 10421  001B08  E109               	bnz	u7090
 10422  001B0A  0E78               	movlw	120
 10423  001B0C  5CDE               	subwf	postinc2,w,c
 10424  001B0E  A0D8               	btfss	status,0,c
 10425  001B10  EF8C  F00D         	goto	u7091
 10426  001B14  EF8E  F00D         	goto	u7090
 10427  001B18                     u7091:
 10428  001B18  EFAC  F00D         	goto	l9776
 10429  001B1C                     u7090:
 10430  001B1C  EE20 F004          	lfsr	2,4
 10431  001B20  5018               	movf	backlightController@g^0,w,c
 10432  001B22  26D9               	addwf	fsr2l,f,c
 10433  001B24  5019               	movf	(backlightController@g+1)^0,w,c
 10434  001B26  22DA               	addwfc	fsr2h,f,c
 10435  001B28  0E01               	movlw	1
 10436  001B2A  50DB               	movf	plusw2,w,c
 10437  001B2C  E107               	bnz	u7101
 10438  001B2E  0E86               	movlw	134
 10439  001B30  5CDE               	subwf	postinc2,w,c
 10440  001B32  B0D8               	btfsc	status,0,c
 10441  001B34  EF9E  F00D         	goto	u7101
 10442  001B38  EFA0  F00D         	goto	u7100
 10443  001B3C                     u7101:
 10444  001B3C  EFAC  F00D         	goto	l9776
 10445  001B40                     u7100:
 10446  001B40                     
 10447                           ;stateMachine/gameController.c: 281:     {;stateMachine/gameController.c: 282:         G
      +                          ameParameters_setBackLight(g,5);
 10448  001B40  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10449  001B44  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10450  001B48  0E00               	movlw	0
 10451  001B4A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10452  001B4C  0E05               	movlw	5
 10453  001B4E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10454  001B50  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10455                           
 10456                           ;stateMachine/gameController.c: 283:     }
 10457  001B54  EFCC  F00E         	goto	l9812
 10458  001B58                     l9776:
 10459  001B58  EE20 F004          	lfsr	2,4
 10460  001B5C  5018               	movf	backlightController@g^0,w,c
 10461  001B5E  26D9               	addwf	fsr2l,f,c
 10462  001B60  5019               	movf	(backlightController@g+1)^0,w,c
 10463  001B62  22DA               	addwfc	fsr2h,f,c
 10464  001B64  0E01               	movlw	1
 10465  001B66  50DB               	movf	plusw2,w,c
 10466  001B68  E109               	bnz	u7110
 10467  001B6A  0E86               	movlw	134
 10468  001B6C  5CDE               	subwf	postinc2,w,c
 10469  001B6E  A0D8               	btfss	status,0,c
 10470  001B70  EFBC  F00D         	goto	u7111
 10471  001B74  EFBE  F00D         	goto	u7110
 10472  001B78                     u7111:
 10473  001B78  EFDC  F00D         	goto	l9782
 10474  001B7C                     u7110:
 10475  001B7C  EE20 F004          	lfsr	2,4
 10476  001B80  5018               	movf	backlightController@g^0,w,c
 10477  001B82  26D9               	addwf	fsr2l,f,c
 10478  001B84  5019               	movf	(backlightController@g+1)^0,w,c
 10479  001B86  22DA               	addwfc	fsr2h,f,c
 10480  001B88  0E01               	movlw	1
 10481  001B8A  50DB               	movf	plusw2,w,c
 10482  001B8C  E107               	bnz	u7121
 10483  001B8E  0E96               	movlw	150
 10484  001B90  5CDE               	subwf	postinc2,w,c
 10485  001B92  B0D8               	btfsc	status,0,c
 10486  001B94  EFCE  F00D         	goto	u7121
 10487  001B98  EFD0  F00D         	goto	u7120
 10488  001B9C                     u7121:
 10489  001B9C  EFDC  F00D         	goto	l9782
 10490  001BA0                     u7120:
 10491  001BA0                     
 10492                           ;stateMachine/gameController.c: 285:     {;stateMachine/gameController.c: 286:         G
      +                          ameParameters_setBackLight(g,6);
 10493  001BA0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10494  001BA4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10495  001BA8  0E00               	movlw	0
 10496  001BAA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10497  001BAC  0E06               	movlw	6
 10498  001BAE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10499  001BB0  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10500                           
 10501                           ;stateMachine/gameController.c: 287:     }
 10502  001BB4  EFCC  F00E         	goto	l9812
 10503  001BB8                     l9782:
 10504  001BB8  EE20 F004          	lfsr	2,4
 10505  001BBC  5018               	movf	backlightController@g^0,w,c
 10506  001BBE  26D9               	addwf	fsr2l,f,c
 10507  001BC0  5019               	movf	(backlightController@g+1)^0,w,c
 10508  001BC2  22DA               	addwfc	fsr2h,f,c
 10509  001BC4  0E01               	movlw	1
 10510  001BC6  50DB               	movf	plusw2,w,c
 10511  001BC8  E109               	bnz	u7130
 10512  001BCA  0E96               	movlw	150
 10513  001BCC  5CDE               	subwf	postinc2,w,c
 10514  001BCE  A0D8               	btfss	status,0,c
 10515  001BD0  EFEC  F00D         	goto	u7131
 10516  001BD4  EFEE  F00D         	goto	u7130
 10517  001BD8                     u7131:
 10518  001BD8  EF0C  F00E         	goto	l9788
 10519  001BDC                     u7130:
 10520  001BDC  EE20 F004          	lfsr	2,4
 10521  001BE0  5018               	movf	backlightController@g^0,w,c
 10522  001BE2  26D9               	addwf	fsr2l,f,c
 10523  001BE4  5019               	movf	(backlightController@g+1)^0,w,c
 10524  001BE6  22DA               	addwfc	fsr2h,f,c
 10525  001BE8  0E01               	movlw	1
 10526  001BEA  50DB               	movf	plusw2,w,c
 10527  001BEC  E107               	bnz	u7141
 10528  001BEE  0EA4               	movlw	164
 10529  001BF0  5CDE               	subwf	postinc2,w,c
 10530  001BF2  B0D8               	btfsc	status,0,c
 10531  001BF4  EFFE  F00D         	goto	u7141
 10532  001BF8  EF00  F00E         	goto	u7140
 10533  001BFC                     u7141:
 10534  001BFC  EF0C  F00E         	goto	l9788
 10535  001C00                     u7140:
 10536  001C00                     
 10537                           ;stateMachine/gameController.c: 289:     {;stateMachine/gameController.c: 290:         G
      +                          ameParameters_setBackLight(g,7);
 10538  001C00  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10539  001C04  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10540  001C08  0E00               	movlw	0
 10541  001C0A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10542  001C0C  0E07               	movlw	7
 10543  001C0E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10544  001C10  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10545                           
 10546                           ;stateMachine/gameController.c: 291:     }
 10547  001C14  EFCC  F00E         	goto	l9812
 10548  001C18                     l9788:
 10549  001C18  EE20 F004          	lfsr	2,4
 10550  001C1C  5018               	movf	backlightController@g^0,w,c
 10551  001C1E  26D9               	addwf	fsr2l,f,c
 10552  001C20  5019               	movf	(backlightController@g+1)^0,w,c
 10553  001C22  22DA               	addwfc	fsr2h,f,c
 10554  001C24  0E01               	movlw	1
 10555  001C26  50DB               	movf	plusw2,w,c
 10556  001C28  E109               	bnz	u7150
 10557  001C2A  0EA4               	movlw	164
 10558  001C2C  5CDE               	subwf	postinc2,w,c
 10559  001C2E  A0D8               	btfss	status,0,c
 10560  001C30  EF1C  F00E         	goto	u7151
 10561  001C34  EF1E  F00E         	goto	u7150
 10562  001C38                     u7151:
 10563  001C38  EF3C  F00E         	goto	l9794
 10564  001C3C                     u7150:
 10565  001C3C  EE20 F004          	lfsr	2,4
 10566  001C40  5018               	movf	backlightController@g^0,w,c
 10567  001C42  26D9               	addwf	fsr2l,f,c
 10568  001C44  5019               	movf	(backlightController@g+1)^0,w,c
 10569  001C46  22DA               	addwfc	fsr2h,f,c
 10570  001C48  0E01               	movlw	1
 10571  001C4A  50DB               	movf	plusw2,w,c
 10572  001C4C  E107               	bnz	u7161
 10573  001C4E  0EB2               	movlw	178
 10574  001C50  5CDE               	subwf	postinc2,w,c
 10575  001C52  B0D8               	btfsc	status,0,c
 10576  001C54  EF2E  F00E         	goto	u7161
 10577  001C58  EF30  F00E         	goto	u7160
 10578  001C5C                     u7161:
 10579  001C5C  EF3C  F00E         	goto	l9794
 10580  001C60                     u7160:
 10581  001C60                     
 10582                           ;stateMachine/gameController.c: 293:     {;stateMachine/gameController.c: 294:         G
      +                          ameParameters_setBackLight(g,8);
 10583  001C60  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10584  001C64  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10585  001C68  0E00               	movlw	0
 10586  001C6A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10587  001C6C  0E08               	movlw	8
 10588  001C6E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10589  001C70  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10590                           
 10591                           ;stateMachine/gameController.c: 295:     }
 10592  001C74  EFCC  F00E         	goto	l9812
 10593  001C78                     l9794:
 10594  001C78  EE20 F004          	lfsr	2,4
 10595  001C7C  5018               	movf	backlightController@g^0,w,c
 10596  001C7E  26D9               	addwf	fsr2l,f,c
 10597  001C80  5019               	movf	(backlightController@g+1)^0,w,c
 10598  001C82  22DA               	addwfc	fsr2h,f,c
 10599  001C84  0E01               	movlw	1
 10600  001C86  50DB               	movf	plusw2,w,c
 10601  001C88  E109               	bnz	u7170
 10602  001C8A  0EB2               	movlw	178
 10603  001C8C  5CDE               	subwf	postinc2,w,c
 10604  001C8E  A0D8               	btfss	status,0,c
 10605  001C90  EF4C  F00E         	goto	u7171
 10606  001C94  EF4E  F00E         	goto	u7170
 10607  001C98                     u7171:
 10608  001C98  EF6C  F00E         	goto	l9800
 10609  001C9C                     u7170:
 10610  001C9C  EE20 F004          	lfsr	2,4
 10611  001CA0  5018               	movf	backlightController@g^0,w,c
 10612  001CA2  26D9               	addwf	fsr2l,f,c
 10613  001CA4  5019               	movf	(backlightController@g+1)^0,w,c
 10614  001CA6  22DA               	addwfc	fsr2h,f,c
 10615  001CA8  0E01               	movlw	1
 10616  001CAA  50DB               	movf	plusw2,w,c
 10617  001CAC  E107               	bnz	u7181
 10618  001CAE  0EC0               	movlw	192
 10619  001CB0  5CDE               	subwf	postinc2,w,c
 10620  001CB2  B0D8               	btfsc	status,0,c
 10621  001CB4  EF5E  F00E         	goto	u7181
 10622  001CB8  EF60  F00E         	goto	u7180
 10623  001CBC                     u7181:
 10624  001CBC  EF6C  F00E         	goto	l9800
 10625  001CC0                     u7180:
 10626  001CC0                     
 10627                           ;stateMachine/gameController.c: 297:     {;stateMachine/gameController.c: 298:         G
      +                          ameParameters_setBackLight(g,9);
 10628  001CC0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10629  001CC4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10630  001CC8  0E00               	movlw	0
 10631  001CCA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10632  001CCC  0E09               	movlw	9
 10633  001CCE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10634  001CD0  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10635                           
 10636                           ;stateMachine/gameController.c: 299:     }
 10637  001CD4  EFCC  F00E         	goto	l9812
 10638  001CD8                     l9800:
 10639  001CD8  EE20 F004          	lfsr	2,4
 10640  001CDC  5018               	movf	backlightController@g^0,w,c
 10641  001CDE  26D9               	addwf	fsr2l,f,c
 10642  001CE0  5019               	movf	(backlightController@g+1)^0,w,c
 10643  001CE2  22DA               	addwfc	fsr2h,f,c
 10644  001CE4  0E01               	movlw	1
 10645  001CE6  50DB               	movf	plusw2,w,c
 10646  001CE8  E109               	bnz	u7190
 10647  001CEA  0EC0               	movlw	192
 10648  001CEC  5CDE               	subwf	postinc2,w,c
 10649  001CEE  A0D8               	btfss	status,0,c
 10650  001CF0  EF7C  F00E         	goto	u7191
 10651  001CF4  EF7E  F00E         	goto	u7190
 10652  001CF8                     u7191:
 10653  001CF8  EF9C  F00E         	goto	l9806
 10654  001CFC                     u7190:
 10655  001CFC  EE20 F004          	lfsr	2,4
 10656  001D00  5018               	movf	backlightController@g^0,w,c
 10657  001D02  26D9               	addwf	fsr2l,f,c
 10658  001D04  5019               	movf	(backlightController@g+1)^0,w,c
 10659  001D06  22DA               	addwfc	fsr2h,f,c
 10660  001D08  0E01               	movlw	1
 10661  001D0A  50DB               	movf	plusw2,w,c
 10662  001D0C  E107               	bnz	u7201
 10663  001D0E  0ECE               	movlw	206
 10664  001D10  5CDE               	subwf	postinc2,w,c
 10665  001D12  B0D8               	btfsc	status,0,c
 10666  001D14  EF8E  F00E         	goto	u7201
 10667  001D18  EF90  F00E         	goto	u7200
 10668  001D1C                     u7201:
 10669  001D1C  EF9C  F00E         	goto	l9806
 10670  001D20                     u7200:
 10671  001D20                     
 10672                           ;stateMachine/gameController.c: 301:     {;stateMachine/gameController.c: 302:         G
      +                          ameParameters_setBackLight(g,10);
 10673  001D20  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10674  001D24  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10675  001D28  0E00               	movlw	0
 10676  001D2A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10677  001D2C  0E0A               	movlw	10
 10678  001D2E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10679  001D30  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10680                           
 10681                           ;stateMachine/gameController.c: 303:     }
 10682  001D34  EFCC  F00E         	goto	l9812
 10683  001D38                     l9806:
 10684  001D38  EE20 F004          	lfsr	2,4
 10685  001D3C  5018               	movf	backlightController@g^0,w,c
 10686  001D3E  26D9               	addwf	fsr2l,f,c
 10687  001D40  5019               	movf	(backlightController@g+1)^0,w,c
 10688  001D42  22DA               	addwfc	fsr2h,f,c
 10689  001D44  0E01               	movlw	1
 10690  001D46  50DB               	movf	plusw2,w,c
 10691  001D48  E109               	bnz	u7210
 10692  001D4A  0ECE               	movlw	206
 10693  001D4C  5CDE               	subwf	postinc2,w,c
 10694  001D4E  A0D8               	btfss	status,0,c
 10695  001D50  EFAC  F00E         	goto	u7211
 10696  001D54  EFAE  F00E         	goto	u7210
 10697  001D58                     u7211:
 10698  001D58  EFCC  F00E         	goto	l708
 10699  001D5C                     u7210:
 10700  001D5C  EE20 F004          	lfsr	2,4
 10701  001D60  5018               	movf	backlightController@g^0,w,c
 10702  001D62  26D9               	addwf	fsr2l,f,c
 10703  001D64  5019               	movf	(backlightController@g+1)^0,w,c
 10704  001D66  22DA               	addwfc	fsr2h,f,c
 10705  001D68  0E01               	movlw	1
 10706  001D6A  50DB               	movf	plusw2,w,c
 10707  001D6C  E107               	bnz	u7221
 10708  001D6E  0ED7               	movlw	215
 10709  001D70  5CDE               	subwf	postinc2,w,c
 10710  001D72  B0D8               	btfsc	status,0,c
 10711  001D74  EFBE  F00E         	goto	u7221
 10712  001D78  EFC0  F00E         	goto	u7220
 10713  001D7C                     u7221:
 10714  001D7C  EFCC  F00E         	goto	l708
 10715  001D80                     u7220:
 10716  001D80                     
 10717                           ;stateMachine/gameController.c: 305:     {;stateMachine/gameController.c: 306:         G
      +                          ameParameters_setBackLight(g,11);
 10718  001D80  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 10719  001D84  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 10720  001D88  0E00               	movlw	0
 10721  001D8A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 10722  001D8C  0E0B               	movlw	11
 10723  001D8E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 10724  001D90  EC9B  F030         	call	_GameParameters_setBackLight	;wreg free
 10725  001D94  EFCC  F00E         	goto	l9812
 10726  001D98                     l708:
 10727  001D98                     l9812:
 10728                           
 10729                           ;stateMachine/gameController.c: 308:     g->sldParam.value=g->backlight;
 10730  001D98  C018  FFD9         	movff	backlightController@g,fsr2l
 10731  001D9C  C019  FFDA         	movff	backlightController@g+1,fsr2h
 10732  001DA0  EE10 F0C1          	lfsr	1,193
 10733  001DA4  5018               	movf	backlightController@g^0,w,c
 10734  001DA6  26E1               	addwf	fsr1l,f,c
 10735  001DA8  5019               	movf	(backlightController@g+1)^0,w,c
 10736  001DAA  22E2               	addwfc	fsr1h,f,c
 10737  001DAC  CFDE FFE6          	movff	postinc2,postinc1
 10738  001DB0  CFDD FFE5          	movff	postdec2,postdec1
 10739  001DB4  0012               	return		;funcret
 10740  001DB6                     __end_of_backlightController:
 10741                           	callstack 0
 10742                           
 10743 ;; *************** function _GameParameters_setBackLight *****************
 10744 ;; Defined at:
 10745 ;;		line 22 in file "class/gameParameters.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;  s               2   17[COMRAM] PTR struct GameParameter
 10748 ;;		 -> g1(239), 
 10749 ;;  value           2   19[COMRAM] unsigned short 
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10761 ;;      Params:         4       0       0       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0
 10763 ;;      Temps:          2       0       0       0       0       0       0
 10764 ;;      Totals:         6       0       0       0       0       0       0
 10765 ;;Total ram usage:        6 bytes
 10766 ;; Hardware stack levels used: 1
 10767 ;; Hardware stack levels required when called: 4
 10768 ;; This function calls:
 10769 ;;		Nothing
 10770 ;; This function is called by:
 10771 ;;		_backlightController
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           	psect	text38
 10776  006136                     __ptext38:
 10777                           	callstack 0
 10778  006136                     _GameParameters_setBackLight:
 10779                           	callstack 21
 10780  006136                     
 10781                           ;class/gameParameters.c: 22: void GameParameters_setBackLight(struct GameParameters* s, 
      +                          uint16_t value);class/gameParameters.c: 23: {;class/gameParameters.c: 24:     s->backlig
      +                          ht = value;
 10782  006136  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
 10783  00613A  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
 10784  00613E  C014  FFDE         	movff	GameParameters_setBackLight@value,postinc2
 10785  006142  C015  FFDD         	movff	GameParameters_setBackLight@value+1,postdec2
 10786  006146                     
 10787                           ;class/gameParameters.c: 25:     if(s->backlight==11)
 10788  006146  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
 10789  00614A  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
 10790  00614E  0E0B               	movlw	11
 10791  006150  18DE               	xorwf	postinc2,w,c
 10792  006152  10DE               	iorwf	postinc2,w,c
 10793  006154  A4D8               	btfss	status,2,c
 10794  006156  EFAF  F030         	goto	u6671
 10795  00615A  EFB1  F030         	goto	u6670
 10796  00615E                     u6671:
 10797  00615E  EFB4  F030         	goto	l9502
 10798  006162                     u6670:
 10799  006162                     
 10800                           ;class/gameParameters.c: 26:     {;class/gameParameters.c: 27:         CCPR2L = 255;
 10801  006162  6867               	setf	103,c	;volatile
 10802                           
 10803                           ;class/gameParameters.c: 28:     }
 10804  006164  EFBC  F030         	goto	l142
 10805  006168                     l9502:
 10806                           
 10807                           ;class/gameParameters.c: 30:     {;class/gameParameters.c: 31:         CCPR2L=(s->backli
      +                          ght)*23;
 10808  006168  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
 10809  00616C  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
 10810  006170  50DF               	movf	indf2,w,c
 10811  006172  0D17               	mullw	23
 10812  006174  CFF3 FF67          	movff	prodl,3943	;volatile
 10813  006178                     l142:
 10814  006178  0012               	return		;funcret
 10815  00617A                     __end_of_GameParameters_setBackLight:
 10816                           	callstack 0
 10817                           
 10818 ;; *************** function _LCD_InSlider *****************
 10819 ;; Defined at:
 10820 ;;		line 546 in file "libraries/lcd_highlevel.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  slider          2   17[COMRAM] PTR struct .
 10823 ;;		 -> g1(239), 
 10824 ;;  posX            2   19[COMRAM] unsigned short 
 10825 ;;  posY            2   21[COMRAM] unsigned short 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;		None
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  1    wreg      unsigned char 
 10830 ;; Registers used:
 10831 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10837 ;;      Params:         6       0       0       0       0       0       0
 10838 ;;      Locals:         0       0       0       0       0       0       0
 10839 ;;      Temps:          4       0       0       0       0       0       0
 10840 ;;      Totals:        10       0       0       0       0       0       0
 10841 ;;Total ram usage:       10 bytes
 10842 ;; Hardware stack levels used: 1
 10843 ;; Hardware stack levels required when called: 4
 10844 ;; This function calls:
 10845 ;;		Nothing
 10846 ;; This function is called by:
 10847 ;;		_gameControllerController
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           	psect	text39
 10852  004D36                     __ptext39:
 10853                           	callstack 0
 10854  004D36                     _LCD_InSlider:
 10855                           	callstack 22
 10856  004D36                     
 10857                           ;libraries/lcd_highlevel.c: 546: uint8_t LCD_InSlider(sld_t * slider, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 547: {;libraries/lcd_highlevel.c: 549:   if(posX 
      +                          < slider->posX)
 10858  004D36  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
 10859  004D3A  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
 10860  004D3E  50DE               	movf	postinc2,w,c
 10861  004D40  5C14               	subwf	LCD_InSlider@posX^0,w,c
 10862  004D42  50DE               	movf	postinc2,w,c
 10863  004D44  5815               	subwfb	(LCD_InSlider@posX+1)^0,w,c
 10864  004D46  B0D8               	btfsc	status,0,c
 10865  004D48  EFA8  F026         	goto	u6951
 10866  004D4C  EFAA  F026         	goto	u6950
 10867  004D50                     u6951:
 10868  004D50  EFAD  F026         	goto	l9718
 10869  004D54                     u6950:
 10870  004D54                     l9714:
 10871                           
 10872                           ;libraries/lcd_highlevel.c: 550:   {;libraries/lcd_highlevel.c: 551:     return 0;
 10873  004D54  0E00               	movlw	0
 10874  004D56  EF09  F027         	goto	l270
 10875  004D5A                     l9718:
 10876                           
 10877                           ;libraries/lcd_highlevel.c: 554:   if(posX > (slider->posX + slider->width))
 10878  004D5A  EE20 F004          	lfsr	2,4
 10879  004D5E  5012               	movf	LCD_InSlider@slider^0,w,c
 10880  004D60  26D9               	addwf	fsr2l,f,c
 10881  004D62  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10882  004D64  22DA               	addwfc	fsr2h,f,c
 10883  004D66  CFDE F018          	movff	postinc2,??_LCD_InSlider
 10884  004D6A  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
 10885  004D6E  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
 10886  004D72  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
 10887  004D76  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
 10888  004D7A  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
 10889  004D7E  5018               	movf	??_LCD_InSlider^0,w,c
 10890  004D80  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
 10891  004D82  5019               	movf	(??_LCD_InSlider+1)^0,w,c
 10892  004D84  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
 10893  004D86  5014               	movf	LCD_InSlider@posX^0,w,c
 10894  004D88  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
 10895  004D8A  5015               	movf	(LCD_InSlider@posX+1)^0,w,c
 10896  004D8C  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
 10897  004D8E  B0D8               	btfsc	status,0,c
 10898  004D90  EFCC  F026         	goto	u6961
 10899  004D94  EFCE  F026         	goto	u6960
 10900  004D98                     u6961:
 10901  004D98  EFD0  F026         	goto	l9724
 10902  004D9C                     u6960:
 10903  004D9C  EFAA  F026         	goto	l9714
 10904  004DA0                     l9724:
 10905                           
 10906                           ;libraries/lcd_highlevel.c: 559:   if(posY < slider->posY)
 10907  004DA0  EE20 F002          	lfsr	2,2
 10908  004DA4  5012               	movf	LCD_InSlider@slider^0,w,c
 10909  004DA6  26D9               	addwf	fsr2l,f,c
 10910  004DA8  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10911  004DAA  22DA               	addwfc	fsr2h,f,c
 10912  004DAC  50DE               	movf	postinc2,w,c
 10913  004DAE  5C16               	subwf	LCD_InSlider@posY^0,w,c
 10914  004DB0  50DE               	movf	postinc2,w,c
 10915  004DB2  5817               	subwfb	(LCD_InSlider@posY+1)^0,w,c
 10916  004DB4  B0D8               	btfsc	status,0,c
 10917  004DB6  EFDF  F026         	goto	u6971
 10918  004DBA  EFE1  F026         	goto	u6970
 10919  004DBE                     u6971:
 10920  004DBE  EFE3  F026         	goto	l9730
 10921  004DC2                     u6970:
 10922  004DC2  EFAA  F026         	goto	l9714
 10923  004DC6                     l9730:
 10924                           
 10925                           ;libraries/lcd_highlevel.c: 564:   if(posY > (slider->posY + slider->height))
 10926  004DC6  EE20 F006          	lfsr	2,6
 10927  004DCA  5012               	movf	LCD_InSlider@slider^0,w,c
 10928  004DCC  26D9               	addwf	fsr2l,f,c
 10929  004DCE  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10930  004DD0  22DA               	addwfc	fsr2h,f,c
 10931  004DD2  CFDE F018          	movff	postinc2,??_LCD_InSlider
 10932  004DD6  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
 10933  004DDA  EE20 F002          	lfsr	2,2
 10934  004DDE  5012               	movf	LCD_InSlider@slider^0,w,c
 10935  004DE0  26D9               	addwf	fsr2l,f,c
 10936  004DE2  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10937  004DE4  22DA               	addwfc	fsr2h,f,c
 10938  004DE6  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
 10939  004DEA  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
 10940  004DEE  5018               	movf	??_LCD_InSlider^0,w,c
 10941  004DF0  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
 10942  004DF2  5019               	movf	(??_LCD_InSlider+1)^0,w,c
 10943  004DF4  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
 10944  004DF6  5016               	movf	LCD_InSlider@posY^0,w,c
 10945  004DF8  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
 10946  004DFA  5017               	movf	(LCD_InSlider@posY+1)^0,w,c
 10947  004DFC  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
 10948  004DFE  B0D8               	btfsc	status,0,c
 10949  004E00  EF04  F027         	goto	u6981
 10950  004E04  EF06  F027         	goto	u6980
 10951  004E08                     u6981:
 10952  004E08  EF08  F027         	goto	l9736
 10953  004E0C                     u6980:
 10954  004E0C  EFAA  F026         	goto	l9714
 10955  004E10                     l9736:
 10956                           
 10957                           ;libraries/lcd_highlevel.c: 568:   return 1;
 10958  004E10  0E01               	movlw	1
 10959  004E12                     l270:
 10960  004E12  0012               	return		;funcret
 10961  004E14                     __end_of_LCD_InSlider:
 10962                           	callstack 0
 10963                           
 10964 ;; *************** function _displaySM *****************
 10965 ;; Defined at:
 10966 ;;		line 21 in file "stateMachine/display.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;  ev              1    wreg     unsigned char 
 10969 ;;  g               2   67[BANK0 ] PTR struct GameParameter
 10970 ;;		 -> g1(239), 
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;  ev              1   71[BANK0 ] unsigned char 
 10973 ;; Return value:  Size  Location     Type
 10974 ;;                  1    wreg      void 
 10975 ;; Registers used:
 10976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10977 ;; Tracked objects:
 10978 ;;		On entry : 0/0
 10979 ;;		On exit  : 0/0
 10980 ;;		Unchanged: 0/0
 10981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10982 ;;      Params:         0       2       0       0       0       0       0
 10983 ;;      Locals:         0       1       0       0       0       0       0
 10984 ;;      Temps:          0       2       0       0       0       0       0
 10985 ;;      Totals:         0       5       0       0       0       0       0
 10986 ;;Total ram usage:        5 bytes
 10987 ;; Hardware stack levels used: 1
 10988 ;; Hardware stack levels required when called: 14
 10989 ;; This function calls:
 10990 ;;		_Menu_inGameDraw
 10991 ;;		_displayController
 10992 ;; This function is called by:
 10993 ;;		_Factory_exec
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           	psect	text40
 10998  00487C                     __ptext40:
 10999                           	callstack 0
 11000  00487C                     _displaySM:
 11001                           	callstack 15
 11002                           
 11003                           ;incstack = 0
 11004                           ;displaySM@ev stored from wreg
 11005  00487C  0100               	movlb	0	; () banked
 11006  00487E  6FA7               	movwf	displaySM@ev& (0+255),b
 11007  004880                     
 11008                           ;stateMachine/display.c: 21: void displaySM(Event ev, GameParameters* g);stateMachine/di
      +                          splay.c: 22: {;stateMachine/display.c: 23:    switch(displayState)
 11009  004880  EF9F  F024         	goto	l10424
 11010  004884                     l10386:
 11011                           
 11012                           ; BSR set to: 0
 11013                           ;stateMachine/display.c: 26:             if((ev==evOnePlayer)||(ev==evTwoPlayer))
 11014  004884  0E05               	movlw	5
 11015  004886  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11016  004888  B4D8               	btfsc	status,2,c
 11017  00488A  EF49  F024         	goto	u7971
 11018  00488E  EF4B  F024         	goto	u7970
 11019  004892                     u7971:
 11020  004892  EF54  F024         	goto	l10390
 11021  004896                     u7970:
 11022  004896                     
 11023                           ; BSR set to: 0
 11024  004896  0E06               	movlw	6
 11025  004898  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11026  00489A  A4D8               	btfss	status,2,c
 11027  00489C  EF52  F024         	goto	u7981
 11028  0048A0  EF54  F024         	goto	u7980
 11029  0048A4                     u7981:
 11030  0048A4  EF64  F024         	goto	l10396
 11031  0048A8                     u7980:
 11032  0048A8                     l10390:
 11033                           
 11034                           ; BSR set to: 0
 11035                           ;stateMachine/display.c: 27:             {;stateMachine/display.c: 28:                 d
      +                          isplayState=INGAME;
 11036  0048A8  0E02               	movlw	2
 11037  0048AA  6FDD               	movwf	_displayState& (0+255),b
 11038  0048AC                     
 11039                           ; BSR set to: 0
 11040                           ;stateMachine/display.c: 29:                 Menu_inGameDraw(g);
 11041  0048AC  C0A3  F092         	movff	displaySM@g,Menu_inGameDraw@g
 11042  0048B0  C0A4  F093         	movff	displaySM@g+1,Menu_inGameDraw@g+1
 11043  0048B4  ECF8  F02F         	call	_Menu_inGameDraw	;wreg free
 11044  0048B8                     
 11045                           ;stateMachine/display.c: 30:                 displayController(g,ev);
 11046  0048B8  C0A3  F09E         	movff	displaySM@g,displayController@g
 11047  0048BC  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11048  0048C0  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11049  0048C4  ECBC  F023         	call	_displayController	;wreg free
 11050  0048C8                     l10396:
 11051                           
 11052                           ;stateMachine/display.c: 32:             if(ev==evParameters)
 11053  0048C8  0E07               	movlw	7
 11054  0048CA  0100               	movlb	0	; () banked
 11055  0048CC  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11056  0048CE  A4D8               	btfss	status,2,c
 11057  0048D0  EF6C  F024         	goto	u7991
 11058  0048D4  EF6E  F024         	goto	u7990
 11059  0048D8                     u7991:
 11060  0048D8  EFBD  F024         	goto	l569
 11061  0048DC                     u7990:
 11062  0048DC                     
 11063                           ; BSR set to: 0
 11064                           ;stateMachine/display.c: 33:             {;stateMachine/display.c: 34:                 d
      +                          isplayState=PARAMETERS;
 11065  0048DC  0E01               	movlw	1
 11066  0048DE  6FDD               	movwf	_displayState& (0+255),b
 11067  0048E0                     l10400:
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;stateMachine/display.c: 35:                 displayController(g,ev);
 11071  0048E0  C0A3  F09E         	movff	displaySM@g,displayController@g
 11072  0048E4  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11073  0048E8  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11074  0048EC  ECBC  F023         	call	_displayController	;wreg free
 11075  0048F0  EFBD  F024         	goto	l569
 11076  0048F4                     l10402:
 11077                           
 11078                           ; BSR set to: 0
 11079                           ;stateMachine/display.c: 39:             if(ev==evLeaveParam)
 11080  0048F4  0E08               	movlw	8
 11081  0048F6  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11082  0048F8  A4D8               	btfss	status,2,c
 11083  0048FA  EF81  F024         	goto	u8001
 11084  0048FE  EF83  F024         	goto	u8000
 11085  004902                     u8001:
 11086  004902  EFBD  F024         	goto	l569
 11087  004906                     u8000:
 11088  004906                     l10404:
 11089                           
 11090                           ; BSR set to: 0
 11091                           ;stateMachine/display.c: 40:             {;stateMachine/display.c: 41:                 d
      +                          isplayState=WELCOME;
 11092  004906  0E00               	movlw	0
 11093  004908  6FDD               	movwf	_displayState& (0+255),b
 11094  00490A  EF70  F024         	goto	l10400
 11095  00490E                     l10408:
 11096                           
 11097                           ; BSR set to: 0
 11098                           ;stateMachine/display.c: 46:             if(ev==evEndGame)
 11099  00490E  0E09               	movlw	9
 11100  004910  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11101  004912  A4D8               	btfss	status,2,c
 11102  004914  EF8E  F024         	goto	u8011
 11103  004918  EF90  F024         	goto	u8010
 11104  00491C                     u8011:
 11105  00491C  EF70  F024         	goto	l10400
 11106  004920                     u8010:
 11107  004920                     
 11108                           ; BSR set to: 0
 11109                           ;stateMachine/display.c: 47:             {;stateMachine/display.c: 48:                 d
      +                          isplayState=ENDGAME;
 11110  004920  0E03               	movlw	3
 11111  004922  6FDD               	movwf	_displayState& (0+255),b
 11112  004924  EF70  F024         	goto	l10400
 11113  004928                     l10416:
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;stateMachine/display.c: 57:            if(ev==evNewGame)
 11117  004928  0E0F               	movlw	15
 11118  00492A  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11119  00492C  A4D8               	btfss	status,2,c
 11120  00492E  EF9B  F024         	goto	u8021
 11121  004932  EF9D  F024         	goto	u8020
 11122  004936                     u8021:
 11123  004936  EFBD  F024         	goto	l569
 11124  00493A                     u8020:
 11125  00493A  EF83  F024         	goto	l10404
 11126  00493E                     l10424:
 11127  00493E  0100               	movlb	0	; () banked
 11128  004940  51DD               	movf	_displayState& (0+255),w,b
 11129  004942  6FA5               	movwf	??_displaySM& (0+255),b
 11130  004944  6BA6               	clrf	(??_displaySM+1)& (0+255),b
 11131                           
 11132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11133                           ; Switch size 1, requested type "simple"
 11134                           ; Number of cases is 1, Range of values is 0 to 0
 11135                           ; switch strategies available:
 11136                           ; Name         Instructions Cycles
 11137                           ; simple_byte            4     3 (average)
 11138                           ;	Chosen strategy is simple_byte
 11139  004946  51A6               	movf	(??_displaySM+1)& (0+255),w,b
 11140  004948  0A00               	xorlw	0	; case 0
 11141  00494A  B4D8               	btfsc	status,2,c
 11142  00494C  EFAA  F024         	goto	l10762
 11143  004950  EFBD  F024         	goto	l569
 11144  004954                     l10762:
 11145                           
 11146                           ; BSR set to: 0
 11147                           ; Switch size 1, requested type "simple"
 11148                           ; Number of cases is 4, Range of values is 0 to 3
 11149                           ; switch strategies available:
 11150                           ; Name         Instructions Cycles
 11151                           ; simple_byte           13     7 (average)
 11152                           ;	Chosen strategy is simple_byte
 11153  004954  51A5               	movf	??_displaySM& (0+255),w,b
 11154  004956  0A00               	xorlw	0	; case 0
 11155  004958  B4D8               	btfsc	status,2,c
 11156  00495A  EF42  F024         	goto	l10386
 11157  00495E  0A01               	xorlw	1	; case 1
 11158  004960  B4D8               	btfsc	status,2,c
 11159  004962  EF7A  F024         	goto	l10402
 11160  004966  0A03               	xorlw	3	; case 2
 11161  004968  B4D8               	btfsc	status,2,c
 11162  00496A  EF87  F024         	goto	l10408
 11163  00496E  0A01               	xorlw	1	; case 3
 11164  004970  B4D8               	btfsc	status,2,c
 11165  004972  EF94  F024         	goto	l10416
 11166  004976  EFBD  F024         	goto	l569
 11167  00497A                     l569:
 11168  00497A  0012               	return		;funcret
 11169  00497C                     __end_of_displaySM:
 11170                           	callstack 0
 11171                           
 11172 ;; *************** function _displayController *****************
 11173 ;; Defined at:
 11174 ;;		line 67 in file "stateMachine/display.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;  g               2   62[BANK0 ] PTR struct GameParameter
 11177 ;;		 -> g1(239), 
 11178 ;;  ev              1   64[BANK0 ] unsigned char 
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;		None
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      void 
 11183 ;; Registers used:
 11184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11190 ;;      Params:         0       3       0       0       0       0       0
 11191 ;;      Locals:         0       0       0       0       0       0       0
 11192 ;;      Temps:          0       2       0       0       0       0       0
 11193 ;;      Totals:         0       5       0       0       0       0       0
 11194 ;;Total ram usage:        5 bytes
 11195 ;; Hardware stack levels used: 1
 11196 ;; Hardware stack levels required when called: 13
 11197 ;; This function calls:
 11198 ;;		_Ball_draw
 11199 ;;		_Menu_endGame
 11200 ;;		_Menu_parametersDraw
 11201 ;;		_Menu_welcomeDraw
 11202 ;;		_Paddle_draw
 11203 ;;		_Score_draw
 11204 ;; This function is called by:
 11205 ;;		_displayInit
 11206 ;;		_displaySM
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text41
 11211  004778                     __ptext41:
 11212                           	callstack 0
 11213  004778                     _displayController:
 11214                           	callstack 14
 11215  004778                     
 11216                           ;stateMachine/display.c: 67: void displayController(GameParameters* g,Event ev);stateMac
      +                          hine/display.c: 68: {;stateMachine/display.c: 69:     switch(displayState)
 11217  004778  EF1F  F024         	goto	l9896
 11218  00477C                     l9872:
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;stateMachine/display.c: 73:             Menu_welcomeDraw(g);
 11222  00477C  C09E  F09C         	movff	displayController@g,Menu_welcomeDraw@g
 11223  004780  C09F  F09D         	movff	displayController@g+1,Menu_welcomeDraw@g+1
 11224  004784  ECB1  F02D         	call	_Menu_welcomeDraw	;wreg free
 11225                           
 11226                           ;stateMachine/display.c: 74:             break;
 11227  004788  EF3D  F024         	goto	l583
 11228  00478C                     l9874:
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;stateMachine/display.c: 77:             Menu_parametersDraw(g);
 11232  00478C  C09E  F09C         	movff	displayController@g,Menu_parametersDraw@g
 11233  004790  C09F  F09D         	movff	displayController@g+1,Menu_parametersDraw@g+1
 11234  004794  EC70  F02D         	call	_Menu_parametersDraw	;wreg free
 11235                           
 11236                           ;stateMachine/display.c: 78:             break;
 11237  004798  EF3D  F024         	goto	l583
 11238  00479C                     l9876:
 11239                           
 11240                           ; BSR set to: 0
 11241                           ;stateMachine/display.c: 80:             if(ev==evRedrawPaddle1)
 11242  00479C  0E0B               	movlw	11
 11243  00479E  19A0               	xorwf	displayController@ev& (0+255),w,b
 11244  0047A0  A4D8               	btfss	status,2,c
 11245  0047A2  EFD5  F023         	goto	u7291
 11246  0047A6  EFD7  F023         	goto	u7290
 11247  0047AA                     u7291:
 11248  0047AA  EFDF  F023         	goto	l9880
 11249  0047AE                     u7290:
 11250  0047AE                     
 11251                           ; BSR set to: 0
 11252                           ;stateMachine/display.c: 81:             {;stateMachine/display.c: 82:                 P
      +                          addle_draw(&g->p1);
 11253  0047AE  0ED5               	movlw	213
 11254  0047B0  259E               	addwf	displayController@g& (0+255),w,b
 11255  0047B2  6E25               	movwf	Paddle_draw@p^0,c
 11256  0047B4  0E00               	movlw	0
 11257  0047B6  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11258  0047B8  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11259  0047BA  EC88  F021         	call	_Paddle_draw	;wreg free
 11260  0047BE                     l9880:
 11261                           
 11262                           ;stateMachine/display.c: 84:             if(ev==evRedrawPaddle2)
 11263  0047BE  0E0C               	movlw	12
 11264  0047C0  0100               	movlb	0	; () banked
 11265  0047C2  19A0               	xorwf	displayController@ev& (0+255),w,b
 11266  0047C4  A4D8               	btfss	status,2,c
 11267  0047C6  EFE7  F023         	goto	u7301
 11268  0047CA  EFE9  F023         	goto	u7300
 11269  0047CE                     u7301:
 11270  0047CE  EFF1  F023         	goto	l9884
 11271  0047D2                     u7300:
 11272  0047D2                     
 11273                           ; BSR set to: 0
 11274                           ;stateMachine/display.c: 85:             {;stateMachine/display.c: 86:                 P
      +                          addle_draw(&g->p2);
 11275  0047D2  0EDF               	movlw	223
 11276  0047D4  259E               	addwf	displayController@g& (0+255),w,b
 11277  0047D6  6E25               	movwf	Paddle_draw@p^0,c
 11278  0047D8  0E00               	movlw	0
 11279  0047DA  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11280  0047DC  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11281  0047DE  EC88  F021         	call	_Paddle_draw	;wreg free
 11282  0047E2                     l9884:
 11283                           
 11284                           ;stateMachine/display.c: 88:             if(ev==evRedrawBall)
 11285  0047E2  0E0D               	movlw	13
 11286  0047E4  0100               	movlb	0	; () banked
 11287  0047E6  19A0               	xorwf	displayController@ev& (0+255),w,b
 11288  0047E8  A4D8               	btfss	status,2,c
 11289  0047EA  EFF9  F023         	goto	u7311
 11290  0047EE  EFFB  F023         	goto	u7310
 11291  0047F2                     u7311:
 11292  0047F2  EF03  F024         	goto	l9888
 11293  0047F6                     u7310:
 11294  0047F6                     
 11295                           ; BSR set to: 0
 11296                           ;stateMachine/display.c: 89:             {;stateMachine/display.c: 90:                 B
      +                          all_draw(&g->b);
 11297  0047F6  0EC9               	movlw	201
 11298  0047F8  259E               	addwf	displayController@g& (0+255),w,b
 11299  0047FA  6E25               	movwf	Ball_draw@b^0,c
 11300  0047FC  0E00               	movlw	0
 11301  0047FE  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11302  004800  6E26               	movwf	(Ball_draw@b+1)^0,c
 11303  004802  EC3C  F020         	call	_Ball_draw	;wreg free
 11304  004806                     l9888:
 11305                           
 11306                           ;stateMachine/display.c: 92:             if(ev==evRedrawScore)
 11307  004806  0E0E               	movlw	14
 11308  004808  0100               	movlb	0	; () banked
 11309  00480A  19A0               	xorwf	displayController@ev& (0+255),w,b
 11310  00480C  A4D8               	btfss	status,2,c
 11311  00480E  EF0B  F024         	goto	u7321
 11312  004812  EF0D  F024         	goto	u7320
 11313  004816                     u7321:
 11314  004816  EF3D  F024         	goto	l583
 11315  00481A                     u7320:
 11316  00481A                     
 11317                           ; BSR set to: 0
 11318                           ;stateMachine/display.c: 93:             {;stateMachine/display.c: 94:                 S
      +                          core_draw(&g->s1);
 11319  00481A  0EE9               	movlw	233
 11320  00481C  259E               	addwf	displayController@g& (0+255),w,b
 11321  00481E  6F90               	movwf	Score_draw@s& (0+255),b
 11322  004820  0E00               	movlw	0
 11323  004822  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11324  004824  6F91               	movwf	(Score_draw@s+1)& (0+255),b
 11325  004826  EC77  F027         	call	_Score_draw	;wreg free
 11326  00482A  EF3D  F024         	goto	l583
 11327  00482E                     l9892:
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;stateMachine/display.c: 98:             Menu_endGame(g);
 11331  00482E  C09E  F09C         	movff	displayController@g,Menu_endGame@g
 11332  004832  C09F  F09D         	movff	displayController@g+1,Menu_endGame@g+1
 11333  004836  EC3D  F02B         	call	_Menu_endGame	;wreg free
 11334                           
 11335                           ;stateMachine/display.c: 99:             break;
 11336  00483A  EF3D  F024         	goto	l583
 11337  00483E                     l9896:
 11338  00483E  0100               	movlb	0	; () banked
 11339  004840  51DD               	movf	_displayState& (0+255),w,b
 11340  004842  6FA1               	movwf	??_displayController& (0+255),b
 11341  004844  6BA2               	clrf	(??_displayController+1)& (0+255),b
 11342                           
 11343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11344                           ; Switch size 1, requested type "simple"
 11345                           ; Number of cases is 1, Range of values is 0 to 0
 11346                           ; switch strategies available:
 11347                           ; Name         Instructions Cycles
 11348                           ; simple_byte            4     3 (average)
 11349                           ;	Chosen strategy is simple_byte
 11350  004846  51A2               	movf	(??_displayController+1)& (0+255),w,b
 11351  004848  0A00               	xorlw	0	; case 0
 11352  00484A  B4D8               	btfsc	status,2,c
 11353  00484C  EF2A  F024         	goto	l10764
 11354  004850  EF3D  F024         	goto	l583
 11355  004854                     l10764:
 11356                           
 11357                           ; BSR set to: 0
 11358                           ; Switch size 1, requested type "simple"
 11359                           ; Number of cases is 4, Range of values is 0 to 3
 11360                           ; switch strategies available:
 11361                           ; Name         Instructions Cycles
 11362                           ; simple_byte           13     7 (average)
 11363                           ;	Chosen strategy is simple_byte
 11364  004854  51A1               	movf	??_displayController& (0+255),w,b
 11365  004856  0A00               	xorlw	0	; case 0
 11366  004858  B4D8               	btfsc	status,2,c
 11367  00485A  EFBE  F023         	goto	l9872
 11368  00485E  0A01               	xorlw	1	; case 1
 11369  004860  B4D8               	btfsc	status,2,c
 11370  004862  EFC6  F023         	goto	l9874
 11371  004866  0A03               	xorlw	3	; case 2
 11372  004868  B4D8               	btfsc	status,2,c
 11373  00486A  EFCE  F023         	goto	l9876
 11374  00486E  0A01               	xorlw	1	; case 3
 11375  004870  B4D8               	btfsc	status,2,c
 11376  004872  EF17  F024         	goto	l9892
 11377  004876  EF3D  F024         	goto	l583
 11378  00487A                     l583:
 11379  00487A  0012               	return		;funcret
 11380  00487C                     __end_of_displayController:
 11381                           	callstack 0
 11382                           
 11383 ;; *************** function _Menu_welcomeDraw *****************
 11384 ;; Defined at:
 11385 ;;		line 3 in file "class/menu.c"
 11386 ;; Parameters:    Size  Location     Type
 11387 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11388 ;;		 -> g1(239), 
 11389 ;; Auto vars:     Size  Location     Type
 11390 ;;		None
 11391 ;; Return value:  Size  Location     Type
 11392 ;;                  1    wreg      void 
 11393 ;; Registers used:
 11394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11395 ;; Tracked objects:
 11396 ;;		On entry : 0/0
 11397 ;;		On exit  : 0/0
 11398 ;;		Unchanged: 0/0
 11399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11400 ;;      Params:         0       2       0       0       0       0       0
 11401 ;;      Locals:         0       0       0       0       0       0       0
 11402 ;;      Temps:          0       0       0       0       0       0       0
 11403 ;;      Totals:         0       2       0       0       0       0       0
 11404 ;;Total ram usage:        2 bytes
 11405 ;; Hardware stack levels used: 1
 11406 ;; Hardware stack levels required when called: 7
 11407 ;; This function calls:
 11408 ;;		_LCD_ButtonDraw
 11409 ;;		_LCD_DrawText
 11410 ;;		_LCD_Fill
 11411 ;; This function is called by:
 11412 ;;		_displayController
 11413 ;; This function uses a non-reentrant model
 11414 ;;
 11415                           
 11416                           	psect	text42
 11417  005B62                     __ptext42:
 11418                           	callstack 0
 11419  005B62                     _Menu_welcomeDraw:
 11420                           	callstack 19
 11421  005B62                     
 11422                           ;class/menu.c: 3: void Menu_welcomeDraw(GameParameters* g);class/menu.c: 4: {;class/menu
      +                          .c: 5:     LCD_Fill(0b1111111111111111);
 11423  005B62  0EFF               	movlw	255
 11424  005B64  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11425  005B66  6812               	setf	LCD_Fill@color^0,c
 11426  005B68  EC6C  F029         	call	_LCD_Fill	;wreg free
 11427  005B6C                     
 11428                           ;class/menu.c: 6:     LCD_DrawText("WELCOME",&arialNarrow_12ptFontInfo,A_CENTER,50,50,0b
      +                          0000000000000000,0b1111111111111111);
 11429  005B6C  0EDB               	movlw	low STR_11
 11430  005B6E  6E20               	movwf	LCD_DrawText@msg^0,c
 11431  005B70  0E7F               	movlw	high STR_11
 11432  005B72  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11433  005B74  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 11434  005B76  6E22               	movwf	LCD_DrawText@font^0,c
 11435  005B78  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11436  005B7A  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11437  005B7C  0E02               	movlw	2
 11438  005B7E  6E24               	movwf	LCD_DrawText@align^0,c
 11439  005B80  0E00               	movlw	0
 11440  005B82  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11441  005B84  0E32               	movlw	50
 11442  005B86  6E25               	movwf	LCD_DrawText@posX^0,c
 11443  005B88  0E00               	movlw	0
 11444  005B8A  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11445  005B8C  0E32               	movlw	50
 11446  005B8E  6E27               	movwf	LCD_DrawText@posY^0,c
 11447  005B90  0E00               	movlw	0
 11448  005B92  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11449  005B94  0E00               	movlw	0
 11450  005B96  6E29               	movwf	LCD_DrawText@color^0,c
 11451  005B98  0EFF               	movlw	255
 11452  005B9A  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11453  005B9C  682B               	setf	LCD_DrawText@bg_color^0,c
 11454  005B9E  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 11455  005BA2                     
 11456                           ;class/menu.c: 7:     LCD_ButtonDraw(&(g->btnParam));
 11457  005BA2  0E08               	movlw	8
 11458  005BA4  0100               	movlb	0	; () banked
 11459  005BA6  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11460  005BA8  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11461  005BAA  0E00               	movlw	0
 11462  005BAC  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11463  005BAE  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11464  005BB0  ECAA  F007         	call	_LCD_ButtonDraw	;wreg free
 11465  005BB4                     
 11466                           ;class/menu.c: 8:     LCD_ButtonDraw(&(g->btnOnePlayer));
 11467  005BB4  0E20               	movlw	32
 11468  005BB6  0100               	movlb	0	; () banked
 11469  005BB8  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11470  005BBA  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11471  005BBC  0E00               	movlw	0
 11472  005BBE  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11473  005BC0  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11474  005BC2  ECAA  F007         	call	_LCD_ButtonDraw	;wreg free
 11475  005BC6                     
 11476                           ;class/menu.c: 9:     LCD_ButtonDraw(&(g->btnTwoPlayer));
 11477  005BC6  0E38               	movlw	56
 11478  005BC8  0100               	movlb	0	; () banked
 11479  005BCA  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11480  005BCC  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11481  005BCE  0E00               	movlw	0
 11482  005BD0  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11483  005BD2  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11484  005BD4  ECAA  F007         	call	_LCD_ButtonDraw	;wreg free
 11485  005BD8  0012               	return		;funcret
 11486  005BDA                     __end_of_Menu_welcomeDraw:
 11487                           	callstack 0
 11488                           
 11489 ;; *************** function _Menu_parametersDraw *****************
 11490 ;; Defined at:
 11491 ;;		line 11 in file "class/menu.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11494 ;;		 -> g1(239), 
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;		None
 11497 ;; Return value:  Size  Location     Type
 11498 ;;                  1    wreg      void 
 11499 ;; Registers used:
 11500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11501 ;; Tracked objects:
 11502 ;;		On entry : 0/0
 11503 ;;		On exit  : 0/0
 11504 ;;		Unchanged: 0/0
 11505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11506 ;;      Params:         0       2       0       0       0       0       0
 11507 ;;      Locals:         0       0       0       0       0       0       0
 11508 ;;      Temps:          0       0       0       0       0       0       0
 11509 ;;      Totals:         0       2       0       0       0       0       0
 11510 ;;Total ram usage:        2 bytes
 11511 ;; Hardware stack levels used: 1
 11512 ;; Hardware stack levels required when called: 7
 11513 ;; This function calls:
 11514 ;;		_LCD_ButtonDraw
 11515 ;;		_LCD_DrawText
 11516 ;;		_LCD_Fill
 11517 ;;		_LCD_SliderDraw
 11518 ;; This function is called by:
 11519 ;;		_displayController
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           	psect	text43
 11524  005AE0                     __ptext43:
 11525                           	callstack 0
 11526  005AE0                     _Menu_parametersDraw:
 11527                           	callstack 19
 11528  005AE0                     
 11529                           ;class/menu.c: 11: void Menu_parametersDraw(GameParameters* g);class/menu.c: 12: {;class
      +                          /menu.c: 13:     LCD_Fill(0b1111111111111111);
 11530  005AE0  0EFF               	movlw	255
 11531  005AE2  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11532  005AE4  6812               	setf	LCD_Fill@color^0,c
 11533  005AE6  EC6C  F029         	call	_LCD_Fill	;wreg free
 11534  005AEA                     
 11535                           ;class/menu.c: 14:     LCD_DrawText("PARAMETERS",&arialNarrow_12ptFontInfo,A_CENTER,50,5
      +                          0,0b0000000000000000,0b1111111111111111);
 11536  005AEA  0EA0               	movlw	low STR_12
 11537  005AEC  6E20               	movwf	LCD_DrawText@msg^0,c
 11538  005AEE  0E7F               	movlw	high STR_12
 11539  005AF0  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11540  005AF2  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 11541  005AF4  6E22               	movwf	LCD_DrawText@font^0,c
 11542  005AF6  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11543  005AF8  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11544  005AFA  0E02               	movlw	2
 11545  005AFC  6E24               	movwf	LCD_DrawText@align^0,c
 11546  005AFE  0E00               	movlw	0
 11547  005B00  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11548  005B02  0E32               	movlw	50
 11549  005B04  6E25               	movwf	LCD_DrawText@posX^0,c
 11550  005B06  0E00               	movlw	0
 11551  005B08  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11552  005B0A  0E32               	movlw	50
 11553  005B0C  6E27               	movwf	LCD_DrawText@posY^0,c
 11554  005B0E  0E00               	movlw	0
 11555  005B10  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11556  005B12  0E00               	movlw	0
 11557  005B14  6E29               	movwf	LCD_DrawText@color^0,c
 11558  005B16  0EFF               	movlw	255
 11559  005B18  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11560  005B1A  682B               	setf	LCD_DrawText@bg_color^0,c
 11561  005B1C  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 11562  005B20                     
 11563                           ;class/menu.c: 15:     LCD_ButtonDraw(&(g->btnLeaveParam));
 11564  005B20  0E50               	movlw	80
 11565  005B22  0100               	movlb	0	; () banked
 11566  005B24  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 11567  005B26  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11568  005B28  0E00               	movlw	0
 11569  005B2A  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 11570  005B2C  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11571  005B2E  ECAA  F007         	call	_LCD_ButtonDraw	;wreg free
 11572  005B32                     
 11573                           ;class/menu.c: 16:     g->sldParam.value=g->backlight;
 11574  005B32  C09C  FFD9         	movff	Menu_parametersDraw@g,fsr2l
 11575  005B36  C09D  FFDA         	movff	Menu_parametersDraw@g+1,fsr2h
 11576  005B3A  0100               	movlb	0	; () banked
 11577  005B3C  EE10 F0C1          	lfsr	1,193
 11578  005B40  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 11579  005B42  26E1               	addwf	fsr1l,f,c
 11580  005B44  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 11581  005B46  22E2               	addwfc	fsr1h,f,c
 11582  005B48  CFDE FFE6          	movff	postinc2,postinc1
 11583  005B4C  CFDD FFE5          	movff	postdec2,postdec1
 11584  005B50                     
 11585                           ; BSR set to: 0
 11586                           ;class/menu.c: 17:     LCD_SliderDraw(&(g->sldParam));
 11587  005B50  0EB0               	movlw	176
 11588  005B52  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 11589  005B54  6E37               	movwf	LCD_SliderDraw@slider^0,c
 11590  005B56  0E00               	movlw	0
 11591  005B58  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 11592  005B5A  6E38               	movwf	(LCD_SliderDraw@slider+1)^0,c
 11593  005B5C  ECB2  F022         	call	_LCD_SliderDraw	;wreg free
 11594  005B60  0012               	return		;funcret
 11595  005B62                     __end_of_Menu_parametersDraw:
 11596                           	callstack 0
 11597                           
 11598 ;; *************** function _LCD_SliderDraw *****************
 11599 ;; Defined at:
 11600 ;;		line 371 in file "libraries/lcd_highlevel.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  slider          2   54[COMRAM] PTR struct .
 11603 ;;		 -> g1(239), 
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;  y2              2   66[COMRAM] unsigned short 
 11606 ;;  y1              2   64[COMRAM] unsigned short 
 11607 ;;  x2              2   62[COMRAM] unsigned short 
 11608 ;;  x1              2   60[COMRAM] unsigned short 
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  1    wreg      void 
 11611 ;; Registers used:
 11612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/0
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11618 ;;      Params:         2       0       0       0       0       0       0
 11619 ;;      Locals:         8       0       0       0       0       0       0
 11620 ;;      Temps:          4       0       0       0       0       0       0
 11621 ;;      Totals:        14       0       0       0       0       0       0
 11622 ;;Total ram usage:       14 bytes
 11623 ;; Hardware stack levels used: 1
 11624 ;; Hardware stack levels required when called: 6
 11625 ;; This function calls:
 11626 ;;		_LCD_DrawRect
 11627 ;;		_LCD_SliderUpdate
 11628 ;; This function is called by:
 11629 ;;		_Menu_parametersDraw
 11630 ;; This function uses a non-reentrant model
 11631 ;;
 11632                           
 11633                           	psect	text44
 11634  004564                     __ptext44:
 11635                           	callstack 0
 11636  004564                     _LCD_SliderDraw:
 11637                           	callstack 19
 11638  004564                     
 11639                           ;libraries/lcd_highlevel.c: 371: void LCD_SliderDraw(sld_t * slider);libraries/lcd_highl
      +                          evel.c: 372: {;libraries/lcd_highlevel.c: 373:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 375:   x1 = slider->posX;
 11640  004564  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 11641  004568  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 11642  00456C  CFDE F03D          	movff	postinc2,LCD_SliderDraw@x1
 11643  004570  CFDD F03E          	movff	postdec2,LCD_SliderDraw@x1+1
 11644  004574                     
 11645                           ;libraries/lcd_highlevel.c: 376:   x2 = slider->posX + slider->width;
 11646  004574  EE20 F004          	lfsr	2,4
 11647  004578  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11648  00457A  26D9               	addwf	fsr2l,f,c
 11649  00457C  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11650  00457E  22DA               	addwfc	fsr2h,f,c
 11651  004580  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11652  004584  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11653  004588  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 11654  00458C  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 11655  004590  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11656  004594  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11657  004598  5039               	movf	??_LCD_SliderDraw^0,w,c
 11658  00459A  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11659  00459C  6E3F               	movwf	LCD_SliderDraw@x2^0,c
 11660  00459E  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11661  0045A0  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11662  0045A2  6E40               	movwf	(LCD_SliderDraw@x2+1)^0,c
 11663  0045A4                     
 11664                           ;libraries/lcd_highlevel.c: 377:   y1 = slider->posY;
 11665  0045A4  EE20 F002          	lfsr	2,2
 11666  0045A8  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11667  0045AA  26D9               	addwf	fsr2l,f,c
 11668  0045AC  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11669  0045AE  22DA               	addwfc	fsr2h,f,c
 11670  0045B0  CFDE F041          	movff	postinc2,LCD_SliderDraw@y1
 11671  0045B4  CFDD F042          	movff	postdec2,LCD_SliderDraw@y1+1
 11672  0045B8                     
 11673                           ;libraries/lcd_highlevel.c: 378:   y2 = slider->posY + slider->height;
 11674  0045B8  EE20 F006          	lfsr	2,6
 11675  0045BC  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11676  0045BE  26D9               	addwf	fsr2l,f,c
 11677  0045C0  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11678  0045C2  22DA               	addwfc	fsr2h,f,c
 11679  0045C4  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11680  0045C8  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11681  0045CC  EE20 F002          	lfsr	2,2
 11682  0045D0  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11683  0045D2  26D9               	addwf	fsr2l,f,c
 11684  0045D4  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11685  0045D6  22DA               	addwfc	fsr2h,f,c
 11686  0045D8  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11687  0045DC  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11688  0045E0  5039               	movf	??_LCD_SliderDraw^0,w,c
 11689  0045E2  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11690  0045E4  6E43               	movwf	LCD_SliderDraw@y2^0,c
 11691  0045E6  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11692  0045E8  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11693  0045EA  6E44               	movwf	(LCD_SliderDraw@y2+1)^0,c
 11694  0045EC                     
 11695                           ;libraries/lcd_highlevel.c: 379:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->bgColor);
 11696  0045EC  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11697  0045F0  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11698  0045F4  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11699  0045F8  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11700  0045FC  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11701  004600  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11702  004604  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11703  004608  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11704  00460C  0E01               	movlw	1
 11705  00460E  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11706  004610  EE20 F00A          	lfsr	2,10
 11707  004614  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11708  004616  26D9               	addwf	fsr2l,f,c
 11709  004618  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11710  00461A  22DA               	addwfc	fsr2h,f,c
 11711  00461C  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11712  004620  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11713  004624  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 11714  004628                     
 11715                           ;libraries/lcd_highlevel.c: 380:   LCD_DrawRect(x1, y1, x2, y2, 0, slider->borderColor);
 11716  004628  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11717  00462C  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11718  004630  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11719  004634  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11720  004638  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11721  00463C  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11722  004640  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11723  004644  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11724  004648  0E00               	movlw	0
 11725  00464A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11726  00464C  EE20 F00C          	lfsr	2,12
 11727  004650  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11728  004652  26D9               	addwf	fsr2l,f,c
 11729  004654  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11730  004656  22DA               	addwfc	fsr2h,f,c
 11731  004658  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11732  00465C  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11733  004660  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 11734  004664                     
 11735                           ;libraries/lcd_highlevel.c: 381:   LCD_SliderUpdate(slider);
 11736  004664  C037  F027         	movff	LCD_SliderDraw@slider,LCD_SliderUpdate@slider
 11737  004668  C038  F028         	movff	LCD_SliderDraw@slider+1,LCD_SliderUpdate@slider+1
 11738  00466C  EC21  F00A         	call	_LCD_SliderUpdate	;wreg free
 11739  004670  0012               	return		;funcret
 11740  004672                     __end_of_LCD_SliderDraw:
 11741                           	callstack 0
 11742                           
 11743 ;; *************** function _LCD_SliderUpdate *****************
 11744 ;; Defined at:
 11745 ;;		line 319 in file "libraries/lcd_highlevel.c"
 11746 ;; Parameters:    Size  Location     Type
 11747 ;;  slider          2   38[COMRAM] PTR struct .
 11748 ;;		 -> g1(239), 
 11749 ;; Auto vars:     Size  Location     Type
 11750 ;;  x1              2   52[COMRAM] unsigned short 
 11751 ;;  y2              2   50[COMRAM] unsigned short 
 11752 ;;  y1              2   48[COMRAM] unsigned short 
 11753 ;;  x2              2   46[COMRAM] unsigned short 
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      void 
 11756 ;; Registers used:
 11757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11763 ;;      Params:         2       0       0       0       0       0       0
 11764 ;;      Locals:         8       0       0       0       0       0       0
 11765 ;;      Temps:          6       0       0       0       0       0       0
 11766 ;;      Totals:        16       0       0       0       0       0       0
 11767 ;;Total ram usage:       16 bytes
 11768 ;; Hardware stack levels used: 1
 11769 ;; Hardware stack levels required when called: 5
 11770 ;; This function calls:
 11771 ;;		_LCD_DrawRect
 11772 ;;		___lwdiv
 11773 ;;		___wmul
 11774 ;; This function is called by:
 11775 ;;		_LCD_SliderDraw
 11776 ;;		_gameControllerController
 11777 ;; This function uses a non-reentrant model
 11778 ;;
 11779                           
 11780                           	psect	text45
 11781  001442                     __ptext45:
 11782                           	callstack 0
 11783  001442                     _LCD_SliderUpdate:
 11784                           	callstack 21
 11785  001442                     
 11786                           ;libraries/lcd_highlevel.c: 319: void LCD_SliderUpdate(sld_t * slider);libraries/lcd_hig
      +                          hlevel.c: 320: {;libraries/lcd_highlevel.c: 321:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 325:   if(slider->cursorWidth != 0)
 11787  001442  EE20 F00E          	lfsr	2,14
 11788  001446  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11789  001448  26D9               	addwf	fsr2l,f,c
 11790  00144A  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11791  00144C  22DA               	addwfc	fsr2h,f,c
 11792  00144E  50DE               	movf	postinc2,w,c
 11793  001450  10DE               	iorwf	postinc2,w,c
 11794  001452  B4D8               	btfsc	status,2,c
 11795  001454  EF2E  F00A         	goto	u6431
 11796  001458  EF30  F00A         	goto	u6430
 11797  00145C                     u6431:
 11798  00145C  EFBC  F00A         	goto	l9008
 11799  001460                     u6430:
 11800  001460                     
 11801                           ;libraries/lcd_highlevel.c: 326:   {;libraries/lcd_highlevel.c: 327:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->oldValue)/ slider->steps);
 11802  001460  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11803  001464  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11804  001468  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11805  00146C  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11806  001470  EE20 F00E          	lfsr	2,14
 11807  001474  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11808  001476  26D9               	addwf	fsr2l,f,c
 11809  001478  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11810  00147A  22DA               	addwfc	fsr2h,f,c
 11811  00147C  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11812  001480  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11813  001484  EE20 F004          	lfsr	2,4
 11814  001488  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11815  00148A  26D9               	addwf	fsr2l,f,c
 11816  00148C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11817  00148E  22DA               	addwfc	fsr2h,f,c
 11818  001490  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 11819  001494  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 11820  001498  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 11821  00149A  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 11822  00149C  6E1A               	movwf	___wmul@multiplier^0,c
 11823  00149E  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 11824  0014A0  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 11825  0014A2  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 11826  0014A4  EE20 F013          	lfsr	2,19
 11827  0014A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11828  0014AA  26D9               	addwf	fsr2l,f,c
 11829  0014AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11830  0014AE  22DA               	addwfc	fsr2h,f,c
 11831  0014B0  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11832  0014B4  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11833  0014B8  EC8E  F031         	call	___wmul	;wreg free
 11834  0014BC  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11835  0014C0  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11836  0014C4  EE20 F015          	lfsr	2,21
 11837  0014C8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11838  0014CA  26D9               	addwf	fsr2l,f,c
 11839  0014CC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11840  0014CE  22DA               	addwfc	fsr2h,f,c
 11841  0014D0  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11842  0014D4  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11843  0014D8  EC62  F02E         	call	___lwdiv	;wreg free
 11844  0014DC  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11845  0014DE  2620               	addwf	?___lwdiv^0,f,c
 11846  0014E0  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11847  0014E2  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11848  0014E4  0E01               	movlw	1
 11849  0014E6  2420               	addwf	?___lwdiv^0,w,c
 11850  0014E8  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11851  0014EA  0E00               	movlw	0
 11852  0014EC  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11853  0014EE  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11854  0014F0                     
 11855                           ;libraries/lcd_highlevel.c: 328:     x2 = x1 + slider->cursorWidth-2;
 11856  0014F0  EE20 F00E          	lfsr	2,14
 11857  0014F4  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11858  0014F6  26D9               	addwf	fsr2l,f,c
 11859  0014F8  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11860  0014FA  22DA               	addwfc	fsr2h,f,c
 11861  0014FC  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11862  001500  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11863  001504  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 11864  001506  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 11865  001508  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 11866  00150A  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 11867  00150C  0EFE               	movlw	254
 11868  00150E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11869  001510  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11870  001512  0EFF               	movlw	255
 11871  001514  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11872  001516  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11873  001518                     
 11874                           ;libraries/lcd_highlevel.c: 329:     y1 = slider->posY + 2;
 11875  001518  EE20 F002          	lfsr	2,2
 11876  00151C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11877  00151E  26D9               	addwf	fsr2l,f,c
 11878  001520  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11879  001522  22DA               	addwfc	fsr2h,f,c
 11880  001524  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11881  001528  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11882  00152C  0E02               	movlw	2
 11883  00152E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11884  001530  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11885  001532  0E00               	movlw	0
 11886  001534  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11887  001536  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11888  001538                     
 11889                           ;libraries/lcd_highlevel.c: 330:     y2 = slider->posY + slider->height - 2;
 11890  001538  EE20 F006          	lfsr	2,6
 11891  00153C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11892  00153E  26D9               	addwf	fsr2l,f,c
 11893  001540  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11894  001542  22DA               	addwfc	fsr2h,f,c
 11895  001544  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11896  001548  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11897  00154C  EE20 F002          	lfsr	2,2
 11898  001550  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11899  001552  26D9               	addwf	fsr2l,f,c
 11900  001554  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11901  001556  22DA               	addwfc	fsr2h,f,c
 11902  001558  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11903  00155C  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11904  001560  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11905  001562  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11906  001564  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11907  001566  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11908  001568  0EFE               	movlw	254
 11909  00156A  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 11910  00156C  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 11911  00156E  0EFF               	movlw	255
 11912  001570  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 11913  001572  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 11914                           
 11915                           ;libraries/lcd_highlevel.c: 331:   }
 11916  001574  EF30  F00B         	goto	l9016
 11917  001578                     l9008:
 11918                           
 11919                           ;libraries/lcd_highlevel.c: 333:   {;libraries/lcd_highlevel.c: 334:     x1 = slider->po
      +                          sX + 1;
 11920  001578  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11921  00157C  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11922  001580  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11923  001584  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11924  001588  0E01               	movlw	1
 11925  00158A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11926  00158C  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11927  00158E  0E00               	movlw	0
 11928  001590  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11929  001592  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11930  001594                     
 11931                           ;libraries/lcd_highlevel.c: 335:     x2 = slider->posX - 1 + ((slider->width * slider->o
      +                          ldValue)/ slider->steps);
 11932  001594  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11933  001598  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11934  00159C  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11935  0015A0  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11936  0015A4  EE20 F004          	lfsr	2,4
 11937  0015A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11938  0015AA  26D9               	addwf	fsr2l,f,c
 11939  0015AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11940  0015AE  22DA               	addwfc	fsr2h,f,c
 11941  0015B0  CFDE F01A          	movff	postinc2,___wmul@multiplier
 11942  0015B4  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 11943  0015B8  EE20 F013          	lfsr	2,19
 11944  0015BC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11945  0015BE  26D9               	addwf	fsr2l,f,c
 11946  0015C0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11947  0015C2  22DA               	addwfc	fsr2h,f,c
 11948  0015C4  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11949  0015C8  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11950  0015CC  EC8E  F031         	call	___wmul	;wreg free
 11951  0015D0  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11952  0015D4  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11953  0015D8  EE20 F015          	lfsr	2,21
 11954  0015DC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11955  0015DE  26D9               	addwf	fsr2l,f,c
 11956  0015E0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11957  0015E2  22DA               	addwfc	fsr2h,f,c
 11958  0015E4  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11959  0015E8  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11960  0015EC  EC62  F02E         	call	___lwdiv	;wreg free
 11961  0015F0  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11962  0015F2  2620               	addwf	?___lwdiv^0,f,c
 11963  0015F4  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11964  0015F6  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11965  0015F8  0EFF               	movlw	255
 11966  0015FA  2420               	addwf	?___lwdiv^0,w,c
 11967  0015FC  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11968  0015FE  0EFF               	movlw	255
 11969  001600  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11970  001602  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11971  001604                     
 11972                           ;libraries/lcd_highlevel.c: 336:     y1 = slider->posY + 2;
 11973  001604  EE20 F002          	lfsr	2,2
 11974  001608  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11975  00160A  26D9               	addwf	fsr2l,f,c
 11976  00160C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11977  00160E  22DA               	addwfc	fsr2h,f,c
 11978  001610  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11979  001614  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11980  001618  0E02               	movlw	2
 11981  00161A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11982  00161C  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11983  00161E  0E00               	movlw	0
 11984  001620  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11985  001622  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11986  001624                     
 11987                           ;libraries/lcd_highlevel.c: 337:     y2 = slider->posY + slider->height - 2;
 11988  001624  EE20 F006          	lfsr	2,6
 11989  001628  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11990  00162A  26D9               	addwf	fsr2l,f,c
 11991  00162C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11992  00162E  22DA               	addwfc	fsr2h,f,c
 11993  001630  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11994  001634  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11995  001638  EE20 F002          	lfsr	2,2
 11996  00163C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11997  00163E  26D9               	addwf	fsr2l,f,c
 11998  001640  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11999  001642  22DA               	addwfc	fsr2h,f,c
 12000  001644  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12001  001648  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12002  00164C  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12003  00164E  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12004  001650  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12005  001652  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12006  001654  0EFE               	movlw	254
 12007  001656  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12008  001658  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12009  00165A  0EFF               	movlw	255
 12010  00165C  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12011  00165E  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12012  001660                     l9016:
 12013                           
 12014                           ;libraries/lcd_highlevel.c: 339:   LCD_DrawRect(x1,
 12015  001660  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12016  001664  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12017  001668  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12018  00166C  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12019  001670  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12020  001674  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12021  001678  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12022  00167C  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12023  001680  0E01               	movlw	1
 12024  001682  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12025  001684  EE20 F00A          	lfsr	2,10
 12026  001688  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12027  00168A  26D9               	addwf	fsr2l,f,c
 12028  00168C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12029  00168E  22DA               	addwfc	fsr2h,f,c
 12030  001690  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12031  001694  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12032  001698  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 12033  00169C                     
 12034                           ;libraries/lcd_highlevel.c: 344:   slider->oldValue = slider->value;
 12035  00169C  EE20 F011          	lfsr	2,17
 12036  0016A0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12037  0016A2  26D9               	addwf	fsr2l,f,c
 12038  0016A4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12039  0016A6  22DA               	addwfc	fsr2h,f,c
 12040  0016A8  EE10 F013          	lfsr	1,19
 12041  0016AC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12042  0016AE  26E1               	addwf	fsr1l,f,c
 12043  0016B0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12044  0016B2  22E2               	addwfc	fsr1h,f,c
 12045  0016B4  CFDE FFE6          	movff	postinc2,postinc1
 12046  0016B8  CFDD FFE5          	movff	postdec2,postdec1
 12047  0016BC                     
 12048                           ;libraries/lcd_highlevel.c: 347:   if(slider->cursorWidth == 0)
 12049  0016BC  EE20 F00E          	lfsr	2,14
 12050  0016C0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12051  0016C2  26D9               	addwf	fsr2l,f,c
 12052  0016C4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12053  0016C6  22DA               	addwfc	fsr2h,f,c
 12054  0016C8  50DE               	movf	postinc2,w,c
 12055  0016CA  10DE               	iorwf	postinc2,w,c
 12056  0016CC  A4D8               	btfss	status,2,c
 12057  0016CE  EF6B  F00B         	goto	u6441
 12058  0016D2  EF6D  F00B         	goto	u6440
 12059  0016D6                     u6441:
 12060  0016D6  EFE3  F00B         	goto	l9030
 12061  0016DA                     u6440:
 12062  0016DA                     
 12063                           ;libraries/lcd_highlevel.c: 348:   {;libraries/lcd_highlevel.c: 349:     x1 = slider->po
      +                          sX + 1;
 12064  0016DA  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12065  0016DE  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12066  0016E2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12067  0016E6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12068  0016EA  0E01               	movlw	1
 12069  0016EC  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12070  0016EE  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12071  0016F0  0E00               	movlw	0
 12072  0016F2  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12073  0016F4  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12074  0016F6                     
 12075                           ;libraries/lcd_highlevel.c: 350:     x2 = slider->posX - 1 + ((slider->width * slider->v
      +                          alue)/ slider->steps);
 12076  0016F6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12077  0016FA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12078  0016FE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12079  001702  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12080  001706  EE20 F004          	lfsr	2,4
 12081  00170A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12082  00170C  26D9               	addwf	fsr2l,f,c
 12083  00170E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12084  001710  22DA               	addwfc	fsr2h,f,c
 12085  001712  CFDE F01A          	movff	postinc2,___wmul@multiplier
 12086  001716  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 12087  00171A  EE20 F011          	lfsr	2,17
 12088  00171E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12089  001720  26D9               	addwf	fsr2l,f,c
 12090  001722  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12091  001724  22DA               	addwfc	fsr2h,f,c
 12092  001726  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12093  00172A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12094  00172E  EC8E  F031         	call	___wmul	;wreg free
 12095  001732  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12096  001736  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12097  00173A  EE20 F015          	lfsr	2,21
 12098  00173E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12099  001740  26D9               	addwf	fsr2l,f,c
 12100  001742  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12101  001744  22DA               	addwfc	fsr2h,f,c
 12102  001746  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12103  00174A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12104  00174E  EC62  F02E         	call	___lwdiv	;wreg free
 12105  001752  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12106  001754  2620               	addwf	?___lwdiv^0,f,c
 12107  001756  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12108  001758  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12109  00175A  0EFF               	movlw	255
 12110  00175C  2420               	addwf	?___lwdiv^0,w,c
 12111  00175E  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12112  001760  0EFF               	movlw	255
 12113  001762  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12114  001764  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12115  001766                     
 12116                           ;libraries/lcd_highlevel.c: 351:     y1 = slider->posY + 2;
 12117  001766  EE20 F002          	lfsr	2,2
 12118  00176A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12119  00176C  26D9               	addwf	fsr2l,f,c
 12120  00176E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12121  001770  22DA               	addwfc	fsr2h,f,c
 12122  001772  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12123  001776  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12124  00177A  0E02               	movlw	2
 12125  00177C  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12126  00177E  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12127  001780  0E00               	movlw	0
 12128  001782  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12129  001784  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12130  001786                     
 12131                           ;libraries/lcd_highlevel.c: 352:     y2 = slider->posY + slider->height - 2;
 12132  001786  EE20 F006          	lfsr	2,6
 12133  00178A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12134  00178C  26D9               	addwf	fsr2l,f,c
 12135  00178E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12136  001790  22DA               	addwfc	fsr2h,f,c
 12137  001792  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12138  001796  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12139  00179A  EE20 F002          	lfsr	2,2
 12140  00179E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12141  0017A0  26D9               	addwf	fsr2l,f,c
 12142  0017A2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12143  0017A4  22DA               	addwfc	fsr2h,f,c
 12144  0017A6  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12145  0017AA  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12146  0017AE  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12147  0017B0  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12148  0017B2  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12149  0017B4  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12150  0017B6  0EFE               	movlw	254
 12151  0017B8  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12152  0017BA  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12153  0017BC  0EFF               	movlw	255
 12154  0017BE  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12155  0017C0  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12156                           
 12157                           ;libraries/lcd_highlevel.c: 353:   }
 12158  0017C2  EF6D  F00C         	goto	l9038
 12159  0017C6                     l9030:
 12160                           
 12161                           ;libraries/lcd_highlevel.c: 357:   {;libraries/lcd_highlevel.c: 358:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->value)/ slider->steps);
 12162  0017C6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12163  0017CA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12164  0017CE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12165  0017D2  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12166  0017D6  EE20 F00E          	lfsr	2,14
 12167  0017DA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12168  0017DC  26D9               	addwf	fsr2l,f,c
 12169  0017DE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12170  0017E0  22DA               	addwfc	fsr2h,f,c
 12171  0017E2  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12172  0017E6  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12173  0017EA  EE20 F004          	lfsr	2,4
 12174  0017EE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12175  0017F0  26D9               	addwf	fsr2l,f,c
 12176  0017F2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12177  0017F4  22DA               	addwfc	fsr2h,f,c
 12178  0017F6  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 12179  0017FA  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 12180  0017FE  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 12181  001800  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 12182  001802  6E1A               	movwf	___wmul@multiplier^0,c
 12183  001804  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 12184  001806  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 12185  001808  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 12186  00180A  EE20 F011          	lfsr	2,17
 12187  00180E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12188  001810  26D9               	addwf	fsr2l,f,c
 12189  001812  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12190  001814  22DA               	addwfc	fsr2h,f,c
 12191  001816  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12192  00181A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12193  00181E  EC8E  F031         	call	___wmul	;wreg free
 12194  001822  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12195  001826  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12196  00182A  EE20 F015          	lfsr	2,21
 12197  00182E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12198  001830  26D9               	addwf	fsr2l,f,c
 12199  001832  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12200  001834  22DA               	addwfc	fsr2h,f,c
 12201  001836  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12202  00183A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12203  00183E  EC62  F02E         	call	___lwdiv	;wreg free
 12204  001842  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12205  001844  2620               	addwf	?___lwdiv^0,f,c
 12206  001846  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12207  001848  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12208  00184A  0E01               	movlw	1
 12209  00184C  2420               	addwf	?___lwdiv^0,w,c
 12210  00184E  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12211  001850  0E00               	movlw	0
 12212  001852  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12213  001854  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12214  001856                     
 12215                           ;libraries/lcd_highlevel.c: 359:     x2 = x1 + slider->cursorWidth-2;
 12216  001856  EE20 F00E          	lfsr	2,14
 12217  00185A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12218  00185C  26D9               	addwf	fsr2l,f,c
 12219  00185E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12220  001860  22DA               	addwfc	fsr2h,f,c
 12221  001862  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12222  001866  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12223  00186A  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 12224  00186C  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 12225  00186E  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 12226  001870  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 12227  001872  0EFE               	movlw	254
 12228  001874  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12229  001876  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12230  001878  0EFF               	movlw	255
 12231  00187A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12232  00187C  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12233  00187E                     
 12234                           ;libraries/lcd_highlevel.c: 360:     y1 = slider->posY + 2;
 12235  00187E  EE20 F002          	lfsr	2,2
 12236  001882  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12237  001884  26D9               	addwf	fsr2l,f,c
 12238  001886  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12239  001888  22DA               	addwfc	fsr2h,f,c
 12240  00188A  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12241  00188E  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12242  001892  0E02               	movlw	2
 12243  001894  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12244  001896  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12245  001898  0E00               	movlw	0
 12246  00189A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12247  00189C  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12248  00189E                     
 12249                           ;libraries/lcd_highlevel.c: 361:     y2 = slider->posY + slider->height - 2;
 12250  00189E  EE20 F006          	lfsr	2,6
 12251  0018A2  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12252  0018A4  26D9               	addwf	fsr2l,f,c
 12253  0018A6  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12254  0018A8  22DA               	addwfc	fsr2h,f,c
 12255  0018AA  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12256  0018AE  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12257  0018B2  EE20 F002          	lfsr	2,2
 12258  0018B6  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12259  0018B8  26D9               	addwf	fsr2l,f,c
 12260  0018BA  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12261  0018BC  22DA               	addwfc	fsr2h,f,c
 12262  0018BE  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12263  0018C2  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12264  0018C6  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12265  0018C8  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12266  0018CA  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12267  0018CC  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12268  0018CE  0EFE               	movlw	254
 12269  0018D0  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12270  0018D2  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12271  0018D4  0EFF               	movlw	255
 12272  0018D6  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12273  0018D8  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12274  0018DA                     l9038:
 12275                           
 12276                           ;libraries/lcd_highlevel.c: 363:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->sldColor);
 12277  0018DA  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12278  0018DE  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12279  0018E2  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12280  0018E6  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12281  0018EA  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12282  0018EE  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12283  0018F2  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12284  0018F6  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12285  0018FA  0E01               	movlw	1
 12286  0018FC  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12287  0018FE  EE20 F008          	lfsr	2,8
 12288  001902  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12289  001904  26D9               	addwf	fsr2l,f,c
 12290  001906  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12291  001908  22DA               	addwfc	fsr2h,f,c
 12292  00190A  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12293  00190E  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12294  001912  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 12295  001916  0012               	return		;funcret
 12296  001918                     __end_of_LCD_SliderUpdate:
 12297                           	callstack 0
 12298                           
 12299 ;; *************** function _Menu_endGame *****************
 12300 ;; Defined at:
 12301 ;;		line 27 in file "class/menu.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12304 ;;		 -> g1(239), 
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;		None
 12307 ;; Return value:  Size  Location     Type
 12308 ;;                  1    wreg      void 
 12309 ;; Registers used:
 12310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12316 ;;      Params:         0       2       0       0       0       0       0
 12317 ;;      Locals:         0       0       0       0       0       0       0
 12318 ;;      Temps:          2       0       0       0       0       0       0
 12319 ;;      Totals:         2       2       0       0       0       0       0
 12320 ;;Total ram usage:        4 bytes
 12321 ;; Hardware stack levels used: 1
 12322 ;; Hardware stack levels required when called: 7
 12323 ;; This function calls:
 12324 ;;		_LCD_ButtonDraw
 12325 ;;		_LCD_DrawText
 12326 ;;		_LCD_Fill
 12327 ;; This function is called by:
 12328 ;;		_displayController
 12329 ;; This function uses a non-reentrant model
 12330 ;;
 12331                           
 12332                           	psect	text46
 12333  00567A                     __ptext46:
 12334                           	callstack 0
 12335  00567A                     _Menu_endGame:
 12336                           	callstack 19
 12337  00567A                     
 12338                           ;class/menu.c: 27: void Menu_endGame(GameParameters* g);class/menu.c: 28: {;class/menu.c
      +                          : 29:     LCD_Fill(0b0000000000000000);
 12339  00567A  0E00               	movlw	0
 12340  00567C  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12341  00567E  0E00               	movlw	0
 12342  005680  6E12               	movwf	LCD_Fill@color^0,c
 12343  005682  EC6C  F029         	call	_LCD_Fill	;wreg free
 12344  005686                     
 12345                           ;class/menu.c: 30:     LCD_ButtonDraw(&(g->btnNewGame));
 12346  005686  0E80               	movlw	128
 12347  005688  0100               	movlb	0	; () banked
 12348  00568A  259C               	addwf	Menu_endGame@g& (0+255),w,b
 12349  00568C  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12350  00568E  0E00               	movlw	0
 12351  005690  219D               	addwfc	(Menu_endGame@g+1)& (0+255),w,b
 12352  005692  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12353  005694  ECAA  F007         	call	_LCD_ButtonDraw	;wreg free
 12354  005698                     
 12355                           ;class/menu.c: 32:     if(g->s1.homeScore==0)
 12356  005698  0100               	movlb	0	; () banked
 12357  00569A  EE20 F0E9          	lfsr	2,233
 12358  00569E  519C               	movf	Menu_endGame@g& (0+255),w,b
 12359  0056A0  26D9               	addwf	fsr2l,f,c
 12360  0056A2  519D               	movf	(Menu_endGame@g+1)& (0+255),w,b
 12361  0056A4  22DA               	addwfc	fsr2h,f,c
 12362  0056A6  50DE               	movf	postinc2,w,c
 12363  0056A8  10DE               	iorwf	postinc2,w,c
 12364  0056AA  A4D8               	btfss	status,2,c
 12365  0056AC  EF5A  F02B         	goto	u6941
 12366  0056B0  EF5C  F02B         	goto	u6940
 12367  0056B4                     u6941:
 12368  0056B4  EF79  F02B         	goto	l9710
 12369  0056B8                     u6940:
 12370  0056B8                     
 12371                           ; BSR set to: 0
 12372                           ;class/menu.c: 33:     {;class/menu.c: 34:         LCD_DrawText("PLAYER 2 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,50,50,0b1111111111111111,0b0000000000000000);
 12373  0056B8  0E93               	movlw	low STR_13
 12374  0056BA  6E20               	movwf	LCD_DrawText@msg^0,c
 12375  0056BC  0E7F               	movlw	high STR_13
 12376  0056BE  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12377  0056C0  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 12378  0056C2  6E22               	movwf	LCD_DrawText@font^0,c
 12379  0056C4  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12380  0056C6  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12381  0056C8  0E02               	movlw	2
 12382  0056CA  6E24               	movwf	LCD_DrawText@align^0,c
 12383  0056CC  0E00               	movlw	0
 12384  0056CE  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12385  0056D0  0E32               	movlw	50
 12386  0056D2  6E25               	movwf	LCD_DrawText@posX^0,c
 12387  0056D4  0E00               	movlw	0
 12388  0056D6  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12389  0056D8  0E32               	movlw	50
 12390  0056DA  6E27               	movwf	LCD_DrawText@posY^0,c
 12391  0056DC  0EFF               	movlw	255
 12392  0056DE  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12393  0056E0  6829               	setf	LCD_DrawText@color^0,c
 12394  0056E2  0E00               	movlw	0
 12395  0056E4  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12396  0056E6  0E00               	movlw	0
 12397  0056E8  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12398  0056EA  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 12399                           
 12400                           ;class/menu.c: 35:     }
 12401  0056EE  EF94  F02B         	goto	l187
 12402  0056F2                     l9710:
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;class/menu.c: 37:     {;class/menu.c: 38:         LCD_DrawText("PLAYER 1 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,50,50,0b1111111111111111,0b0000000000000000);
 12406  0056F2  0E86               	movlw	low STR_14
 12407  0056F4  6E20               	movwf	LCD_DrawText@msg^0,c
 12408  0056F6  0E7F               	movlw	high STR_14
 12409  0056F8  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12410  0056FA  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 12411  0056FC  6E22               	movwf	LCD_DrawText@font^0,c
 12412  0056FE  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12413  005700  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12414  005702  0E02               	movlw	2
 12415  005704  6E24               	movwf	LCD_DrawText@align^0,c
 12416  005706  0E00               	movlw	0
 12417  005708  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12418  00570A  0E32               	movlw	50
 12419  00570C  6E25               	movwf	LCD_DrawText@posX^0,c
 12420  00570E  0E00               	movlw	0
 12421  005710  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12422  005712  0E32               	movlw	50
 12423  005714  6E27               	movwf	LCD_DrawText@posY^0,c
 12424  005716  0EFF               	movlw	255
 12425  005718  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12426  00571A  6829               	setf	LCD_DrawText@color^0,c
 12427  00571C  0E00               	movlw	0
 12428  00571E  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12429  005720  0E00               	movlw	0
 12430  005722  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12431  005724  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 12432  005728                     l187:
 12433  005728  0012               	return		;funcret
 12434  00572A                     __end_of_Menu_endGame:
 12435                           	callstack 0
 12436                           
 12437 ;; *************** function _LCD_ButtonDraw *****************
 12438 ;; Defined at:
 12439 ;;		line 462 in file "libraries/lcd_highlevel.c"
 12440 ;; Parameters:    Size  Location     Type
 12441 ;;  button          2   28[BANK0 ] PTR struct .
 12442 ;;		 -> g1(239), 
 12443 ;; Auto vars:     Size  Location     Type
 12444 ;;  bmpPtr          2   58[BANK0 ] PTR struct .
 12445 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 12446 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 12447 ;;  yText           2   55[BANK0 ] unsigned short 
 12448 ;;  xText           2   53[BANK0 ] unsigned short 
 12449 ;;  y2              2   51[BANK0 ] unsigned short 
 12450 ;;  y1              2   49[BANK0 ] unsigned short 
 12451 ;;  x2              2   47[BANK0 ] unsigned short 
 12452 ;;  x1              2   45[BANK0 ] unsigned short 
 12453 ;;  width           2   43[BANK0 ] unsigned short 
 12454 ;;  i               1   57[BANK0 ] unsigned char 
 12455 ;;  tempChar        1   42[BANK0 ] unsigned char 
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  1    wreg      void 
 12458 ;; Registers used:
 12459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12465 ;;      Params:         0       2       0       0       0       0       0
 12466 ;;      Locals:         0      18       0       0       0       0       0
 12467 ;;      Temps:          0      12       0       0       0       0       0
 12468 ;;      Totals:         0      32       0       0       0       0       0
 12469 ;;Total ram usage:       32 bytes
 12470 ;; Hardware stack levels used: 1
 12471 ;; Hardware stack levels required when called: 6
 12472 ;; This function calls:
 12473 ;;		_LCD_Bitmap
 12474 ;;		_LCD_ButtonUpdate
 12475 ;;		_LCD_DrawRect
 12476 ;;		_LCD_DrawText
 12477 ;;		___awdiv
 12478 ;;		_strlen
 12479 ;; This function is called by:
 12480 ;;		_Menu_welcomeDraw
 12481 ;;		_Menu_parametersDraw
 12482 ;;		_Menu_endGame
 12483 ;; This function uses a non-reentrant model
 12484 ;;
 12485                           
 12486                           	psect	text47
 12487  000F54                     __ptext47:
 12488                           	callstack 0
 12489  000F54                     _LCD_ButtonDraw:
 12490                           	callstack 19
 12491  000F54                     
 12492                           ;libraries/lcd_highlevel.c: 462: void LCD_ButtonDraw(btn_t * button);libraries/lcd_highl
      +                          evel.c: 463: {;libraries/lcd_highlevel.c: 464:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 465:   uint16_t xText,yText;;libraries/lcd_highlevel.c: 466:   uint8_t i, temp
      +                          Char;;libraries/lcd_highlevel.c: 467:   uint16_t width=0;
 12493  000F54  0E00               	movlw	0
 12494  000F56  0100               	movlb	0	; () banked
 12495  000F58  6F8C               	movwf	(LCD_ButtonDraw@width+1)& (0+255),b
 12496  000F5A  0E00               	movlw	0
 12497  000F5C  6F8B               	movwf	LCD_ButtonDraw@width& (0+255),b
 12498  000F5E                     
 12499                           ; BSR set to: 0
 12500                           ;libraries/lcd_highlevel.c: 468:   BMP_STRUCT *bmpPtr;;libraries/lcd_highlevel.c: 470:  
      +                           x1 = button->posX;
 12501  000F5E  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12502  000F62  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12503  000F66  CFDE F08D          	movff	postinc2,LCD_ButtonDraw@x1
 12504  000F6A  CFDD F08E          	movff	postdec2,LCD_ButtonDraw@x1+1
 12505  000F6E                     
 12506                           ; BSR set to: 0
 12507                           ;libraries/lcd_highlevel.c: 471:   x2 = button->posX + button->width;
 12508  000F6E  EE20 F004          	lfsr	2,4
 12509  000F72  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12510  000F74  26D9               	addwf	fsr2l,f,c
 12511  000F76  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12512  000F78  22DA               	addwfc	fsr2h,f,c
 12513  000F7A  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12514  000F7E  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12515  000F82  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12516  000F86  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12517  000F8A  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12518  000F8E  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12519  000F92  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12520  000F94  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12521  000F96  6F8F               	movwf	LCD_ButtonDraw@x2& (0+255),b
 12522  000F98  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12523  000F9A  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12524  000F9C  6F90               	movwf	(LCD_ButtonDraw@x2+1)& (0+255),b
 12525  000F9E                     
 12526                           ; BSR set to: 0
 12527                           ;libraries/lcd_highlevel.c: 472:   y1 = button->posY;
 12528  000F9E  EE20 F002          	lfsr	2,2
 12529  000FA2  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12530  000FA4  26D9               	addwf	fsr2l,f,c
 12531  000FA6  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12532  000FA8  22DA               	addwfc	fsr2h,f,c
 12533  000FAA  CFDE F091          	movff	postinc2,LCD_ButtonDraw@y1
 12534  000FAE  CFDD F092          	movff	postdec2,LCD_ButtonDraw@y1+1
 12535  000FB2                     
 12536                           ; BSR set to: 0
 12537                           ;libraries/lcd_highlevel.c: 473:   y2 = button->posY + button->height;
 12538  000FB2  EE20 F006          	lfsr	2,6
 12539  000FB6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12540  000FB8  26D9               	addwf	fsr2l,f,c
 12541  000FBA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12542  000FBC  22DA               	addwfc	fsr2h,f,c
 12543  000FBE  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12544  000FC2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12545  000FC6  EE20 F002          	lfsr	2,2
 12546  000FCA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12547  000FCC  26D9               	addwf	fsr2l,f,c
 12548  000FCE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12549  000FD0  22DA               	addwfc	fsr2h,f,c
 12550  000FD2  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12551  000FD6  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12552  000FDA  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12553  000FDC  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12554  000FDE  6F93               	movwf	LCD_ButtonDraw@y2& (0+255),b
 12555  000FE0  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12556  000FE2  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12557  000FE4  6F94               	movwf	(LCD_ButtonDraw@y2+1)& (0+255),b
 12558  000FE6                     
 12559                           ; BSR set to: 0
 12560                           ;libraries/lcd_highlevel.c: 474:   if(button->bgColor != button->txtColor)
 12561  000FE6  EE20 F008          	lfsr	2,8
 12562  000FEA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12563  000FEC  26D9               	addwf	fsr2l,f,c
 12564  000FEE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12565  000FF0  22DA               	addwfc	fsr2h,f,c
 12566  000FF2  EE10 F00A          	lfsr	1,10
 12567  000FF6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12568  000FF8  26E1               	addwf	fsr1l,f,c
 12569  000FFA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12570  000FFC  22E2               	addwfc	fsr1h,f,c
 12571  000FFE  50DE               	movf	postinc2,w,c
 12572  001000  18E6               	xorwf	postinc1,w,c
 12573  001002  E109               	bnz	u6680
 12574  001004  50DE               	movf	postinc2,w,c
 12575  001006  18E6               	xorwf	postinc1,w,c
 12576  001008  B4D8               	btfsc	status,2,c
 12577  00100A  EF09  F008         	goto	u6681
 12578  00100E  EF0B  F008         	goto	u6680
 12579  001012                     u6681:
 12580  001012  EF48  F008         	goto	l9520
 12581  001016                     u6680:
 12582  001016                     
 12583                           ; BSR set to: 0
 12584                           ;libraries/lcd_highlevel.c: 475:   {;libraries/lcd_highlevel.c: 476:     LCD_DrawRect(x1
      +                          , y1, x2, y2, 1, button->bgColor);
 12585  001016  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12586  00101A  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12587  00101E  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12588  001022  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12589  001026  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12590  00102A  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12591  00102E  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12592  001032  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12593  001036  0E01               	movlw	1
 12594  001038  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12595  00103A  EE20 F00A          	lfsr	2,10
 12596  00103E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12597  001040  26D9               	addwf	fsr2l,f,c
 12598  001042  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12599  001044  22DA               	addwfc	fsr2h,f,c
 12600  001046  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12601  00104A  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12602  00104E  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 12603                           
 12604                           ;libraries/lcd_highlevel.c: 477:     LCD_DrawRect(x1, y1, x2, y2, 0, button->txtColor);
 12605  001052  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12606  001056  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12607  00105A  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12608  00105E  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12609  001062  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12610  001066  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12611  00106A  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12612  00106E  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12613  001072  0E00               	movlw	0
 12614  001074  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12615  001076  0100               	movlb	0	; () banked
 12616  001078  EE20 F008          	lfsr	2,8
 12617  00107C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12618  00107E  26D9               	addwf	fsr2l,f,c
 12619  001080  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12620  001082  22DA               	addwfc	fsr2h,f,c
 12621  001084  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12622  001088  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12623  00108C  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 12624  001090                     l9520:
 12625                           
 12626                           ;libraries/lcd_highlevel.c: 482:   if((button->text[0] == 'B')&&(button->text[1] == 'M')
      +                          )
 12627  001090  0100               	movlb	0	; () banked
 12628  001092  EE20 F00C          	lfsr	2,12
 12629  001096  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12630  001098  26D9               	addwf	fsr2l,f,c
 12631  00109A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12632  00109C  22DA               	addwfc	fsr2h,f,c
 12633  00109E  CFDE FFF6          	movff	postinc2,tblptrl
 12634  0010A2  CFDD FFF7          	movff	postdec2,tblptrh
 12635  0010A6                     	if	0	;tblptru may be non-zero
 12636  0010A6                     	endif
 12637  0010A6                     	if	0	;tblptru may be non-zero
 12638  0010A6                     	endif
 12639  0010A6  0008               	tblrd		*
 12640  0010A8  50F5               	movf	tablat,w,c
 12641  0010AA  0A42               	xorlw	66
 12642  0010AC  A4D8               	btfss	status,2,c
 12643  0010AE  EF5B  F008         	goto	u6691
 12644  0010B2  EF5D  F008         	goto	u6690
 12645  0010B6                     u6691:
 12646  0010B6  EF0D  F009         	goto	l9532
 12647  0010BA                     u6690:
 12648  0010BA                     
 12649                           ; BSR set to: 0
 12650  0010BA  EE20 F00C          	lfsr	2,12
 12651  0010BE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12652  0010C0  26D9               	addwf	fsr2l,f,c
 12653  0010C2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12654  0010C4  22DA               	addwfc	fsr2h,f,c
 12655  0010C6  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12656  0010CA  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12657  0010CE  0E01               	movlw	1
 12658  0010D0  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12659  0010D2  0E00               	movlw	0
 12660  0010D4  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12661  0010D6  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12662  0010DA  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12663  0010DE                     	if	0	;tblptru may be non-zero
 12664  0010DE                     	endif
 12665  0010DE                     	if	0	;tblptru may be non-zero
 12666  0010DE                     	endif
 12667  0010DE  0008               	tblrd		*
 12668  0010E0  50F5               	movf	tablat,w,c
 12669  0010E2  0A4D               	xorlw	77
 12670  0010E4  A4D8               	btfss	status,2,c
 12671  0010E6  EF77  F008         	goto	u6701
 12672  0010EA  EF79  F008         	goto	u6700
 12673  0010EE                     u6701:
 12674  0010EE  EF0D  F009         	goto	l9532
 12675  0010F2                     u6700:
 12676  0010F2                     
 12677                           ; BSR set to: 0
 12678                           ;libraries/lcd_highlevel.c: 483:   {;libraries/lcd_highlevel.c: 484:     bmpPtr = (BMP_S
      +                          TRUCT *)button->text;
 12679  0010F2  EE20 F00C          	lfsr	2,12
 12680  0010F6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12681  0010F8  26D9               	addwf	fsr2l,f,c
 12682  0010FA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12683  0010FC  22DA               	addwfc	fsr2h,f,c
 12684  0010FE  CFDE F09A          	movff	postinc2,LCD_ButtonDraw@bmpPtr
 12685  001102  CFDD F09B          	movff	postdec2,LCD_ButtonDraw@bmpPtr+1
 12686  001106                     
 12687                           ; BSR set to: 0
 12688                           ;libraries/lcd_highlevel.c: 485:     yText = button->height / 2 + button->posY - (bmpPtr
      +                          ->biHeight / 2);
 12689  001106  EE20 F002          	lfsr	2,2
 12690  00110A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12691  00110C  26D9               	addwf	fsr2l,f,c
 12692  00110E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12693  001110  22DA               	addwfc	fsr2h,f,c
 12694  001112  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12695  001116  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12696  00111A  0E16               	movlw	22
 12697  00111C  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12698  00111E  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12699  001120  0E00               	movlw	0
 12700  001122  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12701  001124  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12702  001126  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12703  00112A  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12704  00112E                     	if	0	;tblptru may be non-zero
 12705  00112E                     	endif
 12706  00112E                     	if	0	;tblptru may be non-zero
 12707  00112E                     	endif
 12708  00112E  0009               	tblrd		*+
 12709  001130  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12710  001134  0009               	tblrd		*+
 12711  001136  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12712  00113A  0009               	tblrd		*+
 12713  00113C  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12714  001140  0009               	tblrd		*+
 12715  001142  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12716  001146  90D8               	bcf	status,0,c
 12717  001148  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12718  00114A  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12719  00114C  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12720  00114E  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12721  001150  EE20 F006          	lfsr	2,6
 12722  001154  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12723  001156  26D9               	addwf	fsr2l,f,c
 12724  001158  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12725  00115A  22DA               	addwfc	fsr2h,f,c
 12726  00115C  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12727  001160  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12728  001164  90D8               	bcf	status,0,c
 12729  001166  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12730  001168  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12731  00116A  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12732  00116C  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12733  00116E  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12734  001170  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12735  001172  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12736  001174  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12737  001176  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12738  001178  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12739  00117A  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12740  00117C  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12741  00117E  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12742  001180  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12743  001182                     
 12744                           ; BSR set to: 0
 12745                           ;libraries/lcd_highlevel.c: 486:     xText = button->width / 2 + button->posX - (bmpPtr-
      +                          >biWidth / 2);
 12746  001182  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12747  001186  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12748  00118A  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12749  00118E  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12750  001192  0E12               	movlw	18
 12751  001194  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12752  001196  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12753  001198  0E00               	movlw	0
 12754  00119A  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12755  00119C  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12756  00119E  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12757  0011A2  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12758  0011A6                     	if	0	;tblptru may be non-zero
 12759  0011A6                     	endif
 12760  0011A6                     	if	0	;tblptru may be non-zero
 12761  0011A6                     	endif
 12762  0011A6  0009               	tblrd		*+
 12763  0011A8  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12764  0011AC  0009               	tblrd		*+
 12765  0011AE  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12766  0011B2  0009               	tblrd		*+
 12767  0011B4  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12768  0011B8  0009               	tblrd		*+
 12769  0011BA  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12770  0011BE  90D8               	bcf	status,0,c
 12771  0011C0  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12772  0011C2  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12773  0011C4  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12774  0011C6  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12775  0011C8  EE20 F004          	lfsr	2,4
 12776  0011CC  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12777  0011CE  26D9               	addwf	fsr2l,f,c
 12778  0011D0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12779  0011D2  22DA               	addwfc	fsr2h,f,c
 12780  0011D4  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12781  0011D8  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12782  0011DC  90D8               	bcf	status,0,c
 12783  0011DE  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12784  0011E0  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12785  0011E2  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12786  0011E4  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12787  0011E6  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12788  0011E8  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12789  0011EA  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12790  0011EC  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12791  0011EE  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12792  0011F0  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12793  0011F2  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 12794  0011F4  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12795  0011F6  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12796  0011F8  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 12797  0011FA                     
 12798                           ; BSR set to: 0
 12799                           ;libraries/lcd_highlevel.c: 487:     LCD_Bitmap((const uint8_t *)bmpPtr,xText,yText);
 12800  0011FA  C09A  F027         	movff	LCD_ButtonDraw@bmpPtr,LCD_Bitmap@bmpPtr
 12801  0011FE  C09B  F028         	movff	LCD_ButtonDraw@bmpPtr+1,LCD_Bitmap@bmpPtr+1
 12802  001202  C095  F029         	movff	LCD_ButtonDraw@xText,LCD_Bitmap@posX
 12803  001206  C096  F02A         	movff	LCD_ButtonDraw@xText+1,LCD_Bitmap@posX+1
 12804  00120A  C097  F02B         	movff	LCD_ButtonDraw@yText,LCD_Bitmap@posY
 12805  00120E  C098  F02C         	movff	LCD_ButtonDraw@yText+1,LCD_Bitmap@posY+1
 12806  001212  ECAF  F004         	call	_LCD_Bitmap	;wreg free
 12807                           
 12808                           ;libraries/lcd_highlevel.c: 488:   }
 12809  001216  EF1A  F00A         	goto	l9548
 12810  00121A                     l9532:
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;libraries/lcd_highlevel.c: 493:   {;libraries/lcd_highlevel.c: 494:     yText = button-
      +                          >height / 2 + button->posY - (button->font->height / 2);
 12814  00121A  EE20 F002          	lfsr	2,2
 12815  00121E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12816  001220  26D9               	addwf	fsr2l,f,c
 12817  001222  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12818  001224  22DA               	addwfc	fsr2h,f,c
 12819  001226  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12820  00122A  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12821  00122E  EE20 F00E          	lfsr	2,14
 12822  001232  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12823  001234  26D9               	addwf	fsr2l,f,c
 12824  001236  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12825  001238  22DA               	addwfc	fsr2h,f,c
 12826  00123A  CFDE FFF6          	movff	postinc2,tblptrl
 12827  00123E  CFDD FFF7          	movff	postdec2,tblptrh
 12828  001242                     	if	0	;tblptru may be non-zero
 12829  001242                     	endif
 12830  001242                     	if	0	;tblptru may be non-zero
 12831  001242                     	endif
 12832  001242  0008               	tblrd		*
 12833  001244  50F5               	movf	tablat,w,c
 12834  001246  6E12               	movwf	___awdiv@dividend^0,c
 12835  001248  6A13               	clrf	(___awdiv@dividend+1)^0,c
 12836  00124A  0E00               	movlw	0
 12837  00124C  6E15               	movwf	(___awdiv@divisor+1)^0,c
 12838  00124E  0E02               	movlw	2
 12839  001250  6E14               	movwf	___awdiv@divisor^0,c
 12840  001252  ECA9  F028         	call	___awdiv	;wreg free
 12841  001256  0100               	movlb	0	; () banked
 12842  001258  EE20 F006          	lfsr	2,6
 12843  00125C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12844  00125E  26D9               	addwf	fsr2l,f,c
 12845  001260  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12846  001262  22DA               	addwfc	fsr2h,f,c
 12847  001264  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12848  001268  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12849  00126C  90D8               	bcf	status,0,c
 12850  00126E  3181               	rrcf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12851  001270  6F83               	movwf	(??_LCD_ButtonDraw+5)& (0+255),b
 12852  001272  3180               	rrcf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12853  001274  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12854  001276  5012               	movf	?___awdiv^0,w,c
 12855  001278  5F82               	subwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12856  00127A  5013               	movf	(?___awdiv+1)^0,w,c
 12857  00127C  5B83               	subwfb	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12858  00127E  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12859  001280  2582               	addwf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12860  001282  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12861  001284  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12862  001286  2183               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12863  001288  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12864  00128A                     
 12865                           ; BSR set to: 0
 12866                           ;libraries/lcd_highlevel.c: 495:     for(i=0;i<strlen(button->text);i++)
 12867  00128A  0E00               	movlw	0
 12868  00128C  6F99               	movwf	LCD_ButtonDraw@i& (0+255),b
 12869  00128E  EFA5  F009         	goto	l9542
 12870  001292                     l9536:
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;libraries/lcd_highlevel.c: 496:     {;libraries/lcd_highlevel.c: 497:       tempChar = 
      +                          (button->text[i]) - button->font->start_char;
 12874  001292  EE20 F00E          	lfsr	2,14
 12875  001296  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12876  001298  26D9               	addwf	fsr2l,f,c
 12877  00129A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12878  00129C  22DA               	addwfc	fsr2h,f,c
 12879  00129E  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12880  0012A2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12881  0012A6  0E01               	movlw	1
 12882  0012A8  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12883  0012AA  0E00               	movlw	0
 12884  0012AC  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12885  0012AE  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12886  0012B2  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12887  0012B6                     	if	0	;tblptru may be non-zero
 12888  0012B6                     	endif
 12889  0012B6                     	if	0	;tblptru may be non-zero
 12890  0012B6                     	endif
 12891  0012B6  0008               	tblrd		*
 12892  0012B8  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12893  0012BC  EE20 F00C          	lfsr	2,12
 12894  0012C0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12895  0012C2  26D9               	addwf	fsr2l,f,c
 12896  0012C4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12897  0012C6  22DA               	addwfc	fsr2h,f,c
 12898  0012C8  CFDE F081          	movff	postinc2,??_LCD_ButtonDraw+3
 12899  0012CC  CFDD F082          	movff	postdec2,??_LCD_ButtonDraw+4
 12900  0012D0  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12901  0012D2  2781               	addwf	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12902  0012D4  0E00               	movlw	0
 12903  0012D6  2382               	addwfc	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12904  0012D8  C081  FFF6         	movff	??_LCD_ButtonDraw+3,tblptrl
 12905  0012DC  C082  FFF7         	movff	??_LCD_ButtonDraw+4,tblptrh
 12906  0012E0                     	if	0	;tblptru may be non-zero
 12907  0012E0                     	endif
 12908  0012E0                     	if	0	;tblptru may be non-zero
 12909  0012E0                     	endif
 12910  0012E0  0008               	tblrd		*
 12911  0012E2  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12912  0012E6  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12913  0012E8  5D83               	subwf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12914  0012EA  6F8A               	movwf	LCD_ButtonDraw@tempChar& (0+255),b
 12915  0012EC                     
 12916                           ; BSR set to: 0
 12917                           ;libraries/lcd_highlevel.c: 498:       width += button->font->descriptor[tempChar].width
      +                          +2;
 12918  0012EC  518A               	movf	LCD_ButtonDraw@tempChar& (0+255),w,b
 12919  0012EE  0D03               	mullw	3
 12920  0012F0  EE20 F00E          	lfsr	2,14
 12921  0012F4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12922  0012F6  26D9               	addwf	fsr2l,f,c
 12923  0012F8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12924  0012FA  22DA               	addwfc	fsr2h,f,c
 12925  0012FC  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12926  001300  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12927  001304  0E03               	movlw	3
 12928  001306  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12929  001308  0E00               	movlw	0
 12930  00130A  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12931  00130C  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12932  001310  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12933  001314                     	if	0	;tblptru may be non-zero
 12934  001314                     	endif
 12935  001314                     	if	0	;tblptru may be non-zero
 12936  001314                     	endif
 12937  001314  0009               	tblrd		*+
 12938  001316  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12939  00131A  0009               	tblrd		*+
 12940  00131C  CFF5 F081          	movff	tablat,??_LCD_ButtonDraw+3
 12941  001320  50F3               	movf	243,w,c
 12942  001322  2780               	addwf	(??_LCD_ButtonDraw+2)& (0+255),f,b
 12943  001324  50F4               	movf	244,w,c
 12944  001326  2381               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12945  001328  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12946  00132C  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12947  001330                     	if	0	;tblptru may be non-zero
 12948  001330                     	endif
 12949  001330                     	if	0	;tblptru may be non-zero
 12950  001330                     	endif
 12951  001330  0008               	tblrd		*
 12952  001332  50F5               	movf	tablat,w,c
 12953  001334  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12954  001336  6B83               	clrf	(??_LCD_ButtonDraw+5)& (0+255),b
 12955  001338  0E02               	movlw	2
 12956  00133A  2782               	addwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12957  00133C  0E00               	movlw	0
 12958  00133E  2383               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12959  001340  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12960  001342  278B               	addwf	LCD_ButtonDraw@width& (0+255),f,b
 12961  001344  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12962  001346  238C               	addwfc	(LCD_ButtonDraw@width+1)& (0+255),f,b
 12963  001348                     
 12964                           ; BSR set to: 0
 12965                           ;libraries/lcd_highlevel.c: 499:     }
 12966  001348  2B99               	incf	LCD_ButtonDraw@i& (0+255),f,b
 12967  00134A                     l9542:
 12968                           
 12969                           ; BSR set to: 0
 12970  00134A  EE20 F00C          	lfsr	2,12
 12971  00134E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12972  001350  26D9               	addwf	fsr2l,f,c
 12973  001352  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12974  001354  22DA               	addwfc	fsr2h,f,c
 12975  001356  CFDE F012          	movff	postinc2,strlen@s
 12976  00135A  CFDD F013          	movff	postdec2,strlen@s+1
 12977  00135E  EC74  F030         	call	_strlen	;wreg free
 12978  001362  0100               	movlb	0	; () banked
 12979  001364  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12980  001366  6F7E               	movwf	??_LCD_ButtonDraw& (0+255),b
 12981  001368  6B7F               	clrf	(??_LCD_ButtonDraw+1)& (0+255),b
 12982  00136A  5012               	movf	?_strlen^0,w,c
 12983  00136C  5D7E               	subwf	??_LCD_ButtonDraw& (0+255),w,b
 12984  00136E  5013               	movf	(?_strlen+1)^0,w,c
 12985  001370  597F               	subwfb	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12986  001372  A0D8               	btfss	status,0,c
 12987  001374  EFBE  F009         	goto	u6711
 12988  001378  EFC0  F009         	goto	u6710
 12989  00137C                     u6711:
 12990  00137C  EF49  F009         	goto	l9536
 12991  001380                     u6710:
 12992  001380                     
 12993                           ; BSR set to: 0
 12994                           ;libraries/lcd_highlevel.c: 500:     xText = button->width / 2 + button->posX - (width /
      +                           2);
 12995  001380  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12996  001384  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12997  001388  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12998  00138C  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12999  001390  90D8               	bcf	status,0,c
 13000  001392  318C               	rrcf	(LCD_ButtonDraw@width+1)& (0+255),w,b
 13001  001394  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 13002  001396  318B               	rrcf	LCD_ButtonDraw@width& (0+255),w,b
 13003  001398  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 13004  00139A  EE20 F004          	lfsr	2,4
 13005  00139E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13006  0013A0  26D9               	addwf	fsr2l,f,c
 13007  0013A2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13008  0013A4  22DA               	addwfc	fsr2h,f,c
 13009  0013A6  CFDE F082          	movff	postinc2,??_LCD_ButtonDraw+4
 13010  0013AA  CFDD F083          	movff	postdec2,??_LCD_ButtonDraw+5
 13011  0013AE  90D8               	bcf	status,0,c
 13012  0013B0  3183               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13013  0013B2  6F85               	movwf	(??_LCD_ButtonDraw+7)& (0+255),b
 13014  0013B4  3182               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 13015  0013B6  6F84               	movwf	(??_LCD_ButtonDraw+6)& (0+255),b
 13016  0013B8  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 13017  0013BA  5F84               	subwf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 13018  0013BC  5181               	movf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 13019  0013BE  5B85               	subwfb	(??_LCD_ButtonDraw+7)& (0+255),f,b
 13020  0013C0  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13021  0013C2  2584               	addwf	(??_LCD_ButtonDraw+6)& (0+255),w,b
 13022  0013C4  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 13023  0013C6  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13024  0013C8  2185               	addwfc	(??_LCD_ButtonDraw+7)& (0+255),w,b
 13025  0013CA  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 13026  0013CC                     
 13027                           ; BSR set to: 0
 13028                           ;libraries/lcd_highlevel.c: 501:     LCD_DrawText(button->text, button->font,A_LEFT,
 13029  0013CC  EE20 F00C          	lfsr	2,12
 13030  0013D0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13031  0013D2  26D9               	addwf	fsr2l,f,c
 13032  0013D4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13033  0013D6  22DA               	addwfc	fsr2h,f,c
 13034  0013D8  CFDE F020          	movff	postinc2,LCD_DrawText@msg
 13035  0013DC  CFDD F021          	movff	postdec2,LCD_DrawText@msg+1
 13036  0013E0  EE20 F00E          	lfsr	2,14
 13037  0013E4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13038  0013E6  26D9               	addwf	fsr2l,f,c
 13039  0013E8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13040  0013EA  22DA               	addwfc	fsr2h,f,c
 13041  0013EC  CFDE F022          	movff	postinc2,LCD_DrawText@font
 13042  0013F0  CFDD F023          	movff	postdec2,LCD_DrawText@font+1
 13043  0013F4  0E00               	movlw	0
 13044  0013F6  6E24               	movwf	LCD_DrawText@align^0,c
 13045  0013F8  C095  F025         	movff	LCD_ButtonDraw@xText,LCD_DrawText@posX
 13046  0013FC  C096  F026         	movff	LCD_ButtonDraw@xText+1,LCD_DrawText@posX+1
 13047  001400  C097  F027         	movff	LCD_ButtonDraw@yText,LCD_DrawText@posY
 13048  001404  C098  F028         	movff	LCD_ButtonDraw@yText+1,LCD_DrawText@posY+1
 13049  001408  EE20 F008          	lfsr	2,8
 13050  00140C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13051  00140E  26D9               	addwf	fsr2l,f,c
 13052  001410  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13053  001412  22DA               	addwfc	fsr2h,f,c
 13054  001414  CFDE F029          	movff	postinc2,LCD_DrawText@color
 13055  001418  CFDD F02A          	movff	postdec2,LCD_DrawText@color+1
 13056  00141C  EE20 F00A          	lfsr	2,10
 13057  001420  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13058  001422  26D9               	addwf	fsr2l,f,c
 13059  001424  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13060  001426  22DA               	addwfc	fsr2h,f,c
 13061  001428  CFDE F02B          	movff	postinc2,LCD_DrawText@bg_color
 13062  00142C  CFDD F02C          	movff	postdec2,LCD_DrawText@bg_color+1
 13063  001430  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 13064  001434                     l9548:
 13065                           
 13066                           ;libraries/lcd_highlevel.c: 504:   LCD_ButtonUpdate(button);
 13067  001434  C07C  F025         	movff	LCD_ButtonDraw@button,LCD_ButtonUpdate@button
 13068  001438  C07D  F026         	movff	LCD_ButtonDraw@button+1,LCD_ButtonUpdate@button+1
 13069  00143C  ECF7  F01B         	call	_LCD_ButtonUpdate	;wreg free
 13070  001440  0012               	return		;funcret
 13071  001442                     __end_of_LCD_ButtonDraw:
 13072                           	callstack 0
 13073                           
 13074 ;; *************** function _LCD_ButtonUpdate *****************
 13075 ;; Defined at:
 13076 ;;		line 425 in file "libraries/lcd_highlevel.c"
 13077 ;; Parameters:    Size  Location     Type
 13078 ;;  button          2   36[COMRAM] PTR struct .
 13079 ;;		 -> g1(239), 
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;  y2              2   52[COMRAM] unsigned short 
 13082 ;;  x1              2   50[COMRAM] unsigned short 
 13083 ;;  y1              2   48[COMRAM] unsigned short 
 13084 ;;  x2              2   46[COMRAM] unsigned short 
 13085 ;;  colorIn         2   44[COMRAM] unsigned short 
 13086 ;;  colorOut        2   42[COMRAM] unsigned short 
 13087 ;; Return value:  Size  Location     Type
 13088 ;;                  1    wreg      void 
 13089 ;; Registers used:
 13090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13091 ;; Tracked objects:
 13092 ;;		On entry : 0/0
 13093 ;;		On exit  : 0/0
 13094 ;;		Unchanged: 0/0
 13095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13096 ;;      Params:         2       0       0       0       0       0       0
 13097 ;;      Locals:        12       0       0       0       0       0       0
 13098 ;;      Temps:          4       0       0       0       0       0       0
 13099 ;;      Totals:        18       0       0       0       0       0       0
 13100 ;;Total ram usage:       18 bytes
 13101 ;; Hardware stack levels used: 1
 13102 ;; Hardware stack levels required when called: 5
 13103 ;; This function calls:
 13104 ;;		_LCD_DrawRect
 13105 ;;		_LCD_Read
 13106 ;; This function is called by:
 13107 ;;		_LCD_ButtonDraw
 13108 ;; This function uses a non-reentrant model
 13109 ;;
 13110                           
 13111                           	psect	text48
 13112  0037EE                     __ptext48:
 13113                           	callstack 0
 13114  0037EE                     _LCD_ButtonUpdate:
 13115                           	callstack 19
 13116  0037EE                     
 13117                           ;libraries/lcd_highlevel.c: 425: void LCD_ButtonUpdate(btn_t * button);libraries/lcd_hig
      +                          hlevel.c: 426: {;libraries/lcd_highlevel.c: 427:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 428:   uint16_t colorOut, colorIn;;libraries/lcd_highlevel.c: 430:   x1 = bu
      +                          tton->posX;
 13118  0037EE  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13119  0037F2  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13120  0037F6  CFDE F033          	movff	postinc2,LCD_ButtonUpdate@x1
 13121  0037FA  CFDD F034          	movff	postdec2,LCD_ButtonUpdate@x1+1
 13122  0037FE                     
 13123                           ;libraries/lcd_highlevel.c: 431:   x2 = button->posX + button->width;
 13124  0037FE  EE20 F004          	lfsr	2,4
 13125  003802  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13126  003804  26D9               	addwf	fsr2l,f,c
 13127  003806  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13128  003808  22DA               	addwfc	fsr2h,f,c
 13129  00380A  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13130  00380E  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13131  003812  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13132  003816  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13133  00381A  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13134  00381E  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13135  003822  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13136  003824  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13137  003826  6E2F               	movwf	LCD_ButtonUpdate@x2^0,c
 13138  003828  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13139  00382A  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13140  00382C  6E30               	movwf	(LCD_ButtonUpdate@x2+1)^0,c
 13141  00382E                     
 13142                           ;libraries/lcd_highlevel.c: 432:   y1 = button->posY;
 13143  00382E  EE20 F002          	lfsr	2,2
 13144  003832  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13145  003834  26D9               	addwf	fsr2l,f,c
 13146  003836  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13147  003838  22DA               	addwfc	fsr2h,f,c
 13148  00383A  CFDE F031          	movff	postinc2,LCD_ButtonUpdate@y1
 13149  00383E  CFDD F032          	movff	postdec2,LCD_ButtonUpdate@y1+1
 13150  003842                     
 13151                           ;libraries/lcd_highlevel.c: 433:   y2 = button->posY + button->height;
 13152  003842  EE20 F006          	lfsr	2,6
 13153  003846  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13154  003848  26D9               	addwf	fsr2l,f,c
 13155  00384A  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13156  00384C  22DA               	addwfc	fsr2h,f,c
 13157  00384E  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13158  003852  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13159  003856  EE20 F002          	lfsr	2,2
 13160  00385A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13161  00385C  26D9               	addwf	fsr2l,f,c
 13162  00385E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13163  003860  22DA               	addwfc	fsr2h,f,c
 13164  003862  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13165  003866  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13166  00386A  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13167  00386C  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13168  00386E  6E35               	movwf	LCD_ButtonUpdate@y2^0,c
 13169  003870  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13170  003872  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13171  003874  6E36               	movwf	(LCD_ButtonUpdate@y2+1)^0,c
 13172  003876                     
 13173                           ;libraries/lcd_highlevel.c: 435:   if(button->pressed == 0)
 13174  003876  EE20 F010          	lfsr	2,16
 13175  00387A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13176  00387C  26D9               	addwf	fsr2l,f,c
 13177  00387E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13178  003880  22DA               	addwfc	fsr2h,f,c
 13179  003882  50DF               	movf	indf2,w,c
 13180  003884  A4D8               	btfss	status,2,c
 13181  003886  EF47  F01C         	goto	u6451
 13182  00388A  EF49  F01C         	goto	u6450
 13183  00388E                     u6451:
 13184  00388E  EF5F  F01C         	goto	l9052
 13185  003892                     u6450:
 13186  003892                     
 13187                           ;libraries/lcd_highlevel.c: 436:   {;libraries/lcd_highlevel.c: 437:     colorOut = butt
      +                          on->txtColor;
 13188  003892  EE20 F008          	lfsr	2,8
 13189  003896  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13190  003898  26D9               	addwf	fsr2l,f,c
 13191  00389A  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13192  00389C  22DA               	addwfc	fsr2h,f,c
 13193  00389E  CFDE F02B          	movff	postinc2,LCD_ButtonUpdate@colorOut
 13194  0038A2  CFDD F02C          	movff	postdec2,LCD_ButtonUpdate@colorOut+1
 13195                           
 13196                           ;libraries/lcd_highlevel.c: 438:     colorIn = button->bgColor;
 13197  0038A6  EE20 F00A          	lfsr	2,10
 13198  0038AA  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13199  0038AC  26D9               	addwf	fsr2l,f,c
 13200  0038AE  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13201  0038B0  22DA               	addwfc	fsr2h,f,c
 13202  0038B2  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13203  0038B6  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13204                           
 13205                           ;libraries/lcd_highlevel.c: 439:   }
 13206  0038BA  EF79  F01C         	goto	l9056
 13207  0038BE                     l9052:
 13208                           
 13209                           ;libraries/lcd_highlevel.c: 441:   {;libraries/lcd_highlevel.c: 443:     colorOut = LCD_
      +                          Read(x1,y2+1);
 13210  0038BE  C033  F012         	movff	LCD_ButtonUpdate@x1,LCD_Read@posX
 13211  0038C2  C034  F013         	movff	LCD_ButtonUpdate@x1+1,LCD_Read@posX+1
 13212  0038C6  0E01               	movlw	1
 13213  0038C8  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13214  0038CA  6E14               	movwf	LCD_Read@posY^0,c
 13215  0038CC  0E00               	movlw	0
 13216  0038CE  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13217  0038D0  6E15               	movwf	(LCD_Read@posY+1)^0,c
 13218  0038D2  ECE7  F020         	call	_LCD_Read	;wreg free
 13219  0038D6  C012  F02B         	movff	?_LCD_Read,LCD_ButtonUpdate@colorOut
 13220  0038DA  C013  F02C         	movff	?_LCD_Read+1,LCD_ButtonUpdate@colorOut+1
 13221  0038DE                     
 13222                           ;libraries/lcd_highlevel.c: 444:     colorIn = button->txtColor;
 13223  0038DE  EE20 F008          	lfsr	2,8
 13224  0038E2  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13225  0038E4  26D9               	addwf	fsr2l,f,c
 13226  0038E6  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13227  0038E8  22DA               	addwfc	fsr2h,f,c
 13228  0038EA  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13229  0038EE  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13230  0038F2                     l9056:
 13231                           
 13232                           ;libraries/lcd_highlevel.c: 446:   if(button->bgColor != button->txtColor)
 13233  0038F2  EE20 F008          	lfsr	2,8
 13234  0038F6  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13235  0038F8  26D9               	addwf	fsr2l,f,c
 13236  0038FA  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13237  0038FC  22DA               	addwfc	fsr2h,f,c
 13238  0038FE  EE10 F00A          	lfsr	1,10
 13239  003902  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13240  003904  26E1               	addwf	fsr1l,f,c
 13241  003906  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13242  003908  22E2               	addwfc	fsr1h,f,c
 13243  00390A  50DE               	movf	postinc2,w,c
 13244  00390C  18E6               	xorwf	postinc1,w,c
 13245  00390E  E109               	bnz	u6460
 13246  003910  50DE               	movf	postinc2,w,c
 13247  003912  18E6               	xorwf	postinc1,w,c
 13248  003914  B4D8               	btfsc	status,2,c
 13249  003916  EF8F  F01C         	goto	u6461
 13250  00391A  EF91  F01C         	goto	u6460
 13251  00391E                     u6461:
 13252  00391E  EF11  F01D         	goto	l250
 13253  003922                     u6460:
 13254  003922                     
 13255                           ;libraries/lcd_highlevel.c: 447:   {;libraries/lcd_highlevel.c: 449:     LCD_DrawRect(x1
      +                          +3, y2+1, x2+3, y2+3, 1, colorOut);
 13256  003922  0E03               	movlw	3
 13257  003924  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13258  003926  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13259  003928  0E00               	movlw	0
 13260  00392A  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13261  00392C  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13262  00392E  0E01               	movlw	1
 13263  003930  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13264  003932  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13265  003934  0E00               	movlw	0
 13266  003936  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13267  003938  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13268  00393A  0E03               	movlw	3
 13269  00393C  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13270  00393E  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13271  003940  0E00               	movlw	0
 13272  003942  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13273  003944  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13274  003946  0E03               	movlw	3
 13275  003948  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13276  00394A  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13277  00394C  0E00               	movlw	0
 13278  00394E  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13279  003950  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13280  003952  0E01               	movlw	1
 13281  003954  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13282  003956  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13283  00395A  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13284  00395E  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 13285                           
 13286                           ;libraries/lcd_highlevel.c: 450:     LCD_DrawRect(x2+1, y1+3, x2+3, y2+3, 1, colorOut);
 13287  003962  0E01               	movlw	1
 13288  003964  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13289  003966  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13290  003968  0E00               	movlw	0
 13291  00396A  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13292  00396C  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13293  00396E  0E03               	movlw	3
 13294  003970  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13295  003972  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13296  003974  0E00               	movlw	0
 13297  003976  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13298  003978  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13299  00397A  0E03               	movlw	3
 13300  00397C  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13301  00397E  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13302  003980  0E00               	movlw	0
 13303  003982  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13304  003984  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13305  003986  0E03               	movlw	3
 13306  003988  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13307  00398A  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13308  00398C  0E00               	movlw	0
 13309  00398E  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13310  003990  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13311  003992  0E01               	movlw	1
 13312  003994  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13313  003996  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13314  00399A  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13315  00399E  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 13316                           
 13317                           ;libraries/lcd_highlevel.c: 451:     LCD_DrawRect(x1+1, y1+1, x2-1, y1+2, 1, colorIn);
 13318  0039A2  0E01               	movlw	1
 13319  0039A4  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13320  0039A6  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13321  0039A8  0E00               	movlw	0
 13322  0039AA  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13323  0039AC  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13324  0039AE  0E01               	movlw	1
 13325  0039B0  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13326  0039B2  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13327  0039B4  0E00               	movlw	0
 13328  0039B6  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13329  0039B8  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13330  0039BA  0EFF               	movlw	255
 13331  0039BC  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13332  0039BE  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13333  0039C0  0EFF               	movlw	255
 13334  0039C2  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13335  0039C4  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13336  0039C6  0E02               	movlw	2
 13337  0039C8  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13338  0039CA  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13339  0039CC  0E00               	movlw	0
 13340  0039CE  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13341  0039D0  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13342  0039D2  0E01               	movlw	1
 13343  0039D4  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13344  0039D6  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13345  0039DA  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13346  0039DE  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 13347                           
 13348                           ;libraries/lcd_highlevel.c: 452:     LCD_DrawRect(x1+1, y1+1, x1+2, y2-1, 1, colorIn);
 13349  0039E2  0E01               	movlw	1
 13350  0039E4  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13351  0039E6  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13352  0039E8  0E00               	movlw	0
 13353  0039EA  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13354  0039EC  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13355  0039EE  0E01               	movlw	1
 13356  0039F0  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13357  0039F2  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13358  0039F4  0E00               	movlw	0
 13359  0039F6  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13360  0039F8  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13361  0039FA  0E02               	movlw	2
 13362  0039FC  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13363  0039FE  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13364  003A00  0E00               	movlw	0
 13365  003A02  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13366  003A04  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13367  003A06  0EFF               	movlw	255
 13368  003A08  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13369  003A0A  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13370  003A0C  0EFF               	movlw	255
 13371  003A0E  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13372  003A10  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13373  003A12  0E01               	movlw	1
 13374  003A14  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13375  003A16  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13376  003A1A  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13377  003A1E  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 13378  003A22                     l250:
 13379  003A22  0012               	return		;funcret
 13380  003A24                     __end_of_LCD_ButtonUpdate:
 13381                           	callstack 0
 13382                           
 13383 ;; *************** function _LCD_Read *****************
 13384 ;; Defined at:
 13385 ;;		line 64 in file "libraries/lcd_lowlevel.c"
 13386 ;; Parameters:    Size  Location     Type
 13387 ;;  posX            2   17[COMRAM] unsigned short 
 13388 ;;  posY            2   19[COMRAM] unsigned short 
 13389 ;; Auto vars:     Size  Location     Type
 13390 ;;  temp16          2   25[COMRAM] unsigned short 
 13391 ;;  color           2   23[COMRAM] unsigned short 
 13392 ;; Return value:  Size  Location     Type
 13393 ;;                  2   17[COMRAM] unsigned short 
 13394 ;; Registers used:
 13395 ;;		wreg, status,2, status,0
 13396 ;; Tracked objects:
 13397 ;;		On entry : 0/0
 13398 ;;		On exit  : 0/0
 13399 ;;		Unchanged: 0/0
 13400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13401 ;;      Params:         4       0       0       0       0       0       0
 13402 ;;      Locals:         4       0       0       0       0       0       0
 13403 ;;      Temps:          2       0       0       0       0       0       0
 13404 ;;      Totals:        10       0       0       0       0       0       0
 13405 ;;Total ram usage:       10 bytes
 13406 ;; Hardware stack levels used: 1
 13407 ;; Hardware stack levels required when called: 4
 13408 ;; This function calls:
 13409 ;;		Nothing
 13410 ;; This function is called by:
 13411 ;;		_LCD_ButtonUpdate
 13412 ;; This function uses a non-reentrant model
 13413 ;;
 13414                           
 13415                           	psect	text49
 13416  0041CE                     __ptext49:
 13417                           	callstack 0
 13418  0041CE                     _LCD_Read:
 13419                           	callstack 19
 13420  0041CE                     
 13421                           ;libraries/lcd_lowlevel.c: 64: uint16_t LCD_Read(uint16_t posX, uint16_t posY);libraries
      +                          /lcd_lowlevel.c: 65: {;libraries/lcd_lowlevel.c: 66:  uint16_t temp16;;libraries/lcd_low
      +                          level.c: 67:   uint16_t color;;libraries/lcd_lowlevel.c: 70:   PORTA = 0x2A; LATC4 = 0; 
      +                          LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 13422  0041CE  0E2A               	movlw	42
 13423  0041D0  6E80               	movwf	128,c	;volatile
 13424  0041D2  988B               	bcf	3979,4,c	;volatile
 13425  0041D4  968B               	bcf	3979,3,c	;volatile
 13426  0041D6  868B               	bsf	3979,3,c	;volatile
 13427  0041D8  888B               	bsf	3979,4,c	;volatile
 13428                           
 13429                           ;libraries/lcd_lowlevel.c: 71:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13430  0041DA  5013               	movf	(LCD_Read@posX+1)^0,w,c
 13431  0041DC  6E80               	movwf	128,c	;volatile
 13432  0041DE  968B               	bcf	3979,3,c	;volatile
 13433  0041E0  868B               	bsf	3979,3,c	;volatile
 13434  0041E2                     
 13435                           ;libraries/lcd_lowlevel.c: 72:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13436  0041E2  C012  FF80         	movff	LCD_Read@posX,3968	;volatile
 13437  0041E6  968B               	bcf	3979,3,c	;volatile
 13438  0041E8  868B               	bsf	3979,3,c	;volatile
 13439                           
 13440                           ;libraries/lcd_lowlevel.c: 73:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13441  0041EA  0E00               	movlw	0
 13442  0041EC  6E80               	movwf	128,c	;volatile
 13443  0041EE  968B               	bcf	3979,3,c	;volatile
 13444  0041F0  868B               	bsf	3979,3,c	;volatile
 13445                           
 13446                           ;libraries/lcd_lowlevel.c: 74:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 13447  0041F2  0EEF               	movlw	239
 13448  0041F4  6E80               	movwf	128,c	;volatile
 13449  0041F6  968B               	bcf	3979,3,c	;volatile
 13450  0041F8  868B               	bsf	3979,3,c	;volatile
 13451                           
 13452                           ;libraries/lcd_lowlevel.c: 76:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13453  0041FA  0E2B               	movlw	43
 13454  0041FC  6E80               	movwf	128,c	;volatile
 13455  0041FE  988B               	bcf	3979,4,c	;volatile
 13456  004200  968B               	bcf	3979,3,c	;volatile
 13457  004202  868B               	bsf	3979,3,c	;volatile
 13458  004204  888B               	bsf	3979,4,c	;volatile
 13459                           
 13460                           ;libraries/lcd_lowlevel.c: 77:   PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 13461  004206  5015               	movf	(LCD_Read@posY+1)^0,w,c
 13462  004208  6E80               	movwf	128,c	;volatile
 13463  00420A  968B               	bcf	3979,3,c	;volatile
 13464  00420C  868B               	bsf	3979,3,c	;volatile
 13465  00420E                     
 13466                           ;libraries/lcd_lowlevel.c: 78:   PORTA = posY; LATC3 = 0; LATC3 = 1;;
 13467  00420E  C014  FF80         	movff	LCD_Read@posY,3968	;volatile
 13468  004212  968B               	bcf	3979,3,c	;volatile
 13469  004214  868B               	bsf	3979,3,c	;volatile
 13470                           
 13471                           ;libraries/lcd_lowlevel.c: 79:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13472  004216  0E01               	movlw	1
 13473  004218  6E80               	movwf	128,c	;volatile
 13474  00421A  968B               	bcf	3979,3,c	;volatile
 13475  00421C  868B               	bsf	3979,3,c	;volatile
 13476                           
 13477                           ;libraries/lcd_lowlevel.c: 80:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 13478  00421E  0E3F               	movlw	63
 13479  004220  6E80               	movwf	128,c	;volatile
 13480  004222  968B               	bcf	3979,3,c	;volatile
 13481  004224  868B               	bsf	3979,3,c	;volatile
 13482                           
 13483                           ;libraries/lcd_lowlevel.c: 82:   PORTA = 0x2E; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13484  004226  0E2E               	movlw	46
 13485  004228  6E80               	movwf	128,c	;volatile
 13486  00422A  988B               	bcf	3979,4,c	;volatile
 13487  00422C  968B               	bcf	3979,3,c	;volatile
 13488  00422E  868B               	bsf	3979,3,c	;volatile
 13489  004230  888B               	bsf	3979,4,c	;volatile
 13490  004232                     
 13491                           ;libraries/lcd_lowlevel.c: 83:  TRISA = 0xFF;
 13492  004232  6892               	setf	146,c	;volatile
 13493  004234                     
 13494                           ;libraries/lcd_lowlevel.c: 84:  LATC2 = 0;
 13495  004234  948B               	bcf	3979,2,c	;volatile
 13496  004236                     
 13497                           ;libraries/lcd_lowlevel.c: 85:   __nop();
 13498  004236  F000               	nop	
 13499  004238                     
 13500                           ;libraries/lcd_lowlevel.c: 86:  LATC2 = 1;
 13501  004238  848B               	bsf	3979,2,c	;volatile
 13502  00423A                     
 13503                           ;libraries/lcd_lowlevel.c: 87:  TRISA = 0xFF;
 13504  00423A  6892               	setf	146,c	;volatile
 13505  00423C                     
 13506                           ;libraries/lcd_lowlevel.c: 88:  LATC2 = 0;
 13507  00423C  948B               	bcf	3979,2,c	;volatile
 13508  00423E                     
 13509                           ;libraries/lcd_lowlevel.c: 89:   __nop();
 13510  00423E  F000               	nop	
 13511  004240                     
 13512                           ;libraries/lcd_lowlevel.c: 90:  temp16 = PORTA;
 13513  004240  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13514  004244  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13515  004246                     
 13516                           ;libraries/lcd_lowlevel.c: 91:  LATC2 = 1;
 13517  004246  848B               	bsf	3979,2,c	;volatile
 13518  004248                     
 13519                           ;libraries/lcd_lowlevel.c: 92:   temp16 = temp16 >> 3;
 13520  004248  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13521  00424C  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13522  004250  90D8               	bcf	status,0,c
 13523  004252  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13524  004254  3216               	rrcf	??_LCD_Read^0,f,c
 13525  004256  90D8               	bcf	status,0,c
 13526  004258  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13527  00425A  3216               	rrcf	??_LCD_Read^0,f,c
 13528  00425C  90D8               	bcf	status,0,c
 13529  00425E  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13530  004260  3216               	rrcf	??_LCD_Read^0,f,c
 13531  004262  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13532  004266  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13533  00426A                     
 13534                           ;libraries/lcd_lowlevel.c: 93:   color = temp16 << 11;
 13535  00426A  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13536  00426E  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13537  004272  0E0B               	movlw	11
 13538  004274                     u6035:
 13539  004274  90D8               	bcf	status,0,c
 13540  004276  3616               	rlcf	??_LCD_Read^0,f,c
 13541  004278  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13542  00427A  2EE8               	decfsz	wreg,f,c
 13543  00427C  EF3A  F021         	goto	u6035
 13544  004280  C016  F018         	movff	??_LCD_Read,LCD_Read@color
 13545  004284  C017  F019         	movff	??_LCD_Read+1,LCD_Read@color+1
 13546  004288                     
 13547                           ;libraries/lcd_lowlevel.c: 94:  LATC2 = 0;
 13548  004288  948B               	bcf	3979,2,c	;volatile
 13549  00428A                     
 13550                           ;libraries/lcd_lowlevel.c: 95:   __nop();
 13551  00428A  F000               	nop	
 13552  00428C                     
 13553                           ;libraries/lcd_lowlevel.c: 96:  temp16 = PORTA;
 13554  00428C  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13555  004290  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13556  004292                     
 13557                           ;libraries/lcd_lowlevel.c: 97:  LATC2 = 1;
 13558  004292  848B               	bsf	3979,2,c	;volatile
 13559  004294                     
 13560                           ;libraries/lcd_lowlevel.c: 98:   temp16 = temp16 >> 2;
 13561  004294  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13562  004298  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13563  00429C  90D8               	bcf	status,0,c
 13564  00429E  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13565  0042A0  3216               	rrcf	??_LCD_Read^0,f,c
 13566  0042A2  90D8               	bcf	status,0,c
 13567  0042A4  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13568  0042A6  3216               	rrcf	??_LCD_Read^0,f,c
 13569  0042A8  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13570  0042AC  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13571  0042B0                     
 13572                           ;libraries/lcd_lowlevel.c: 99:   color |= temp16 << 5;
 13573  0042B0  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13574  0042B4  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13575  0042B8  0E05               	movlw	5
 13576  0042BA                     u6045:
 13577  0042BA  90D8               	bcf	status,0,c
 13578  0042BC  3616               	rlcf	??_LCD_Read^0,f,c
 13579  0042BE  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13580  0042C0  2EE8               	decfsz	wreg,f,c
 13581  0042C2  EF5D  F021         	goto	u6045
 13582  0042C6  5016               	movf	??_LCD_Read^0,w,c
 13583  0042C8  1218               	iorwf	LCD_Read@color^0,f,c
 13584  0042CA  5017               	movf	(??_LCD_Read+1)^0,w,c
 13585  0042CC  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13586  0042CE                     
 13587                           ;libraries/lcd_lowlevel.c: 100:  LATC2 = 0;
 13588  0042CE  948B               	bcf	3979,2,c	;volatile
 13589  0042D0                     
 13590                           ;libraries/lcd_lowlevel.c: 101:   __nop();
 13591  0042D0  F000               	nop	
 13592  0042D2                     
 13593                           ;libraries/lcd_lowlevel.c: 102:  temp16 |= PORTA;
 13594  0042D2  5080               	movf	128,w,c	;volatile
 13595  0042D4  121A               	iorwf	LCD_Read@temp16^0,f,c
 13596  0042D6                     
 13597                           ;libraries/lcd_lowlevel.c: 103:  LATC2 = 1;
 13598  0042D6  848B               	bsf	3979,2,c	;volatile
 13599  0042D8                     
 13600                           ;libraries/lcd_lowlevel.c: 104:   temp16 = temp16 >> 3;
 13601  0042D8  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13602  0042DC  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13603  0042E0  90D8               	bcf	status,0,c
 13604  0042E2  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13605  0042E4  3216               	rrcf	??_LCD_Read^0,f,c
 13606  0042E6  90D8               	bcf	status,0,c
 13607  0042E8  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13608  0042EA  3216               	rrcf	??_LCD_Read^0,f,c
 13609  0042EC  90D8               	bcf	status,0,c
 13610  0042EE  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13611  0042F0  3216               	rrcf	??_LCD_Read^0,f,c
 13612  0042F2  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13613  0042F6  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13614  0042FA                     
 13615                           ;libraries/lcd_lowlevel.c: 105:   color |= temp16;
 13616  0042FA  501A               	movf	LCD_Read@temp16^0,w,c
 13617  0042FC  1218               	iorwf	LCD_Read@color^0,f,c
 13618  0042FE  501B               	movf	(LCD_Read@temp16+1)^0,w,c
 13619  004300  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13620  004302                     
 13621                           ;libraries/lcd_lowlevel.c: 106:  TRISA = 0x00;
 13622  004302  0E00               	movlw	0
 13623  004304  6E92               	movwf	146,c	;volatile
 13624  004306                     
 13625                           ;libraries/lcd_lowlevel.c: 107:  return color;
 13626  004306  C018  F012         	movff	LCD_Read@color,?_LCD_Read
 13627  00430A  C019  F013         	movff	LCD_Read@color+1,?_LCD_Read+1
 13628  00430E  0012               	return		;funcret
 13629  004310                     __end_of_LCD_Read:
 13630                           	callstack 0
 13631                           
 13632 ;; *************** function _LCD_Bitmap *****************
 13633 ;; Defined at:
 13634 ;;		line 823 in file "libraries/lcd_highlevel.c"
 13635 ;; Parameters:    Size  Location     Type
 13636 ;;  bmpPtr          2   38[COMRAM] PTR const unsigned char 
 13637 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13638 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13639 ;;  posX            2   40[COMRAM] unsigned short 
 13640 ;;  posY            2   42[COMRAM] unsigned short 
 13641 ;; Auto vars:     Size  Location     Type
 13642 ;;  bfOffBits       4    0[BANK0 ] unsigned long 
 13643 ;;  i               2   26[BANK0 ] unsigned short 
 13644 ;;  jumpColor       2   24[BANK0 ] unsigned short 
 13645 ;;  biWidth         2   22[BANK0 ] unsigned short 
 13646 ;;  newY            2   19[BANK0 ] unsigned short 
 13647 ;;  strPtr          2   17[BANK0 ] PTR struct .
 13648 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13649 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13650 ;;  curXPos         2   15[BANK0 ] unsigned short 
 13651 ;;  color           2   13[BANK0 ] unsigned short 
 13652 ;;  biHeight        2   11[BANK0 ] unsigned short 
 13653 ;;  colorTablePt    2    9[BANK0 ] PTR unsigned char 
 13654 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13655 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13656 ;;  curYPos         2    7[BANK0 ] unsigned short 
 13657 ;;  jumpCount       2    5[BANK0 ] unsigned short 
 13658 ;;  pixelCount      1   21[BANK0 ] unsigned char 
 13659 ;;  endOfImage      1    4[BANK0 ] unsigned char 
 13660 ;; Return value:  Size  Location     Type
 13661 ;;                  1    wreg      unsigned char 
 13662 ;; Registers used:
 13663 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13664 ;; Tracked objects:
 13665 ;;		On entry : 0/0
 13666 ;;		On exit  : 0/0
 13667 ;;		Unchanged: 0/0
 13668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13669 ;;      Params:         6       0       0       0       0       0       0
 13670 ;;      Locals:         0      28       0       0       0       0       0
 13671 ;;      Temps:          4       0       0       0       0       0       0
 13672 ;;      Totals:        10      28       0       0       0       0       0
 13673 ;;Total ram usage:       38 bytes
 13674 ;; Hardware stack levels used: 1
 13675 ;; Hardware stack levels required when called: 5
 13676 ;; This function calls:
 13677 ;;		_RGB2LCD
 13678 ;;		___lwdiv
 13679 ;;		___lwmod
 13680 ;;		___wmul
 13681 ;; This function is called by:
 13682 ;;		_LCD_ButtonDraw
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text50
 13687  00095E                     __ptext50:
 13688                           	callstack 0
 13689  00095E                     _LCD_Bitmap:
 13690                           	callstack 19
 13691  00095E                     
 13692                           ;libraries/lcd_highlevel.c: 823: uint8_t LCD_Bitmap(const uint8_t * bmpPtr, uint16_t pos
      +                          X, uint16_t posY);libraries/lcd_highlevel.c: 824: {;libraries/lcd_highlevel.c: 825:   ui
      +                          nt32_t bfOffBits;;libraries/lcd_highlevel.c: 826:   uint16_t biWidth, biHeight;;librarie
      +                          s/lcd_highlevel.c: 827:   uint8_t * colorTablePtr;;libraries/lcd_highlevel.c: 828:   uin
      +                          t8_t endOfImage;;libraries/lcd_highlevel.c: 829:   uint16_t i,curXPos,curYPos;;libraries
      +                          /lcd_highlevel.c: 830:   uint8_t pixelCount;;libraries/lcd_highlevel.c: 831:   uint16_t 
      +                          color;
 13693  00095E  C027  F071         	movff	LCD_Bitmap@bmpPtr,LCD_Bitmap@strPtr
 13694  000962  C028  F072         	movff	LCD_Bitmap@bmpPtr+1,LCD_Bitmap@strPtr+1
 13695  000966                     
 13696                           ;libraries/lcd_highlevel.c: 839:   bfOffBits = strPtr->bfOffBits;
 13697  000966  0E0A               	movlw	10
 13698  000968  0100               	movlb	0	; () banked
 13699  00096A  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13700  00096C  6E2D               	movwf	??_LCD_Bitmap^0,c
 13701  00096E  0E00               	movlw	0
 13702  000970  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13703  000972  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13704  000974  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13705  000978  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13706  00097C                     	if	0	;tblptru may be non-zero
 13707  00097C                     	endif
 13708  00097C                     	if	0	;tblptru may be non-zero
 13709  00097C                     	endif
 13710  00097C  0009               	tblrd		*+
 13711  00097E  CFF5 F060          	movff	tablat,LCD_Bitmap@bfOffBits
 13712  000982  0009               	tblrd		*+
 13713  000984  CFF5 F061          	movff	tablat,LCD_Bitmap@bfOffBits+1
 13714  000988  0009               	tblrd		*+
 13715  00098A  CFF5 F062          	movff	tablat,LCD_Bitmap@bfOffBits+2
 13716  00098E  000A               	tblrd		*-
 13717  000990  CFF5 F063          	movff	tablat,LCD_Bitmap@bfOffBits+3
 13718  000994                     
 13719                           ; BSR set to: 0
 13720                           ;libraries/lcd_highlevel.c: 840:   biWidth = strPtr->biWidth;
 13721  000994  0E12               	movlw	18
 13722  000996  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13723  000998  6E2D               	movwf	??_LCD_Bitmap^0,c
 13724  00099A  0E00               	movlw	0
 13725  00099C  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13726  00099E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13727  0009A0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13728  0009A4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13729  0009A8                     	if	0	;tblptru may be non-zero
 13730  0009A8                     	endif
 13731  0009A8                     	if	0	;tblptru may be non-zero
 13732  0009A8                     	endif
 13733  0009A8  0009               	tblrd		*+
 13734  0009AA  CFF5 F076          	movff	tablat,LCD_Bitmap@biWidth
 13735  0009AE  000A               	tblrd		*-
 13736  0009B0  CFF5 F077          	movff	tablat,LCD_Bitmap@biWidth+1
 13737  0009B4                     
 13738                           ; BSR set to: 0
 13739                           ;libraries/lcd_highlevel.c: 841:   biHeight = strPtr->biHeight;
 13740  0009B4  0E16               	movlw	22
 13741  0009B6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13742  0009B8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13743  0009BA  0E00               	movlw	0
 13744  0009BC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13745  0009BE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13746  0009C0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13747  0009C4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13748  0009C8                     	if	0	;tblptru may be non-zero
 13749  0009C8                     	endif
 13750  0009C8                     	if	0	;tblptru may be non-zero
 13751  0009C8                     	endif
 13752  0009C8  0009               	tblrd		*+
 13753  0009CA  CFF5 F06B          	movff	tablat,LCD_Bitmap@biHeight
 13754  0009CE  000A               	tblrd		*-
 13755  0009D0  CFF5 F06C          	movff	tablat,LCD_Bitmap@biHeight+1
 13756  0009D4                     
 13757                           ; BSR set to: 0
 13758                           ;libraries/lcd_highlevel.c: 842:   if((strPtr->biBitCount != 8) ||
 13759  0009D4  0E1C               	movlw	28
 13760  0009D6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13761  0009D8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13762  0009DA  0E00               	movlw	0
 13763  0009DC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13764  0009DE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13765  0009E0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13766  0009E4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13767  0009E8                     	if	0	;tblptru may be non-zero
 13768  0009E8                     	endif
 13769  0009E8                     	if	0	;tblptru may be non-zero
 13770  0009E8                     	endif
 13771  0009E8  0009               	tblrd		*+
 13772  0009EA  0E08               	movlw	8
 13773  0009EC  18F5               	xorwf	tablat,w,c
 13774  0009EE  0009               	tblrd		*+
 13775  0009F0  10F5               	iorwf	tablat,w,c
 13776  0009F2  A4D8               	btfss	status,2,c
 13777  0009F4  EFFE  F004         	goto	u6471
 13778  0009F8  EF00  F005         	goto	u6470
 13779  0009FC                     u6471:
 13780  0009FC  EFA9  F007         	goto	l328
 13781  000A00                     u6470:
 13782  000A00                     
 13783                           ; BSR set to: 0
 13784  000A00  0E1E               	movlw	30
 13785  000A02  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13786  000A04  6E2D               	movwf	??_LCD_Bitmap^0,c
 13787  000A06  0E00               	movlw	0
 13788  000A08  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13789  000A0A  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13790  000A0C  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13791  000A10  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13792  000A14                     	if	0	;tblptru may be non-zero
 13793  000A14                     	endif
 13794  000A14                     	if	0	;tblptru may be non-zero
 13795  000A14                     	endif
 13796  000A14  0009               	tblrd		*+
 13797  000A16  04F5               	decf	tablat,w,c
 13798  000A18  0009               	tblrd		*+
 13799  000A1A  10F5               	iorwf	tablat,w,c
 13800  000A1C  0009               	tblrd		*+
 13801  000A1E  10F5               	iorwf	tablat,w,c
 13802  000A20  0009               	tblrd		*+
 13803  000A22  10F5               	iorwf	tablat,w,c
 13804  000A24  B4D8               	btfsc	status,2,c
 13805  000A26  EF17  F005         	goto	u6481
 13806  000A2A  EF19  F005         	goto	u6480
 13807  000A2E                     u6481:
 13808  000A2E  EF1B  F005         	goto	l9072
 13809  000A32                     u6480:
 13810  000A32  EFA9  F007         	goto	l328
 13811  000A36                     l9072:
 13812                           
 13813                           ; BSR set to: 0
 13814                           ;libraries/lcd_highlevel.c: 847:   if(((posX + biWidth) > (240)) ||
 13815  000A36  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 13816  000A38  2429               	addwf	LCD_Bitmap@posX^0,w,c
 13817  000A3A  6E2D               	movwf	??_LCD_Bitmap^0,c
 13818  000A3C  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 13819  000A3E  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 13820  000A40  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13821  000A42  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 13822  000A44  E107               	bnz	u6491
 13823  000A46  0EF1               	movlw	241
 13824  000A48  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 13825  000A4A  B0D8               	btfsc	status,0,c
 13826  000A4C  EF2A  F005         	goto	u6491
 13827  000A50  EF2C  F005         	goto	u6490
 13828  000A54                     u6491:
 13829  000A54  EFA9  F007         	goto	l328
 13830  000A58                     u6490:
 13831  000A58                     
 13832                           ; BSR set to: 0
 13833  000A58  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 13834  000A5A  242B               	addwf	LCD_Bitmap@posY^0,w,c
 13835  000A5C  6E2D               	movwf	??_LCD_Bitmap^0,c
 13836  000A5E  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 13837  000A60  202C               	addwfc	(LCD_Bitmap@posY+1)^0,w,c
 13838  000A62  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13839  000A64  0E41               	movlw	65
 13840  000A66  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 13841  000A68  0E01               	movlw	1
 13842  000A6A  582E               	subwfb	(??_LCD_Bitmap+1)^0,w,c
 13843  000A6C  A0D8               	btfss	status,0,c
 13844  000A6E  EF3B  F005         	goto	u6501
 13845  000A72  EF3D  F005         	goto	u6500
 13846  000A76                     u6501:
 13847  000A76  EF3F  F005         	goto	l9076
 13848  000A7A                     u6500:
 13849  000A7A  EFA9  F007         	goto	l328
 13850  000A7E                     l9076:
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;libraries/lcd_highlevel.c: 853:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13854  000A7E  0E36               	movlw	54
 13855  000A80  6E80               	movwf	128,c	;volatile
 13856  000A82                     
 13857                           ; BSR set to: 0
 13858  000A82  988B               	bcf	3979,4,c	;volatile
 13859  000A84                     
 13860                           ; BSR set to: 0
 13861  000A84  968B               	bcf	3979,3,c	;volatile
 13862  000A86                     
 13863                           ; BSR set to: 0
 13864  000A86  868B               	bsf	3979,3,c	;volatile
 13865  000A88                     
 13866                           ; BSR set to: 0
 13867  000A88  888B               	bsf	3979,4,c	;volatile
 13868                           
 13869                           ;libraries/lcd_highlevel.c: 855:   PORTA = 0b10000000; LATC3 = 0; LATC3 = 1;;
 13870  000A8A  0E80               	movlw	128
 13871  000A8C  6E80               	movwf	128,c	;volatile
 13872  000A8E                     
 13873                           ; BSR set to: 0
 13874  000A8E  968B               	bcf	3979,3,c	;volatile
 13875  000A90                     
 13876                           ; BSR set to: 0
 13877  000A90  868B               	bsf	3979,3,c	;volatile
 13878  000A92                     
 13879                           ; BSR set to: 0
 13880                           ;libraries/lcd_highlevel.c: 857:   colorTablePtr = (uint8_t *)bmpPtr + 54;
 13881  000A92  0E36               	movlw	54
 13882  000A94  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 13883  000A96  6F69               	movwf	LCD_Bitmap@colorTablePtr& (0+255),b
 13884  000A98  0E00               	movlw	0
 13885  000A9A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 13886  000A9C  6F6A               	movwf	(LCD_Bitmap@colorTablePtr+1)& (0+255),b
 13887  000A9E                     
 13888                           ; BSR set to: 0
 13889                           ;libraries/lcd_highlevel.c: 858:   bmpPtr += bfOffBits;
 13890  000A9E  5160               	movf	LCD_Bitmap@bfOffBits& (0+255),w,b
 13891  000AA0  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 13892  000AA2  5161               	movf	(LCD_Bitmap@bfOffBits+1)& (0+255),w,b
 13893  000AA4  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 13894                           
 13895                           ;libraries/lcd_highlevel.c: 859:   endOfImage = 0;
 13896  000AA6  0E00               	movlw	0
 13897  000AA8  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 13898  000AAA                     
 13899                           ; BSR set to: 0
 13900                           ;libraries/lcd_highlevel.c: 860:   jumpColor = RGB2LCD(colorTablePtr);
 13901  000AAA  C069  F012         	movff	LCD_Bitmap@colorTablePtr,RGB2LCD@colorTableEntry
 13902  000AAE  C06A  F013         	movff	LCD_Bitmap@colorTablePtr+1,RGB2LCD@colorTableEntry+1
 13903  000AB2  ECCD  F029         	call	_RGB2LCD	;wreg free
 13904  000AB6  C012  F078         	movff	?_RGB2LCD,LCD_Bitmap@jumpColor
 13905  000ABA  C013  F079         	movff	?_RGB2LCD+1,LCD_Bitmap@jumpColor+1
 13906  000ABE                     
 13907                           ;libraries/lcd_highlevel.c: 862:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13908  000ABE  0E2A               	movlw	42
 13909  000AC0  6E80               	movwf	128,c	;volatile
 13910  000AC2  988B               	bcf	3979,4,c	;volatile
 13911  000AC4  968B               	bcf	3979,3,c	;volatile
 13912  000AC6  868B               	bsf	3979,3,c	;volatile
 13913  000AC8  888B               	bsf	3979,4,c	;volatile
 13914  000ACA                     
 13915                           ;libraries/lcd_highlevel.c: 863:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13916  000ACA  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 13917  000ACC  6E80               	movwf	128,c	;volatile
 13918  000ACE  968B               	bcf	3979,3,c	;volatile
 13919  000AD0  868B               	bsf	3979,3,c	;volatile
 13920  000AD2                     
 13921                           ;libraries/lcd_highlevel.c: 864:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13922  000AD2  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 13923  000AD6  968B               	bcf	3979,3,c	;volatile
 13924  000AD8  868B               	bsf	3979,3,c	;volatile
 13925  000ADA                     
 13926                           ;libraries/lcd_highlevel.c: 865:   posX = posX + biWidth-1;
 13927  000ADA  0100               	movlb	0	; () banked
 13928  000ADC  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 13929  000ADE  2429               	addwf	LCD_Bitmap@posX^0,w,c
 13930  000AE0  6E2D               	movwf	??_LCD_Bitmap^0,c
 13931  000AE2  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 13932  000AE4  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 13933  000AE6  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13934  000AE8  0EFF               	movlw	255
 13935  000AEA  242D               	addwf	??_LCD_Bitmap^0,w,c
 13936  000AEC  6E29               	movwf	LCD_Bitmap@posX^0,c
 13937  000AEE  0EFF               	movlw	255
 13938  000AF0  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 13939  000AF2  6E2A               	movwf	(LCD_Bitmap@posX+1)^0,c
 13940  000AF4                     
 13941                           ; BSR set to: 0
 13942                           ;libraries/lcd_highlevel.c: 866:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13943  000AF4  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 13944  000AF6  6E80               	movwf	128,c	;volatile
 13945  000AF8                     
 13946                           ; BSR set to: 0
 13947  000AF8  968B               	bcf	3979,3,c	;volatile
 13948  000AFA                     
 13949                           ; BSR set to: 0
 13950  000AFA  868B               	bsf	3979,3,c	;volatile
 13951  000AFC                     
 13952                           ; BSR set to: 0
 13953                           ;libraries/lcd_highlevel.c: 867:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13954  000AFC  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 13955  000B00                     
 13956                           ; BSR set to: 0
 13957  000B00  968B               	bcf	3979,3,c	;volatile
 13958  000B02                     
 13959                           ; BSR set to: 0
 13960  000B02  868B               	bsf	3979,3,c	;volatile
 13961  000B04                     
 13962                           ; BSR set to: 0
 13963                           ;libraries/lcd_highlevel.c: 869:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13964  000B04  0E2B               	movlw	43
 13965  000B06  6E80               	movwf	128,c	;volatile
 13966  000B08                     
 13967                           ; BSR set to: 0
 13968  000B08  988B               	bcf	3979,4,c	;volatile
 13969  000B0A                     
 13970                           ; BSR set to: 0
 13971  000B0A  968B               	bcf	3979,3,c	;volatile
 13972  000B0C                     
 13973                           ; BSR set to: 0
 13974  000B0C  868B               	bsf	3979,3,c	;volatile
 13975  000B0E                     
 13976                           ; BSR set to: 0
 13977  000B0E  888B               	bsf	3979,4,c	;volatile
 13978  000B10                     
 13979                           ; BSR set to: 0
 13980                           ;libraries/lcd_highlevel.c: 870:   newY = 320 - posY - biHeight;
 13981  000B10  C02B  F02D         	movff	LCD_Bitmap@posY,??_LCD_Bitmap
 13982  000B14  C02C  F02E         	movff	LCD_Bitmap@posY+1,??_LCD_Bitmap+1
 13983  000B18  1E2D               	comf	??_LCD_Bitmap^0,f,c
 13984  000B1A  1E2E               	comf	(??_LCD_Bitmap+1)^0,f,c
 13985  000B1C  4A2D               	infsnz	??_LCD_Bitmap^0,f,c
 13986  000B1E  2A2E               	incf	(??_LCD_Bitmap+1)^0,f,c
 13987  000B20  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 13988  000B22  5E2D               	subwf	??_LCD_Bitmap^0,f,c
 13989  000B24  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 13990  000B26  5A2E               	subwfb	(??_LCD_Bitmap+1)^0,f,c
 13991  000B28  0E40               	movlw	64
 13992  000B2A  242D               	addwf	??_LCD_Bitmap^0,w,c
 13993  000B2C  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 13994  000B2E  0E01               	movlw	1
 13995  000B30  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 13996  000B32  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 13997  000B34                     
 13998                           ; BSR set to: 0
 13999                           ;libraries/lcd_highlevel.c: 871:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14000  000B34  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14001  000B36  6E80               	movwf	128,c	;volatile
 14002  000B38                     
 14003                           ; BSR set to: 0
 14004  000B38  968B               	bcf	3979,3,c	;volatile
 14005  000B3A                     
 14006                           ; BSR set to: 0
 14007  000B3A  868B               	bsf	3979,3,c	;volatile
 14008  000B3C                     
 14009                           ; BSR set to: 0
 14010                           ;libraries/lcd_highlevel.c: 872:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14011  000B3C  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14012  000B40                     
 14013                           ; BSR set to: 0
 14014  000B40  968B               	bcf	3979,3,c	;volatile
 14015  000B42                     
 14016                           ; BSR set to: 0
 14017  000B42  868B               	bsf	3979,3,c	;volatile
 14018  000B44                     
 14019                           ; BSR set to: 0
 14020                           ;libraries/lcd_highlevel.c: 873:   newY = newY + biHeight-1;
 14021  000B44  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14022  000B46  2573               	addwf	LCD_Bitmap@newY& (0+255),w,b
 14023  000B48  6E2D               	movwf	??_LCD_Bitmap^0,c
 14024  000B4A  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14025  000B4C  2174               	addwfc	(LCD_Bitmap@newY+1)& (0+255),w,b
 14026  000B4E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14027  000B50  0EFF               	movlw	255
 14028  000B52  242D               	addwf	??_LCD_Bitmap^0,w,c
 14029  000B54  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 14030  000B56  0EFF               	movlw	255
 14031  000B58  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14032  000B5A  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 14033  000B5C                     
 14034                           ; BSR set to: 0
 14035                           ;libraries/lcd_highlevel.c: 874:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14036  000B5C  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14037  000B5E  6E80               	movwf	128,c	;volatile
 14038  000B60                     
 14039                           ; BSR set to: 0
 14040  000B60  968B               	bcf	3979,3,c	;volatile
 14041  000B62                     
 14042                           ; BSR set to: 0
 14043  000B62  868B               	bsf	3979,3,c	;volatile
 14044  000B64                     
 14045                           ; BSR set to: 0
 14046                           ;libraries/lcd_highlevel.c: 875:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14047  000B64  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14048  000B68                     
 14049                           ; BSR set to: 0
 14050  000B68  968B               	bcf	3979,3,c	;volatile
 14051  000B6A                     
 14052                           ; BSR set to: 0
 14053  000B6A  868B               	bsf	3979,3,c	;volatile
 14054  000B6C                     
 14055                           ; BSR set to: 0
 14056                           ;libraries/lcd_highlevel.c: 877:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14057  000B6C  0E2C               	movlw	44
 14058  000B6E  6E80               	movwf	128,c	;volatile
 14059  000B70                     
 14060                           ; BSR set to: 0
 14061  000B70  988B               	bcf	3979,4,c	;volatile
 14062  000B72                     
 14063                           ; BSR set to: 0
 14064  000B72  968B               	bcf	3979,3,c	;volatile
 14065  000B74                     
 14066                           ; BSR set to: 0
 14067  000B74  868B               	bsf	3979,3,c	;volatile
 14068  000B76                     
 14069                           ; BSR set to: 0
 14070  000B76  888B               	bsf	3979,4,c	;volatile
 14071  000B78                     
 14072                           ; BSR set to: 0
 14073                           ;libraries/lcd_highlevel.c: 878:   curXPos = 0;
 14074  000B78  0E00               	movlw	0
 14075  000B7A  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14076  000B7C  0E00               	movlw	0
 14077  000B7E  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14078  000B80                     
 14079                           ; BSR set to: 0
 14080                           ;libraries/lcd_highlevel.c: 879:   curYPos = 0;
 14081  000B80  0E00               	movlw	0
 14082  000B82  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14083  000B84  0E00               	movlw	0
 14084  000B86  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14085  000B88                     l9184:
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;libraries/lcd_highlevel.c: 881:   {;libraries/lcd_highlevel.c: 882:     if(bmpPtr[0] ==
      +                           0)
 14089  000B88  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14090  000B8C  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14091  000B90                     	if	0	;tblptru may be non-zero
 14092  000B90                     	endif
 14093  000B90                     	if	0	;tblptru may be non-zero
 14094  000B90                     	endif
 14095  000B90  0008               	tblrd		*
 14096  000B92  50F5               	movf	tablat,w,c
 14097  000B94  0900               	iorlw	0
 14098  000B96  A4D8               	btfss	status,2,c
 14099  000B98  EFD0  F005         	goto	u6511
 14100  000B9C  EFD2  F005         	goto	u6510
 14101  000BA0                     u6511:
 14102  000BA0  EF4D  F007         	goto	l9310
 14103  000BA4                     u6510:
 14104  000BA4  EF29  F007         	goto	l9308
 14105  000BA8                     l9188:
 14106                           
 14107                           ; BSR set to: 0
 14108                           ;libraries/lcd_highlevel.c: 887:           bmpPtr += 2;
 14109  000BA8  0E02               	movlw	2
 14110  000BAA  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14111  000BAC  0E00               	movlw	0
 14112  000BAE  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14113  000BB0                     
 14114                           ; BSR set to: 0
 14115                           ;libraries/lcd_highlevel.c: 888:           for(i=0;i<biWidth - curXPos;i++)
 14116  000BB0  0E00               	movlw	0
 14117  000BB2  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14118  000BB4  0E00               	movlw	0
 14119  000BB6  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14120  000BB8  EFE8  F005         	goto	l9206
 14121  000BBC                     l9192:
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;libraries/lcd_highlevel.c: 889:           {;libraries/lcd_highlevel.c: 890:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14125  000BBC  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14126  000BBE  6E80               	movwf	128,c	;volatile
 14127  000BC0                     
 14128                           ; BSR set to: 0
 14129  000BC0  968B               	bcf	3979,3,c	;volatile
 14130  000BC2                     
 14131                           ; BSR set to: 0
 14132  000BC2  868B               	bsf	3979,3,c	;volatile
 14133  000BC4                     
 14134                           ; BSR set to: 0
 14135                           ;libraries/lcd_highlevel.c: 891:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14136  000BC4  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14137  000BC8                     
 14138                           ; BSR set to: 0
 14139  000BC8  968B               	bcf	3979,3,c	;volatile
 14140  000BCA                     
 14141                           ; BSR set to: 0
 14142  000BCA  868B               	bsf	3979,3,c	;volatile
 14143  000BCC                     
 14144                           ; BSR set to: 0
 14145                           ;libraries/lcd_highlevel.c: 892:           }
 14146  000BCC  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14147  000BCE  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14148  000BD0                     l9206:
 14149                           
 14150                           ; BSR set to: 0
 14151  000BD0  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14152  000BD2  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14153  000BD4  6E2D               	movwf	??_LCD_Bitmap^0,c
 14154  000BD6  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14155  000BD8  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14156  000BDA  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14157  000BDC  502D               	movf	??_LCD_Bitmap^0,w,c
 14158  000BDE  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14159  000BE0  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14160  000BE2  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14161  000BE4  A0D8               	btfss	status,0,c
 14162  000BE6  EFF7  F005         	goto	u6521
 14163  000BEA  EFF9  F005         	goto	u6520
 14164  000BEE                     u6521:
 14165  000BEE  EFDE  F005         	goto	l9192
 14166  000BF2                     u6520:
 14167  000BF2                     
 14168                           ; BSR set to: 0
 14169                           ;libraries/lcd_highlevel.c: 893:           curXPos = 0;
 14170  000BF2  0E00               	movlw	0
 14171  000BF4  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14172  000BF6  0E00               	movlw	0
 14173  000BF8  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14174  000BFA                     
 14175                           ; BSR set to: 0
 14176                           ;libraries/lcd_highlevel.c: 894:           curYPos++;
 14177  000BFA  4B67               	infsnz	LCD_Bitmap@curYPos& (0+255),f,b
 14178  000BFC  2B68               	incf	(LCD_Bitmap@curYPos+1)& (0+255),f,b
 14179                           
 14180                           ;libraries/lcd_highlevel.c: 895:         break;
 14181  000BFE  EF96  F007         	goto	l9336
 14182  000C02                     l9212:
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;libraries/lcd_highlevel.c: 897:           for(i=0;i<biWidth - curXPos;i++)
 14186  000C02  0E00               	movlw	0
 14187  000C04  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14188  000C06  0E00               	movlw	0
 14189  000C08  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14190  000C0A  EF11  F006         	goto	l9228
 14191  000C0E                     l9214:
 14192                           
 14193                           ; BSR set to: 0
 14194                           ;libraries/lcd_highlevel.c: 898:           {;libraries/lcd_highlevel.c: 899:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14195  000C0E  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14196  000C10  6E80               	movwf	128,c	;volatile
 14197  000C12                     
 14198                           ; BSR set to: 0
 14199  000C12  968B               	bcf	3979,3,c	;volatile
 14200  000C14                     
 14201                           ; BSR set to: 0
 14202  000C14  868B               	bsf	3979,3,c	;volatile
 14203  000C16                     
 14204                           ; BSR set to: 0
 14205                           ;libraries/lcd_highlevel.c: 900:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14206  000C16  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14207  000C1A                     
 14208                           ; BSR set to: 0
 14209  000C1A  968B               	bcf	3979,3,c	;volatile
 14210  000C1C                     
 14211                           ; BSR set to: 0
 14212  000C1C  868B               	bsf	3979,3,c	;volatile
 14213  000C1E                     
 14214                           ; BSR set to: 0
 14215                           ;libraries/lcd_highlevel.c: 901:           }
 14216  000C1E  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14217  000C20  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14218  000C22                     l9228:
 14219                           
 14220                           ; BSR set to: 0
 14221  000C22  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14222  000C24  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14223  000C26  6E2D               	movwf	??_LCD_Bitmap^0,c
 14224  000C28  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14225  000C2A  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14226  000C2C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14227  000C2E  502D               	movf	??_LCD_Bitmap^0,w,c
 14228  000C30  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14229  000C32  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14230  000C34  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14231  000C36  A0D8               	btfss	status,0,c
 14232  000C38  EF20  F006         	goto	u6531
 14233  000C3C  EF22  F006         	goto	u6530
 14234  000C40                     u6531:
 14235  000C40  EF07  F006         	goto	l9214
 14236  000C44                     u6530:
 14237  000C44                     
 14238                           ; BSR set to: 0
 14239                           ;libraries/lcd_highlevel.c: 902:           for(i=0;i<(biHeight - curYPos -1)*biWidth;i++
      +                          )
 14240  000C44  0E00               	movlw	0
 14241  000C46  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14242  000C48  0E00               	movlw	0
 14243  000C4A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14244  000C4C  EF32  F006         	goto	l9246
 14245  000C50                     l9232:
 14246                           
 14247                           ; BSR set to: 0
 14248                           ;libraries/lcd_highlevel.c: 903:           {;libraries/lcd_highlevel.c: 904:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14249  000C50  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14250  000C52  6E80               	movwf	128,c	;volatile
 14251  000C54                     
 14252                           ; BSR set to: 0
 14253  000C54  968B               	bcf	3979,3,c	;volatile
 14254  000C56                     
 14255                           ; BSR set to: 0
 14256  000C56  868B               	bsf	3979,3,c	;volatile
 14257  000C58                     
 14258                           ; BSR set to: 0
 14259                           ;libraries/lcd_highlevel.c: 905:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14260  000C58  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14261  000C5C                     
 14262                           ; BSR set to: 0
 14263  000C5C  968B               	bcf	3979,3,c	;volatile
 14264  000C5E                     
 14265                           ; BSR set to: 0
 14266  000C5E  868B               	bsf	3979,3,c	;volatile
 14267  000C60                     
 14268                           ; BSR set to: 0
 14269                           ;libraries/lcd_highlevel.c: 906:           }
 14270  000C60  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14271  000C62  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14272  000C64                     l9246:
 14273                           
 14274                           ; BSR set to: 0
 14275  000C64  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14276  000C66  5D6B               	subwf	LCD_Bitmap@biHeight& (0+255),w,b
 14277  000C68  6E2D               	movwf	??_LCD_Bitmap^0,c
 14278  000C6A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14279  000C6C  596C               	subwfb	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14280  000C6E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14281  000C70  0EFF               	movlw	255
 14282  000C72  242D               	addwf	??_LCD_Bitmap^0,w,c
 14283  000C74  6E1A               	movwf	___wmul@multiplier^0,c
 14284  000C76  0EFF               	movlw	255
 14285  000C78  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14286  000C7A  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 14287  000C7C  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14288  000C80  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14289  000C84  EC8E  F031         	call	___wmul	;wreg free
 14290  000C88  501A               	movf	?___wmul^0,w,c
 14291  000C8A  0100               	movlb	0	; () banked
 14292  000C8C  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14293  000C8E  501B               	movf	(?___wmul+1)^0,w,c
 14294  000C90  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14295  000C92  A0D8               	btfss	status,0,c
 14296  000C94  EF4E  F006         	goto	u6541
 14297  000C98  EF50  F006         	goto	u6540
 14298  000C9C                     u6541:
 14299  000C9C  EF28  F006         	goto	l9232
 14300  000CA0                     u6540:
 14301  000CA0                     
 14302                           ; BSR set to: 0
 14303                           ;libraries/lcd_highlevel.c: 907:           endOfImage = 1;
 14304  000CA0  0E01               	movlw	1
 14305  000CA2  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 14306                           
 14307                           ;libraries/lcd_highlevel.c: 908:         break;
 14308  000CA4  EF96  F007         	goto	l9336
 14309  000CA8                     l9250:
 14310                           
 14311                           ; BSR set to: 0
 14312                           ;libraries/lcd_highlevel.c: 910:           jumpCount = bmpPtr[2] + (bmpPtr[3]*biWidth);
 14313  000CA8  0E03               	movlw	3
 14314  000CAA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14315  000CAC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14316  000CAE  0E00               	movlw	0
 14317  000CB0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14318  000CB2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14319  000CB4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14320  000CB8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14321  000CBC                     	if	0	;tblptru may be non-zero
 14322  000CBC                     	endif
 14323  000CBC                     	if	0	;tblptru may be non-zero
 14324  000CBC                     	endif
 14325  000CBC  0008               	tblrd		*
 14326  000CBE  50F5               	movf	tablat,w,c
 14327  000CC0  6E1A               	movwf	___wmul@multiplier^0,c
 14328  000CC2  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14329  000CC4  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14330  000CC8  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14331  000CCC  EC8E  F031         	call	___wmul	;wreg free
 14332  000CD0  0E02               	movlw	2
 14333  000CD2  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14334  000CD4  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14335  000CD6  0E00               	movlw	0
 14336  000CD8  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14337  000CDA  6E30               	movwf	(??_LCD_Bitmap+3)^0,c
 14338  000CDC  C02F  FFF6         	movff	??_LCD_Bitmap+2,tblptrl
 14339  000CE0  C030  FFF7         	movff	??_LCD_Bitmap+3,tblptrh
 14340  000CE4                     	if	0	;tblptru may be non-zero
 14341  000CE4                     	endif
 14342  000CE4                     	if	0	;tblptru may be non-zero
 14343  000CE4                     	endif
 14344  000CE4  0008               	tblrd		*
 14345  000CE6  50F5               	movf	tablat,w,c
 14346  000CE8  241A               	addwf	?___wmul^0,w,c
 14347  000CEA  0100               	movlb	0	; () banked
 14348  000CEC  6F65               	movwf	LCD_Bitmap@jumpCount& (0+255),b
 14349  000CEE  0E00               	movlw	0
 14350  000CF0  201B               	addwfc	(?___wmul+1)^0,w,c
 14351  000CF2  6F66               	movwf	(LCD_Bitmap@jumpCount+1)& (0+255),b
 14352  000CF4                     
 14353                           ; BSR set to: 0
 14354                           ;libraries/lcd_highlevel.c: 911:           for(i=0;i<jumpCount;i++)
 14355  000CF4  0E00               	movlw	0
 14356  000CF6  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14357  000CF8  0E00               	movlw	0
 14358  000CFA  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14359  000CFC  EF8C  F006         	goto	l9270
 14360  000D00                     l9254:
 14361                           
 14362                           ; BSR set to: 0
 14363                           ;libraries/lcd_highlevel.c: 912:           {;libraries/lcd_highlevel.c: 913:            
      +                           curXPos++;
 14364  000D00  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14365  000D02  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14366  000D04                     
 14367                           ; BSR set to: 0
 14368                           ;libraries/lcd_highlevel.c: 914:             PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 
      +                          1;;
 14369  000D04  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14370  000D06  6E80               	movwf	128,c	;volatile
 14371  000D08                     
 14372                           ; BSR set to: 0
 14373  000D08  968B               	bcf	3979,3,c	;volatile
 14374  000D0A                     
 14375                           ; BSR set to: 0
 14376  000D0A  868B               	bsf	3979,3,c	;volatile
 14377  000D0C                     
 14378                           ; BSR set to: 0
 14379                           ;libraries/lcd_highlevel.c: 915:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14380  000D0C  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14381  000D10                     
 14382                           ; BSR set to: 0
 14383  000D10  968B               	bcf	3979,3,c	;volatile
 14384  000D12                     
 14385                           ; BSR set to: 0
 14386  000D12  868B               	bsf	3979,3,c	;volatile
 14387  000D14                     
 14388                           ; BSR set to: 0
 14389                           ;libraries/lcd_highlevel.c: 916:           }
 14390  000D14  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14391  000D16  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14392  000D18                     l9270:
 14393                           
 14394                           ; BSR set to: 0
 14395  000D18  5165               	movf	LCD_Bitmap@jumpCount& (0+255),w,b
 14396  000D1A  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14397  000D1C  5166               	movf	(LCD_Bitmap@jumpCount+1)& (0+255),w,b
 14398  000D1E  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14399  000D20  A0D8               	btfss	status,0,c
 14400  000D22  EF95  F006         	goto	u6551
 14401  000D26  EF97  F006         	goto	u6550
 14402  000D2A                     u6551:
 14403  000D2A  EF80  F006         	goto	l9254
 14404  000D2E                     u6550:
 14405  000D2E                     
 14406                           ; BSR set to: 0
 14407                           ;libraries/lcd_highlevel.c: 917:           curYPos = curYPos + (jumpCount / biWidth);
 14408  000D2E  C065  F020         	movff	LCD_Bitmap@jumpCount,___lwdiv@dividend
 14409  000D32  C066  F021         	movff	LCD_Bitmap@jumpCount+1,___lwdiv@dividend+1
 14410  000D36  C076  F022         	movff	LCD_Bitmap@biWidth,___lwdiv@divisor
 14411  000D3A  C077  F023         	movff	LCD_Bitmap@biWidth+1,___lwdiv@divisor+1
 14412  000D3E  EC62  F02E         	call	___lwdiv	;wreg free
 14413  000D42  0100               	movlb	0	; () banked
 14414  000D44  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14415  000D46  2420               	addwf	?___lwdiv^0,w,c
 14416  000D48  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14417  000D4A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14418  000D4C  2021               	addwfc	(?___lwdiv+1)^0,w,c
 14419  000D4E  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14420                           
 14421                           ;libraries/lcd_highlevel.c: 918:           curXPos = curXPos % biWidth;
 14422  000D50  C06F  F012         	movff	LCD_Bitmap@curXPos,___lwmod@dividend
 14423  000D54  C070  F013         	movff	LCD_Bitmap@curXPos+1,___lwmod@dividend+1
 14424  000D58  C076  F014         	movff	LCD_Bitmap@biWidth,___lwmod@divisor
 14425  000D5C  C077  F015         	movff	LCD_Bitmap@biWidth+1,___lwmod@divisor+1
 14426  000D60  EC08  F02F         	call	___lwmod	;wreg free
 14427  000D64  C012  F06F         	movff	?___lwmod,LCD_Bitmap@curXPos
 14428  000D68  C013  F070         	movff	?___lwmod+1,LCD_Bitmap@curXPos+1
 14429  000D6C                     
 14430                           ;libraries/lcd_highlevel.c: 919:           bmpPtr += 4;
 14431  000D6C  0E04               	movlw	4
 14432  000D6E  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14433  000D70  0E00               	movlw	0
 14434  000D72  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14435                           
 14436                           ;libraries/lcd_highlevel.c: 920:         break;
 14437  000D74  EF96  F007         	goto	l9336
 14438  000D78                     l9276:
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;libraries/lcd_highlevel.c: 922:           pixelCount = bmpPtr[1];
 14442  000D78  0E01               	movlw	1
 14443  000D7A  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14444  000D7C  6E2D               	movwf	??_LCD_Bitmap^0,c
 14445  000D7E  0E00               	movlw	0
 14446  000D80  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14447  000D82  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14448  000D84  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14449  000D88  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14450  000D8C                     	if	0	;tblptru may be non-zero
 14451  000D8C                     	endif
 14452  000D8C                     	if	0	;tblptru may be non-zero
 14453  000D8C                     	endif
 14454  000D8C  0008               	tblrd		*
 14455  000D8E  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14456  000D92                     
 14457                           ; BSR set to: 0
 14458                           ;libraries/lcd_highlevel.c: 923:           for(i=0;i < pixelCount;i++)
 14459  000D92  0E00               	movlw	0
 14460  000D94  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14461  000D96  0E00               	movlw	0
 14462  000D98  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14463  000D9A  EFFD  F006         	goto	l9298
 14464  000D9E                     l9280:
 14465                           
 14466                           ; BSR set to: 0
 14467                           ;libraries/lcd_highlevel.c: 924:           {;libraries/lcd_highlevel.c: 925:            
      +                           color = RGB2LCD(colorTablePtr+(bmpPtr[2+i]*4));
 14468  000D9E  517A               	movf	LCD_Bitmap@i& (0+255),w,b
 14469  000DA0  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14470  000DA2  6E2D               	movwf	??_LCD_Bitmap^0,c
 14471  000DA4  517B               	movf	(LCD_Bitmap@i+1)& (0+255),w,b
 14472  000DA6  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14473  000DA8  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14474  000DAA  0E02               	movlw	2
 14475  000DAC  262D               	addwf	??_LCD_Bitmap^0,f,c
 14476  000DAE  0E00               	movlw	0
 14477  000DB0  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14478  000DB2  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14479  000DB6  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14480  000DBA                     	if	0	;tblptru may be non-zero
 14481  000DBA                     	endif
 14482  000DBA                     	if	0	;tblptru may be non-zero
 14483  000DBA                     	endif
 14484  000DBA  0008               	tblrd		*
 14485  000DBC  50F5               	movf	tablat,w,c
 14486  000DBE  0D04               	mullw	4
 14487  000DC0  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14488  000DC4  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14489  000DC8  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14490  000DCA  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14491  000DCC  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14492  000DCE  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14493  000DD0  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14494  000DD2  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14495  000DD4  ECCD  F029         	call	_RGB2LCD	;wreg free
 14496  000DD8  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14497  000DDC  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14498  000DE0                     
 14499                           ;libraries/lcd_highlevel.c: 926:             curXPos++;
 14500  000DE0  0100               	movlb	0	; () banked
 14501  000DE2  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14502  000DE4  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14503  000DE6                     
 14504                           ; BSR set to: 0
 14505                           ;libraries/lcd_highlevel.c: 927:             PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14506  000DE6  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14507  000DE8  6E80               	movwf	128,c	;volatile
 14508  000DEA                     
 14509                           ; BSR set to: 0
 14510  000DEA  968B               	bcf	3979,3,c	;volatile
 14511  000DEC                     
 14512                           ; BSR set to: 0
 14513  000DEC  868B               	bsf	3979,3,c	;volatile
 14514  000DEE                     
 14515                           ; BSR set to: 0
 14516                           ;libraries/lcd_highlevel.c: 928:             PORTA = color; LATC3 = 0; LATC3 = 1;;
 14517  000DEE  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14518  000DF2                     
 14519                           ; BSR set to: 0
 14520  000DF2  968B               	bcf	3979,3,c	;volatile
 14521  000DF4                     
 14522                           ; BSR set to: 0
 14523  000DF4  868B               	bsf	3979,3,c	;volatile
 14524  000DF6                     
 14525                           ; BSR set to: 0
 14526                           ;libraries/lcd_highlevel.c: 929:           }
 14527  000DF6  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14528  000DF8  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14529  000DFA                     l9298:
 14530                           
 14531                           ; BSR set to: 0
 14532  000DFA  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14533  000DFC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14534  000DFE  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14535  000E00  502D               	movf	??_LCD_Bitmap^0,w,c
 14536  000E02  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14537  000E04  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14538  000E06  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14539  000E08  A0D8               	btfss	status,0,c
 14540  000E0A  EF09  F007         	goto	u6561
 14541  000E0E  EF0B  F007         	goto	u6560
 14542  000E12                     u6561:
 14543  000E12  EFCF  F006         	goto	l9280
 14544  000E16                     u6560:
 14545  000E16                     
 14546                           ; BSR set to: 0
 14547                           ;libraries/lcd_highlevel.c: 930:           if(pixelCount < 255)
 14548  000E16  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14549  000E18  B4D8               	btfsc	status,2,c
 14550  000E1A  EF11  F007         	goto	u6571
 14551  000E1E  EF13  F007         	goto	u6570
 14552  000E22                     u6571:
 14553  000E22  EF23  F007         	goto	l9304
 14554  000E26                     u6570:
 14555  000E26                     
 14556                           ; BSR set to: 0
 14557                           ;libraries/lcd_highlevel.c: 931:           {;libraries/lcd_highlevel.c: 932:            
      +                           pixelCount = (pixelCount+1) & 0xFE;
 14558  000E26  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14559  000E28  0BFE               	andlw	254
 14560  000E2A  6F75               	movwf	LCD_Bitmap@pixelCount& (0+255),b
 14561                           
 14562                           ;libraries/lcd_highlevel.c: 933:             bmpPtr+=pixelCount+2;
 14563  000E2C  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14564  000E2E  6E2D               	movwf	??_LCD_Bitmap^0,c
 14565  000E30  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14566  000E32  0E02               	movlw	2
 14567  000E34  262D               	addwf	??_LCD_Bitmap^0,f,c
 14568  000E36  0E00               	movlw	0
 14569  000E38  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14570  000E3A  502D               	movf	??_LCD_Bitmap^0,w,c
 14571  000E3C  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14572  000E3E  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14573  000E40  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14574                           
 14575                           ;libraries/lcd_highlevel.c: 934:           }
 14576  000E42  EF96  F007         	goto	l9336
 14577  000E46                     l9304:
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;libraries/lcd_highlevel.c: 936:           {;libraries/lcd_highlevel.c: 937:            
      +                             bmpPtr += 258;
 14581  000E46  0E02               	movlw	2
 14582  000E48  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14583  000E4A  0E01               	movlw	1
 14584  000E4C  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14585  000E4E  EF96  F007         	goto	l9336
 14586  000E52                     l9308:
 14587                           
 14588                           ; BSR set to: 0
 14589  000E52  0E01               	movlw	1
 14590  000E54  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14591  000E56  6E2D               	movwf	??_LCD_Bitmap^0,c
 14592  000E58  0E00               	movlw	0
 14593  000E5A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14594  000E5C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14595  000E5E  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14596  000E62  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14597  000E66                     	if	0	;tblptru may be non-zero
 14598  000E66                     	endif
 14599  000E66                     	if	0	;tblptru may be non-zero
 14600  000E66                     	endif
 14601  000E66  0008               	tblrd		*
 14602  000E68  50F5               	movf	tablat,w,c
 14603  000E6A  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14604  000E6C  6A30               	clrf	(??_LCD_Bitmap+3)^0,c
 14605                           
 14606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14607                           ; Switch size 1, requested type "simple"
 14608                           ; Number of cases is 1, Range of values is 0 to 0
 14609                           ; switch strategies available:
 14610                           ; Name         Instructions Cycles
 14611                           ; simple_byte            4     3 (average)
 14612                           ;	Chosen strategy is simple_byte
 14613  000E6E  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14614  000E70  0A00               	xorlw	0	; case 0
 14615  000E72  B4D8               	btfsc	status,2,c
 14616  000E74  EF3E  F007         	goto	l10766
 14617  000E78  EFBC  F006         	goto	l9276
 14618  000E7C                     l10766:
 14619                           
 14620                           ; BSR set to: 0
 14621                           ; Switch size 1, requested type "simple"
 14622                           ; Number of cases is 3, Range of values is 0 to 2
 14623                           ; switch strategies available:
 14624                           ; Name         Instructions Cycles
 14625                           ; simple_byte           10     6 (average)
 14626                           ;	Chosen strategy is simple_byte
 14627  000E7C  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14628  000E7E  0A00               	xorlw	0	; case 0
 14629  000E80  B4D8               	btfsc	status,2,c
 14630  000E82  EFD4  F005         	goto	l9188
 14631  000E86  0A01               	xorlw	1	; case 1
 14632  000E88  B4D8               	btfsc	status,2,c
 14633  000E8A  EF01  F006         	goto	l9212
 14634  000E8E  0A03               	xorlw	3	; case 2
 14635  000E90  B4D8               	btfsc	status,2,c
 14636  000E92  EF54  F006         	goto	l9250
 14637  000E96  EFBC  F006         	goto	l9276
 14638  000E9A                     l9310:
 14639                           
 14640                           ; BSR set to: 0
 14641                           ;libraries/lcd_highlevel.c: 943:     {;libraries/lcd_highlevel.c: 944:       pixelCount 
      +                          = bmpPtr[0];
 14642  000E9A  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14643  000E9E  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14644  000EA2                     	if	0	;tblptru may be non-zero
 14645  000EA2                     	endif
 14646  000EA2                     	if	0	;tblptru may be non-zero
 14647  000EA2                     	endif
 14648  000EA2  0008               	tblrd		*
 14649  000EA4  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14650  000EA8                     
 14651                           ; BSR set to: 0
 14652                           ;libraries/lcd_highlevel.c: 945:       color = RGB2LCD(colorTablePtr+(bmpPtr[1]*4));
 14653  000EA8  0E01               	movlw	1
 14654  000EAA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14655  000EAC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14656  000EAE  0E00               	movlw	0
 14657  000EB0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14658  000EB2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14659  000EB4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14660  000EB8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14661  000EBC                     	if	0	;tblptru may be non-zero
 14662  000EBC                     	endif
 14663  000EBC                     	if	0	;tblptru may be non-zero
 14664  000EBC                     	endif
 14665  000EBC  0008               	tblrd		*
 14666  000EBE  50F5               	movf	tablat,w,c
 14667  000EC0  0D04               	mullw	4
 14668  000EC2  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14669  000EC6  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14670  000ECA  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14671  000ECC  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14672  000ECE  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14673  000ED0  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14674  000ED2  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14675  000ED4  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14676  000ED6  ECCD  F029         	call	_RGB2LCD	;wreg free
 14677  000EDA  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14678  000EDE  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14679  000EE2                     
 14680                           ;libraries/lcd_highlevel.c: 946:       for(i=0;i < pixelCount;i++)
 14681  000EE2  0E00               	movlw	0
 14682  000EE4  0100               	movlb	0	; () banked
 14683  000EE6  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14684  000EE8  0E00               	movlw	0
 14685  000EEA  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14686  000EEC  EF84  F007         	goto	l9332
 14687  000EF0                     l9316:
 14688                           
 14689                           ; BSR set to: 0
 14690                           ;libraries/lcd_highlevel.c: 947:       {;libraries/lcd_highlevel.c: 948:         curXPos
      +                          ++;
 14691  000EF0  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14692  000EF2  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14693  000EF4                     
 14694                           ; BSR set to: 0
 14695                           ;libraries/lcd_highlevel.c: 949:         PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14696  000EF4  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14697  000EF6  6E80               	movwf	128,c	;volatile
 14698  000EF8                     
 14699                           ; BSR set to: 0
 14700  000EF8  968B               	bcf	3979,3,c	;volatile
 14701  000EFA                     
 14702                           ; BSR set to: 0
 14703  000EFA  868B               	bsf	3979,3,c	;volatile
 14704  000EFC                     
 14705                           ; BSR set to: 0
 14706                           ;libraries/lcd_highlevel.c: 950:         PORTA = color; LATC3 = 0; LATC3 = 1;;
 14707  000EFC  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14708  000F00                     
 14709                           ; BSR set to: 0
 14710  000F00  968B               	bcf	3979,3,c	;volatile
 14711  000F02                     
 14712                           ; BSR set to: 0
 14713  000F02  868B               	bsf	3979,3,c	;volatile
 14714  000F04                     
 14715                           ; BSR set to: 0
 14716                           ;libraries/lcd_highlevel.c: 951:       }
 14717  000F04  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14718  000F06  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14719  000F08                     l9332:
 14720                           
 14721                           ; BSR set to: 0
 14722  000F08  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14723  000F0A  6E2D               	movwf	??_LCD_Bitmap^0,c
 14724  000F0C  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14725  000F0E  502D               	movf	??_LCD_Bitmap^0,w,c
 14726  000F10  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14727  000F12  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14728  000F14  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14729  000F16  A0D8               	btfss	status,0,c
 14730  000F18  EF90  F007         	goto	u6581
 14731  000F1C  EF92  F007         	goto	u6580
 14732  000F20                     u6581:
 14733  000F20  EF78  F007         	goto	l9316
 14734  000F24                     u6580:
 14735  000F24                     
 14736                           ; BSR set to: 0
 14737                           ;libraries/lcd_highlevel.c: 952:       bmpPtr+=2;
 14738  000F24  0E02               	movlw	2
 14739  000F26  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14740  000F28  0E00               	movlw	0
 14741  000F2A  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14742  000F2C                     l9336:
 14743                           
 14744                           ;libraries/lcd_highlevel.c: 954:   }while(endOfImage == 0);
 14745  000F2C  0100               	movlb	0	; () banked
 14746  000F2E  5164               	movf	LCD_Bitmap@endOfImage& (0+255),w,b
 14747  000F30  B4D8               	btfsc	status,2,c
 14748  000F32  EF9D  F007         	goto	u6591
 14749  000F36  EF9F  F007         	goto	u6590
 14750  000F3A                     u6591:
 14751  000F3A  EFC4  F005         	goto	l9184
 14752  000F3E                     u6590:
 14753  000F3E                     
 14754                           ; BSR set to: 0
 14755                           ;libraries/lcd_highlevel.c: 955:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14756  000F3E  0E36               	movlw	54
 14757  000F40  6E80               	movwf	128,c	;volatile
 14758  000F42                     
 14759                           ; BSR set to: 0
 14760  000F42  988B               	bcf	3979,4,c	;volatile
 14761  000F44                     
 14762                           ; BSR set to: 0
 14763  000F44  968B               	bcf	3979,3,c	;volatile
 14764  000F46                     
 14765                           ; BSR set to: 0
 14766  000F46  868B               	bsf	3979,3,c	;volatile
 14767  000F48                     
 14768                           ; BSR set to: 0
 14769  000F48  888B               	bsf	3979,4,c	;volatile
 14770                           
 14771                           ;libraries/lcd_highlevel.c: 957:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
 14772  000F4A  0E00               	movlw	0
 14773  000F4C  6E80               	movwf	128,c	;volatile
 14774  000F4E                     
 14775                           ; BSR set to: 0
 14776  000F4E  968B               	bcf	3979,3,c	;volatile
 14777  000F50                     
 14778                           ; BSR set to: 0
 14779  000F50  868B               	bsf	3979,3,c	;volatile
 14780  000F52                     l328:
 14781                           
 14782                           ; BSR set to: 0
 14783  000F52  0012               	return		;funcret
 14784  000F54                     __end_of_LCD_Bitmap:
 14785                           	callstack 0
 14786                           
 14787 ;; *************** function ___lwmod *****************
 14788 ;; Defined at:
 14789 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 14790 ;; Parameters:    Size  Location     Type
 14791 ;;  dividend        2   17[COMRAM] unsigned int 
 14792 ;;  divisor         2   19[COMRAM] unsigned int 
 14793 ;; Auto vars:     Size  Location     Type
 14794 ;;  counter         1   21[COMRAM] unsigned char 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  2   17[COMRAM] unsigned int 
 14797 ;; Registers used:
 14798 ;;		wreg, status,2, status,0
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/0
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14804 ;;      Params:         4       0       0       0       0       0       0
 14805 ;;      Locals:         1       0       0       0       0       0       0
 14806 ;;      Temps:          0       0       0       0       0       0       0
 14807 ;;      Totals:         5       0       0       0       0       0       0
 14808 ;;Total ram usage:        5 bytes
 14809 ;; Hardware stack levels used: 1
 14810 ;; Hardware stack levels required when called: 4
 14811 ;; This function calls:
 14812 ;;		Nothing
 14813 ;; This function is called by:
 14814 ;;		_LCD_Bitmap
 14815 ;; This function uses a non-reentrant model
 14816 ;;
 14817                           
 14818                           	psect	text51
 14819  005E10                     __ptext51:
 14820                           	callstack 0
 14821  005E10                     ___lwmod:
 14822                           	callstack 19
 14823  005E10  5014               	movf	___lwmod@divisor^0,w,c
 14824  005E12  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
 14825  005E14  B4D8               	btfsc	status,2,c
 14826  005E16  EF0F  F02F         	goto	u6241
 14827  005E1A  EF11  F02F         	goto	u6240
 14828  005E1E                     u6241:
 14829  005E1E  EF35  F02F         	goto	l1315
 14830  005E22                     u6240:
 14831  005E22  0E01               	movlw	1
 14832  005E24  6E16               	movwf	___lwmod@counter^0,c
 14833  005E26  EF19  F02F         	goto	l8768
 14834  005E2A                     l8766:
 14835  005E2A  90D8               	bcf	status,0,c
 14836  005E2C  3614               	rlcf	___lwmod@divisor^0,f,c
 14837  005E2E  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
 14838  005E30  2A16               	incf	___lwmod@counter^0,f,c
 14839  005E32                     l8768:
 14840  005E32  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
 14841  005E34  EF1E  F02F         	goto	u6251
 14842  005E38  EF20  F02F         	goto	u6250
 14843  005E3C                     u6251:
 14844  005E3C  EF15  F02F         	goto	l8766
 14845  005E40                     u6250:
 14846  005E40                     l8770:
 14847  005E40  5014               	movf	___lwmod@divisor^0,w,c
 14848  005E42  5C12               	subwf	___lwmod@dividend^0,w,c
 14849  005E44  5015               	movf	(___lwmod@divisor+1)^0,w,c
 14850  005E46  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
 14851  005E48  A0D8               	btfss	status,0,c
 14852  005E4A  EF29  F02F         	goto	u6261
 14853  005E4E  EF2B  F02F         	goto	u6260
 14854  005E52                     u6261:
 14855  005E52  EF2F  F02F         	goto	l8774
 14856  005E56                     u6260:
 14857  005E56  5014               	movf	___lwmod@divisor^0,w,c
 14858  005E58  5E12               	subwf	___lwmod@dividend^0,f,c
 14859  005E5A  5015               	movf	(___lwmod@divisor+1)^0,w,c
 14860  005E5C  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
 14861  005E5E                     l8774:
 14862  005E5E  90D8               	bcf	status,0,c
 14863  005E60  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
 14864  005E62  3214               	rrcf	___lwmod@divisor^0,f,c
 14865  005E64  2E16               	decfsz	___lwmod@counter^0,f,c
 14866  005E66  EF20  F02F         	goto	l8770
 14867  005E6A                     l1315:
 14868  005E6A  C012  F012         	movff	___lwmod@dividend,?___lwmod
 14869  005E6E  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
 14870  005E72  0012               	return		;funcret
 14871  005E74                     __end_of___lwmod:
 14872                           	callstack 0
 14873                           
 14874 ;; *************** function ___lwdiv *****************
 14875 ;; Defined at:
 14876 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;  dividend        2   31[COMRAM] unsigned int 
 14879 ;;  divisor         2   33[COMRAM] unsigned int 
 14880 ;; Auto vars:     Size  Location     Type
 14881 ;;  quotient        2   36[COMRAM] unsigned int 
 14882 ;;  counter         1   35[COMRAM] unsigned char 
 14883 ;; Return value:  Size  Location     Type
 14884 ;;                  2   31[COMRAM] unsigned int 
 14885 ;; Registers used:
 14886 ;;		wreg, status,2, status,0
 14887 ;; Tracked objects:
 14888 ;;		On entry : 0/0
 14889 ;;		On exit  : 0/0
 14890 ;;		Unchanged: 0/0
 14891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14892 ;;      Params:         4       0       0       0       0       0       0
 14893 ;;      Locals:         3       0       0       0       0       0       0
 14894 ;;      Temps:          0       0       0       0       0       0       0
 14895 ;;      Totals:         7       0       0       0       0       0       0
 14896 ;;Total ram usage:        7 bytes
 14897 ;; Hardware stack levels used: 1
 14898 ;; Hardware stack levels required when called: 4
 14899 ;; This function calls:
 14900 ;;		Nothing
 14901 ;; This function is called by:
 14902 ;;		_LCD_SliderUpdate
 14903 ;;		_LCD_Bitmap
 14904 ;; This function uses a non-reentrant model
 14905 ;;
 14906                           
 14907                           	psect	text52
 14908  005CC4                     __ptext52:
 14909                           	callstack 0
 14910  005CC4                     ___lwdiv:
 14911                           	callstack 21
 14912  005CC4  0E00               	movlw	0
 14913  005CC6  6E26               	movwf	(___lwdiv@quotient+1)^0,c
 14914  005CC8  0E00               	movlw	0
 14915  005CCA  6E25               	movwf	___lwdiv@quotient^0,c
 14916  005CCC  5022               	movf	___lwdiv@divisor^0,w,c
 14917  005CCE  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
 14918  005CD0  B4D8               	btfsc	status,2,c
 14919  005CD2  EF6D  F02E         	goto	u6211
 14920  005CD6  EF6F  F02E         	goto	u6210
 14921  005CDA                     u6211:
 14922  005CDA  EF97  F02E         	goto	l1305
 14923  005CDE                     u6210:
 14924  005CDE  0E01               	movlw	1
 14925  005CE0  6E24               	movwf	___lwdiv@counter^0,c
 14926  005CE2  EF77  F02E         	goto	l8748
 14927  005CE6                     l8746:
 14928  005CE6  90D8               	bcf	status,0,c
 14929  005CE8  3622               	rlcf	___lwdiv@divisor^0,f,c
 14930  005CEA  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
 14931  005CEC  2A24               	incf	___lwdiv@counter^0,f,c
 14932  005CEE                     l8748:
 14933  005CEE  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
 14934  005CF0  EF7C  F02E         	goto	u6221
 14935  005CF4  EF7E  F02E         	goto	u6220
 14936  005CF8                     u6221:
 14937  005CF8  EF73  F02E         	goto	l8746
 14938  005CFC                     u6220:
 14939  005CFC                     l8750:
 14940  005CFC  90D8               	bcf	status,0,c
 14941  005CFE  3625               	rlcf	___lwdiv@quotient^0,f,c
 14942  005D00  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
 14943  005D02  5022               	movf	___lwdiv@divisor^0,w,c
 14944  005D04  5C20               	subwf	___lwdiv@dividend^0,w,c
 14945  005D06  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 14946  005D08  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
 14947  005D0A  A0D8               	btfss	status,0,c
 14948  005D0C  EF8A  F02E         	goto	u6231
 14949  005D10  EF8C  F02E         	goto	u6230
 14950  005D14                     u6231:
 14951  005D14  EF91  F02E         	goto	l8758
 14952  005D18                     u6230:
 14953  005D18  5022               	movf	___lwdiv@divisor^0,w,c
 14954  005D1A  5E20               	subwf	___lwdiv@dividend^0,f,c
 14955  005D1C  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 14956  005D1E  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
 14957  005D20  8025               	bsf	___lwdiv@quotient^0,0,c
 14958  005D22                     l8758:
 14959  005D22  90D8               	bcf	status,0,c
 14960  005D24  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
 14961  005D26  3222               	rrcf	___lwdiv@divisor^0,f,c
 14962  005D28  2E24               	decfsz	___lwdiv@counter^0,f,c
 14963  005D2A  EF7E  F02E         	goto	l8750
 14964  005D2E                     l1305:
 14965  005D2E  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 14966  005D32  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14967  005D36  0012               	return		;funcret
 14968  005D38                     __end_of___lwdiv:
 14969                           	callstack 0
 14970                           
 14971 ;; *************** function _RGB2LCD *****************
 14972 ;; Defined at:
 14973 ;;		line 799 in file "libraries/lcd_highlevel.c"
 14974 ;; Parameters:    Size  Location     Type
 14975 ;;  colorTableEn    2   17[COMRAM] PTR unsigned char 
 14976 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 14977 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 14978 ;; Auto vars:     Size  Location     Type
 14979 ;;  color           2   29[COMRAM] unsigned short 
 14980 ;;  blue            2   27[COMRAM] unsigned short 
 14981 ;;  green           2   25[COMRAM] unsigned short 
 14982 ;;  red             2   23[COMRAM] unsigned short 
 14983 ;; Return value:  Size  Location     Type
 14984 ;;                  2   17[COMRAM] unsigned short 
 14985 ;; Registers used:
 14986 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 14987 ;; Tracked objects:
 14988 ;;		On entry : 0/0
 14989 ;;		On exit  : 0/0
 14990 ;;		Unchanged: 0/0
 14991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14992 ;;      Params:         2       0       0       0       0       0       0
 14993 ;;      Locals:         8       0       0       0       0       0       0
 14994 ;;      Temps:          4       0       0       0       0       0       0
 14995 ;;      Totals:        14       0       0       0       0       0       0
 14996 ;;Total ram usage:       14 bytes
 14997 ;; Hardware stack levels used: 1
 14998 ;; Hardware stack levels required when called: 4
 14999 ;; This function calls:
 15000 ;;		Nothing
 15001 ;; This function is called by:
 15002 ;;		_LCD_Bitmap
 15003 ;; This function uses a non-reentrant model
 15004 ;;
 15005                           
 15006                           	psect	text53
 15007  00539A                     __ptext53:
 15008                           	callstack 0
 15009  00539A                     _RGB2LCD:
 15010                           	callstack 19
 15011  00539A                     
 15012                           ;libraries/lcd_highlevel.c: 799: uint16_t RGB2LCD(uint8_t * colorTableEntry);libraries/l
      +                          cd_highlevel.c: 800: {;libraries/lcd_highlevel.c: 801:     uint16_t red,green,blue;;libr
      +                          aries/lcd_highlevel.c: 802:     uint16_t color;;libraries/lcd_highlevel.c: 804:     red 
      +                          = colorTableEntry[2] >> 3;
 15013  00539A  0E02               	movlw	2
 15014  00539C  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15015  00539E  6E14               	movwf	??_RGB2LCD^0,c
 15016  0053A0  0E00               	movlw	0
 15017  0053A2  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15018  0053A4  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15019  0053A6  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15020  0053AA  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15021  0053AE                     	if	0	;tblptru may be non-zero
 15022  0053AE                     	endif
 15023  0053AE                     	if	0	;tblptru may be non-zero
 15024  0053AE                     	endif
 15025  0053AE  0008               	tblrd		*
 15026  0053B0  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15027  0053B4  90D8               	bcf	status,0,c
 15028  0053B6  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15029  0053B8  90D8               	bcf	status,0,c
 15030  0053BA  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15031  0053BC  90D8               	bcf	status,0,c
 15032  0053BE  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15033  0053C0  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15034  0053C2  6E18               	movwf	RGB2LCD@red^0,c
 15035  0053C4  6A19               	clrf	(RGB2LCD@red+1)^0,c
 15036                           
 15037                           ;libraries/lcd_highlevel.c: 805:     green = colorTableEntry[1] >> 2;
 15038  0053C6  0E01               	movlw	1
 15039  0053C8  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15040  0053CA  6E14               	movwf	??_RGB2LCD^0,c
 15041  0053CC  0E00               	movlw	0
 15042  0053CE  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15043  0053D0  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15044  0053D2  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15045  0053D6  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15046  0053DA                     	if	0	;tblptru may be non-zero
 15047  0053DA                     	endif
 15048  0053DA                     	if	0	;tblptru may be non-zero
 15049  0053DA                     	endif
 15050  0053DA  0008               	tblrd		*
 15051  0053DC  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15052  0053E0  90D8               	bcf	status,0,c
 15053  0053E2  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15054  0053E4  90D8               	bcf	status,0,c
 15055  0053E6  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15056  0053E8  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15057  0053EA  6E1A               	movwf	RGB2LCD@green^0,c
 15058  0053EC  6A1B               	clrf	(RGB2LCD@green+1)^0,c
 15059                           
 15060                           ;libraries/lcd_highlevel.c: 806:     blue = colorTableEntry[0] >> 3;
 15061  0053EE  C012  FFF6         	movff	RGB2LCD@colorTableEntry,tblptrl
 15062  0053F2  C013  FFF7         	movff	RGB2LCD@colorTableEntry+1,tblptrh
 15063  0053F6                     	if	0	;tblptru may be non-zero
 15064  0053F6                     	endif
 15065  0053F6                     	if	0	;tblptru may be non-zero
 15066  0053F6                     	endif
 15067  0053F6  0008               	tblrd		*
 15068  0053F8  CFF5 F014          	movff	tablat,??_RGB2LCD
 15069  0053FC  90D8               	bcf	status,0,c
 15070  0053FE  3214               	rrcf	??_RGB2LCD^0,f,c
 15071  005400  90D8               	bcf	status,0,c
 15072  005402  3214               	rrcf	??_RGB2LCD^0,f,c
 15073  005404  90D8               	bcf	status,0,c
 15074  005406  3214               	rrcf	??_RGB2LCD^0,f,c
 15075  005408  5014               	movf	??_RGB2LCD^0,w,c
 15076  00540A  6E1C               	movwf	RGB2LCD@blue^0,c
 15077  00540C  6A1D               	clrf	(RGB2LCD@blue+1)^0,c
 15078  00540E                     
 15079                           ;libraries/lcd_highlevel.c: 807:     color = (red << 11) | (green << 5) | (blue << 0);
 15080  00540E  C01A  F014         	movff	RGB2LCD@green,??_RGB2LCD
 15081  005412  C01B  F015         	movff	RGB2LCD@green+1,??_RGB2LCD+1
 15082  005416  0E05               	movlw	5
 15083  005418                     u6055:
 15084  005418  90D8               	bcf	status,0,c
 15085  00541A  3614               	rlcf	??_RGB2LCD^0,f,c
 15086  00541C  3615               	rlcf	(??_RGB2LCD+1)^0,f,c
 15087  00541E  2EE8               	decfsz	wreg,f,c
 15088  005420  EF0C  F02A         	goto	u6055
 15089  005424  C018  F016         	movff	RGB2LCD@red,??_RGB2LCD+2
 15090  005428  C019  F017         	movff	RGB2LCD@red+1,??_RGB2LCD+3
 15091  00542C  0E0B               	movlw	11
 15092  00542E                     u6065:
 15093  00542E  90D8               	bcf	status,0,c
 15094  005430  3616               	rlcf	(??_RGB2LCD+2)^0,f,c
 15095  005432  3617               	rlcf	(??_RGB2LCD+3)^0,f,c
 15096  005434  2EE8               	decfsz	wreg,f,c
 15097  005436  EF17  F02A         	goto	u6065
 15098  00543A  5014               	movf	??_RGB2LCD^0,w,c
 15099  00543C  1216               	iorwf	(??_RGB2LCD+2)^0,f,c
 15100  00543E  5015               	movf	(??_RGB2LCD+1)^0,w,c
 15101  005440  1217               	iorwf	(??_RGB2LCD+3)^0,f,c
 15102  005442  501C               	movf	RGB2LCD@blue^0,w,c
 15103  005444  1016               	iorwf	(??_RGB2LCD+2)^0,w,c
 15104  005446  6E1E               	movwf	RGB2LCD@color^0,c
 15105  005448  501D               	movf	(RGB2LCD@blue+1)^0,w,c
 15106  00544A  1017               	iorwf	(??_RGB2LCD+3)^0,w,c
 15107  00544C  6E1F               	movwf	(RGB2LCD@color+1)^0,c
 15108  00544E                     
 15109                           ;libraries/lcd_highlevel.c: 808:     return color;
 15110  00544E  C01E  F012         	movff	RGB2LCD@color,?_RGB2LCD
 15111  005452  C01F  F013         	movff	RGB2LCD@color+1,?_RGB2LCD+1
 15112  005456  0012               	return		;funcret
 15113  005458                     __end_of_RGB2LCD:
 15114                           	callstack 0
 15115                           
 15116 ;; *************** function _Menu_inGameDraw *****************
 15117 ;; Defined at:
 15118 ;;		line 19 in file "class/menu.c"
 15119 ;; Parameters:    Size  Location     Type
 15120 ;;  g               2   50[BANK0 ] PTR struct GameParameter
 15121 ;;		 -> g1(239), 
 15122 ;; Auto vars:     Size  Location     Type
 15123 ;;		None
 15124 ;; Return value:  Size  Location     Type
 15125 ;;                  1    wreg      void 
 15126 ;; Registers used:
 15127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15128 ;; Tracked objects:
 15129 ;;		On entry : 0/0
 15130 ;;		On exit  : 0/0
 15131 ;;		Unchanged: 0/0
 15132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15133 ;;      Params:         0       2       0       0       0       0       0
 15134 ;;      Locals:         0       0       0       0       0       0       0
 15135 ;;      Temps:          0       0       0       0       0       0       0
 15136 ;;      Totals:         0       2       0       0       0       0       0
 15137 ;;Total ram usage:        2 bytes
 15138 ;; Hardware stack levels used: 1
 15139 ;; Hardware stack levels required when called: 13
 15140 ;; This function calls:
 15141 ;;		_Ball_draw
 15142 ;;		_LCD_Fill
 15143 ;;		_Paddle_draw
 15144 ;;		_Score_draw
 15145 ;; This function is called by:
 15146 ;;		_displaySM
 15147 ;; This function uses a non-reentrant model
 15148 ;;
 15149                           
 15150                           	psect	text54
 15151  005FF0                     __ptext54:
 15152                           	callstack 0
 15153  005FF0                     _Menu_inGameDraw:
 15154                           	callstack 15
 15155  005FF0                     
 15156                           ;class/menu.c: 19: void Menu_inGameDraw(GameParameters* g);class/menu.c: 20: {;class/men
      +                          u.c: 21:     LCD_Fill(0b0000000000000000);
 15157  005FF0  0E00               	movlw	0
 15158  005FF2  6E13               	movwf	(LCD_Fill@color+1)^0,c
 15159  005FF4  0E00               	movlw	0
 15160  005FF6  6E12               	movwf	LCD_Fill@color^0,c
 15161  005FF8  EC6C  F029         	call	_LCD_Fill	;wreg free
 15162  005FFC                     
 15163                           ;class/menu.c: 22:     Score_draw(&g->s1);
 15164  005FFC  0EE9               	movlw	233
 15165  005FFE  0100               	movlb	0	; () banked
 15166  006000  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15167  006002  6F90               	movwf	Score_draw@s& (0+255),b
 15168  006004  0E00               	movlw	0
 15169  006006  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15170  006008  6F91               	movwf	(Score_draw@s+1)& (0+255),b
 15171  00600A  EC77  F027         	call	_Score_draw	;wreg free
 15172  00600E                     
 15173                           ;class/menu.c: 23:     Paddle_draw(&g->p1);
 15174  00600E  0ED5               	movlw	213
 15175  006010  0100               	movlb	0	; () banked
 15176  006012  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15177  006014  6E25               	movwf	Paddle_draw@p^0,c
 15178  006016  0E00               	movlw	0
 15179  006018  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15180  00601A  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15181  00601C  EC88  F021         	call	_Paddle_draw	;wreg free
 15182  006020                     
 15183                           ;class/menu.c: 24:     Paddle_draw(&g->p2);
 15184  006020  0EDF               	movlw	223
 15185  006022  0100               	movlb	0	; () banked
 15186  006024  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15187  006026  6E25               	movwf	Paddle_draw@p^0,c
 15188  006028  0E00               	movlw	0
 15189  00602A  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15190  00602C  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15191  00602E  EC88  F021         	call	_Paddle_draw	;wreg free
 15192  006032                     
 15193                           ;class/menu.c: 25:     Ball_draw(&g->b);
 15194  006032  0EC9               	movlw	201
 15195  006034  0100               	movlb	0	; () banked
 15196  006036  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15197  006038  6E25               	movwf	Ball_draw@b^0,c
 15198  00603A  0E00               	movlw	0
 15199  00603C  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15200  00603E  6E26               	movwf	(Ball_draw@b+1)^0,c
 15201  006040  EC3C  F020         	call	_Ball_draw	;wreg free
 15202  006044  0012               	return		;funcret
 15203  006046                     __end_of_Menu_inGameDraw:
 15204                           	callstack 0
 15205                           
 15206 ;; *************** function _Score_draw *****************
 15207 ;; Defined at:
 15208 ;;		line 16 in file "class/score.c"
 15209 ;; Parameters:    Size  Location     Type
 15210 ;;  s               2   48[BANK0 ] PTR struct Score
 15211 ;;		 -> g1(239), 
 15212 ;; Auto vars:     Size  Location     Type
 15213 ;;		None
 15214 ;; Return value:  Size  Location     Type
 15215 ;;                  1    wreg      void 
 15216 ;; Registers used:
 15217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15218 ;; Tracked objects:
 15219 ;;		On entry : 0/0
 15220 ;;		On exit  : 0/0
 15221 ;;		Unchanged: 0/0
 15222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15223 ;;      Params:         0       2       0       0       0       0       0
 15224 ;;      Locals:         0       0       0       0       0       0       0
 15225 ;;      Temps:          0       0       0       0       0       0       0
 15226 ;;      Totals:         0       2       0       0       0       0       0
 15227 ;;Total ram usage:        2 bytes
 15228 ;; Hardware stack levels used: 1
 15229 ;; Hardware stack levels required when called: 12
 15230 ;; This function calls:
 15231 ;;		_LCD_DrawText
 15232 ;;		_sprintf
 15233 ;; This function is called by:
 15234 ;;		_Menu_inGameDraw
 15235 ;;		_displayController
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239                           	psect	text55
 15240  004EEE                     __ptext55:
 15241                           	callstack 0
 15242  004EEE                     _Score_draw:
 15243                           	callstack 14
 15244  004EEE                     
 15245                           ;class/score.c: 16: void Score_draw(struct Score* s);class/score.c: 17: {;class/score.c:
      +                           18:     sprintf(s->str,"%d",s->homeScore);
 15246  004EEE  0E04               	movlw	4
 15247  004EF0  0100               	movlb	0	; () banked
 15248  004EF2  2590               	addwf	Score_draw@s& (0+255),w,b
 15249  004EF4  6F82               	movwf	sprintf@s& (0+255),b
 15250  004EF6  0E00               	movlw	0
 15251  004EF8  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15252  004EFA  6F83               	movwf	(sprintf@s+1)& (0+255),b
 15253  004EFC  0EEE               	movlw	low (STR_15+3)
 15254  004EFE  6F84               	movwf	sprintf@fmt& (0+255),b
 15255  004F00  0E7F               	movlw	high (STR_15+3)
 15256  004F02  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
 15257  004F04  C090  FFD9         	movff	Score_draw@s,fsr2l
 15258  004F08  C091  FFDA         	movff	Score_draw@s+1,fsr2h
 15259  004F0C  CFDE F086          	movff	postinc2,?_sprintf+4
 15260  004F10  CFDD F087          	movff	postdec2,?_sprintf+5
 15261  004F14  EC23  F030         	call	_sprintf	;wreg free
 15262  004F18                     
 15263                           ;class/score.c: 19:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_LEFT,0,0,0b11111
      +                          11111111111,0b0000000000000000);
 15264  004F18  0E04               	movlw	4
 15265  004F1A  0100               	movlb	0	; () banked
 15266  004F1C  2590               	addwf	Score_draw@s& (0+255),w,b
 15267  004F1E  6E20               	movwf	LCD_DrawText@msg^0,c
 15268  004F20  0E00               	movlw	0
 15269  004F22  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15270  004F24  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15271  004F26  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 15272  004F28  6E22               	movwf	LCD_DrawText@font^0,c
 15273  004F2A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15274  004F2C  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15275  004F2E  0E00               	movlw	0
 15276  004F30  6E24               	movwf	LCD_DrawText@align^0,c
 15277  004F32  0E00               	movlw	0
 15278  004F34  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15279  004F36  0E00               	movlw	0
 15280  004F38  6E25               	movwf	LCD_DrawText@posX^0,c
 15281  004F3A  0E00               	movlw	0
 15282  004F3C  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15283  004F3E  0E00               	movlw	0
 15284  004F40  6E27               	movwf	LCD_DrawText@posY^0,c
 15285  004F42  0EFF               	movlw	255
 15286  004F44  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15287  004F46  6829               	setf	LCD_DrawText@color^0,c
 15288  004F48  0E00               	movlw	0
 15289  004F4A  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15290  004F4C  0E00               	movlw	0
 15291  004F4E  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15292  004F50  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 15293  004F54                     
 15294                           ;class/score.c: 20:     sprintf(s->str,"%d",s->awayScore);
 15295  004F54  0E04               	movlw	4
 15296  004F56  0100               	movlb	0	; () banked
 15297  004F58  2590               	addwf	Score_draw@s& (0+255),w,b
 15298  004F5A  6F82               	movwf	sprintf@s& (0+255),b
 15299  004F5C  0E00               	movlw	0
 15300  004F5E  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15301  004F60  6F83               	movwf	(sprintf@s+1)& (0+255),b
 15302  004F62  0EEE               	movlw	low (STR_15+3)
 15303  004F64  6F84               	movwf	sprintf@fmt& (0+255),b
 15304  004F66  0E7F               	movlw	high (STR_15+3)
 15305  004F68  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
 15306  004F6A  EE20 F002          	lfsr	2,2
 15307  004F6E  5190               	movf	Score_draw@s& (0+255),w,b
 15308  004F70  26D9               	addwf	fsr2l,f,c
 15309  004F72  5191               	movf	(Score_draw@s+1)& (0+255),w,b
 15310  004F74  22DA               	addwfc	fsr2h,f,c
 15311  004F76  CFDE F086          	movff	postinc2,?_sprintf+4
 15312  004F7A  CFDD F087          	movff	postdec2,?_sprintf+5
 15313  004F7E  EC23  F030         	call	_sprintf	;wreg free
 15314                           
 15315                           ;class/score.c: 21:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_RIGHT,239,0,0b11
      +                          11111111111111,0b0000000000000000);
 15316  004F82  0E04               	movlw	4
 15317  004F84  0100               	movlb	0	; () banked
 15318  004F86  2590               	addwf	Score_draw@s& (0+255),w,b
 15319  004F88  6E20               	movwf	LCD_DrawText@msg^0,c
 15320  004F8A  0E00               	movlw	0
 15321  004F8C  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15322  004F8E  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15323  004F90  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 15324  004F92  6E22               	movwf	LCD_DrawText@font^0,c
 15325  004F94  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15326  004F96  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15327  004F98  0E01               	movlw	1
 15328  004F9A  6E24               	movwf	LCD_DrawText@align^0,c
 15329  004F9C  0E00               	movlw	0
 15330  004F9E  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15331  004FA0  0EEF               	movlw	239
 15332  004FA2  6E25               	movwf	LCD_DrawText@posX^0,c
 15333  004FA4  0E00               	movlw	0
 15334  004FA6  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15335  004FA8  0E00               	movlw	0
 15336  004FAA  6E27               	movwf	LCD_DrawText@posY^0,c
 15337  004FAC  0EFF               	movlw	255
 15338  004FAE  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15339  004FB0  6829               	setf	LCD_DrawText@color^0,c
 15340  004FB2  0E00               	movlw	0
 15341  004FB4  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15342  004FB6  0E00               	movlw	0
 15343  004FB8  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15344  004FBA  ECDB  F00E         	call	_LCD_DrawText	;wreg free
 15345  004FBE  0012               	return		;funcret
 15346  004FC0                     __end_of_Score_draw:
 15347                           	callstack 0
 15348                           
 15349 ;; *************** function _sprintf *****************
 15350 ;; Defined at:
 15351 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;  s               2   34[BANK0 ] PTR unsigned char 
 15354 ;;		 -> touchScreenController@s(20), g1(239), 
 15355 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
 15356 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;  f               6   42[BANK0 ] struct _IO_FILE
 15359 ;;  ap              2   40[BANK0 ] PTR void [1]
 15360 ;;		 -> ?_sprintf(2), 
 15361 ;;  ret             2    0        int 
 15362 ;; Return value:  Size  Location     Type
 15363 ;;                  2   34[BANK0 ] int 
 15364 ;; Registers used:
 15365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15366 ;; Tracked objects:
 15367 ;;		On entry : 0/0
 15368 ;;		On exit  : 0/0
 15369 ;;		Unchanged: 0/0
 15370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15371 ;;      Params:         0       6       0       0       0       0       0
 15372 ;;      Locals:         0       8       0       0       0       0       0
 15373 ;;      Temps:          0       0       0       0       0       0       0
 15374 ;;      Totals:         0      14       0       0       0       0       0
 15375 ;;Total ram usage:       14 bytes
 15376 ;; Hardware stack levels used: 1
 15377 ;; Hardware stack levels required when called: 11
 15378 ;; This function calls:
 15379 ;;		_vfprintf
 15380 ;; This function is called by:
 15381 ;;		_Score_draw
 15382 ;;		_touchScreenController
 15383 ;; This function uses a non-reentrant model
 15384 ;;
 15385                           
 15386                           	psect	text56
 15387  006046                     __ptext56:
 15388                           	callstack 0
 15389  006046                     _sprintf:
 15390                           	callstack 14
 15391  006046  0E86               	movlw	low (?_sprintf+4)
 15392  006048  0100               	movlb	0	; () banked
 15393  00604A  6F88               	movwf	sprintf@ap& (0+255),b
 15394  00604C  0E00               	movlw	high (?_sprintf+4)
 15395  00604E  6F89               	movwf	(sprintf@ap+1)& (0+255),b
 15396  006050  C082  F08A         	movff	sprintf@s,sprintf@f
 15397  006054  C083  F08B         	movff	sprintf@s+1,sprintf@f+1
 15398  006058                     
 15399                           ; BSR set to: 0
 15400  006058  0E00               	movlw	0
 15401  00605A  6F8D               	movwf	(sprintf@f+3)& (0+255),b
 15402  00605C  0E00               	movlw	0
 15403  00605E  6F8C               	movwf	(sprintf@f+2)& (0+255),b
 15404  006060                     
 15405                           ; BSR set to: 0
 15406  006060  0E00               	movlw	0
 15407  006062  6F8F               	movwf	(sprintf@f+5)& (0+255),b
 15408  006064  0E00               	movlw	0
 15409  006066  6F8E               	movwf	(sprintf@f+4)& (0+255),b
 15410  006068                     
 15411                           ; BSR set to: 0
 15412  006068  0E8A               	movlw	low sprintf@f
 15413  00606A  6F7A               	movwf	vfprintf@fp& (0+255),b
 15414  00606C  0E00               	movlw	high sprintf@f
 15415  00606E  6F7B               	movwf	(vfprintf@fp+1)& (0+255),b
 15416  006070  C084  F07C         	movff	sprintf@fmt,vfprintf@fmt
 15417  006074  C085  F07D         	movff	sprintf@fmt+1,vfprintf@fmt+1
 15418  006078  0E88               	movlw	low sprintf@ap
 15419  00607A  6F7E               	movwf	vfprintf@ap& (0+255),b
 15420  00607C  0E00               	movlw	high sprintf@ap
 15421  00607E  6F7F               	movwf	(vfprintf@ap+1)& (0+255),b
 15422  006080  EC6C  F02F         	call	_vfprintf	;wreg free
 15423  006084  0100               	movlb	0	; () banked
 15424  006086  518C               	movf	(sprintf@f+2)& (0+255),w,b
 15425  006088  2582               	addwf	sprintf@s& (0+255),w,b
 15426  00608A  6ED9               	movwf	fsr2l,c
 15427  00608C  518D               	movf	(sprintf@f+3)& (0+255),w,b
 15428  00608E  2183               	addwfc	(sprintf@s+1)& (0+255),w,b
 15429  006090  6EDA               	movwf	fsr2h,c
 15430  006092  0E00               	movlw	0
 15431  006094  6EDF               	movwf	indf2,c
 15432  006096                     
 15433                           ; BSR set to: 0
 15434  006096  0012               	return		;funcret
 15435  006098                     __end_of_sprintf:
 15436                           	callstack 0
 15437                           
 15438 ;; *************** function _vfprintf *****************
 15439 ;; Defined at:
 15440 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15441 ;; Parameters:    Size  Location     Type
 15442 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
 15443 ;;		 -> sprintf@f(6), 
 15444 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
 15445 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15446 ;;  ap              2   30[BANK0 ] PTR PTR void 
 15447 ;;		 -> sprintf@ap(2), 
 15448 ;; Auto vars:     Size  Location     Type
 15449 ;;  cfmt            2   32[BANK0 ] PTR unsigned char 
 15450 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15451 ;; Return value:  Size  Location     Type
 15452 ;;                  2   26[BANK0 ] int 
 15453 ;; Registers used:
 15454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15455 ;; Tracked objects:
 15456 ;;		On entry : 0/0
 15457 ;;		On exit  : 0/0
 15458 ;;		Unchanged: 0/0
 15459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15460 ;;      Params:         0       6       0       0       0       0       0
 15461 ;;      Locals:         0       2       0       0       0       0       0
 15462 ;;      Temps:          0       0       0       0       0       0       0
 15463 ;;      Totals:         0       8       0       0       0       0       0
 15464 ;;Total ram usage:        8 bytes
 15465 ;; Hardware stack levels used: 1
 15466 ;; Hardware stack levels required when called: 10
 15467 ;; This function calls:
 15468 ;;		_vfpfcnvrt
 15469 ;; This function is called by:
 15470 ;;		_sprintf
 15471 ;; This function uses a non-reentrant model
 15472 ;;
 15473                           
 15474                           	psect	text57
 15475  005ED8                     __ptext57:
 15476                           	callstack 0
 15477  005ED8                     _vfprintf:
 15478                           	callstack 14
 15479  005ED8                     
 15480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 15481  005ED8  C07C  F080         	movff	vfprintf@fmt,vfprintf@cfmt
 15482  005EDC  C07D  F081         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 15483  005EE0                     
 15484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 15485  005EE0  0E00               	movlw	0
 15486  005EE2  0100               	movlb	0	; () banked
 15487  005EE4  6FDC               	movwf	(_nout+1)& (0+255),b
 15488  005EE6  0E00               	movlw	0
 15489  005EE8  6FDB               	movwf	_nout& (0+255),b
 15490                           
 15491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 15492  005EEA  EF8A  F02F         	goto	l9390
 15493  005EEE                     l9388:
 15494                           
 15495                           ; BSR set to: 0
 15496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 15497  005EEE  C07A  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
 15498  005EF2  C07B  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 15499  005EF6  0E80               	movlw	low vfprintf@cfmt
 15500  005EF8  6E41               	movwf	vfpfcnvrt@fmt^0,c
 15501  005EFA  0E00               	movlw	high vfprintf@cfmt
 15502  005EFC  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
 15503  005EFE  C07E  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
 15504  005F02  C07F  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 15505  005F06  ECEC  F01D         	call	_vfpfcnvrt	;wreg free
 15506  005F0A  503F               	movf	?_vfpfcnvrt^0,w,c
 15507  005F0C  0100               	movlb	0	; () banked
 15508  005F0E  27DB               	addwf	_nout& (0+255),f,b
 15509  005F10  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
 15510  005F12  23DC               	addwfc	(_nout+1)& (0+255),f,b
 15511  005F14                     l9390:
 15512                           
 15513                           ; BSR set to: 0
 15514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 15515  005F14  C080  FFF6         	movff	vfprintf@cfmt,tblptrl
 15516  005F18  C081  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 15517  005F1C                     	if	0	;tblptru may be non-zero
 15518  005F1C                     	endif
 15519  005F1C                     	if	0	;tblptru may be non-zero
 15520  005F1C                     	endif
 15521  005F1C  0008               	tblrd		*
 15522  005F1E  50F5               	movf	tablat,w,c
 15523  005F20  0900               	iorlw	0
 15524  005F22  A4D8               	btfss	status,2,c
 15525  005F24  EF96  F02F         	goto	u6611
 15526  005F28  EF98  F02F         	goto	u6610
 15527  005F2C                     u6611:
 15528  005F2C  EF77  F02F         	goto	l9388
 15529  005F30                     u6610:
 15530  005F30                     
 15531                           ; BSR set to: 0
 15532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 15533  005F30  C0DB  F07A         	movff	_nout,?_vfprintf
 15534  005F34  C0DC  F07B         	movff	_nout+1,?_vfprintf+1
 15535  005F38                     
 15536                           ; BSR set to: 0
 15537  005F38  0012               	return		;funcret
 15538  005F3A                     __end_of_vfprintf:
 15539                           	callstack 0
 15540                           
 15541 ;; *************** function _vfpfcnvrt *****************
 15542 ;; Defined at:
 15543 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15544 ;; Parameters:    Size  Location     Type
 15545 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
 15546 ;;		 -> sprintf@f(6), 
 15547 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
 15548 ;;		 -> vfprintf@cfmt(2), 
 15549 ;;  ap              2   66[COMRAM] PTR PTR void 
 15550 ;;		 -> sprintf@ap(2), 
 15551 ;; Auto vars:     Size  Location     Type
 15552 ;;  ll              8   18[BANK0 ] long long 
 15553 ;;  llu             8    0        unsigned long long 
 15554 ;;  f               4    0        unsigned long long 
 15555 ;;  vp              3    0        PTR void 
 15556 ;;  ct              3    0        unsigned char [3]
 15557 ;;  cp              3    0        PTR unsigned char 
 15558 ;;  i               2    0        int 
 15559 ;;  done            2    0        int 
 15560 ;;  c               1    0        unsigned char 
 15561 ;; Return value:  Size  Location     Type
 15562 ;;                  2   62[COMRAM] int 
 15563 ;; Registers used:
 15564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15565 ;; Tracked objects:
 15566 ;;		On entry : 0/0
 15567 ;;		On exit  : 0/0
 15568 ;;		Unchanged: 0/0
 15569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15570 ;;      Params:         6       0       0       0       0       0       0
 15571 ;;      Locals:         0       8       0       0       0       0       0
 15572 ;;      Temps:          2       0       0       0       0       0       0
 15573 ;;      Totals:         8       8       0       0       0       0       0
 15574 ;;Total ram usage:       16 bytes
 15575 ;; Hardware stack levels used: 1
 15576 ;; Hardware stack levels required when called: 9
 15577 ;; This function calls:
 15578 ;;		_dtoa
 15579 ;;		_fputc
 15580 ;; This function is called by:
 15581 ;;		_vfprintf
 15582 ;; This function uses a non-reentrant model
 15583 ;;
 15584                           
 15585                           	psect	text58
 15586  003BD8                     __ptext58:
 15587                           	callstack 0
 15588  003BD8                     _vfpfcnvrt:
 15589                           	callstack 14
 15590  003BD8                     
 15591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 15592  003BD8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15593  003BDC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15594  003BE0  CFDE FFF6          	movff	postinc2,tblptrl
 15595  003BE4  CFDD FFF7          	movff	postdec2,tblptrh
 15596  003BE8                     	if	0	;tblptru may be non-zero
 15597  003BE8                     	endif
 15598  003BE8                     	if	0	;tblptru may be non-zero
 15599  003BE8                     	endif
 15600  003BE8  0008               	tblrd		*
 15601  003BEA  50F5               	movf	tablat,w,c
 15602  003BEC  0A25               	xorlw	37
 15603  003BEE  A4D8               	btfss	status,2,c
 15604  003BF0  EFFC  F01D         	goto	u6271
 15605  003BF4  EFFE  F01D         	goto	u6270
 15606  003BF8                     u6271:
 15607  003BF8  EFAA  F01E         	goto	l8812
 15608  003BFC                     u6270:
 15609  003BFC                     
 15610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 15611  003BFC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15612  003C00  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15613  003C04  2ADE               	incf	postinc2,f,c
 15614  003C06  0E00               	movlw	0
 15615  003C08  22DD               	addwfc	postdec2,f,c
 15616  003C0A                     
 15617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 15618  003C0A  0E00               	movlw	0
 15619  003C0C  6E48               	movwf	(_width+1)^0,c
 15620  003C0E  0E00               	movlw	0
 15621  003C10  6E47               	movwf	_width^0,c
 15622  003C12  C047  F04B         	movff	_width,_flags
 15623  003C16  C048  F04C         	movff	_width+1,_flags+1
 15624  003C1A                     
 15625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 15626  003C1A  6849               	setf	_prec^0,c
 15627  003C1C  684A               	setf	(_prec+1)^0,c
 15628  003C1E                     
 15629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 15630  003C1E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15631  003C22  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15632  003C26  CFDE FFF6          	movff	postinc2,tblptrl
 15633  003C2A  CFDD FFF7          	movff	postdec2,tblptrh
 15634  003C2E                     	if	0	;tblptru may be non-zero
 15635  003C2E                     	endif
 15636  003C2E                     	if	0	;tblptru may be non-zero
 15637  003C2E                     	endif
 15638  003C2E  0008               	tblrd		*
 15639  003C30  50F5               	movf	tablat,w,c
 15640  003C32  0A64               	xorlw	100
 15641  003C34  B4D8               	btfsc	status,2,c
 15642  003C36  EF1F  F01E         	goto	u6281
 15643  003C3A  EF21  F01E         	goto	u6280
 15644  003C3E                     u6281:
 15645  003C3E  EF33  F01E         	goto	l8790
 15646  003C42                     u6280:
 15647  003C42  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15648  003C46  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15649  003C4A  CFDE FFF6          	movff	postinc2,tblptrl
 15650  003C4E  CFDD FFF7          	movff	postdec2,tblptrh
 15651  003C52                     	if	0	;tblptru may be non-zero
 15652  003C52                     	endif
 15653  003C52                     	if	0	;tblptru may be non-zero
 15654  003C52                     	endif
 15655  003C52  0008               	tblrd		*
 15656  003C54  50F5               	movf	tablat,w,c
 15657  003C56  0A69               	xorlw	105
 15658  003C58  A4D8               	btfss	status,2,c
 15659  003C5A  EF31  F01E         	goto	u6291
 15660  003C5E  EF33  F01E         	goto	u6290
 15661  003C62                     u6291:
 15662  003C62  EF74  F01E         	goto	l8796
 15663  003C66                     u6290:
 15664  003C66                     l8790:
 15665                           
 15666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 15667  003C66  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15668  003C6A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15669  003C6E  2ADE               	incf	postinc2,f,c
 15670  003C70  0E00               	movlw	0
 15671  003C72  22DD               	addwfc	postdec2,f,c
 15672                           
 15673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 15674  003C74  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15675  003C78  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15676  003C7C  CFDF F045          	movff	indf2,??_vfpfcnvrt
 15677  003C80  0E02               	movlw	2
 15678  003C82  26DE               	addwf	postinc2,f,c
 15679  003C84  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
 15680  003C88  0E00               	movlw	0
 15681  003C8A  22DD               	addwfc	postdec2,f,c
 15682  003C8C  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15683  003C90  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15684  003C94  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
 15685  003C98  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
 15686  003C9C  0100               	movlb	0	; () banked
 15687  003C9E  0E00               	movlw	0
 15688  003CA0  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 15689  003CA2  0EFF               	movlw	-1
 15690  003CA4  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 15691  003CA6  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 15692  003CA8  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 15693  003CAA  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 15694  003CAC  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 15695  003CAE  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 15696  003CB0                     
 15697                           ; BSR set to: 0
 15698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 15699  003CB0  C03F  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
 15700  003CB4  C040  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 15701  003CB8  C072  F02F         	movff	vfpfcnvrt@ll,dtoa@d
 15702  003CBC  C073  F030         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 15703  003CC0  C074  F031         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 15704  003CC4  C075  F032         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 15705  003CC8  C076  F033         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 15706  003CCC  C077  F034         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 15707  003CD0  C078  F035         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 15708  003CD4  C079  F036         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 15709  003CD8  ECFC  F017         	call	_dtoa	;wreg free
 15710  003CDC  C02D  F03F         	movff	?_dtoa,?_vfpfcnvrt
 15711  003CE0  C02E  F040         	movff	?_dtoa+1,?_vfpfcnvrt+1
 15712  003CE4  EFC5  F01E         	goto	l1557
 15713  003CE8                     l8796:
 15714                           
 15715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 15716  003CE8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15717  003CEC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15718  003CF0  CFDE FFF6          	movff	postinc2,tblptrl
 15719  003CF4  CFDD FFF7          	movff	postdec2,tblptrh
 15720  003CF8                     	if	0	;tblptru may be non-zero
 15721  003CF8                     	endif
 15722  003CF8                     	if	0	;tblptru may be non-zero
 15723  003CF8                     	endif
 15724  003CF8  0008               	tblrd		*
 15725  003CFA  50F5               	movf	tablat,w,c
 15726  003CFC  0A25               	xorlw	37
 15727  003CFE  A4D8               	btfss	status,2,c
 15728  003D00  EF84  F01E         	goto	u6301
 15729  003D04  EF86  F01E         	goto	u6300
 15730  003D08                     u6301:
 15731  003D08  EF9D  F01E         	goto	l8806
 15732  003D0C                     u6300:
 15733  003D0C                     
 15734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 15735  003D0C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15736  003D10  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15737  003D14  2ADE               	incf	postinc2,f,c
 15738  003D16  0E00               	movlw	0
 15739  003D18  22DD               	addwfc	postdec2,f,c
 15740  003D1A                     
 15741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 15742  003D1A  0E00               	movlw	0
 15743  003D1C  6E13               	movwf	(fputc@c+1)^0,c
 15744  003D1E  0E25               	movlw	37
 15745  003D20  6E12               	movwf	fputc@c^0,c
 15746  003D22  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 15747  003D26  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15748  003D2A  ECE0  F027         	call	_fputc	;wreg free
 15749  003D2E                     l8802:
 15750                           
 15751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 15752  003D2E  0E00               	movlw	0
 15753  003D30  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 15754  003D32  0E01               	movlw	1
 15755  003D34  6E3F               	movwf	?_vfpfcnvrt^0,c
 15756  003D36  EFC5  F01E         	goto	l1557
 15757  003D3A                     l8806:
 15758                           
 15759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 15760  003D3A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15761  003D3E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15762  003D42  2ADE               	incf	postinc2,f,c
 15763  003D44  0E00               	movlw	0
 15764  003D46  22DD               	addwfc	postdec2,f,c
 15765  003D48                     
 15766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 15767  003D48  0E00               	movlw	0
 15768  003D4A  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 15769  003D4C  0E00               	movlw	0
 15770  003D4E  6E3F               	movwf	?_vfpfcnvrt^0,c
 15771  003D50  EFC5  F01E         	goto	l1557
 15772  003D54                     l8812:
 15773                           
 15774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 15775  003D54  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15776  003D58  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15777  003D5C  CFDE FFF6          	movff	postinc2,tblptrl
 15778  003D60  CFDD FFF7          	movff	postdec2,tblptrh
 15779  003D64                     	if	0	;tblptru may be non-zero
 15780  003D64                     	endif
 15781  003D64                     	if	0	;tblptru may be non-zero
 15782  003D64                     	endif
 15783  003D64  0008               	tblrd		*
 15784  003D66  50F5               	movf	tablat,w,c
 15785  003D68  6E12               	movwf	fputc@c^0,c
 15786  003D6A  6A13               	clrf	(fputc@c+1)^0,c
 15787  003D6C  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 15788  003D70  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15789  003D74  ECE0  F027         	call	_fputc	;wreg free
 15790  003D78                     
 15791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 15792  003D78  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15793  003D7C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15794  003D80  2ADE               	incf	postinc2,f,c
 15795  003D82  0E00               	movlw	0
 15796  003D84  22DD               	addwfc	postdec2,f,c
 15797  003D86  EF97  F01E         	goto	l8802
 15798  003D8A                     l1557:
 15799  003D8A  0012               	return		;funcret
 15800  003D8C                     __end_of_vfpfcnvrt:
 15801                           	callstack 0
 15802                           
 15803 ;; *************** function _dtoa *****************
 15804 ;; Defined at:
 15805 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15806 ;; Parameters:    Size  Location     Type
 15807 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
 15808 ;;		 -> sprintf@f(6), 
 15809 ;;  d               8   46[COMRAM] long long 
 15810 ;; Auto vars:     Size  Location     Type
 15811 ;;  n               8    8[BANK0 ] long long 
 15812 ;;  i               2   16[BANK0 ] int 
 15813 ;;  s               2    6[BANK0 ] int 
 15814 ;;  w               2    4[BANK0 ] int 
 15815 ;;  p               2    2[BANK0 ] int 
 15816 ;; Return value:  Size  Location     Type
 15817 ;;                  2   44[COMRAM] int 
 15818 ;; Registers used:
 15819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15820 ;; Tracked objects:
 15821 ;;		On entry : 0/0
 15822 ;;		On exit  : 0/0
 15823 ;;		Unchanged: 0/0
 15824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15825 ;;      Params:        10       0       0       0       0       0       0
 15826 ;;      Locals:         0      18       0       0       0       0       0
 15827 ;;      Temps:          8       0       0       0       0       0       0
 15828 ;;      Totals:        18      18       0       0       0       0       0
 15829 ;;Total ram usage:       36 bytes
 15830 ;; Hardware stack levels used: 1
 15831 ;; Hardware stack levels required when called: 8
 15832 ;; This function calls:
 15833 ;;		___aodiv
 15834 ;;		___aomod
 15835 ;;		_abs
 15836 ;;		_pad
 15837 ;; This function is called by:
 15838 ;;		_vfpfcnvrt
 15839 ;; This function uses a non-reentrant model
 15840 ;;
 15841                           
 15842                           	psect	text59
 15843  002FF8                     __ptext59:
 15844                           	callstack 0
 15845  002FF8                     _dtoa:
 15846                           	callstack 14
 15847  002FF8                     
 15848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 15849  002FF8  C02F  F068         	movff	dtoa@d,dtoa@n
 15850  002FFC  C030  F069         	movff	dtoa@d+1,dtoa@n+1
 15851  003000  C031  F06A         	movff	dtoa@d+2,dtoa@n+2
 15852  003004  C032  F06B         	movff	dtoa@d+3,dtoa@n+3
 15853  003008  C033  F06C         	movff	dtoa@d+4,dtoa@n+4
 15854  00300C  C034  F06D         	movff	dtoa@d+5,dtoa@n+5
 15855  003010  C035  F06E         	movff	dtoa@d+6,dtoa@n+6
 15856  003014  C036  F06F         	movff	dtoa@d+7,dtoa@n+7
 15857  003018                     
 15858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 15859  003018  0100               	movlb	0	; () banked
 15860  00301A  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
 15861  00301C  EF12  F018         	goto	u5791
 15862  003020  EF15  F018         	goto	u5790
 15863  003024                     u5791:
 15864  003024  0E01               	movlw	1
 15865  003026  EF16  F018         	goto	u5800
 15866  00302A                     u5790:
 15867  00302A  0E00               	movlw	0
 15868  00302C                     u5800:
 15869  00302C  6F66               	movwf	dtoa@s& (0+255),b
 15870  00302E  6B67               	clrf	(dtoa@s+1)& (0+255),b
 15871                           
 15872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 15873  003030  5166               	movf	dtoa@s& (0+255),w,b
 15874  003032  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 15875  003034  B4D8               	btfsc	status,2,c
 15876  003036  EF1F  F018         	goto	u5811
 15877  00303A  EF21  F018         	goto	u5810
 15878  00303E                     u5811:
 15879  00303E  EF31  F018         	goto	l8162
 15880  003042                     u5810:
 15881  003042                     
 15882                           ; BSR set to: 0
 15883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 15884  003042  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
 15885  003044  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
 15886  003046  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
 15887  003048  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
 15888  00304A  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
 15889  00304C  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
 15890  00304E  1F69               	comf	(dtoa@n+1)& (0+255),f,b
 15891  003050  6D68               	negf	dtoa@n& (0+255),b
 15892  003052  0E00               	movlw	0
 15893  003054  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
 15894  003056  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
 15895  003058  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
 15896  00305A  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
 15897  00305C  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
 15898  00305E  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
 15899  003060  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
 15900  003062                     l8162:
 15901                           
 15902                           ; BSR set to: 0
 15903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 15904  003062  BE4A               	btfsc	(_prec+1)^0,7,c
 15905  003064  EF36  F018         	goto	u5821
 15906  003068  EF38  F018         	goto	u5820
 15907  00306C                     u5821:
 15908  00306C  EF39  F018         	goto	l8166
 15909  003070                     u5820:
 15910  003070                     
 15911                           ; BSR set to: 0
 15912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 15913  003070  924B               	bcf	_flags^0,1,c
 15914  003072                     l8166:
 15915                           
 15916                           ; BSR set to: 0
 15917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 15918  003072  BE4A               	btfsc	(_prec+1)^0,7,c
 15919  003074  EF46  F018         	goto	u5830
 15920  003078  504A               	movf	(_prec+1)^0,w,c
 15921  00307A  E106               	bnz	u5831
 15922  00307C  0449               	decf	_prec^0,w,c
 15923  00307E  B0D8               	btfsc	status,0,c
 15924  003080  EF44  F018         	goto	u5831
 15925  003084  EF46  F018         	goto	u5830
 15926  003088                     u5831:
 15927  003088  EF4C  F018         	goto	l1530
 15928  00308C                     u5830:
 15929  00308C                     
 15930                           ; BSR set to: 0
 15931  00308C  0E00               	movlw	0
 15932  00308E  6F63               	movwf	(dtoa@p+1)& (0+255),b
 15933  003090  0E01               	movlw	1
 15934  003092  6F62               	movwf	dtoa@p& (0+255),b
 15935  003094  EF50  F018         	goto	l1532
 15936  003098                     l1530:
 15937                           
 15938                           ; BSR set to: 0
 15939  003098  C049  F062         	movff	_prec,dtoa@p
 15940  00309C  C04A  F063         	movff	_prec+1,dtoa@p+1
 15941  0030A0                     l1532:
 15942                           
 15943                           ; BSR set to: 0
 15944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 15945  0030A0  C047  F064         	movff	_width,dtoa@w
 15946  0030A4  C048  F065         	movff	_width+1,dtoa@w+1
 15947  0030A8                     
 15948                           ; BSR set to: 0
 15949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 15950  0030A8  5166               	movf	dtoa@s& (0+255),w,b
 15951  0030AA  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 15952  0030AC  A4D8               	btfss	status,2,c
 15953  0030AE  EF5B  F018         	goto	u5841
 15954  0030B2  EF5D  F018         	goto	u5840
 15955  0030B6                     u5841:
 15956  0030B6  EF64  F018         	goto	l8174
 15957  0030BA                     u5840:
 15958  0030BA                     
 15959                           ; BSR set to: 0
 15960  0030BA  A44B               	btfss	_flags^0,2,c
 15961  0030BC  EF62  F018         	goto	u5851
 15962  0030C0  EF64  F018         	goto	u5850
 15963  0030C4                     u5851:
 15964  0030C4  EF67  F018         	goto	l8176
 15965  0030C8                     u5850:
 15966  0030C8                     l8174:
 15967                           
 15968                           ; BSR set to: 0
 15969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 15970  0030C8  0764               	decf	dtoa@w& (0+255),f,b
 15971  0030CA  A0D8               	btfss	status,0,c
 15972  0030CC  0765               	decf	(dtoa@w+1)& (0+255),f,b
 15973  0030CE                     l8176:
 15974                           
 15975                           ; BSR set to: 0
 15976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 15977  0030CE  0E00               	movlw	0
 15978  0030D0  6F71               	movwf	(dtoa@i+1)& (0+255),b
 15979  0030D2  0E1F               	movlw	31
 15980  0030D4  6F70               	movwf	dtoa@i& (0+255),b
 15981  0030D6                     
 15982                           ; BSR set to: 0
 15983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 15984  0030D6  0E00               	movlw	0
 15985  0030D8  6FFF               	movwf	(_dbuf+31)& (0+255),b
 15986                           
 15987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15988  0030DA  EFEC  F018         	goto	l8190
 15989  0030DE                     l8180:
 15990                           
 15991                           ; BSR set to: 0
 15992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 15993  0030DE  0770               	decf	dtoa@i& (0+255),f,b
 15994  0030E0  A0D8               	btfss	status,0,c
 15995  0030E2  0771               	decf	(dtoa@i+1)& (0+255),f,b
 15996  0030E4                     
 15997                           ; BSR set to: 0
 15998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 15999  0030E4  0EE0               	movlw	low _dbuf
 16000  0030E6  2570               	addwf	dtoa@i& (0+255),w,b
 16001  0030E8  6ED9               	movwf	fsr2l,c
 16002  0030EA  0E00               	movlw	high _dbuf
 16003  0030EC  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16004  0030EE  6EDA               	movwf	fsr2h,c
 16005  0030F0  C068  F012         	movff	dtoa@n,___aomod@dividend
 16006  0030F4  C069  F013         	movff	dtoa@n+1,___aomod@dividend+1
 16007  0030F8  C06A  F014         	movff	dtoa@n+2,___aomod@dividend+2
 16008  0030FC  C06B  F015         	movff	dtoa@n+3,___aomod@dividend+3
 16009  003100  C06C  F016         	movff	dtoa@n+4,___aomod@dividend+4
 16010  003104  C06D  F017         	movff	dtoa@n+5,___aomod@dividend+5
 16011  003108  C06E  F018         	movff	dtoa@n+6,___aomod@dividend+6
 16012  00310C  C06F  F019         	movff	dtoa@n+7,___aomod@dividend+7
 16013  003110  0E0A               	movlw	10
 16014  003112  6E1A               	movwf	___aomod@divisor^0,c
 16015  003114  0E00               	movlw	0
 16016  003116  6E1B               	movwf	(___aomod@divisor+1)^0,c
 16017  003118  0E00               	movlw	0
 16018  00311A  6E1C               	movwf	(___aomod@divisor+2)^0,c
 16019  00311C  0E00               	movlw	0
 16020  00311E  6E1D               	movwf	(___aomod@divisor+3)^0,c
 16021  003120  0E00               	movlw	0
 16022  003122  6E1E               	movwf	(___aomod@divisor+4)^0,c
 16023  003124  0E00               	movlw	0
 16024  003126  6E1F               	movwf	(___aomod@divisor+5)^0,c
 16025  003128  0E00               	movlw	0
 16026  00312A  6E20               	movwf	(___aomod@divisor+6)^0,c
 16027  00312C  0E00               	movlw	0
 16028  00312E  6E21               	movwf	(___aomod@divisor+7)^0,c
 16029  003130  EC8A  F01F         	call	___aomod	;wreg free
 16030  003134  C012  F037         	movff	?___aomod,??_dtoa
 16031  003138  C013  F038         	movff	?___aomod+1,??_dtoa+1
 16032  00313C  C014  F039         	movff	?___aomod+2,??_dtoa+2
 16033  003140  C015  F03A         	movff	?___aomod+3,??_dtoa+3
 16034  003144  C016  F03B         	movff	?___aomod+4,??_dtoa+4
 16035  003148  C017  F03C         	movff	?___aomod+5,??_dtoa+5
 16036  00314C  C018  F03D         	movff	?___aomod+6,??_dtoa+6
 16037  003150  C019  F03E         	movff	?___aomod+7,??_dtoa+7
 16038  003154  C037  F024         	movff	??_dtoa,abs@a
 16039  003158  C039  F025         	movff	??_dtoa+2,abs@a+1
 16040  00315C  ECDF  F030         	call	_abs	;wreg free
 16041  003160  5024               	movf	?_abs^0,w,c
 16042  003162  0F30               	addlw	48
 16043  003164  6EDF               	movwf	indf2,c
 16044  003166                     
 16045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 16046  003166  0100               	movlb	0	; () banked
 16047  003168  0762               	decf	dtoa@p& (0+255),f,b
 16048  00316A  A0D8               	btfss	status,0,c
 16049  00316C  0763               	decf	(dtoa@p+1)& (0+255),f,b
 16050  00316E                     
 16051                           ; BSR set to: 0
 16052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 16053  00316E  0764               	decf	dtoa@w& (0+255),f,b
 16054  003170  A0D8               	btfss	status,0,c
 16055  003172  0765               	decf	(dtoa@w+1)& (0+255),f,b
 16056  003174                     
 16057                           ; BSR set to: 0
 16058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 16059  003174  C068  F012         	movff	dtoa@n,___aodiv@dividend
 16060  003178  C069  F013         	movff	dtoa@n+1,___aodiv@dividend+1
 16061  00317C  C06A  F014         	movff	dtoa@n+2,___aodiv@dividend+2
 16062  003180  C06B  F015         	movff	dtoa@n+3,___aodiv@dividend+3
 16063  003184  C06C  F016         	movff	dtoa@n+4,___aodiv@dividend+4
 16064  003188  C06D  F017         	movff	dtoa@n+5,___aodiv@dividend+5
 16065  00318C  C06E  F018         	movff	dtoa@n+6,___aodiv@dividend+6
 16066  003190  C06F  F019         	movff	dtoa@n+7,___aodiv@dividend+7
 16067  003194  0E0A               	movlw	10
 16068  003196  6E1A               	movwf	___aodiv@divisor^0,c
 16069  003198  0E00               	movlw	0
 16070  00319A  6E1B               	movwf	(___aodiv@divisor+1)^0,c
 16071  00319C  0E00               	movlw	0
 16072  00319E  6E1C               	movwf	(___aodiv@divisor+2)^0,c
 16073  0031A0  0E00               	movlw	0
 16074  0031A2  6E1D               	movwf	(___aodiv@divisor+3)^0,c
 16075  0031A4  0E00               	movlw	0
 16076  0031A6  6E1E               	movwf	(___aodiv@divisor+4)^0,c
 16077  0031A8  0E00               	movlw	0
 16078  0031AA  6E1F               	movwf	(___aodiv@divisor+5)^0,c
 16079  0031AC  0E00               	movlw	0
 16080  0031AE  6E20               	movwf	(___aodiv@divisor+6)^0,c
 16081  0031B0  0E00               	movlw	0
 16082  0031B2  6E21               	movwf	(___aodiv@divisor+7)^0,c
 16083  0031B4  ECC6  F01E         	call	___aodiv	;wreg free
 16084  0031B8  C012  F068         	movff	?___aodiv,dtoa@n
 16085  0031BC  C013  F069         	movff	?___aodiv+1,dtoa@n+1
 16086  0031C0  C014  F06A         	movff	?___aodiv+2,dtoa@n+2
 16087  0031C4  C015  F06B         	movff	?___aodiv+3,dtoa@n+3
 16088  0031C8  C016  F06C         	movff	?___aodiv+4,dtoa@n+4
 16089  0031CC  C017  F06D         	movff	?___aodiv+5,dtoa@n+5
 16090  0031D0  C018  F06E         	movff	?___aodiv+6,dtoa@n+6
 16091  0031D4  C019  F06F         	movff	?___aodiv+7,dtoa@n+7
 16092  0031D8                     l8190:
 16093                           
 16094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16095  0031D8  0100               	movlb	0	; () banked
 16096  0031DA  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
 16097  0031DC  EFF8  F018         	goto	u5861
 16098  0031E0  5171               	movf	(dtoa@i+1)& (0+255),w,b
 16099  0031E2  E108               	bnz	u5860
 16100  0031E4  0570               	decf	dtoa@i& (0+255),w,b
 16101  0031E6  A0D8               	btfss	status,0,c
 16102  0031E8  EFF8  F018         	goto	u5861
 16103  0031EC  EFFA  F018         	goto	u5860
 16104  0031F0                     u5861:
 16105  0031F0  EF2A  F019         	goto	l8200
 16106  0031F4                     u5860:
 16107  0031F4                     
 16108                           ; BSR set to: 0
 16109  0031F4  5168               	movf	dtoa@n& (0+255),w,b
 16110  0031F6  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
 16111  0031F8  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
 16112  0031FA  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
 16113  0031FC  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
 16114  0031FE  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
 16115  003200  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
 16116  003202  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
 16117  003204  A4D8               	btfss	status,2,c
 16118  003206  EF07  F019         	goto	u5871
 16119  00320A  EF09  F019         	goto	u5870
 16120  00320E                     u5871:
 16121  00320E  EF6F  F018         	goto	l8180
 16122  003212                     u5870:
 16123  003212                     
 16124                           ; BSR set to: 0
 16125  003212  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
 16126  003214  EF16  F019         	goto	u5880
 16127  003218  5163               	movf	(dtoa@p+1)& (0+255),w,b
 16128  00321A  E106               	bnz	u5881
 16129  00321C  0562               	decf	dtoa@p& (0+255),w,b
 16130  00321E  B0D8               	btfsc	status,0,c
 16131  003220  EF14  F019         	goto	u5881
 16132  003224  EF16  F019         	goto	u5880
 16133  003228                     u5881:
 16134  003228  EF6F  F018         	goto	l8180
 16135  00322C                     u5880:
 16136  00322C                     
 16137                           ; BSR set to: 0
 16138  00322C  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
 16139  00322E  EF21  F019         	goto	u5891
 16140  003232  5165               	movf	(dtoa@w+1)& (0+255),w,b
 16141  003234  E108               	bnz	u5890
 16142  003236  0564               	decf	dtoa@w& (0+255),w,b
 16143  003238  A0D8               	btfss	status,0,c
 16144  00323A  EF21  F019         	goto	u5891
 16145  00323E  EF23  F019         	goto	u5890
 16146  003242                     u5891:
 16147  003242  EF2A  F019         	goto	l8200
 16148  003246                     u5890:
 16149  003246                     
 16150                           ; BSR set to: 0
 16151  003246  B24B               	btfsc	_flags^0,1,c
 16152  003248  EF28  F019         	goto	u5901
 16153  00324C  EF2A  F019         	goto	u5900
 16154  003250                     u5901:
 16155  003250  EF6F  F018         	goto	l8180
 16156  003254                     u5900:
 16157  003254                     l8200:
 16158                           
 16159                           ; BSR set to: 0
 16160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 16161  003254  5166               	movf	dtoa@s& (0+255),w,b
 16162  003256  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16163  003258  A4D8               	btfss	status,2,c
 16164  00325A  EF31  F019         	goto	u5911
 16165  00325E  EF33  F019         	goto	u5910
 16166  003262                     u5911:
 16167  003262  EF3A  F019         	goto	l8204
 16168  003266                     u5910:
 16169  003266                     
 16170                           ; BSR set to: 0
 16171  003266  A44B               	btfss	_flags^0,2,c
 16172  003268  EF38  F019         	goto	u5921
 16173  00326C  EF3A  F019         	goto	u5920
 16174  003270                     u5921:
 16175  003270  EF58  F019         	goto	l8214
 16176  003274                     u5920:
 16177  003274                     l8204:
 16178                           
 16179                           ; BSR set to: 0
 16180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 16181  003274  0770               	decf	dtoa@i& (0+255),f,b
 16182  003276  A0D8               	btfss	status,0,c
 16183  003278  0771               	decf	(dtoa@i+1)& (0+255),f,b
 16184  00327A                     
 16185                           ; BSR set to: 0
 16186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 16187  00327A  5166               	movf	dtoa@s& (0+255),w,b
 16188  00327C  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16189  00327E  A4D8               	btfss	status,2,c
 16190  003280  EF44  F019         	goto	u5931
 16191  003284  EF46  F019         	goto	u5930
 16192  003288                     u5931:
 16193  003288  EF4C  F019         	goto	l8210
 16194  00328C                     u5930:
 16195  00328C                     
 16196                           ; BSR set to: 0
 16197  00328C  0E00               	movlw	0
 16198  00328E  6F61               	movwf	(_dtoa$4938+1)& (0+255),b
 16199  003290  0E2B               	movlw	43
 16200  003292  6F60               	movwf	_dtoa$4938& (0+255),b
 16201  003294  EF50  F019         	goto	l8212
 16202  003298                     l8210:
 16203                           
 16204                           ; BSR set to: 0
 16205  003298  0E00               	movlw	0
 16206  00329A  6F61               	movwf	(_dtoa$4938+1)& (0+255),b
 16207  00329C  0E2D               	movlw	45
 16208  00329E  6F60               	movwf	_dtoa$4938& (0+255),b
 16209  0032A0                     l8212:
 16210                           
 16211                           ; BSR set to: 0
 16212  0032A0  0EE0               	movlw	low _dbuf
 16213  0032A2  2570               	addwf	dtoa@i& (0+255),w,b
 16214  0032A4  6ED9               	movwf	fsr2l,c
 16215  0032A6  0E00               	movlw	high _dbuf
 16216  0032A8  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16217  0032AA  6EDA               	movwf	fsr2h,c
 16218  0032AC  C060  FFDF         	movff	_dtoa$4938,indf2
 16219  0032B0                     l8214:
 16220                           
 16221                           ; BSR set to: 0
 16222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 16223  0032B0  C02D  F022         	movff	dtoa@fp,pad@fp
 16224  0032B4  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
 16225  0032B8  0EE0               	movlw	low _dbuf
 16226  0032BA  2570               	addwf	dtoa@i& (0+255),w,b
 16227  0032BC  6E24               	movwf	pad@buf^0,c
 16228  0032BE  0E00               	movlw	high _dbuf
 16229  0032C0  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16230  0032C2  6E25               	movwf	(pad@buf+1)^0,c
 16231  0032C4  C064  F026         	movff	dtoa@w,pad@p
 16232  0032C8  C065  F027         	movff	dtoa@w+1,pad@p+1
 16233  0032CC  EC0B  F029         	call	_pad	;wreg free
 16234  0032D0  C022  F02D         	movff	?_pad,?_dtoa
 16235  0032D4  C023  F02E         	movff	?_pad+1,?_dtoa+1
 16236  0032D8  0012               	return		;funcret
 16237  0032DA                     __end_of_dtoa:
 16238                           	callstack 0
 16239                           
 16240 ;; *************** function _pad *****************
 16241 ;; Defined at:
 16242 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16243 ;; Parameters:    Size  Location     Type
 16244 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 16245 ;;		 -> sprintf@f(6), 
 16246 ;;  buf             2   35[COMRAM] PTR unsigned char 
 16247 ;;		 -> dbuf(32), 
 16248 ;;  p               2   37[COMRAM] int 
 16249 ;; Auto vars:     Size  Location     Type
 16250 ;;  w               2   42[COMRAM] int 
 16251 ;;  i               2   40[COMRAM] int 
 16252 ;; Return value:  Size  Location     Type
 16253 ;;                  2   33[COMRAM] int 
 16254 ;; Registers used:
 16255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16256 ;; Tracked objects:
 16257 ;;		On entry : 0/0
 16258 ;;		On exit  : 0/0
 16259 ;;		Unchanged: 0/0
 16260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16261 ;;      Params:         6       0       0       0       0       0       0
 16262 ;;      Locals:         4       0       0       0       0       0       0
 16263 ;;      Temps:          1       0       0       0       0       0       0
 16264 ;;      Totals:        11       0       0       0       0       0       0
 16265 ;;Total ram usage:       11 bytes
 16266 ;; Hardware stack levels used: 1
 16267 ;; Hardware stack levels required when called: 7
 16268 ;; This function calls:
 16269 ;;		_fputc
 16270 ;;		_fputs
 16271 ;;		_strlen
 16272 ;; This function is called by:
 16273 ;;		_dtoa
 16274 ;; This function uses a non-reentrant model
 16275 ;;
 16276                           
 16277                           	psect	text60
 16278  005216                     __ptext60:
 16279                           	callstack 0
 16280  005216                     _pad:
 16281                           	callstack 14
 16282  005216                     
 16283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 16284  005216  A04B               	btfss	_flags^0,0,c
 16285  005218  EF10  F029         	goto	u5741
 16286  00521C  EF12  F029         	goto	u5740
 16287  005220                     u5741:
 16288  005220  EF1C  F029         	goto	l8134
 16289  005224                     u5740:
 16290  005224                     
 16291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 16292  005224  C024  F01B         	movff	pad@buf,fputs@s
 16293  005228  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16294  00522C  C022  F01D         	movff	pad@fp,fputs@fp
 16295  005230  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16296  005234  ECBD  F030         	call	_fputs	;wreg free
 16297  005238                     l8134:
 16298                           
 16299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 16300  005238  BE27               	btfsc	(pad@p+1)^0,7,c
 16301  00523A  EF21  F029         	goto	u5751
 16302  00523E  EF23  F029         	goto	u5750
 16303  005242                     u5751:
 16304  005242  EF29  F029         	goto	l8138
 16305  005246                     u5750:
 16306  005246  C026  F02B         	movff	pad@p,pad@w
 16307  00524A  C027  F02C         	movff	pad@p+1,pad@w+1
 16308  00524E  EF2D  F029         	goto	l1519
 16309  005252                     l8138:
 16310  005252  0E00               	movlw	0
 16311  005254  6E2C               	movwf	(pad@w+1)^0,c
 16312  005256  0E00               	movlw	0
 16313  005258  6E2B               	movwf	pad@w^0,c
 16314  00525A                     l1519:
 16315                           
 16316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 16317  00525A  0E00               	movlw	0
 16318  00525C  6E2A               	movwf	(pad@i+1)^0,c
 16319  00525E  0E00               	movlw	0
 16320  005260  6E29               	movwf	pad@i^0,c
 16321                           
 16322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16323  005262  EF3F  F029         	goto	l8144
 16324  005266                     l8140:
 16325                           
 16326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 16327  005266  0E00               	movlw	0
 16328  005268  6E13               	movwf	(fputc@c+1)^0,c
 16329  00526A  0E20               	movlw	32
 16330  00526C  6E12               	movwf	fputc@c^0,c
 16331  00526E  C022  F014         	movff	pad@fp,fputc@fp
 16332  005272  C023  F015         	movff	pad@fp+1,fputc@fp+1
 16333  005276  ECE0  F027         	call	_fputc	;wreg free
 16334  00527A                     
 16335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 16336  00527A  4A29               	infsnz	pad@i^0,f,c
 16337  00527C  2A2A               	incf	(pad@i+1)^0,f,c
 16338  00527E                     l8144:
 16339                           
 16340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16341  00527E  502B               	movf	pad@w^0,w,c
 16342  005280  5C29               	subwf	pad@i^0,w,c
 16343  005282  502A               	movf	(pad@i+1)^0,w,c
 16344  005284  0A80               	xorlw	128
 16345  005286  6E28               	movwf	??_pad^0,c
 16346  005288  502C               	movf	(pad@w+1)^0,w,c
 16347  00528A  0A80               	xorlw	128
 16348  00528C  5828               	subwfb	??_pad^0,w,c
 16349  00528E  A0D8               	btfss	status,0,c
 16350  005290  EF4C  F029         	goto	u5761
 16351  005294  EF4E  F029         	goto	u5760
 16352  005298                     u5761:
 16353  005298  EF33  F029         	goto	l8140
 16354  00529C                     u5760:
 16355  00529C                     
 16356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 16357  00529C  B04B               	btfsc	_flags^0,0,c
 16358  00529E  EF53  F029         	goto	u5771
 16359  0052A2  EF55  F029         	goto	u5770
 16360  0052A6                     u5771:
 16361  0052A6  EF5F  F029         	goto	l8148
 16362  0052AA                     u5770:
 16363  0052AA                     
 16364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 16365  0052AA  C024  F01B         	movff	pad@buf,fputs@s
 16366  0052AE  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16367  0052B2  C022  F01D         	movff	pad@fp,fputs@fp
 16368  0052B6  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16369  0052BA  ECBD  F030         	call	_fputs	;wreg free
 16370  0052BE                     l8148:
 16371                           
 16372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 16373  0052BE  C024  F012         	movff	pad@buf,strlen@s
 16374  0052C2  C025  F013         	movff	pad@buf+1,strlen@s+1
 16375  0052C6  EC74  F030         	call	_strlen	;wreg free
 16376  0052CA  502B               	movf	pad@w^0,w,c
 16377  0052CC  2412               	addwf	?_strlen^0,w,c
 16378  0052CE  6E22               	movwf	?_pad^0,c
 16379  0052D0  502C               	movf	(pad@w+1)^0,w,c
 16380  0052D2  2013               	addwfc	(?_strlen+1)^0,w,c
 16381  0052D4  6E23               	movwf	(?_pad+1)^0,c
 16382  0052D6  0012               	return		;funcret
 16383  0052D8                     __end_of_pad:
 16384                           	callstack 0
 16385                           
 16386 ;; *************** function _fputs *****************
 16387 ;; Defined at:
 16388 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 16389 ;; Parameters:    Size  Location     Type
 16390 ;;  s               2   26[COMRAM] PTR const unsigned char 
 16391 ;;		 -> dbuf(32), 
 16392 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 16393 ;;		 -> sprintf@f(6), 
 16394 ;; Auto vars:     Size  Location     Type
 16395 ;;  i               2   31[COMRAM] int 
 16396 ;;  c               1   30[COMRAM] unsigned char 
 16397 ;; Return value:  Size  Location     Type
 16398 ;;                  2   26[COMRAM] int 
 16399 ;; Registers used:
 16400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16401 ;; Tracked objects:
 16402 ;;		On entry : 0/0
 16403 ;;		On exit  : 0/0
 16404 ;;		Unchanged: 0/0
 16405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16406 ;;      Params:         4       0       0       0       0       0       0
 16407 ;;      Locals:         3       0       0       0       0       0       0
 16408 ;;      Temps:          0       0       0       0       0       0       0
 16409 ;;      Totals:         7       0       0       0       0       0       0
 16410 ;;Total ram usage:        7 bytes
 16411 ;; Hardware stack levels used: 1
 16412 ;; Hardware stack levels required when called: 6
 16413 ;; This function calls:
 16414 ;;		_fputc
 16415 ;; This function is called by:
 16416 ;;		_pad
 16417 ;; This function uses a non-reentrant model
 16418 ;;
 16419                           
 16420                           	psect	text61
 16421  00617A                     __ptext61:
 16422                           	callstack 0
 16423  00617A                     _fputs:
 16424                           	callstack 14
 16425  00617A  0E00               	movlw	0
 16426  00617C  6E21               	movwf	(fputs@i+1)^0,c
 16427  00617E  0E00               	movlw	0
 16428  006180  6E20               	movwf	fputs@i^0,c
 16429  006182  EFCE  F030         	goto	l8048
 16430  006186                     l8044:
 16431  006186  C01F  F012         	movff	fputs@c,fputc@c
 16432  00618A  6A13               	clrf	(fputc@c+1)^0,c
 16433  00618C  C01D  F014         	movff	fputs@fp,fputc@fp
 16434  006190  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
 16435  006194  ECE0  F027         	call	_fputc	;wreg free
 16436  006198  4A20               	infsnz	fputs@i^0,f,c
 16437  00619A  2A21               	incf	(fputs@i+1)^0,f,c
 16438  00619C                     l8048:
 16439  00619C  5020               	movf	fputs@i^0,w,c
 16440  00619E  241B               	addwf	fputs@s^0,w,c
 16441  0061A0  6ED9               	movwf	fsr2l,c
 16442  0061A2  5021               	movf	(fputs@i+1)^0,w,c
 16443  0061A4  201C               	addwfc	(fputs@s+1)^0,w,c
 16444  0061A6  6EDA               	movwf	fsr2h,c
 16445  0061A8  50DF               	movf	indf2,w,c
 16446  0061AA  6E1F               	movwf	fputs@c^0,c
 16447  0061AC  501F               	movf	fputs@c^0,w,c
 16448  0061AE  A4D8               	btfss	status,2,c
 16449  0061B0  EFDC  F030         	goto	u5601
 16450  0061B4  EFDE  F030         	goto	u5600
 16451  0061B8                     u5601:
 16452  0061B8  EFC3  F030         	goto	l8044
 16453  0061BC                     u5600:
 16454  0061BC  0012               	return		;funcret
 16455  0061BE                     __end_of_fputs:
 16456                           	callstack 0
 16457                           
 16458 ;; *************** function _fputc *****************
 16459 ;; Defined at:
 16460 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 16461 ;; Parameters:    Size  Location     Type
 16462 ;;  c               2   17[COMRAM] int 
 16463 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 16464 ;;		 -> sprintf@f(6), 
 16465 ;; Auto vars:     Size  Location     Type
 16466 ;;		None
 16467 ;; Return value:  Size  Location     Type
 16468 ;;                  2   17[COMRAM] int 
 16469 ;; Registers used:
 16470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16471 ;; Tracked objects:
 16472 ;;		On entry : 0/0
 16473 ;;		On exit  : 0/0
 16474 ;;		Unchanged: 0/0
 16475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16476 ;;      Params:         4       0       0       0       0       0       0
 16477 ;;      Locals:         0       0       0       0       0       0       0
 16478 ;;      Temps:          5       0       0       0       0       0       0
 16479 ;;      Totals:         9       0       0       0       0       0       0
 16480 ;;Total ram usage:        9 bytes
 16481 ;; Hardware stack levels used: 1
 16482 ;; Hardware stack levels required when called: 5
 16483 ;; This function calls:
 16484 ;;		_putch
 16485 ;; This function is called by:
 16486 ;;		_pad
 16487 ;;		_vfpfcnvrt
 16488 ;;		_fputs
 16489 ;; This function uses a non-reentrant model
 16490 ;;
 16491                           
 16492                           	psect	text62
 16493  004FC0                     __ptext62:
 16494                           	callstack 0
 16495  004FC0                     _fputc:
 16496                           	callstack 17
 16497  004FC0  5014               	movf	fputc@fp^0,w,c
 16498  004FC2  1015               	iorwf	(fputc@fp+1)^0,w,c
 16499  004FC4  B4D8               	btfsc	status,2,c
 16500  004FC6  EFE7  F027         	goto	u5541
 16501  004FCA  EFE9  F027         	goto	u5540
 16502  004FCE                     u5541:
 16503  004FCE  EFF2  F027         	goto	l8022
 16504  004FD2                     u5540:
 16505  004FD2  5014               	movf	fputc@fp^0,w,c
 16506  004FD4  1015               	iorwf	(fputc@fp+1)^0,w,c
 16507  004FD6  A4D8               	btfss	status,2,c
 16508  004FD8  EFF0  F027         	goto	u5551
 16509  004FDC  EFF2  F027         	goto	u5550
 16510  004FE0                     u5551:
 16511  004FE0  EFF7  F027         	goto	l8024
 16512  004FE4                     u5550:
 16513  004FE4                     l8022:
 16514  004FE4  5012               	movf	fputc@c^0,w,c
 16515  004FE6  EC29  F032         	call	_putch
 16516  004FEA  EF44  F028         	goto	l1583
 16517  004FEE                     l8024:
 16518  004FEE  EE20 F004          	lfsr	2,4
 16519  004FF2  5014               	movf	fputc@fp^0,w,c
 16520  004FF4  26D9               	addwf	fsr2l,f,c
 16521  004FF6  5015               	movf	(fputc@fp+1)^0,w,c
 16522  004FF8  22DA               	addwfc	fsr2h,f,c
 16523  004FFA  50DE               	movf	postinc2,w,c
 16524  004FFC  10DE               	iorwf	postinc2,w,c
 16525  004FFE  B4D8               	btfsc	status,2,c
 16526  005000  EF04  F028         	goto	u5561
 16527  005004  EF06  F028         	goto	u5560
 16528  005008                     u5561:
 16529  005008  EF21  F028         	goto	l8028
 16530  00500C                     u5560:
 16531  00500C  EE20 F004          	lfsr	2,4
 16532  005010  5014               	movf	fputc@fp^0,w,c
 16533  005012  26D9               	addwf	fsr2l,f,c
 16534  005014  5015               	movf	(fputc@fp+1)^0,w,c
 16535  005016  22DA               	addwfc	fsr2h,f,c
 16536  005018  EE10 F002          	lfsr	1,2
 16537  00501C  5014               	movf	fputc@fp^0,w,c
 16538  00501E  26E1               	addwf	fsr1l,f,c
 16539  005020  5015               	movf	(fputc@fp+1)^0,w,c
 16540  005022  22E2               	addwfc	fsr1h,f,c
 16541  005024  50DE               	movf	postinc2,w,c
 16542  005026  5CE6               	subwf	postinc1,w,c
 16543  005028  50E6               	movf	postinc1,w,c
 16544  00502A  0A80               	xorlw	128
 16545  00502C  6E1A               	movwf	(??_fputc+4)^0,c
 16546  00502E  50DE               	movf	postinc2,w,c
 16547  005030  0A80               	xorlw	128
 16548  005032  581A               	subwfb	(??_fputc+4)^0,w,c
 16549  005034  B0D8               	btfsc	status,0,c
 16550  005036  EF1F  F028         	goto	u5571
 16551  00503A  EF21  F028         	goto	u5570
 16552  00503E                     u5571:
 16553  00503E  EF44  F028         	goto	l1583
 16554  005042                     u5570:
 16555  005042                     l8028:
 16556  005042  EE20 F002          	lfsr	2,2
 16557  005046  5014               	movf	fputc@fp^0,w,c
 16558  005048  26D9               	addwf	fsr2l,f,c
 16559  00504A  5015               	movf	(fputc@fp+1)^0,w,c
 16560  00504C  22DA               	addwfc	fsr2h,f,c
 16561  00504E  CFDE F016          	movff	postinc2,??_fputc
 16562  005052  CFDD F017          	movff	postdec2,??_fputc+1
 16563  005056  C014  FFD9         	movff	fputc@fp,fsr2l
 16564  00505A  C015  FFDA         	movff	fputc@fp+1,fsr2h
 16565  00505E  CFDE F018          	movff	postinc2,??_fputc+2
 16566  005062  CFDD F019          	movff	postdec2,??_fputc+3
 16567  005066  5016               	movf	??_fputc^0,w,c
 16568  005068  2418               	addwf	(??_fputc+2)^0,w,c
 16569  00506A  6ED9               	movwf	fsr2l,c
 16570  00506C  5017               	movf	(??_fputc+1)^0,w,c
 16571  00506E  2019               	addwfc	(??_fputc+3)^0,w,c
 16572  005070  6EDA               	movwf	fsr2h,c
 16573  005072  C012  FFDF         	movff	fputc@c,indf2
 16574  005076  EE20 F002          	lfsr	2,2
 16575  00507A  5014               	movf	fputc@fp^0,w,c
 16576  00507C  26D9               	addwf	fsr2l,f,c
 16577  00507E  5015               	movf	(fputc@fp+1)^0,w,c
 16578  005080  22DA               	addwfc	fsr2h,f,c
 16579  005082  2ADE               	incf	postinc2,f,c
 16580  005084  0E00               	movlw	0
 16581  005086  22DD               	addwfc	postdec2,f,c
 16582  005088                     l1583:
 16583  005088  0012               	return		;funcret
 16584  00508A                     __end_of_fputc:
 16585                           	callstack 0
 16586                           
 16587 ;; *************** function _putch *****************
 16588 ;; Defined at:
 16589 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 16590 ;; Parameters:    Size  Location     Type
 16591 ;;  c               1    wreg     unsigned char 
 16592 ;; Auto vars:     Size  Location     Type
 16593 ;;  c               1    0[COMRAM] unsigned char 
 16594 ;; Return value:  Size  Location     Type
 16595 ;;                  1    wreg      void 
 16596 ;; Registers used:
 16597 ;;		wreg
 16598 ;; Tracked objects:
 16599 ;;		On entry : 0/0
 16600 ;;		On exit  : 0/0
 16601 ;;		Unchanged: 0/0
 16602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16603 ;;      Params:         0       0       0       0       0       0       0
 16604 ;;      Locals:         0       0       0       0       0       0       0
 16605 ;;      Temps:          0       0       0       0       0       0       0
 16606 ;;      Totals:         0       0       0       0       0       0       0
 16607 ;;Total ram usage:        0 bytes
 16608 ;; Hardware stack levels used: 1
 16609 ;; Hardware stack levels required when called: 4
 16610 ;; This function calls:
 16611 ;;		Nothing
 16612 ;; This function is called by:
 16613 ;;		_fputc
 16614 ;; This function uses a non-reentrant model
 16615 ;;
 16616                           
 16617                           	psect	text63
 16618  006452                     __ptext63:
 16619                           	callstack 0
 16620  006452                     _putch:
 16621                           	callstack 17
 16622  006452  0012               	return		;funcret
 16623  006454                     __end_of_putch:
 16624                           	callstack 0
 16625                           
 16626 ;; *************** function _abs *****************
 16627 ;; Defined at:
 16628 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 16629 ;; Parameters:    Size  Location     Type
 16630 ;;  a               2   35[COMRAM] int 
 16631 ;; Auto vars:     Size  Location     Type
 16632 ;;		None
 16633 ;; Return value:  Size  Location     Type
 16634 ;;                  2   35[COMRAM] int 
 16635 ;; Registers used:
 16636 ;;		wreg, status,2, status,0
 16637 ;; Tracked objects:
 16638 ;;		On entry : 0/0
 16639 ;;		On exit  : 0/0
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16642 ;;      Params:         2       0       0       0       0       0       0
 16643 ;;      Locals:         0       0       0       0       0       0       0
 16644 ;;      Temps:          2       0       0       0       0       0       0
 16645 ;;      Totals:         4       0       0       0       0       0       0
 16646 ;;Total ram usage:        4 bytes
 16647 ;; Hardware stack levels used: 1
 16648 ;; Hardware stack levels required when called: 4
 16649 ;; This function calls:
 16650 ;;		Nothing
 16651 ;; This function is called by:
 16652 ;;		_dtoa
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           
 16656                           	psect	text64
 16657  0061BE                     __ptext64:
 16658                           	callstack 0
 16659  0061BE                     _abs:
 16660                           	callstack 17
 16661  0061BE  BE25               	btfsc	(abs@a+1)^0,7,c
 16662  0061C0  EFEC  F030         	goto	u5780
 16663  0061C4  5025               	movf	(abs@a+1)^0,w,c
 16664  0061C6  E106               	bnz	u5781
 16665  0061C8  0424               	decf	abs@a^0,w,c
 16666  0061CA  B0D8               	btfsc	status,0,c
 16667  0061CC  EFEA  F030         	goto	u5781
 16668  0061D0  EFEC  F030         	goto	u5780
 16669  0061D4                     u5781:
 16670  0061D4  EFFA  F030         	goto	l1568
 16671  0061D8                     u5780:
 16672  0061D8  C024  F026         	movff	abs@a,??_abs
 16673  0061DC  C025  F027         	movff	abs@a+1,??_abs+1
 16674  0061E0  1E26               	comf	??_abs^0,f,c
 16675  0061E2  1E27               	comf	(??_abs+1)^0,f,c
 16676  0061E4  4A26               	infsnz	??_abs^0,f,c
 16677  0061E6  2A27               	incf	(??_abs+1)^0,f,c
 16678  0061E8  C026  F024         	movff	??_abs,?_abs
 16679  0061EC  C027  F025         	movff	??_abs+1,?_abs+1
 16680  0061F0  EFFE  F030         	goto	l1571
 16681  0061F4                     l1568:
 16682  0061F4  C024  F024         	movff	abs@a,?_abs
 16683  0061F8  C025  F025         	movff	abs@a+1,?_abs+1
 16684  0061FC                     l1571:
 16685  0061FC  0012               	return		;funcret
 16686  0061FE                     __end_of_abs:
 16687                           	callstack 0
 16688                           
 16689 ;; *************** function ___aomod *****************
 16690 ;; Defined at:
 16691 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 16692 ;; Parameters:    Size  Location     Type
 16693 ;;  dividend        8   17[COMRAM] long long 
 16694 ;;  divisor         8   25[COMRAM] long long 
 16695 ;; Auto vars:     Size  Location     Type
 16696 ;;  sign            1   34[COMRAM] unsigned char 
 16697 ;;  counter         1   33[COMRAM] unsigned char 
 16698 ;; Return value:  Size  Location     Type
 16699 ;;                  8   17[COMRAM] long long 
 16700 ;; Registers used:
 16701 ;;		wreg, status,2, status,0
 16702 ;; Tracked objects:
 16703 ;;		On entry : 0/0
 16704 ;;		On exit  : 0/0
 16705 ;;		Unchanged: 0/0
 16706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16707 ;;      Params:        16       0       0       0       0       0       0
 16708 ;;      Locals:         2       0       0       0       0       0       0
 16709 ;;      Temps:          0       0       0       0       0       0       0
 16710 ;;      Totals:        18       0       0       0       0       0       0
 16711 ;;Total ram usage:       18 bytes
 16712 ;; Hardware stack levels used: 1
 16713 ;; Hardware stack levels required when called: 4
 16714 ;; This function calls:
 16715 ;;		Nothing
 16716 ;; This function is called by:
 16717 ;;		_dtoa
 16718 ;; This function uses a non-reentrant model
 16719 ;;
 16720                           
 16721                           	psect	text65
 16722  003F14                     __ptext65:
 16723                           	callstack 0
 16724  003F14                     ___aomod:
 16725                           	callstack 17
 16726  003F14  0E00               	movlw	0
 16727  003F16  6E23               	movwf	___aomod@sign^0,c
 16728  003F18  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
 16729  003F1A  EF93  F01F         	goto	u5680
 16730  003F1E  EF91  F01F         	goto	u5681
 16731  003F22                     u5681:
 16732  003F22  EFA5  F01F         	goto	l8102
 16733  003F26                     u5680:
 16734  003F26  1E19               	comf	(___aomod@dividend+7)^0,f,c
 16735  003F28  1E18               	comf	(___aomod@dividend+6)^0,f,c
 16736  003F2A  1E17               	comf	(___aomod@dividend+5)^0,f,c
 16737  003F2C  1E16               	comf	(___aomod@dividend+4)^0,f,c
 16738  003F2E  1E15               	comf	(___aomod@dividend+3)^0,f,c
 16739  003F30  1E14               	comf	(___aomod@dividend+2)^0,f,c
 16740  003F32  1E13               	comf	(___aomod@dividend+1)^0,f,c
 16741  003F34  6C12               	negf	___aomod@dividend^0,c
 16742  003F36  0E00               	movlw	0
 16743  003F38  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 16744  003F3A  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 16745  003F3C  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 16746  003F3E  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 16747  003F40  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 16748  003F42  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 16749  003F44  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 16750  003F46  0E01               	movlw	1
 16751  003F48  6E23               	movwf	___aomod@sign^0,c
 16752  003F4A                     l8102:
 16753  003F4A  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
 16754  003F4C  EFAC  F01F         	goto	u5690
 16755  003F50  EFAA  F01F         	goto	u5691
 16756  003F54                     u5691:
 16757  003F54  EFBC  F01F         	goto	l8106
 16758  003F58                     u5690:
 16759  003F58  1E21               	comf	(___aomod@divisor+7)^0,f,c
 16760  003F5A  1E20               	comf	(___aomod@divisor+6)^0,f,c
 16761  003F5C  1E1F               	comf	(___aomod@divisor+5)^0,f,c
 16762  003F5E  1E1E               	comf	(___aomod@divisor+4)^0,f,c
 16763  003F60  1E1D               	comf	(___aomod@divisor+3)^0,f,c
 16764  003F62  1E1C               	comf	(___aomod@divisor+2)^0,f,c
 16765  003F64  1E1B               	comf	(___aomod@divisor+1)^0,f,c
 16766  003F66  6C1A               	negf	___aomod@divisor^0,c
 16767  003F68  0E00               	movlw	0
 16768  003F6A  221B               	addwfc	(___aomod@divisor+1)^0,f,c
 16769  003F6C  221C               	addwfc	(___aomod@divisor+2)^0,f,c
 16770  003F6E  221D               	addwfc	(___aomod@divisor+3)^0,f,c
 16771  003F70  221E               	addwfc	(___aomod@divisor+4)^0,f,c
 16772  003F72  221F               	addwfc	(___aomod@divisor+5)^0,f,c
 16773  003F74  2220               	addwfc	(___aomod@divisor+6)^0,f,c
 16774  003F76  2221               	addwfc	(___aomod@divisor+7)^0,f,c
 16775  003F78                     l8106:
 16776  003F78  501A               	movf	___aomod@divisor^0,w,c
 16777  003F7A  101B               	iorwf	(___aomod@divisor+1)^0,w,c
 16778  003F7C  101C               	iorwf	(___aomod@divisor+2)^0,w,c
 16779  003F7E  101D               	iorwf	(___aomod@divisor+3)^0,w,c
 16780  003F80  101E               	iorwf	(___aomod@divisor+4)^0,w,c
 16781  003F82  101F               	iorwf	(___aomod@divisor+5)^0,w,c
 16782  003F84  1020               	iorwf	(___aomod@divisor+6)^0,w,c
 16783  003F86  1021               	iorwf	(___aomod@divisor+7)^0,w,c
 16784  003F88  B4D8               	btfsc	status,2,c
 16785  003F8A  EFC9  F01F         	goto	u5701
 16786  003F8E  EFCB  F01F         	goto	u5700
 16787  003F92                     u5701:
 16788  003F92  EF13  F020         	goto	l8122
 16789  003F96                     u5700:
 16790  003F96  0E01               	movlw	1
 16791  003F98  6E22               	movwf	___aomod@counter^0,c
 16792  003F9A  EFD9  F01F         	goto	l8112
 16793  003F9E                     l8110:
 16794  003F9E  90D8               	bcf	status,0,c
 16795  003FA0  361A               	rlcf	___aomod@divisor^0,f,c
 16796  003FA2  361B               	rlcf	(___aomod@divisor+1)^0,f,c
 16797  003FA4  361C               	rlcf	(___aomod@divisor+2)^0,f,c
 16798  003FA6  361D               	rlcf	(___aomod@divisor+3)^0,f,c
 16799  003FA8  361E               	rlcf	(___aomod@divisor+4)^0,f,c
 16800  003FAA  361F               	rlcf	(___aomod@divisor+5)^0,f,c
 16801  003FAC  3620               	rlcf	(___aomod@divisor+6)^0,f,c
 16802  003FAE  3621               	rlcf	(___aomod@divisor+7)^0,f,c
 16803  003FB0  2A22               	incf	___aomod@counter^0,f,c
 16804  003FB2                     l8112:
 16805  003FB2  AE21               	btfss	(___aomod@divisor+7)^0,7,c
 16806  003FB4  EFDE  F01F         	goto	u5711
 16807  003FB8  EFE0  F01F         	goto	u5710
 16808  003FBC                     u5711:
 16809  003FBC  EFCF  F01F         	goto	l8110
 16810  003FC0                     u5710:
 16811  003FC0                     l8114:
 16812  003FC0  501A               	movf	___aomod@divisor^0,w,c
 16813  003FC2  5C12               	subwf	___aomod@dividend^0,w,c
 16814  003FC4  501B               	movf	(___aomod@divisor+1)^0,w,c
 16815  003FC6  5813               	subwfb	(___aomod@dividend+1)^0,w,c
 16816  003FC8  501C               	movf	(___aomod@divisor+2)^0,w,c
 16817  003FCA  5814               	subwfb	(___aomod@dividend+2)^0,w,c
 16818  003FCC  501D               	movf	(___aomod@divisor+3)^0,w,c
 16819  003FCE  5815               	subwfb	(___aomod@dividend+3)^0,w,c
 16820  003FD0  501E               	movf	(___aomod@divisor+4)^0,w,c
 16821  003FD2  5816               	subwfb	(___aomod@dividend+4)^0,w,c
 16822  003FD4  501F               	movf	(___aomod@divisor+5)^0,w,c
 16823  003FD6  5817               	subwfb	(___aomod@dividend+5)^0,w,c
 16824  003FD8  5020               	movf	(___aomod@divisor+6)^0,w,c
 16825  003FDA  5818               	subwfb	(___aomod@dividend+6)^0,w,c
 16826  003FDC  5021               	movf	(___aomod@divisor+7)^0,w,c
 16827  003FDE  5819               	subwfb	(___aomod@dividend+7)^0,w,c
 16828  003FE0  A0D8               	btfss	status,0,c
 16829  003FE2  EFF5  F01F         	goto	u5721
 16830  003FE6  EFF7  F01F         	goto	u5720
 16831  003FEA                     u5721:
 16832  003FEA  EF07  F020         	goto	l8118
 16833  003FEE                     u5720:
 16834  003FEE  501A               	movf	___aomod@divisor^0,w,c
 16835  003FF0  5E12               	subwf	___aomod@dividend^0,f,c
 16836  003FF2  501B               	movf	(___aomod@divisor+1)^0,w,c
 16837  003FF4  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
 16838  003FF6  501C               	movf	(___aomod@divisor+2)^0,w,c
 16839  003FF8  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
 16840  003FFA  501D               	movf	(___aomod@divisor+3)^0,w,c
 16841  003FFC  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
 16842  003FFE  501E               	movf	(___aomod@divisor+4)^0,w,c
 16843  004000  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
 16844  004002  501F               	movf	(___aomod@divisor+5)^0,w,c
 16845  004004  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
 16846  004006  5020               	movf	(___aomod@divisor+6)^0,w,c
 16847  004008  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
 16848  00400A  5021               	movf	(___aomod@divisor+7)^0,w,c
 16849  00400C  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
 16850  00400E                     l8118:
 16851  00400E  90D8               	bcf	status,0,c
 16852  004010  3221               	rrcf	(___aomod@divisor+7)^0,f,c
 16853  004012  3220               	rrcf	(___aomod@divisor+6)^0,f,c
 16854  004014  321F               	rrcf	(___aomod@divisor+5)^0,f,c
 16855  004016  321E               	rrcf	(___aomod@divisor+4)^0,f,c
 16856  004018  321D               	rrcf	(___aomod@divisor+3)^0,f,c
 16857  00401A  321C               	rrcf	(___aomod@divisor+2)^0,f,c
 16858  00401C  321B               	rrcf	(___aomod@divisor+1)^0,f,c
 16859  00401E  321A               	rrcf	___aomod@divisor^0,f,c
 16860  004020  2E22               	decfsz	___aomod@counter^0,f,c
 16861  004022  EFE0  F01F         	goto	l8114
 16862  004026                     l8122:
 16863  004026  5023               	movf	___aomod@sign^0,w,c
 16864  004028  B4D8               	btfsc	status,2,c
 16865  00402A  EF19  F020         	goto	u5731
 16866  00402E  EF1B  F020         	goto	u5730
 16867  004032                     u5731:
 16868  004032  EF2B  F020         	goto	l8126
 16869  004036                     u5730:
 16870  004036  1E19               	comf	(___aomod@dividend+7)^0,f,c
 16871  004038  1E18               	comf	(___aomod@dividend+6)^0,f,c
 16872  00403A  1E17               	comf	(___aomod@dividend+5)^0,f,c
 16873  00403C  1E16               	comf	(___aomod@dividend+4)^0,f,c
 16874  00403E  1E15               	comf	(___aomod@dividend+3)^0,f,c
 16875  004040  1E14               	comf	(___aomod@dividend+2)^0,f,c
 16876  004042  1E13               	comf	(___aomod@dividend+1)^0,f,c
 16877  004044  6C12               	negf	___aomod@dividend^0,c
 16878  004046  0E00               	movlw	0
 16879  004048  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 16880  00404A  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 16881  00404C  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 16882  00404E  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 16883  004050  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 16884  004052  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 16885  004054  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 16886  004056                     l8126:
 16887  004056  C012  F012         	movff	___aomod@dividend,?___aomod
 16888  00405A  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
 16889  00405E  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
 16890  004062  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
 16891  004066  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
 16892  00406A  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
 16893  00406E  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
 16894  004072  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
 16895  004076  0012               	return		;funcret
 16896  004078                     __end_of___aomod:
 16897                           	callstack 0
 16898                           
 16899 ;; *************** function ___aodiv *****************
 16900 ;; Defined at:
 16901 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 16902 ;; Parameters:    Size  Location     Type
 16903 ;;  dividend        8   17[COMRAM] long long 
 16904 ;;  divisor         8   25[COMRAM] long long 
 16905 ;; Auto vars:     Size  Location     Type
 16906 ;;  quotient        8   35[COMRAM] long long 
 16907 ;;  sign            1   34[COMRAM] unsigned char 
 16908 ;;  counter         1   33[COMRAM] unsigned char 
 16909 ;; Return value:  Size  Location     Type
 16910 ;;                  8   17[COMRAM] long long 
 16911 ;; Registers used:
 16912 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16913 ;; Tracked objects:
 16914 ;;		On entry : 0/0
 16915 ;;		On exit  : 0/0
 16916 ;;		Unchanged: 0/0
 16917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16918 ;;      Params:        16       0       0       0       0       0       0
 16919 ;;      Locals:        10       0       0       0       0       0       0
 16920 ;;      Temps:          0       0       0       0       0       0       0
 16921 ;;      Totals:        26       0       0       0       0       0       0
 16922 ;;Total ram usage:       26 bytes
 16923 ;; Hardware stack levels used: 1
 16924 ;; Hardware stack levels required when called: 4
 16925 ;; This function calls:
 16926 ;;		Nothing
 16927 ;; This function is called by:
 16928 ;;		_dtoa
 16929 ;; This function uses a non-reentrant model
 16930 ;;
 16931                           
 16932                           	psect	text66
 16933  003D8C                     __ptext66:
 16934                           	callstack 0
 16935  003D8C                     ___aodiv:
 16936                           	callstack 17
 16937  003D8C  0E00               	movlw	0
 16938  003D8E  6E23               	movwf	___aodiv@sign^0,c
 16939  003D90  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
 16940  003D92  EFCF  F01E         	goto	u5610
 16941  003D96  EFCD  F01E         	goto	u5611
 16942  003D9A                     u5611:
 16943  003D9A  EFE1  F01E         	goto	l8058
 16944  003D9E                     u5610:
 16945  003D9E  1E21               	comf	(___aodiv@divisor+7)^0,f,c
 16946  003DA0  1E20               	comf	(___aodiv@divisor+6)^0,f,c
 16947  003DA2  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
 16948  003DA4  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
 16949  003DA6  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
 16950  003DA8  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
 16951  003DAA  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
 16952  003DAC  6C1A               	negf	___aodiv@divisor^0,c
 16953  003DAE  0E00               	movlw	0
 16954  003DB0  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
 16955  003DB2  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
 16956  003DB4  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
 16957  003DB6  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
 16958  003DB8  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
 16959  003DBA  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
 16960  003DBC  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
 16961  003DBE  0E01               	movlw	1
 16962  003DC0  6E23               	movwf	___aodiv@sign^0,c
 16963  003DC2                     l8058:
 16964  003DC2  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
 16965  003DC4  EFE8  F01E         	goto	u5620
 16966  003DC8  EFE6  F01E         	goto	u5621
 16967  003DCC                     u5621:
 16968  003DCC  EFFA  F01E         	goto	l8064
 16969  003DD0                     u5620:
 16970  003DD0  1E19               	comf	(___aodiv@dividend+7)^0,f,c
 16971  003DD2  1E18               	comf	(___aodiv@dividend+6)^0,f,c
 16972  003DD4  1E17               	comf	(___aodiv@dividend+5)^0,f,c
 16973  003DD6  1E16               	comf	(___aodiv@dividend+4)^0,f,c
 16974  003DD8  1E15               	comf	(___aodiv@dividend+3)^0,f,c
 16975  003DDA  1E14               	comf	(___aodiv@dividend+2)^0,f,c
 16976  003DDC  1E13               	comf	(___aodiv@dividend+1)^0,f,c
 16977  003DDE  6C12               	negf	___aodiv@dividend^0,c
 16978  003DE0  0E00               	movlw	0
 16979  003DE2  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
 16980  003DE4  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
 16981  003DE6  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
 16982  003DE8  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
 16983  003DEA  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
 16984  003DEC  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
 16985  003DEE  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
 16986  003DF0  0E01               	movlw	1
 16987  003DF2  1A23               	xorwf	___aodiv@sign^0,f,c
 16988  003DF4                     l8064:
 16989  003DF4  EE20  F024         	lfsr	2,___aodiv@quotient
 16990  003DF8  0E07               	movlw	7
 16991  003DFA                     u5631:
 16992  003DFA  6ADE               	clrf	postinc2,c
 16993  003DFC  06E8               	decf	wreg,f,c
 16994  003DFE  E2FD               	bc	u5631
 16995  003E00  501A               	movf	___aodiv@divisor^0,w,c
 16996  003E02  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
 16997  003E04  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
 16998  003E06  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
 16999  003E08  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
 17000  003E0A  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
 17001  003E0C  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
 17002  003E0E  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
 17003  003E10  B4D8               	btfsc	status,2,c
 17004  003E12  EF0D  F01F         	goto	u5641
 17005  003E16  EF0F  F01F         	goto	u5640
 17006  003E1A                     u5641:
 17007  003E1A  EF61  F01F         	goto	l8086
 17008  003E1E                     u5640:
 17009  003E1E  0E01               	movlw	1
 17010  003E20  6E22               	movwf	___aodiv@counter^0,c
 17011  003E22  EF1D  F01F         	goto	l8072
 17012  003E26                     l8070:
 17013  003E26  90D8               	bcf	status,0,c
 17014  003E28  361A               	rlcf	___aodiv@divisor^0,f,c
 17015  003E2A  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
 17016  003E2C  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
 17017  003E2E  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
 17018  003E30  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
 17019  003E32  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
 17020  003E34  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
 17021  003E36  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
 17022  003E38  2A22               	incf	___aodiv@counter^0,f,c
 17023  003E3A                     l8072:
 17024  003E3A  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
 17025  003E3C  EF22  F01F         	goto	u5651
 17026  003E40  EF24  F01F         	goto	u5650
 17027  003E44                     u5651:
 17028  003E44  EF13  F01F         	goto	l8070
 17029  003E48                     u5650:
 17030  003E48                     l8074:
 17031  003E48  90D8               	bcf	status,0,c
 17032  003E4A  3624               	rlcf	___aodiv@quotient^0,f,c
 17033  003E4C  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
 17034  003E4E  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
 17035  003E50  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
 17036  003E52  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
 17037  003E54  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
 17038  003E56  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
 17039  003E58  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
 17040  003E5A  501A               	movf	___aodiv@divisor^0,w,c
 17041  003E5C  5C12               	subwf	___aodiv@dividend^0,w,c
 17042  003E5E  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17043  003E60  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
 17044  003E62  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17045  003E64  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
 17046  003E66  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17047  003E68  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
 17048  003E6A  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17049  003E6C  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
 17050  003E6E  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17051  003E70  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
 17052  003E72  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17053  003E74  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
 17054  003E76  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17055  003E78  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
 17056  003E7A  A0D8               	btfss	status,0,c
 17057  003E7C  EF42  F01F         	goto	u5661
 17058  003E80  EF44  F01F         	goto	u5660
 17059  003E84                     u5661:
 17060  003E84  EF55  F01F         	goto	l8082
 17061  003E88                     u5660:
 17062  003E88  501A               	movf	___aodiv@divisor^0,w,c
 17063  003E8A  5E12               	subwf	___aodiv@dividend^0,f,c
 17064  003E8C  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17065  003E8E  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
 17066  003E90  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17067  003E92  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
 17068  003E94  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17069  003E96  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
 17070  003E98  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17071  003E9A  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
 17072  003E9C  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17073  003E9E  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
 17074  003EA0  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17075  003EA2  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
 17076  003EA4  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17077  003EA6  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
 17078  003EA8  8024               	bsf	___aodiv@quotient^0,0,c
 17079  003EAA                     l8082:
 17080  003EAA  90D8               	bcf	status,0,c
 17081  003EAC  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
 17082  003EAE  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
 17083  003EB0  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
 17084  003EB2  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
 17085  003EB4  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
 17086  003EB6  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
 17087  003EB8  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
 17088  003EBA  321A               	rrcf	___aodiv@divisor^0,f,c
 17089  003EBC  2E22               	decfsz	___aodiv@counter^0,f,c
 17090  003EBE  EF24  F01F         	goto	l8074
 17091  003EC2                     l8086:
 17092  003EC2  5023               	movf	___aodiv@sign^0,w,c
 17093  003EC4  B4D8               	btfsc	status,2,c
 17094  003EC6  EF67  F01F         	goto	u5671
 17095  003ECA  EF69  F01F         	goto	u5670
 17096  003ECE                     u5671:
 17097  003ECE  EF79  F01F         	goto	l8090
 17098  003ED2                     u5670:
 17099  003ED2  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
 17100  003ED4  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
 17101  003ED6  1E29               	comf	(___aodiv@quotient+5)^0,f,c
 17102  003ED8  1E28               	comf	(___aodiv@quotient+4)^0,f,c
 17103  003EDA  1E27               	comf	(___aodiv@quotient+3)^0,f,c
 17104  003EDC  1E26               	comf	(___aodiv@quotient+2)^0,f,c
 17105  003EDE  1E25               	comf	(___aodiv@quotient+1)^0,f,c
 17106  003EE0  6C24               	negf	___aodiv@quotient^0,c
 17107  003EE2  0E00               	movlw	0
 17108  003EE4  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
 17109  003EE6  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
 17110  003EE8  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
 17111  003EEA  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
 17112  003EEC  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
 17113  003EEE  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
 17114  003EF0  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
 17115  003EF2                     l8090:
 17116  003EF2  C024  F012         	movff	___aodiv@quotient,?___aodiv
 17117  003EF6  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
 17118  003EFA  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
 17119  003EFE  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
 17120  003F02  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
 17121  003F06  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
 17122  003F0A  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
 17123  003F0E  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
 17124  003F12  0012               	return		;funcret
 17125  003F14                     __end_of___aodiv:
 17126                           	callstack 0
 17127                           
 17128 ;; *************** function _LCD_DrawText *****************
 17129 ;; Defined at:
 17130 ;;		line 713 in file "libraries/lcd_highlevel.c"
 17131 ;; Parameters:    Size  Location     Type
 17132 ;;  msg             2   31[COMRAM] PTR const unsigned char 
 17133 ;;		 -> g1.str(2), touchScreenController@s(20), STR_14(13), STR_13(13), 
 17134 ;;		 -> STR_12(11), STR_11(8), STR_10(9), STR_9(4), 
 17135 ;;		 -> STR_8(4), STR_7(8), STR_6(9), STR_5(9), 
 17136 ;;		 -> STR_4(11), g1(239), STR_1(10), 
 17137 ;;  font            2   33[COMRAM] PTR const struct .
 17138 ;;		 -> arialNarrow_12ptFontInfo(7), 
 17139 ;;  align           1   35[COMRAM] enum E355
 17140 ;;  posX            2   36[COMRAM] unsigned short 
 17141 ;;  posY            2   38[COMRAM] unsigned short 
 17142 ;;  color           2   40[COMRAM] unsigned short 
 17143 ;;  bg_color        2   42[COMRAM] unsigned short 
 17144 ;; Auto vars:     Size  Location     Type
 17145 ;;  posXEnd         2   58[COMRAM] unsigned short 
 17146 ;;  posYEnd         2   56[COMRAM] unsigned short 
 17147 ;;  yOffset         2   52[COMRAM] unsigned short 
 17148 ;;  offset          2   50[COMRAM] unsigned short 
 17149 ;;  width           1   64[COMRAM] unsigned char 
 17150 ;;  x               1   63[COMRAM] unsigned char 
 17151 ;;  tempChar        1   62[COMRAM] char 
 17152 ;;  i               1   61[COMRAM] unsigned char 
 17153 ;;  y               1   60[COMRAM] unsigned char 
 17154 ;;  fontPixel       1   55[COMRAM] unsigned char 
 17155 ;;  fontByte        1   54[COMRAM] unsigned char 
 17156 ;; Return value:  Size  Location     Type
 17157 ;;                  1    wreg      void 
 17158 ;; Registers used:
 17159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17160 ;; Tracked objects:
 17161 ;;		On entry : 0/0
 17162 ;;		On exit  : 0/0
 17163 ;;		Unchanged: 0/0
 17164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17165 ;;      Params:        13       0       0       0       0       0       0
 17166 ;;      Locals:        15       0       0       0       0       0       0
 17167 ;;      Temps:          6       0       0       0       0       0       0
 17168 ;;      Totals:        34       0       0       0       0       0       0
 17169 ;;Total ram usage:       34 bytes
 17170 ;; Hardware stack levels used: 1
 17171 ;; Hardware stack levels required when called: 5
 17172 ;; This function calls:
 17173 ;;		___awdiv
 17174 ;;		___wmul
 17175 ;;		_strlen
 17176 ;; This function is called by:
 17177 ;;		_Factory_init
 17178 ;;		_Score_draw
 17179 ;;		_Menu_welcomeDraw
 17180 ;;		_Menu_parametersDraw
 17181 ;;		_Menu_endGame
 17182 ;;		_LCD_ButtonDraw
 17183 ;;		_touchScreenController
 17184 ;; This function uses a non-reentrant model
 17185 ;;
 17186                           
 17187                           	psect	text67
 17188  001DB6                     __ptext67:
 17189                           	callstack 0
 17190  001DB6                     _LCD_DrawText:
 17191                           	callstack 20
 17192  001DB6                     
 17193                           ;libraries/lcd_highlevel.c: 713: void LCD_DrawText(const uint8_t * msg,const FONT_INFO *
      +                           font, ALIGN align,;libraries/lcd_highlevel.c: 714:         uint16_t posX, uint16_t posY
      +                          , uint16_t color, uint16_t bg_color);libraries/lcd_highlevel.c: 715: {;libraries/lcd_hig
      +                          hlevel.c: 716:   uint8_t x,y,i;;libraries/lcd_highlevel.c: 717:   int8_t tempChar;;libra
      +                          ries/lcd_highlevel.c: 718:   uint16_t offset;;libraries/lcd_highlevel.c: 719:   uint8_t 
      +                          width=0;
 17194  001DB6  0E00               	movlw	0
 17195  001DB8  6E41               	movwf	LCD_DrawText@width^0,c
 17196                           
 17197                           ;libraries/lcd_highlevel.c: 720:   uint8_t fontByte,fontPixel;;libraries/lcd_highlevel.c
      +                          : 721:   uint16_t posYEnd, posXEnd, yOffset;;libraries/lcd_highlevel.c: 725:   for(i=0;i
      +                          <strlen(msg);i++)
 17198  001DBA  0E00               	movlw	0
 17199  001DBC  6E3E               	movwf	LCD_DrawText@i^0,c
 17200  001DBE  EF30  F00F         	goto	l8828
 17201  001DC2                     l8822:
 17202                           
 17203                           ;libraries/lcd_highlevel.c: 726:   {;libraries/lcd_highlevel.c: 727:     tempChar = (msg
      +                          [i]) - font->start_char;
 17204  001DC2  0E01               	movlw	1
 17205  001DC4  2422               	addwf	LCD_DrawText@font^0,w,c
 17206  001DC6  6E2D               	movwf	??_LCD_DrawText^0,c
 17207  001DC8  0E00               	movlw	0
 17208  001DCA  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17209  001DCC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17210  001DCE  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17211  001DD2  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17212  001DD6                     	if	0	;tblptru may be non-zero
 17213  001DD6                     	endif
 17214  001DD6                     	if	0	;tblptru may be non-zero
 17215  001DD6                     	endif
 17216  001DD6  0008               	tblrd		*
 17217  001DD8  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17218  001DDC  503E               	movf	LCD_DrawText@i^0,w,c
 17219  001DDE  2420               	addwf	LCD_DrawText@msg^0,w,c
 17220  001DE0  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17221  001DE2  0E00               	movlw	0
 17222  001DE4  2021               	addwfc	(LCD_DrawText@msg+1)^0,w,c
 17223  001DE6  6E31               	movwf	(??_LCD_DrawText+4)^0,c
 17224  001DE8  C030  FFF6         	movff	??_LCD_DrawText+3,tblptrl
 17225  001DEC  C031  FFF7         	movff	??_LCD_DrawText+4,tblptrh
 17226  001DF0  6AF8               	clrf	tblptru,c
 17227  001DF2  0E05               	movlw	(high __ramtop+-1)
 17228  001DF4  64F7               	cpfsgt	tblptrh,c
 17229  001DF6  D003               	bra	u6317
 17230  001DF8  0008               	tblrd		*
 17231  001DFA  50F5               	movf	tablat,w,c
 17232  001DFC  D005               	bra	u6310
 17233  001DFE                     u6317:
 17234  001DFE  CFF6 FFE1          	movff	tblptrl,fsr1l
 17235  001E02  CFF7 FFE2          	movff	tblptrh,fsr1h
 17236  001E06  50E7               	movf	indf1,w,c
 17237  001E08                     u6310:
 17238  001E08  6E32               	movwf	(??_LCD_DrawText+5)^0,c
 17239  001E0A  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17240  001E0C  5C32               	subwf	(??_LCD_DrawText+5)^0,w,c
 17241  001E0E  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17242  001E10                     
 17243                           ;libraries/lcd_highlevel.c: 728:     width += font->descriptor[tempChar].width+2;
 17244  001E10  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17245  001E12  6E1A               	movwf	___wmul@multiplier^0,c
 17246  001E14  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17247  001E16  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17248  001E18  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17249  001E1A  0E00               	movlw	0
 17250  001E1C  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17251  001E1E  0E03               	movlw	3
 17252  001E20  6E1C               	movwf	___wmul@multiplicand^0,c
 17253  001E22  EC8E  F031         	call	___wmul	;wreg free
 17254  001E26  0E03               	movlw	3
 17255  001E28  2422               	addwf	LCD_DrawText@font^0,w,c
 17256  001E2A  6E2D               	movwf	??_LCD_DrawText^0,c
 17257  001E2C  0E00               	movlw	0
 17258  001E2E  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17259  001E30  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17260  001E32  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17261  001E36  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17262  001E3A                     	if	0	;tblptru may be non-zero
 17263  001E3A                     	endif
 17264  001E3A                     	if	0	;tblptru may be non-zero
 17265  001E3A                     	endif
 17266  001E3A  0009               	tblrd		*+
 17267  001E3C  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17268  001E40  0009               	tblrd		*+
 17269  001E42  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17270  001E46  501A               	movf	?___wmul^0,w,c
 17271  001E48  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17272  001E4A  501B               	movf	(?___wmul+1)^0,w,c
 17273  001E4C  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17274  001E4E  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17275  001E52  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17276  001E56                     	if	0	;tblptru may be non-zero
 17277  001E56                     	endif
 17278  001E56                     	if	0	;tblptru may be non-zero
 17279  001E56                     	endif
 17280  001E56  0008               	tblrd		*
 17281  001E58  50F5               	movf	tablat,w,c
 17282  001E5A  0F02               	addlw	2
 17283  001E5C  2641               	addwf	LCD_DrawText@width^0,f,c
 17284  001E5E                     
 17285                           ;libraries/lcd_highlevel.c: 729:   }
 17286  001E5E  2A3E               	incf	LCD_DrawText@i^0,f,c
 17287  001E60                     l8828:
 17288  001E60  C020  F012         	movff	LCD_DrawText@msg,strlen@s
 17289  001E64  C021  F013         	movff	LCD_DrawText@msg+1,strlen@s+1
 17290  001E68  EC74  F030         	call	_strlen	;wreg free
 17291  001E6C  503E               	movf	LCD_DrawText@i^0,w,c
 17292  001E6E  6E2D               	movwf	??_LCD_DrawText^0,c
 17293  001E70  6A2E               	clrf	(??_LCD_DrawText+1)^0,c
 17294  001E72  5012               	movf	?_strlen^0,w,c
 17295  001E74  5C2D               	subwf	??_LCD_DrawText^0,w,c
 17296  001E76  5013               	movf	(?_strlen+1)^0,w,c
 17297  001E78  582E               	subwfb	(??_LCD_DrawText+1)^0,w,c
 17298  001E7A  A0D8               	btfss	status,0,c
 17299  001E7C  EF42  F00F         	goto	u6321
 17300  001E80  EF44  F00F         	goto	u6320
 17301  001E84                     u6321:
 17302  001E84  EFE1  F00E         	goto	l8822
 17303  001E88                     u6320:
 17304  001E88                     
 17305                           ;libraries/lcd_highlevel.c: 730:   if(align == A_RIGHT)
 17306  001E88  0424               	decf	LCD_DrawText@align^0,w,c
 17307  001E8A  A4D8               	btfss	status,2,c
 17308  001E8C  EF4A  F00F         	goto	u6331
 17309  001E90  EF4C  F00F         	goto	u6330
 17310  001E94                     u6331:
 17311  001E94  EF55  F00F         	goto	l8834
 17312  001E98                     u6330:
 17313  001E98                     
 17314                           ;libraries/lcd_highlevel.c: 731:   {;libraries/lcd_highlevel.c: 732:     posX = posX - w
      +                          idth;
 17315  001E98  5041               	movf	LCD_DrawText@width^0,w,c
 17316  001E9A  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17317  001E9C  6E25               	movwf	LCD_DrawText@posX^0,c
 17318  001E9E  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17319  001EA0  A0D8               	btfss	status,0,c
 17320  001EA2  0426               	decf	(LCD_DrawText@posX+1)^0,w,c
 17321  001EA4  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17322                           
 17323                           ;libraries/lcd_highlevel.c: 733:   }
 17324  001EA6  EF6D  F00F         	goto	l8838
 17325  001EAA                     l8834:
 17326  001EAA  0E02               	movlw	2
 17327  001EAC  1824               	xorwf	LCD_DrawText@align^0,w,c
 17328  001EAE  A4D8               	btfss	status,2,c
 17329  001EB0  EF5C  F00F         	goto	u6341
 17330  001EB4  EF5E  F00F         	goto	u6340
 17331  001EB8                     u6341:
 17332  001EB8  EF6D  F00F         	goto	l8838
 17333  001EBC                     u6340:
 17334  001EBC                     
 17335                           ;libraries/lcd_highlevel.c: 735:   {;libraries/lcd_highlevel.c: 736:     posX = posX - w
      +                          idth / 2;
 17336  001EBC  C041  F012         	movff	LCD_DrawText@width,___awdiv@dividend
 17337  001EC0  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17338  001EC2  0E00               	movlw	0
 17339  001EC4  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17340  001EC6  0E02               	movlw	2
 17341  001EC8  6E14               	movwf	___awdiv@divisor^0,c
 17342  001ECA  ECA9  F028         	call	___awdiv	;wreg free
 17343  001ECE  5012               	movf	?___awdiv^0,w,c
 17344  001ED0  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17345  001ED2  6E25               	movwf	LCD_DrawText@posX^0,c
 17346  001ED4  5013               	movf	(?___awdiv+1)^0,w,c
 17347  001ED6  5826               	subwfb	(LCD_DrawText@posX+1)^0,w,c
 17348  001ED8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17349  001EDA                     l8838:
 17350                           
 17351                           ;libraries/lcd_highlevel.c: 740:   {;libraries/lcd_highlevel.c: 741:     tempChar = (*ms
      +                          g) - font->start_char;
 17352  001EDA  0E01               	movlw	1
 17353  001EDC  2422               	addwf	LCD_DrawText@font^0,w,c
 17354  001EDE  6E2D               	movwf	??_LCD_DrawText^0,c
 17355  001EE0  0E00               	movlw	0
 17356  001EE2  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17357  001EE4  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17358  001EE6  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17359  001EEA  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17360  001EEE                     	if	0	;tblptru may be non-zero
 17361  001EEE                     	endif
 17362  001EEE                     	if	0	;tblptru may be non-zero
 17363  001EEE                     	endif
 17364  001EEE  0008               	tblrd		*
 17365  001EF0  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17366  001EF4  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17367  001EF8  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17368  001EFC  6AF8               	clrf	tblptru,c
 17369  001EFE  0E05               	movlw	(high __ramtop+-1)
 17370  001F00  64F7               	cpfsgt	tblptrh,c
 17371  001F02  D003               	bra	u6357
 17372  001F04  0008               	tblrd		*
 17373  001F06  50F5               	movf	tablat,w,c
 17374  001F08  D005               	bra	u6350
 17375  001F0A                     u6357:
 17376  001F0A  CFF6 FFE1          	movff	tblptrl,fsr1l
 17377  001F0E  CFF7 FFE2          	movff	tblptrh,fsr1h
 17378  001F12  50E7               	movf	indf1,w,c
 17379  001F14                     u6350:
 17380  001F14  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17381  001F16  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17382  001F18  5C30               	subwf	(??_LCD_DrawText+3)^0,w,c
 17383  001F1A  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17384  001F1C                     
 17385                           ;libraries/lcd_highlevel.c: 742:     offset = font->descriptor[tempChar].offset;
 17386  001F1C  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17387  001F1E  6E1A               	movwf	___wmul@multiplier^0,c
 17388  001F20  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17389  001F22  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17390  001F24  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17391  001F26  0E00               	movlw	0
 17392  001F28  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17393  001F2A  0E03               	movlw	3
 17394  001F2C  6E1C               	movwf	___wmul@multiplicand^0,c
 17395  001F2E  EC8E  F031         	call	___wmul	;wreg free
 17396  001F32  0E03               	movlw	3
 17397  001F34  2422               	addwf	LCD_DrawText@font^0,w,c
 17398  001F36  6E2D               	movwf	??_LCD_DrawText^0,c
 17399  001F38  0E00               	movlw	0
 17400  001F3A  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17401  001F3C  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17402  001F3E  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17403  001F42  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17404  001F46                     	if	0	;tblptru may be non-zero
 17405  001F46                     	endif
 17406  001F46                     	if	0	;tblptru may be non-zero
 17407  001F46                     	endif
 17408  001F46  0009               	tblrd		*+
 17409  001F48  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17410  001F4C  0009               	tblrd		*+
 17411  001F4E  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17412  001F52  501A               	movf	?___wmul^0,w,c
 17413  001F54  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17414  001F56  501B               	movf	(?___wmul+1)^0,w,c
 17415  001F58  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17416  001F5A  0E01               	movlw	1
 17417  001F5C  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17418  001F5E  0E00               	movlw	0
 17419  001F60  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17420  001F62  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17421  001F66  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17422  001F6A                     	if	0	;tblptru may be non-zero
 17423  001F6A                     	endif
 17424  001F6A                     	if	0	;tblptru may be non-zero
 17425  001F6A                     	endif
 17426  001F6A  0009               	tblrd		*+
 17427  001F6C  CFF5 F033          	movff	tablat,LCD_DrawText@offset
 17428  001F70  000A               	tblrd		*-
 17429  001F72  CFF5 F034          	movff	tablat,LCD_DrawText@offset+1
 17430  001F76                     
 17431                           ;libraries/lcd_highlevel.c: 743:     width = font->descriptor[tempChar].width;
 17432  001F76  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17433  001F78  6E1A               	movwf	___wmul@multiplier^0,c
 17434  001F7A  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17435  001F7C  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17436  001F7E  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17437  001F80  0E00               	movlw	0
 17438  001F82  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17439  001F84  0E03               	movlw	3
 17440  001F86  6E1C               	movwf	___wmul@multiplicand^0,c
 17441  001F88  EC8E  F031         	call	___wmul	;wreg free
 17442  001F8C  0E03               	movlw	3
 17443  001F8E  2422               	addwf	LCD_DrawText@font^0,w,c
 17444  001F90  6E2D               	movwf	??_LCD_DrawText^0,c
 17445  001F92  0E00               	movlw	0
 17446  001F94  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17447  001F96  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17448  001F98  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17449  001F9C  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17450  001FA0                     	if	0	;tblptru may be non-zero
 17451  001FA0                     	endif
 17452  001FA0                     	if	0	;tblptru may be non-zero
 17453  001FA0                     	endif
 17454  001FA0  0009               	tblrd		*+
 17455  001FA2  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17456  001FA6  0009               	tblrd		*+
 17457  001FA8  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17458  001FAC  501A               	movf	?___wmul^0,w,c
 17459  001FAE  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17460  001FB0  501B               	movf	(?___wmul+1)^0,w,c
 17461  001FB2  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17462  001FB4  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17463  001FB8  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17464  001FBC                     	if	0	;tblptru may be non-zero
 17465  001FBC                     	endif
 17466  001FBC                     	if	0	;tblptru may be non-zero
 17467  001FBC                     	endif
 17468  001FBC  0008               	tblrd		*
 17469  001FBE  CFF5 F041          	movff	tablat,LCD_DrawText@width
 17470  001FC2                     
 17471                           ;libraries/lcd_highlevel.c: 748:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17472  001FC2  0E2A               	movlw	42
 17473  001FC4  6E80               	movwf	128,c	;volatile
 17474  001FC6  988B               	bcf	3979,4,c	;volatile
 17475  001FC8  968B               	bcf	3979,3,c	;volatile
 17476  001FCA  868B               	bsf	3979,3,c	;volatile
 17477  001FCC  888B               	bsf	3979,4,c	;volatile
 17478  001FCE                     
 17479                           ;libraries/lcd_highlevel.c: 749:     PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 17480  001FCE  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17481  001FD0  6E80               	movwf	128,c	;volatile
 17482  001FD2  968B               	bcf	3979,3,c	;volatile
 17483  001FD4  868B               	bsf	3979,3,c	;volatile
 17484  001FD6                     
 17485                           ;libraries/lcd_highlevel.c: 750:     PORTA = posX; LATC3 = 0; LATC3 = 1;;
 17486  001FD6  C025  FF80         	movff	LCD_DrawText@posX,3968	;volatile
 17487  001FDA  968B               	bcf	3979,3,c	;volatile
 17488  001FDC  868B               	bsf	3979,3,c	;volatile
 17489  001FDE                     
 17490                           ;libraries/lcd_highlevel.c: 751:     posXEnd = posX+width-1+2;
 17491  001FDE  5041               	movf	LCD_DrawText@width^0,w,c
 17492  001FE0  2425               	addwf	LCD_DrawText@posX^0,w,c
 17493  001FE2  6E2D               	movwf	??_LCD_DrawText^0,c
 17494  001FE4  0E00               	movlw	0
 17495  001FE6  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 17496  001FE8  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17497  001FEA  0E01               	movlw	1
 17498  001FEC  242D               	addwf	??_LCD_DrawText^0,w,c
 17499  001FEE  6E3B               	movwf	LCD_DrawText@posXEnd^0,c
 17500  001FF0  0E00               	movlw	0
 17501  001FF2  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17502  001FF4  6E3C               	movwf	(LCD_DrawText@posXEnd+1)^0,c
 17503  001FF6                     
 17504                           ;libraries/lcd_highlevel.c: 752:     PORTA = posXEnd>>8; LATC3 = 0; LATC3 = 1;;
 17505  001FF6  503C               	movf	(LCD_DrawText@posXEnd+1)^0,w,c
 17506  001FF8  6E80               	movwf	128,c	;volatile
 17507  001FFA  968B               	bcf	3979,3,c	;volatile
 17508  001FFC  868B               	bsf	3979,3,c	;volatile
 17509  001FFE                     
 17510                           ;libraries/lcd_highlevel.c: 753:     PORTA = posXEnd; LATC3 = 0; LATC3 = 1;;
 17511  001FFE  C03B  FF80         	movff	LCD_DrawText@posXEnd,3968	;volatile
 17512  002002  968B               	bcf	3979,3,c	;volatile
 17513  002004  868B               	bsf	3979,3,c	;volatile
 17514  002006                     
 17515                           ;libraries/lcd_highlevel.c: 755:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17516  002006  0E2B               	movlw	43
 17517  002008  6E80               	movwf	128,c	;volatile
 17518  00200A  988B               	bcf	3979,4,c	;volatile
 17519  00200C  968B               	bcf	3979,3,c	;volatile
 17520  00200E  868B               	bsf	3979,3,c	;volatile
 17521  002010  888B               	bsf	3979,4,c	;volatile
 17522  002012                     
 17523                           ;libraries/lcd_highlevel.c: 756:     PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 17524  002012  5028               	movf	(LCD_DrawText@posY+1)^0,w,c
 17525  002014  6E80               	movwf	128,c	;volatile
 17526  002016  968B               	bcf	3979,3,c	;volatile
 17527  002018  868B               	bsf	3979,3,c	;volatile
 17528  00201A                     
 17529                           ;libraries/lcd_highlevel.c: 757:     PORTA = posY; LATC3 = 0; LATC3 = 1;;
 17530  00201A  C027  FF80         	movff	LCD_DrawText@posY,3968	;volatile
 17531  00201E  968B               	bcf	3979,3,c	;volatile
 17532  002020  868B               	bsf	3979,3,c	;volatile
 17533  002022                     
 17534                           ;libraries/lcd_highlevel.c: 758:     posYEnd = posY + font->height-1;
 17535  002022  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 17536  002026  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 17537  00202A                     	if	0	;tblptru may be non-zero
 17538  00202A                     	endif
 17539  00202A                     	if	0	;tblptru may be non-zero
 17540  00202A                     	endif
 17541  00202A  0008               	tblrd		*
 17542  00202C  50F5               	movf	tablat,w,c
 17543  00202E  2427               	addwf	LCD_DrawText@posY^0,w,c
 17544  002030  6E2D               	movwf	??_LCD_DrawText^0,c
 17545  002032  0E00               	movlw	0
 17546  002034  2028               	addwfc	(LCD_DrawText@posY+1)^0,w,c
 17547  002036  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17548  002038  0EFF               	movlw	255
 17549  00203A  242D               	addwf	??_LCD_DrawText^0,w,c
 17550  00203C  6E39               	movwf	LCD_DrawText@posYEnd^0,c
 17551  00203E  0EFF               	movlw	255
 17552  002040  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17553  002042  6E3A               	movwf	(LCD_DrawText@posYEnd+1)^0,c
 17554  002044                     
 17555                           ;libraries/lcd_highlevel.c: 759:     PORTA = posYEnd>>8; LATC3 = 0; LATC3 = 1;;
 17556  002044  503A               	movf	(LCD_DrawText@posYEnd+1)^0,w,c
 17557  002046  6E80               	movwf	128,c	;volatile
 17558  002048  968B               	bcf	3979,3,c	;volatile
 17559  00204A  868B               	bsf	3979,3,c	;volatile
 17560  00204C                     
 17561                           ;libraries/lcd_highlevel.c: 760:     PORTA = posYEnd; LATC3 = 0; LATC3 = 1;;
 17562  00204C  C039  FF80         	movff	LCD_DrawText@posYEnd,3968	;volatile
 17563  002050  968B               	bcf	3979,3,c	;volatile
 17564  002052  868B               	bsf	3979,3,c	;volatile
 17565  002054                     
 17566                           ;libraries/lcd_highlevel.c: 761:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17567  002054  0E2C               	movlw	44
 17568  002056  6E80               	movwf	128,c	;volatile
 17569  002058  988B               	bcf	3979,4,c	;volatile
 17570  00205A  968B               	bcf	3979,3,c	;volatile
 17571  00205C  868B               	bsf	3979,3,c	;volatile
 17572  00205E  888B               	bsf	3979,4,c	;volatile
 17573  002060                     
 17574                           ;libraries/lcd_highlevel.c: 763:     for(y=0;y<font->height;y++)
 17575  002060  0E00               	movlw	0
 17576  002062  6E3D               	movwf	LCD_DrawText@y^0,c
 17577  002064  EFCB  F010         	goto	l8990
 17578  002068                     l8928:
 17579                           
 17580                           ;libraries/lcd_highlevel.c: 764:     {;libraries/lcd_highlevel.c: 765:       yOffset = o
      +                          ffset + (y * ((width+7)/8));
 17581  002068  C03D  F01A         	movff	LCD_DrawText@y,___wmul@multiplier
 17582  00206C  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17583  00206E  0E00               	movlw	0
 17584  002070  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17585  002072  0E08               	movlw	8
 17586  002074  6E14               	movwf	___awdiv@divisor^0,c
 17587  002076  0E07               	movlw	7
 17588  002078  2441               	addwf	LCD_DrawText@width^0,w,c
 17589  00207A  6E12               	movwf	___awdiv@dividend^0,c
 17590  00207C  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17591  00207E  0E00               	movlw	0
 17592  002080  2213               	addwfc	(___awdiv@dividend+1)^0,f,c
 17593  002082  ECA9  F028         	call	___awdiv	;wreg free
 17594  002086  C012  F01C         	movff	?___awdiv,___wmul@multiplicand
 17595  00208A  C013  F01D         	movff	?___awdiv+1,___wmul@multiplicand+1
 17596  00208E  EC8E  F031         	call	___wmul	;wreg free
 17597  002092  5033               	movf	LCD_DrawText@offset^0,w,c
 17598  002094  241A               	addwf	?___wmul^0,w,c
 17599  002096  6E35               	movwf	LCD_DrawText@yOffset^0,c
 17600  002098  5034               	movf	(LCD_DrawText@offset+1)^0,w,c
 17601  00209A  201B               	addwfc	(?___wmul+1)^0,w,c
 17602  00209C  6E36               	movwf	(LCD_DrawText@yOffset+1)^0,c
 17603  00209E                     
 17604                           ;libraries/lcd_highlevel.c: 766:       for(x=0;x<width;x++)
 17605  00209E  0E00               	movlw	0
 17606  0020A0  6E40               	movwf	LCD_DrawText@x^0,c
 17607  0020A2  EFAA  F010         	goto	l8964
 17608  0020A6                     l8932:
 17609                           
 17610                           ;libraries/lcd_highlevel.c: 767:       {;libraries/lcd_highlevel.c: 768:         fontByt
      +                          e = font->bitmap[yOffset + (x/8)];
 17611  0020A6  C040  F012         	movff	LCD_DrawText@x,___awdiv@dividend
 17612  0020AA  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17613  0020AC  0E00               	movlw	0
 17614  0020AE  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17615  0020B0  0E08               	movlw	8
 17616  0020B2  6E14               	movwf	___awdiv@divisor^0,c
 17617  0020B4  ECA9  F028         	call	___awdiv	;wreg free
 17618  0020B8  0E05               	movlw	5
 17619  0020BA  2422               	addwf	LCD_DrawText@font^0,w,c
 17620  0020BC  6E2D               	movwf	??_LCD_DrawText^0,c
 17621  0020BE  0E00               	movlw	0
 17622  0020C0  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17623  0020C2  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17624  0020C4  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17625  0020C8  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17626  0020CC                     	if	0	;tblptru may be non-zero
 17627  0020CC                     	endif
 17628  0020CC                     	if	0	;tblptru may be non-zero
 17629  0020CC                     	endif
 17630  0020CC  0009               	tblrd		*+
 17631  0020CE  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17632  0020D2  0009               	tblrd		*+
 17633  0020D4  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17634  0020D8  5012               	movf	?___awdiv^0,w,c
 17635  0020DA  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17636  0020DC  5013               	movf	(?___awdiv+1)^0,w,c
 17637  0020DE  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17638  0020E0  5035               	movf	LCD_DrawText@yOffset^0,w,c
 17639  0020E2  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17640  0020E4  5036               	movf	(LCD_DrawText@yOffset+1)^0,w,c
 17641  0020E6  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17642  0020E8  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17643  0020EC  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17644  0020F0                     	if	0	;tblptru may be non-zero
 17645  0020F0                     	endif
 17646  0020F0                     	if	0	;tblptru may be non-zero
 17647  0020F0                     	endif
 17648  0020F0  0008               	tblrd		*
 17649  0020F2  CFF5 F037          	movff	tablat,LCD_DrawText@fontByte
 17650  0020F6                     
 17651                           ;libraries/lcd_highlevel.c: 769:         fontPixel = fontByte & (0x80 >> (x%8));
 17652  0020F6  C040  F02D         	movff	LCD_DrawText@x,??_LCD_DrawText
 17653  0020FA  0E07               	movlw	7
 17654  0020FC  162D               	andwf	??_LCD_DrawText^0,f,c
 17655  0020FE  0E80               	movlw	128
 17656  002100  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17657  002102  0E00               	movlw	0
 17658  002104  6E2F               	movwf	(??_LCD_DrawText+2)^0,c
 17659  002106  2A2D               	incf	??_LCD_DrawText^0,f,c
 17660  002108  EF89  F010         	goto	u6364
 17661  00210C                     u6365:
 17662  00210C  342F               	rlcf	(??_LCD_DrawText+2)^0,w,c
 17663  00210E  322F               	rrcf	(??_LCD_DrawText+2)^0,f,c
 17664  002110  322E               	rrcf	(??_LCD_DrawText+1)^0,f,c
 17665  002112                     u6364:
 17666  002112  2E2D               	decfsz	??_LCD_DrawText^0,f,c
 17667  002114  EF86  F010         	goto	u6365
 17668  002118  502E               	movf	(??_LCD_DrawText+1)^0,w,c
 17669  00211A  1437               	andwf	LCD_DrawText@fontByte^0,w,c
 17670  00211C  6E38               	movwf	LCD_DrawText@fontPixel^0,c
 17671  00211E                     
 17672                           ;libraries/lcd_highlevel.c: 770:         if(fontPixel != 0)
 17673  00211E  5038               	movf	LCD_DrawText@fontPixel^0,w,c
 17674  002120  B4D8               	btfsc	status,2,c
 17675  002122  EF95  F010         	goto	u6371
 17676  002126  EF97  F010         	goto	u6370
 17677  00212A                     u6371:
 17678  00212A  EFA1  F010         	goto	l8950
 17679  00212E                     u6370:
 17680  00212E                     
 17681                           ;libraries/lcd_highlevel.c: 771:         {;libraries/lcd_highlevel.c: 772:           POR
      +                          TA = color>>8; LATC3 = 0; LATC3 = 1;;
 17682  00212E  502A               	movf	(LCD_DrawText@color+1)^0,w,c
 17683  002130  6E80               	movwf	128,c	;volatile
 17684  002132  968B               	bcf	3979,3,c	;volatile
 17685  002134  868B               	bsf	3979,3,c	;volatile
 17686  002136                     
 17687                           ;libraries/lcd_highlevel.c: 773:           PORTA = color; LATC3 = 0; LATC3 = 1;;
 17688  002136  C029  FF80         	movff	LCD_DrawText@color,3968	;volatile
 17689  00213A                     l8946:
 17690  00213A  968B               	bcf	3979,3,c	;volatile
 17691  00213C  868B               	bsf	3979,3,c	;volatile
 17692                           
 17693                           ;libraries/lcd_highlevel.c: 774:         }
 17694  00213E  EFA9  F010         	goto	l8962
 17695  002142                     l8950:
 17696                           
 17697                           ;libraries/lcd_highlevel.c: 776:         {;libraries/lcd_highlevel.c: 777:           POR
      +                          TA = bg_color>>8; LATC3 = 0; LATC3 = 1;;
 17698  002142  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 17699  002144  6E80               	movwf	128,c	;volatile
 17700  002146  968B               	bcf	3979,3,c	;volatile
 17701  002148  868B               	bsf	3979,3,c	;volatile
 17702  00214A                     
 17703                           ;libraries/lcd_highlevel.c: 778:           PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 17704  00214A  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 17705  00214E  EF9D  F010         	goto	l8946
 17706  002152                     l8962:
 17707                           
 17708                           ;libraries/lcd_highlevel.c: 780:       }
 17709  002152  2A40               	incf	LCD_DrawText@x^0,f,c
 17710  002154                     l8964:
 17711  002154  5041               	movf	LCD_DrawText@width^0,w,c
 17712  002156  5C40               	subwf	LCD_DrawText@x^0,w,c
 17713  002158  A0D8               	btfss	status,0,c
 17714  00215A  EFB1  F010         	goto	u6381
 17715  00215E  EFB3  F010         	goto	u6380
 17716  002162                     u6381:
 17717  002162  EF53  F010         	goto	l8932
 17718  002166                     u6380:
 17719  002166                     
 17720                           ;libraries/lcd_highlevel.c: 781:       for(x=0;x<2;x++)
 17721  002166  0E00               	movlw	0
 17722  002168  6E40               	movwf	LCD_DrawText@x^0,c
 17723  00216A                     l8968:
 17724  00216A  0E01               	movlw	1
 17725  00216C  6440               	cpfsgt	LCD_DrawText@x^0,c
 17726  00216E  EFBB  F010         	goto	u6391
 17727  002172  EFBD  F010         	goto	u6390
 17728  002176                     u6391:
 17729  002176  EFBF  F010         	goto	l8972
 17730  00217A                     u6390:
 17731  00217A  EFCA  F010         	goto	l8988
 17732  00217E                     l8972:
 17733                           
 17734                           ;libraries/lcd_highlevel.c: 782:       {;libraries/lcd_highlevel.c: 783:         PORTA =
      +                           bg_color>>8; LATC3 = 0; LATC3 = 1;;
 17735  00217E  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 17736  002180  6E80               	movwf	128,c	;volatile
 17737  002182  968B               	bcf	3979,3,c	;volatile
 17738  002184  868B               	bsf	3979,3,c	;volatile
 17739  002186                     
 17740                           ;libraries/lcd_highlevel.c: 784:         PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 17741  002186  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 17742  00218A  968B               	bcf	3979,3,c	;volatile
 17743  00218C  868B               	bsf	3979,3,c	;volatile
 17744  00218E                     
 17745                           ;libraries/lcd_highlevel.c: 785:       }
 17746  00218E  2A40               	incf	LCD_DrawText@x^0,f,c
 17747  002190  EFB5  F010         	goto	l8968
 17748  002194                     l8988:
 17749                           
 17750                           ;libraries/lcd_highlevel.c: 786:     }
 17751  002194  2A3D               	incf	LCD_DrawText@y^0,f,c
 17752  002196                     l8990:
 17753  002196  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 17754  00219A  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 17755  00219E                     	if	0	;tblptru may be non-zero
 17756  00219E                     	endif
 17757  00219E                     	if	0	;tblptru may be non-zero
 17758  00219E                     	endif
 17759  00219E  0009               	tblrd		*+
 17760  0021A0  50F5               	movf	tablat,w,c
 17761  0021A2  5C3D               	subwf	LCD_DrawText@y^0,w,c
 17762  0021A4  A0D8               	btfss	status,0,c
 17763  0021A6  EFD7  F010         	goto	u6401
 17764  0021AA  EFD9  F010         	goto	u6400
 17765  0021AE                     u6401:
 17766  0021AE  EF34  F010         	goto	l8928
 17767  0021B2                     u6400:
 17768  0021B2                     
 17769                           ;libraries/lcd_highlevel.c: 787:     posX = posX + 2 + width;
 17770  0021B2  5041               	movf	LCD_DrawText@width^0,w,c
 17771  0021B4  2425               	addwf	LCD_DrawText@posX^0,w,c
 17772  0021B6  6E2D               	movwf	??_LCD_DrawText^0,c
 17773  0021B8  0E00               	movlw	0
 17774  0021BA  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 17775  0021BC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17776  0021BE  0E02               	movlw	2
 17777  0021C0  242D               	addwf	??_LCD_DrawText^0,w,c
 17778  0021C2  6E25               	movwf	LCD_DrawText@posX^0,c
 17779  0021C4  0E00               	movlw	0
 17780  0021C6  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17781  0021C8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17782  0021CA                     
 17783                           ;libraries/lcd_highlevel.c: 788:     msg++;
 17784  0021CA  4A20               	infsnz	LCD_DrawText@msg^0,f,c
 17785  0021CC  2A21               	incf	(LCD_DrawText@msg+1)^0,f,c
 17786  0021CE                     
 17787                           ;libraries/lcd_highlevel.c: 789:  }while(*msg != 0);
 17788  0021CE  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17789  0021D2  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17790  0021D6  6AF8               	clrf	tblptru,c
 17791  0021D8  0E05               	movlw	(high __ramtop+-1)
 17792  0021DA  64F7               	cpfsgt	tblptrh,c
 17793  0021DC  D003               	bra	u6417
 17794  0021DE  0008               	tblrd		*
 17795  0021E0  50F5               	movf	tablat,w,c
 17796  0021E2  D005               	bra	u6410
 17797  0021E4                     u6417:
 17798  0021E4  CFF6 FFE1          	movff	tblptrl,fsr1l
 17799  0021E8  CFF7 FFE2          	movff	tblptrh,fsr1h
 17800  0021EC  50E7               	movf	indf1,w,c
 17801  0021EE                     u6410:
 17802  0021EE  0900               	iorlw	0
 17803  0021F0  A4D8               	btfss	status,2,c
 17804  0021F2  EFFD  F010         	goto	u6421
 17805  0021F6  EFFF  F010         	goto	u6420
 17806  0021FA                     u6421:
 17807  0021FA  EF6D  F00F         	goto	l8838
 17808  0021FE                     u6420:
 17809  0021FE  0012               	return		;funcret
 17810  002200                     __end_of_LCD_DrawText:
 17811                           	callstack 0
 17812                           
 17813 ;; *************** function _strlen *****************
 17814 ;; Defined at:
 17815 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;  s               2   17[COMRAM] PTR const unsigned char 
 17818 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 17819 ;;		 -> STR_13(13), STR_12(11), STR_11(8), STR_10(9), 
 17820 ;;		 -> STR_9(4), STR_8(4), STR_7(8), STR_6(9), 
 17821 ;;		 -> STR_5(9), STR_4(11), g1(239), STR_1(10), 
 17822 ;; Auto vars:     Size  Location     Type
 17823 ;;  a               2   19[COMRAM] PTR const unsigned char 
 17824 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 17825 ;;		 -> STR_13(13), STR_12(11), STR_11(8), STR_10(9), 
 17826 ;;		 -> STR_9(4), STR_8(4), STR_7(8), STR_6(9), 
 17827 ;;		 -> STR_5(9), STR_4(11), g1(239), STR_1(10), 
 17828 ;; Return value:  Size  Location     Type
 17829 ;;                  2   17[COMRAM] unsigned int 
 17830 ;; Registers used:
 17831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 17832 ;; Tracked objects:
 17833 ;;		On entry : 0/0
 17834 ;;		On exit  : 0/0
 17835 ;;		Unchanged: 0/0
 17836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17837 ;;      Params:         2       0       0       0       0       0       0
 17838 ;;      Locals:         2       0       0       0       0       0       0
 17839 ;;      Temps:          0       0       0       0       0       0       0
 17840 ;;      Totals:         4       0       0       0       0       0       0
 17841 ;;Total ram usage:        4 bytes
 17842 ;; Hardware stack levels used: 1
 17843 ;; Hardware stack levels required when called: 4
 17844 ;; This function calls:
 17845 ;;		Nothing
 17846 ;; This function is called by:
 17847 ;;		_LCD_ButtonDraw
 17848 ;;		_LCD_DrawText
 17849 ;;		_pad
 17850 ;; This function uses a non-reentrant model
 17851 ;;
 17852                           
 17853                           	psect	text68
 17854  0060E8                     __ptext68:
 17855                           	callstack 0
 17856  0060E8                     _strlen:
 17857                           	callstack 16
 17858  0060E8  C012  F014         	movff	strlen@s,strlen@a
 17859  0060EC  C013  F015         	movff	strlen@s+1,strlen@a+1
 17860  0060F0  EF7C  F030         	goto	l8036
 17861  0060F4                     l8034:
 17862  0060F4  4A12               	infsnz	strlen@s^0,f,c
 17863  0060F6  2A13               	incf	(strlen@s+1)^0,f,c
 17864  0060F8                     l8036:
 17865  0060F8  C012  FFF6         	movff	strlen@s,tblptrl
 17866  0060FC  C013  FFF7         	movff	strlen@s+1,tblptrh
 17867  006100  6AF8               	clrf	tblptru,c
 17868  006102  0E05               	movlw	(high __ramtop+-1)
 17869  006104  64F7               	cpfsgt	tblptrh,c
 17870  006106  D003               	bra	u5587
 17871  006108  0008               	tblrd		*
 17872  00610A  50F5               	movf	tablat,w,c
 17873  00610C  D005               	bra	u5580
 17874  00610E                     u5587:
 17875  00610E  CFF6 FFE1          	movff	tblptrl,fsr1l
 17876  006112  CFF7 FFE2          	movff	tblptrh,fsr1h
 17877  006116  50E7               	movf	indf1,w,c
 17878  006118                     u5580:
 17879  006118  0900               	iorlw	0
 17880  00611A  A4D8               	btfss	status,2,c
 17881  00611C  EF92  F030         	goto	u5591
 17882  006120  EF94  F030         	goto	u5590
 17883  006124                     u5591:
 17884  006124  EF7A  F030         	goto	l8034
 17885  006128                     u5590:
 17886  006128  5014               	movf	strlen@a^0,w,c
 17887  00612A  5C12               	subwf	strlen@s^0,w,c
 17888  00612C  6E12               	movwf	?_strlen^0,c
 17889  00612E  5015               	movf	(strlen@a+1)^0,w,c
 17890  006130  5813               	subwfb	(strlen@s+1)^0,w,c
 17891  006132  6E13               	movwf	(?_strlen+1)^0,c
 17892  006134  0012               	return		;funcret
 17893  006136                     __end_of_strlen:
 17894                           	callstack 0
 17895                           
 17896 ;; *************** function ___wmul *****************
 17897 ;; Defined at:
 17898 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 17899 ;; Parameters:    Size  Location     Type
 17900 ;;  multiplier      2   25[COMRAM] unsigned int 
 17901 ;;  multiplicand    2   27[COMRAM] unsigned int 
 17902 ;; Auto vars:     Size  Location     Type
 17903 ;;  product         2   29[COMRAM] unsigned int 
 17904 ;; Return value:  Size  Location     Type
 17905 ;;                  2   25[COMRAM] unsigned int 
 17906 ;; Registers used:
 17907 ;;		wreg, status,2, status,0, prodl, prodh
 17908 ;; Tracked objects:
 17909 ;;		On entry : 0/0
 17910 ;;		On exit  : 0/0
 17911 ;;		Unchanged: 0/0
 17912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17913 ;;      Params:         4       0       0       0       0       0       0
 17914 ;;      Locals:         2       0       0       0       0       0       0
 17915 ;;      Temps:          0       0       0       0       0       0       0
 17916 ;;      Totals:         6       0       0       0       0       0       0
 17917 ;;Total ram usage:        6 bytes
 17918 ;; Hardware stack levels used: 1
 17919 ;; Hardware stack levels required when called: 4
 17920 ;; This function calls:
 17921 ;;		Nothing
 17922 ;; This function is called by:
 17923 ;;		_LCD_SliderUpdate
 17924 ;;		_LCD_DrawText
 17925 ;;		_LCD_Bitmap
 17926 ;;		_XF_init
 17927 ;; This function uses a non-reentrant model
 17928 ;;
 17929                           
 17930                           	psect	text69
 17931  00631C                     __ptext69:
 17932                           	callstack 0
 17933  00631C                     ___wmul:
 17934                           	callstack 21
 17935  00631C  501A               	movf	___wmul@multiplier^0,w,c
 17936  00631E  021C               	mulwf	___wmul@multiplicand^0,c
 17937  006320  CFF3 F01E          	movff	prodl,___wmul@product
 17938  006324  CFF4 F01F          	movff	prodh,___wmul@product+1
 17939  006328  501A               	movf	___wmul@multiplier^0,w,c
 17940  00632A  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 17941  00632C  50F3               	movf	243,w,c
 17942  00632E  261F               	addwf	(___wmul@product+1)^0,f,c
 17943  006330  501B               	movf	(___wmul@multiplier+1)^0,w,c
 17944  006332  021C               	mulwf	___wmul@multiplicand^0,c
 17945  006334  50F3               	movf	243,w,c
 17946  006336  261F               	addwf	(___wmul@product+1)^0,f,c
 17947  006338  C01E  F01A         	movff	___wmul@product,?___wmul
 17948  00633C  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 17949  006340  0012               	return		;funcret
 17950  006342                     __end_of___wmul:
 17951                           	callstack 0
 17952                           
 17953 ;; *************** function ___awdiv *****************
 17954 ;; Defined at:
 17955 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 17956 ;; Parameters:    Size  Location     Type
 17957 ;;  dividend        2   17[COMRAM] int 
 17958 ;;  divisor         2   19[COMRAM] int 
 17959 ;; Auto vars:     Size  Location     Type
 17960 ;;  quotient        2   23[COMRAM] int 
 17961 ;;  sign            1   22[COMRAM] unsigned char 
 17962 ;;  counter         1   21[COMRAM] unsigned char 
 17963 ;; Return value:  Size  Location     Type
 17964 ;;                  2   17[COMRAM] int 
 17965 ;; Registers used:
 17966 ;;		wreg, status,2, status,0
 17967 ;; Tracked objects:
 17968 ;;		On entry : 0/0
 17969 ;;		On exit  : 0/0
 17970 ;;		Unchanged: 0/0
 17971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17972 ;;      Params:         4       0       0       0       0       0       0
 17973 ;;      Locals:         4       0       0       0       0       0       0
 17974 ;;      Temps:          0       0       0       0       0       0       0
 17975 ;;      Totals:         8       0       0       0       0       0       0
 17976 ;;Total ram usage:        8 bytes
 17977 ;; Hardware stack levels used: 1
 17978 ;; Hardware stack levels required when called: 4
 17979 ;; This function calls:
 17980 ;;		Nothing
 17981 ;; This function is called by:
 17982 ;;		_LCD_ButtonDraw
 17983 ;;		_LCD_DrawText
 17984 ;; This function uses a non-reentrant model
 17985 ;;
 17986                           
 17987                           	psect	text70
 17988  005152                     __ptext70:
 17989                           	callstack 0
 17990  005152                     ___awdiv:
 17991                           	callstack 20
 17992  005152  0E00               	movlw	0
 17993  005154  6E17               	movwf	___awdiv@sign^0,c
 17994  005156  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
 17995  005158  EFB2  F028         	goto	u6090
 17996  00515C  EFB0  F028         	goto	u6091
 17997  005160                     u6091:
 17998  005160  EFB8  F028         	goto	l8668
 17999  005164                     u6090:
 18000  005164  6C14               	negf	___awdiv@divisor^0,c
 18001  005166  1E15               	comf	(___awdiv@divisor+1)^0,f,c
 18002  005168  B0D8               	btfsc	status,0,c
 18003  00516A  2A15               	incf	(___awdiv@divisor+1)^0,f,c
 18004  00516C  0E01               	movlw	1
 18005  00516E  6E17               	movwf	___awdiv@sign^0,c
 18006  005170                     l8668:
 18007  005170  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
 18008  005172  EFBF  F028         	goto	u6100
 18009  005176  EFBD  F028         	goto	u6101
 18010  00517A                     u6101:
 18011  00517A  EFC5  F028         	goto	l8674
 18012  00517E                     u6100:
 18013  00517E  6C12               	negf	___awdiv@dividend^0,c
 18014  005180  1E13               	comf	(___awdiv@dividend+1)^0,f,c
 18015  005182  B0D8               	btfsc	status,0,c
 18016  005184  2A13               	incf	(___awdiv@dividend+1)^0,f,c
 18017  005186  0E01               	movlw	1
 18018  005188  1A17               	xorwf	___awdiv@sign^0,f,c
 18019  00518A                     l8674:
 18020  00518A  0E00               	movlw	0
 18021  00518C  6E19               	movwf	(___awdiv@quotient+1)^0,c
 18022  00518E  0E00               	movlw	0
 18023  005190  6E18               	movwf	___awdiv@quotient^0,c
 18024  005192  5014               	movf	___awdiv@divisor^0,w,c
 18025  005194  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
 18026  005196  B4D8               	btfsc	status,2,c
 18027  005198  EFD0  F028         	goto	u6111
 18028  00519C  EFD2  F028         	goto	u6110
 18029  0051A0                     u6111:
 18030  0051A0  EFFA  F028         	goto	l8696
 18031  0051A4                     u6110:
 18032  0051A4  0E01               	movlw	1
 18033  0051A6  6E16               	movwf	___awdiv@counter^0,c
 18034  0051A8  EFDA  F028         	goto	l8682
 18035  0051AC                     l8680:
 18036  0051AC  90D8               	bcf	status,0,c
 18037  0051AE  3614               	rlcf	___awdiv@divisor^0,f,c
 18038  0051B0  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
 18039  0051B2  2A16               	incf	___awdiv@counter^0,f,c
 18040  0051B4                     l8682:
 18041  0051B4  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
 18042  0051B6  EFDF  F028         	goto	u6121
 18043  0051BA  EFE1  F028         	goto	u6120
 18044  0051BE                     u6121:
 18045  0051BE  EFD6  F028         	goto	l8680
 18046  0051C2                     u6120:
 18047  0051C2                     l8684:
 18048  0051C2  90D8               	bcf	status,0,c
 18049  0051C4  3618               	rlcf	___awdiv@quotient^0,f,c
 18050  0051C6  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
 18051  0051C8  5014               	movf	___awdiv@divisor^0,w,c
 18052  0051CA  5C12               	subwf	___awdiv@dividend^0,w,c
 18053  0051CC  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18054  0051CE  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
 18055  0051D0  A0D8               	btfss	status,0,c
 18056  0051D2  EFED  F028         	goto	u6131
 18057  0051D6  EFEF  F028         	goto	u6130
 18058  0051DA                     u6131:
 18059  0051DA  EFF4  F028         	goto	l8692
 18060  0051DE                     u6130:
 18061  0051DE  5014               	movf	___awdiv@divisor^0,w,c
 18062  0051E0  5E12               	subwf	___awdiv@dividend^0,f,c
 18063  0051E2  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18064  0051E4  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
 18065  0051E6  8018               	bsf	___awdiv@quotient^0,0,c
 18066  0051E8                     l8692:
 18067  0051E8  90D8               	bcf	status,0,c
 18068  0051EA  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
 18069  0051EC  3214               	rrcf	___awdiv@divisor^0,f,c
 18070  0051EE  2E16               	decfsz	___awdiv@counter^0,f,c
 18071  0051F0  EFE1  F028         	goto	l8684
 18072  0051F4                     l8696:
 18073  0051F4  5017               	movf	___awdiv@sign^0,w,c
 18074  0051F6  B4D8               	btfsc	status,2,c
 18075  0051F8  EF00  F029         	goto	u6141
 18076  0051FC  EF02  F029         	goto	u6140
 18077  005200                     u6141:
 18078  005200  EF06  F029         	goto	l8700
 18079  005204                     u6140:
 18080  005204  6C18               	negf	___awdiv@quotient^0,c
 18081  005206  1E19               	comf	(___awdiv@quotient+1)^0,f,c
 18082  005208  B0D8               	btfsc	status,0,c
 18083  00520A  2A19               	incf	(___awdiv@quotient+1)^0,f,c
 18084  00520C                     l8700:
 18085  00520C  C018  F012         	movff	___awdiv@quotient,?___awdiv
 18086  005210  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
 18087  005214  0012               	return		;funcret
 18088  005216                     __end_of___awdiv:
 18089                           	callstack 0
 18090                           
 18091 ;; *************** function _Paddle_draw *****************
 18092 ;; Defined at:
 18093 ;;		line 44 in file "class/paddle.c"
 18094 ;; Parameters:    Size  Location     Type
 18095 ;;  p               2   36[COMRAM] PTR struct Paddle
 18096 ;;		 -> g1(239), 
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;		None
 18099 ;; Return value:  Size  Location     Type
 18100 ;;                  1    wreg      void 
 18101 ;; Registers used:
 18102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18103 ;; Tracked objects:
 18104 ;;		On entry : 0/0
 18105 ;;		On exit  : 0/0
 18106 ;;		Unchanged: 0/0
 18107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18108 ;;      Params:         2       0       0       0       0       0       0
 18109 ;;      Locals:         0       0       0       0       0       0       0
 18110 ;;      Temps:          4       0       0       0       0       0       0
 18111 ;;      Totals:         6       0       0       0       0       0       0
 18112 ;;Total ram usage:        6 bytes
 18113 ;; Hardware stack levels used: 1
 18114 ;; Hardware stack levels required when called: 5
 18115 ;; This function calls:
 18116 ;;		_LCD_DrawRect
 18117 ;; This function is called by:
 18118 ;;		_Menu_inGameDraw
 18119 ;;		_displayController
 18120 ;; This function uses a non-reentrant model
 18121 ;;
 18122                           
 18123                           	psect	text71
 18124  004310                     __ptext71:
 18125                           	callstack 0
 18126  004310                     _Paddle_draw:
 18127                           	callstack 21
 18128  004310                     
 18129                           ;class/paddle.c: 44: void Paddle_draw(struct Paddle* p);class/paddle.c: 45: {;class/padd
      +                          le.c: 46:     LCD_DrawRect(p->oldx,p->oldy,p->oldx+50,p->oldy+10,1,0b0000000000000000);
 18130  004310  EE20 F004          	lfsr	2,4
 18131  004314  5025               	movf	Paddle_draw@p^0,w,c
 18132  004316  26D9               	addwf	fsr2l,f,c
 18133  004318  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18134  00431A  22DA               	addwfc	fsr2h,f,c
 18135  00431C  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18136  004320  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18137  004324  EE20 F006          	lfsr	2,6
 18138  004328  5025               	movf	Paddle_draw@p^0,w,c
 18139  00432A  26D9               	addwf	fsr2l,f,c
 18140  00432C  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18141  00432E  22DA               	addwfc	fsr2h,f,c
 18142  004330  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18143  004334  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18144  004338  EE20 F004          	lfsr	2,4
 18145  00433C  5025               	movf	Paddle_draw@p^0,w,c
 18146  00433E  26D9               	addwf	fsr2l,f,c
 18147  004340  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18148  004342  22DA               	addwfc	fsr2h,f,c
 18149  004344  CFDE F027          	movff	postinc2,??_Paddle_draw
 18150  004348  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18151  00434C  0E32               	movlw	50
 18152  00434E  2427               	addwf	??_Paddle_draw^0,w,c
 18153  004350  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18154  004352  0E00               	movlw	0
 18155  004354  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18156  004356  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18157  004358  EE20 F006          	lfsr	2,6
 18158  00435C  5025               	movf	Paddle_draw@p^0,w,c
 18159  00435E  26D9               	addwf	fsr2l,f,c
 18160  004360  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18161  004362  22DA               	addwfc	fsr2h,f,c
 18162  004364  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18163  004368  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18164  00436C  0E0A               	movlw	10
 18165  00436E  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18166  004370  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18167  004372  0E00               	movlw	0
 18168  004374  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18169  004376  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18170  004378  0E01               	movlw	1
 18171  00437A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18172  00437C  0E00               	movlw	0
 18173  00437E  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18174  004380  0E00               	movlw	0
 18175  004382  6E1B               	movwf	LCD_DrawRect@color^0,c
 18176  004384  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 18177  004388                     
 18178                           ;class/paddle.c: 47:     p->oldx=p->x;
 18179  004388  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18180  00438C  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18181  004390  EE10 F004          	lfsr	1,4
 18182  004394  5025               	movf	Paddle_draw@p^0,w,c
 18183  004396  26E1               	addwf	fsr1l,f,c
 18184  004398  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18185  00439A  22E2               	addwfc	fsr1h,f,c
 18186  00439C  CFDE FFE6          	movff	postinc2,postinc1
 18187  0043A0  CFDD FFE5          	movff	postdec2,postdec1
 18188  0043A4                     
 18189                           ;class/paddle.c: 48:     p->oldy=p->y;
 18190  0043A4  EE20 F002          	lfsr	2,2
 18191  0043A8  5025               	movf	Paddle_draw@p^0,w,c
 18192  0043AA  26D9               	addwf	fsr2l,f,c
 18193  0043AC  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18194  0043AE  22DA               	addwfc	fsr2h,f,c
 18195  0043B0  EE10 F006          	lfsr	1,6
 18196  0043B4  5025               	movf	Paddle_draw@p^0,w,c
 18197  0043B6  26E1               	addwf	fsr1l,f,c
 18198  0043B8  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18199  0043BA  22E2               	addwfc	fsr1h,f,c
 18200  0043BC  CFDE FFE6          	movff	postinc2,postinc1
 18201  0043C0  CFDD FFE5          	movff	postdec2,postdec1
 18202                           
 18203                           ;class/paddle.c: 50:     LCD_DrawRect(p->x,p->y,p->x+50,p->y+10,1,p->color);
 18204  0043C4  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18205  0043C8  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18206  0043CC  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18207  0043D0  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18208  0043D4  EE20 F002          	lfsr	2,2
 18209  0043D8  5025               	movf	Paddle_draw@p^0,w,c
 18210  0043DA  26D9               	addwf	fsr2l,f,c
 18211  0043DC  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18212  0043DE  22DA               	addwfc	fsr2h,f,c
 18213  0043E0  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18214  0043E4  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18215  0043E8  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18216  0043EC  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18217  0043F0  CFDE F027          	movff	postinc2,??_Paddle_draw
 18218  0043F4  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18219  0043F8  0E32               	movlw	50
 18220  0043FA  2427               	addwf	??_Paddle_draw^0,w,c
 18221  0043FC  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18222  0043FE  0E00               	movlw	0
 18223  004400  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18224  004402  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18225  004404  EE20 F002          	lfsr	2,2
 18226  004408  5025               	movf	Paddle_draw@p^0,w,c
 18227  00440A  26D9               	addwf	fsr2l,f,c
 18228  00440C  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18229  00440E  22DA               	addwfc	fsr2h,f,c
 18230  004410  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18231  004414  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18232  004418  0E0A               	movlw	10
 18233  00441A  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18234  00441C  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18235  00441E  0E00               	movlw	0
 18236  004420  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18237  004422  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18238  004424  0E01               	movlw	1
 18239  004426  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18240  004428  EE20 F008          	lfsr	2,8
 18241  00442C  5025               	movf	Paddle_draw@p^0,w,c
 18242  00442E  26D9               	addwf	fsr2l,f,c
 18243  004430  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18244  004432  22DA               	addwfc	fsr2h,f,c
 18245  004434  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 18246  004438  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 18247  00443C  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 18248  004440  0012               	return		;funcret
 18249  004442                     __end_of_Paddle_draw:
 18250                           	callstack 0
 18251                           
 18252 ;; *************** function _LCD_Fill *****************
 18253 ;; Defined at:
 18254 ;;		line 218 in file "libraries/lcd_highlevel.c"
 18255 ;; Parameters:    Size  Location     Type
 18256 ;;  color           2   17[COMRAM] unsigned short 
 18257 ;; Auto vars:     Size  Location     Type
 18258 ;;  page            2   23[COMRAM] unsigned short 
 18259 ;;  column          2   21[COMRAM] unsigned short 
 18260 ;;  colorL          1   20[COMRAM] unsigned char 
 18261 ;;  colorH          1   19[COMRAM] unsigned char 
 18262 ;; Return value:  Size  Location     Type
 18263 ;;                  1    wreg      void 
 18264 ;; Registers used:
 18265 ;;		wreg, status,2, status,0
 18266 ;; Tracked objects:
 18267 ;;		On entry : 0/0
 18268 ;;		On exit  : 0/0
 18269 ;;		Unchanged: 0/0
 18270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18271 ;;      Params:         2       0       0       0       0       0       0
 18272 ;;      Locals:         6       0       0       0       0       0       0
 18273 ;;      Temps:          0       0       0       0       0       0       0
 18274 ;;      Totals:         8       0       0       0       0       0       0
 18275 ;;Total ram usage:        8 bytes
 18276 ;; Hardware stack levels used: 1
 18277 ;; Hardware stack levels required when called: 4
 18278 ;; This function calls:
 18279 ;;		Nothing
 18280 ;; This function is called by:
 18281 ;;		_Factory_init
 18282 ;;		_Menu_welcomeDraw
 18283 ;;		_Menu_parametersDraw
 18284 ;;		_Menu_inGameDraw
 18285 ;;		_Menu_endGame
 18286 ;; This function uses a non-reentrant model
 18287 ;;
 18288                           
 18289                           	psect	text72
 18290  0052D8                     __ptext72:
 18291                           	callstack 0
 18292  0052D8                     _LCD_Fill:
 18293                           	callstack 21
 18294  0052D8                     
 18295                           ;libraries/lcd_highlevel.c: 218: void LCD_Fill(uint16_t color);libraries/lcd_highlevel.c
      +                          : 219: {;libraries/lcd_highlevel.c: 220:   uint16_t column;;libraries/lcd_highlevel.c: 2
      +                          21:   uint16_t page;;libraries/lcd_highlevel.c: 222:   uint8_t colorH, colorL;;libraries
      +                          /lcd_highlevel.c: 223:   colorH = color >> 8;
 18296  0052D8  5013               	movf	(LCD_Fill@color+1)^0,w,c
 18297  0052DA  6E14               	movwf	LCD_Fill@colorH^0,c
 18298  0052DC                     
 18299                           ;libraries/lcd_highlevel.c: 224:   colorL = color;
 18300  0052DC  C012  F015         	movff	LCD_Fill@color,LCD_Fill@colorL
 18301                           
 18302                           ;libraries/lcd_highlevel.c: 226:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18303  0052E0  0E2A               	movlw	42
 18304  0052E2  6E80               	movwf	128,c	;volatile
 18305  0052E4  988B               	bcf	3979,4,c	;volatile
 18306  0052E6  968B               	bcf	3979,3,c	;volatile
 18307  0052E8  868B               	bsf	3979,3,c	;volatile
 18308  0052EA  888B               	bsf	3979,4,c	;volatile
 18309                           
 18310                           ;libraries/lcd_highlevel.c: 227:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18311  0052EC  0E00               	movlw	0
 18312  0052EE  6E80               	movwf	128,c	;volatile
 18313  0052F0  968B               	bcf	3979,3,c	;volatile
 18314  0052F2  868B               	bsf	3979,3,c	;volatile
 18315                           
 18316                           ;libraries/lcd_highlevel.c: 228:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18317  0052F4  0E00               	movlw	0
 18318  0052F6  6E80               	movwf	128,c	;volatile
 18319  0052F8  968B               	bcf	3979,3,c	;volatile
 18320  0052FA  868B               	bsf	3979,3,c	;volatile
 18321                           
 18322                           ;libraries/lcd_highlevel.c: 229:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18323  0052FC  0E00               	movlw	0
 18324  0052FE  6E80               	movwf	128,c	;volatile
 18325  005300  968B               	bcf	3979,3,c	;volatile
 18326  005302  868B               	bsf	3979,3,c	;volatile
 18327                           
 18328                           ;libraries/lcd_highlevel.c: 230:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 18329  005304  0EEF               	movlw	239
 18330  005306  6E80               	movwf	128,c	;volatile
 18331  005308  968B               	bcf	3979,3,c	;volatile
 18332  00530A  868B               	bsf	3979,3,c	;volatile
 18333                           
 18334                           ;libraries/lcd_highlevel.c: 232:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18335  00530C  0E2B               	movlw	43
 18336  00530E  6E80               	movwf	128,c	;volatile
 18337  005310  988B               	bcf	3979,4,c	;volatile
 18338  005312  968B               	bcf	3979,3,c	;volatile
 18339  005314  868B               	bsf	3979,3,c	;volatile
 18340  005316  888B               	bsf	3979,4,c	;volatile
 18341                           
 18342                           ;libraries/lcd_highlevel.c: 233:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18343  005318  0E00               	movlw	0
 18344  00531A  6E80               	movwf	128,c	;volatile
 18345  00531C  968B               	bcf	3979,3,c	;volatile
 18346  00531E  868B               	bsf	3979,3,c	;volatile
 18347                           
 18348                           ;libraries/lcd_highlevel.c: 234:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18349  005320  0E00               	movlw	0
 18350  005322  6E80               	movwf	128,c	;volatile
 18351  005324  968B               	bcf	3979,3,c	;volatile
 18352  005326  868B               	bsf	3979,3,c	;volatile
 18353                           
 18354                           ;libraries/lcd_highlevel.c: 235:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18355  005328  0E01               	movlw	1
 18356  00532A  6E80               	movwf	128,c	;volatile
 18357  00532C  968B               	bcf	3979,3,c	;volatile
 18358  00532E  868B               	bsf	3979,3,c	;volatile
 18359                           
 18360                           ;libraries/lcd_highlevel.c: 236:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18361  005330  0E3F               	movlw	63
 18362  005332  6E80               	movwf	128,c	;volatile
 18363  005334  968B               	bcf	3979,3,c	;volatile
 18364  005336  868B               	bsf	3979,3,c	;volatile
 18365                           
 18366                           ;libraries/lcd_highlevel.c: 238:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18367  005338  0E2C               	movlw	44
 18368  00533A  6E80               	movwf	128,c	;volatile
 18369  00533C  988B               	bcf	3979,4,c	;volatile
 18370  00533E  968B               	bcf	3979,3,c	;volatile
 18371  005340  868B               	bsf	3979,3,c	;volatile
 18372  005342  888B               	bsf	3979,4,c	;volatile
 18373                           
 18374                           ;libraries/lcd_highlevel.c: 239:   for(column=0; column<320; column++)
 18375  005344  0E00               	movlw	0
 18376  005346  6E17               	movwf	(LCD_Fill@column+1)^0,c
 18377  005348  0E00               	movlw	0
 18378  00534A  6E16               	movwf	LCD_Fill@column^0,c
 18379  00534C                     l9470:
 18380                           
 18381                           ;libraries/lcd_highlevel.c: 240:   {;libraries/lcd_highlevel.c: 241:     for(page=0; pag
      +                          e<240; page++)
 18382  00534C  0E00               	movlw	0
 18383  00534E  6E19               	movwf	(LCD_Fill@page+1)^0,c
 18384  005350  0E00               	movlw	0
 18385  005352  6E18               	movwf	LCD_Fill@page^0,c
 18386  005354                     l223:
 18387                           
 18388                           ;libraries/lcd_highlevel.c: 242:     {;libraries/lcd_highlevel.c: 243:       PORTA = col
      +                          orH;
 18389  005354  C014  FF80         	movff	LCD_Fill@colorH,3968	;volatile
 18390                           
 18391                           ;libraries/lcd_highlevel.c: 244:       LATC3 = 0;
 18392  005358  968B               	bcf	3979,3,c	;volatile
 18393                           
 18394                           ;libraries/lcd_highlevel.c: 245:       LATC3 = 1;
 18395  00535A  868B               	bsf	3979,3,c	;volatile
 18396                           
 18397                           ;libraries/lcd_highlevel.c: 246:       PORTA = colorL;
 18398  00535C  C015  FF80         	movff	LCD_Fill@colorL,3968	;volatile
 18399                           
 18400                           ;libraries/lcd_highlevel.c: 247:       LATC3 = 0;
 18401  005360  968B               	bcf	3979,3,c	;volatile
 18402                           
 18403                           ;libraries/lcd_highlevel.c: 248:       LATC3 = 1;
 18404  005362  868B               	bsf	3979,3,c	;volatile
 18405  005364                     
 18406                           ;libraries/lcd_highlevel.c: 249:     }
 18407  005364  4A18               	infsnz	LCD_Fill@page^0,f,c
 18408  005366  2A19               	incf	(LCD_Fill@page+1)^0,f,c
 18409  005368  5019               	movf	(LCD_Fill@page+1)^0,w,c
 18410  00536A  E109               	bnz	u6650
 18411  00536C  0EF0               	movlw	240
 18412  00536E  5C18               	subwf	LCD_Fill@page^0,w,c
 18413  005370  A0D8               	btfss	status,0,c
 18414  005372  EFBD  F029         	goto	u6651
 18415  005376  EFBF  F029         	goto	u6650
 18416  00537A                     u6651:
 18417  00537A  EFAA  F029         	goto	l223
 18418  00537E                     u6650:
 18419  00537E                     
 18420                           ;libraries/lcd_highlevel.c: 250:   }
 18421  00537E  4A16               	infsnz	LCD_Fill@column^0,f,c
 18422  005380  2A17               	incf	(LCD_Fill@column+1)^0,f,c
 18423  005382  0E40               	movlw	64
 18424  005384  5C16               	subwf	LCD_Fill@column^0,w,c
 18425  005386  0E01               	movlw	1
 18426  005388  5817               	subwfb	(LCD_Fill@column+1)^0,w,c
 18427  00538A  A0D8               	btfss	status,0,c
 18428  00538C  EFCA  F029         	goto	u6661
 18429  005390  EFCC  F029         	goto	u6660
 18430  005394                     u6661:
 18431  005394  EFA6  F029         	goto	l9470
 18432  005398                     u6660:
 18433  005398  0012               	return		;funcret
 18434  00539A                     __end_of_LCD_Fill:
 18435                           	callstack 0
 18436                           
 18437 ;; *************** function _Ball_draw *****************
 18438 ;; Defined at:
 18439 ;;		line 17 in file "class/ball.c"
 18440 ;; Parameters:    Size  Location     Type
 18441 ;;  b               2   36[COMRAM] PTR struct Ball
 18442 ;;		 -> g1(239), 
 18443 ;; Auto vars:     Size  Location     Type
 18444 ;;		None
 18445 ;; Return value:  Size  Location     Type
 18446 ;;                  1    wreg      void 
 18447 ;; Registers used:
 18448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18449 ;; Tracked objects:
 18450 ;;		On entry : 0/0
 18451 ;;		On exit  : 0/0
 18452 ;;		Unchanged: 0/0
 18453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18454 ;;      Params:         2       0       0       0       0       0       0
 18455 ;;      Locals:         0       0       0       0       0       0       0
 18456 ;;      Temps:          8       0       0       0       0       0       0
 18457 ;;      Totals:        10       0       0       0       0       0       0
 18458 ;;Total ram usage:       10 bytes
 18459 ;; Hardware stack levels used: 1
 18460 ;; Hardware stack levels required when called: 5
 18461 ;; This function calls:
 18462 ;;		_LCD_DrawRect
 18463 ;; This function is called by:
 18464 ;;		_Menu_inGameDraw
 18465 ;;		_displayController
 18466 ;; This function uses a non-reentrant model
 18467 ;;
 18468                           
 18469                           	psect	text73
 18470  004078                     __ptext73:
 18471                           	callstack 0
 18472  004078                     _Ball_draw:
 18473                           	callstack 21
 18474  004078                     
 18475                           ;class/ball.c: 17: void Ball_draw(struct Ball* b);class/ball.c: 18: {;class/ball.c: 19: 
      +                              LCD_DrawRect(b->oldx-4,b->oldy-4,b->oldx+4,b->oldy+4,1,0b0000000000000000);
 18476  004078  EE20 F004          	lfsr	2,4
 18477  00407C  5025               	movf	Ball_draw@b^0,w,c
 18478  00407E  26D9               	addwf	fsr2l,f,c
 18479  004080  5026               	movf	(Ball_draw@b+1)^0,w,c
 18480  004082  22DA               	addwfc	fsr2h,f,c
 18481  004084  CFDE F027          	movff	postinc2,??_Ball_draw
 18482  004088  CFDD F028          	movff	postdec2,??_Ball_draw+1
 18483  00408C  0EFC               	movlw	252
 18484  00408E  2427               	addwf	??_Ball_draw^0,w,c
 18485  004090  6E12               	movwf	LCD_DrawRect@posX1^0,c
 18486  004092  0EFF               	movlw	255
 18487  004094  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 18488  004096  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 18489  004098  EE20 F006          	lfsr	2,6
 18490  00409C  5025               	movf	Ball_draw@b^0,w,c
 18491  00409E  26D9               	addwf	fsr2l,f,c
 18492  0040A0  5026               	movf	(Ball_draw@b+1)^0,w,c
 18493  0040A2  22DA               	addwfc	fsr2h,f,c
 18494  0040A4  CFDE F029          	movff	postinc2,??_Ball_draw+2
 18495  0040A8  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 18496  0040AC  0EFC               	movlw	252
 18497  0040AE  2429               	addwf	(??_Ball_draw+2)^0,w,c
 18498  0040B0  6E14               	movwf	LCD_DrawRect@posY1^0,c
 18499  0040B2  0EFF               	movlw	255
 18500  0040B4  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 18501  0040B6  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 18502  0040B8  EE20 F004          	lfsr	2,4
 18503  0040BC  5025               	movf	Ball_draw@b^0,w,c
 18504  0040BE  26D9               	addwf	fsr2l,f,c
 18505  0040C0  5026               	movf	(Ball_draw@b+1)^0,w,c
 18506  0040C2  22DA               	addwfc	fsr2h,f,c
 18507  0040C4  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 18508  0040C8  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 18509  0040CC  0E04               	movlw	4
 18510  0040CE  242B               	addwf	(??_Ball_draw+4)^0,w,c
 18511  0040D0  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18512  0040D2  0E00               	movlw	0
 18513  0040D4  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 18514  0040D6  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18515  0040D8  EE20 F006          	lfsr	2,6
 18516  0040DC  5025               	movf	Ball_draw@b^0,w,c
 18517  0040DE  26D9               	addwf	fsr2l,f,c
 18518  0040E0  5026               	movf	(Ball_draw@b+1)^0,w,c
 18519  0040E2  22DA               	addwfc	fsr2h,f,c
 18520  0040E4  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 18521  0040E8  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 18522  0040EC  0E04               	movlw	4
 18523  0040EE  242D               	addwf	(??_Ball_draw+6)^0,w,c
 18524  0040F0  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18525  0040F2  0E00               	movlw	0
 18526  0040F4  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 18527  0040F6  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18528  0040F8  0E01               	movlw	1
 18529  0040FA  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18530  0040FC  0E00               	movlw	0
 18531  0040FE  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18532  004100  0E00               	movlw	0
 18533  004102  6E1B               	movwf	LCD_DrawRect@color^0,c
 18534  004104  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 18535  004108                     
 18536                           ;class/ball.c: 20:     b->oldx=b->x;
 18537  004108  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18538  00410C  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18539  004110  EE10 F004          	lfsr	1,4
 18540  004114  5025               	movf	Ball_draw@b^0,w,c
 18541  004116  26E1               	addwf	fsr1l,f,c
 18542  004118  5026               	movf	(Ball_draw@b+1)^0,w,c
 18543  00411A  22E2               	addwfc	fsr1h,f,c
 18544  00411C  CFDE FFE6          	movff	postinc2,postinc1
 18545  004120  CFDD FFE5          	movff	postdec2,postdec1
 18546  004124                     
 18547                           ;class/ball.c: 21:     b->oldy=b->y;
 18548  004124  EE20 F002          	lfsr	2,2
 18549  004128  5025               	movf	Ball_draw@b^0,w,c
 18550  00412A  26D9               	addwf	fsr2l,f,c
 18551  00412C  5026               	movf	(Ball_draw@b+1)^0,w,c
 18552  00412E  22DA               	addwfc	fsr2h,f,c
 18553  004130  EE10 F006          	lfsr	1,6
 18554  004134  5025               	movf	Ball_draw@b^0,w,c
 18555  004136  26E1               	addwf	fsr1l,f,c
 18556  004138  5026               	movf	(Ball_draw@b+1)^0,w,c
 18557  00413A  22E2               	addwfc	fsr1h,f,c
 18558  00413C  CFDE FFE6          	movff	postinc2,postinc1
 18559  004140  CFDD FFE5          	movff	postdec2,postdec1
 18560                           
 18561                           ;class/ball.c: 22:     LCD_DrawRect(b->x-4,b->y-4,b->x+4,b->y+4,1,0b1111100000000000);
 18562  004144  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18563  004148  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18564  00414C  CFDE F027          	movff	postinc2,??_Ball_draw
 18565  004150  CFDD F028          	movff	postdec2,??_Ball_draw+1
 18566  004154  0EFC               	movlw	252
 18567  004156  2427               	addwf	??_Ball_draw^0,w,c
 18568  004158  6E12               	movwf	LCD_DrawRect@posX1^0,c
 18569  00415A  0EFF               	movlw	255
 18570  00415C  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 18571  00415E  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 18572  004160  EE20 F002          	lfsr	2,2
 18573  004164  5025               	movf	Ball_draw@b^0,w,c
 18574  004166  26D9               	addwf	fsr2l,f,c
 18575  004168  5026               	movf	(Ball_draw@b+1)^0,w,c
 18576  00416A  22DA               	addwfc	fsr2h,f,c
 18577  00416C  CFDE F029          	movff	postinc2,??_Ball_draw+2
 18578  004170  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 18579  004174  0EFC               	movlw	252
 18580  004176  2429               	addwf	(??_Ball_draw+2)^0,w,c
 18581  004178  6E14               	movwf	LCD_DrawRect@posY1^0,c
 18582  00417A  0EFF               	movlw	255
 18583  00417C  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 18584  00417E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 18585  004180  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18586  004184  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18587  004188  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 18588  00418C  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 18589  004190  0E04               	movlw	4
 18590  004192  242B               	addwf	(??_Ball_draw+4)^0,w,c
 18591  004194  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18592  004196  0E00               	movlw	0
 18593  004198  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 18594  00419A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18595  00419C  EE20 F002          	lfsr	2,2
 18596  0041A0  5025               	movf	Ball_draw@b^0,w,c
 18597  0041A2  26D9               	addwf	fsr2l,f,c
 18598  0041A4  5026               	movf	(Ball_draw@b+1)^0,w,c
 18599  0041A6  22DA               	addwfc	fsr2h,f,c
 18600  0041A8  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 18601  0041AC  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 18602  0041B0  0E04               	movlw	4
 18603  0041B2  242D               	addwf	(??_Ball_draw+6)^0,w,c
 18604  0041B4  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18605  0041B6  0E00               	movlw	0
 18606  0041B8  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 18607  0041BA  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18608  0041BC  0E01               	movlw	1
 18609  0041BE  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18610  0041C0  0EF8               	movlw	248
 18611  0041C2  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18612  0041C4  0E00               	movlw	0
 18613  0041C6  6E1B               	movwf	LCD_DrawRect@color^0,c
 18614  0041C8  EC5F  F016         	call	_LCD_DrawRect	;wreg free
 18615  0041CC  0012               	return		;funcret
 18616  0041CE                     __end_of_Ball_draw:
 18617                           	callstack 0
 18618                           
 18619 ;; *************** function _LCD_DrawRect *****************
 18620 ;; Defined at:
 18621 ;;		line 584 in file "libraries/lcd_highlevel.c"
 18622 ;; Parameters:    Size  Location     Type
 18623 ;;  posX1           2   17[COMRAM] unsigned short 
 18624 ;;  posY1           2   19[COMRAM] unsigned short 
 18625 ;;  posX2           2   21[COMRAM] unsigned short 
 18626 ;;  posY2           2   23[COMRAM] unsigned short 
 18627 ;;  fill            1   25[COMRAM] unsigned char 
 18628 ;;  color           2   26[COMRAM] unsigned short 
 18629 ;; Auto vars:     Size  Location     Type
 18630 ;;  i               2   34[COMRAM] unsigned short 
 18631 ;;  temp            2   30[COMRAM] unsigned short 
 18632 ;;  j               2   28[COMRAM] unsigned short 
 18633 ;;  colorL          1   33[COMRAM] unsigned char 
 18634 ;;  colorH          1   32[COMRAM] unsigned char 
 18635 ;; Return value:  Size  Location     Type
 18636 ;;                  1    wreg      void 
 18637 ;; Registers used:
 18638 ;;		wreg, status,2, status,0
 18639 ;; Tracked objects:
 18640 ;;		On entry : 0/0
 18641 ;;		On exit  : 0/0
 18642 ;;		Unchanged: 0/0
 18643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18644 ;;      Params:        11       0       0       0       0       0       0
 18645 ;;      Locals:         8       0       0       0       0       0       0
 18646 ;;      Temps:          0       0       0       0       0       0       0
 18647 ;;      Totals:        19       0       0       0       0       0       0
 18648 ;;Total ram usage:       19 bytes
 18649 ;; Hardware stack levels used: 1
 18650 ;; Hardware stack levels required when called: 4
 18651 ;; This function calls:
 18652 ;;		Nothing
 18653 ;; This function is called by:
 18654 ;;		_Ball_draw
 18655 ;;		_Paddle_draw
 18656 ;;		_LCD_SliderUpdate
 18657 ;;		_LCD_SliderDraw
 18658 ;;		_LCD_ButtonUpdate
 18659 ;;		_LCD_ButtonDraw
 18660 ;; This function uses a non-reentrant model
 18661 ;;
 18662                           
 18663                           	psect	text74
 18664  002CBE                     __ptext74:
 18665                           	callstack 0
 18666  002CBE                     _LCD_DrawRect:
 18667                           	callstack 21
 18668  002CBE                     
 18669                           ;libraries/lcd_highlevel.c: 584: void LCD_DrawRect(uint16_t posX1,uint16_t posY1, uint16
      +                          _t posX2,;libraries/lcd_highlevel.c: 585:   uint16_t posY2,uint8_t fill,uint16_t color);
      +                          libraries/lcd_highlevel.c: 586: {;libraries/lcd_highlevel.c: 587:   uint16_t i;;librarie
      +                          s/lcd_highlevel.c: 588:   uint16_t j;;libraries/lcd_highlevel.c: 589:   uint16_t temp;;l
      +                          ibraries/lcd_highlevel.c: 590:   uint8_t colorH,colorL;;libraries/lcd_highlevel.c: 592: 
      +                            colorH = color>>8;
 18670  002CBE  501C               	movf	(LCD_DrawRect@color+1)^0,w,c
 18671  002CC0  6E21               	movwf	LCD_DrawRect@colorH^0,c
 18672  002CC2                     
 18673                           ;libraries/lcd_highlevel.c: 593:   colorL = color;
 18674  002CC2  C01B  F022         	movff	LCD_DrawRect@color,LCD_DrawRect@colorL
 18675  002CC6                     
 18676                           ;libraries/lcd_highlevel.c: 597:   if(posX1 > posX2)
 18677  002CC6  5012               	movf	LCD_DrawRect@posX1^0,w,c
 18678  002CC8  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18679  002CCA  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18680  002CCC  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18681  002CCE  B0D8               	btfsc	status,0,c
 18682  002CD0  EF6C  F016         	goto	u5941
 18683  002CD4  EF6E  F016         	goto	u5940
 18684  002CD8                     u5941:
 18685  002CD8  EF7A  F016         	goto	l8226
 18686  002CDC                     u5940:
 18687  002CDC                     
 18688                           ;libraries/lcd_highlevel.c: 598:   {;libraries/lcd_highlevel.c: 599:     temp = posX1;
 18689  002CDC  C012  F01F         	movff	LCD_DrawRect@posX1,LCD_DrawRect@temp
 18690  002CE0  C013  F020         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@temp+1
 18691                           
 18692                           ;libraries/lcd_highlevel.c: 600:     posX1 = posX2;
 18693  002CE4  C016  F012         	movff	LCD_DrawRect@posX2,LCD_DrawRect@posX1
 18694  002CE8  C017  F013         	movff	LCD_DrawRect@posX2+1,LCD_DrawRect@posX1+1
 18695                           
 18696                           ;libraries/lcd_highlevel.c: 601:     posX2 = temp;
 18697  002CEC  C01F  F016         	movff	LCD_DrawRect@temp,LCD_DrawRect@posX2
 18698  002CF0  C020  F017         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posX2+1
 18699  002CF4                     l8226:
 18700                           
 18701                           ;libraries/lcd_highlevel.c: 603:   if(posY1 > posY2)
 18702  002CF4  5014               	movf	LCD_DrawRect@posY1^0,w,c
 18703  002CF6  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18704  002CF8  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18705  002CFA  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18706  002CFC  B0D8               	btfsc	status,0,c
 18707  002CFE  EF83  F016         	goto	u5951
 18708  002D02  EF85  F016         	goto	u5950
 18709  002D06                     u5951:
 18710  002D06  EF91  F016         	goto	l8230
 18711  002D0A                     u5950:
 18712  002D0A                     
 18713                           ;libraries/lcd_highlevel.c: 604:   {;libraries/lcd_highlevel.c: 605:     temp = posY1;
 18714  002D0A  C014  F01F         	movff	LCD_DrawRect@posY1,LCD_DrawRect@temp
 18715  002D0E  C015  F020         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@temp+1
 18716                           
 18717                           ;libraries/lcd_highlevel.c: 606:     posY1 = posY2;
 18718  002D12  C018  F014         	movff	LCD_DrawRect@posY2,LCD_DrawRect@posY1
 18719  002D16  C019  F015         	movff	LCD_DrawRect@posY2+1,LCD_DrawRect@posY1+1
 18720                           
 18721                           ;libraries/lcd_highlevel.c: 607:     posY2 = temp;
 18722  002D1A  C01F  F018         	movff	LCD_DrawRect@temp,LCD_DrawRect@posY2
 18723  002D1E  C020  F019         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posY2+1
 18724  002D22                     l8230:
 18725                           
 18726                           ;libraries/lcd_highlevel.c: 610:   if(fill==1)
 18727  002D22  041A               	decf	LCD_DrawRect@fill^0,w,c
 18728  002D24  A4D8               	btfss	status,2,c
 18729  002D26  EF97  F016         	goto	u5961
 18730  002D2A  EF99  F016         	goto	u5960
 18731  002D2E                     u5961:
 18732  002D2E  EFFB  F016         	goto	l8306
 18733  002D32                     u5960:
 18734  002D32                     
 18735                           ;libraries/lcd_highlevel.c: 611:   {;libraries/lcd_highlevel.c: 613:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18736  002D32  0E2A               	movlw	42
 18737  002D34  6E80               	movwf	128,c	;volatile
 18738  002D36  988B               	bcf	3979,4,c	;volatile
 18739  002D38  968B               	bcf	3979,3,c	;volatile
 18740  002D3A  868B               	bsf	3979,3,c	;volatile
 18741  002D3C  888B               	bsf	3979,4,c	;volatile
 18742                           
 18743                           ;libraries/lcd_highlevel.c: 614:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18744  002D3E  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18745  002D40  6E80               	movwf	128,c	;volatile
 18746  002D42  968B               	bcf	3979,3,c	;volatile
 18747  002D44  868B               	bsf	3979,3,c	;volatile
 18748  002D46                     
 18749                           ;libraries/lcd_highlevel.c: 615:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18750  002D46  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18751  002D4A  968B               	bcf	3979,3,c	;volatile
 18752  002D4C  868B               	bsf	3979,3,c	;volatile
 18753                           
 18754                           ;libraries/lcd_highlevel.c: 616:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18755  002D4E  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18756  002D50  6E80               	movwf	128,c	;volatile
 18757  002D52  968B               	bcf	3979,3,c	;volatile
 18758  002D54  868B               	bsf	3979,3,c	;volatile
 18759  002D56                     
 18760                           ;libraries/lcd_highlevel.c: 617:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18761  002D56  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18762  002D5A  968B               	bcf	3979,3,c	;volatile
 18763  002D5C  868B               	bsf	3979,3,c	;volatile
 18764                           
 18765                           ;libraries/lcd_highlevel.c: 619:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18766  002D5E  0E2B               	movlw	43
 18767  002D60  6E80               	movwf	128,c	;volatile
 18768  002D62  988B               	bcf	3979,4,c	;volatile
 18769  002D64  968B               	bcf	3979,3,c	;volatile
 18770  002D66  868B               	bsf	3979,3,c	;volatile
 18771  002D68  888B               	bsf	3979,4,c	;volatile
 18772                           
 18773                           ;libraries/lcd_highlevel.c: 620:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18774  002D6A  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18775  002D6C  6E80               	movwf	128,c	;volatile
 18776  002D6E  968B               	bcf	3979,3,c	;volatile
 18777  002D70  868B               	bsf	3979,3,c	;volatile
 18778  002D72                     
 18779                           ;libraries/lcd_highlevel.c: 621:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18780  002D72  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18781  002D76  968B               	bcf	3979,3,c	;volatile
 18782  002D78  868B               	bsf	3979,3,c	;volatile
 18783                           
 18784                           ;libraries/lcd_highlevel.c: 622:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18785  002D7A  0E01               	movlw	1
 18786  002D7C  6E80               	movwf	128,c	;volatile
 18787  002D7E  968B               	bcf	3979,3,c	;volatile
 18788  002D80  868B               	bsf	3979,3,c	;volatile
 18789                           
 18790                           ;libraries/lcd_highlevel.c: 623:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18791  002D82  0E3F               	movlw	63
 18792  002D84  6E80               	movwf	128,c	;volatile
 18793  002D86  968B               	bcf	3979,3,c	;volatile
 18794  002D88  868B               	bsf	3979,3,c	;volatile
 18795                           
 18796                           ;libraries/lcd_highlevel.c: 625:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18797  002D8A  0E2C               	movlw	44
 18798  002D8C  6E80               	movwf	128,c	;volatile
 18799  002D8E  988B               	bcf	3979,4,c	;volatile
 18800  002D90  968B               	bcf	3979,3,c	;volatile
 18801  002D92  868B               	bsf	3979,3,c	;volatile
 18802  002D94  888B               	bsf	3979,4,c	;volatile
 18803  002D96                     
 18804                           ;libraries/lcd_highlevel.c: 626:     for(i=posX1;i<=posX2;i++)
 18805  002D96  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18806  002D9A  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18807  002D9E  EFEE  F016         	goto	l8304
 18808  002DA2                     l280:
 18809                           
 18810                           ;libraries/lcd_highlevel.c: 627:     {;libraries/lcd_highlevel.c: 628:       for(j=posY1
      +                          ;j<=posY2;j++)
 18811  002DA2  C014  F01D         	movff	LCD_DrawRect@posY1,LCD_DrawRect@j
 18812  002DA6  C015  F01E         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@j+1
 18813  002DAA  EFE1  F016         	goto	l8300
 18814  002DAE                     l282:
 18815                           
 18816                           ;libraries/lcd_highlevel.c: 629:       {;libraries/lcd_highlevel.c: 630:         PORTA =
      +                           colorH; LATC3 = 0; LATC3 = 1;;
 18817  002DAE  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18818  002DB2  968B               	bcf	3979,3,c	;volatile
 18819  002DB4  868B               	bsf	3979,3,c	;volatile
 18820                           
 18821                           ;libraries/lcd_highlevel.c: 631:         PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18822  002DB6  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18823  002DBA  968B               	bcf	3979,3,c	;volatile
 18824  002DBC  868B               	bsf	3979,3,c	;volatile
 18825  002DBE                     
 18826                           ;libraries/lcd_highlevel.c: 632:       }
 18827  002DBE  4A1D               	infsnz	LCD_DrawRect@j^0,f,c
 18828  002DC0  2A1E               	incf	(LCD_DrawRect@j+1)^0,f,c
 18829  002DC2                     l8300:
 18830  002DC2  501D               	movf	LCD_DrawRect@j^0,w,c
 18831  002DC4  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18832  002DC6  501E               	movf	(LCD_DrawRect@j+1)^0,w,c
 18833  002DC8  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18834  002DCA  B0D8               	btfsc	status,0,c
 18835  002DCC  EFEA  F016         	goto	u5971
 18836  002DD0  EFEC  F016         	goto	u5970
 18837  002DD4                     u5971:
 18838  002DD4  EFD7  F016         	goto	l282
 18839  002DD8                     u5970:
 18840  002DD8                     
 18841                           ;libraries/lcd_highlevel.c: 633:     }
 18842  002DD8  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18843  002DDA  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18844  002DDC                     l8304:
 18845  002DDC  5023               	movf	LCD_DrawRect@i^0,w,c
 18846  002DDE  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18847  002DE0  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18848  002DE2  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18849  002DE4  B0D8               	btfsc	status,0,c
 18850  002DE6  EFF7  F016         	goto	u5981
 18851  002DEA  EFF9  F016         	goto	u5980
 18852  002DEE                     u5981:
 18853  002DEE  EFD1  F016         	goto	l280
 18854  002DF2                     u5980:
 18855  002DF2  EFFB  F017         	goto	l298
 18856  002DF6                     l8306:
 18857                           
 18858                           ;libraries/lcd_highlevel.c: 637:   {;libraries/lcd_highlevel.c: 639:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18859  002DF6  0E2A               	movlw	42
 18860  002DF8  6E80               	movwf	128,c	;volatile
 18861  002DFA  988B               	bcf	3979,4,c	;volatile
 18862  002DFC  968B               	bcf	3979,3,c	;volatile
 18863  002DFE  868B               	bsf	3979,3,c	;volatile
 18864  002E00  888B               	bsf	3979,4,c	;volatile
 18865                           
 18866                           ;libraries/lcd_highlevel.c: 640:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18867  002E02  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18868  002E04  6E80               	movwf	128,c	;volatile
 18869  002E06  968B               	bcf	3979,3,c	;volatile
 18870  002E08  868B               	bsf	3979,3,c	;volatile
 18871  002E0A                     
 18872                           ;libraries/lcd_highlevel.c: 641:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18873  002E0A  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18874  002E0E  968B               	bcf	3979,3,c	;volatile
 18875  002E10  868B               	bsf	3979,3,c	;volatile
 18876                           
 18877                           ;libraries/lcd_highlevel.c: 642:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18878  002E12  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18879  002E14  6E80               	movwf	128,c	;volatile
 18880  002E16  968B               	bcf	3979,3,c	;volatile
 18881  002E18  868B               	bsf	3979,3,c	;volatile
 18882  002E1A                     
 18883                           ;libraries/lcd_highlevel.c: 643:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18884  002E1A  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18885  002E1E  968B               	bcf	3979,3,c	;volatile
 18886  002E20  868B               	bsf	3979,3,c	;volatile
 18887                           
 18888                           ;libraries/lcd_highlevel.c: 645:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18889  002E22  0E2B               	movlw	43
 18890  002E24  6E80               	movwf	128,c	;volatile
 18891  002E26  988B               	bcf	3979,4,c	;volatile
 18892  002E28  968B               	bcf	3979,3,c	;volatile
 18893  002E2A  868B               	bsf	3979,3,c	;volatile
 18894  002E2C  888B               	bsf	3979,4,c	;volatile
 18895                           
 18896                           ;libraries/lcd_highlevel.c: 646:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18897  002E2E  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18898  002E30  6E80               	movwf	128,c	;volatile
 18899  002E32  968B               	bcf	3979,3,c	;volatile
 18900  002E34  868B               	bsf	3979,3,c	;volatile
 18901  002E36                     
 18902                           ;libraries/lcd_highlevel.c: 647:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18903  002E36  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18904  002E3A  968B               	bcf	3979,3,c	;volatile
 18905  002E3C  868B               	bsf	3979,3,c	;volatile
 18906                           
 18907                           ;libraries/lcd_highlevel.c: 648:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18908  002E3E  0E01               	movlw	1
 18909  002E40  6E80               	movwf	128,c	;volatile
 18910  002E42  968B               	bcf	3979,3,c	;volatile
 18911  002E44  868B               	bsf	3979,3,c	;volatile
 18912                           
 18913                           ;libraries/lcd_highlevel.c: 649:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18914  002E46  0E3F               	movlw	63
 18915  002E48  6E80               	movwf	128,c	;volatile
 18916  002E4A  968B               	bcf	3979,3,c	;volatile
 18917  002E4C  868B               	bsf	3979,3,c	;volatile
 18918                           
 18919                           ;libraries/lcd_highlevel.c: 651:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18920  002E4E  0E2C               	movlw	44
 18921  002E50  6E80               	movwf	128,c	;volatile
 18922  002E52  988B               	bcf	3979,4,c	;volatile
 18923  002E54  968B               	bcf	3979,3,c	;volatile
 18924  002E56  868B               	bsf	3979,3,c	;volatile
 18925  002E58  888B               	bsf	3979,4,c	;volatile
 18926  002E5A                     
 18927                           ;libraries/lcd_highlevel.c: 653:     for(i=posX1;i<=posX2;i++)
 18928  002E5A  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18929  002E5E  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18930  002E62  EF3D  F017         	goto	l8374
 18931  002E66                     l287:
 18932                           
 18933                           ;libraries/lcd_highlevel.c: 654:     {;libraries/lcd_highlevel.c: 655:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18934  002E66  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18935  002E6A  968B               	bcf	3979,3,c	;volatile
 18936  002E6C  868B               	bsf	3979,3,c	;volatile
 18937                           
 18938                           ;libraries/lcd_highlevel.c: 656:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18939  002E6E  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18940  002E72  968B               	bcf	3979,3,c	;volatile
 18941  002E74  868B               	bsf	3979,3,c	;volatile
 18942  002E76                     
 18943                           ;libraries/lcd_highlevel.c: 657:     }
 18944  002E76  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18945  002E78  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18946  002E7A                     l8374:
 18947  002E7A  5023               	movf	LCD_DrawRect@i^0,w,c
 18948  002E7C  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18949  002E7E  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18950  002E80  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18951  002E82  B0D8               	btfsc	status,0,c
 18952  002E84  EF46  F017         	goto	u5991
 18953  002E88  EF48  F017         	goto	u5990
 18954  002E8C                     u5991:
 18955  002E8C  EF33  F017         	goto	l287
 18956  002E90                     u5990:
 18957  002E90                     
 18958                           ;libraries/lcd_highlevel.c: 659:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18959  002E90  0E2B               	movlw	43
 18960  002E92  6E80               	movwf	128,c	;volatile
 18961  002E94  988B               	bcf	3979,4,c	;volatile
 18962  002E96  968B               	bcf	3979,3,c	;volatile
 18963  002E98  868B               	bsf	3979,3,c	;volatile
 18964  002E9A  888B               	bsf	3979,4,c	;volatile
 18965                           
 18966                           ;libraries/lcd_highlevel.c: 660:     PORTA = posY2>>8; LATC3 = 0; LATC3 = 1;;
 18967  002E9C  5019               	movf	(LCD_DrawRect@posY2+1)^0,w,c
 18968  002E9E  6E80               	movwf	128,c	;volatile
 18969  002EA0  968B               	bcf	3979,3,c	;volatile
 18970  002EA2  868B               	bsf	3979,3,c	;volatile
 18971  002EA4                     
 18972                           ;libraries/lcd_highlevel.c: 661:     PORTA = posY2; LATC3 = 0; LATC3 = 1;;
 18973  002EA4  C018  FF80         	movff	LCD_DrawRect@posY2,3968	;volatile
 18974  002EA8  968B               	bcf	3979,3,c	;volatile
 18975  002EAA  868B               	bsf	3979,3,c	;volatile
 18976                           
 18977                           ;libraries/lcd_highlevel.c: 662:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18978  002EAC  0E2C               	movlw	44
 18979  002EAE  6E80               	movwf	128,c	;volatile
 18980  002EB0  988B               	bcf	3979,4,c	;volatile
 18981  002EB2  968B               	bcf	3979,3,c	;volatile
 18982  002EB4  868B               	bsf	3979,3,c	;volatile
 18983  002EB6  888B               	bsf	3979,4,c	;volatile
 18984  002EB8                     
 18985                           ;libraries/lcd_highlevel.c: 663:     for(i=posX1;i<=posX2;i++)
 18986  002EB8  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18987  002EBC  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18988  002EC0  EF6C  F017         	goto	l8408
 18989  002EC4                     l290:
 18990                           
 18991                           ;libraries/lcd_highlevel.c: 664:     {;libraries/lcd_highlevel.c: 665:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18992  002EC4  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18993  002EC8  968B               	bcf	3979,3,c	;volatile
 18994  002ECA  868B               	bsf	3979,3,c	;volatile
 18995                           
 18996                           ;libraries/lcd_highlevel.c: 666:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18997  002ECC  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18998  002ED0  968B               	bcf	3979,3,c	;volatile
 18999  002ED2  868B               	bsf	3979,3,c	;volatile
 19000  002ED4                     
 19001                           ;libraries/lcd_highlevel.c: 667:     }
 19002  002ED4  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19003  002ED6  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19004  002ED8                     l8408:
 19005  002ED8  5023               	movf	LCD_DrawRect@i^0,w,c
 19006  002EDA  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 19007  002EDC  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19008  002EDE  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 19009  002EE0  B0D8               	btfsc	status,0,c
 19010  002EE2  EF75  F017         	goto	u6001
 19011  002EE6  EF77  F017         	goto	u6000
 19012  002EEA                     u6001:
 19013  002EEA  EF62  F017         	goto	l290
 19014  002EEE                     u6000:
 19015  002EEE                     
 19016                           ;libraries/lcd_highlevel.c: 669:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19017  002EEE  0E2A               	movlw	42
 19018  002EF0  6E80               	movwf	128,c	;volatile
 19019  002EF2  988B               	bcf	3979,4,c	;volatile
 19020  002EF4  968B               	bcf	3979,3,c	;volatile
 19021  002EF6  868B               	bsf	3979,3,c	;volatile
 19022  002EF8  888B               	bsf	3979,4,c	;volatile
 19023                           
 19024                           ;libraries/lcd_highlevel.c: 670:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19025  002EFA  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19026  002EFC  6E80               	movwf	128,c	;volatile
 19027  002EFE  968B               	bcf	3979,3,c	;volatile
 19028  002F00  868B               	bsf	3979,3,c	;volatile
 19029  002F02                     
 19030                           ;libraries/lcd_highlevel.c: 671:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19031  002F02  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19032  002F06  968B               	bcf	3979,3,c	;volatile
 19033  002F08  868B               	bsf	3979,3,c	;volatile
 19034                           
 19035                           ;libraries/lcd_highlevel.c: 672:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19036  002F0A  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19037  002F0C  6E80               	movwf	128,c	;volatile
 19038  002F0E  968B               	bcf	3979,3,c	;volatile
 19039  002F10  868B               	bsf	3979,3,c	;volatile
 19040  002F12                     
 19041                           ;libraries/lcd_highlevel.c: 673:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19042  002F12  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19043  002F16  968B               	bcf	3979,3,c	;volatile
 19044  002F18  868B               	bsf	3979,3,c	;volatile
 19045                           
 19046                           ;libraries/lcd_highlevel.c: 675:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19047  002F1A  0E2B               	movlw	43
 19048  002F1C  6E80               	movwf	128,c	;volatile
 19049  002F1E  988B               	bcf	3979,4,c	;volatile
 19050  002F20  968B               	bcf	3979,3,c	;volatile
 19051  002F22  868B               	bsf	3979,3,c	;volatile
 19052  002F24  888B               	bsf	3979,4,c	;volatile
 19053                           
 19054                           ;libraries/lcd_highlevel.c: 676:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 19055  002F26  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 19056  002F28  6E80               	movwf	128,c	;volatile
 19057  002F2A  968B               	bcf	3979,3,c	;volatile
 19058  002F2C  868B               	bsf	3979,3,c	;volatile
 19059  002F2E                     
 19060                           ;libraries/lcd_highlevel.c: 677:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 19061  002F2E  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 19062  002F32  968B               	bcf	3979,3,c	;volatile
 19063  002F34  868B               	bsf	3979,3,c	;volatile
 19064                           
 19065                           ;libraries/lcd_highlevel.c: 678:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 19066  002F36  0E01               	movlw	1
 19067  002F38  6E80               	movwf	128,c	;volatile
 19068  002F3A  968B               	bcf	3979,3,c	;volatile
 19069  002F3C  868B               	bsf	3979,3,c	;volatile
 19070                           
 19071                           ;libraries/lcd_highlevel.c: 679:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 19072  002F3E  0E3F               	movlw	63
 19073  002F40  6E80               	movwf	128,c	;volatile
 19074  002F42  968B               	bcf	3979,3,c	;volatile
 19075  002F44  868B               	bsf	3979,3,c	;volatile
 19076                           
 19077                           ;libraries/lcd_highlevel.c: 680:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19078  002F46  0E2C               	movlw	44
 19079  002F48  6E80               	movwf	128,c	;volatile
 19080  002F4A  988B               	bcf	3979,4,c	;volatile
 19081  002F4C  968B               	bcf	3979,3,c	;volatile
 19082  002F4E  868B               	bsf	3979,3,c	;volatile
 19083  002F50  888B               	bsf	3979,4,c	;volatile
 19084  002F52                     
 19085                           ;libraries/lcd_highlevel.c: 681:     for(i=posY1;i<=posY2;i++)
 19086  002F52  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19087  002F56  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19088  002F5A  EFB9  F017         	goto	l8478
 19089  002F5E                     l293:
 19090                           
 19091                           ;libraries/lcd_highlevel.c: 682:     {;libraries/lcd_highlevel.c: 683:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19092  002F5E  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19093  002F62  968B               	bcf	3979,3,c	;volatile
 19094  002F64  868B               	bsf	3979,3,c	;volatile
 19095                           
 19096                           ;libraries/lcd_highlevel.c: 684:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19097  002F66  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19098  002F6A  968B               	bcf	3979,3,c	;volatile
 19099  002F6C  868B               	bsf	3979,3,c	;volatile
 19100  002F6E                     
 19101                           ;libraries/lcd_highlevel.c: 685:     }
 19102  002F6E  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19103  002F70  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19104  002F72                     l8478:
 19105  002F72  5023               	movf	LCD_DrawRect@i^0,w,c
 19106  002F74  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19107  002F76  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19108  002F78  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19109  002F7A  B0D8               	btfsc	status,0,c
 19110  002F7C  EFC2  F017         	goto	u6011
 19111  002F80  EFC4  F017         	goto	u6010
 19112  002F84                     u6011:
 19113  002F84  EFAF  F017         	goto	l293
 19114  002F88                     u6010:
 19115  002F88                     
 19116                           ;libraries/lcd_highlevel.c: 687:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19117  002F88  0E2A               	movlw	42
 19118  002F8A  6E80               	movwf	128,c	;volatile
 19119  002F8C  988B               	bcf	3979,4,c	;volatile
 19120  002F8E  968B               	bcf	3979,3,c	;volatile
 19121  002F90  868B               	bsf	3979,3,c	;volatile
 19122  002F92  888B               	bsf	3979,4,c	;volatile
 19123                           
 19124                           ;libraries/lcd_highlevel.c: 688:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19125  002F94  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19126  002F96  6E80               	movwf	128,c	;volatile
 19127  002F98  968B               	bcf	3979,3,c	;volatile
 19128  002F9A  868B               	bsf	3979,3,c	;volatile
 19129  002F9C                     
 19130                           ;libraries/lcd_highlevel.c: 689:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19131  002F9C  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19132  002FA0  968B               	bcf	3979,3,c	;volatile
 19133  002FA2  868B               	bsf	3979,3,c	;volatile
 19134                           
 19135                           ;libraries/lcd_highlevel.c: 690:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19136  002FA4  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19137  002FA6  6E80               	movwf	128,c	;volatile
 19138  002FA8  968B               	bcf	3979,3,c	;volatile
 19139  002FAA  868B               	bsf	3979,3,c	;volatile
 19140  002FAC                     
 19141                           ;libraries/lcd_highlevel.c: 691:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19142  002FAC  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19143  002FB0  968B               	bcf	3979,3,c	;volatile
 19144  002FB2  868B               	bsf	3979,3,c	;volatile
 19145                           
 19146                           ;libraries/lcd_highlevel.c: 692:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19147  002FB4  0E2C               	movlw	44
 19148  002FB6  6E80               	movwf	128,c	;volatile
 19149  002FB8  988B               	bcf	3979,4,c	;volatile
 19150  002FBA  968B               	bcf	3979,3,c	;volatile
 19151  002FBC  868B               	bsf	3979,3,c	;volatile
 19152  002FBE  888B               	bsf	3979,4,c	;volatile
 19153  002FC0                     
 19154                           ;libraries/lcd_highlevel.c: 693:     for(i=posY1;i<=posY2;i++)
 19155  002FC0  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19156  002FC4  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19157  002FC8  EFF0  F017         	goto	l8522
 19158  002FCC                     l296:
 19159                           
 19160                           ;libraries/lcd_highlevel.c: 694:     {;libraries/lcd_highlevel.c: 695:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19161  002FCC  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19162  002FD0  968B               	bcf	3979,3,c	;volatile
 19163  002FD2  868B               	bsf	3979,3,c	;volatile
 19164                           
 19165                           ;libraries/lcd_highlevel.c: 696:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19166  002FD4  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19167  002FD8  968B               	bcf	3979,3,c	;volatile
 19168  002FDA  868B               	bsf	3979,3,c	;volatile
 19169  002FDC                     
 19170                           ;libraries/lcd_highlevel.c: 697:     }
 19171  002FDC  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19172  002FDE  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19173  002FE0                     l8522:
 19174  002FE0  5023               	movf	LCD_DrawRect@i^0,w,c
 19175  002FE2  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19176  002FE4  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19177  002FE6  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19178  002FE8  B0D8               	btfsc	status,0,c
 19179  002FEA  EFF9  F017         	goto	u6021
 19180  002FEE  EFFB  F017         	goto	u6020
 19181  002FF2                     u6021:
 19182  002FF2  EFE6  F017         	goto	l296
 19183  002FF6                     u6020:
 19184  002FF6                     l298:
 19185  002FF6  0012               	return		;funcret
 19186  002FF8                     __end_of_LCD_DrawRect:
 19187                           	callstack 0
 19188                           
 19189 ;; *************** function _XF_popEvent *****************
 19190 ;; Defined at:
 19191 ;;		line 72 in file "xf/xf.c"
 19192 ;; Parameters:    Size  Location     Type
 19193 ;;  inISR           1    wreg     _Bool 
 19194 ;; Auto vars:     Size  Location     Type
 19195 ;;  inISR           1   24[COMRAM] _Bool 
 19196 ;;  ev              1   23[COMRAM] unsigned char 
 19197 ;; Return value:  Size  Location     Type
 19198 ;;                  1    wreg      unsigned char 
 19199 ;; Registers used:
 19200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19201 ;; Tracked objects:
 19202 ;;		On entry : 0/0
 19203 ;;		On exit  : 0/0
 19204 ;;		Unchanged: 0/0
 19205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19206 ;;      Params:         0       0       0       0       0       0       0
 19207 ;;      Locals:         2       0       0       0       0       0       0
 19208 ;;      Temps:          0       0       0       0       0       0       0
 19209 ;;      Totals:         2       0       0       0       0       0       0
 19210 ;;Total ram usage:        2 bytes
 19211 ;; Hardware stack levels used: 1
 19212 ;; Hardware stack levels required when called: 5
 19213 ;; This function calls:
 19214 ;;		_ENTERCRITICAL
 19215 ;;		_LEAVECRITICAL
 19216 ;;		___awmod
 19217 ;; This function is called by:
 19218 ;;		_Factory_exec
 19219 ;; This function uses a non-reentrant model
 19220 ;;
 19221                           
 19222                           	psect	text75
 19223  005F3A                     __ptext75:
 19224                           	callstack 0
 19225  005F3A                     _XF_popEvent:
 19226                           	callstack 24
 19227                           
 19228                           ;incstack = 0
 19229                           ;XF_popEvent@inISR stored from wreg
 19230  005F3A  6E19               	movwf	XF_popEvent@inISR^0,c
 19231  005F3C                     
 19232                           ;xf/xf.c: 76:     ENTERCRITICAL(inISR);
 19233  005F3C  5019               	movf	XF_popEvent@inISR^0,w,c
 19234  005F3E  ECFA  F031         	call	_ENTERCRITICAL
 19235  005F42                     
 19236                           ;xf/xf.c: 77:     if(theXF.in == theXF.out)
 19237  005F42  0100               	movlb	0	; () banked
 19238  005F44  51DA               	movf	(_theXF+37)& (0+255),w,b
 19239  005F46  19D9               	xorwf	(_theXF+36)& (0+255),w,b
 19240  005F48  A4D8               	btfss	status,2,c
 19241  005F4A  EFA9  F02F         	goto	u7891
 19242  005F4E  EFAB  F02F         	goto	u7890
 19243  005F52                     u7891:
 19244  005F52  EFB1  F02F         	goto	l10312
 19245  005F56                     u7890:
 19246  005F56                     
 19247                           ; BSR set to: 0
 19248                           ;xf/xf.c: 78:     {;xf/xf.c: 79:       LEAVECRITICAL(inISR);
 19249  005F56  5019               	movf	XF_popEvent@inISR^0,w,c
 19250  005F58  ECEF  F031         	call	_LEAVECRITICAL
 19251  005F5C                     
 19252                           ;xf/xf.c: 80:       return ev;
 19253  005F5C  0E00               	movlw	0
 19254  005F5E  EFCC  F02F         	goto	l737
 19255  005F62                     l10312:
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;xf/xf.c: 82:     ev = theXF.eventQueue[theXF.out];
 19259  005F62  0ECD               	movlw	low (_theXF+24)
 19260  005F64  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19261  005F66  6ED9               	movwf	fsr2l,c
 19262  005F68  6ADA               	clrf	fsr2h,c
 19263  005F6A  0E00               	movlw	high (_theXF+24)
 19264  005F6C  22DA               	addwfc	fsr2h,f,c
 19265  005F6E  50DF               	movf	indf2,w,c
 19266  005F70  6E18               	movwf	XF_popEvent@ev^0,c
 19267  005F72                     
 19268                           ; BSR set to: 0
 19269                           ;xf/xf.c: 83:     theXF.out = (theXF.out + 1)%(uint8_t)sizeof(theXF.eventQueue);
 19270  005F72  0E01               	movlw	1
 19271  005F74  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19272  005F76  6E12               	movwf	___awmod@dividend^0,c
 19273  005F78  6A13               	clrf	(___awmod@dividend+1)^0,c
 19274  005F7A  0E00               	movlw	0
 19275  005F7C  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 19276  005F7E  0E00               	movlw	0
 19277  005F80  6E15               	movwf	(___awmod@divisor+1)^0,c
 19278  005F82  0E0C               	movlw	12
 19279  005F84  6E14               	movwf	___awmod@divisor^0,c
 19280  005F86  EC95  F02B         	call	___awmod	;wreg free
 19281  005F8A  5012               	movf	?___awmod^0,w,c
 19282  005F8C  0100               	movlb	0	; () banked
 19283  005F8E  6FDA               	movwf	(_theXF+37)& (0+255),b
 19284  005F90                     
 19285                           ; BSR set to: 0
 19286                           ;xf/xf.c: 84:     LEAVECRITICAL(inISR);
 19287  005F90  5019               	movf	XF_popEvent@inISR^0,w,c
 19288  005F92  ECEF  F031         	call	_LEAVECRITICAL
 19289  005F96                     
 19290                           ;xf/xf.c: 85:     return ev;
 19291  005F96  5018               	movf	XF_popEvent@ev^0,w,c
 19292  005F98                     l737:
 19293  005F98  0012               	return		;funcret
 19294  005F9A                     __end_of_XF_popEvent:
 19295                           	callstack 0
 19296                           
 19297 ;; *************** function ___awmod *****************
 19298 ;; Defined at:
 19299 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 19300 ;; Parameters:    Size  Location     Type
 19301 ;;  dividend        2   17[COMRAM] int 
 19302 ;;  divisor         2   19[COMRAM] int 
 19303 ;; Auto vars:     Size  Location     Type
 19304 ;;  sign            1   22[COMRAM] unsigned char 
 19305 ;;  counter         1   21[COMRAM] unsigned char 
 19306 ;; Return value:  Size  Location     Type
 19307 ;;                  2   17[COMRAM] int 
 19308 ;; Registers used:
 19309 ;;		wreg, status,2, status,0
 19310 ;; Tracked objects:
 19311 ;;		On entry : 0/0
 19312 ;;		On exit  : 0/0
 19313 ;;		Unchanged: 0/0
 19314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19315 ;;      Params:         4       0       0       0       0       0       0
 19316 ;;      Locals:         2       0       0       0       0       0       0
 19317 ;;      Temps:          0       0       0       0       0       0       0
 19318 ;;      Totals:         6       0       0       0       0       0       0
 19319 ;;Total ram usage:        6 bytes
 19320 ;; Hardware stack levels used: 1
 19321 ;; Hardware stack levels required when called: 4
 19322 ;; This function calls:
 19323 ;;		Nothing
 19324 ;; This function is called by:
 19325 ;;		_XF_pushEvent
 19326 ;;		_XF_popEvent
 19327 ;; This function uses a non-reentrant model
 19328 ;;
 19329                           
 19330                           	psect	text76
 19331  00572A                     __ptext76:
 19332                           	callstack 0
 19333  00572A                     ___awmod:
 19334                           	callstack 20
 19335  00572A  0E00               	movlw	0
 19336  00572C  6E17               	movwf	___awmod@sign^0,c
 19337  00572E  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
 19338  005730  EF9E  F02B         	goto	u6150
 19339  005734  EF9C  F02B         	goto	u6151
 19340  005738                     u6151:
 19341  005738  EFA4  F02B         	goto	l8712
 19342  00573C                     u6150:
 19343  00573C  6C12               	negf	___awmod@dividend^0,c
 19344  00573E  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19345  005740  B0D8               	btfsc	status,0,c
 19346  005742  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19347  005744  0E01               	movlw	1
 19348  005746  6E17               	movwf	___awmod@sign^0,c
 19349  005748                     l8712:
 19350  005748  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
 19351  00574A  EFAB  F02B         	goto	u6160
 19352  00574E  EFA9  F02B         	goto	u6161
 19353  005752                     u6161:
 19354  005752  EFAF  F02B         	goto	l8716
 19355  005756                     u6160:
 19356  005756  6C14               	negf	___awmod@divisor^0,c
 19357  005758  1E15               	comf	(___awmod@divisor+1)^0,f,c
 19358  00575A  B0D8               	btfsc	status,0,c
 19359  00575C  2A15               	incf	(___awmod@divisor+1)^0,f,c
 19360  00575E                     l8716:
 19361  00575E  5014               	movf	___awmod@divisor^0,w,c
 19362  005760  1015               	iorwf	(___awmod@divisor+1)^0,w,c
 19363  005762  B4D8               	btfsc	status,2,c
 19364  005764  EFB6  F02B         	goto	u6171
 19365  005768  EFB8  F02B         	goto	u6170
 19366  00576C                     u6171:
 19367  00576C  EFDC  F02B         	goto	l8732
 19368  005770                     u6170:
 19369  005770  0E01               	movlw	1
 19370  005772  6E16               	movwf	___awmod@counter^0,c
 19371  005774  EFC0  F02B         	goto	l8722
 19372  005778                     l8720:
 19373  005778  90D8               	bcf	status,0,c
 19374  00577A  3614               	rlcf	___awmod@divisor^0,f,c
 19375  00577C  3615               	rlcf	(___awmod@divisor+1)^0,f,c
 19376  00577E  2A16               	incf	___awmod@counter^0,f,c
 19377  005780                     l8722:
 19378  005780  AE15               	btfss	(___awmod@divisor+1)^0,7,c
 19379  005782  EFC5  F02B         	goto	u6181
 19380  005786  EFC7  F02B         	goto	u6180
 19381  00578A                     u6181:
 19382  00578A  EFBC  F02B         	goto	l8720
 19383  00578E                     u6180:
 19384  00578E                     l8724:
 19385  00578E  5014               	movf	___awmod@divisor^0,w,c
 19386  005790  5C12               	subwf	___awmod@dividend^0,w,c
 19387  005792  5015               	movf	(___awmod@divisor+1)^0,w,c
 19388  005794  5813               	subwfb	(___awmod@dividend+1)^0,w,c
 19389  005796  A0D8               	btfss	status,0,c
 19390  005798  EFD0  F02B         	goto	u6191
 19391  00579C  EFD2  F02B         	goto	u6190
 19392  0057A0                     u6191:
 19393  0057A0  EFD6  F02B         	goto	l8728
 19394  0057A4                     u6190:
 19395  0057A4  5014               	movf	___awmod@divisor^0,w,c
 19396  0057A6  5E12               	subwf	___awmod@dividend^0,f,c
 19397  0057A8  5015               	movf	(___awmod@divisor+1)^0,w,c
 19398  0057AA  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
 19399  0057AC                     l8728:
 19400  0057AC  90D8               	bcf	status,0,c
 19401  0057AE  3215               	rrcf	(___awmod@divisor+1)^0,f,c
 19402  0057B0  3214               	rrcf	___awmod@divisor^0,f,c
 19403  0057B2  2E16               	decfsz	___awmod@counter^0,f,c
 19404  0057B4  EFC7  F02B         	goto	l8724
 19405  0057B8                     l8732:
 19406  0057B8  5017               	movf	___awmod@sign^0,w,c
 19407  0057BA  B4D8               	btfsc	status,2,c
 19408  0057BC  EFE2  F02B         	goto	u6201
 19409  0057C0  EFE4  F02B         	goto	u6200
 19410  0057C4                     u6201:
 19411  0057C4  EFE8  F02B         	goto	l8736
 19412  0057C8                     u6200:
 19413  0057C8  6C12               	negf	___awmod@dividend^0,c
 19414  0057CA  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19415  0057CC  B0D8               	btfsc	status,0,c
 19416  0057CE  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19417  0057D0                     l8736:
 19418  0057D0  C012  F012         	movff	___awmod@dividend,?___awmod
 19419  0057D4  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
 19420  0057D8  0012               	return		;funcret
 19421  0057DA                     __end_of___awmod:
 19422                           	callstack 0
 19423                           
 19424 ;; *************** function _LEAVECRITICAL *****************
 19425 ;; Defined at:
 19426 ;;		line 186 in file "xf/xf.c"
 19427 ;; Parameters:    Size  Location     Type
 19428 ;;  inISR           1    wreg     _Bool 
 19429 ;; Auto vars:     Size  Location     Type
 19430 ;;  inISR           1   17[COMRAM] _Bool 
 19431 ;; Return value:  Size  Location     Type
 19432 ;;                  1    wreg      void 
 19433 ;; Registers used:
 19434 ;;		wreg, status,2
 19435 ;; Tracked objects:
 19436 ;;		On entry : 0/0
 19437 ;;		On exit  : 0/0
 19438 ;;		Unchanged: 0/0
 19439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19440 ;;      Params:         0       0       0       0       0       0       0
 19441 ;;      Locals:         1       0       0       0       0       0       0
 19442 ;;      Temps:          0       0       0       0       0       0       0
 19443 ;;      Totals:         1       0       0       0       0       0       0
 19444 ;;Total ram usage:        1 bytes
 19445 ;; Hardware stack levels used: 1
 19446 ;; Hardware stack levels required when called: 4
 19447 ;; This function calls:
 19448 ;;		Nothing
 19449 ;; This function is called by:
 19450 ;;		_XF_pushEvent
 19451 ;;		_XF_popEvent
 19452 ;;		_XF_scheduleTimer
 19453 ;; This function uses a non-reentrant model
 19454 ;;
 19455                           
 19456                           	psect	text77
 19457  0063DE                     __ptext77:
 19458                           	callstack 0
 19459  0063DE                     _LEAVECRITICAL:
 19460                           	callstack 20
 19461                           
 19462                           ;incstack = 0
 19463                           ;LEAVECRITICAL@inISR stored from wreg
 19464  0063DE  6E12               	movwf	LEAVECRITICAL@inISR^0,c
 19465  0063E0                     
 19466                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 19467  0063E0  5012               	movf	LEAVECRITICAL@inISR^0,w,c
 19468  0063E2  A4D8               	btfss	status,2,c
 19469  0063E4  EFF6  F031         	goto	u6081
 19470  0063E8  EFF8  F031         	goto	u6080
 19471  0063EC                     u6081:
 19472  0063EC  EFF9  F031         	goto	l763
 19473  0063F0                     u6080:
 19474  0063F0                     
 19475                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 19476  0063F0  8EF2               	bsf	4082,7,c	;volatile
 19477  0063F2                     l763:
 19478  0063F2  0012               	return		;funcret
 19479  0063F4                     __end_of_LEAVECRITICAL:
 19480                           	callstack 0
 19481                           
 19482 ;; *************** function _ENTERCRITICAL *****************
 19483 ;; Defined at:
 19484 ;;		line 172 in file "xf/xf.c"
 19485 ;; Parameters:    Size  Location     Type
 19486 ;;  inISR           1    wreg     _Bool 
 19487 ;; Auto vars:     Size  Location     Type
 19488 ;;  inISR           1   17[COMRAM] _Bool 
 19489 ;; Return value:  Size  Location     Type
 19490 ;;                  1    wreg      void 
 19491 ;; Registers used:
 19492 ;;		wreg, status,2
 19493 ;; Tracked objects:
 19494 ;;		On entry : 0/0
 19495 ;;		On exit  : 0/0
 19496 ;;		Unchanged: 0/0
 19497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19498 ;;      Params:         0       0       0       0       0       0       0
 19499 ;;      Locals:         1       0       0       0       0       0       0
 19500 ;;      Temps:          0       0       0       0       0       0       0
 19501 ;;      Totals:         1       0       0       0       0       0       0
 19502 ;;Total ram usage:        1 bytes
 19503 ;; Hardware stack levels used: 1
 19504 ;; Hardware stack levels required when called: 4
 19505 ;; This function calls:
 19506 ;;		Nothing
 19507 ;; This function is called by:
 19508 ;;		_XF_pushEvent
 19509 ;;		_XF_popEvent
 19510 ;;		_XF_scheduleTimer
 19511 ;; This function uses a non-reentrant model
 19512 ;;
 19513                           
 19514                           	psect	text78
 19515  0063F4                     __ptext78:
 19516                           	callstack 0
 19517  0063F4                     _ENTERCRITICAL:
 19518                           	callstack 20
 19519                           
 19520                           ;incstack = 0
 19521                           ;ENTERCRITICAL@inISR stored from wreg
 19522  0063F4  6E12               	movwf	ENTERCRITICAL@inISR^0,c
 19523  0063F6                     
 19524                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 19525  0063F6  5012               	movf	ENTERCRITICAL@inISR^0,w,c
 19526  0063F8  A4D8               	btfss	status,2,c
 19527  0063FA  EF01  F032         	goto	u6071
 19528  0063FE  EF03  F032         	goto	u6070
 19529  006402                     u6071:
 19530  006402  EF04  F032         	goto	l759
 19531  006406                     u6070:
 19532  006406                     
 19533                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 19534  006406  9EF2               	bcf	4082,7,c	;volatile
 19535  006408                     l759:
 19536  006408  0012               	return		;funcret
 19537  00640A                     __end_of_ENTERCRITICAL:
 19538                           	callstack 0
 19539                           
 19540 ;; *************** function _isr *****************
 19541 ;; Defined at:
 19542 ;;		line 19 in file "main.c"
 19543 ;; Parameters:    Size  Location     Type
 19544 ;;		None
 19545 ;; Auto vars:     Size  Location     Type
 19546 ;;		None
 19547 ;; Return value:  Size  Location     Type
 19548 ;;                  1    wreg      void 
 19549 ;; Registers used:
 19550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19551 ;; Tracked objects:
 19552 ;;		On entry : 0/0
 19553 ;;		On exit  : 0/0
 19554 ;;		Unchanged: 0/0
 19555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19556 ;;      Params:         0       0       0       0       0       0       0
 19557 ;;      Locals:         0       0       0       0       0       0       0
 19558 ;;      Temps:          4       0       0       0       0       0       0
 19559 ;;      Totals:         4       0       0       0       0       0       0
 19560 ;;Total ram usage:        4 bytes
 19561 ;; Hardware stack levels used: 1
 19562 ;; Hardware stack levels required when called: 3
 19563 ;; This function calls:
 19564 ;;		_XF_decrementAndQueueTimers
 19565 ;;		i2_XF_pushEvent
 19566 ;;		i2_XF_scheduleTimer
 19567 ;; This function is called by:
 19568 ;;		Interrupt level 2
 19569 ;; This function uses a non-reentrant model
 19570 ;;
 19571                           
 19572                           	psect	intcode
 19573  000008                     __pintcode:
 19574                           	callstack 0
 19575  000008                     _isr:
 19576                           	callstack 14
 19577                           
 19578                           ;incstack = 0
 19579  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 19580  00000A  CFD9 F00E          	movff	fsr2l,??_isr
 19581  00000E  CFDA F00F          	movff	fsr2h,??_isr+1
 19582  000012  CFF3 F010          	movff	prodl,??_isr+2
 19583  000016  CFF4 F011          	movff	prodh,??_isr+3
 19584  00001A                     
 19585                           ;main.c: 21:     if((INT1IF==1)&&(INT1IE==1))
 19586  00001A  A0F0               	btfss	4080,0,c	;volatile
 19587  00001C  EF12  F000         	goto	i2u548_41
 19588  000020  EF14  F000         	goto	i2u548_40
 19589  000024                     i2u548_41:
 19590  000024  EF39  F000         	goto	i2l7784
 19591  000028                     i2u548_40:
 19592  000028  A6F0               	btfss	4080,3,c	;volatile
 19593  00002A  EF19  F000         	goto	i2u549_41
 19594  00002E  EF1B  F000         	goto	i2u549_40
 19595  000032                     i2u549_41:
 19596  000032  EF39  F000         	goto	i2l7784
 19597  000036                     i2u549_40:
 19598  000036                     
 19599                           ;main.c: 22:     {;main.c: 23:         if(INTEDG1==0)
 19600  000036  BAF1               	btfsc	4081,5,c	;volatile
 19601  000038  EF20  F000         	goto	i2u550_41
 19602  00003C  EF22  F000         	goto	i2u550_40
 19603  000040                     i2u550_41:
 19604  000040  EF2B  F000         	goto	i2l799
 19605  000044                     i2u550_40:
 19606  000044                     
 19607                           ;main.c: 24:         {;main.c: 25:             INTEDG1=1;
 19608  000044  8AF1               	bsf	4081,5,c	;volatile
 19609                           
 19610                           ;main.c: 26:             INT1IF=0;
 19611  000046  90F0               	bcf	4080,0,c	;volatile
 19612  000048                     
 19613                           ;main.c: 27:             XF_pushEvent(evPress,1);
 19614  000048  0E01               	movlw	1
 19615  00004A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19616  00004C  0E01               	movlw	1
 19617  00004E  EC3A  F02F         	call	i2_XF_pushEvent
 19618                           
 19619                           ;main.c: 29:         }
 19620  000052  EF39  F000         	goto	i2l7784
 19621  000056                     i2l799:
 19622  000056  AAF1               	btfss	4081,5,c	;volatile
 19623  000058  EF30  F000         	goto	i2u551_41
 19624  00005C  EF32  F000         	goto	i2u551_40
 19625  000060                     i2u551_41:
 19626  000060  EF39  F000         	goto	i2l7784
 19627  000064                     i2u551_40:
 19628  000064                     
 19629                           ;main.c: 31:         {;main.c: 32:             INTEDG1=0;
 19630  000064  9AF1               	bcf	4081,5,c	;volatile
 19631                           
 19632                           ;main.c: 33:             INT1IF=0;
 19633  000066  90F0               	bcf	4080,0,c	;volatile
 19634  000068                     
 19635                           ;main.c: 34:             XF_pushEvent(evRelease,1);
 19636  000068  0E01               	movlw	1
 19637  00006A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19638  00006C  0E02               	movlw	2
 19639  00006E  EC3A  F02F         	call	i2_XF_pushEvent
 19640  000072                     i2l7784:
 19641                           
 19642                           ;main.c: 40:     if((TMR0IF==1)&&(TMR0IE==1))
 19643  000072  A4F2               	btfss	4082,2,c	;volatile
 19644  000074  EF3E  F000         	goto	i2u552_41
 19645  000078  EF40  F000         	goto	i2u552_40
 19646  00007C                     i2u552_41:
 19647  00007C  EF58  F000         	goto	i2l803
 19648  000080                     i2u552_40:
 19649  000080  AAF2               	btfss	4082,5,c	;volatile
 19650  000082  EF45  F000         	goto	i2u553_41
 19651  000086  EF47  F000         	goto	i2u553_40
 19652  00008A                     i2u553_41:
 19653  00008A  EF58  F000         	goto	i2l803
 19654  00008E                     i2u553_40:
 19655  00008E                     
 19656                           ;main.c: 41:     {;main.c: 42:         XF_decrementAndQueueTimers();
 19657  00008E  EC21  F022         	call	_XF_decrementAndQueueTimers	;wreg free
 19658                           
 19659                           ;main.c: 43:         XF_scheduleTimer(5,evGameUpdate,1);
 19660  000092  0E00               	movlw	0
 19661  000094  6E03               	movwf	(i2XF_scheduleTimer@tm+1)^0,c
 19662  000096  0E05               	movlw	5
 19663  000098  6E02               	movwf	i2XF_scheduleTimer@tm^0,c
 19664  00009A  0E0A               	movlw	10
 19665  00009C  6E04               	movwf	i2XF_scheduleTimer@ev^0,c
 19666  00009E  0E01               	movlw	1
 19667  0000A0  6E05               	movwf	i2XF_scheduleTimer@inISR^0,c
 19668  0000A2  EC9C  F02E         	call	i2_XF_scheduleTimer	;wreg free
 19669  0000A6                     
 19670                           ;main.c: 44:         TMR0H=0xFB;
 19671  0000A6  0EFB               	movlw	251
 19672  0000A8  6ED7               	movwf	215,c	;volatile
 19673  0000AA                     
 19674                           ;main.c: 45:         TMR0L=0x1D;
 19675  0000AA  0E1D               	movlw	29
 19676  0000AC  6ED6               	movwf	214,c	;volatile
 19677  0000AE                     
 19678                           ;main.c: 46:         TMR0IF=0;
 19679  0000AE  94F2               	bcf	4082,2,c	;volatile
 19680  0000B0                     i2l803:
 19681  0000B0  C011  FFF4         	movff	??_isr+3,prodh
 19682  0000B4  C010  FFF3         	movff	??_isr+2,prodl
 19683  0000B8  C00F  FFDA         	movff	??_isr+1,fsr2h
 19684  0000BC  C00E  FFD9         	movff	??_isr,fsr2l
 19685  0000C0  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 19686  0000C2  0011               	retfie		f
 19687  0000C4                     __end_of_isr:
 19688                           	callstack 0
 19689                           
 19690 ;; *************** function i2_XF_scheduleTimer *****************
 19691 ;; Defined at:
 19692 ;;		line 96 in file "xf/xf.c"
 19693 ;; Parameters:    Size  Location     Type
 19694 ;;  tm              2    1[COMRAM] unsigned short 
 19695 ;;  ev              1    3[COMRAM] unsigned char 
 19696 ;;  inISR           1    4[COMRAM] _Bool 
 19697 ;; Auto vars:     Size  Location     Type
 19698 ;;  i               1    5[COMRAM] unsigned char 
 19699 ;; Return value:  Size  Location     Type
 19700 ;;                  1    wreg      unsigned char 
 19701 ;; Registers used:
 19702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19708 ;;      Params:         4       0       0       0       0       0       0
 19709 ;;      Locals:         1       0       0       0       0       0       0
 19710 ;;      Temps:          0       0       0       0       0       0       0
 19711 ;;      Totals:         5       0       0       0       0       0       0
 19712 ;;Total ram usage:        5 bytes
 19713 ;; Hardware stack levels used: 1
 19714 ;; Hardware stack levels required when called: 1
 19715 ;; This function calls:
 19716 ;;		i2_ENTERCRITICAL
 19717 ;;		i2_LEAVECRITICAL
 19718 ;; This function is called by:
 19719 ;;		_isr
 19720 ;; This function uses a non-reentrant model
 19721 ;;
 19722                           
 19723                           	psect	text80
 19724  005D38                     __ptext80:
 19725                           	callstack 0
 19726  005D38                     i2_XF_scheduleTimer:
 19727                           	callstack 15
 19728  005D38                     
 19729                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
 19730  005D38  5005               	movf	i2XF_scheduleTimer@inISR^0,w,c
 19731  005D3A  EC10  F032         	call	i2_ENTERCRITICAL
 19732  005D3E                     
 19733                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
 19734  005D3E  0E00               	movlw	0
 19735  005D40  6E06               	movwf	i2XF_scheduleTimer@i^0,c
 19736  005D42                     i2l7758:
 19737                           
 19738                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
 19739  005D42  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 19740  005D44  0D03               	mullw	3
 19741  005D46  0EB7               	movlw	low (_theXF+2)
 19742  005D48  24F3               	addwf	243,w,c
 19743  005D4A  6ED9               	movwf	fsr2l,c
 19744  005D4C  0E00               	movlw	high (_theXF+2)
 19745  005D4E  20F4               	addwfc	prodh,w,c
 19746  005D50  6EDA               	movwf	fsr2h,c
 19747  005D52  50DF               	movf	indf2,w,c
 19748  005D54  A4D8               	btfss	status,2,c
 19749  005D56  EFAF  F02E         	goto	i2u546_41
 19750  005D5A  EFB1  F02E         	goto	i2u546_40
 19751  005D5E                     i2u546_41:
 19752  005D5E  EFC9  F02E         	goto	i2l7762
 19753  005D62                     i2u546_40:
 19754  005D62                     
 19755                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
 19756  005D62  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 19757  005D64  0D03               	mullw	3
 19758  005D66  0EB5               	movlw	low _theXF
 19759  005D68  24F3               	addwf	243,w,c
 19760  005D6A  6ED9               	movwf	fsr2l,c
 19761  005D6C  0E00               	movlw	high _theXF
 19762  005D6E  20F4               	addwfc	prodh,w,c
 19763  005D70  6EDA               	movwf	fsr2h,c
 19764  005D72  C002  FFDE         	movff	i2XF_scheduleTimer@tm,postinc2
 19765  005D76  C003  FFDD         	movff	i2XF_scheduleTimer@tm+1,postdec2
 19766                           
 19767                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
 19768  005D7A  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 19769  005D7C  0D03               	mullw	3
 19770  005D7E  0EB7               	movlw	low (_theXF+2)
 19771  005D80  24F3               	addwf	243,w,c
 19772  005D82  6ED9               	movwf	fsr2l,c
 19773  005D84  0E00               	movlw	high (_theXF+2)
 19774  005D86  20F4               	addwfc	prodh,w,c
 19775  005D88  6EDA               	movwf	fsr2h,c
 19776  005D8A  C004  FFDF         	movff	i2XF_scheduleTimer@ev,indf2
 19777                           
 19778                           ;xf/xf.c: 107:             break;
 19779  005D8E  EFD2  F02E         	goto	i2l7766
 19780  005D92                     i2l7762:
 19781                           
 19782                           ;xf/xf.c: 109:     }
 19783  005D92  2A06               	incf	i2XF_scheduleTimer@i^0,f,c
 19784  005D94  0E07               	movlw	7
 19785  005D96  6406               	cpfsgt	i2XF_scheduleTimer@i^0,c
 19786  005D98  EFD0  F02E         	goto	i2u547_41
 19787  005D9C  EFD2  F02E         	goto	i2u547_40
 19788  005DA0                     i2u547_41:
 19789  005DA0  EFA1  F02E         	goto	i2l7758
 19790  005DA4                     i2u547_40:
 19791  005DA4                     i2l7766:
 19792                           
 19793                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
 19794  005DA4  5005               	movf	i2XF_scheduleTimer@inISR^0,w,c
 19795  005DA6  EC05  F032         	call	i2_LEAVECRITICAL
 19796  005DAA  0012               	return		;funcret
 19797  005DAC                     __end_ofi2_XF_scheduleTimer:
 19798                           	callstack 0
 19799                           
 19800 ;; *************** function _XF_decrementAndQueueTimers *****************
 19801 ;; Defined at:
 19802 ;;		line 139 in file "xf/xf.c"
 19803 ;; Parameters:    Size  Location     Type
 19804 ;;		None
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;  i               2   11[COMRAM] int 
 19807 ;; Return value:  Size  Location     Type
 19808 ;;                  1    wreg      void 
 19809 ;; Registers used:
 19810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19811 ;; Tracked objects:
 19812 ;;		On entry : 0/0
 19813 ;;		On exit  : 0/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19816 ;;      Params:         0       0       0       0       0       0       0
 19817 ;;      Locals:         2       0       0       0       0       0       0
 19818 ;;      Temps:          2       0       0       0       0       0       0
 19819 ;;      Totals:         4       0       0       0       0       0       0
 19820 ;;Total ram usage:        4 bytes
 19821 ;; Hardware stack levels used: 1
 19822 ;; Hardware stack levels required when called: 2
 19823 ;; This function calls:
 19824 ;;		_XF_unscheduleTimer
 19825 ;;		i2_XF_pushEvent
 19826 ;;		i2___wmul
 19827 ;; This function is called by:
 19828 ;;		_isr
 19829 ;; This function uses a non-reentrant model
 19830 ;;
 19831                           
 19832                           	psect	text81
 19833  004442                     __ptext81:
 19834                           	callstack 0
 19835  004442                     _XF_decrementAndQueueTimers:
 19836                           	callstack 14
 19837  004442                     
 19838                           ;xf/xf.c: 141:     int i;;xf/xf.c: 142:     for (i=0; i<8; i++)
 19839  004442  0E00               	movlw	0
 19840  004444  6E0D               	movwf	(XF_decrementAndQueueTimers@i+1)^0,c
 19841  004446  0E00               	movlw	0
 19842  004448  6E0C               	movwf	XF_decrementAndQueueTimers@i^0,c
 19843  00444A                     i2l7736:
 19844                           
 19845                           ;xf/xf.c: 143:     {;xf/xf.c: 144:         if (theXF.timerList[i].ev != NULLEVENT)
 19846  00444A  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19847  00444E  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19848  004452  0E00               	movlw	0
 19849  004454  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19850  004456  0E03               	movlw	3
 19851  004458  6E03               	movwf	i2___wmul@multiplicand^0,c
 19852  00445A  ECA1  F031         	call	i2___wmul	;wreg free
 19853  00445E  0EB7               	movlw	low (_theXF+2)
 19854  004460  2401               	addwf	?i2___wmul^0,w,c
 19855  004462  6ED9               	movwf	fsr2l,c
 19856  004464  0E00               	movlw	high (_theXF+2)
 19857  004466  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19858  004468  6EDA               	movwf	fsr2h,c
 19859  00446A  50DF               	movf	indf2,w,c
 19860  00446C  B4D8               	btfsc	status,2,c
 19861  00446E  EF3B  F022         	goto	i2u542_41
 19862  004472  EF3D  F022         	goto	i2u542_40
 19863  004476                     i2u542_41:
 19864  004476  EFA1  F022         	goto	i2l7746
 19865  00447A                     i2u542_40:
 19866  00447A                     
 19867                           ;xf/xf.c: 145:         {;xf/xf.c: 147:             theXF.timerList[i].tm-=1;
 19868  00447A  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19869  00447E  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19870  004482  0E00               	movlw	0
 19871  004484  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19872  004486  0E03               	movlw	3
 19873  004488  6E03               	movwf	i2___wmul@multiplicand^0,c
 19874  00448A  ECA1  F031         	call	i2___wmul	;wreg free
 19875  00448E  0EB5               	movlw	low _theXF
 19876  004490  2401               	addwf	?i2___wmul^0,w,c
 19877  004492  6ED9               	movwf	fsr2l,c
 19878  004494  0E00               	movlw	high _theXF
 19879  004496  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19880  004498  6EDA               	movwf	fsr2h,c
 19881  00449A  06DE               	decf	postinc2,f,c
 19882  00449C  0E00               	movlw	0
 19883  00449E  5ADD               	subwfb	postdec2,f,c
 19884                           
 19885                           ;xf/xf.c: 148:             if (theXF.timerList[i].tm ==0)
 19886  0044A0  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19887  0044A4  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19888  0044A8  0E00               	movlw	0
 19889  0044AA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19890  0044AC  0E03               	movlw	3
 19891  0044AE  6E03               	movwf	i2___wmul@multiplicand^0,c
 19892  0044B0  ECA1  F031         	call	i2___wmul	;wreg free
 19893  0044B4  0EB5               	movlw	low _theXF
 19894  0044B6  2401               	addwf	?i2___wmul^0,w,c
 19895  0044B8  6ED9               	movwf	fsr2l,c
 19896  0044BA  0E00               	movlw	high _theXF
 19897  0044BC  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19898  0044BE  6EDA               	movwf	fsr2h,c
 19899  0044C0  50DE               	movf	postinc2,w,c
 19900  0044C2  10DE               	iorwf	postinc2,w,c
 19901  0044C4  A4D8               	btfss	status,2,c
 19902  0044C6  EF67  F022         	goto	i2u543_41
 19903  0044CA  EF69  F022         	goto	i2u543_40
 19904  0044CE                     i2u543_41:
 19905  0044CE  EFA1  F022         	goto	i2l7746
 19906  0044D2                     i2u543_40:
 19907  0044D2                     
 19908                           ;xf/xf.c: 149:             {;xf/xf.c: 150:                 if(XF_pushEvent(theXF.timerLi
      +                          st[i].ev, 1) == 1)
 19909  0044D2  0E01               	movlw	1
 19910  0044D4  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19911  0044D6  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19912  0044DA  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19913  0044DE  0E00               	movlw	0
 19914  0044E0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19915  0044E2  0E03               	movlw	3
 19916  0044E4  6E03               	movwf	i2___wmul@multiplicand^0,c
 19917  0044E6  ECA1  F031         	call	i2___wmul	;wreg free
 19918  0044EA  0EB7               	movlw	low (_theXF+2)
 19919  0044EC  2401               	addwf	?i2___wmul^0,w,c
 19920  0044EE  6ED9               	movwf	fsr2l,c
 19921  0044F0  0E00               	movlw	high (_theXF+2)
 19922  0044F2  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19923  0044F4  6EDA               	movwf	fsr2h,c
 19924  0044F6  50DF               	movf	indf2,w,c
 19925  0044F8  EC3A  F02F         	call	i2_XF_pushEvent
 19926  0044FC  06E8               	decf	wreg,f,c
 19927  0044FE  A4D8               	btfss	status,2,c
 19928  004500  EF84  F022         	goto	i2u544_41
 19929  004504  EF86  F022         	goto	i2u544_40
 19930  004508                     i2u544_41:
 19931  004508  EF8D  F022         	goto	i2l7744
 19932  00450C                     i2u544_40:
 19933  00450C                     
 19934                           ;xf/xf.c: 151:                 {;xf/xf.c: 152:                   XF_unscheduleTimer(i, 1
      +                          );
 19935  00450C  0E01               	movlw	1
 19936  00450E  6E02               	movwf	XF_unscheduleTimer@inISR^0,c
 19937  004510  500C               	movf	XF_decrementAndQueueTimers@i^0,w,c
 19938  004512  ECFF  F030         	call	_XF_unscheduleTimer
 19939                           
 19940                           ;xf/xf.c: 153:                 }
 19941  004516  EFA1  F022         	goto	i2l7746
 19942  00451A                     i2l7744:
 19943                           
 19944                           ;xf/xf.c: 155:                 {;xf/xf.c: 156:                   theXF.timerList[i].tm=1
      +                          ;
 19945  00451A  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19946  00451E  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19947  004522  0E00               	movlw	0
 19948  004524  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19949  004526  0E03               	movlw	3
 19950  004528  6E03               	movwf	i2___wmul@multiplicand^0,c
 19951  00452A  ECA1  F031         	call	i2___wmul	;wreg free
 19952  00452E  0EB5               	movlw	low _theXF
 19953  004530  2401               	addwf	?i2___wmul^0,w,c
 19954  004532  6ED9               	movwf	fsr2l,c
 19955  004534  0E00               	movlw	high _theXF
 19956  004536  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19957  004538  6EDA               	movwf	fsr2h,c
 19958  00453A  0E01               	movlw	1
 19959  00453C  6EDE               	movwf	postinc2,c
 19960  00453E  0E00               	movlw	0
 19961  004540  6EDD               	movwf	postdec2,c
 19962  004542                     i2l7746:
 19963                           
 19964                           ;xf/xf.c: 160:     }
 19965  004542  4A0C               	infsnz	XF_decrementAndQueueTimers@i^0,f,c
 19966  004544  2A0D               	incf	(XF_decrementAndQueueTimers@i+1)^0,f,c
 19967  004546  BE0D               	btfsc	(XF_decrementAndQueueTimers@i+1)^0,7,c
 19968  004548  EFAF  F022         	goto	i2u545_41
 19969  00454C  500D               	movf	(XF_decrementAndQueueTimers@i+1)^0,w,c
 19970  00454E  E109               	bnz	i2u545_40
 19971  004550  0E08               	movlw	8
 19972  004552  5C0C               	subwf	XF_decrementAndQueueTimers@i^0,w,c
 19973  004554  A0D8               	btfss	status,0,c
 19974  004556  EFAF  F022         	goto	i2u545_41
 19975  00455A  EFB1  F022         	goto	i2u545_40
 19976  00455E                     i2u545_41:
 19977  00455E  EF25  F022         	goto	i2l7736
 19978  004562                     i2u545_40:
 19979  004562  0012               	return		;funcret
 19980  004564                     __end_of_XF_decrementAndQueueTimers:
 19981                           	callstack 0
 19982                           
 19983 ;; *************** function i2___wmul *****************
 19984 ;; Defined at:
 19985 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 19986 ;; Parameters:    Size  Location     Type
 19987 ;;  multiplier      2    0[COMRAM] unsigned int 
 19988 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19989 ;; Auto vars:     Size  Location     Type
 19990 ;;  product         2    4[COMRAM] unsigned int 
 19991 ;; Return value:  Size  Location     Type
 19992 ;;                  2    0[COMRAM] unsigned int 
 19993 ;; Registers used:
 19994 ;;		wreg, status,2, status,0, prodl, prodh
 19995 ;; Tracked objects:
 19996 ;;		On entry : 0/0
 19997 ;;		On exit  : 0/0
 19998 ;;		Unchanged: 0/0
 19999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20000 ;;      Params:         4       0       0       0       0       0       0
 20001 ;;      Locals:         2       0       0       0       0       0       0
 20002 ;;      Temps:          0       0       0       0       0       0       0
 20003 ;;      Totals:         6       0       0       0       0       0       0
 20004 ;;Total ram usage:        6 bytes
 20005 ;; Hardware stack levels used: 1
 20006 ;; This function calls:
 20007 ;;		Nothing
 20008 ;; This function is called by:
 20009 ;;		_XF_decrementAndQueueTimers
 20010 ;; This function uses a non-reentrant model
 20011 ;;
 20012                           
 20013                           	psect	text82
 20014  006342                     __ptext82:
 20015                           	callstack 0
 20016  006342                     i2___wmul:
 20017                           	callstack 15
 20018  006342  5001               	movf	i2___wmul@multiplier^0,w,c
 20019  006344  0203               	mulwf	i2___wmul@multiplicand^0,c
 20020  006346  CFF3 F005          	movff	prodl,i2___wmul@product
 20021  00634A  CFF4 F006          	movff	prodh,i2___wmul@product+1
 20022  00634E  5001               	movf	i2___wmul@multiplier^0,w,c
 20023  006350  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 20024  006352  50F3               	movf	243,w,c
 20025  006354  2606               	addwf	(i2___wmul@product+1)^0,f,c
 20026  006356  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 20027  006358  0203               	mulwf	i2___wmul@multiplicand^0,c
 20028  00635A  50F3               	movf	243,w,c
 20029  00635C  2606               	addwf	(i2___wmul@product+1)^0,f,c
 20030  00635E  C005  F001         	movff	i2___wmul@product,?i2___wmul
 20031  006362  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 20032  006366  0012               	return		;funcret
 20033  006368                     __end_ofi2___wmul:
 20034                           	callstack 0
 20035                           
 20036 ;; *************** function i2_XF_pushEvent *****************
 20037 ;; Defined at:
 20038 ;;		line 49 in file "xf/xf.c"
 20039 ;; Parameters:    Size  Location     Type
 20040 ;;  ev              1    wreg     unsigned char 
 20041 ;;  inISR           1    6[COMRAM] _Bool 
 20042 ;; Auto vars:     Size  Location     Type
 20043 ;;  ev              1    7[COMRAM] unsigned char 
 20044 ;;  temp            1    8[COMRAM] unsigned char 
 20045 ;; Return value:  Size  Location     Type
 20046 ;;                  1    wreg      _Bool 
 20047 ;; Registers used:
 20048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20049 ;; Tracked objects:
 20050 ;;		On entry : 0/0
 20051 ;;		On exit  : 0/0
 20052 ;;		Unchanged: 0/0
 20053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20054 ;;      Params:         1       0       0       0       0       0       0
 20055 ;;      Locals:         2       0       0       0       0       0       0
 20056 ;;      Temps:          0       0       0       0       0       0       0
 20057 ;;      Totals:         3       0       0       0       0       0       0
 20058 ;;Total ram usage:        3 bytes
 20059 ;; Hardware stack levels used: 1
 20060 ;; Hardware stack levels required when called: 1
 20061 ;; This function calls:
 20062 ;;		i2_ENTERCRITICAL
 20063 ;;		i2_LEAVECRITICAL
 20064 ;;		i2___awmod
 20065 ;; This function is called by:
 20066 ;;		_XF_decrementAndQueueTimers
 20067 ;;		_isr
 20068 ;; This function uses a non-reentrant model
 20069 ;;
 20070                           
 20071                           	psect	text83
 20072  005E74                     __ptext83:
 20073                           	callstack 0
 20074  005E74                     i2_XF_pushEvent:
 20075                           	callstack 15
 20076                           
 20077                           ;incstack = 0
 20078                           ;i2XF_pushEvent@ev stored from wreg
 20079  005E74  6E08               	movwf	i2XF_pushEvent@ev^0,c
 20080  005E76                     
 20081                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 20082  005E76  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20083  005E78  EC10  F032         	call	i2_ENTERCRITICAL
 20084  005E7C                     
 20085                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 20086  005E7C  0E01               	movlw	1
 20087  005E7E  0100               	movlb	0	; () banked
 20088  005E80  25D9               	addwf	(_theXF+36)& (0+255),w,b
 20089  005E82  6E01               	movwf	i2___awmod@dividend^0,c
 20090  005E84  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 20091  005E86  0E00               	movlw	0
 20092  005E88  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
 20093  005E8A  0E00               	movlw	0
 20094  005E8C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 20095  005E8E  0E0C               	movlw	12
 20096  005E90  6E03               	movwf	i2___awmod@divisor^0,c
 20097  005E92  ECED  F02B         	call	i2___awmod	;wreg free
 20098  005E96  5001               	movf	?i2___awmod^0,w,c
 20099  005E98  6E09               	movwf	i2XF_pushEvent@temp^0,c
 20100  005E9A                     
 20101                           ;xf/xf.c: 55:     if(temp == theXF.out)
 20102  005E9A  5009               	movf	i2XF_pushEvent@temp^0,w,c
 20103  005E9C  0100               	movlb	0	; () banked
 20104  005E9E  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 20105  005EA0  A4D8               	btfss	status,2,c
 20106  005EA2  EF55  F02F         	goto	i2u540_41
 20107  005EA6  EF57  F02F         	goto	i2u540_40
 20108  005EAA                     i2u540_41:
 20109  005EAA  EF5D  F02F         	goto	i2l7648
 20110  005EAE                     i2u540_40:
 20111  005EAE                     
 20112                           ; BSR set to: 0
 20113                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 20114  005EAE  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20115  005EB0  EC05  F032         	call	i2_LEAVECRITICAL
 20116  005EB4                     
 20117                           ;xf/xf.c: 58:       return 0;
 20118  005EB4  0E00               	movlw	0
 20119  005EB6  EF6B  F02F         	goto	i2l733
 20120  005EBA                     i2l7648:
 20121                           
 20122                           ; BSR set to: 0
 20123                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 20124  005EBA  0ECD               	movlw	low (_theXF+24)
 20125  005EBC  25D9               	addwf	(_theXF+36)& (0+255),w,b
 20126  005EBE  6ED9               	movwf	fsr2l,c
 20127  005EC0  6ADA               	clrf	fsr2h,c
 20128  005EC2  0E00               	movlw	high (_theXF+24)
 20129  005EC4  22DA               	addwfc	fsr2h,f,c
 20130  005EC6  C008  FFDF         	movff	i2XF_pushEvent@ev,indf2
 20131  005ECA                     
 20132                           ; BSR set to: 0
 20133                           ;xf/xf.c: 61:     theXF.in = temp;
 20134  005ECA  C009  F0D9         	movff	i2XF_pushEvent@temp,_theXF+36
 20135  005ECE                     
 20136                           ; BSR set to: 0
 20137                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 20138  005ECE  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20139  005ED0  EC05  F032         	call	i2_LEAVECRITICAL
 20140  005ED4                     
 20141                           ;xf/xf.c: 63:     return 1;
 20142  005ED4  0E01               	movlw	1
 20143  005ED6                     i2l733:
 20144  005ED6  0012               	return		;funcret
 20145  005ED8                     __end_ofi2_XF_pushEvent:
 20146                           	callstack 0
 20147                           
 20148 ;; *************** function i2___awmod *****************
 20149 ;; Defined at:
 20150 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 20151 ;; Parameters:    Size  Location     Type
 20152 ;;  dividend        2    0[COMRAM] int 
 20153 ;;  divisor         2    2[COMRAM] int 
 20154 ;; Auto vars:     Size  Location     Type
 20155 ;;  sign            1    5[COMRAM] unsigned char 
 20156 ;;  counter         1    4[COMRAM] unsigned char 
 20157 ;; Return value:  Size  Location     Type
 20158 ;;                  2    0[COMRAM] int 
 20159 ;; Registers used:
 20160 ;;		wreg, status,2, status,0
 20161 ;; Tracked objects:
 20162 ;;		On entry : 0/0
 20163 ;;		On exit  : 0/0
 20164 ;;		Unchanged: 0/0
 20165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20166 ;;      Params:         4       0       0       0       0       0       0
 20167 ;;      Locals:         2       0       0       0       0       0       0
 20168 ;;      Temps:          0       0       0       0       0       0       0
 20169 ;;      Totals:         6       0       0       0       0       0       0
 20170 ;;Total ram usage:        6 bytes
 20171 ;; Hardware stack levels used: 1
 20172 ;; This function calls:
 20173 ;;		Nothing
 20174 ;; This function is called by:
 20175 ;;		i2_XF_pushEvent
 20176 ;; This function uses a non-reentrant model
 20177 ;;
 20178                           
 20179                           	psect	text84
 20180  0057DA                     __ptext84:
 20181                           	callstack 0
 20182  0057DA                     i2___awmod:
 20183                           	callstack 15
 20184  0057DA  0E00               	movlw	0
 20185  0057DC  6E06               	movwf	i2___awmod@sign^0,c
 20186  0057DE  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 20187  0057E0  EFF6  F02B         	goto	i2u515_40
 20188  0057E4  EFF4  F02B         	goto	i2u515_41
 20189  0057E8                     i2u515_41:
 20190  0057E8  EFFC  F02B         	goto	i2l7368
 20191  0057EC                     i2u515_40:
 20192  0057EC  6C01               	negf	i2___awmod@dividend^0,c
 20193  0057EE  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20194  0057F0  B0D8               	btfsc	status,0,c
 20195  0057F2  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20196  0057F4  0E01               	movlw	1
 20197  0057F6  6E06               	movwf	i2___awmod@sign^0,c
 20198  0057F8                     i2l7368:
 20199  0057F8  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 20200  0057FA  EF03  F02C         	goto	i2u516_40
 20201  0057FE  EF01  F02C         	goto	i2u516_41
 20202  005802                     i2u516_41:
 20203  005802  EF07  F02C         	goto	i2l7372
 20204  005806                     i2u516_40:
 20205  005806  6C03               	negf	i2___awmod@divisor^0,c
 20206  005808  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 20207  00580A  B0D8               	btfsc	status,0,c
 20208  00580C  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 20209  00580E                     i2l7372:
 20210  00580E  5003               	movf	i2___awmod@divisor^0,w,c
 20211  005810  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 20212  005812  B4D8               	btfsc	status,2,c
 20213  005814  EF0E  F02C         	goto	i2u517_41
 20214  005818  EF10  F02C         	goto	i2u517_40
 20215  00581C                     i2u517_41:
 20216  00581C  EF34  F02C         	goto	i2l7388
 20217  005820                     i2u517_40:
 20218  005820  0E01               	movlw	1
 20219  005822  6E05               	movwf	i2___awmod@counter^0,c
 20220  005824  EF18  F02C         	goto	i2l7378
 20221  005828                     i2l7376:
 20222  005828  90D8               	bcf	status,0,c
 20223  00582A  3603               	rlcf	i2___awmod@divisor^0,f,c
 20224  00582C  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 20225  00582E  2A05               	incf	i2___awmod@counter^0,f,c
 20226  005830                     i2l7378:
 20227  005830  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 20228  005832  EF1D  F02C         	goto	i2u518_41
 20229  005836  EF1F  F02C         	goto	i2u518_40
 20230  00583A                     i2u518_41:
 20231  00583A  EF14  F02C         	goto	i2l7376
 20232  00583E                     i2u518_40:
 20233  00583E                     i2l7380:
 20234  00583E  5003               	movf	i2___awmod@divisor^0,w,c
 20235  005840  5C01               	subwf	i2___awmod@dividend^0,w,c
 20236  005842  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20237  005844  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 20238  005846  A0D8               	btfss	status,0,c
 20239  005848  EF28  F02C         	goto	i2u519_41
 20240  00584C  EF2A  F02C         	goto	i2u519_40
 20241  005850                     i2u519_41:
 20242  005850  EF2E  F02C         	goto	i2l7384
 20243  005854                     i2u519_40:
 20244  005854  5003               	movf	i2___awmod@divisor^0,w,c
 20245  005856  5E01               	subwf	i2___awmod@dividend^0,f,c
 20246  005858  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20247  00585A  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 20248  00585C                     i2l7384:
 20249  00585C  90D8               	bcf	status,0,c
 20250  00585E  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 20251  005860  3203               	rrcf	i2___awmod@divisor^0,f,c
 20252  005862  2E05               	decfsz	i2___awmod@counter^0,f,c
 20253  005864  EF1F  F02C         	goto	i2l7380
 20254  005868                     i2l7388:
 20255  005868  5006               	movf	i2___awmod@sign^0,w,c
 20256  00586A  B4D8               	btfsc	status,2,c
 20257  00586C  EF3A  F02C         	goto	i2u520_41
 20258  005870  EF3C  F02C         	goto	i2u520_40
 20259  005874                     i2u520_41:
 20260  005874  EF40  F02C         	goto	i2l7392
 20261  005878                     i2u520_40:
 20262  005878  6C01               	negf	i2___awmod@dividend^0,c
 20263  00587A  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20264  00587C  B0D8               	btfsc	status,0,c
 20265  00587E  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20266  005880                     i2l7392:
 20267  005880  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 20268  005884  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 20269  005888  0012               	return		;funcret
 20270  00588A                     __end_ofi2___awmod:
 20271                           	callstack 0
 20272                           
 20273 ;; *************** function _XF_unscheduleTimer *****************
 20274 ;; Defined at:
 20275 ;;		line 125 in file "xf/xf.c"
 20276 ;; Parameters:    Size  Location     Type
 20277 ;;  id              1    wreg     unsigned char 
 20278 ;;  inISR           1    1[COMRAM] _Bool 
 20279 ;; Auto vars:     Size  Location     Type
 20280 ;;  id              1    2[COMRAM] unsigned char 
 20281 ;; Return value:  Size  Location     Type
 20282 ;;                  1    wreg      void 
 20283 ;; Registers used:
 20284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20285 ;; Tracked objects:
 20286 ;;		On entry : 0/0
 20287 ;;		On exit  : 0/0
 20288 ;;		Unchanged: 0/0
 20289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20290 ;;      Params:         1       0       0       0       0       0       0
 20291 ;;      Locals:         1       0       0       0       0       0       0
 20292 ;;      Temps:          0       0       0       0       0       0       0
 20293 ;;      Totals:         2       0       0       0       0       0       0
 20294 ;;Total ram usage:        2 bytes
 20295 ;; Hardware stack levels used: 1
 20296 ;; Hardware stack levels required when called: 1
 20297 ;; This function calls:
 20298 ;;		i2_ENTERCRITICAL
 20299 ;;		i2_LEAVECRITICAL
 20300 ;; This function is called by:
 20301 ;;		_XF_decrementAndQueueTimers
 20302 ;; This function uses a non-reentrant model
 20303 ;;
 20304                           
 20305                           	psect	text85
 20306  0061FE                     __ptext85:
 20307                           	callstack 0
 20308  0061FE                     _XF_unscheduleTimer:
 20309                           	callstack 14
 20310                           
 20311                           ;incstack = 0
 20312                           ;XF_unscheduleTimer@id stored from wreg
 20313  0061FE  6E03               	movwf	XF_unscheduleTimer@id^0,c
 20314  006200                     
 20315                           ;xf/xf.c: 125: void XF_unscheduleTimer(TimerID id, _Bool inISR);xf/xf.c: 126: {;xf/xf.c:
      +                           127:     ENTERCRITICAL(inISR);
 20316  006200  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20317  006202  EC10  F032         	call	i2_ENTERCRITICAL
 20318  006206                     
 20319                           ;xf/xf.c: 128:     theXF.timerList[id].tm = 0;
 20320  006206  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20321  006208  0D03               	mullw	3
 20322  00620A  0EB5               	movlw	low _theXF
 20323  00620C  24F3               	addwf	243,w,c
 20324  00620E  6ED9               	movwf	fsr2l,c
 20325  006210  0E00               	movlw	high _theXF
 20326  006212  20F4               	addwfc	prodh,w,c
 20327  006214  6EDA               	movwf	fsr2h,c
 20328  006216  0E00               	movlw	0
 20329  006218  6EDE               	movwf	postinc2,c
 20330  00621A  0E00               	movlw	0
 20331  00621C  6EDD               	movwf	postdec2,c
 20332  00621E                     
 20333                           ;xf/xf.c: 129:     theXF.timerList[id].ev = NULLEVENT;
 20334  00621E  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20335  006220  0D03               	mullw	3
 20336  006222  0EB7               	movlw	low (_theXF+2)
 20337  006224  24F3               	addwf	243,w,c
 20338  006226  6ED9               	movwf	fsr2l,c
 20339  006228  0E00               	movlw	high (_theXF+2)
 20340  00622A  20F4               	addwfc	prodh,w,c
 20341  00622C  6EDA               	movwf	fsr2h,c
 20342  00622E  0E00               	movlw	0
 20343  006230  6EDF               	movwf	indf2,c
 20344                           
 20345                           ;xf/xf.c: 130:     LEAVECRITICAL(inISR);
 20346  006232  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20347  006234  EC05  F032         	call	i2_LEAVECRITICAL
 20348  006238  0012               	return		;funcret
 20349  00623A                     __end_of_XF_unscheduleTimer:
 20350                           	callstack 0
 20351                           
 20352 ;; *************** function i2_LEAVECRITICAL *****************
 20353 ;; Defined at:
 20354 ;;		line 186 in file "xf/xf.c"
 20355 ;; Parameters:    Size  Location     Type
 20356 ;;  inISR           1    wreg     _Bool 
 20357 ;; Auto vars:     Size  Location     Type
 20358 ;;  inISR           1    0[COMRAM] _Bool 
 20359 ;; Return value:  Size  Location     Type
 20360 ;;                  1    wreg      void 
 20361 ;; Registers used:
 20362 ;;		wreg, status,2
 20363 ;; Tracked objects:
 20364 ;;		On entry : 0/0
 20365 ;;		On exit  : 0/0
 20366 ;;		Unchanged: 0/0
 20367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20368 ;;      Params:         0       0       0       0       0       0       0
 20369 ;;      Locals:         1       0       0       0       0       0       0
 20370 ;;      Temps:          0       0       0       0       0       0       0
 20371 ;;      Totals:         1       0       0       0       0       0       0
 20372 ;;Total ram usage:        1 bytes
 20373 ;; Hardware stack levels used: 1
 20374 ;; This function calls:
 20375 ;;		Nothing
 20376 ;; This function is called by:
 20377 ;;		_XF_unscheduleTimer
 20378 ;;		i2_XF_pushEvent
 20379 ;;		i2_XF_scheduleTimer
 20380 ;; This function uses a non-reentrant model
 20381 ;;
 20382                           
 20383                           	psect	text86
 20384  00640A                     __ptext86:
 20385                           	callstack 0
 20386  00640A                     i2_LEAVECRITICAL:
 20387                           	callstack 15
 20388                           
 20389                           ;incstack = 0
 20390                           ;i2LEAVECRITICAL@inISR stored from wreg
 20391  00640A  6E01               	movwf	i2LEAVECRITICAL@inISR^0,c
 20392  00640C                     
 20393                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 20394  00640C  5001               	movf	i2LEAVECRITICAL@inISR^0,w,c
 20395  00640E  A4D8               	btfss	status,2,c
 20396  006410  EF0C  F032         	goto	i2u514_41
 20397  006414  EF0E  F032         	goto	i2u514_40
 20398  006418                     i2u514_41:
 20399  006418  EF0F  F032         	goto	i2l763
 20400  00641C                     i2u514_40:
 20401  00641C                     
 20402                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 20403  00641C  8EF2               	bsf	4082,7,c	;volatile
 20404  00641E                     i2l763:
 20405  00641E  0012               	return		;funcret
 20406  006420                     __end_ofi2_LEAVECRITICAL:
 20407                           	callstack 0
 20408                           
 20409 ;; *************** function i2_ENTERCRITICAL *****************
 20410 ;; Defined at:
 20411 ;;		line 172 in file "xf/xf.c"
 20412 ;; Parameters:    Size  Location     Type
 20413 ;;  inISR           1    wreg     _Bool 
 20414 ;; Auto vars:     Size  Location     Type
 20415 ;;  inISR           1    0[COMRAM] _Bool 
 20416 ;; Return value:  Size  Location     Type
 20417 ;;                  1    wreg      void 
 20418 ;; Registers used:
 20419 ;;		wreg, status,2
 20420 ;; Tracked objects:
 20421 ;;		On entry : 0/0
 20422 ;;		On exit  : 0/0
 20423 ;;		Unchanged: 0/0
 20424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20425 ;;      Params:         0       0       0       0       0       0       0
 20426 ;;      Locals:         1       0       0       0       0       0       0
 20427 ;;      Temps:          0       0       0       0       0       0       0
 20428 ;;      Totals:         1       0       0       0       0       0       0
 20429 ;;Total ram usage:        1 bytes
 20430 ;; Hardware stack levels used: 1
 20431 ;; This function calls:
 20432 ;;		Nothing
 20433 ;; This function is called by:
 20434 ;;		_XF_unscheduleTimer
 20435 ;;		i2_XF_pushEvent
 20436 ;;		i2_XF_scheduleTimer
 20437 ;; This function uses a non-reentrant model
 20438 ;;
 20439                           
 20440                           	psect	text87
 20441  006420                     __ptext87:
 20442                           	callstack 0
 20443  006420                     i2_ENTERCRITICAL:
 20444                           	callstack 15
 20445                           
 20446                           ;incstack = 0
 20447                           ;i2ENTERCRITICAL@inISR stored from wreg
 20448  006420  6E01               	movwf	i2ENTERCRITICAL@inISR^0,c
 20449  006422                     
 20450                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 20451  006422  5001               	movf	i2ENTERCRITICAL@inISR^0,w,c
 20452  006424  A4D8               	btfss	status,2,c
 20453  006426  EF17  F032         	goto	i2u513_41
 20454  00642A  EF19  F032         	goto	i2u513_40
 20455  00642E                     i2u513_41:
 20456  00642E  EF1A  F032         	goto	i2l759
 20457  006432                     i2u513_40:
 20458  006432                     
 20459                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 20460  006432  9EF2               	bcf	4082,7,c	;volatile
 20461  006434                     i2l759:
 20462  006434  0012               	return		;funcret
 20463  006436                     __end_ofi2_ENTERCRITICAL:
 20464                           	callstack 0
 20465                           
 20466                           	psect	rparam
 20467  0000                     
 20468                           	psect	temp
 20469  00004E                     btemp:
 20470                           	callstack 0
 20471  00004E                     	ds	1
 20472  0000                     int$flags	set	btemp
 20473  0000                     wtemp8	set	btemp+1
 20474  0000                     ttemp5	set	btemp+1
 20475  0000                     ttemp6	set	btemp+4
 20476  0000                     ttemp7	set	btemp+8
 20477                           
 20478                           	psect	idloc
 20479                           
 20480                           ;Config register IDLOC0 @ 0x200000
 20481                           ;	unspecified, using default values
 20482  200000                     	org	2097152
 20483  200000  FF                 	db	255
 20484                           
 20485                           ;Config register IDLOC1 @ 0x200001
 20486                           ;	unspecified, using default values
 20487  200001                     	org	2097153
 20488  200001  FF                 	db	255
 20489                           
 20490                           ;Config register IDLOC2 @ 0x200002
 20491                           ;	unspecified, using default values
 20492  200002                     	org	2097154
 20493  200002  FF                 	db	255
 20494                           
 20495                           ;Config register IDLOC3 @ 0x200003
 20496                           ;	unspecified, using default values
 20497  200003                     	org	2097155
 20498  200003  FF                 	db	255
 20499                           
 20500                           ;Config register IDLOC4 @ 0x200004
 20501                           ;	unspecified, using default values
 20502  200004                     	org	2097156
 20503  200004  FF                 	db	255
 20504                           
 20505                           ;Config register IDLOC5 @ 0x200005
 20506                           ;	unspecified, using default values
 20507  200005                     	org	2097157
 20508  200005  FF                 	db	255
 20509                           
 20510                           ;Config register IDLOC6 @ 0x200006
 20511                           ;	unspecified, using default values
 20512  200006                     	org	2097158
 20513  200006  FF                 	db	255
 20514                           
 20515                           ;Config register IDLOC7 @ 0x200007
 20516                           ;	unspecified, using default values
 20517  200007                     	org	2097159
 20518  200007  FF                 	db	255
 20519                           
 20520                           	psect	config
 20521                           
 20522                           ; Padding undefined space
 20523  300000                     	org	3145728
 20524  300000  FF                 	db	255
 20525                           
 20526                           ;Config register CONFIG1H @ 0x300001
 20527                           ;	Oscillator Selection bits
 20528                           ;	FOSC = INTIO67, Internal oscillator block
 20529                           ;	4X PLL Enable
 20530                           ;	PLLCFG = ON, Oscillator multiplied by 4
 20531                           ;	Primary clock enable bit
 20532                           ;	PRICLKEN = ON, Primary clock is always enabled
 20533                           ;	Fail-Safe Clock Monitor Enable bit
 20534                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 20535                           ;	Internal/External Oscillator Switchover bit
 20536                           ;	IESO = OFF, Oscillator Switchover mode disabled
 20537  300001                     	org	3145729
 20538  300001  38                 	db	56
 20539                           
 20540                           ;Config register CONFIG2L @ 0x300002
 20541                           ;	Power-up Timer Enable bit
 20542                           ;	PWRTEN = OFF, Power up timer disabled
 20543                           ;	Brown-out Reset Enable bits
 20544                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 20545                           ;	Brown Out Reset Voltage bits
 20546                           ;	BORV = 190, VBOR set to 1.90 V nominal
 20547  300002                     	org	3145730
 20548  300002  1F                 	db	31
 20549                           
 20550                           ;Config register CONFIG2H @ 0x300003
 20551                           ;	Watchdog Timer Enable bits
 20552                           ;	WDTEN = SWON, WDT is controlled by SWDTEN bit of the WDTCON register
 20553                           ;	Watchdog Timer Postscale Select bits
 20554                           ;	WDTPS = 32768, 1:32768
 20555  300003                     	org	3145731
 20556  300003  3E                 	db	62
 20557                           
 20558                           ; Padding undefined space
 20559  300004                     	org	3145732
 20560  300004  FF                 	db	255
 20561                           
 20562                           ;Config register CONFIG3H @ 0x300005
 20563                           ;	CCP2 MUX bit
 20564                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 20565                           ;	PORTB A/D Enable bit
 20566                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 20567                           ;	P3A/CCP3 Mux bit
 20568                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 20569                           ;	HFINTOSC Fast Start-up
 20570                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 20571                           ;	Timer3 Clock input mux bit
 20572                           ;	T3CMX = PORTC0, T3CKI is on RC0
 20573                           ;	ECCP2 B output mux bit
 20574                           ;	P2BMX = PORTB5, P2B is on RB5
 20575                           ;	MCLR Pin Enable bit
 20576                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 20577  300005                     	org	3145733
 20578  300005  BD                 	db	189
 20579                           
 20580                           ;Config register CONFIG4L @ 0x300006
 20581                           ;	Stack Full/Underflow Reset Enable bit
 20582                           ;	STVREN = ON, Stack full/underflow will cause Reset
 20583                           ;	Single-Supply ICSP Enable bit
 20584                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 20585                           ;	Extended Instruction Set Enable bit
 20586                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 20587                           ;	Background Debug
 20588                           ;	DEBUG = 0x1, unprogrammed default
 20589  300006                     	org	3145734
 20590  300006  85                 	db	133
 20591                           
 20592                           ; Padding undefined space
 20593  300007                     	org	3145735
 20594  300007  FF                 	db	255
 20595                           
 20596                           ;Config register CONFIG5L @ 0x300008
 20597                           ;	Code Protection Block 0
 20598                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 20599                           ;	Code Protection Block 1
 20600                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 20601                           ;	Code Protection Block 2
 20602                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 20603                           ;	Code Protection Block 3
 20604                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 20605  300008                     	org	3145736
 20606  300008  0F                 	db	15
 20607                           
 20608                           ;Config register CONFIG5H @ 0x300009
 20609                           ;	Boot Block Code Protection bit
 20610                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 20611                           ;	Data EEPROM Code Protection bit
 20612                           ;	CPD = OFF, Data EEPROM not code-protected
 20613  300009                     	org	3145737
 20614  300009  C0                 	db	192
 20615                           
 20616                           ;Config register CONFIG6L @ 0x30000A
 20617                           ;	Write Protection Block 0
 20618                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 20619                           ;	Write Protection Block 1
 20620                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 20621                           ;	Write Protection Block 2
 20622                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 20623                           ;	Write Protection Block 3
 20624                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 20625  30000A                     	org	3145738
 20626  30000A  0F                 	db	15
 20627                           
 20628                           ;Config register CONFIG6H @ 0x30000B
 20629                           ;	Configuration Register Write Protection bit
 20630                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 20631                           ;	Boot Block Write Protection bit
 20632                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 20633                           ;	Data EEPROM Write Protection bit
 20634                           ;	WRTD = OFF, Data EEPROM not write-protected
 20635  30000B                     	org	3145739
 20636  30000B  E0                 	db	224
 20637                           
 20638                           ;Config register CONFIG7L @ 0x30000C
 20639                           ;	Table Read Protection Block 0
 20640                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 20641                           ;	Table Read Protection Block 1
 20642                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 20643                           ;	Table Read Protection Block 2
 20644                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 20645                           ;	Table Read Protection Block 3
 20646                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 20647  30000C                     	org	3145740
 20648  30000C  0F                 	db	15
 20649                           
 20650                           ;Config register CONFIG7H @ 0x30000D
 20651                           ;	Boot Block Table Read Protection bit
 20652                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 20653  30000D                     	org	3145741
 20654  30000D  40                 	db	64
 20655                           tosu	equ	0xFFF
 20656                           tosh	equ	0xFFE
 20657                           tosl	equ	0xFFD
 20658                           stkptr	equ	0xFFC
 20659                           pclatu	equ	0xFFB
 20660                           pclath	equ	0xFFA
 20661                           pcl	equ	0xFF9
 20662                           tblptru	equ	0xFF8
 20663                           tblptrh	equ	0xFF7
 20664                           tblptrl	equ	0xFF6
 20665                           tablat	equ	0xFF5
 20666                           prodh	equ	0xFF4
 20667                           prodl	equ	0xFF3
 20668                           indf0	equ	0xFEF
 20669                           postinc0	equ	0xFEE
 20670                           postdec0	equ	0xFED
 20671                           preinc0	equ	0xFEC
 20672                           plusw0	equ	0xFEB
 20673                           fsr0h	equ	0xFEA
 20674                           fsr0l	equ	0xFE9
 20675                           wreg	equ	0xFE8
 20676                           indf1	equ	0xFE7
 20677                           postinc1	equ	0xFE6
 20678                           postdec1	equ	0xFE5
 20679                           preinc1	equ	0xFE4
 20680                           plusw1	equ	0xFE3
 20681                           fsr1h	equ	0xFE2
 20682                           fsr1l	equ	0xFE1
 20683                           bsr	equ	0xFE0
 20684                           indf2	equ	0xFDF
 20685                           postinc2	equ	0xFDE
 20686                           postdec2	equ	0xFDD
 20687                           preinc2	equ	0xFDC
 20688                           plusw2	equ	0xFDB
 20689                           fsr2h	equ	0xFDA
 20690                           fsr2l	equ	0xFD9
 20691                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    1867
    Data        0
    BSS         321
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      77
    BANK0           160     85     160
    BANK1           256      1     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    g1.font.bitmap	PTR const unsigned char  size(2) Largest target is 0
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    g1.font.descriptor	PTR const struct . size(2) Largest target is 0
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    g1.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.font	PTR struct . size(2) Largest target is 0
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.text	PTR const unsigned char  size(2) Largest target is 0
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.fpPress	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S4869_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    backlightController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    checkCollision@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    mooveBall@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    moovePaddle@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerSM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displayController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displaySM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displayInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    touchScreenController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    touchScreenSM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    sleepInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_Bitmap@colorTablePtr	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_Bitmap@bmpPtr	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_Bitmap@strPtr	PTR struct . size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    RGB2LCD@colorTableEntry	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_DrawText@font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_DrawText@font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_DrawText@font	PTR const struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_DrawText@msg	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    LCD_InSlider@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InSlider@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_InButton@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_InButton@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_InButton@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonDraw@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonDraw@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonDraw@bmpPtr	PTR struct . size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonDraw@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonDraw@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonDraw@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonUpdate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonUpdate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonUpdate@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonCreate@fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonCreate@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonCreate@font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@textOrBmp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonCreate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonCreate@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderDraw@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderDraw@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderUpdate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderUpdate@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderCreate@fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_endGame@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_inGameDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_parametersDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_welcomeDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setY@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setX@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_resetPos@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setPlayer@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_init@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Score_draw@s	PTR struct Score size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    S135$fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    S108$fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    S108$text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    S99$bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    arialNarrow_12ptFontInfo.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    S99$descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    arialNarrow_12ptFontInfo.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    Paddle_draw@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Paddle_addX@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Paddle_init@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_draw@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_Update@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_init@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 


Critical Paths under _main in COMRAM

    _gameControllerInit->_gameControllerController
    _XF_init->___wmul
    _LCD_Init->_LCD_Lowlevel_Init
    _GameParameters_init->_LCD_ButtonCreate
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _XF_scheduleTimer->_ENTERCRITICAL
    _XF_scheduleTimer->_LEAVECRITICAL
    _sleepSM->_sleepController
    _gameControllerSM->_gameControllerController
    _gameControllerController->_LCD_SliderUpdate
    _moovePaddle->_LCD_InButton
    _mooveBall->_checkCollision
    _checkCollision->_XF_pushEvent
    _XF_pushEvent->___awmod
    _backlightController->_GameParameters_setBackLight
    _Menu_welcomeDraw->_LCD_DrawText
    _Menu_parametersDraw->_LCD_SliderDraw
    _LCD_SliderDraw->_LCD_SliderUpdate
    _LCD_SliderUpdate->___lwdiv
    _Menu_endGame->_LCD_DrawText
    _LCD_ButtonDraw->_LCD_DrawText
    _LCD_ButtonUpdate->_LCD_DrawRect
    _LCD_Bitmap->___lwdiv
    ___lwdiv->___wmul
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_DrawText->___wmul
    ___wmul->___awdiv
    _Paddle_draw->_LCD_DrawRect
    _Ball_draw->_LCD_DrawRect
    _XF_popEvent->___awmod

Critical Paths under _isr in COMRAM

    _isr->_XF_decrementAndQueueTimers
    i2_XF_scheduleTimer->i2_ENTERCRITICAL
    i2_XF_scheduleTimer->i2_LEAVECRITICAL
    _XF_decrementAndQueueTimers->i2_XF_pushEvent
    i2_XF_pushEvent->i2___awmod
    i2_XF_pushEvent->i2___wmul
    _XF_unscheduleTimer->i2_ENTERCRITICAL
    _XF_unscheduleTimer->i2_LEAVECRITICAL

Critical Paths under _main in BANK0

    _Factory_init->_sleepInit
    _sleepInit->_displayInit
    _displayInit->_displayController
    _Factory_exec->_touchScreenSM
    _touchScreenSM->_touchScreenController
    _touchScreenController->_sprintf
    _displaySM->_displayController
    _displayController->_Menu_endGame
    _displayController->_Menu_parametersDraw
    _displayController->_Menu_welcomeDraw
    _Menu_welcomeDraw->_LCD_ButtonDraw
    _Menu_parametersDraw->_LCD_ButtonDraw
    _Menu_endGame->_LCD_ButtonDraw
    _LCD_ButtonDraw->_LCD_Bitmap
    _Menu_inGameDraw->_Score_draw
    _Score_draw->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Factory_exec

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  663651
                       _Factory_exec
                       _Factory_init
 ---------------------------------------------------------------------------------
 (1) _Factory_init                                         2     2      0  308773
                                             71 BANK0      2     2      0
                _GameParameters_init
                       _LCD_DrawText
                           _LCD_Fill
                           _LCD_Init
                            _XF_init
                          _sleepInit
 ---------------------------------------------------------------------------------
 (2) _sleepInit                                            2     0      2  282653
                                             69 BANK0      2     0      2
                        _displayInit
                 _gameControllerInit
                    _sleepController
                    _touchScreenInit
 ---------------------------------------------------------------------------------
 (3) _touchScreenInit                                      0     0      0       0
                        _configTouch
 ---------------------------------------------------------------------------------
 (3) _gameControllerInit                                   2     0      2   40232
                                             59 COMRAM     2     0      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (3) _displayInit                                          2     0      2  242269
                                             67 BANK0      2     0      2
                  _displayController
 ---------------------------------------------------------------------------------
 (2) _XF_init                                              2     2      0    3031
                                             31 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      90
                                             22 COMRAM     2     2      0
                  _LCD_Lowlevel_Init
 ---------------------------------------------------------------------------------
 (3) _LCD_Lowlevel_Init                                    5     5      0      60
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GameParameters_init                                  2     0      2    9902
                                             42 COMRAM     2     0      2
                          _Ball_init
                   _LCD_ButtonCreate
                   _LCD_SliderCreate
                        _Paddle_init
 ---------------------------------------------------------------------------------
 (3) _Paddle_init                                          4     0      4     502
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _LCD_SliderCreate                                    22     0     22    1320
                                             17 COMRAM    22     0     22
 ---------------------------------------------------------------------------------
 (3) _LCD_ButtonCreate                                    25     0     25    7466
                                             17 COMRAM    25     0     25
 ---------------------------------------------------------------------------------
 (3) _Ball_init                                            2     0      2     208
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Factory_exec                                         1     1      0  354878
                                              0 BANK1      1     1      0
                        _XF_popEvent
                          _displaySM
                   _gameControllerSM
                            _sleepSM
                      _touchScreenSM
 ---------------------------------------------------------------------------------
 (2) _touchScreenSM                                        5     3      2   26905
                                             80 BANK0      5     3      2
              _touchScreenController
 ---------------------------------------------------------------------------------
 (3) _touchScreenController                               32    30      2   26629
                                             48 BANK0     32    30      2
                _GameParameters_setX
                _GameParameters_setY
                       _LCD_DrawText
                   _XF_scheduleTimer
                            ___fldiv
                            ___fltol
                           ___xxtofl
                      _configMeasure
                        _configTouch
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _configTouch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _configMeasure                                        1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     566
                                             17 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             56 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2003
                                             31 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _XF_scheduleTimer                                     5     1      4     789
                                             18 COMRAM     5     1      4
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setY                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setX                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sleepSM                                              3     3      0     124
                                             19 COMRAM     3     3      0
                    _sleepController
 ---------------------------------------------------------------------------------
 (3) _sleepController                                      2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _gameControllerSM                                     5     3      2   40449
                                             59 COMRAM     5     3      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (4) _gameControllerController                             5     2      3   40111
                                             54 COMRAM     5     2      3
            _GameParameters_resetPos
                       _LCD_InButton
                       _LCD_InSlider
                   _LCD_SliderUpdate
                       _XF_pushEvent
                _backlightController
                          _mooveBall
                        _moovePaddle
 ---------------------------------------------------------------------------------
 (5) _moovePaddle                                          2     0      2    6552
                                             27 COMRAM     2     0      2
            _GameParameters_resetPos
                       _LCD_InButton
                        _Paddle_addX
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _Paddle_addX                                          8     2      6     881
                                             17 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _LCD_InButton                                        10     4      6    2200
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (6) _GameParameters_resetPos                              2     0      2     782
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _mooveBall                                            2     0      2    7266
                                             36 COMRAM     2     0      2
                        _Ball_Update
                       _XF_pushEvent
                     _checkCollision
 ---------------------------------------------------------------------------------
 (6) _checkCollision                                      30    28      2    4549
                                             26 COMRAM    10     8      2
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _XF_pushEvent                                         3     2      1    2289
                                             23 COMRAM     3     2      1
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _Ball_Update                                          6     4      2     276
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _backlightController                                  4     2      2    3552
                                             23 COMRAM     4     2      2
        _GameParameters_setBackLight
 ---------------------------------------------------------------------------------
 (6) _GameParameters_setBackLight                          6     2      4    2284
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _LCD_InSlider                                        10     4      6     580
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _displaySM                                            5     3      2  286226
                                             67 BANK0      5     3      2
                    _Menu_inGameDraw
                  _displayController
 ---------------------------------------------------------------------------------
 (4) _displayController                                    5     2      3  242148
                                             62 BANK0      5     2      3
                          _Ball_draw
                       _Menu_endGame
                _Menu_parametersDraw
                   _Menu_welcomeDraw
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Menu_welcomeDraw                                     2     0      2   57566
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (5) _Menu_parametersDraw                                  2     0      2   82977
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
                     _LCD_SliderDraw
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderDraw                                      14    12      2   25380
                                             54 COMRAM    14    12      2
                       _LCD_DrawRect
                   _LCD_SliderUpdate
 ---------------------------------------------------------------------------------
 (5) _LCD_SliderUpdate                                    16    14      2   15116
                                             38 COMRAM    16    14      2
                       _LCD_DrawRect
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _Menu_endGame                                         4     2      2   57535
                                             65 COMRAM     2     2      0
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonDraw                                      32    30      2   44286
                                             28 BANK0     32    30      2
                         _LCD_Bitmap
                   _LCD_ButtonUpdate
                       _LCD_DrawRect
                       _LCD_DrawText
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _LCD_ButtonUpdate                                    18    16      2   11351
                                             36 COMRAM    18    16      2
                       _LCD_DrawRect
                           _LCD_Read
 ---------------------------------------------------------------------------------
 (8) _LCD_Read                                            10     6      4     548
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _LCD_Bitmap                                          38    32      6    7372
                                             38 COMRAM    10     4      6
                                              0 BANK0     28    28      0
                            _RGB2LCD
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     901
                                             31 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _RGB2LCD                                             14    12      2     499
                                             17 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (3) _Menu_inGameDraw                                      2     0      2   43399
                                             50 BANK0      2     0      2
                          _Ball_draw
                           _LCD_Fill
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Score_draw                                           2     0      2   21884
                                             48 BANK0      2     0      2
                       _LCD_DrawText
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             16    10      6    9137
                                             34 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             8     2      6    8111
                                             26 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           42    36      6    7638
                                             62 COMRAM     8     2      6
                                             18 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _dtoa                                                36    26     10    5863
                                             44 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (10) _pad                                                11     5      6    3597
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _fputs                                               7     3      4    1537
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2     183
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (10) ___aomod                                            18     2     16     613
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (10) ___aodiv                                            26    10     16     625
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawText                                        34    21     13   12381
                                             31 COMRAM    34    21     13
                            ___awdiv
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _strlen                                              4     2      2     400
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2802
                                             25 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1105
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _Paddle_draw                                          6     4      2   10398
                                             36 COMRAM     6     4      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_Fill                                             8     6      2     716
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Ball_draw                                           10     8      2   10187
                                             36 COMRAM    10     8      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawRect                                        19     8     11    9635
                                             17 COMRAM    19     8     11
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                          2     2      0    1016
                                             23 COMRAM     2     2      0
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     793
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _LEAVECRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ENTERCRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _isr                                                 4     4      0    2339
                                             13 COMRAM     4     4      0
         _XF_decrementAndQueueTimers
                     i2_XF_pushEvent
                 i2_XF_scheduleTimer
 ---------------------------------------------------------------------------------
 (15) i2_XF_scheduleTimer                                  5     1      4     328
                                              1 COMRAM     5     1      4
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (15) _XF_decrementAndQueueTimers                          4     4      0    1408
                                              9 COMRAM     4     4      0
                 _XF_unscheduleTimer
                     i2_XF_pushEvent
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     419
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2_XF_pushEvent                                      3     2      1     603
                                              6 COMRAM     3     2      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
                          i2___awmod
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) _XF_unscheduleTimer                                  2     1      1     208
                                              1 COMRAM     2     1      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (16) i2_LEAVECRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_ENTERCRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Factory_exec
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _displaySM
       _Menu_inGameDraw
         _Ball_draw
           _LCD_DrawRect
         _LCD_Fill
         _Paddle_draw
           _LCD_DrawRect
         _Score_draw
           _LCD_DrawText
             ___awdiv
             ___wmul
               ___awdiv (ARG)
             _strlen
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                     _strlen
                 _fputc
       _displayController
         _Ball_draw
         _Menu_endGame
           _LCD_ButtonDraw
             _LCD_Bitmap
               _RGB2LCD
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
               ___wmul
             _LCD_ButtonUpdate
               _LCD_DrawRect
               _LCD_Read
             _LCD_DrawRect
             _LCD_DrawText
             ___awdiv
             _strlen
           _LCD_DrawText
           _LCD_Fill
         _Menu_parametersDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
           _LCD_SliderDraw
             _LCD_DrawRect
             _LCD_SliderUpdate
               _LCD_DrawRect
               ___lwdiv
               ___wmul
         _Menu_welcomeDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
         _Paddle_draw
         _Score_draw
     _gameControllerSM
       _gameControllerController
         _GameParameters_resetPos
         _LCD_InButton
         _LCD_InSlider
         _LCD_SliderUpdate
         _XF_pushEvent
           _ENTERCRITICAL
           _LEAVECRITICAL
           ___awmod
         _backlightController
           _GameParameters_setBackLight
         _mooveBall
           _Ball_Update
           _XF_pushEvent
           _checkCollision
             _XF_pushEvent
         _moovePaddle
           _GameParameters_resetPos
           _LCD_InButton
           _Paddle_addX
           _XF_pushEvent
     _sleepSM
       _sleepController
     _touchScreenSM
       _touchScreenController
         _GameParameters_setX
         _GameParameters_setY
         _LCD_DrawText
         _XF_scheduleTimer
           _ENTERCRITICAL
           _LEAVECRITICAL
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _configMeasure
         _configTouch
         _sprintf
   _Factory_init
     _GameParameters_init
       _Ball_init
       _LCD_ButtonCreate
       _LCD_SliderCreate
       _Paddle_init
     _LCD_DrawText
     _LCD_Fill
     _LCD_Init
       _LCD_Lowlevel_Init
     _XF_init
       ___wmul
     _sleepInit
       _displayInit
         _displayController
       _gameControllerInit
         _gameControllerController
       _sleepController
       _touchScreenInit
         _configTouch

 _isr (ROOT)
   _XF_decrementAndQueueTimers
     _XF_unscheduleTimer
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
     i2_XF_pushEvent
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
       i2___awmod
       i2___wmul (ARG)
     i2___wmul
   i2_XF_pushEvent
   i2_XF_scheduleTimer
     i2_ENTERCRITICAL
     i2_LEAVECRITICAL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      1      F0       6       93.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     55      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4D       1       81.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DD       9        0.0%
DATA                 0      0     1DD      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 06 11:34:38 2021

                      _LCD_ButtonDraw 0F54                           ?_LCD_Bitmap 0027  
                                   l5 5C4E                                     l8 5ADE  
                        ___fldiv@aexp 0038                          ___fldiv@bexp 0037  
                    _LCD_ButtonCreate 497C                          ___fldiv@sign 0030  
                        ?_displayInit 00A3                  __end_of_Factory_exec 5FF0  
                __end_of_Factory_init 5512                                    l11 41CC  
                                  l26 4EEC                                    l18 5678  
                                  l29 4440                                    _g1 0100  
                        ___awdiv@sign 0017               __end_of_sleepController 6270  
                   ??i2_ENTERCRITICAL 0001              __end_of_Menu_welcomeDraw 5BDA  
                 ___wmul@multiplicand 001C                  backlightController@g 0018  
                    _LCD_ButtonUpdate 37EE                         ?_LCD_InButton 0012  
                       ?_LCD_InSlider 0012                         ?_LCD_DrawRect 0012  
                       ?_LCD_DrawText 0020                                   l100 5510  
                                 l104 5FEE                                   l122 4FBE  
                                 l142 6178                                   l223 5354  
                                 l151 62CA                                   l231 4C56  
                                 l225 5398                                   l241 4670  
                                 l137 25D2                                   l322 5456  
                                 l250 3A22                                   l154 63DC  
                                 l218 3580                                   l411 62F2  
                                 l244 4A74                                   l157 63C6  
                                 l182 6044                                   l238 1916  
                                 l270 4E12                                   l319 21FE  
                                 l263 4D34                                   l511 358E  
                                 l280 2DA2                                   l328 0F52  
                                 l176 5BD8                                   l424 592A  
                                 l512 3596                                   l433 626E  
                                 l505 5A5C                                   l290 2EC4  
                                 l282 2DAE                                   l530 60E6  
                                 l522 37EC                                   l259 1440  
                                 l187 5728                                   l179 5B60  
                                 l516 3658                                   l293 2F5E  
                                 l525 6382                                   l614 63B0  
                                 l287 2E66                                   l551 639A  
                                 l296 2FCC                                   l392 59C8  
                                 l298 2FF6                                   l714 1DB4  
                                 l634 29D0                                   l651 2CBC  
                                 l635 2A2E                                   l708 1D98  
                                 l733 5E0E                                   l629 5150  
                                 l814 6340                                   l398 430E  
                                 l654 4AEA                                   l494 6450  
                                 l583 487A                                   l655 4B5E  
                                 l743 5CC2                                   l656 4B68  
                                 l808 643A                                   l737 5F98  
                                 l569 497A                                   l729 55C8  
                                 l666 041A                                   l763 63F2  
                                 l659 631A                                   l684 0806  
                                 l941 4076                                   l685 086C  
                                 l677 0788                                   l759 6408  
                                 l928 3F12                                   l688 095C  
                                 _GIE 007F97                                   _PR2 000FBB  
                                 _abs 61BE                                   _pad 5216  
                                 _isr 0008                  configMeasure@channel 0012  
                     ??_ENTERCRITICAL 0012                          ___awmod@sign 0017  
                                 prod 000FF3                                   wreg 000FE8  
              __size_of_touchScreenSM 0094                       __end_of_RGB2LCD 5458  
                        ___fltol@exp1 0042                      _touchScreenState 00DE  
                         _Ball_Update 5A5E                         ??_Paddle_addX 0018  
                                l1111 4776                                  ?_abs 0024  
                                l1045 5214                                  l1312 5D36  
                                l1305 5D2E                                  l1401 2790  
                                l1058 57D8                                  l1322 5E72  
                                l1410 2878                                  l1315 5E6A  
                                l1407 2812                                  l1600 6134  
                                l4000 32DE                                  l1409 288A  
                                l1522 529C                                  l1530 3098  
                                l4010 32EA                                  l4002 32E2  
                                l1524 52D6                                  l1532 30A0  
                                l4100 3394                                  l4020 330E  
                                l4004 32E4                                  l1550 32D8  
                                l4110 33A6                                  l4102 339A  
                                l4030 331E                                  l4022 3312  
                                l4006 32E6                                  l1519 525A  
                                l1472 3BD6                                  l4200 3440  
                                l4120 33B4                                  l4112 33A8  
                                l4104 339C                                  l4040 332C  
                                l4032 3320                                  l4024 3314  
                                l4016 32EE                                  l4008 32E8  
                                l4210 3452                                  l4202 3442  
                                l4130 33C2                                  l4122 33B6  
                                l4114 33AE                                  l4106 33A2  
                                l4050 333E                                  l4042 3332  
                                l4034 3326                                  l4026 3316  
                                l4018 32FC                                  l1571 61FC  
                                l1563 5F30                                  l1483 3B6E  
                                l1564 5F38                                  l1492 6096  
                                l1396 296C                                  l1476 3B12  
                                l4300 3504                                  l4220 3468  
                                l4212 3458                                  l4204 3448  
                                l4140 33D4                                  l4132 33C8  
                                l4124 33BC                                  l4116 33B0  
                                l4108 33A4                                  l4060 3350  
                                l4052 3340                                  l4044 3334  
                                l4036 3328                                  l4028 3318  
                                l1557 3D8A                                  l1469 3A7A  
                                l1398 27CC                                  l4310 3512  
                                l4302 3506                                  l4230 347A  
                                l4222 346A                                  l4214 345A  
                                l4206 344A                                  l4150 33E6  
                                l4142 33D6                                  l4134 33CA  
                                l4126 33BE                                  l4118 33B2  
                                l4070 3366                                  l4062 3356  
                                l4054 3346                                  l4046 333A  
                                l4038 332A                                  l1583 5088  
                                l1591 61BC                                  l1568 61F4  
                                l4320 3528                                  l4312 3518  
                                l4304 350C                                  l4240 3490  
                                l4232 3480                                  l4224 3470  
                                l4216 3460                                  l4208 3450  
                                l4160 33F8                                  l4152 33E8  
                                l4144 33DC                                  l4136 33D0  
                                l4128 33C0                                  l4080 3374  
                                l4072 3368                                  l4064 3358  
                                l4056 3348                                  l4048 333C  
                                l1594 6452                                  l4330 353A  
                                l4322 352A                                  l4314 351A  
                                l4306 350E                                  l4250 349E  
                                l4242 3492                                  l4234 3482  
                                l4226 3472                                  l4218 3462  
                                l4170 3406                                  l4162 33FA  
                                l4154 33EA                                  l4146 33DE  
                                l4138 33D2                                  l4090 3386  
                                l4082 337A                                  l4074 336A  
                                l4066 335E                                  l4058 334E  
                                l4340 354C                                  l4332 353C  
                                l4324 3530                                  l4316 3520  
                                l4308 3510                                  l4260 34B4  
                                l4252 34A4                                  l4244 3494  
                                l4236 3488                                  l4228 3478  
                                l4180 3418                                  l4172 340C  
                                l4164 33FC                                  l4156 33F0  
                                l4148 33E4                                  l4092 3388  
                                l4084 337C                                  l4076 336C  
                                l4068 3360                                  l4350 355E  
                                l4342 354E                                  l4334 353E  
                                l4326 3532                                  l4318 3522  
                                l4270 34C6                                  l4262 34B6  
                                l4254 34A6                                  l4246 3496  
                                l4238 348A                                  l4190 342A  
                                l4182 341A                                  l4174 340E  
                                l4166 33FE                                  l4158 33F2  
                                l4094 338E                                  l4086 337E  
                                l4078 3372                                  l4360 3570  
                                l4352 3564                                  l4344 3554  
                                l4336 3544                                  l4328 3538  
                                l4280 34DC                                  l4272 34CC  
                                l4264 34BC                                  l4256 34AC  
                                l4248 349C                                  l4192 3430  
                                l4184 3420                                  l4176 3414  
                                l4168 3404                                  l4096 3390  
                                l4088 3380                                  l4370 357E  
                                l4362 3572                                  l4354 3566  
                                l4346 3556                                  l4338 3546  
                                l4290 34EE                                  l4282 34DE  
                                l4274 34CE                                  l4266 34BE  
                                l4258 34AE                                  l4194 3432  
                                l4186 3422                                  l4178 3416  
                                l4098 3392                                  l4364 3578  
                                l4356 3568                                  l4348 355C  
                                l4292 34F4                                  l4284 34E4  
                                l4276 34D4                                  l4268 34C4  
                                l4196 3438                                  l4188 3428  
                                l4366 357A                                  l4358 356A  
                                l4294 34F6                                  l4286 34E6  
                                l4278 34D6                                  l4198 343A  
                                ?_pad 0022                                  l7200 55CA  
                                l4368 357C                                  l4296 34FC  
                                l4288 34EC                                  l7210 5640  
                                l7202 55F2                                  l3850 5938  
                                l4298 34FE                                  l8100 3F46  
                                l8020 4FD2                                  l7220 49A0  
                                l7212 5650                                  l7204 5604  
                                l3852 593A                                  l8110 3F9E  
                                l8102 3F4A                                  l8022 4FE4  
                                l7230 4A04                                  l7222 49B4  
                                l7214 5664                                  l7206 5614  
                                l3862 5950                                  l3854 593C  
                                l3846 592C                                  l8032 60E8  
                                l8120 4020                                  l8112 3FB2  
                                l8104 3F58                                  l8024 4FEE  
                                l8200 3254                                  l9000 1460  
                                l7240 4A64                                  l7232 4A18  
                                l7224 49C8                                  l7216 497C  
                                l7208 5628                                  l3864 595E  
                                l3856 593E                                  l3848 5934  
                                l8034 60F4                                  l8050 3D8C  
                                l8114 3FC0                                  l8122 4026  
                                l8106 3F78                                  l8026 500C  
                                l8018 4FC0                                  l8042 617A  
                                l8130 5216                                  l8210 3298  
                                l8202 3266                                  l9010 1594  
                                l9002 14F0                                  l7234 4A2C  
                                l7226 49DC                                  l7218 498C  
                                l7250 4BB6                                  l7242 4B6A  
                                l3874 5994                                  l3866 596A  
                                l8300 2DC2                                  l8220 2CC2  
                                l8036 60F8                                  l8060 3DD0  
                                l8052 3D90                                  l8124 4036  
                                l8116 3FEE                                  l8108 3F96  
                                l8028 5042                                  l8044 6186  
                                l8140 5266                                  l8132 5224  
                                l8212 32A0                                  l8204 3274  
                                l9100 0AC4                                  l9020 16BC  
                                l9012 1604                                  l9004 1518  
                                l7236 4A40                                  l7228 49F0  
                                l7260 4C1A                                  l7252 4BCA  
                                l7244 4B7A                                  l3876 59A2  
                                l3868 5984                                  l8310 2DFC  
                                l8302 2DD8                                  l8230 2D22  
                                l8222 2CC6                                  l8038 6128  
                                l8070 3E26                                  l8062 3DF0  
                                l8054 3D9E                                  l8126 4056  
                                l8118 400E                                  l8046 6198  
                                l8142 527A                                  l8134 5238  
                                l8206 327A                                  l8214 32B0  
                                l9110 0AD0                                  l9102 0AC6  
                                l9022 16DA                                  l9030 17C6  
                                l9014 1624                                  l9006 1538  
                                l7190 5BEA                                  l7238 4A54  
                                l7262 4C2E                                  l7254 4BDE  
                                l7246 4B8E                                  l7430 223A  
                                l7422 2200                                  l3878 59AE  
                                l8400 2EB4                                  l8320 2E0A  
                                l8312 2DFE                                  l8304 2DDC  
                                l8240 2D3C                                  l8232 2D32  
                                l8224 2CDC                                  l8080 3EA8  
                                l8072 3E3A                                  l8064 3DF4  
                                l8056 3DBE                                  l8152 61BE  
                                l8048 619C                                  l8144 527E  
                                l8136 5246                                  l8208 328C  
                                l8160 3042                                  l9200 0BC8  
                                l9120 0AF4                                  l9112 0AD2  
                                l9104 0AC8                                  l9040 37EE  
                                l9032 1856                                  l9024 16F6  
                                l9016 1660                                  l9008 1578  
                                l7192 5BFE                                  l7264 4C42  
                                l7256 4BF2                                  l7248 4BA2  
                                l7440 22F8                                  l7432 224E  
                                l7424 2210                                  l8410 2EEE  
                                l8402 2EB6                                  l8330 2E1A  
                                l8322 2E0E                                  l8314 2E00  
                                l8250 2D4C                                  l8242 2D42  
                                l8234 2D36                                  l8306 2DF6  
                                l8226 2CF4                                  l8218 2CBE  
                                l8090 3EF2                                  l8082 3EAA  
                                l8074 3E48                                  l8066 3E00  
                                l8058 3DC2                                  l8154 61D8  
                                l8146 52AA                                  l8138 5252  
                                l8170 30A8                                  l8162 3062  
                                l9210 0BFA                                  l9202 0BCA  
                                l9130 0B02                                  l9122 0AF8  
                                l9114 0AD6                                  l9106 0ACA  
                                l9050 3892                                  l9042 37FE  
                                l9034 187E                                  l9026 1766  
                                l9018 169C                                  l7194 5C12  
                                l7258 4C06                                  l7450 250A  
                                l7442 2362                                  l7434 225E  
                                l7426 2212                                  l8500 2FA8  
                                l8420 2EFE                                  l8412 2EF2  
                                l8404 2EB8                                  l8340 2E2A  
                                l8332 2E1E                                  l8324 2E10  
                                l8316 2E06                                  l8308 2DFA  
                                l8260 2D5C                                  l8252 2D52  
                                l8244 2D44                                  l8236 2D38  
                                l8228 2D0A                                  l8084 3EBC  
                                l8076 3E5A                                  l8068 3E1E  
                                l8148 52BE                                  l8180 30DE  
                                l8172 30BA                                  l8164 3070  
                                l8156 2FF8                                  l9300 0E16  
                                l9220 0C16                                  l9212 0C02  
                                l9204 0BCC                                  l9140 0B0E  
                                l9132 0B04                                  l9124 0AFA  
                                l9116 0AD8                                  l9108 0ACE  
                                l9060 095E                                  l9052 38BE  
                                l9044 382E                                  l9036 189E  
                                l9028 1786                                  l7196 5C26  
                                l7188 5BDA                                  l7452 2574  
                                l7444 23CC                                  l7436 2276  
                                l7428 2226                                  ?_isr 0001  
                                l8510 2FB8                                  l8502 2FAA  
                                l8430 2F0E                                  l8422 2F00  
                                l8414 2EF4                                  l8406 2ED4  
                                l8350 2E3A                                  l8342 2E2C  
                                l8334 2E20                                  l8326 2E16  
                                l8318 2E08                                  l8270 2D6E  
                                l8262 2D62                                  l8254 2D54  
                                l8246 2D46                                  l8238 2D3A  
                                l8078 3E88                                  l8086 3EC2  
                                l8094 3F14                                  l8182 30E4  
                                l8190 31D8                                  l8174 30C8  
                                l8166 3072                                  l8158 3018  
                                l9302 0E26                                  l9230 0C44  
                                l9222 0C1A                                  l9214 0C0E  
                                l9206 0BD0                                  l9310 0E9A  
                                l9150 0B3C                                  l9142 0B10  
                                l9134 0B08                                  l9126 0AFC  
                                l9118 0ADA                                  l9070 0A00  
                                l9062 0966                                  l9054 38DE  
                                l9046 3842                                  l9038 18DA  
                                l7198 5C3A                                  l7446 2436  
                                l7438 228E                                  l3998 32DA  
                                l8520 2FDC                                  l8512 2FBA  
                                l8504 2FAC                                  l8440 2F1E  
                                l8432 2F10                                  l8424 2F02  
                                l8416 2EF6                                  l8408 2ED8  
                                l8360 2E4C                                  l8352 2E3C  
                                l8344 2E32                                  l8336 2E26  
                                l8328 2E18                                  l8280 2D7E  
                                l8272 2D70                                  l8264 2D64  
                                l8256 2D56                                  l8248 2D4A  
                                l8088 3ED2                                  l8096 3F18  
                                l8192 31F4                                  l8184 3166  
                                l8176 30CE                                  l8168 308C  
                                l9320 0EF8                                  l9312 0EA8  
                                l9304 0E46                                  l9240 0C5C  
                                l9232 0C50                                  l9224 0C1C  
                                l9216 0C12                                  l9208 0BF2  
                                l9160 0B60                                  l9152 0B40  
                                l9144 0B34                                  l9136 0B0A  
                                l9128 0B00                                  l9080 0A84  
                                l9072 0A36                                  l9064 0994  
                                l8600 4240                                  l9056 38F2  
                                l9048 3876                                  l9400 4E90  
                                l7448 24A0                                  l8522 2FE0  
                                l8514 2FBC                                  l8506 2FB0  
                                l8450 2F2C                                  l8442 2F20  
                                l8434 2F12                                  l8426 2F06  
                                l8418 2EF8                                  l8370 2E5A  
                                l8362 2E52                                  l8354 2E42  
                                l8346 2E34                                  l8338 2E28  
                                l8290 2D90                                  l8282 2D80  
                                l8274 2D72                                  l8266 2D66  
                                l8258 2D5A                                  l9410 52E4  
                                l8098 3F26                                  l8194 3212  
                                l8186 316E                                  l8178 30D6  
                                l9330 0F04                                  l9322 0EFA  
                                l9314 0EE2                                  l9250 0CA8  
                                l9242 0C5E                                  l9234 0C54  
                                l9226 0C1E                                  l9218 0C14  
                                l9170 0B6C                                  l9162 0B62  
                                l9154 0B42                                  l9146 0B38  
                                l9138 0B0C                                  l9090 0A92  
                                l9082 0A86                                  l9074 0A58  
                                l9066 09B4                                  l8610 428A  
                                l8602 4246                                  l8530 41D6  
                                l9058 3922                                  l9402 4EB0  
                                l8516 2FBE                                  l8508 2FB2  
                                l8460 2F3C                                  l8452 2F2E  
                                l8444 2F22                                  l8436 2F16  
                                l8428 2F08                                  l8380 2E96  
                                l8372 2E76                                  l8364 2E54  
                                l8356 2E44                                  l8348 2E36  
                                l8292 2D92                                  l8284 2D86  
                                l8276 2D76                                  l8268 2D68  
                                l9420 52F2                                  l9412 52E6  
                                l8700 520C                                  l8196 322C  
                                l8188 3174                                  l9340 0F42  
                                l9324 0EFC                                  l9316 0EF0  
                                l9332 0F08                                  l9260 0D0A  
                                l9252 0CF4                                  l9244 0C60  
                                l9236 0C56                                  l9228 0C22  
                                l9308 0E52                                  l9180 0B78  
                                l9172 0B70                                  l9164 0B64  
                                l9156 0B44                                  l9148 0B3A  
                                l9092 0A9E                                  l9084 0A88  
                                l9076 0A7E                                  l9068 09D4  
                                l8620 42CE                                  l8612 428C  
                                l8604 4248                                  l8540 41E6  
                                l8532 41D8                                  l8524 41CE  
                                l9500 6162                                  l9404 4EC4  
                                l8710 5744                                  l8518 2FC0  
                                l8470 2F4E                                  l8462 2F42  
                                l8454 2F32                                  l8446 2F24  
                                l8438 2F18                                  l8390 2EA4  
                                l8382 2E98                                  l8374 2E7A  
                                l8366 2E56                                  l8358 2E4A  
                                l8294 2D94                                  l8286 2D88  
                                l8278 2D78                                  l9430 5308  
                                l9422 52F8                                  l9414 52E8  
                                l9406 52D8                                  l8198 3246  
                                l9350 0F50                                  l9342 0F44  
                                l9334 0F24                                  l9326 0F00  
                                l9318 0EF4                                  l9262 0D0C  
                                l9254 0D00                                  l9270 0D18  
                                l9238 0C58                                  l9246 0C64  
                                l9190 0BB0                                  l9182 0B80  
                                l9174 0B72                                  l9166 0B68  
                                l9158 0B5C                                  l9094 0AAA  
                                l9086 0A8E                                  l9078 0A82  
                                l8630 42FA                                  l8622 42D0  
                                l8614 4292                                  l8606 426A  
                                l8550 41F8                                  l8542 41E8  
                                l8534 41DE                                  l8526 41D2  
                                l9510 0F6E                                  l9502 6168  
                                l8720 5778                                  l8712 5748  
                                l8704 572A                                  l8480 2F88  
                                l8472 2F50                                  l8464 2F44  
                                l8456 2F34                                  l8448 2F2A  
                                l8392 2EA8                                  l8384 2E9A  
                                l8376 2E90                                  l8368 2E58  
                                l8296 2D96                                  l8288 2D8E  
                                l9440 5316                                  l9432 530A  
                                l9424 52FA                                  l9416 52EA  
                                l9408 52DC                                  l8800 3D1A  
                                l8640 540E                                  l9344 0F46  
                                l9328 0F02                                  l9280 0D9E  
                                l9272 0D2E                                  l9264 0D10  
                                l9256 0D04                                  l9248 0CA0  
                                l9336 0F2C                                  l9192 0BBC  
                                l9184 0B88                                  l9176 0B74  
                                l9168 0B6A                                  l9096 0ABE  
                                l9088 0A90                                  l8632 4302  
                                l8624 42D2                                  l8616 4294  
                                l8608 4288                                  l8560 420A  
                                l8552 41FE                                  l8544 41EE  
                                l8536 41E0                                  l8528 41D4  
                                l9520 1090                                  l9512 0F9E  
                                l9600 01F8                                  l9504 62A2  
                                l8650 63E0                                  l8730 57B2  
                                l8722 5780                                  l8714 5756  
                                l8706 572E                                  l8490 2F98  
                                l8482 2F8C                                  l8474 2F52  
                                l8466 2F4A                                  l8458 2F3A  
                                l8394 2EAA                                  l8386 2EA0  
                                l8378 2E94                                  l8298 2DBE  
                                l9450 532C                                  l9442 531C  
                                l9434 5310                                  l9426 5300  
                                l9418 52F0                                  l8802 3D2E  
                                l8642 544E                                  l9346 0F48  
                                l9338 0F3E                                  l9290 0DEE  
                                l9282 0DE0                                  l9274 0D6C  
                                l9266 0D12                                  l9258 0D08  
                                l9194 0BC0                                  l9178 0B76  
                                l9098 0AC2                                  l8634 4306  
                                l8626 42D6                                  l8618 42B0  
                                l8570 421A                                  l8562 420C  
                                l8554 4200                                  l8546 41F0  
                                l8538 41E2                                  l9530 11FA  
                                l9522 10BA                                  l9514 0FB2  
                                l9506 0F54                                  l9370 5DEC  
                                l9362 5DAE                                  l9610 0348  
                                l9602 0240                                  l8652 63F0  
                                l8724 578E                                  l8732 57B8  
                                l8716 575E                                  l8708 573C  
                                l8492 2F9A                                  l8484 2F8E  
                                l8476 2F6E                                  l8468 2F4C  
                                l8396 2EB0                                  l8388 2EA2  
                                l9460 533E                                  l9452 532E  
                                l9444 531E                                  l9436 5312  
                                l9428 5302                                  l8660 5152  
                                l8900 2020                                  l8820 1DB6  
                                l8812 3D54                                  l8740 5CC4  
                                l9348 0F4E                                  l9292 0DF2  
                                l9284 0DE6                                  l9276 0D78  
                                l9268 0D14                                  l9196 0BC2  
                                l9188 0BA8                                  l8628 42D8  
                                l8580 422C                                  l8572 421C  
                                l8564 420E                                  l8556 4202  
                                l8548 41F6                                  l9540 1348  
                                l9524 10F2                                  l9532 121A  
                                l9516 0FE6                                  l9508 0F5E  
                                l9700 5B50                                  l9380 5E0C  
                                l9364 5DB4                                  l9620 048C  
                                l9612 038E                                  l9604 0286  
                                l8646 63F6                                  l8734 57C8  
                                l8726 57A4                                  l8718 5770  
                                l8494 2F9C                                  l8486 2F90  
                                l8478 2F72                                  l8398 2EB2  
                                l9470 534C                                  l9462 5340  
                                l9454 5334                                  l9446 5324  
                                l9438 5314                                  l8670 517E  
                                l8662 5156                                  l8654 631C  
                                l8910 204C                                  l8902 2022  
                                l8830 1E88                                  l8822 1DC2  
                                l8814 3D78                                  l8806 3D3A  
                                l9390 5F14                                  l8638 539A  
                                l8750 5CFC                                  l8742 5CCC  
                                l9294 0DF4                                  l9286 0DEA  
                                l9278 0D92                                  l9198 0BC4  
                                l8590 4236                                  l8582 422E  
                                l8574 4222                                  l8566 4212  
                                l8558 4204                                  l9542 134A  
                                l9534 128A                                  l9526 1106  
                                l9518 1016                                  l9710 56F2  
                                l9702 567A                                  l9550 4564  
                                l9374 5DF2                                  l9366 5DD2  
                                l9630 05F4                                  l9622 04CA  
                                l9614 03D6                                  l9606 02CE  
                                l8648 6406                                  l8736 57D0  
                                l8728 57AC                                  l8496 2FA0  
                                l8488 2F92                                  l9480 537E  
                                l9464 5342                                  l9456 5336  
                                l9448 5326                                  l8680 51AC  
                                l8672 5186                                  l8664 5164  
                                l8656 6338                                  l8920 205A  
                                l8912 2050                                  l8904 2044  
                                l8840 1F1C                                  l8832 1E98  
                                l8824 1E10                                  l8808 3D48  
                                l9384 5ED8                                  l8760 5D28  
                                l8752 5D02                                  l8744 5CDE  
                                l9296 0DF6                                  l9288 0DEC  
                                l8592 4238                                  l8584 4230  
                                l8576 4224                                  l8568 4214  
                                l9544 1380                                  l9536 1292  
                                l9528 1182                                  l9704 5686  
                                l9560 4628                                  l9552 4574  
                                l9712 4D36                                  l9800 1CD8  
                                l9392 5A5E                                  l9376 5E02  
                                l9368 5DE6                                  l9640 0744  
                                l9632 063C                                  l9624 0520  
                                l9616 042C                                  l9608 0314  
                                l8498 2FA2                                  l9482 5382  
                                l9458 533C                                  l8690 51E6  
                                l8682 51B4                                  l8674 518A  
                                l8666 516C                                  l8930 209E  
                                l8922 205C                                  l8914 2052  
                                l8906 2048                                  l8850 1FCA  
                                l8842 1F76                                  l8834 1EAA  
                                l8826 1E5E                                  l9386 5EE0  
                                l9490 6068                                  l8754 5D18  
                                l8746 5CE6                                  l8770 5E40  
                                l8762 5E10                                  l9298 0DFA  
                                l8594 423A                                  l8586 4232  
                                l8578 422A                                  l9546 13CC  
                                l9538 12EC                                  l9706 5698  
                                l9562 4664                                  l9554 45A4  
                                l9730 4DC6                                  l9714 4D54  
                                l9810 1D80                                  l9802 1CFC  
                                l9378 5E06                                  l9650 08CA  
                                l9642 079A                                  l9634 0682  
                                l9626 0566                                  l9618 0436  
                                l9570 4C7C                                  l9394 4E14  
                       ??_Paddle_draw 0027                                  l9476 5364  
                                l8692 51E8                                  l8684 51C2  
                                l8676 5192                                  l8668 5170  
                                l8940 2132                                  l8932 20A6  
                                l8924 205E                                  l8916 2054  
                                l8908 204A                                  l8860 1FD6  
                                l8852 1FCC                                  l8844 1FC2  
                                l8836 1EBC                                  l8828 1E60  
                                l8780 3BFC                                  l9388 5EEE  
                                l9492 6084                                  l9484 6046  
                                l8756 5D20                                  l8748 5CEE  
                                l8772 5E56                                  l8764 5E22  
                                l8596 423C                                  l8588 4234  
                                l9548 1434                                  l9708 56B8  
                                l9556 45B8                                  l9724 4DA0  
                                l9804 1D20                                  l9812 1D98  
                                l9740 1918                                  l9660 0944  
                                l9652 08D4                                  l9636 06B6  
                                l9628 05AE                                  l9644 07A4  
                                l9820 62F4                                  l9564 4C58  
                                l9396 4E26                                  l9478 5368  
                                l9670 4310                                  l8694 51EE  
                                l8686 51C8                                  l8678 51A4  
                                l8942 2134                                  l8950 2142  
                                l8934 20F6                                  l8926 2060  
                                l8918 2058                                  l8870 1FFA  
                                l8862 1FDA                                  l8854 1FCE  
                                l8846 1FC6                                  l8838 1EDA  
                                l8790 3C66                                  l8782 3C0A  
                                l9486 6058                                  l8758 5D22  
                                l8774 5E5E                                  l8766 5E2A  
                                l8598 423E                                  l9558 45EC  
                                l9718 4D5A                                  l9806 1D38  
                                l9750 19C0                                  l9742 193C  
                                l9662 0958                                  l9654 08E8  
                                l9646 07D6                                  l9638 06FC  
                                l9582 4CE8                                  l9566 4C76  
                                l9398 4E7C                                  l9814 4A76  
                                l9910 2A76                                  l9902 296E  
                                l9822 63C8                                  l9830 637A  
                                l9664 4078                                  l9672 4388  
                                l8688 51DE                                  l8696 51F4  
                                l8952 2146                                  l8944 2136  
                                l8936 211E                                  l8928 2068  
                                l8880 2006                                  l8872 1FFC  
                                l8864 1FDC                                  l8856 1FD2  
                                l8848 1FC8                                  l8792 3CB0  
                                l8784 3C1A                                  l9488 6060  
                                l9680 4F54                                  l8776 5E64  
                                l8768 5E32                                  l9736 4E10  
                                l9496 6136                                  l9808 1D5C  
                                l9760 1A5C                                  l9752 19D8  
                                l9744 1960                                  l9656 08EC  
                                l9648 083C                                  l9592 00C8  
                                l9576 4CC2                                  l9816 4ABE  
                                l9920 2B48                                  l9912 2A90  
                                l9904 2972                                  l9824 63B2  
                                l9840 60AA                                  l9832 637C  
                                l9666 4108                                  l9674 43A4  
                                l8698 5204                                  l8954 2148  
                                l8962 2152                                  l8946 213A  
                                l8938 212E                                  l8890 2012  
                                l8882 200A                                  l8874 1FFE  
                                l8866 1FDE                                  l8858 1FD4  
                                l8786 3C1E                                  l8778 3BD8  
                                l9690 5BC6                                  l9682 5B62  
                                l9498 6146                                  l9770 1AF8  
                                l9762 1A80                                  l9754 19FC  
                                l9746 1978                                  l9658 093A  
                                l9594 011E                                  l9818 4B32  
                                l9930 2BA0                                  l9922 2B62  
                                l9914 2AD8                                  l9906 29BA  
                                l9850 5C50                                  l9842 60BC  
                                l9834 637E                                  l9826 6368  
                                l9668 4124                                  l8980 218A  
                                l8972 217E                                  l8956 214A  
                                l8948 213C                                  l8964 2154  
                                l8892 2016                                  l8884 200C  
                                l8876 2002                                  l8868 1FF6  
                                l8796 3CE8                                  l8788 3C42  
                                l9676 4EEE                                  l9692 5AE0  
                                l9684 5B6C                                  l9780 1BA0  
                                l9772 1B1C                                  l9764 1A98  
                                l9756 1A20                                  l9748 199C  
                                l9596 015C                                  l9588 4D32  
                                l9940 2C60                                  l9932 2BD2  
                                l9924 2B72                                  l9916 2AF4  
                                l9908 2A18                                  l9860 5C7A  
                                l9852 5C56                                  l9844 60C0  
                                l9836 6380                                  l9828 6376  
                                l8982 218C                                  l8974 2182  
                                l8966 2166                                  l8990 2196  
                                l8894 2018                                  l8886 200E  
                                l8878 2004                                  l8798 3D0C  
                                l9678 4F18                                  l9694 5AEA  
                                l9686 5BA2                                  l9870 4778  
                                l9790 1C3C                                  l9782 1BB8  
                                l9774 1B40                                  l9766 1ABC  
                                l9758 1A38                                  l9598 01B2  
                                l9934 2BEA                                  l9926 2B82  
                                l9918 2B00                                  l9862 5CAA  
                                l9950 25D4                                  l9846 60D0  
                                l9838 609A                   __end_of_XF_popEvent 5F9A  
                                STR_1 7FB6                                  l8992 21B2  
                                l8984 218E                                  l8976 2184  
                                l8968 216A                                  l8896 201A  
                                l8888 2010                                  l9696 5B20  
                                l9688 5BB4                                  l9880 47BE  
                                l9872 477C                                  l9792 1C60  
                                l9784 1BDC                                  l9776 1B58  
                                l9768 1AE0                                  l9936 2C0A  
                                l9928 2B94                                  l9944 2C7A  
                                l9864 5CAC                                  l9960 2610  
                                l9952 25E0                                  l9848 60E2  
                                STR_2 7FEE                                  STR_3 7FEE  
                                l8994 21CA                                  l8978 2186  
                                l8898 201E                                  l9698 5B32  
                                l9890 481A                                  l9882 47D2  
                                l9874 478C                                  l9794 1C78  
                                l9786 1C00                                  l9778 1B7C  
                                l9938 2C18                                  l9866 5CBC  
                                l9858 5C5A                                  l9970 2640  
                                l9962 2620                                  l9954 25EE  
                                STR_4 7FAB                                  STR_5 7FC9  
                                l8996 21CE                                  l8988 2194  
                                l9892 482E                                  l9884 47E2  
                                l9876 479C                                  l9796 1C9C  
                                l9788 1C18                                  l9980 2676  
                                l9972 2646                                  l9964 2622  
                                l9956 25F0                                  STR_6 7FD2  
                                STR_7 7FE3                                  l8998 1442  
                                l9886 47F6                                  l9878 47AE  
                                l9798 1CC0                                  l9990 26B6  
                                l9982 2686                                  l9974 2654  
                                l9958 2600                                  l9966 262A  
                                STR_8 7FF7                                  STR_9 7FFB  
                                l9888 4806                                  l9896 483E  
                                l9992 26C6                                  l9984 2688  
                                l9976 2656                                  l9968 263A  
                                l9994 26CE                                  l9978 2666  
                                l9986 2690                                  l9996 26D2  
                                l9988 26A0                         ??_Paddle_init 0016  
                                u2300 5984                                  u2301 5980  
                                u2310 59C8                                  u2311 59C4  
                                u2450 330E                                  u2451 330A  
                                u6000 2EEE                                  u6001 2EEA  
                                u6010 2F88                                  u6011 2F84  
                                u6020 2FF6                                  u6100 517E  
                                u6021 2FF2                                  u6101 517A  
                                u6110 51A4                                  u5070 5604  
                                u6111 51A0                                  u5071 5600  
                                u6200 57C8                                  u6120 51C2  
                                u7000 1960                                  u6201 57C4  
                                u6121 51BE                                  u7001 195C  
                                u6130 51DE                                  u6210 5CDE  
                                u7010 199C                                  u6131 51DA  
                                u6211 5CDA                                  u6035 4274  
                                u7011 1998                                  u6140 5204  
                                u6300 3D0C                                  u6220 5CFC  
                                u7100 1B40                                  u7020 19C0  
                                u6141 5200                                  u6301 3D08  
                                u6221 5CF8                                  u6045 42BA  
                                u7101 1B3C                                  u7021 19BC  
                                u6070 6406                                  u6150 573C  
                                u6310 1E08                                  u6230 5D18  
                                u7110 1B7C                                  u7030 19FC  
                                u6071 6402                                  u6151 5738  
                                u6055 5418                                  u6231 5D14  
                                u7111 1B78                                  u7031 19F8  
                                u6080 63F0                                  u6160 5756  
                                u6400 21B2                                  u6320 1E88  
                                u5600 61BC                                  u6240 5E22  
                                u8000 4906                                  u7200 1D20  
                                u7120 1BA0                                  u7040 1A20  
                                u6081 63EC                                  u6161 5752  
                                u6401 21AE                                  u6321 1E84  
                                u5601 61B8                                  u6065 542E  
                                u6241 5E1E                                  u8001 4902  
                                u7201 1D1C                                  u7121 1B9C  
                                u7041 1A1C                                  u6170 5770  
                                u6090 5164                                  u6410 21EE  
                                u6330 1E98                                  u5610 3D9E  
                                u6250 5E40                                  u8010 4920  
                                u7210 1D5C                                  u7130 1BDC  
                                u7050 1A5C                                  u6171 576C  
                                u6091 5160                                  u6331 1E94  
                                u5611 3D9A                                  u6251 5E3C  
                                u8011 491C                                  u7211 1D58  
                                u7131 1BD8                                  u7051 1A58  
                                u6180 578E                                  u6420 21FE  
                                u6340 1EBC                                  u5620 3DD0  
                                u5700 3F96                                  u5540 4FD2  
                                u6260 5E56                                  u6500 0A7A  
                                u7300 47D2                                  u8020 493A  
                                u7220 1D80                                  u7140 1C00  
                                u7060 1A80                                  u6181 578A  
                                u6421 21FA                                  u6341 1EB8  
                                u6317 1DFE                                  u5621 3DCC  
                                u5701 3F92                                  u5541 4FCE  
                                u6261 5E52                                  u6501 0A76  
                                u7301 47CE                                  u8021 4936  
                                u7221 1D7C                                  u7141 1BFC  
                                u7061 1A7C                                  u6190 57A4  
                                u6350 1F14                                  u5710 3FC0  
                                u5550 4FE4                                  u6270 3BFC  
                                u6510 0BA4                                  u6430 1460  
                                u7310 47F6                                  u7150 1C3C  
                                u7070 1ABC                                  u7230 4ABE  
                                u8030 50B2                                  u6191 57A0  
                                u5631 3DFA                                  u5711 3FBC  
                                u5551 4FE0                                  u6271 3BF8  
                                u6511 0BA0                                  u6431 145C  
                                u7311 47F2                                  u7151 1C38  
                                u7071 1AB8                                  u7231 4ABA  
                                u8031 50AE                                  u5640 3E1E  
                                u5720 3FEE                                  u5560 500C  
                                u5800 302C                                  u6280 3C42  
                                u6520 0BF2                                  u6440 16DA  
                                u7320 481A                                  u7160 1C60  
                                u7080 1AE0                                  u6600 5DE6  
                                u7240 4B32                                  u7400 2BD2  
                                u8040 50C8                                  u6417 21E4  
                                u5641 3E1A                                  u5721 3FEA  
                                u5561 5008                                  u6281 3C3E  
                                u6521 0BEE                                  u6441 16D6  
                                u7321 4816                                  u7161 1C5C  
                                u7081 1ADC                                  u6601 5DE2  
                                u7241 4B2E                                  u7401 2BCE  
                                u8041 50C4                                  u6370 212E  
                                u5650 3E48                                  u5730 4036  
                                u5570 5042                                  u5810 3042  
                                u6290 3C66                                  u6610 5F30  
                                u6530 0C44                                  u6450 3892  
                                u7170 1C9C                                  u7090 1B1C  
                                u7410 2C60                                  u7330 29BA  
                                u8050 50F2                                  u7250 60AA  
                                u6371 212A                                  u5651 3E44  
                                u5731 4032                                  u5571 503E  
                                u5811 303E                                  u6291 3C62  
                                u6611 5F2C                                  u6531 0C40  
                                u6451 388E                                  u7171 1C98  
                                u7091 1B18                                  u7411 2C5C  
                                u7331 29B6                                  u8051 50EE  
                                u7251 60A6                                  u8107 599A  
                                u5580 6118                                  u6380 2166  
                                u6364 2112                                  u5660 3E88  
                                u5740 5224                                  u5900 3254  
                                u5820 3070                                  u6540 0CA0  
                                u6460 3922                                  u6700 10F2  
                                u7180 1CC0                                  u6620 4E26  
                                u7340 2A18                                  u7500 276C  
                                u7420 25EE                                  u7260 60D0  
                                u8060 5FB4                                  u6381 2162  
                                u6365 210C                                  u6357 1F0A  
                                u5661 3E84                                  u5741 5220  
                                u5901 3250                                  u5821 306C  
                                u6541 0C9C                                  u6461 391E  
                                u6701 10EE                                  u7181 1CBC  
                                u6621 4E22                                  u7341 2A14  
                                u7501 2768                                  u7421 25EA  
                                u7261 60CC                                  u8061 5FB0  
                                u5590 6128                                  u6390 217A  
                                u5670 3ED2                                  u5750 5246  
                                u5910 3266                                  u5830 308C  
                                u6550 0D2E                                  u6470 0A00  
                                u6710 1380                                  u7190 1CFC  
                                u6630 4E7C                                  u7350 2A76  
                                u7270 5C7A                                  u7510 278E  
                                u7430 2600                                  u5591 6124  
                                u6391 2176                                  u5671 3ECE  
                                u5751 5242                                  u5911 3262  
                                u5831 3088                                  u6551 0D2A  
                                u6471 09FC                                  u6711 137C  
                                u7191 1CF8                                  u6631 4E78  
                                u7351 2A72                                  u7271 5C76  
                                u7511 278A                                  u7431 25FC  
                                u5680 3F26                                  u5760 529C  
                                u5920 3274                                  u5840 30BA  
                                u6560 0E16                                  u6480 0A32  
                                u6800 0286                                  u6720 4C76  
                                u6640 4EB0                                  u7360 2AD8  
                                u7280 5CBC                                  u7600 289A  
                                u7520 27B8                                  u7440 2610  
                                u5681 3F22                                  u5761 5298  
                                u5921 3270                                  u5841 30B6  
                                u6561 0E12                                  u6481 0A2E  
                                u6801 0282                                  u6721 4C72  
                                u6641 4EAC                                  u7361 2AD4  
                                u7281 5CB8                                  u7601 2896  
                                u7521 27B4                                  u7441 260C  
                                u6650 537E                                  u5690 3F58  
                                u5770 52AA                                  u5930 328C  
                                u5850 30C8                                  u6570 0E26  
                                u6490 0A58                                  u7290 47AE  
                                u6810 0314                                  u6730 4CBE  
                                u7370 2B48                                  u7610 28B4  
                                u7530 27DC                                  u7450 2654  
                                u6651 537A                                  u5587 610E  
                                u5691 3F54                                  u5771 52A6  
                                u5931 3288                                  u5851 30C4  
                                u6571 0E22                                  u6491 0A54  
                                u7291 47AA                                  u6811 0310  
                                u6731 4CBA                                  u7371 2B44  
                                u7611 28B0                                  u7531 27D8  
                                u7451 2650                                  u5940 2CDC  
                                u6660 5398                                  u5780 61D8  
                                u5860 31F4                                  u6580 0F24  
                                u6900 07D6                                  u6820 038E  
                                u6740 4CE4                                  u7380 2B72  
                                u7620 28FC                                  u7540 27F2  
                                u7460 2666                                  u7700 4746  
                                u5941 2CD8                                  u6661 5394  
                                u5781 61D4                                  u5861 31F0  
                                u6581 0F20                                  u6901 07D2  
                                u6821 038A                                  u6741 4CE0  
                                u7381 2B6E                                  u7621 28F8  
                                u7541 27EE                                  u7461 2662  
                                u7701 4742                                  u8077 546A  
                                u5950 2D0A                                  u5870 3212  
                                u5790 302A                                  u6590 0F3E  
                                u6670 6162                                  u6910 083C  
                                u6830 048C                                  u6750 4D2E  
                                u7390 2B94                                  u7630 292C  
                                u7550 2810                                  u7470 2676  
                                u7710 4756                                  u5951 2D06  
                                u5871 320E                                  u5791 3024  
                                u6591 0F3A                                  u6671 615E  
                                u6911 0838                                  u6831 0488  
                                u6751 4D2A                                  u7391 2B90  
                                u7631 2928                                  u7551 280C  
                                u7471 2672                                  u7711 4752  
                                u8087 32F4                                  u5960 2D32  
                                u5880 322C                                  u6680 1016  
                                u6920 08CA                                  u6840 04CA  
                                u6760 011E                                  u7640 295A  
                                u7560 2830                                  u7480 26B6  
                                u7800 3BB6                                  u7720 3A36  
                                u5961 2D2E                                  u5881 3228  
                                u6681 1012                                  u6921 08C6  
                                u6841 04C6                                  u6761 011A  
                                u7641 2956                                  u7561 282C  
                                u7481 26B2                                  u7801 3BB2  
                                u7721 3A32                                  u8097 5956  
                                u5970 2DD8                                  u5890 3246  
                                u6690 10BA                                  u6930 093A  
                                u6850 0520                                  u6770 015C  
                                u7570 2842                                  u7490 26F6  
                                u7650 4688                                  u7810 3BC4  
                                u7730 3A44                                  u5971 2DD4  
                                u5891 3242                                  u6691 10B6  
                                u6931 0936                                  u6851 051C  
                                u6771 0158                                  u7571 283E  
                                u7491 26F2                                  u7651 4684  
                                u7811 3BC0                                  u7731 3A40  
                                u5980 2DF2                                  u6940 56B8  
                                u6860 0566                                  u6780 01B2  
                                u7900 58A2                                  u7580 2870  
                                u7660 46BC                                  u7740 3AA0  
                                u7820 35A4                                  u5981 2DEE  
                                u6941 56B4                                  u6861 0562  
                                u6781 01AE                                  u7901 589E  
                                u7581 286C                                  u7741 3A9C  
                                u7821 35A0                                  _RBPU 007F8F  
                                u5990 2E90                                  u6950 4D54  
                                u6870 05F4                                  u6790 01F8  
                                u7910 58C0                                  u7590 2886  
                                u7670 46EA                                  u7750 3AF6  
                                u7830 35CE                                  u5991 2E8C  
                                u6951 4D50                                  u6871 05F0  
                                u6791 01F4                                  u7911 58BC  
                                u7591 2882                                  u7671 46E6  
                                u7751 3AF2                                  u7831 35CA  
                                u6960 4D9C                                  u6880 0682  
                                u7920 58D8                                  u7680 46FE  
                                u7760 3B40                                  u7840 3666  
                                u6961 4D98                                  u6881 067E  
                                u7921 58D4                                  u7681 46FA  
                                u7665 46B2                                  u7761 3B3C  
                                u7841 3662                                  u6970 4DC2  
                                u6890 06FC                                  u7930 58F2  
                                u7690 4726                                  u7770 3B5E  
                                u7850 3690                                  u6971 4DBE  
                                u6891 06F8                                  u7931 58EE  
                                u7691 4722                                  u7771 3B5A  
                                u7851 368C                                  u6980 4E0C  
                                u7780 3B6E                                  u7860 36EC  
                                u7940 59E2                                  u6981 4E08  
                                u7781 3B6A                                  u7861 36E8  
                                u7941 59DE                                  u6990 193C  
                                u7790 3B7C                                  u7950 5A08  
                                u7870 554A                                  u6991 1938  
                                u7791 3B78                                  u7951 5A04  
                                u7871 5546                                  u7960 5A2C  
                                u7880 55BE                                  u7961 5A28  
                                u7881 55BA                                  u7890 5F56  
                                u7970 4896                                  u7891 5F52  
                                u7971 4892                                  u7980 48A8  
                                u7981 48A4                                  u7990 48DC  
                                u7991 48D8                                  _WPUB 000F61  
                         displaySM@ev 00A7                           LCD_Bitmap@i 007A  
                                abs@a 0024                                  _dbuf 00E0  
                     ?_checkCollision 001B             __size_of_LCD_SliderCreate 00EE  
                                _main 6436                                  _dtoa 2FF8  
                    _XF_scheduleTimer 5C50                                  _prec 0049  
                                _nout 00DB                                  pad@i 0029  
                                pad@p 0026                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf1 000FE7  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 002B                                  fsr2l 000FD9  
                                btemp 004E                      Menu_inGameDraw@g 0092  
                      touchScreenSM@g 00B0                                  prodh 000FF4  
                                prodl 000FF3      __end_of_arialNarrow_12ptFontInfo 7F86  
                                start 00C4                           RGB2LCD@blue 001C  
              __end_of_LCD_ButtonDraw 1442             __size_of_LCD_SliderUpdate 04D6  
                     ___fldiv@new_exp 0031                        _LCD_SliderDraw 4564  
                  LCD_InSlider@slider 0012                       __end_of_XF_init 55CA  
                        ___param_bank 000000                LCD_ButtonCreate@height 0018  
                  XF_scheduleTimer@ev 0015                    XF_scheduleTimer@tm 0013  
              LCD_ButtonCreate@button 0028                                 ??_abs 0026  
                               ??_pad 0028                                 ??_isr 000E  
                    __end_of_LCD_Fill 539A                        ??_LCD_InButton 0018  
                    __end_of_LCD_Init 3582                      __end_of_LCD_Read 4310  
                      ??_LCD_InSlider 0018                        ??_LCD_DrawRect 001D  
         LCD_SliderCreate@cursorWidth 0020                                 l10000 26E6  
                               l10010 2724                                 l10002 26F6  
                               l10020 276C                                 l10012 2734  
                               l10004 26F6                                 l10100 46D8  
                               l10030 27BA                                 l10022 2780  
                               l10014 2744                                 l10110 4702  
                               l10102 46DC                                 l10200 623A  
                               l10040 2802                                 l10032 27CA  
                               l10024 278E                                 l10016 2754  
                               l10008 270A                                 l10120 472A  
                               l10112 470C                                 l10104 46EA  
                               l10050 2842                                 l10042 2810  
                               l10034 27DC                                 l10026 279A  
                               l10018 275C                                 l10122 4736  
                               l10114 4716                                 l10210 3582  
                               l10300 5F3C                                 l10204 623A  
                               l10060 28B4                                 l10052 2870  
                               l10036 27F2                                 l10044 2822  
                               l10028 27B8                                 l10124 4746  
                               l10140 3AA0                                 l10132 3A26  
                               l10220 35D6                                 l10212 3586  
                               l10302 5F3C                                 l10070 292C  
                               l10062 28DE                                 l10046 2830  
                               l10038 27F8                                 l10126 4756  
                               l10150 3AFA                                 l10134 3A36  
                               l10230 3698                                 l10222 3640  
                               l10214 3590                                 l10312 5F62  
                               l10304 5F42                                 l10400 48E0  
                               l10080 2962                                 l10072 2948  
                               l10056 289A                                 l10064 28E2  
                               l10048 2834                                 l10128 4766  
                               l10160 3B5E                                 l10152 3AFC  
                               l10144 3AB4                                 l10136 3A44  
                               l10240 36DC                                 l10232 36BE  
                               l10224 3652                                 l10216 35A4  
                               l10314 5F72                                 l10306 5F56  
                               l10410 4920                                 l10402 48F4  
                               l10330 58AE                                 l10322 588C  
                               l10074 294C                                 l10066 28FC  
                               l10058 28A6                                 l10090 4688  
                               l10170 3BB6                                 l10162 3B7C  
                               l10154 3B08                                 l10146 3ABC  
                               l10138 3A8A                                 l10250 3754  
                               l10242 36DE                                 l10234 36D2  
                               l10226 3666                                 l10218 35CE  
                               l10316 5F90                                 l10308 5F5C  
                               l10180 5FFC                                 l10404 4906  
                               l10332 58C0                                 l10324 5890  
                               l10076 295A                                 l10068 2912  
                               l10172 3BC4                                 l10164 3B7E  
                               l10156 3B44                                 l10148 3AC8  
                               l10252 3772                                 l10244 36EC  
                               l10236 36D6                                 l10228 3690  
                               l10500 54E6                                 l10318 5F96  
                               l10182 600E                                 l10430 508C  
                               l10342 58E2                                 l10334 58C4  
                               l10326 58A2                                 l10350 58F6  
                               l10078 2960                                 l10094 469C  
                               l10174 3BC6                                 l10166 3B82  
                               l10158 3B50                                 l10246 370A  
                               l10238 36DA                                 l10270 551A  
                               l10190 638A                                 l10510 54F2  
                               l10502 54E8                                 l10184 6020  
                               l10416 4928                                 l10408 490E  
                               l10424 493E                                 l10440 50C8  
                               l10432 5090                                 l10336 58C8  
                               l10328 58A6                                 l10096 46C6  
                               l10088 4672                                 l10168 3BA6  
                               l10248 3740                                 l10256 37C0  
                               l10360 59D2                                 l10520 5FB4  
                               l10272 552A                                 l10264 5512  
                               l10192 639C                                 l10512 54F6  
                               l10504 54EA                                 l10186 6032  
                               l10178 5FF0                                 l10450 50F2  
                               l10434 50A0                                 l10338 58D8  
                               l10098 46C8                                 l10370 5A0C  
                               l10362 59E2                                 l10522 5FBA  
                               l10282 5552                                 l10274 552E  
                               l10194 63A0                                 l10290 62CC  
                               l10514 5502                                 l10506 54EC  
                               l10452 50FA                                 l10436 50B2  
                               l10372 5A18                                 l10364 59E6  
                               l10524 5FCC                                 l10516 5F9A  
                               l10284 559E                                 l10276 554A  
                               l10188 6384                                 l10196 6446  
                               l10292 62D2                                 l10508 54EE  
                               l10390 48A8                                 l10446 50D0  
                               l10438 50B6                                 l10366 59F6  
                               l10358 59CE                                 l10526 5FDE  
                               l10518 5FA4                                 l10286 55A2  
                               l10198 644C                                 l10294 62DE  
                               l10470 547C                                 l10462 5458  
                               l10392 48AC                                 l10384 4880  
                               l10448 50E0                                 l10456 510E  
                               l10368 5A08                                 l10288 55BE  
                               l10296 62EA                                 l10480 54C4  
                               l10472 5488                                 l10464 545A  
                               l10528 6436                                 l10394 48B8  
                               l10386 4884                                 l10378 5A30  
                               l10298 62EE                                 l10490 54D4  
                               l10482 54C6                                 l10474 54BE  
                               l10466 545E                                 l10396 48C8  
                               l10388 4896                                 l10492 54D6  
                               l10484 54CA                                 l10476 54C0  
                               l10468 5478                                 l10398 48DC  
                               l10750 5A46                                 l10494 54D8  
                               l10486 54CE                                 l10478 54C2  
                      ??_LCD_DrawText 002D                                 l10760 2C8E  
                               l10752 37D6                                 l10496 54E0  
                               l10488 54D2                                 l10762 4954  
                               l10754 590C                                 l10498 54E2  
                               l10764 4854                                 l10756 6250  
                               l10766 0E7C                                 l10758 5122  
                       ___fltol@sign1 0041                       __end_of___aodiv 3F14  
                               ?_main 0001                                 ?_dtoa 002D  
                     __end_of___aomod 4078                       LCD_ButtonDraw@i 0099  
                     __end_of___fldiv 296E                       __end_of___awdiv 5216  
                               STR_10 7FC0                                 STR_11 7FDB  
                               STR_12 7FA0                                 STR_13 7F93  
                               STR_14 7F86                                 STR_15 7FEB  
                               STR_16 7FF1                       __end_of___awmod 57DA  
                               _ANSB1 0079C9                                 _ANSB2 0079CA  
                     __end_of___fltol 4778                                 _T0CON 000FD5  
                     ___awdiv@divisor 0014                                 _LATB1 007C51  
                               _LATC0 007C58                                 _LATB2 007C52  
                               _LATB3 007C53                                 _LATC2 007C5A  
                               _LATB4 007C54                                 _LATC3 007C5B  
                               _LATC4 007C5C                                 _LATC5 007C5D  
                     __end_of___lwdiv 5D38                       __end_of___lwmod 5E74  
                               i2l803 00B0                                 i2l733 5ED6  
                               i2l814 6366                                 i2l743 5DAA  
                               i2l746 6238                                 i2l763 641E  
                               i2l755 4562                                 i2l759 6434  
                     ___awdiv@counter 0016                                 i2l799 0056  
                               _PLLEN 007CDE                          vfpfcnvrt@fmt 0041  
                               _TMR0H 000FD7                                 _TMR0L 000FD6  
                               _PORTA 000F80                       ??_configMeasure 0012  
                               _TRISA 000F92                   LCD_Bitmap@bfOffBits 0060  
                        LCD_Fill@page 0018                                 _flags 004B  
                        displayInit@g 00A3                                 _fputc 4FC0  
                               _theXF 00B5                                 _fputs 617A  
              LCD_ButtonDraw@tempChar 008A                   __size_of_LCD_Bitmap 05F6  
                               pad@fp 0022                                 _width 0047  
                               _putch 6452                                 dtoa@d 002F  
                               dtoa@i 0070                                 dtoa@n 0068  
                               dtoa@p 0062                                 dtoa@s 0066  
                               dtoa@w 0064            __end_ofi2_XF_scheduleTimer 5DAC  
                __end_of_XF_pushEvent 5E10                       __end_of_sleepSM 592C  
                        Paddle_addX@p 0012                                 tablat 000FF5  
          ??_gameControllerController 003A                       touchScreenSM@ev 00B4  
                    __end_ofi2___wmul 6368                                 plusw2 000FDB  
         ?_XF_decrementAndQueueTimers 0001                                 ttemp5 004F  
                               ttemp6 0052                                 ttemp7 0056  
                               status 000FD8                                 wtemp8 004F  
                        Paddle_draw@p 0025                       __end_of_sprintf 6098  
                        RGB2LCD@color 001E                          RGB2LCD@green 001A  
              __end_of_LCD_SliderDraw 4672                         ?_Menu_endGame 009C  
                        Paddle_init@p 0012              __size_of_touchScreenInit 000C  
             LCD_ButtonCreate@bgColor 001C                    __size_ofi2___awmod 00B0  
                 __end_of_Paddle_addX 4EEE                       ?_LCD_ButtonDraw 007C  
                   ?_gameControllerSM 003C                   __end_of_Paddle_draw 4442  
                       _touchScreenSM 59CA                   __end_of_Paddle_init 567A  
                  __size_of_Ball_draw 0156                          LCD_Read@posX 0012  
                        LCD_Read@posY 0014                    __size_of_Ball_init 0076  
                     __initialization 6270                    ??_gameControllerSM 003E  
                        __end_of_main 6446                          __end_of_dtoa 32DA  
             LCD_ButtonCreate@fpPress 0022                touchScreenController@g 0090  
              touchScreenController@s 0098                      ?_sleepController 0001  
                    i2XF_pushEvent@ev 0008                                ??_main 0047  
                              ??_dtoa 0037                         __activetblptr 000002  
                           ??_RGB2LCD 0014                           _XF_popEvent 5F3A  
                              _ADCON0 000FC2                                _ADCON2 000FC0  
                    LCD_ButtonDraw@x1 008D                      LCD_ButtonDraw@x2 008F  
                    LCD_ButtonDraw@y1 0091                      LCD_ButtonDraw@y2 0093  
                              ?_fputc 0012                                ?_fputs 001B  
                              _ADRESH 000FC4                                _ADRESL 000FC3  
                              _CCPR2L 000F67                      ___awdiv@dividend 0012  
                              ?_putch 0001                                _INT1IE 007F83  
                              _INT1IF 007F80                    LCD_DrawRect@colorH 0021  
                  LCD_DrawRect@colorL 0022               _GameParameters_resetPos 62A2  
                              i2l1058 5888                                i2l7352 6422  
                              i2l7360 57DA                                i2l7354 6432  
                              i2l7370 5806                                i2l7362 57DE  
                              i2l7356 640C                                i2l7380 583E  
                              i2l7372 580E                                i2l7364 57EC  
                              i2l7358 641C                                i2l7630 6200  
                              i2l7390 5878                                i2l7382 5854  
                              i2l7374 5820                                i2l7366 57F4  
                              i2l7632 6206                                i2l7392 5880  
                              i2l7384 585C                                i2l7376 5828  
                              i2l7368 57F8                                i2l7640 5E9A  
                              i2l7634 621E                                i2l7386 5862  
                              i2l7378 5830                                i2l7650 5ECA  
                              i2l7642 5EAE                                i2l7730 4442  
                              i2l7388 5868                                i2l7652 5ECE  
                              i2l7644 5EB4                                i2l7636 5E76  
                              i2l7660 635E                                i2l7740 44D2  
                              i2l7654 5ED4                                i2l7638 5E7C  
                              i2l7742 450C                                i2l7750 5D38  
                              i2l7648 5EBA                                i2l7744 451A  
                              i2l7736 444A                                i2l7760 5D62  
                              i2l7752 5D3E                                i2l7658 6342  
                              i2l7738 447A                                i2l7746 4542  
                              i2l7762 5D92                                i2l7770 001A  
                              i2l7748 4546                                i2l7764 5D94  
                              i2l7780 0064                                i2l7772 0028  
                              i2l7766 5DA4                                i2l7758 5D42  
                              i2l7790 00A6                                i2l7782 0068  
                              i2l7774 0036                                i2l7792 00AA  
                              i2l7776 0044                                i2l7784 0072  
                              i2l7794 00AE                                i2l7786 0080  
                              i2l7778 0048                                i2l7788 008E  
                              _OSCCON 000FD3                             ??_XF_init 0020  
                              _TMR0IE 007F95                                _TMR0IF 007F92  
                              _TMR2IF 007CF1                        ??_Menu_endGame 0042  
                              _TRISB1 007C99                                _TRISC0 007CA0  
                              _TRISB2 007C9A                                _TRISC1 007CA1  
                              _TRISB3 007C9B                                _TRISC2 007CA2  
                              _TRISB4 007C9C                                _TRISC3 007CA3  
                              _TRISC4 007CA4                                _TRISC5 007CA5  
                        ?_moovePaddle 001C                      __end_of___xxtofl 3BD8  
                     ?_LCD_SliderDraw 0037                   i2XF_pushEvent@inISR 0007  
                LCD_DrawText@bg_color 002B                            _Score_draw 4EEE  
                      ?_touchScreenSM 00B0                       i2_LEAVECRITICAL 640A  
               __size_of_Factory_exec 0056                 __size_of_Factory_init 00BA  
                        vfprintf@cfmt 0080                   LCD_Bitmap@jumpColor 0078  
                 LCD_Bitmap@jumpCount 0065                   _Menu_parametersDraw 5AE0  
                __size_of_configTouch 001C            __end_of_gameControllerInit 63B2  
                           ??___aodiv 0022                             ??___aomod 0022  
                              ___wmul 631C                             ??___fldiv 0028  
                           ??___awdiv 0016                             ??___awmod 0016  
                       LCD_Fill@color 0012                             ??___fltol 003D  
              LCD_ButtonUpdate@button 0025                             ??___lwdiv 0024  
                           ??___lwmod 0016            gameControllerController@ev 0039  
                LCD_DrawText@fontByte 0037          __size_of_GameParameters_init 03D4  
                              clear_0 6276                                clear_1 6282  
                              clear_2 628E          __size_of_GameParameters_setX 0016  
        __size_of_GameParameters_setY 0016                      ___awdiv@quotient 0018  
           LCD_ButtonCreate@textOrBmp 001E                 _touchScreenController 3582  
                     ___awmod@divisor 0014                                isa$std 000001  
                     ___awmod@counter 0016                  __size_of_displayInit 0018  
                              pad@buf 0024                                dtoa@fp 002D  
                              _strlen 60E8                         LCD_DrawRect@i 0023  
                       LCD_DrawRect@j 001D                                fputc@c 0012  
                              fputs@c 001F                                fputs@i 0020  
                              fputs@s 001B          ?_GameParameters_setBackLight 0012  
                       LCD_DrawText@i 003E                     __end_ofi2___awmod 588A  
                       LCD_DrawText@x 0040                         LCD_DrawText@y 003D  
                LCD_DrawText@tempChar 003F                          __mediumconst 783A  
                              tblptrh 000FF7                             ??_sleepSM 0014  
                              tblptrl 000FF6                                tblptru 000FF8  
                   __end_of_Ball_draw 41CE                     __end_of_Ball_init 5C50  
                ?_Menu_parametersDraw 009C                   i2XF_scheduleTimer@i 0006  
                              putch@c 0001                      __end_of_vfprintf 5F3A  
                      i2___awmod@sign 0006                             ??_sprintf 0047  
            __end_of_LCD_ButtonCreate 4A76                           _Paddle_addX 4E14  
                        _Factory_exec 5F9A                          _Factory_init 5458  
                         _Paddle_draw 4310                           _Paddle_init 55CA  
                    XF_pushEvent@temp 001A                          ___xxtofl@arg 001C  
               LCD_SliderCreate@width 0016                          ___xxtofl@exp 001B  
                        ___xxtofl@val 0012                  __end_of_LCD_InButton 4D36  
               LCD_SliderCreate@steps 0022              __end_of_LCD_ButtonUpdate 3A24  
                          __accesstop 0060               __end_of__initialization 6294  
                           ?_LCD_Fill 0012                      _LCD_SliderCreate 4B6A  
                           ?_LCD_Init 0001                             ?_LCD_Read 0012  
                __end_of_LCD_InSlider 4E14                  __end_of_LCD_DrawRect 2FF8  
                __end_of_LCD_DrawText 2200           __size_of_XF_unscheduleTimer 003C  
                     i2_ENTERCRITICAL 6420                         ___rparam_used 000001  
                          ___fltol@f1 0039                         LCD_Read@color 0018  
                    _LCD_SliderUpdate 1442                    LEAVECRITICAL@inISR 0012  
                           LCD_Init@i 0018                        __pcstackCOMRAM 0001  
                        ??_LCD_Bitmap 002D                     ??_touchScreenInit 0012  
         __end_of_backlightController 1DB6                         __end_of_fputc 508A  
                       __end_of_fputs 61BE                   gameControllerInit@g 003C  
          LCD_ButtonCreate@fpReleased 0024                         __end_of_putch 6454  
                   LCD_Bitmap@biWidth 0076                     ?_Menu_welcomeDraw 009C  
                LCD_Bitmap@endOfImage 0064              __end_of_XF_scheduleTimer 5CC4  
                           ?i2___wmul 0001                    ??_Menu_welcomeDraw 0042  
                   LCD_Bitmap@curXPos 006F   __size_of_XF_decrementAndQueueTimers 0122  
                   LCD_Bitmap@curYPos 0067                 __size_of_XF_pushEvent 0064  
               ??_Menu_parametersDraw 0045         ??_GameParameters_setBackLight 0016  
                        Ball_Update@b 0012             ??_GameParameters_resetPos 0014  
             _arialNarrow_12ptBitmaps 783B                      ??_checkCollision 001D  
                  __size_of_displaySM 0100                 __end_of_LEAVECRITICAL 63F4  
                  LCD_DrawText@offset 0033                               ??_fputc 0016  
                             ??_fputs 001F                          ?_Ball_Update 0012  
                             ??_putch 0012      __end_of_gameControllerController 2CBE  
           gameControllerController@g 0037               __end_ofi2_LEAVECRITICAL 6420  
                      XF_pushEvent@ev 0019                            __pbssBANK0 00B5  
                          __pbssBANK1 0100                    __end_of_LCD_Bitmap 0F54  
                          ??_LCD_Fill 0014                            ??_LCD_Init 0017  
                          ??_LCD_Read 0016                       ??_touchScreenSM 00B2  
            LCD_ButtonCreate@txtColor 001A                           ?_Score_draw 0090  
                  ENTERCRITICAL@inISR 0012              __size_of_Menu_inGameDraw 0056  
                         Score_draw@s 0090                               ?___wmul 001A  
              ?_touchScreenController 0090                          _XF_pushEvent 5DAC  
                  __size_of_mooveBall 0028                    __size_of_sleepInit 0028  
                             ?_strlen 0012                  __end_of_Menu_endGame 572A  
                          ??i2___wmul 0005               __size_ofi2_XF_pushEvent 0064  
                             _RGB2LCD 539A                               _INTEDG1 007F8D  
                GameParameters_init@s 002B                             ?___xxtofl 0012  
                GameParameters_setX@s 0012                  GameParameters_setY@s 0012  
                  __size_of_vfpfcnvrt 01B4                 __end_of_ENTERCRITICAL 640A  
             __end_ofi2_ENTERCRITICAL 6436                      ??_LCD_ButtonDraw 007E  
                Menu_parametersDraw@g 009C   __end_of_arialNarrow_12ptDescriptors 7F7F  
         _arialNarrow_12ptDescriptors 7E62                               _XF_init 5512  
                 LCD_ButtonDraw@xText 0095                   LCD_ButtonDraw@yText 0097  
                 LCD_ButtonDraw@width 008B                               __Hparam 0000  
                __size_of_moovePaddle 00F4                               __Lparam 0000  
                  i2_XF_scheduleTimer 5D38                               ___aodiv 3D8C  
                   __end_of_displaySM 497C                               ___aomod 3F14  
                             ___fldiv 25D4                               ___awdiv 5152  
                             ___awmod 572A                               ___fltol 4672  
                     __size_of___wmul 0026               LCD_ButtonUpdate@colorIn 002D  
                             ___lwdiv 5CC4                               ___lwmod 5E10  
                           ?_vfprintf 007A                        LCD_Bitmap@newY 0073  
                      LCD_Bitmap@posX 0029                        LCD_Bitmap@posY 002B  
                      LCD_Fill@colorH 0014                        LCD_Fill@colorL 0015  
                             __pcinit 6270                        LCD_Fill@column 0016  
                             __ramtop 0600                               __ptext0 6436  
                             __ptext1 5458                               __ptext2 62CC  
                             __ptext3 6446                               __ptext4 639C  
                             __ptext5 6384                               __ptext6 5512  
                             __ptext7 32DA                               __ptext8 592C  
                             __ptext9 2200                   ?i2_XF_scheduleTimer 0002  
                     __size_of_strlen 004E             __size_of_gameControllerSM 00C8  
                           _T2CONbits 000FBA                          __size_of_abs 0040  
                        __size_of_pad 00C2                          __size_of_isr 00BC  
                        ?_XF_popEvent 0001                            ??___xxtofl 0016  
                LCD_Bitmap@pixelCount 0075                   __size_of_Score_draw 00D2  
                    ___awmod@dividend 0012                 LCD_DrawText@fontPixel 0038  
                             _sleepSM 588A                 __end_of_configMeasure 60E8  
               __size_of_LCD_InButton 00DE               XF_unscheduleTimer@inISR 0002  
               __size_of_LCD_InSlider 00DE                     Menu_welcomeDraw@g 009C  
               __size_of_LCD_DrawRect 033A                               _sprintf 6046  
               __size_of_LCD_DrawText 044A                      ??_LCD_SliderDraw 0039  
                end_of_initialization 6294                      ?i2_LEAVECRITICAL 0001  
                 _GameParameters_init 2200                   _GameParameters_setX 63C8  
                 _GameParameters_setY 63B2                     __end_of_mooveBall 631C  
                             fputc@fp 0014                  ??i2_XF_scheduleTimer 0006  
                       __Lmediumconst 783A                               fputs@fp 001D  
                      Paddle_addX@add 0016                   i2___wmul@multiplier 0001  
                   __end_of_sleepInit 62F4                   displayController@ev 00A0  
                   __end_of_vfpfcnvrt 3D8C                            _sleepState 00DF  
                i2XF_scheduleTimer@ev 0004                  i2XF_scheduleTimer@tm 0002  
                             postdec1 000FE5                               postdec2 000FDD  
                   _LCD_Lowlevel_Init 592C                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                          ??_vfprintf 0047     __size_of_gameControllerController 0350  
                ?_GameParameters_init 002B             ?_gameControllerController 0037  
                   ??_Menu_inGameDraw 0047                  ?_GameParameters_setX 0012  
                  ?_LCD_Lowlevel_Init 0001                  ?_GameParameters_setY 0012  
                             strlen@a 0014                               strlen@s 0012  
                        _LCD_InButton 4C58                             _PORTBbits 000F81  
            __end_of_LCD_SliderCreate 4C58                LCD_SliderCreate@height 0018  
                        _LCD_InSlider 4D36                          _displayState 00DD  
                        _LCD_DrawRect 2CBE                          _LCD_DrawText 1DB6  
                   XF_pushEvent@inISR 0018              __end_of_LCD_SliderUpdate 1918  
                    XF_popEvent@inISR 0019                LCD_SliderCreate@slider 0026  
                 ??_LCD_Lowlevel_Init 0012                         ___xxtofl@sign 001A  
                  _gameControllerInit 639C              __size_of_sleepController 0036  
                      Factory_exec@ev 01EF                           ___fldiv@grs 0033  
                         ___fldiv@rem 002C                             i2___awmod 57DA  
                    ?i2_ENTERCRITICAL 0001                     ?_LCD_ButtonCreate 0012  
                        ?_Paddle_addX 0012                          ?_Paddle_draw 0025  
                           _Ball_draw 4078                          ?_Paddle_init 0012  
                           _Ball_init 5BDA                   ?_gameControllerInit 003C  
                __size_of_Ball_Update 0082                    ??_LCD_ButtonCreate 002B  
                   ?_LCD_ButtonUpdate 0025                       _touchScreenInit 6446  
                   _displayController 4778                           _CCP2CONbits 000F66  
                          displaySM@g 00A3                        LCD_Read@temp16 001A  
     __end_of_arialNarrow_12ptBitmaps 7E62                RGB2LCD@colorTableEntry 0012  
                       ??_configTouch 0012                    ??_LCD_ButtonUpdate 0027  
                   __size_of_LCD_Fill 00C2                     __size_of_LCD_Init 02A8  
                   __size_of_LCD_Read 0142                    ?_displayController 009E  
                          RGB2LCD@red 0018             __end_of_LCD_Lowlevel_Init 59CA  
                  LCD_Lowlevel_Init@i 0013                 LCD_ButtonCreate@fpOut 0026  
                   XF_scheduleTimer@i 0017                 LCD_ButtonCreate@index 002A  
               LCD_ButtonCreate@width 0016                         ??_displayInit 0047  
               __size_of_Menu_endGame 00B0                 ??_GameParameters_init 002D  
               ??_GameParameters_setX 0016                 ??_GameParameters_setY 0016  
                 ??_displayController 00A1                           vfpfcnvrt@ap 0043  
                         vfpfcnvrt@fp 003F                           vfpfcnvrt@ll 0072  
                      __end_of___wmul 6342                  ??_gameControllerInit 003E  
                  LCD_Bitmap@biHeight 006B                  XF_unscheduleTimer@id 0003  
                      i2_XF_pushEvent 5E74                      i2___wmul@product 0005  
                   ?_XF_scheduleTimer 0013                        __end_of_strlen 6136  
                       XF_popEvent@ev 0018                   start_initialization 6270  
                   __size_ofi2___wmul 0026                    ??_XF_scheduleTimer 0017  
                         __end_of_abs 61FE                    LCD_InButton@button 0012  
                         __end_of_pad 52D8                           __end_of_isr 00C4  
               XF_scheduleTimer@inISR 0016                            ?i2___awmod 0001  
                          ?_Ball_draw 0025                            ?_Ball_init 0012  
           __end_of_displayController 487C             __size_of_Menu_welcomeDraw 0078  
          __end_of_XF_unscheduleTimer 623A                          ??_Score_draw 0047  
                   LCD_DrawRect@color 001B                          _Menu_endGame 567A  
                   LCD_DrawRect@posX1 0012                     LCD_DrawRect@posX2 0016  
                   LCD_DrawRect@posY1 0014                     LCD_DrawRect@posY2 0018  
                  i2XF_pushEvent@temp 0009               ??_touchScreenController 0092  
                         vfprintf@fmt 007C                              ??___wmul 001E  
                 LCD_DrawText@yOffset 0035                   __end_of_configTouch 6384  
              __end_ofi2_XF_pushEvent 5ED8                   LCD_DrawText@posXEnd 003B  
                 LCD_DrawText@posYEnd 0039              _arialNarrow_12ptFontInfo 7F7F  
         __end_of_Menu_parametersDraw 5B62                              ??_strlen 0014  
                LCD_SliderCreate@posX 0012                  LCD_SliderCreate@posY 0014  
                    _gameControllerSM 508A                   __end_of_displayInit 639C  
                           ___fldiv@a 0024                             ___fldiv@b 0020  
                            ?_RGB2LCD 0012          __size_of_backlightController 049E  
                         __pbssCOMRAM 0047                LCD_SliderUpdate@slider 0027  
                       Menu_endGame@g 009C           XF_decrementAndQueueTimers@i 000C  
                       __pcstackBANK0 0060                         __pcstackBANK1 01EF  
                  __end_of_Score_draw 4FC0                  LCD_SliderDraw@slider 0037  
                    ___aodiv@dividend 0012                    gameControllerSM@ev 0040  
             __end_of_touchScreenInit 6452                  __size_of_XF_popEvent 0060  
                   __size_of___xxtofl 01B4                      LCD_InButton@posX 0014  
                    LCD_InButton@posY 0016                      LCD_Bitmap@bmpPtr 0027  
                   LCD_DrawText@align 0024                              ?_XF_init 0001  
                   LCD_DrawText@color 0029                     ??_sleepController 0012  
                    LCD_Bitmap@strPtr 0071          ??_XF_decrementAndQueueTimers 000A  
                   LCD_DrawText@width 0041                 __end_of_touchScreenSM 5A5E  
             LCD_Bitmap@colorTablePtr 0069                  i2LEAVECRITICAL@inISR 0001  
                    LCD_SliderDraw@x1 003D                      LCD_SliderDraw@x2 003F  
                    LCD_SliderDraw@y1 0041                      LCD_SliderDraw@y2 0043  
          __size_of_LCD_Lowlevel_Init 009E                      ___lwdiv@dividend 0020  
                           _dtoa$4938 0060                             __pintcode 0008  
                       __pmediumconst 783A                              ?___aodiv 0012  
                            ?___aomod 0012                              ?___fldiv 0020  
                            ?___awdiv 0012                      ___aodiv@quotient 0024  
                            ?___awmod 0012                              ?___fltol 0039  
                            ?___lwdiv 0020                              ?___lwmod 0012  
              __size_of_LEAVECRITICAL 0016                       ?i2_XF_pushEvent 0007  
                           _displaySM 487C                     __size_of_vfprintf 0062  
 __end_of_GameParameters_setBackLight 617A           _GameParameters_setBackLight 6136  
            ?_GameParameters_resetPos 0012                            mooveBall@g 0025  
                            ?_sleepSM 0001                      ___lwdiv@quotient 0025  
         touchScreenController@valueX 00AE           touchScreenController@valueY 00AC  
                         ??i2___awmod 0005                              ?_sprintf 0082  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                      __size_of_putch 0002                           ??_Ball_draw 0027  
                         ??_Ball_init 0014            __size_of_displayController 0104  
                          sleepInit@g 00A5                              _LCD_Fill 52D8  
                            _LCD_Init 32DA                              _LCD_Read 41CE  
                       ??_moovePaddle 001E                        ___wmul@product 001E  
                __size_of_Paddle_addX 00DA                  __size_of_Paddle_draw 0132  
                __size_of_Paddle_init 00B0                       _Menu_inGameDraw 5FF0  
                i2ENTERCRITICAL@inISR 0001                    LCD_SliderUpdate@x1 0035  
                  LCD_SliderUpdate@x2 002F                    LCD_SliderUpdate@y1 0031  
                  LCD_SliderUpdate@y2 0033                    displayController@g 009E  
             __size_of_checkCollision 0896                             _mooveBall 62F4  
                         _configTouch 6368                              i2u520_40 5878  
                            i2u520_41 5874                              i2u513_40 6432  
                            i2u513_41 642E                              i2u514_40 641C  
                            i2u514_41 6418                              i2u515_40 57EC  
                            i2u515_41 57E8                              i2u516_40 5806  
                            i2u540_40 5EAE                              i2u516_41 5802  
                            i2u540_41 5EAA                              i2u517_40 5820  
                            i2u517_41 581C                              XF_init@i 0020  
                            i2u518_40 583E                              i2u542_40 447A  
                            i2u550_40 0044                              i2u518_41 583A  
                            i2u542_41 4476                              i2u550_41 0040  
                            i2u519_40 5854                              i2u543_40 44D2  
                            i2u551_40 0064                              i2u519_41 5850  
                            i2u543_41 44CE                              i2u551_41 0060  
                            i2u544_40 450C                              i2u552_40 0080  
                            i2u544_41 4508                              i2u552_41 007C  
                           _sleepInit 62CC                              i2u545_40 4562  
                            i2u553_40 008E                              i2u545_41 455E  
                            i2u553_41 008A                              i2u546_40 5D62  
                            i2u546_41 5D5E                              i2u547_40 5DA4  
                            i2u547_41 5DA0                              i2u548_40 0028  
                            i2u548_41 0024                              i2u549_40 0036  
                            i2u549_41 0032                __size_of_ENTERCRITICAL 0016  
                         _displayInit 6384                             _vfpfcnvrt 3BD8  
                          ?_displaySM 00A3                     ___wmul@multiplier 001A  
                   ?_LCD_SliderCreate 0012                              i2___wmul 6342  
    GameParameters_setBackLight@value 0014                    LCD_ButtonUpdate@x1 0033  
                  LCD_ButtonUpdate@x2 002F                    LCD_ButtonUpdate@y1 0031  
                  LCD_ButtonUpdate@y2 0035               i2XF_scheduleTimer@inISR 0005  
                  ??_LCD_SliderCreate 0028                      __size_of_RGB2LCD 00BE  
                   ?_LCD_SliderUpdate 0027                      LCD_InSlider@posX 0014  
                    LCD_InSlider@posY 0016                  LCD_ButtonCreate@font 0020  
                LCD_ButtonCreate@posX 0012                  LCD_ButtonCreate@posY 0014  
                LCD_ButtonDraw@bmpPtr 009A                      ?_touchScreenInit 0001  
                  ??_LCD_SliderUpdate 0029                  LCD_ButtonDraw@button 007C  
                       _LEAVECRITICAL 63DE                         ?_Factory_exec 0001  
                       ?_Factory_init 0001                    i2___awmod@dividend 0001  
                    _Menu_welcomeDraw 5B62                       checkCollision@g 001B  
         __size_ofi2_XF_scheduleTimer 0074                      __size_of_XF_init 00B8  
                    LCD_DrawRect@fill 001A                            ?_mooveBall 0025  
                            __Hrparam 0000                      LCD_DrawRect@temp 001F  
                          ?_sleepInit 00A5              __size_ofi2_LEAVECRITICAL 0016  
                          vfprintf@ap 007E                              __Lrparam 0000  
                          vfprintf@fp 007A                   __end_of_moovePaddle 4B6A  
             __size_of_LCD_ButtonDraw 04EE                __size_of_configMeasure 0050  
           __size_of_LCD_ButtonCreate 00FA                      __size_of___aodiv 0188  
     __end_of_GameParameters_resetPos 62CC                      __size_of___aomod 0164  
                    __size_of___fldiv 039A                      __size_of___awdiv 00C4  
                    __size_of___awmod 00B0                      __size_of___fltol 0106  
               i2___wmul@multiplicand 0003                            ?_vfpfcnvrt 003F  
                    __size_of___lwdiv 0074                      __size_of___lwmod 0064  
           __size_of_LCD_ButtonUpdate 0236                     gameControllerSM@g 003C  
                     ___aodiv@divisor 001A                      Paddle_addX@value 0014  
            LCD_ButtonUpdate@colorOut 002B                       ___aodiv@counter 0022  
                        moovePaddle@g 001C              GameParameters_setX@value 0014  
                     LCD_Bitmap@color 006D              GameParameters_setY@value 0014  
                    LCD_DrawText@font 0022                            sprintf@fmt 0084  
                    LCD_DrawText@posX 0025                      LCD_DrawText@posY 0027  
                            ___xxtofl 3A24                            Ball_draw@b 0025  
                     ___lwdiv@divisor 0022                            Ball_init@b 0012  
                     ___lwdiv@counter 0024                              __ptext10 55CA  
                            __ptext11 4B6A                              __ptext20 4672  
                            __ptext12 497C                              __ptext21 25D4  
                            __ptext13 5BDA                              __ptext30 4E14  
                            __ptext22 5C50                              __ptext14 5F9A  
                            __ptext31 4C58                              __ptext23 63B2  
                            __ptext15 59CA                              __ptext40 487C  
                            __ptext32 62A2                              __ptext24 63C8  
                            __ptext16 3582                              __ptext41 4778  
                            __ptext33 62F4                              __ptext25 588A  
                            __ptext17 6368                              __ptext50 095E  
                            __ptext42 5B62                              __ptext34 00C8  
                            __ptext26 623A                              __ptext18 6098  
                            __ptext51 5E10                              __ptext43 5AE0  
                            __ptext35 5DAC                              __ptext27 508A  
                            __ptext19 3A24                              __ptext60 5216  
                            __ptext52 5CC4                              __ptext44 4564  
                            __ptext36 5A5E                              __ptext28 296E  
                            __ptext61 617A                              __ptext53 539A  
                            __ptext45 1442                              __ptext37 1918  
                            __ptext29 4A76                              __ptext70 5152  
                            __ptext62 4FC0                              __ptext54 5FF0  
                            __ptext46 567A                              __ptext38 6136  
                            __ptext71 4310                              __ptext63 6452  
                            __ptext55 4EEE                              __ptext47 0F54  
                            __ptext39 4D36                              __ptext80 5D38  
                            __ptext72 52D8                              __ptext64 61BE  
                            __ptext56 6046                              __ptext48 37EE  
                            __ptext81 4442                              __ptext73 4078  
                            __ptext65 3F14                              __ptext57 5ED8  
                            __ptext49 41CE                              __ptext82 6342  
                            __ptext74 2CBE                              __ptext66 3D8C  
                            __ptext58 3BD8                              __ptext83 5E74  
                            __ptext75 5F3A                              __ptext67 1DB6  
                            __ptext59 2FF8                              __ptext84 57DA  
                            __ptext76 572A                              __ptext68 60E8  
                            __ptext85 61FE                              __ptext77 63DE  
                            __ptext69 631C                              __ptext86 640A  
                            __ptext78 63F4                              __ptext87 6420  
                    __size_of_sleepSM 00A2                        ?_LEAVECRITICAL 0001  
                       _ENTERCRITICAL 63F4                         ??_Ball_Update 0014  
                      ??_Factory_exec 0047                        ??_Factory_init 00A7  
             __end_of_Menu_inGameDraw 6046              GameParameters_resetPos@s 0012  
                    __size_of_sprintf 0052    __end_of_XF_decrementAndQueueTimers 4564  
          _XF_decrementAndQueueTimers 4442                         __size_of_main 0010  
                           sleepSM@ev 0016                         __size_of_dtoa 02E2  
           __size_of_XF_scheduleTimer 0074              __end_of_gameControllerSM 5152  
                 _backlightController 1918           __end_of_GameParameters_init 25D4  
         __end_of_GameParameters_setX 63DE           __end_of_GameParameters_setY 63C8  
            __size_ofi2_ENTERCRITICAL 0016               __size_of_LCD_SliderDraw 010E  
        GameParameters_setBackLight@s 0012              _gameControllerController 296E  
                            isa$xinst 000000                            _LCD_Bitmap 095E  
      __size_of_touchScreenController 026C                    _XF_unscheduleTimer 61FE  
       __end_of_touchScreenController 37EE                              int$flags 004E  
                            _vfprintf 5ED8                         ?_XF_pushEvent 0018  
         __size_of_gameControllerInit 0016                           ??_displaySM 00A5  
                    ___aomod@dividend 0012                   ?_XF_unscheduleTimer 0002  
                   i2___awmod@divisor 0003                     i2___awmod@counter 0005  
                ?_backlightController 0018                       _sleepController 623A  
                      ?_ENTERCRITICAL 0001                         _configMeasure 6098  
                            intlevel2 0000                             sprintf@ap 0088  
                     LCD_DrawText@msg 0020                      ___lwmod@dividend 0012  
                ??_XF_unscheduleTimer 0003                           _moovePaddle 4A76  
                 __end_of_Ball_Update 5AE0                        _checkCollision 00C8  
                         ??_mooveBall 0027                           ??_sleepInit 0047  
                    ??i2_XF_pushEvent 0008                        ??_XF_pushEvent 0019  
                     ___aomod@divisor 001A                           ??_vfpfcnvrt 0045  
                     ___aomod@counter 0022                     ??i2_LEAVECRITICAL 0001  
                            sprintf@f 008A                              sprintf@s 0082  
               ??_backlightController 001A                         ??_XF_popEvent 0018  
                     ___lwmod@divisor 0014               LCD_SliderCreate@bgColor 001C  
                     ___lwmod@counter 0016                       ??_LEAVECRITICAL 0012  
                      ?_configMeasure 0001           LCD_SliderCreate@borderColor 001E  
        __size_of_Menu_parametersDraw 0082              LCD_SliderCreate@sldColor 001A  
             LCD_SliderCreate@fpPress 0024                      ?_Menu_inGameDraw 0092  
                        ___aodiv@sign 0023                       Paddle_init@team 0014  
              __end_of_checkCollision 095E      __size_of_GameParameters_resetPos 002A  
__size_of_GameParameters_setBackLight 0044                          ___aomod@sign 0023  
                        ?_configTouch 0001                   _gameControllerState 004D  
