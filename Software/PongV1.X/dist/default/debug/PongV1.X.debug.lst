

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 02 16:06:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95  0000                     
    96                           ; Version 2.32
    97                           ; Generated 02/02/2021 GMT
    98                           ; 
    99                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution. Publication is not required when
   113                           ;        this file is used in an embedded application.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18LF25K22 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132                           	psect	mediumconst
   133  007854                     __pmediumconst:
   134                           	callstack 0
   135  007854  00                 	db	0
   136  007855                     _arialNarrow_12ptBitmaps:
   137                           	callstack 0
   138  007855  00                 	db	0
   139  007856  00                 	db	0
   140  007857  00                 	db	0
   141  007858  00                 	db	0
   142  007859  00                 	db	0
   143  00785A  00                 	db	0
   144  00785B  00                 	db	0
   145  00785C  00                 	db	0
   146  00785D  00                 	db	0
   147  00785E  00                 	db	0
   148  00785F  00                 	db	0
   149  007860  00                 	db	0
   150  007861  00                 	db	0
   151  007862  00                 	db	0
   152  007863  00                 	db	0
   153  007864  00                 	db	0
   154  007865  C0                 	db	192
   155  007866  C0                 	db	192
   156  007867  C0                 	db	192
   157  007868  C0                 	db	192
   158  007869  C0                 	db	192
   159  00786A  C0                 	db	192
   160  00786B  C0                 	db	192
   161  00786C  C0                 	db	192
   162  00786D  00                 	db	0
   163  00786E  C0                 	db	192
   164  00786F  C0                 	db	192
   165  007870  00                 	db	0
   166  007871  00                 	db	0
   167  007872  00                 	db	0
   168  007873  00                 	db	0
   169  007874  D8                 	db	216
   170  007875  D8                 	db	216
   171  007876  D8                 	db	216
   172  007877  D8                 	db	216
   173  007878  00                 	db	0
   174  007879  00                 	db	0
   175  00787A  00                 	db	0
   176  00787B  00                 	db	0
   177  00787C  00                 	db	0
   178  00787D  00                 	db	0
   179  00787E  00                 	db	0
   180  00787F  00                 	db	0
   181  007880  00                 	db	0
   182  007881  00                 	db	0
   183  007882  00                 	db	0
   184  007883  12                 	db	18
   185  007884  12                 	db	18
   186  007885  24                 	db	36
   187  007886  FE                 	db	254
   188  007887  FE                 	db	254
   189  007888  48                 	db	72
   190  007889  FE                 	db	254
   191  00788A  FE                 	db	254
   192  00788B  48                 	db	72
   193  00788C  90                 	db	144
   194  00788D  90                 	db	144
   195  00788E  00                 	db	0
   196  00788F  00                 	db	0
   197  007890  00                 	db	0
   198  007891  10                 	db	16
   199  007892  7C                 	db	124
   200  007893  FC                 	db	252
   201  007894  D6                 	db	214
   202  007895  D0                 	db	208
   203  007896  F0                 	db	240
   204  007897  7C                 	db	124
   205  007898  1E                 	db	30
   206  007899  16                 	db	22
   207  00789A  D6                 	db	214
   208  00789B  7E                 	db	126
   209  00789C  7C                 	db	124
   210  00789D  10                 	db	16
   211  00789E  00                 	db	0
   212  00789F  00                 	db	0
   213  0078A0  00                 	db	0
   214  0078A1  00                 	db	0
   215  0078A2  61                 	db	97
   216  0078A3  00                 	db	0
   217  0078A4  91                 	db	145
   218  0078A5  00                 	db	0
   219  0078A6  92                 	db	146
   220  0078A7  00                 	db	0
   221  0078A8  92                 	db	146
   222  0078A9  00                 	db	0
   223  0078AA  94                 	db	148
   224  0078AB  00                 	db	0
   225  0078AC  65                 	db	101
   226  0078AD  80                 	db	128
   227  0078AE  06                 	db	6
   228  0078AF  40                 	db	64
   229  0078B0  0A                 	db	10
   230  0078B1  40                 	db	64
   231  0078B2  0A                 	db	10
   232  0078B3  40                 	db	64
   233  0078B4  12                 	db	18
   234  0078B5  40                 	db	64
   235  0078B6  11                 	db	17
   236  0078B7  80                 	db	128
   237  0078B8  00                 	db	0
   238  0078B9  00                 	db	0
   239  0078BA  00                 	db	0
   240  0078BB  00                 	db	0
   241  0078BC  00                 	db	0
   242  0078BD  00                 	db	0
   243  0078BE  00                 	db	0
   244  0078BF  38                 	db	56
   245  0078C0  7C                 	db	124
   246  0078C1  6C                 	db	108
   247  0078C2  7C                 	db	124
   248  0078C3  30                 	db	48
   249  0078C4  78                 	db	120
   250  0078C5  DA                 	db	218
   251  0078C6  CE                 	db	206
   252  0078C7  CE                 	db	206
   253  0078C8  FF                 	db	255
   254  0078C9  7A                 	db	122
   255  0078CA  00                 	db	0
   256  0078CB  00                 	db	0
   257  0078CC  00                 	db	0
   258  0078CD  00                 	db	0
   259  0078CE  C0                 	db	192
   260  0078CF  C0                 	db	192
   261  0078D0  C0                 	db	192
   262  0078D1  C0                 	db	192
   263  0078D2  00                 	db	0
   264  0078D3  00                 	db	0
   265  0078D4  00                 	db	0
   266  0078D5  00                 	db	0
   267  0078D6  00                 	db	0
   268  0078D7  00                 	db	0
   269  0078D8  00                 	db	0
   270  0078D9  00                 	db	0
   271  0078DA  00                 	db	0
   272  0078DB  00                 	db	0
   273  0078DC  00                 	db	0
   274  0078DD  10                 	db	16
   275  0078DE  20                 	db	32
   276  0078DF  60                 	db	96
   277  0078E0  60                 	db	96
   278  0078E1  C0                 	db	192
   279  0078E2  C0                 	db	192
   280  0078E3  C0                 	db	192
   281  0078E4  C0                 	db	192
   282  0078E5  C0                 	db	192
   283  0078E6  C0                 	db	192
   284  0078E7  60                 	db	96
   285  0078E8  60                 	db	96
   286  0078E9  20                 	db	32
   287  0078EA  10                 	db	16
   288  0078EB  00                 	db	0
   289  0078EC  80                 	db	128
   290  0078ED  40                 	db	64
   291  0078EE  60                 	db	96
   292  0078EF  20                 	db	32
   293  0078F0  30                 	db	48
   294  0078F1  30                 	db	48
   295  0078F2  30                 	db	48
   296  0078F3  30                 	db	48
   297  0078F4  30                 	db	48
   298  0078F5  30                 	db	48
   299  0078F6  60                 	db	96
   300  0078F7  60                 	db	96
   301  0078F8  40                 	db	64
   302  0078F9  80                 	db	128
   303  0078FA  00                 	db	0
   304  0078FB  20                 	db	32
   305  0078FC  A8                 	db	168
   306  0078FD  F8                 	db	248
   307  0078FE  20                 	db	32
   308  0078FF  50                 	db	80
   309  007900  50                 	db	80
   310  007901  00                 	db	0
   311  007902  00                 	db	0
   312  007903  00                 	db	0
   313  007904  00                 	db	0
   314  007905  00                 	db	0
   315  007906  00                 	db	0
   316  007907  00                 	db	0
   317  007908  00                 	db	0
   318  007909  00                 	db	0
   319  00790A  00                 	db	0
   320  00790B  00                 	db	0
   321  00790C  00                 	db	0
   322  00790D  30                 	db	48
   323  00790E  30                 	db	48
   324  00790F  30                 	db	48
   325  007910  FC                 	db	252
   326  007911  FC                 	db	252
   327  007912  30                 	db	48
   328  007913  30                 	db	48
   329  007914  30                 	db	48
   330  007915  00                 	db	0
   331  007916  00                 	db	0
   332  007917  00                 	db	0
   333  007918  00                 	db	0
   334  007919  00                 	db	0
   335  00791A  00                 	db	0
   336  00791B  00                 	db	0
   337  00791C  00                 	db	0
   338  00791D  00                 	db	0
   339  00791E  00                 	db	0
   340  00791F  00                 	db	0
   341  007920  00                 	db	0
   342  007921  00                 	db	0
   343  007922  C0                 	db	192
   344  007923  C0                 	db	192
   345  007924  40                 	db	64
   346  007925  40                 	db	64
   347  007926  80                 	db	128
   348  007927  00                 	db	0
   349  007928  00                 	db	0
   350  007929  00                 	db	0
   351  00792A  00                 	db	0
   352  00792B  00                 	db	0
   353  00792C  00                 	db	0
   354  00792D  00                 	db	0
   355  00792E  F0                 	db	240
   356  00792F  F0                 	db	240
   357  007930  00                 	db	0
   358  007931  00                 	db	0
   359  007932  00                 	db	0
   360  007933  00                 	db	0
   361  007934  00                 	db	0
   362  007935  00                 	db	0
   363  007936  00                 	db	0
   364  007937  00                 	db	0
   365  007938  00                 	db	0
   366  007939  00                 	db	0
   367  00793A  00                 	db	0
   368  00793B  00                 	db	0
   369  00793C  00                 	db	0
   370  00793D  00                 	db	0
   371  00793E  00                 	db	0
   372  00793F  00                 	db	0
   373  007940  C0                 	db	192
   374  007941  C0                 	db	192
   375  007942  00                 	db	0
   376  007943  00                 	db	0
   377  007944  00                 	db	0
   378  007945  00                 	db	0
   379  007946  30                 	db	48
   380  007947  30                 	db	48
   381  007948  30                 	db	48
   382  007949  60                 	db	96
   383  00794A  60                 	db	96
   384  00794B  60                 	db	96
   385  00794C  60                 	db	96
   386  00794D  60                 	db	96
   387  00794E  C0                 	db	192
   388  00794F  C0                 	db	192
   389  007950  C0                 	db	192
   390  007951  00                 	db	0
   391  007952  00                 	db	0
   392  007953  00                 	db	0
   393  007954  00                 	db	0
   394  007955  78                 	db	120
   395  007956  78                 	db	120
   396  007957  CC                 	db	204
   397  007958  CC                 	db	204
   398  007959  CC                 	db	204
   399  00795A  CC                 	db	204
   400  00795B  CC                 	db	204
   401  00795C  CC                 	db	204
   402  00795D  CC                 	db	204
   403  00795E  78                 	db	120
   404  00795F  78                 	db	120
   405  007960  00                 	db	0
   406  007961  00                 	db	0
   407  007962  00                 	db	0
   408  007963  00                 	db	0
   409  007964  30                 	db	48
   410  007965  30                 	db	48
   411  007966  70                 	db	112
   412  007967  F0                 	db	240
   413  007968  B0                 	db	176
   414  007969  30                 	db	48
   415  00796A  30                 	db	48
   416  00796B  30                 	db	48
   417  00796C  30                 	db	48
   418  00796D  30                 	db	48
   419  00796E  30                 	db	48
   420  00796F  00                 	db	0
   421  007970  00                 	db	0
   422  007971  00                 	db	0
   423  007972  00                 	db	0
   424  007973  38                 	db	56
   425  007974  7C                 	db	124
   426  007975  CC                 	db	204
   427  007976  CC                 	db	204
   428  007977  0C                 	db	12
   429  007978  18                 	db	24
   430  007979  38                 	db	56
   431  00797A  70                 	db	112
   432  00797B  60                 	db	96
   433  00797C  FC                 	db	252
   434  00797D  FC                 	db	252
   435  00797E  00                 	db	0
   436  00797F  00                 	db	0
   437  007980  00                 	db	0
   438  007981  00                 	db	0
   439  007982  78                 	db	120
   440  007983  FC                 	db	252
   441  007984  CC                 	db	204
   442  007985  0C                 	db	12
   443  007986  38                 	db	56
   444  007987  38                 	db	56
   445  007988  0C                 	db	12
   446  007989  0C                 	db	12
   447  00798A  CC                 	db	204
   448  00798B  F8                 	db	248
   449  00798C  78                 	db	120
   450  00798D  00                 	db	0
   451  00798E  00                 	db	0
   452  00798F  00                 	db	0
   453  007990  00                 	db	0
   454  007991  0C                 	db	12
   455  007992  1C                 	db	28
   456  007993  1C                 	db	28
   457  007994  3C                 	db	60
   458  007995  2C                 	db	44
   459  007996  6C                 	db	108
   460  007997  CC                 	db	204
   461  007998  FE                 	db	254
   462  007999  FE                 	db	254
   463  00799A  0C                 	db	12
   464  00799B  0C                 	db	12
   465  00799C  00                 	db	0
   466  00799D  00                 	db	0
   467  00799E  00                 	db	0
   468  00799F  00                 	db	0
   469  0079A0  7C                 	db	124
   470  0079A1  7C                 	db	124
   471  0079A2  60                 	db	96
   472  0079A3  D8                 	db	216
   473  0079A4  FC                 	db	252
   474  0079A5  CC                 	db	204
   475  0079A6  0C                 	db	12
   476  0079A7  CC                 	db	204
   477  0079A8  CC                 	db	204
   478  0079A9  78                 	db	120
   479  0079AA  78                 	db	120
   480  0079AB  00                 	db	0
   481  0079AC  00                 	db	0
   482  0079AD  00                 	db	0
   483  0079AE  00                 	db	0
   484  0079AF  70                 	db	112
   485  0079B0  78                 	db	120
   486  0079B1  D8                 	db	216
   487  0079B2  C0                 	db	192
   488  0079B3  F0                 	db	240
   489  0079B4  F8                 	db	248
   490  0079B5  D8                 	db	216
   491  0079B6  D8                 	db	216
   492  0079B7  D8                 	db	216
   493  0079B8  78                 	db	120
   494  0079B9  70                 	db	112
   495  0079BA  00                 	db	0
   496  0079BB  00                 	db	0
   497  0079BC  00                 	db	0
   498  0079BD  00                 	db	0
   499  0079BE  F8                 	db	248
   500  0079BF  F8                 	db	248
   501  0079C0  18                 	db	24
   502  0079C1  10                 	db	16
   503  0079C2  30                 	db	48
   504  0079C3  30                 	db	48
   505  0079C4  20                 	db	32
   506  0079C5  60                 	db	96
   507  0079C6  60                 	db	96
   508  0079C7  60                 	db	96
   509  0079C8  60                 	db	96
   510  0079C9  00                 	db	0
   511  0079CA  00                 	db	0
   512  0079CB  00                 	db	0
   513  0079CC  00                 	db	0
   514  0079CD  78                 	db	120
   515  0079CE  FC                 	db	252
   516  0079CF  CC                 	db	204
   517  0079D0  CC                 	db	204
   518  0079D1  78                 	db	120
   519  0079D2  78                 	db	120
   520  0079D3  CC                 	db	204
   521  0079D4  CC                 	db	204
   522  0079D5  CC                 	db	204
   523  0079D6  FC                 	db	252
   524  0079D7  78                 	db	120
   525  0079D8  00                 	db	0
   526  0079D9  00                 	db	0
   527  0079DA  00                 	db	0
   528  0079DB  00                 	db	0
   529  0079DC  70                 	db	112
   530  0079DD  F8                 	db	248
   531  0079DE  CC                 	db	204
   532  0079DF  CC                 	db	204
   533  0079E0  CC                 	db	204
   534  0079E1  FC                 	db	252
   535  0079E2  7C                 	db	124
   536  0079E3  0C                 	db	12
   537  0079E4  CC                 	db	204
   538  0079E5  F8                 	db	248
   539  0079E6  70                 	db	112
   540  0079E7  00                 	db	0
   541  0079E8  00                 	db	0
   542  0079E9  00                 	db	0
   543  0079EA  00                 	db	0
   544  0079EB  00                 	db	0
   545  0079EC  00                 	db	0
   546  0079ED  00                 	db	0
   547  0079EE  C0                 	db	192
   548  0079EF  C0                 	db	192
   549  0079F0  00                 	db	0
   550  0079F1  00                 	db	0
   551  0079F2  00                 	db	0
   552  0079F3  00                 	db	0
   553  0079F4  C0                 	db	192
   554  0079F5  C0                 	db	192
   555  0079F6  00                 	db	0
   556  0079F7  00                 	db	0
   557  0079F8  00                 	db	0
   558  0079F9  00                 	db	0
   559  0079FA  00                 	db	0
   560  0079FB  00                 	db	0
   561  0079FC  00                 	db	0
   562  0079FD  C0                 	db	192
   563  0079FE  C0                 	db	192
   564  0079FF  00                 	db	0
   565  007A00  00                 	db	0
   566  007A01  00                 	db	0
   567  007A02  00                 	db	0
   568  007A03  C0                 	db	192
   569  007A04  C0                 	db	192
   570  007A05  40                 	db	64
   571  007A06  40                 	db	64
   572  007A07  80                 	db	128
   573  007A08  00                 	db	0
   574  007A09  00                 	db	0
   575  007A0A  04                 	db	4
   576  007A0B  1C                 	db	28
   577  007A0C  38                 	db	56
   578  007A0D  F0                 	db	240
   579  007A0E  C0                 	db	192
   580  007A0F  F0                 	db	240
   581  007A10  38                 	db	56
   582  007A11  1C                 	db	28
   583  007A12  04                 	db	4
   584  007A13  00                 	db	0
   585  007A14  00                 	db	0
   586  007A15  00                 	db	0
   587  007A16  00                 	db	0
   588  007A17  00                 	db	0
   589  007A18  00                 	db	0
   590  007A19  00                 	db	0
   591  007A1A  00                 	db	0
   592  007A1B  FC                 	db	252
   593  007A1C  FC                 	db	252
   594  007A1D  00                 	db	0
   595  007A1E  FC                 	db	252
   596  007A1F  FC                 	db	252
   597  007A20  00                 	db	0
   598  007A21  00                 	db	0
   599  007A22  00                 	db	0
   600  007A23  00                 	db	0
   601  007A24  00                 	db	0
   602  007A25  00                 	db	0
   603  007A26  00                 	db	0
   604  007A27  00                 	db	0
   605  007A28  80                 	db	128
   606  007A29  E0                 	db	224
   607  007A2A  70                 	db	112
   608  007A2B  3C                 	db	60
   609  007A2C  0C                 	db	12
   610  007A2D  1C                 	db	28
   611  007A2E  70                 	db	112
   612  007A2F  E0                 	db	224
   613  007A30  80                 	db	128
   614  007A31  00                 	db	0
   615  007A32  00                 	db	0
   616  007A33  00                 	db	0
   617  007A34  00                 	db	0
   618  007A35  00                 	db	0
   619  007A36  78                 	db	120
   620  007A37  FC                 	db	252
   621  007A38  CC                 	db	204
   622  007A39  CC                 	db	204
   623  007A3A  1C                 	db	28
   624  007A3B  18                 	db	24
   625  007A3C  30                 	db	48
   626  007A3D  30                 	db	48
   627  007A3E  00                 	db	0
   628  007A3F  30                 	db	48
   629  007A40  30                 	db	48
   630  007A41  00                 	db	0
   631  007A42  00                 	db	0
   632  007A43  00                 	db	0
   633  007A44  00                 	db	0
   634  007A45  00                 	db	0
   635  007A46  0F                 	db	15
   636  007A47  C0                 	db	192
   637  007A48  1F                 	db	31
   638  007A49  E0                 	db	224
   639  007A4A  30                 	db	48
   640  007A4B  30                 	db	48
   641  007A4C  66                 	db	102
   642  007A4D  D8                 	db	216
   643  007A4E  EF                 	db	239
   644  007A4F  D8                 	db	216
   645  007A50  DD                 	db	221
   646  007A51  D8                 	db	216
   647  007A52  D8                 	db	216
   648  007A53  98                 	db	152
   649  007A54  D9                 	db	217
   650  007A55  98                 	db	152
   651  007A56  D9                 	db	217
   652  007A57  B0                 	db	176
   653  007A58  DF                 	db	223
   654  007A59  F0                 	db	240
   655  007A5A  6E                 	db	110
   656  007A5B  C8                 	db	200
   657  007A5C  70                 	db	112
   658  007A5D  10                 	db	16
   659  007A5E  3F                 	db	63
   660  007A5F  E0                 	db	224
   661  007A60  0F                 	db	15
   662  007A61  C0                 	db	192
   663  007A62  00                 	db	0
   664  007A63  00                 	db	0
   665  007A64  1C                 	db	28
   666  007A65  00                 	db	0
   667  007A66  1C                 	db	28
   668  007A67  00                 	db	0
   669  007A68  1C                 	db	28
   670  007A69  00                 	db	0
   671  007A6A  36                 	db	54
   672  007A6B  00                 	db	0
   673  007A6C  36                 	db	54
   674  007A6D  00                 	db	0
   675  007A6E  36                 	db	54
   676  007A6F  00                 	db	0
   677  007A70  63                 	db	99
   678  007A71  00                 	db	0
   679  007A72  7F                 	db	127
   680  007A73  00                 	db	0
   681  007A74  7F                 	db	127
   682  007A75  00                 	db	0
   683  007A76  C1                 	db	193
   684  007A77  80                 	db	128
   685  007A78  C1                 	db	193
   686  007A79  80                 	db	128
   687  007A7A  00                 	db	0
   688  007A7B  00                 	db	0
   689  007A7C  00                 	db	0
   690  007A7D  00                 	db	0
   691  007A7E  00                 	db	0
   692  007A7F  00                 	db	0
   693  007A80  00                 	db	0
   694  007A81  FC                 	db	252
   695  007A82  FE                 	db	254
   696  007A83  C6                 	db	198
   697  007A84  C6                 	db	198
   698  007A85  FC                 	db	252
   699  007A86  FC                 	db	252
   700  007A87  C6                 	db	198
   701  007A88  C6                 	db	198
   702  007A89  C6                 	db	198
   703  007A8A  FE                 	db	254
   704  007A8B  FC                 	db	252
   705  007A8C  00                 	db	0
   706  007A8D  00                 	db	0
   707  007A8E  00                 	db	0
   708  007A8F  00                 	db	0
   709  007A90  3C                 	db	60
   710  007A91  7E                 	db	126
   711  007A92  67                 	db	103
   712  007A93  C2                 	db	194
   713  007A94  C0                 	db	192
   714  007A95  C0                 	db	192
   715  007A96  C0                 	db	192
   716  007A97  C2                 	db	194
   717  007A98  67                 	db	103
   718  007A99  7E                 	db	126
   719  007A9A  3C                 	db	60
   720  007A9B  00                 	db	0
   721  007A9C  00                 	db	0
   722  007A9D  00                 	db	0
   723  007A9E  00                 	db	0
   724  007A9F  F8                 	db	248
   725  007AA0  FC                 	db	252
   726  007AA1  CE                 	db	206
   727  007AA2  C6                 	db	198
   728  007AA3  C6                 	db	198
   729  007AA4  C6                 	db	198
   730  007AA5  C6                 	db	198
   731  007AA6  C6                 	db	198
   732  007AA7  CE                 	db	206
   733  007AA8  FC                 	db	252
   734  007AA9  F8                 	db	248
   735  007AAA  00                 	db	0
   736  007AAB  00                 	db	0
   737  007AAC  00                 	db	0
   738  007AAD  00                 	db	0
   739  007AAE  FE                 	db	254
   740  007AAF  FE                 	db	254
   741  007AB0  C0                 	db	192
   742  007AB1  C0                 	db	192
   743  007AB2  FE                 	db	254
   744  007AB3  FE                 	db	254
   745  007AB4  C0                 	db	192
   746  007AB5  C0                 	db	192
   747  007AB6  C0                 	db	192
   748  007AB7  FE                 	db	254
   749  007AB8  FE                 	db	254
   750  007AB9  00                 	db	0
   751  007ABA  00                 	db	0
   752  007ABB  00                 	db	0
   753  007ABC  00                 	db	0
   754  007ABD  FC                 	db	252
   755  007ABE  FC                 	db	252
   756  007ABF  C0                 	db	192
   757  007AC0  C0                 	db	192
   758  007AC1  F8                 	db	248
   759  007AC2  F8                 	db	248
   760  007AC3  C0                 	db	192
   761  007AC4  C0                 	db	192
   762  007AC5  C0                 	db	192
   763  007AC6  C0                 	db	192
   764  007AC7  C0                 	db	192
   765  007AC8  00                 	db	0
   766  007AC9  00                 	db	0
   767  007ACA  00                 	db	0
   768  007ACB  00                 	db	0
   769  007ACC  3C                 	db	60
   770  007ACD  7E                 	db	126
   771  007ACE  67                 	db	103
   772  007ACF  C3                 	db	195
   773  007AD0  C0                 	db	192
   774  007AD1  CF                 	db	207
   775  007AD2  CF                 	db	207
   776  007AD3  C3                 	db	195
   777  007AD4  63                 	db	99
   778  007AD5  7F                 	db	127
   779  007AD6  3C                 	db	60
   780  007AD7  00                 	db	0
   781  007AD8  00                 	db	0
   782  007AD9  00                 	db	0
   783  007ADA  00                 	db	0
   784  007ADB  C6                 	db	198
   785  007ADC  C6                 	db	198
   786  007ADD  C6                 	db	198
   787  007ADE  C6                 	db	198
   788  007ADF  FE                 	db	254
   789  007AE0  FE                 	db	254
   790  007AE1  C6                 	db	198
   791  007AE2  C6                 	db	198
   792  007AE3  C6                 	db	198
   793  007AE4  C6                 	db	198
   794  007AE5  C6                 	db	198
   795  007AE6  00                 	db	0
   796  007AE7  00                 	db	0
   797  007AE8  00                 	db	0
   798  007AE9  00                 	db	0
   799  007AEA  C0                 	db	192
   800  007AEB  C0                 	db	192
   801  007AEC  C0                 	db	192
   802  007AED  C0                 	db	192
   803  007AEE  C0                 	db	192
   804  007AEF  C0                 	db	192
   805  007AF0  C0                 	db	192
   806  007AF1  C0                 	db	192
   807  007AF2  C0                 	db	192
   808  007AF3  C0                 	db	192
   809  007AF4  C0                 	db	192
   810  007AF5  00                 	db	0
   811  007AF6  00                 	db	0
   812  007AF7  00                 	db	0
   813  007AF8  00                 	db	0
   814  007AF9  0C                 	db	12
   815  007AFA  0C                 	db	12
   816  007AFB  0C                 	db	12
   817  007AFC  0C                 	db	12
   818  007AFD  0C                 	db	12
   819  007AFE  0C                 	db	12
   820  007AFF  0C                 	db	12
   821  007B00  CC                 	db	204
   822  007B01  CC                 	db	204
   823  007B02  FC                 	db	252
   824  007B03  78                 	db	120
   825  007B04  00                 	db	0
   826  007B05  00                 	db	0
   827  007B06  00                 	db	0
   828  007B07  00                 	db	0
   829  007B08  C3                 	db	195
   830  007B09  C6                 	db	198
   831  007B0A  CC                 	db	204
   832  007B0B  CC                 	db	204
   833  007B0C  D8                 	db	216
   834  007B0D  FC                 	db	252
   835  007B0E  EC                 	db	236
   836  007B0F  C6                 	db	198
   837  007B10  C6                 	db	198
   838  007B11  C3                 	db	195
   839  007B12  C3                 	db	195
   840  007B13  00                 	db	0
   841  007B14  00                 	db	0
   842  007B15  00                 	db	0
   843  007B16  00                 	db	0
   844  007B17  C0                 	db	192
   845  007B18  C0                 	db	192
   846  007B19  C0                 	db	192
   847  007B1A  C0                 	db	192
   848  007B1B  C0                 	db	192
   849  007B1C  C0                 	db	192
   850  007B1D  C0                 	db	192
   851  007B1E  C0                 	db	192
   852  007B1F  C0                 	db	192
   853  007B20  FE                 	db	254
   854  007B21  FE                 	db	254
   855  007B22  00                 	db	0
   856  007B23  00                 	db	0
   857  007B24  00                 	db	0
   858  007B25  00                 	db	0
   859  007B26  00                 	db	0
   860  007B27  E3                 	db	227
   861  007B28  80                 	db	128
   862  007B29  E3                 	db	227
   863  007B2A  80                 	db	128
   864  007B2B  E3                 	db	227
   865  007B2C  80                 	db	128
   866  007B2D  F7                 	db	247
   867  007B2E  80                 	db	128
   868  007B2F  D5                 	db	213
   869  007B30  80                 	db	128
   870  007B31  D5                 	db	213
   871  007B32  80                 	db	128
   872  007B33  D5                 	db	213
   873  007B34  80                 	db	128
   874  007B35  D5                 	db	213
   875  007B36  80                 	db	128
   876  007B37  DD                 	db	221
   877  007B38  80                 	db	128
   878  007B39  D9                 	db	217
   879  007B3A  80                 	db	128
   880  007B3B  C9                 	db	201
   881  007B3C  80                 	db	128
   882  007B3D  00                 	db	0
   883  007B3E  00                 	db	0
   884  007B3F  00                 	db	0
   885  007B40  00                 	db	0
   886  007B41  00                 	db	0
   887  007B42  00                 	db	0
   888  007B43  00                 	db	0
   889  007B44  C6                 	db	198
   890  007B45  E6                 	db	230
   891  007B46  E6                 	db	230
   892  007B47  E6                 	db	230
   893  007B48  F6                 	db	246
   894  007B49  D6                 	db	214
   895  007B4A  DE                 	db	222
   896  007B4B  DE                 	db	222
   897  007B4C  CE                 	db	206
   898  007B4D  CE                 	db	206
   899  007B4E  C6                 	db	198
   900  007B4F  00                 	db	0
   901  007B50  00                 	db	0
   902  007B51  00                 	db	0
   903  007B52  00                 	db	0
   904  007B53  3C                 	db	60
   905  007B54  7E                 	db	126
   906  007B55  67                 	db	103
   907  007B56  C3                 	db	195
   908  007B57  C3                 	db	195
   909  007B58  C3                 	db	195
   910  007B59  C3                 	db	195
   911  007B5A  C3                 	db	195
   912  007B5B  66                 	db	102
   913  007B5C  7E                 	db	126
   914  007B5D  3C                 	db	60
   915  007B5E  00                 	db	0
   916  007B5F  00                 	db	0
   917  007B60  00                 	db	0
   918  007B61  00                 	db	0
   919  007B62  FC                 	db	252
   920  007B63  FE                 	db	254
   921  007B64  C6                 	db	198
   922  007B65  C6                 	db	198
   923  007B66  C6                 	db	198
   924  007B67  FE                 	db	254
   925  007B68  FC                 	db	252
   926  007B69  C0                 	db	192
   927  007B6A  C0                 	db	192
   928  007B6B  C0                 	db	192
   929  007B6C  C0                 	db	192
   930  007B6D  00                 	db	0
   931  007B6E  00                 	db	0
   932  007B6F  00                 	db	0
   933  007B70  00                 	db	0
   934  007B71  00                 	db	0
   935  007B72  3C                 	db	60
   936  007B73  00                 	db	0
   937  007B74  7E                 	db	126
   938  007B75  00                 	db	0
   939  007B76  E7                 	db	231
   940  007B77  00                 	db	0
   941  007B78  C3                 	db	195
   942  007B79  00                 	db	0
   943  007B7A  C3                 	db	195
   944  007B7B  00                 	db	0
   945  007B7C  C3                 	db	195
   946  007B7D  00                 	db	0
   947  007B7E  C3                 	db	195
   948  007B7F  00                 	db	0
   949  007B80  CB                 	db	203
   950  007B81  00                 	db	0
   951  007B82  66                 	db	102
   952  007B83  00                 	db	0
   953  007B84  7F                 	db	127
   954  007B85  00                 	db	0
   955  007B86  3D                 	db	61
   956  007B87  80                 	db	128
   957  007B88  00                 	db	0
   958  007B89  80                 	db	128
   959  007B8A  00                 	db	0
   960  007B8B  00                 	db	0
   961  007B8C  00                 	db	0
   962  007B8D  00                 	db	0
   963  007B8E  00                 	db	0
   964  007B8F  FC                 	db	252
   965  007B90  FE                 	db	254
   966  007B91  C6                 	db	198
   967  007B92  C6                 	db	198
   968  007B93  FE                 	db	254
   969  007B94  FC                 	db	252
   970  007B95  CC                 	db	204
   971  007B96  C6                 	db	198
   972  007B97  C6                 	db	198
   973  007B98  C6                 	db	198
   974  007B99  C3                 	db	195
   975  007B9A  00                 	db	0
   976  007B9B  00                 	db	0
   977  007B9C  00                 	db	0
   978  007B9D  00                 	db	0
   979  007B9E  7C                 	db	124
   980  007B9F  FE                 	db	254
   981  007BA0  C6                 	db	198
   982  007BA1  C6                 	db	198
   983  007BA2  F0                 	db	240
   984  007BA3  7C                 	db	124
   985  007BA4  0E                 	db	14
   986  007BA5  C6                 	db	198
   987  007BA6  C6                 	db	198
   988  007BA7  FE                 	db	254
   989  007BA8  7C                 	db	124
   990  007BA9  00                 	db	0
   991  007BAA  00                 	db	0
   992  007BAB  00                 	db	0
   993  007BAC  00                 	db	0
   994  007BAD  FF                 	db	255
   995  007BAE  FF                 	db	255
   996  007BAF  18                 	db	24
   997  007BB0  18                 	db	24
   998  007BB1  18                 	db	24
   999  007BB2  18                 	db	24
  1000  007BB3  18                 	db	24
  1001  007BB4  18                 	db	24
  1002  007BB5  18                 	db	24
  1003  007BB6  18                 	db	24
  1004  007BB7  18                 	db	24
  1005  007BB8  00                 	db	0
  1006  007BB9  00                 	db	0
  1007  007BBA  00                 	db	0
  1008  007BBB  00                 	db	0
  1009  007BBC  C6                 	db	198
  1010  007BBD  C6                 	db	198
  1011  007BBE  C6                 	db	198
  1012  007BBF  C6                 	db	198
  1013  007BC0  C6                 	db	198
  1014  007BC1  C6                 	db	198
  1015  007BC2  C6                 	db	198
  1016  007BC3  C6                 	db	198
  1017  007BC4  C6                 	db	198
  1018  007BC5  7E                 	db	126
  1019  007BC6  38                 	db	56
  1020  007BC7  00                 	db	0
  1021  007BC8  00                 	db	0
  1022  007BC9  00                 	db	0
  1023  007BCA  00                 	db	0
  1024  007BCB  00                 	db	0
  1025  007BCC  C1                 	db	193
  1026  007BCD  80                 	db	128
  1027  007BCE  C1                 	db	193
  1028  007BCF  80                 	db	128
  1029  007BD0  63                 	db	99
  1030  007BD1  00                 	db	0
  1031  007BD2  63                 	db	99
  1032  007BD3  00                 	db	0
  1033  007BD4  63                 	db	99
  1034  007BD5  00                 	db	0
  1035  007BD6  36                 	db	54
  1036  007BD7  00                 	db	0
  1037  007BD8  36                 	db	54
  1038  007BD9  00                 	db	0
  1039  007BDA  36                 	db	54
  1040  007BDB  00                 	db	0
  1041  007BDC  1C                 	db	28
  1042  007BDD  00                 	db	0
  1043  007BDE  1C                 	db	28
  1044  007BDF  00                 	db	0
  1045  007BE0  1C                 	db	28
  1046  007BE1  00                 	db	0
  1047  007BE2  00                 	db	0
  1048  007BE3  00                 	db	0
  1049  007BE4  00                 	db	0
  1050  007BE5  00                 	db	0
  1051  007BE6  00                 	db	0
  1052  007BE7  00                 	db	0
  1053  007BE8  00                 	db	0
  1054  007BE9  00                 	db	0
  1055  007BEA  C4                 	db	196
  1056  007BEB  60                 	db	96
  1057  007BEC  C4                 	db	196
  1058  007BED  60                 	db	96
  1059  007BEE  CA                 	db	202
  1060  007BEF  60                 	db	96
  1061  007BF0  6A                 	db	106
  1062  007BF1  C0                 	db	192
  1063  007BF2  6A                 	db	106
  1064  007BF3  C0                 	db	192
  1065  007BF4  6A                 	db	106
  1066  007BF5  C0                 	db	192
  1067  007BF6  6A                 	db	106
  1068  007BF7  C0                 	db	192
  1069  007BF8  6A                 	db	106
  1070  007BF9  C0                 	db	192
  1071  007BFA  31                 	db	49
  1072  007BFB  80                 	db	128
  1073  007BFC  31                 	db	49
  1074  007BFD  80                 	db	128
  1075  007BFE  31                 	db	49
  1076  007BFF  80                 	db	128
  1077  007C00  00                 	db	0
  1078  007C01  00                 	db	0
  1079  007C02  00                 	db	0
  1080  007C03  00                 	db	0
  1081  007C04  00                 	db	0
  1082  007C05  00                 	db	0
  1083  007C06  00                 	db	0
  1084  007C07  00                 	db	0
  1085  007C08  C1                 	db	193
  1086  007C09  80                 	db	128
  1087  007C0A  63                 	db	99
  1088  007C0B  00                 	db	0
  1089  007C0C  36                 	db	54
  1090  007C0D  00                 	db	0
  1091  007C0E  36                 	db	54
  1092  007C0F  00                 	db	0
  1093  007C10  1C                 	db	28
  1094  007C11  00                 	db	0
  1095  007C12  1C                 	db	28
  1096  007C13  00                 	db	0
  1097  007C14  1C                 	db	28
  1098  007C15  00                 	db	0
  1099  007C16  36                 	db	54
  1100  007C17  00                 	db	0
  1101  007C18  36                 	db	54
  1102  007C19  00                 	db	0
  1103  007C1A  63                 	db	99
  1104  007C1B  00                 	db	0
  1105  007C1C  C1                 	db	193
  1106  007C1D  80                 	db	128
  1107  007C1E  00                 	db	0
  1108  007C1F  00                 	db	0
  1109  007C20  00                 	db	0
  1110  007C21  00                 	db	0
  1111  007C22  00                 	db	0
  1112  007C23  00                 	db	0
  1113  007C24  00                 	db	0
  1114  007C25  C3                 	db	195
  1115  007C26  66                 	db	102
  1116  007C27  66                 	db	102
  1117  007C28  3C                 	db	60
  1118  007C29  3C                 	db	60
  1119  007C2A  18                 	db	24
  1120  007C2B  18                 	db	24
  1121  007C2C  18                 	db	24
  1122  007C2D  18                 	db	24
  1123  007C2E  18                 	db	24
  1124  007C2F  18                 	db	24
  1125  007C30  00                 	db	0
  1126  007C31  00                 	db	0
  1127  007C32  00                 	db	0
  1128  007C33  00                 	db	0
  1129  007C34  FE                 	db	254
  1130  007C35  FE                 	db	254
  1131  007C36  06                 	db	6
  1132  007C37  0C                 	db	12
  1133  007C38  18                 	db	24
  1134  007C39  30                 	db	48
  1135  007C3A  30                 	db	48
  1136  007C3B  60                 	db	96
  1137  007C3C  C0                 	db	192
  1138  007C3D  FE                 	db	254
  1139  007C3E  FE                 	db	254
  1140  007C3F  00                 	db	0
  1141  007C40  00                 	db	0
  1142  007C41  00                 	db	0
  1143  007C42  00                 	db	0
  1144  007C43  E0                 	db	224
  1145  007C44  E0                 	db	224
  1146  007C45  C0                 	db	192
  1147  007C46  C0                 	db	192
  1148  007C47  C0                 	db	192
  1149  007C48  C0                 	db	192
  1150  007C49  C0                 	db	192
  1151  007C4A  C0                 	db	192
  1152  007C4B  C0                 	db	192
  1153  007C4C  C0                 	db	192
  1154  007C4D  C0                 	db	192
  1155  007C4E  C0                 	db	192
  1156  007C4F  E0                 	db	224
  1157  007C50  E0                 	db	224
  1158  007C51  00                 	db	0
  1159  007C52  C0                 	db	192
  1160  007C53  C0                 	db	192
  1161  007C54  C0                 	db	192
  1162  007C55  60                 	db	96
  1163  007C56  60                 	db	96
  1164  007C57  60                 	db	96
  1165  007C58  60                 	db	96
  1166  007C59  60                 	db	96
  1167  007C5A  30                 	db	48
  1168  007C5B  30                 	db	48
  1169  007C5C  30                 	db	48
  1170  007C5D  00                 	db	0
  1171  007C5E  00                 	db	0
  1172  007C5F  00                 	db	0
  1173  007C60  00                 	db	0
  1174  007C61  E0                 	db	224
  1175  007C62  E0                 	db	224
  1176  007C63  60                 	db	96
  1177  007C64  60                 	db	96
  1178  007C65  60                 	db	96
  1179  007C66  60                 	db	96
  1180  007C67  60                 	db	96
  1181  007C68  60                 	db	96
  1182  007C69  60                 	db	96
  1183  007C6A  60                 	db	96
  1184  007C6B  60                 	db	96
  1185  007C6C  60                 	db	96
  1186  007C6D  E0                 	db	224
  1187  007C6E  E0                 	db	224
  1188  007C6F  00                 	db	0
  1189  007C70  38                 	db	56
  1190  007C71  38                 	db	56
  1191  007C72  6C                 	db	108
  1192  007C73  6C                 	db	108
  1193  007C74  6C                 	db	108
  1194  007C75  C6                 	db	198
  1195  007C76  00                 	db	0
  1196  007C77  00                 	db	0
  1197  007C78  00                 	db	0
  1198  007C79  00                 	db	0
  1199  007C7A  00                 	db	0
  1200  007C7B  00                 	db	0
  1201  007C7C  00                 	db	0
  1202  007C7D  00                 	db	0
  1203  007C7E  00                 	db	0
  1204  007C7F  00                 	db	0
  1205  007C80  00                 	db	0
  1206  007C81  00                 	db	0
  1207  007C82  00                 	db	0
  1208  007C83  00                 	db	0
  1209  007C84  00                 	db	0
  1210  007C85  00                 	db	0
  1211  007C86  00                 	db	0
  1212  007C87  00                 	db	0
  1213  007C88  00                 	db	0
  1214  007C89  00                 	db	0
  1215  007C8A  00                 	db	0
  1216  007C8B  FE                 	db	254
  1217  007C8C  00                 	db	0
  1218  007C8D  00                 	db	0
  1219  007C8E  C0                 	db	192
  1220  007C8F  60                 	db	96
  1221  007C90  00                 	db	0
  1222  007C91  00                 	db	0
  1223  007C92  00                 	db	0
  1224  007C93  00                 	db	0
  1225  007C94  00                 	db	0
  1226  007C95  00                 	db	0
  1227  007C96  00                 	db	0
  1228  007C97  00                 	db	0
  1229  007C98  00                 	db	0
  1230  007C99  00                 	db	0
  1231  007C9A  00                 	db	0
  1232  007C9B  00                 	db	0
  1233  007C9C  00                 	db	0
  1234  007C9D  00                 	db	0
  1235  007C9E  00                 	db	0
  1236  007C9F  00                 	db	0
  1237  007CA0  78                 	db	120
  1238  007CA1  FC                 	db	252
  1239  007CA2  CC                 	db	204
  1240  007CA3  3C                 	db	60
  1241  007CA4  FC                 	db	252
  1242  007CA5  CC                 	db	204
  1243  007CA6  FC                 	db	252
  1244  007CA7  6C                 	db	108
  1245  007CA8  00                 	db	0
  1246  007CA9  00                 	db	0
  1247  007CAA  00                 	db	0
  1248  007CAB  00                 	db	0
  1249  007CAC  C0                 	db	192
  1250  007CAD  C0                 	db	192
  1251  007CAE  C0                 	db	192
  1252  007CAF  F8                 	db	248
  1253  007CB0  FC                 	db	252
  1254  007CB1  CC                 	db	204
  1255  007CB2  CC                 	db	204
  1256  007CB3  CC                 	db	204
  1257  007CB4  CC                 	db	204
  1258  007CB5  F8                 	db	248
  1259  007CB6  F8                 	db	248
  1260  007CB7  00                 	db	0
  1261  007CB8  00                 	db	0
  1262  007CB9  00                 	db	0
  1263  007CBA  00                 	db	0
  1264  007CBB  00                 	db	0
  1265  007CBC  00                 	db	0
  1266  007CBD  00                 	db	0
  1267  007CBE  70                 	db	112
  1268  007CBF  78                 	db	120
  1269  007CC0  D8                 	db	216
  1270  007CC1  C0                 	db	192
  1271  007CC2  C0                 	db	192
  1272  007CC3  D8                 	db	216
  1273  007CC4  78                 	db	120
  1274  007CC5  70                 	db	112
  1275  007CC6  00                 	db	0
  1276  007CC7  00                 	db	0
  1277  007CC8  00                 	db	0
  1278  007CC9  00                 	db	0
  1279  007CCA  0C                 	db	12
  1280  007CCB  0C                 	db	12
  1281  007CCC  0C                 	db	12
  1282  007CCD  7C                 	db	124
  1283  007CCE  FC                 	db	252
  1284  007CCF  CC                 	db	204
  1285  007CD0  CC                 	db	204
  1286  007CD1  CC                 	db	204
  1287  007CD2  CC                 	db	204
  1288  007CD3  FC                 	db	252
  1289  007CD4  7C                 	db	124
  1290  007CD5  00                 	db	0
  1291  007CD6  00                 	db	0
  1292  007CD7  00                 	db	0
  1293  007CD8  00                 	db	0
  1294  007CD9  00                 	db	0
  1295  007CDA  00                 	db	0
  1296  007CDB  00                 	db	0
  1297  007CDC  70                 	db	112
  1298  007CDD  F8                 	db	248
  1299  007CDE  D8                 	db	216
  1300  007CDF  F8                 	db	248
  1301  007CE0  C0                 	db	192
  1302  007CE1  D8                 	db	216
  1303  007CE2  F8                 	db	248
  1304  007CE3  70                 	db	112
  1305  007CE4  00                 	db	0
  1306  007CE5  00                 	db	0
  1307  007CE6  00                 	db	0
  1308  007CE7  00                 	db	0
  1309  007CE8  30                 	db	48
  1310  007CE9  70                 	db	112
  1311  007CEA  60                 	db	96
  1312  007CEB  F0                 	db	240
  1313  007CEC  F0                 	db	240
  1314  007CED  60                 	db	96
  1315  007CEE  60                 	db	96
  1316  007CEF  60                 	db	96
  1317  007CF0  60                 	db	96
  1318  007CF1  60                 	db	96
  1319  007CF2  60                 	db	96
  1320  007CF3  00                 	db	0
  1321  007CF4  00                 	db	0
  1322  007CF5  00                 	db	0
  1323  007CF6  00                 	db	0
  1324  007CF7  00                 	db	0
  1325  007CF8  00                 	db	0
  1326  007CF9  00                 	db	0
  1327  007CFA  6C                 	db	108
  1328  007CFB  FC                 	db	252
  1329  007CFC  CC                 	db	204
  1330  007CFD  CC                 	db	204
  1331  007CFE  CC                 	db	204
  1332  007CFF  CC                 	db	204
  1333  007D00  FC                 	db	252
  1334  007D01  6C                 	db	108
  1335  007D02  0C                 	db	12
  1336  007D03  CC                 	db	204
  1337  007D04  78                 	db	120
  1338  007D05  00                 	db	0
  1339  007D06  C0                 	db	192
  1340  007D07  C0                 	db	192
  1341  007D08  C0                 	db	192
  1342  007D09  D8                 	db	216
  1343  007D0A  FC                 	db	252
  1344  007D0B  CC                 	db	204
  1345  007D0C  CC                 	db	204
  1346  007D0D  CC                 	db	204
  1347  007D0E  CC                 	db	204
  1348  007D0F  CC                 	db	204
  1349  007D10  CC                 	db	204
  1350  007D11  00                 	db	0
  1351  007D12  00                 	db	0
  1352  007D13  00                 	db	0
  1353  007D14  00                 	db	0
  1354  007D15  C0                 	db	192
  1355  007D16  C0                 	db	192
  1356  007D17  00                 	db	0
  1357  007D18  C0                 	db	192
  1358  007D19  C0                 	db	192
  1359  007D1A  C0                 	db	192
  1360  007D1B  C0                 	db	192
  1361  007D1C  C0                 	db	192
  1362  007D1D  C0                 	db	192
  1363  007D1E  C0                 	db	192
  1364  007D1F  C0                 	db	192
  1365  007D20  00                 	db	0
  1366  007D21  00                 	db	0
  1367  007D22  00                 	db	0
  1368  007D23  00                 	db	0
  1369  007D24  30                 	db	48
  1370  007D25  30                 	db	48
  1371  007D26  00                 	db	0
  1372  007D27  30                 	db	48
  1373  007D28  30                 	db	48
  1374  007D29  30                 	db	48
  1375  007D2A  30                 	db	48
  1376  007D2B  30                 	db	48
  1377  007D2C  30                 	db	48
  1378  007D2D  30                 	db	48
  1379  007D2E  30                 	db	48
  1380  007D2F  30                 	db	48
  1381  007D30  F0                 	db	240
  1382  007D31  E0                 	db	224
  1383  007D32  00                 	db	0
  1384  007D33  C0                 	db	192
  1385  007D34  C0                 	db	192
  1386  007D35  C0                 	db	192
  1387  007D36  CC                 	db	204
  1388  007D37  D8                 	db	216
  1389  007D38  F0                 	db	240
  1390  007D39  F8                 	db	248
  1391  007D3A  D8                 	db	216
  1392  007D3B  D8                 	db	216
  1393  007D3C  CC                 	db	204
  1394  007D3D  CC                 	db	204
  1395  007D3E  00                 	db	0
  1396  007D3F  00                 	db	0
  1397  007D40  00                 	db	0
  1398  007D41  00                 	db	0
  1399  007D42  C0                 	db	192
  1400  007D43  C0                 	db	192
  1401  007D44  C0                 	db	192
  1402  007D45  C0                 	db	192
  1403  007D46  C0                 	db	192
  1404  007D47  C0                 	db	192
  1405  007D48  C0                 	db	192
  1406  007D49  C0                 	db	192
  1407  007D4A  C0                 	db	192
  1408  007D4B  C0                 	db	192
  1409  007D4C  C0                 	db	192
  1410  007D4D  00                 	db	0
  1411  007D4E  00                 	db	0
  1412  007D4F  00                 	db	0
  1413  007D50  00                 	db	0
  1414  007D51  00                 	db	0
  1415  007D52  00                 	db	0
  1416  007D53  00                 	db	0
  1417  007D54  00                 	db	0
  1418  007D55  00                 	db	0
  1419  007D56  00                 	db	0
  1420  007D57  00                 	db	0
  1421  007D58  D9                 	db	217
  1422  007D59  80                 	db	128
  1423  007D5A  FF                 	db	255
  1424  007D5B  C0                 	db	192
  1425  007D5C  CC                 	db	204
  1426  007D5D  C0                 	db	192
  1427  007D5E  CC                 	db	204
  1428  007D5F  C0                 	db	192
  1429  007D60  CC                 	db	204
  1430  007D61  C0                 	db	192
  1431  007D62  CC                 	db	204
  1432  007D63  C0                 	db	192
  1433  007D64  CC                 	db	204
  1434  007D65  C0                 	db	192
  1435  007D66  CC                 	db	204
  1436  007D67  C0                 	db	192
  1437  007D68  00                 	db	0
  1438  007D69  00                 	db	0
  1439  007D6A  00                 	db	0
  1440  007D6B  00                 	db	0
  1441  007D6C  00                 	db	0
  1442  007D6D  00                 	db	0
  1443  007D6E  00                 	db	0
  1444  007D6F  00                 	db	0
  1445  007D70  00                 	db	0
  1446  007D71  00                 	db	0
  1447  007D72  D8                 	db	216
  1448  007D73  FC                 	db	252
  1449  007D74  CC                 	db	204
  1450  007D75  CC                 	db	204
  1451  007D76  CC                 	db	204
  1452  007D77  CC                 	db	204
  1453  007D78  CC                 	db	204
  1454  007D79  CC                 	db	204
  1455  007D7A  00                 	db	0
  1456  007D7B  00                 	db	0
  1457  007D7C  00                 	db	0
  1458  007D7D  00                 	db	0
  1459  007D7E  00                 	db	0
  1460  007D7F  00                 	db	0
  1461  007D80  00                 	db	0
  1462  007D81  78                 	db	120
  1463  007D82  78                 	db	120
  1464  007D83  CC                 	db	204
  1465  007D84  CC                 	db	204
  1466  007D85  CC                 	db	204
  1467  007D86  CC                 	db	204
  1468  007D87  78                 	db	120
  1469  007D88  78                 	db	120
  1470  007D89  00                 	db	0
  1471  007D8A  00                 	db	0
  1472  007D8B  00                 	db	0
  1473  007D8C  00                 	db	0
  1474  007D8D  00                 	db	0
  1475  007D8E  00                 	db	0
  1476  007D8F  00                 	db	0
  1477  007D90  D8                 	db	216
  1478  007D91  FC                 	db	252
  1479  007D92  CC                 	db	204
  1480  007D93  CC                 	db	204
  1481  007D94  CC                 	db	204
  1482  007D95  CC                 	db	204
  1483  007D96  F8                 	db	248
  1484  007D97  D8                 	db	216
  1485  007D98  C0                 	db	192
  1486  007D99  C0                 	db	192
  1487  007D9A  C0                 	db	192
  1488  007D9B  00                 	db	0
  1489  007D9C  00                 	db	0
  1490  007D9D  00                 	db	0
  1491  007D9E  00                 	db	0
  1492  007D9F  6C                 	db	108
  1493  007DA0  FC                 	db	252
  1494  007DA1  CC                 	db	204
  1495  007DA2  CC                 	db	204
  1496  007DA3  CC                 	db	204
  1497  007DA4  CC                 	db	204
  1498  007DA5  FC                 	db	252
  1499  007DA6  6C                 	db	108
  1500  007DA7  0C                 	db	12
  1501  007DA8  0C                 	db	12
  1502  007DA9  0C                 	db	12
  1503  007DAA  00                 	db	0
  1504  007DAB  00                 	db	0
  1505  007DAC  00                 	db	0
  1506  007DAD  00                 	db	0
  1507  007DAE  D0                 	db	208
  1508  007DAF  F0                 	db	240
  1509  007DB0  C0                 	db	192
  1510  007DB1  C0                 	db	192
  1511  007DB2  C0                 	db	192
  1512  007DB3  C0                 	db	192
  1513  007DB4  C0                 	db	192
  1514  007DB5  C0                 	db	192
  1515  007DB6  00                 	db	0
  1516  007DB7  00                 	db	0
  1517  007DB8  00                 	db	0
  1518  007DB9  00                 	db	0
  1519  007DBA  00                 	db	0
  1520  007DBB  00                 	db	0
  1521  007DBC  00                 	db	0
  1522  007DBD  70                 	db	112
  1523  007DBE  F8                 	db	248
  1524  007DBF  C8                 	db	200
  1525  007DC0  E0                 	db	224
  1526  007DC1  38                 	db	56
  1527  007DC2  98                 	db	152
  1528  007DC3  F8                 	db	248
  1529  007DC4  70                 	db	112
  1530  007DC5  00                 	db	0
  1531  007DC6  00                 	db	0
  1532  007DC7  00                 	db	0
  1533  007DC8  00                 	db	0
  1534  007DC9  20                 	db	32
  1535  007DCA  60                 	db	96
  1536  007DCB  60                 	db	96
  1537  007DCC  F0                 	db	240
  1538  007DCD  F0                 	db	240
  1539  007DCE  60                 	db	96
  1540  007DCF  60                 	db	96
  1541  007DD0  60                 	db	96
  1542  007DD1  60                 	db	96
  1543  007DD2  70                 	db	112
  1544  007DD3  70                 	db	112
  1545  007DD4  00                 	db	0
  1546  007DD5  00                 	db	0
  1547  007DD6  00                 	db	0
  1548  007DD7  00                 	db	0
  1549  007DD8  00                 	db	0
  1550  007DD9  00                 	db	0
  1551  007DDA  00                 	db	0
  1552  007DDB  CC                 	db	204
  1553  007DDC  CC                 	db	204
  1554  007DDD  CC                 	db	204
  1555  007DDE  CC                 	db	204
  1556  007DDF  CC                 	db	204
  1557  007DE0  CC                 	db	204
  1558  007DE1  FC                 	db	252
  1559  007DE2  6C                 	db	108
  1560  007DE3  00                 	db	0
  1561  007DE4  00                 	db	0
  1562  007DE5  00                 	db	0
  1563  007DE6  00                 	db	0
  1564  007DE7  00                 	db	0
  1565  007DE8  00                 	db	0
  1566  007DE9  00                 	db	0
  1567  007DEA  C6                 	db	198
  1568  007DEB  C6                 	db	198
  1569  007DEC  6C                 	db	108
  1570  007DED  6C                 	db	108
  1571  007DEE  6C                 	db	108
  1572  007DEF  38                 	db	56
  1573  007DF0  38                 	db	56
  1574  007DF1  38                 	db	56
  1575  007DF2  00                 	db	0
  1576  007DF3  00                 	db	0
  1577  007DF4  00                 	db	0
  1578  007DF5  00                 	db	0
  1579  007DF6  00                 	db	0
  1580  007DF7  00                 	db	0
  1581  007DF8  00                 	db	0
  1582  007DF9  00                 	db	0
  1583  007DFA  00                 	db	0
  1584  007DFB  00                 	db	0
  1585  007DFC  00                 	db	0
  1586  007DFD  DD                 	db	221
  1587  007DFE  80                 	db	128
  1588  007DFF  DD                 	db	221
  1589  007E00  80                 	db	128
  1590  007E01  DD                 	db	221
  1591  007E02  80                 	db	128
  1592  007E03  D5                 	db	213
  1593  007E04  80                 	db	128
  1594  007E05  55                 	db	85
  1595  007E06  00                 	db	0
  1596  007E07  77                 	db	119
  1597  007E08  00                 	db	0
  1598  007E09  77                 	db	119
  1599  007E0A  00                 	db	0
  1600  007E0B  77                 	db	119
  1601  007E0C  00                 	db	0
  1602  007E0D  00                 	db	0
  1603  007E0E  00                 	db	0
  1604  007E0F  00                 	db	0
  1605  007E10  00                 	db	0
  1606  007E11  00                 	db	0
  1607  007E12  00                 	db	0
  1608  007E13  00                 	db	0
  1609  007E14  00                 	db	0
  1610  007E15  00                 	db	0
  1611  007E16  00                 	db	0
  1612  007E17  CC                 	db	204
  1613  007E18  78                 	db	120
  1614  007E19  78                 	db	120
  1615  007E1A  30                 	db	48
  1616  007E1B  30                 	db	48
  1617  007E1C  78                 	db	120
  1618  007E1D  78                 	db	120
  1619  007E1E  CC                 	db	204
  1620  007E1F  00                 	db	0
  1621  007E20  00                 	db	0
  1622  007E21  00                 	db	0
  1623  007E22  00                 	db	0
  1624  007E23  00                 	db	0
  1625  007E24  00                 	db	0
  1626  007E25  00                 	db	0
  1627  007E26  C6                 	db	198
  1628  007E27  C6                 	db	198
  1629  007E28  6C                 	db	108
  1630  007E29  6C                 	db	108
  1631  007E2A  6C                 	db	108
  1632  007E2B  38                 	db	56
  1633  007E2C  38                 	db	56
  1634  007E2D  38                 	db	56
  1635  007E2E  30                 	db	48
  1636  007E2F  F0                 	db	240
  1637  007E30  E0                 	db	224
  1638  007E31  00                 	db	0
  1639  007E32  00                 	db	0
  1640  007E33  00                 	db	0
  1641  007E34  00                 	db	0
  1642  007E35  FC                 	db	252
  1643  007E36  FC                 	db	252
  1644  007E37  18                 	db	24
  1645  007E38  30                 	db	48
  1646  007E39  30                 	db	48
  1647  007E3A  60                 	db	96
  1648  007E3B  FC                 	db	252
  1649  007E3C  FC                 	db	252
  1650  007E3D  00                 	db	0
  1651  007E3E  00                 	db	0
  1652  007E3F  00                 	db	0
  1653  007E40  00                 	db	0
  1654  007E41  30                 	db	48
  1655  007E42  70                 	db	112
  1656  007E43  60                 	db	96
  1657  007E44  60                 	db	96
  1658  007E45  60                 	db	96
  1659  007E46  60                 	db	96
  1660  007E47  C0                 	db	192
  1661  007E48  C0                 	db	192
  1662  007E49  60                 	db	96
  1663  007E4A  60                 	db	96
  1664  007E4B  60                 	db	96
  1665  007E4C  60                 	db	96
  1666  007E4D  70                 	db	112
  1667  007E4E  30                 	db	48
  1668  007E4F  00                 	db	0
  1669  007E50  C0                 	db	192
  1670  007E51  C0                 	db	192
  1671  007E52  C0                 	db	192
  1672  007E53  C0                 	db	192
  1673  007E54  C0                 	db	192
  1674  007E55  C0                 	db	192
  1675  007E56  C0                 	db	192
  1676  007E57  C0                 	db	192
  1677  007E58  C0                 	db	192
  1678  007E59  C0                 	db	192
  1679  007E5A  C0                 	db	192
  1680  007E5B  C0                 	db	192
  1681  007E5C  C0                 	db	192
  1682  007E5D  C0                 	db	192
  1683  007E5E  00                 	db	0
  1684  007E5F  C0                 	db	192
  1685  007E60  E0                 	db	224
  1686  007E61  60                 	db	96
  1687  007E62  60                 	db	96
  1688  007E63  60                 	db	96
  1689  007E64  60                 	db	96
  1690  007E65  30                 	db	48
  1691  007E66  30                 	db	48
  1692  007E67  60                 	db	96
  1693  007E68  60                 	db	96
  1694  007E69  60                 	db	96
  1695  007E6A  60                 	db	96
  1696  007E6B  E0                 	db	224
  1697  007E6C  C0                 	db	192
  1698  007E6D  00                 	db	0
  1699  007E6E  00                 	db	0
  1700  007E6F  00                 	db	0
  1701  007E70  00                 	db	0
  1702  007E71  00                 	db	0
  1703  007E72  E4                 	db	228
  1704  007E73  FC                 	db	252
  1705  007E74  9C                 	db	156
  1706  007E75  00                 	db	0
  1707  007E76  00                 	db	0
  1708  007E77  00                 	db	0
  1709  007E78  00                 	db	0
  1710  007E79  00                 	db	0
  1711  007E7A  00                 	db	0
  1712  007E7B  00                 	db	0
  1713  007E7C                     __end_of_arialNarrow_12ptBitmaps:
  1714                           	callstack 0
  1715  007E7C                     _arialNarrow_12ptDescriptors:
  1716                           	callstack 0
  1717  007E7C  08                 	db	8
  1718  007E7D  0000               	dw	0
  1719  007E7F  02                 	db	2
  1720  007E80  000F               	dw	15
  1721  007E82  05                 	db	5
  1722  007E83  001E               	dw	30
  1723  007E85  07                 	db	7
  1724  007E86  002D               	dw	45
  1725  007E88  07                 	db	7
  1726  007E89  003C               	dw	60
  1727  007E8B  0A                 	db	10
  1728  007E8C  004B               	dw	75
  1729  007E8E  08                 	db	8
  1730  007E8F  0069               	dw	105
  1731  007E91  02                 	db	2
  1732  007E92  0078               	dw	120
  1733  007E94  04                 	db	4
  1734  007E95  0087               	dw	135
  1735  007E97  04                 	db	4
  1736  007E98  0096               	dw	150
  1737  007E9A  05                 	db	5
  1738  007E9B  00A5               	dw	165
  1739  007E9D  06                 	db	6
  1740  007E9E  00B4               	dw	180
  1741  007EA0  02                 	db	2
  1742  007EA1  00C3               	dw	195
  1743  007EA3  04                 	db	4
  1744  007EA4  00D2               	dw	210
  1745  007EA6  02                 	db	2
  1746  007EA7  00E1               	dw	225
  1747  007EA9  04                 	db	4
  1748  007EAA  00F0               	dw	240
  1749  007EAC  06                 	db	6
  1750  007EAD  00FF               	dw	255
  1751  007EAF  04                 	db	4
  1752  007EB0  010E               	dw	270
  1753  007EB2  06                 	db	6
  1754  007EB3  011D               	dw	285
  1755  007EB5  06                 	db	6
  1756  007EB6  012C               	dw	300
  1757  007EB8  07                 	db	7
  1758  007EB9  013B               	dw	315
  1759  007EBB  06                 	db	6
  1760  007EBC  014A               	dw	330
  1761  007EBE  05                 	db	5
  1762  007EBF  0159               	dw	345
  1763  007EC1  05                 	db	5
  1764  007EC2  0168               	dw	360
  1765  007EC4  06                 	db	6
  1766  007EC5  0177               	dw	375
  1767  007EC7  06                 	db	6
  1768  007EC8  0186               	dw	390
  1769  007ECA  02                 	db	2
  1770  007ECB  0195               	dw	405
  1771  007ECD  02                 	db	2
  1772  007ECE  01A4               	dw	420
  1773  007ED0  06                 	db	6
  1774  007ED1  01B3               	dw	435
  1775  007ED3  06                 	db	6
  1776  007ED4  01C2               	dw	450
  1777  007ED6  06                 	db	6
  1778  007ED7  01D1               	dw	465
  1779  007ED9  06                 	db	6
  1780  007EDA  01E0               	dw	480
  1781  007EDC  0D                 	db	13
  1782  007EDD  01EF               	dw	495
  1783  007EDF  09                 	db	9
  1784  007EE0  020D               	dw	525
  1785  007EE2  07                 	db	7
  1786  007EE3  022B               	dw	555
  1787  007EE5  08                 	db	8
  1788  007EE6  023A               	dw	570
  1789  007EE8  07                 	db	7
  1790  007EE9  0249               	dw	585
  1791  007EEB  07                 	db	7
  1792  007EEC  0258               	dw	600
  1793  007EEE  06                 	db	6
  1794  007EEF  0267               	dw	615
  1795  007EF1  08                 	db	8
  1796  007EF2  0276               	dw	630
  1797  007EF4  07                 	db	7
  1798  007EF5  0285               	dw	645
  1799  007EF7  02                 	db	2
  1800  007EF8  0294               	dw	660
  1801  007EFA  06                 	db	6
  1802  007EFB  02A3               	dw	675
  1803  007EFD  08                 	db	8
  1804  007EFE  02B2               	dw	690
  1805  007F00  07                 	db	7
  1806  007F01  02C1               	dw	705
  1807  007F03  09                 	db	9
  1808  007F04  02D0               	dw	720
  1809  007F06  07                 	db	7
  1810  007F07  02EE               	dw	750
  1811  007F09  08                 	db	8
  1812  007F0A  02FD               	dw	765
  1813  007F0C  07                 	db	7
  1814  007F0D  030C               	dw	780
  1815  007F0F  09                 	db	9
  1816  007F10  031B               	dw	795
  1817  007F12  08                 	db	8
  1818  007F13  0339               	dw	825
  1819  007F15  07                 	db	7
  1820  007F16  0348               	dw	840
  1821  007F18  08                 	db	8
  1822  007F19  0357               	dw	855
  1823  007F1B  07                 	db	7
  1824  007F1C  0366               	dw	870
  1825  007F1E  09                 	db	9
  1826  007F1F  0375               	dw	885
  1827  007F21  0B                 	db	11
  1828  007F22  0393               	dw	915
  1829  007F24  09                 	db	9
  1830  007F25  03B1               	dw	945
  1831  007F27  08                 	db	8
  1832  007F28  03CF               	dw	975
  1833  007F2A  07                 	db	7
  1834  007F2B  03DE               	dw	990
  1835  007F2D  03                 	db	3
  1836  007F2E  03ED               	dw	1005
  1837  007F30  04                 	db	4
  1838  007F31  03FC               	dw	1020
  1839  007F33  03                 	db	3
  1840  007F34  040B               	dw	1035
  1841  007F36  07                 	db	7
  1842  007F37  041A               	dw	1050
  1843  007F39  07                 	db	7
  1844  007F3A  0429               	dw	1065
  1845  007F3C  03                 	db	3
  1846  007F3D  0438               	dw	1080
  1847  007F3F  06                 	db	6
  1848  007F40  0447               	dw	1095
  1849  007F42  06                 	db	6
  1850  007F43  0456               	dw	1110
  1851  007F45  05                 	db	5
  1852  007F46  0465               	dw	1125
  1853  007F48  06                 	db	6
  1854  007F49  0474               	dw	1140
  1855  007F4B  05                 	db	5
  1856  007F4C  0483               	dw	1155
  1857  007F4E  04                 	db	4
  1858  007F4F  0492               	dw	1170
  1859  007F51  06                 	db	6
  1860  007F52  04A1               	dw	1185
  1861  007F54  06                 	db	6
  1862  007F55  04B0               	dw	1200
  1863  007F57  02                 	db	2
  1864  007F58  04BF               	dw	1215
  1865  007F5A  04                 	db	4
  1866  007F5B  04CE               	dw	1230
  1867  007F5D  06                 	db	6
  1868  007F5E  04DD               	dw	1245
  1869  007F60  02                 	db	2
  1870  007F61  04EC               	dw	1260
  1871  007F63  0A                 	db	10
  1872  007F64  04FB               	dw	1275
  1873  007F66  06                 	db	6
  1874  007F67  0519               	dw	1305
  1875  007F69  06                 	db	6
  1876  007F6A  0528               	dw	1320
  1877  007F6C  06                 	db	6
  1878  007F6D  0537               	dw	1335
  1879  007F6F  06                 	db	6
  1880  007F70  0546               	dw	1350
  1881  007F72  04                 	db	4
  1882  007F73  0555               	dw	1365
  1883  007F75  05                 	db	5
  1884  007F76  0564               	dw	1380
  1885  007F78  04                 	db	4
  1886  007F79  0573               	dw	1395
  1887  007F7B  06                 	db	6
  1888  007F7C  0582               	dw	1410
  1889  007F7E  07                 	db	7
  1890  007F7F  0591               	dw	1425
  1891  007F81  09                 	db	9
  1892  007F82  05A0               	dw	1440
  1893  007F84  06                 	db	6
  1894  007F85  05BE               	dw	1470
  1895  007F87  07                 	db	7
  1896  007F88  05CD               	dw	1485
  1897  007F8A  06                 	db	6
  1898  007F8B  05DC               	dw	1500
  1899  007F8D  04                 	db	4
  1900  007F8E  05EB               	dw	1515
  1901  007F90  02                 	db	2
  1902  007F91  05FA               	dw	1530
  1903  007F93  04                 	db	4
  1904  007F94  0609               	dw	1545
  1905  007F96  06                 	db	6
  1906  007F97  0618               	dw	1560
  1907  007F99                     __end_of_arialNarrow_12ptDescriptors:
  1908                           	callstack 0
  1909  007F99                     _arialNarrow_12ptFontInfo:
  1910                           	callstack 0
  1911  007F99  0F                 	db	15
  1912  007F9A  20                 	db	32
  1913  007F9B  7E                 	db	126
  1914  007F9C  7C                 	db	low _arialNarrow_12ptDescriptors
  1915  007F9D  7E                 	db	high _arialNarrow_12ptDescriptors
  1916  007F9E  55                 	db	low _arialNarrow_12ptBitmaps
  1917  007F9F  78                 	db	high _arialNarrow_12ptBitmaps
  1918  007FA0                     __end_of_arialNarrow_12ptFontInfo:
  1919                           	callstack 0
  1920  0000                     _ANSB2	set	31178
  1921  0000                     _ANSB1	set	31177
  1922  0000                     _WPUB	set	3937
  1923  0000                     _PORTBbits	set	3969
  1924  0000                     _ADRESL	set	4035
  1925  0000                     _ADRESH	set	4036
  1926  0000                     _ADCON0	set	4034
  1927  0000                     _TRISA	set	3986
  1928  0000                     _PORTA	set	3968
  1929  0000                     _ADCON2	set	4032
  1930  0000                     _T2CONbits	set	4026
  1931  0000                     _CCPR2L	set	3943
  1932  0000                     _CCP2CONbits	set	3942
  1933  0000                     _PR2	set	4027
  1934  0000                     _TMR0L	set	4054
  1935  0000                     _TMR0H	set	4055
  1936  0000                     _T0CON	set	4053
  1937  0000                     _OSCCON	set	4051
  1938  0000                     _TMR0IF	set	32658
  1939  0000                     _LATB4	set	31828
  1940  0000                     _LATB3	set	31827
  1941  0000                     _LATB1	set	31825
  1942  0000                     _TRISB4	set	31900
  1943  0000                     _TRISB3	set	31899
  1944  0000                     _INTEDG1	set	32653
  1945  0000                     _RBPU	set	32655
  1946  0000                     _TRISB1	set	31897
  1947  0000                     _LATB2	set	31826
  1948  0000                     _TRISB2	set	31898
  1949  0000                     _INT1IF	set	32640
  1950  0000                     _LATC2	set	31834
  1951  0000                     _LATC5	set	31837
  1952  0000                     _TRISC4	set	31908
  1953  0000                     _TRISC3	set	31907
  1954  0000                     _TRISC2	set	31906
  1955  0000                     _TRISC5	set	31909
  1956  0000                     _LATC3	set	31835
  1957  0000                     _LATC4	set	31836
  1958  0000                     _TMR2IF	set	31985
  1959  0000                     _TRISC1	set	31905
  1960  0000                     _TMR0IE	set	32661
  1961  0000                     _INT1IE	set	32643
  1962  0000                     _GIE	set	32663
  1963  0000                     _PLLEN	set	31966
  1964  007FA0                     STR_10:
  1965  007FA0  50                 	db	80	;'P'
  1966  007FA1  41                 	db	65	;'A'
  1967  007FA2  52                 	db	82	;'R'
  1968  007FA3  41                 	db	65	;'A'
  1969  007FA4  4D                 	db	77	;'M'
  1970  007FA5  45                 	db	69	;'E'
  1971  007FA6  54                 	db	84	;'T'
  1972  007FA7  45                 	db	69	;'E'
  1973  007FA8  52                 	db	82	;'R'
  1974  007FA9  53                 	db	83	;'S'
  1975  007FAA  00                 	db	0
  1976  007FAB                     STR_3:
  1977  007FAB  50                 	db	80	;'P'
  1978  007FAC  61                 	db	97	;'a'
  1979  007FAD  72                 	db	114	;'r'
  1980  007FAE  61                 	db	97	;'a'
  1981  007FAF  6D                 	db	109	;'m'
  1982  007FB0  65                 	db	101	;'e'
  1983  007FB1  74                 	db	116	;'t'
  1984  007FB2  72                 	db	114	;'r'
  1985  007FB3  65                 	db	101	;'e'
  1986  007FB4  73                 	db	115	;'s'
  1987  007FB5  00                 	db	0
  1988  007FB6                     STR_2:
  1989  007FB6  4D                 	db	77	;'M'
  1990  007FB7  65                 	db	101	;'e'
  1991  007FB8  6E                 	db	110	;'n'
  1992  007FB9  75                 	db	117	;'u'
  1993  007FBA  53                 	db	83	;'S'
  1994  007FBB  74                 	db	116	;'t'
  1995  007FBC  61                 	db	97	;'a'
  1996  007FBD  72                 	db	114	;'r'
  1997  007FBE  74                 	db	116	;'t'
  1998  007FBF  00                 	db	0
  1999  007FC0                     STR_4:
  2000  007FC0  31                 	db	49	;'1'
  2001  007FC1  20                 	db	32
  2002  007FC2  50                 	db	80	;'P'
  2003  007FC3  6C                 	db	108	;'l'
  2004  007FC4  61                 	db	97	;'a'
  2005  007FC5  79                 	db	121	;'y'
  2006  007FC6  65                 	db	101	;'e'
  2007  007FC7  72                 	db	114	;'r'
  2008  007FC8  00                 	db	0
  2009  007FC9                     STR_5:
  2010  007FC9  32                 	db	50	;'2'
  2011  007FCA  20                 	db	32
  2012  007FCB  50                 	db	80	;'P'
  2013  007FCC  6C                 	db	108	;'l'
  2014  007FCD  61                 	db	97	;'a'
  2015  007FCE  79                 	db	121	;'y'
  2016  007FCF  65                 	db	101	;'e'
  2017  007FD0  72                 	db	114	;'r'
  2018  007FD1  00                 	db	0
  2019  007FD2                     STR_9:
  2020  007FD2  57                 	db	87	;'W'
  2021  007FD3  45                 	db	69	;'E'
  2022  007FD4  4C                 	db	76	;'L'
  2023  007FD5  43                 	db	67	;'C'
  2024  007FD6  4F                 	db	79	;'O'
  2025  007FD7  4D                 	db	77	;'M'
  2026  007FD8  45                 	db	69	;'E'
  2027  007FD9  00                 	db	0
  2028  007FDA                     STR_6:
  2029  007FDA  51                 	db	81	;'Q'
  2030  007FDB  55                 	db	85	;'U'
  2031  007FDC  49                 	db	73	;'I'
  2032  007FDD  54                 	db	84	;'T'
  2033  007FDE  54                 	db	84	;'T'
  2034  007FDF  45                 	db	69	;'E'
  2035  007FE0  52                 	db	82	;'R'
  2036  007FE1  00                 	db	0
  2037  007FE2                     STR_11:
  2038  007FE2  49                 	db	73	;'I'
  2039  007FE3  4E                 	db	78	;'N'
  2040  007FE4  47                 	db	71	;'G'
  2041  007FE5  41                 	db	65	;'A'
  2042  007FE6  4D                 	db	77	;'M'
  2043  007FE7  45                 	db	69	;'E'
  2044  007FE8  00                 	db	0
  2045  007FE9                     STR_12:
  2046  007FE9  58                 	db	88	;'X'
  2047  007FEA  3A                 	db	58	;':'
  2048  007FEB  20                 	db	32
  2049  007FEC  25                 	db	37
  2050  007FED  64                 	db	100	;'d'
  2051  007FEE  00                 	db	0
  2052  007FEF                     STR_13:
  2053  007FEF  59                 	db	89	;'Y'
  2054  007FF0  3A                 	db	58	;':'
  2055  007FF1  20                 	db	32
  2056  007FF2  25                 	db	37
  2057  007FF3  64                 	db	100	;'d'
  2058  007FF4  00                 	db	0
  2059  007FF5                     STR_7:
  2060  007FF5  3C                 	db	60	;'<'
  2061  007FF6  2D                 	db	45
  2062  007FF7  2D                 	db	45
  2063  007FF8  00                 	db	0
  2064  007FF9                     STR_8:
  2065  007FF9  2D                 	db	45
  2066  007FFA  2D                 	db	45
  2067  007FFB  3E                 	db	62	;'>'
  2068  007FFC  00                 	db	0
  2069  007FFD                     STR_1:
  2070  007FFD  4F                 	db	79	;'O'
  2071  007FFE  00                 	db	0
  2072  007FFF  00                 	db	0	; dummy byte at the end
  2073  0000                     
  2074                           ; #config settings
  2075                           
  2076                           	psect	cinit
  2077  004ECE                     __pcinit:
  2078                           	callstack 0
  2079  004ECE                     start_initialization:
  2080                           	callstack 0
  2081  004ECE                     __initialization:
  2082                           	callstack 0
  2083                           
  2084                           ; Clear objects allocated to BANK1 (209 bytes)
  2085  004ECE  EE01  F000         	lfsr	0,__pbssBANK1
  2086  004ED2  0ED1               	movlw	209
  2087  004ED4                     clear_0:
  2088  004ED4  6AEE               	clrf	postinc0,c
  2089  004ED6  06E8               	decf	wreg,f,c
  2090  004ED8  E1FD               	bnz	clear_0
  2091                           
  2092                           ; Clear objects allocated to BANK0 (75 bytes)
  2093  004EDA  EE00  F0B5         	lfsr	0,__pbssBANK0
  2094  004EDE  0E4B               	movlw	75
  2095  004EE0                     clear_1:
  2096  004EE0  6AEE               	clrf	postinc0,c
  2097  004EE2  06E8               	decf	wreg,f,c
  2098  004EE4  E1FD               	bnz	clear_1
  2099                           
  2100                           ; Clear objects allocated to COMRAM (7 bytes)
  2101  004EE6  EE00  F047         	lfsr	0,__pbssCOMRAM
  2102  004EEA  0E07               	movlw	7
  2103  004EEC                     clear_2:
  2104  004EEC  6AEE               	clrf	postinc0,c
  2105  004EEE  06E8               	decf	wreg,f,c
  2106  004EF0  E1FD               	bnz	clear_2
  2107  004EF2                     end_of_initialization:
  2108                           	callstack 0
  2109  004EF2                     __end_of__initialization:
  2110                           	callstack 0
  2111  004EF2  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2112  004EF4  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2113  004EF6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2114  004EF8  6EF8               	movwf	tblptru,c
  2115  004EFA  0100               	movlb	0
  2116  004EFC  EF1D  F028         	goto	_main	;jump to C main() function
  2117                           
  2118                           	psect	bssCOMRAM
  2119  000047                     __pbssCOMRAM:
  2120                           	callstack 0
  2121  000047                     _width:
  2122                           	callstack 0
  2123  000047                     	ds	2
  2124  000049                     _prec:
  2125                           	callstack 0
  2126  000049                     	ds	2
  2127  00004B                     _flags:
  2128                           	callstack 0
  2129  00004B                     	ds	2
  2130  00004D                     _gameControllerState:
  2131                           	callstack 0
  2132  00004D                     	ds	1
  2133                           
  2134                           	psect	bssBANK0
  2135  0000B5                     __pbssBANK0:
  2136                           	callstack 0
  2137  0000B5                     _theXF:
  2138                           	callstack 0
  2139  0000B5                     	ds	38
  2140  0000DB                     _nout:
  2141                           	callstack 0
  2142  0000DB                     	ds	2
  2143  0000DD                     _displayState:
  2144                           	callstack 0
  2145  0000DD                     	ds	1
  2146  0000DE                     _touchScreenState:
  2147                           	callstack 0
  2148  0000DE                     	ds	1
  2149  0000DF                     _sleepState:
  2150                           	callstack 0
  2151  0000DF                     	ds	1
  2152  0000E0                     _dbuf:
  2153                           	callstack 0
  2154  0000E0                     	ds	32
  2155                           
  2156                           	psect	bssBANK1
  2157  000100                     __pbssBANK1:
  2158                           	callstack 0
  2159  000100                     _g1:
  2160                           	callstack 0
  2161  000100                     	ds	209
  2162                           
  2163                           	psect	cstackBANK1
  2164  0001D1                     __pcstackBANK1:
  2165                           	callstack 0
  2166  0001D1                     Factory_exec@ev:
  2167                           	callstack 0
  2168                           
  2169                           ; 1 bytes @ 0x0
  2170  0001D1                     	ds	1
  2171                           
  2172                           	psect	cstackBANK0
  2173  000060                     __pcstackBANK0:
  2174                           	callstack 0
  2175  000060                     _dtoa$3788:
  2176                           	callstack 0
  2177  000060                     LCD_Bitmap@bfOffBits:
  2178                           	callstack 0
  2179                           
  2180                           ; 4 bytes @ 0x0
  2181  000060                     	ds	2
  2182  000062                     dtoa@p:
  2183                           	callstack 0
  2184                           
  2185                           ; 2 bytes @ 0x2
  2186  000062                     	ds	2
  2187  000064                     LCD_Bitmap@endOfImage:
  2188                           	callstack 0
  2189  000064                     dtoa@w:
  2190                           	callstack 0
  2191                           
  2192                           ; 2 bytes @ 0x4
  2193  000064                     	ds	1
  2194  000065                     LCD_Bitmap@jumpCount:
  2195                           	callstack 0
  2196                           
  2197                           ; 2 bytes @ 0x5
  2198  000065                     	ds	1
  2199  000066                     dtoa@s:
  2200                           	callstack 0
  2201                           
  2202                           ; 2 bytes @ 0x6
  2203  000066                     	ds	1
  2204  000067                     LCD_Bitmap@curYPos:
  2205                           	callstack 0
  2206                           
  2207                           ; 2 bytes @ 0x7
  2208  000067                     	ds	1
  2209  000068                     dtoa@n:
  2210                           	callstack 0
  2211                           
  2212                           ; 8 bytes @ 0x8
  2213  000068                     	ds	1
  2214  000069                     LCD_Bitmap@colorTablePtr:
  2215                           	callstack 0
  2216                           
  2217                           ; 2 bytes @ 0x9
  2218  000069                     	ds	2
  2219  00006B                     LCD_Bitmap@biHeight:
  2220                           	callstack 0
  2221                           
  2222                           ; 2 bytes @ 0xB
  2223  00006B                     	ds	2
  2224  00006D                     LCD_Bitmap@color:
  2225                           	callstack 0
  2226                           
  2227                           ; 2 bytes @ 0xD
  2228  00006D                     	ds	2
  2229  00006F                     LCD_Bitmap@curXPos:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0xF
  2233  00006F                     	ds	1
  2234  000070                     dtoa@i:
  2235                           	callstack 0
  2236                           
  2237                           ; 2 bytes @ 0x10
  2238  000070                     	ds	1
  2239  000071                     LCD_Bitmap@strPtr:
  2240                           	callstack 0
  2241                           
  2242                           ; 2 bytes @ 0x11
  2243  000071                     	ds	1
  2244  000072                     vfpfcnvrt@ll:
  2245                           	callstack 0
  2246                           
  2247                           ; 8 bytes @ 0x12
  2248  000072                     	ds	1
  2249  000073                     LCD_Bitmap@newY:
  2250                           	callstack 0
  2251                           
  2252                           ; 2 bytes @ 0x13
  2253  000073                     	ds	2
  2254  000075                     LCD_Bitmap@pixelCount:
  2255                           	callstack 0
  2256                           
  2257                           ; 1 bytes @ 0x15
  2258  000075                     	ds	1
  2259  000076                     LCD_Bitmap@biWidth:
  2260                           	callstack 0
  2261                           
  2262                           ; 2 bytes @ 0x16
  2263  000076                     	ds	2
  2264  000078                     LCD_Bitmap@jumpColor:
  2265                           	callstack 0
  2266                           
  2267                           ; 2 bytes @ 0x18
  2268  000078                     	ds	2
  2269  00007A                     ?_vfprintf:
  2270                           	callstack 0
  2271  00007A                     LCD_Bitmap@i:
  2272                           	callstack 0
  2273  00007A                     vfprintf@fp:
  2274                           	callstack 0
  2275                           
  2276                           ; 2 bytes @ 0x1A
  2277  00007A                     	ds	2
  2278  00007C                     LCD_ButtonDraw@button:
  2279                           	callstack 0
  2280  00007C                     vfprintf@fmt:
  2281                           	callstack 0
  2282                           
  2283                           ; 2 bytes @ 0x1C
  2284  00007C                     	ds	2
  2285  00007E                     ??_LCD_ButtonDraw:
  2286  00007E                     vfprintf@ap:
  2287                           	callstack 0
  2288                           
  2289                           ; 2 bytes @ 0x1E
  2290  00007E                     	ds	2
  2291  000080                     vfprintf@cfmt:
  2292                           	callstack 0
  2293                           
  2294                           ; 2 bytes @ 0x20
  2295  000080                     	ds	2
  2296  000082                     ?_sprintf:
  2297                           	callstack 0
  2298  000082                     sprintf@s:
  2299                           	callstack 0
  2300                           
  2301                           ; 2 bytes @ 0x22
  2302  000082                     	ds	2
  2303  000084                     sprintf@fmt:
  2304                           	callstack 0
  2305                           
  2306                           ; 2 bytes @ 0x24
  2307  000084                     	ds	4
  2308  000088                     sprintf@ap:
  2309                           	callstack 0
  2310                           
  2311                           ; 2 bytes @ 0x28
  2312  000088                     	ds	2
  2313  00008A                     LCD_ButtonDraw@tempChar:
  2314                           	callstack 0
  2315  00008A                     sprintf@f:
  2316                           	callstack 0
  2317                           
  2318                           ; 6 bytes @ 0x2A
  2319  00008A                     	ds	1
  2320  00008B                     LCD_ButtonDraw@width:
  2321                           	callstack 0
  2322                           
  2323                           ; 2 bytes @ 0x2B
  2324  00008B                     	ds	2
  2325  00008D                     LCD_ButtonDraw@x1:
  2326                           	callstack 0
  2327                           
  2328                           ; 2 bytes @ 0x2D
  2329  00008D                     	ds	2
  2330  00008F                     LCD_ButtonDraw@x2:
  2331                           	callstack 0
  2332                           
  2333                           ; 2 bytes @ 0x2F
  2334  00008F                     	ds	1
  2335  000090                     touchScreenController@g:
  2336                           	callstack 0
  2337                           
  2338                           ; 2 bytes @ 0x30
  2339  000090                     	ds	1
  2340  000091                     LCD_ButtonDraw@y1:
  2341                           	callstack 0
  2342                           
  2343                           ; 2 bytes @ 0x31
  2344  000091                     	ds	1
  2345  000092                     ??_touchScreenController:
  2346                           
  2347                           ; 1 bytes @ 0x32
  2348  000092                     	ds	1
  2349  000093                     LCD_ButtonDraw@y2:
  2350                           	callstack 0
  2351                           
  2352                           ; 2 bytes @ 0x33
  2353  000093                     	ds	2
  2354  000095                     LCD_ButtonDraw@xText:
  2355                           	callstack 0
  2356                           
  2357                           ; 2 bytes @ 0x35
  2358  000095                     	ds	2
  2359  000097                     LCD_ButtonDraw@yText:
  2360                           	callstack 0
  2361                           
  2362                           ; 2 bytes @ 0x37
  2363  000097                     	ds	1
  2364  000098                     touchScreenController@s:
  2365                           	callstack 0
  2366                           
  2367                           ; 20 bytes @ 0x38
  2368  000098                     	ds	1
  2369  000099                     LCD_ButtonDraw@i:
  2370                           	callstack 0
  2371                           
  2372                           ; 1 bytes @ 0x39
  2373  000099                     	ds	1
  2374  00009A                     LCD_ButtonDraw@bmpPtr:
  2375                           	callstack 0
  2376                           
  2377                           ; 2 bytes @ 0x3A
  2378  00009A                     	ds	2
  2379  00009C                     Menu_welcomeDraw@g:
  2380                           	callstack 0
  2381  00009C                     Menu_parametersDraw@g:
  2382                           	callstack 0
  2383  00009C                     Menu_inGameDraw@g:
  2384                           	callstack 0
  2385                           
  2386                           ; 2 bytes @ 0x3C
  2387  00009C                     	ds	2
  2388  00009E                     displayController@g:
  2389                           	callstack 0
  2390                           
  2391                           ; 2 bytes @ 0x3E
  2392  00009E                     	ds	2
  2393  0000A0                     displayInit@g:
  2394                           	callstack 0
  2395  0000A0                     displaySM@g:
  2396                           	callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x40
  2399  0000A0                     	ds	2
  2400  0000A2                     ??_displaySM:
  2401  0000A2                     sleepInit@g:
  2402                           	callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x42
  2405  0000A2                     	ds	2
  2406  0000A4                     ??_Factory_init:
  2407  0000A4                     displaySM@ev:
  2408                           	callstack 0
  2409                           
  2410                           ; 1 bytes @ 0x44
  2411  0000A4                     	ds	8
  2412  0000AC                     touchScreenController@valueY:
  2413                           	callstack 0
  2414                           
  2415                           ; 2 bytes @ 0x4C
  2416  0000AC                     	ds	2
  2417  0000AE                     touchScreenController@valueX:
  2418                           	callstack 0
  2419                           
  2420                           ; 2 bytes @ 0x4E
  2421  0000AE                     	ds	2
  2422  0000B0                     touchScreenSM@g:
  2423                           	callstack 0
  2424                           
  2425                           ; 2 bytes @ 0x50
  2426  0000B0                     	ds	2
  2427  0000B2                     ??_touchScreenSM:
  2428                           
  2429                           ; 1 bytes @ 0x52
  2430  0000B2                     	ds	2
  2431  0000B4                     touchScreenSM@ev:
  2432                           	callstack 0
  2433                           
  2434                           ; 1 bytes @ 0x54
  2435  0000B4                     	ds	1
  2436                           
  2437                           	psect	cstackCOMRAM
  2438  000001                     __pcstackCOMRAM:
  2439                           	callstack 0
  2440  000001                     ?i2___wmul:
  2441                           	callstack 0
  2442  000001                     ?i2___awmod:
  2443                           	callstack 0
  2444  000001                     i2ENTERCRITICAL@inISR:
  2445                           	callstack 0
  2446  000001                     i2LEAVECRITICAL@inISR:
  2447                           	callstack 0
  2448  000001                     i2___wmul@multiplier:
  2449                           	callstack 0
  2450  000001                     i2___awmod@dividend:
  2451                           	callstack 0
  2452                           
  2453                           ; 2 bytes @ 0x0
  2454  000001                     	ds	1
  2455  000002                     XF_unscheduleTimer@inISR:
  2456                           	callstack 0
  2457                           
  2458                           ; 1 bytes @ 0x1
  2459  000002                     	ds	1
  2460  000003                     XF_unscheduleTimer@id:
  2461                           	callstack 0
  2462  000003                     i2___wmul@multiplicand:
  2463                           	callstack 0
  2464  000003                     i2___awmod@divisor:
  2465                           	callstack 0
  2466                           
  2467                           ; 2 bytes @ 0x2
  2468  000003                     	ds	2
  2469  000005                     i2___awmod@counter:
  2470                           	callstack 0
  2471  000005                     i2___wmul@product:
  2472                           	callstack 0
  2473                           
  2474                           ; 2 bytes @ 0x4
  2475  000005                     	ds	1
  2476  000006                     i2___awmod@sign:
  2477                           	callstack 0
  2478                           
  2479                           ; 1 bytes @ 0x5
  2480  000006                     	ds	1
  2481  000007                     i2XF_pushEvent@inISR:
  2482                           	callstack 0
  2483                           
  2484                           ; 1 bytes @ 0x6
  2485  000007                     	ds	1
  2486  000008                     i2XF_pushEvent@ev:
  2487                           	callstack 0
  2488                           
  2489                           ; 1 bytes @ 0x7
  2490  000008                     	ds	1
  2491  000009                     i2XF_pushEvent@temp:
  2492                           	callstack 0
  2493                           
  2494                           ; 1 bytes @ 0x8
  2495  000009                     	ds	1
  2496  00000A                     
  2497                           ; 1 bytes @ 0x9
  2498  00000A                     	ds	2
  2499  00000C                     XF_decrementAndQueueTimers@i:
  2500                           	callstack 0
  2501                           
  2502                           ; 2 bytes @ 0xB
  2503  00000C                     	ds	2
  2504  00000E                     ??_isr:
  2505                           
  2506                           ; 1 bytes @ 0xD
  2507  00000E                     	ds	4
  2508  000012                     ??_LCD_Lowlevel_Init:
  2509  000012                     ??_sleepController:
  2510  000012                     ?_LCD_Read:
  2511                           	callstack 0
  2512  000012                     ?_strlen:
  2513                           	callstack 0
  2514  000012                     ?_RGB2LCD:
  2515                           	callstack 0
  2516  000012                     ?___awdiv:
  2517                           	callstack 0
  2518  000012                     ?___awmod:
  2519                           	callstack 0
  2520  000012                     ?___lwmod:
  2521                           	callstack 0
  2522  000012                     ?___aodiv:
  2523                           	callstack 0
  2524  000012                     ?___aomod:
  2525                           	callstack 0
  2526  000012                     configMeasure@channel:
  2527                           	callstack 0
  2528  000012                     ENTERCRITICAL@inISR:
  2529                           	callstack 0
  2530  000012                     LEAVECRITICAL@inISR:
  2531                           	callstack 0
  2532  000012                     Ball_init@b:
  2533                           	callstack 0
  2534  000012                     Paddle_init@p:
  2535                           	callstack 0
  2536  000012                     GameParameters_setBackLight@s:
  2537                           	callstack 0
  2538  000012                     GameParameters_setX@s:
  2539                           	callstack 0
  2540  000012                     GameParameters_setY@s:
  2541                           	callstack 0
  2542  000012                     LCD_Fill@color:
  2543                           	callstack 0
  2544  000012                     LCD_SliderCreate@posX:
  2545                           	callstack 0
  2546  000012                     LCD_ButtonCreate@posX:
  2547                           	callstack 0
  2548  000012                     LCD_InButton@button:
  2549                           	callstack 0
  2550  000012                     LCD_InSlider@slider:
  2551                           	callstack 0
  2552  000012                     LCD_DrawRect@posX1:
  2553                           	callstack 0
  2554  000012                     RGB2LCD@colorTableEntry:
  2555                           	callstack 0
  2556  000012                     LCD_Read@posX:
  2557                           	callstack 0
  2558  000012                     ___awdiv@dividend:
  2559                           	callstack 0
  2560  000012                     ___awmod@dividend:
  2561                           	callstack 0
  2562  000012                     ___lwmod@dividend:
  2563                           	callstack 0
  2564  000012                     fputc@c:
  2565                           	callstack 0
  2566  000012                     strlen@s:
  2567                           	callstack 0
  2568  000012                     ___aodiv@dividend:
  2569                           	callstack 0
  2570  000012                     ___aomod@dividend:
  2571                           	callstack 0
  2572                           
  2573                           ; 8 bytes @ 0x11
  2574  000012                     	ds	1
  2575  000013                     XF_scheduleTimer@tm:
  2576                           	callstack 0
  2577  000013                     LCD_Lowlevel_Init@i:
  2578                           	callstack 0
  2579                           
  2580                           ; 4 bytes @ 0x12
  2581  000013                     	ds	1
  2582  000014                     ??_sleepSM:
  2583  000014                     ??_RGB2LCD:
  2584  000014                     LCD_Fill@colorH:
  2585                           	callstack 0
  2586  000014                     Paddle_init@team:
  2587                           	callstack 0
  2588  000014                     GameParameters_setBackLight@value:
  2589                           	callstack 0
  2590  000014                     GameParameters_setX@value:
  2591                           	callstack 0
  2592  000014                     GameParameters_setY@value:
  2593                           	callstack 0
  2594  000014                     LCD_SliderCreate@posY:
  2595                           	callstack 0
  2596  000014                     LCD_ButtonCreate@posY:
  2597                           	callstack 0
  2598  000014                     LCD_InButton@posX:
  2599                           	callstack 0
  2600  000014                     LCD_InSlider@posX:
  2601                           	callstack 0
  2602  000014                     LCD_DrawRect@posY1:
  2603                           	callstack 0
  2604  000014                     LCD_Read@posY:
  2605                           	callstack 0
  2606  000014                     ___awdiv@divisor:
  2607                           	callstack 0
  2608  000014                     ___awmod@divisor:
  2609                           	callstack 0
  2610  000014                     ___lwmod@divisor:
  2611                           	callstack 0
  2612  000014                     fputc@fp:
  2613                           	callstack 0
  2614  000014                     strlen@a:
  2615                           	callstack 0
  2616                           
  2617                           ; 2 bytes @ 0x13
  2618  000014                     	ds	1
  2619  000015                     LCD_Fill@colorL:
  2620                           	callstack 0
  2621  000015                     XF_scheduleTimer@ev:
  2622                           	callstack 0
  2623                           
  2624                           ; 1 bytes @ 0x14
  2625  000015                     	ds	1
  2626  000016                     ??_LCD_Read:
  2627  000016                     ??_fputc:
  2628  000016                     sleepSM@ev:
  2629                           	callstack 0
  2630  000016                     XF_scheduleTimer@inISR:
  2631                           	callstack 0
  2632  000016                     ___awdiv@counter:
  2633                           	callstack 0
  2634  000016                     ___awmod@counter:
  2635                           	callstack 0
  2636  000016                     ___lwmod@counter:
  2637                           	callstack 0
  2638  000016                     LCD_Fill@column:
  2639                           	callstack 0
  2640  000016                     LCD_SliderCreate@width:
  2641                           	callstack 0
  2642  000016                     LCD_ButtonCreate@width:
  2643                           	callstack 0
  2644  000016                     LCD_InButton@posY:
  2645                           	callstack 0
  2646  000016                     LCD_InSlider@posY:
  2647                           	callstack 0
  2648  000016                     LCD_DrawRect@posX2:
  2649                           	callstack 0
  2650                           
  2651                           ; 2 bytes @ 0x15
  2652  000016                     	ds	1
  2653  000017                     ??_LCD_Init:
  2654  000017                     XF_scheduleTimer@i:
  2655                           	callstack 0
  2656  000017                     ___awdiv@sign:
  2657                           	callstack 0
  2658  000017                     ___awmod@sign:
  2659                           	callstack 0
  2660                           
  2661                           ; 1 bytes @ 0x16
  2662  000017                     	ds	1
  2663  000018                     ??_LCD_InButton:
  2664  000018                     ??_LCD_InSlider:
  2665  000018                     LCD_Init@i:
  2666                           	callstack 0
  2667  000018                     XF_pushEvent@inISR:
  2668                           	callstack 0
  2669  000018                     XF_popEvent@ev:
  2670                           	callstack 0
  2671  000018                     LCD_Fill@page:
  2672                           	callstack 0
  2673  000018                     LCD_SliderCreate@height:
  2674                           	callstack 0
  2675  000018                     LCD_ButtonCreate@height:
  2676                           	callstack 0
  2677  000018                     LCD_DrawRect@posY2:
  2678                           	callstack 0
  2679  000018                     RGB2LCD@red:
  2680                           	callstack 0
  2681  000018                     LCD_Read@color:
  2682                           	callstack 0
  2683  000018                     backlightController@g:
  2684                           	callstack 0
  2685  000018                     ___awdiv@quotient:
  2686                           	callstack 0
  2687                           
  2688                           ; 2 bytes @ 0x17
  2689  000018                     	ds	1
  2690  000019                     XF_pushEvent@ev:
  2691                           	callstack 0
  2692  000019                     XF_popEvent@inISR:
  2693                           	callstack 0
  2694                           
  2695                           ; 1 bytes @ 0x18
  2696  000019                     	ds	1
  2697  00001A                     ?___wmul:
  2698                           	callstack 0
  2699  00001A                     LCD_DrawRect@fill:
  2700                           	callstack 0
  2701  00001A                     XF_pushEvent@temp:
  2702                           	callstack 0
  2703  00001A                     LCD_SliderCreate@sldColor:
  2704                           	callstack 0
  2705  00001A                     LCD_ButtonCreate@txtColor:
  2706                           	callstack 0
  2707  00001A                     RGB2LCD@green:
  2708                           	callstack 0
  2709  00001A                     LCD_Read@temp16:
  2710                           	callstack 0
  2711  00001A                     ___wmul@multiplier:
  2712                           	callstack 0
  2713  00001A                     ___aodiv@divisor:
  2714                           	callstack 0
  2715  00001A                     ___aomod@divisor:
  2716                           	callstack 0
  2717                           
  2718                           ; 8 bytes @ 0x19
  2719  00001A                     	ds	1
  2720  00001B                     LCD_DrawRect@color:
  2721                           	callstack 0
  2722  00001B                     fputs@s:
  2723                           	callstack 0
  2724                           
  2725                           ; 2 bytes @ 0x1A
  2726  00001B                     	ds	1
  2727  00001C                     LCD_SliderCreate@bgColor:
  2728                           	callstack 0
  2729  00001C                     LCD_ButtonCreate@bgColor:
  2730                           	callstack 0
  2731  00001C                     RGB2LCD@blue:
  2732                           	callstack 0
  2733  00001C                     ___wmul@multiplicand:
  2734                           	callstack 0
  2735                           
  2736                           ; 2 bytes @ 0x1B
  2737  00001C                     	ds	1
  2738  00001D                     LCD_DrawRect@j:
  2739                           	callstack 0
  2740  00001D                     fputs@fp:
  2741                           	callstack 0
  2742                           
  2743                           ; 2 bytes @ 0x1C
  2744  00001D                     	ds	1
  2745  00001E                     LCD_SliderCreate@borderColor:
  2746                           	callstack 0
  2747  00001E                     LCD_ButtonCreate@textOrBmp:
  2748                           	callstack 0
  2749  00001E                     RGB2LCD@color:
  2750                           	callstack 0
  2751  00001E                     ___wmul@product:
  2752                           	callstack 0
  2753                           
  2754                           ; 2 bytes @ 0x1D
  2755  00001E                     	ds	1
  2756  00001F                     fputs@c:
  2757                           	callstack 0
  2758  00001F                     LCD_DrawRect@temp:
  2759                           	callstack 0
  2760                           
  2761                           ; 2 bytes @ 0x1E
  2762  00001F                     	ds	1
  2763  000020                     ?___lwdiv:
  2764                           	callstack 0
  2765  000020                     LCD_SliderCreate@cursorWidth:
  2766                           	callstack 0
  2767  000020                     LCD_ButtonCreate@font:
  2768                           	callstack 0
  2769  000020                     LCD_DrawText@msg:
  2770                           	callstack 0
  2771  000020                     XF_init@i:
  2772                           	callstack 0
  2773  000020                     ___lwdiv@dividend:
  2774                           	callstack 0
  2775  000020                     fputs@i:
  2776                           	callstack 0
  2777                           
  2778                           ; 2 bytes @ 0x1F
  2779  000020                     	ds	1
  2780  000021                     LCD_DrawRect@colorH:
  2781                           	callstack 0
  2782                           
  2783                           ; 1 bytes @ 0x20
  2784  000021                     	ds	1
  2785  000022                     ?_pad:
  2786                           	callstack 0
  2787  000022                     LCD_DrawRect@colorL:
  2788                           	callstack 0
  2789  000022                     ___aodiv@counter:
  2790                           	callstack 0
  2791  000022                     ___aomod@counter:
  2792                           	callstack 0
  2793  000022                     LCD_SliderCreate@steps:
  2794                           	callstack 0
  2795  000022                     LCD_ButtonCreate@fpPress:
  2796                           	callstack 0
  2797  000022                     LCD_DrawText@font:
  2798                           	callstack 0
  2799  000022                     ___lwdiv@divisor:
  2800                           	callstack 0
  2801  000022                     pad@fp:
  2802                           	callstack 0
  2803                           
  2804                           ; 2 bytes @ 0x21
  2805  000022                     	ds	1
  2806  000023                     ___aodiv@sign:
  2807                           	callstack 0
  2808  000023                     ___aomod@sign:
  2809                           	callstack 0
  2810  000023                     LCD_DrawRect@i:
  2811                           	callstack 0
  2812                           
  2813                           ; 2 bytes @ 0x22
  2814  000023                     	ds	1
  2815  000024                     ?_abs:
  2816                           	callstack 0
  2817  000024                     LCD_DrawText@align:
  2818                           	callstack 0
  2819  000024                     ___lwdiv@counter:
  2820                           	callstack 0
  2821  000024                     LCD_SliderCreate@fpPress:
  2822                           	callstack 0
  2823  000024                     LCD_ButtonCreate@fpReleased:
  2824                           	callstack 0
  2825  000024                     pad@buf:
  2826                           	callstack 0
  2827  000024                     abs@a:
  2828                           	callstack 0
  2829  000024                     ___aodiv@quotient:
  2830                           	callstack 0
  2831                           
  2832                           ; 8 bytes @ 0x23
  2833  000024                     	ds	1
  2834  000025                     Paddle_addX@p:
  2835                           	callstack 0
  2836  000025                     Paddle_draw@p:
  2837                           	callstack 0
  2838  000025                     LCD_ButtonUpdate@button:
  2839                           	callstack 0
  2840  000025                     LCD_DrawText@posX:
  2841                           	callstack 0
  2842  000025                     ___lwdiv@quotient:
  2843                           	callstack 0
  2844                           
  2845                           ; 2 bytes @ 0x24
  2846  000025                     	ds	1
  2847  000026                     ??_abs:
  2848  000026                     LCD_SliderCreate@slider:
  2849                           	callstack 0
  2850  000026                     LCD_ButtonCreate@fpOut:
  2851                           	callstack 0
  2852  000026                     pad@p:
  2853                           	callstack 0
  2854                           
  2855                           ; 2 bytes @ 0x25
  2856  000026                     	ds	1
  2857  000027                     ??_Paddle_draw:
  2858  000027                     ??_LCD_ButtonUpdate:
  2859  000027                     Paddle_addX@value:
  2860                           	callstack 0
  2861  000027                     LCD_SliderUpdate@slider:
  2862                           	callstack 0
  2863  000027                     LCD_DrawText@posY:
  2864                           	callstack 0
  2865  000027                     LCD_Bitmap@bmpPtr:
  2866                           	callstack 0
  2867                           
  2868                           ; 2 bytes @ 0x26
  2869  000027                     	ds	1
  2870  000028                     ??_pad:
  2871  000028                     LCD_ButtonCreate@button:
  2872                           	callstack 0
  2873                           
  2874                           ; 2 bytes @ 0x27
  2875  000028                     	ds	1
  2876  000029                     ??_LCD_SliderUpdate:
  2877  000029                     Paddle_addX@add:
  2878                           	callstack 0
  2879  000029                     LCD_DrawText@color:
  2880                           	callstack 0
  2881  000029                     LCD_Bitmap@posX:
  2882                           	callstack 0
  2883  000029                     pad@i:
  2884                           	callstack 0
  2885                           
  2886                           ; 2 bytes @ 0x28
  2887  000029                     	ds	1
  2888  00002A                     LCD_ButtonCreate@index:
  2889                           	callstack 0
  2890                           
  2891                           ; 1 bytes @ 0x29
  2892  00002A                     	ds	1
  2893  00002B                     ??_Paddle_addX:
  2894  00002B                     GameParameters_init@s:
  2895                           	callstack 0
  2896  00002B                     LCD_ButtonUpdate@colorOut:
  2897                           	callstack 0
  2898  00002B                     LCD_DrawText@bg_color:
  2899                           	callstack 0
  2900  00002B                     LCD_Bitmap@posY:
  2901                           	callstack 0
  2902  00002B                     pad@w:
  2903                           	callstack 0
  2904                           
  2905                           ; 2 bytes @ 0x2A
  2906  00002B                     	ds	2
  2907  00002D                     ??_LCD_DrawText:
  2908  00002D                     ??_LCD_Bitmap:
  2909  00002D                     ?_dtoa:
  2910                           	callstack 0
  2911  00002D                     LCD_ButtonUpdate@colorIn:
  2912                           	callstack 0
  2913  00002D                     dtoa@fp:
  2914                           	callstack 0
  2915                           
  2916                           ; 2 bytes @ 0x2C
  2917  00002D                     	ds	2
  2918  00002F                     LCD_SliderUpdate@x2:
  2919                           	callstack 0
  2920  00002F                     LCD_ButtonUpdate@x2:
  2921                           	callstack 0
  2922  00002F                     dtoa@d:
  2923                           	callstack 0
  2924                           
  2925                           ; 8 bytes @ 0x2E
  2926  00002F                     	ds	2
  2927  000031                     LCD_SliderUpdate@y1:
  2928                           	callstack 0
  2929  000031                     LCD_ButtonUpdate@y1:
  2930                           	callstack 0
  2931                           
  2932                           ; 2 bytes @ 0x30
  2933  000031                     	ds	2
  2934  000033                     LCD_SliderUpdate@y2:
  2935                           	callstack 0
  2936  000033                     LCD_ButtonUpdate@x1:
  2937                           	callstack 0
  2938  000033                     LCD_DrawText@offset:
  2939                           	callstack 0
  2940                           
  2941                           ; 2 bytes @ 0x32
  2942  000033                     	ds	2
  2943  000035                     LCD_SliderUpdate@x1:
  2944                           	callstack 0
  2945  000035                     LCD_ButtonUpdate@y2:
  2946                           	callstack 0
  2947  000035                     LCD_DrawText@yOffset:
  2948                           	callstack 0
  2949                           
  2950                           ; 2 bytes @ 0x34
  2951  000035                     	ds	2
  2952  000037                     ??_dtoa:
  2953  000037                     LCD_DrawText@fontByte:
  2954                           	callstack 0
  2955  000037                     LCD_SliderDraw@slider:
  2956                           	callstack 0
  2957  000037                     gameControllerController@g:
  2958                           	callstack 0
  2959                           
  2960                           ; 2 bytes @ 0x36
  2961  000037                     	ds	1
  2962  000038                     LCD_DrawText@fontPixel:
  2963                           	callstack 0
  2964                           
  2965                           ; 1 bytes @ 0x37
  2966  000038                     	ds	1
  2967  000039                     ??_LCD_SliderDraw:
  2968  000039                     ??_gameControllerController:
  2969  000039                     LCD_DrawText@posYEnd:
  2970                           	callstack 0
  2971                           
  2972                           ; 2 bytes @ 0x38
  2973  000039                     	ds	2
  2974  00003B                     LCD_DrawText@posXEnd:
  2975                           	callstack 0
  2976  00003B                     gameControllerInit@g:
  2977                           	callstack 0
  2978  00003B                     gameControllerSM@g:
  2979                           	callstack 0
  2980                           
  2981                           ; 2 bytes @ 0x3A
  2982  00003B                     	ds	2
  2983  00003D                     ??_gameControllerSM:
  2984  00003D                     LCD_DrawText@y:
  2985                           	callstack 0
  2986  00003D                     LCD_SliderDraw@x1:
  2987                           	callstack 0
  2988                           
  2989                           ; 2 bytes @ 0x3C
  2990  00003D                     	ds	1
  2991  00003E                     LCD_DrawText@i:
  2992                           	callstack 0
  2993                           
  2994                           ; 1 bytes @ 0x3D
  2995  00003E                     	ds	1
  2996  00003F                     ?_vfpfcnvrt:
  2997                           	callstack 0
  2998  00003F                     LCD_DrawText@tempChar:
  2999                           	callstack 0
  3000  00003F                     gameControllerSM@ev:
  3001                           	callstack 0
  3002  00003F                     LCD_SliderDraw@x2:
  3003                           	callstack 0
  3004  00003F                     vfpfcnvrt@fp:
  3005                           	callstack 0
  3006                           
  3007                           ; 2 bytes @ 0x3E
  3008  00003F                     	ds	1
  3009  000040                     LCD_DrawText@x:
  3010                           	callstack 0
  3011                           
  3012                           ; 1 bytes @ 0x3F
  3013  000040                     	ds	1
  3014  000041                     LCD_DrawText@width:
  3015                           	callstack 0
  3016  000041                     LCD_SliderDraw@y1:
  3017                           	callstack 0
  3018  000041                     vfpfcnvrt@fmt:
  3019                           	callstack 0
  3020                           
  3021                           ; 2 bytes @ 0x40
  3022  000041                     	ds	1
  3023  000042                     Ball_draw@b:
  3024                           	callstack 0
  3025                           
  3026                           ; 2 bytes @ 0x41
  3027  000042                     	ds	1
  3028  000043                     LCD_SliderDraw@y2:
  3029                           	callstack 0
  3030  000043                     vfpfcnvrt@ap:
  3031                           	callstack 0
  3032                           
  3033                           ; 2 bytes @ 0x42
  3034  000043                     	ds	1
  3035  000044                     
  3036                           ; 1 bytes @ 0x43
  3037  000044                     	ds	1
  3038  000045                     ??_displayController:
  3039  000045                     ??_vfpfcnvrt:
  3040                           
  3041                           ; 1 bytes @ 0x44
  3042  000045                     	ds	2
  3043  000047                     
  3044                           ; 1 bytes @ 0x46
  3045 ;;
  3046 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3047 ;;
  3048 ;; *************** function _main *****************
  3049 ;; Defined at:
  3050 ;;		line 49 in file "main.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3064 ;;      Params:         0       0       0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0
  3067 ;;      Totals:         0       0       0       0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels required when called: 15
  3070 ;; This function calls:
  3071 ;;		_Factory_exec
  3072 ;;		_Factory_init
  3073 ;; This function is called by:
  3074 ;;		Startup code after reset
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text0
  3079  00503A                     __ptext0:
  3080                           	callstack 0
  3081  00503A                     _main:
  3082                           	callstack 16
  3083  00503A                     
  3084                           ;main.c: 51:     Factory_init();
  3085  00503A  EC20  F021         	call	_Factory_init	;wreg free
  3086  00503E                     l728:
  3087                           
  3088                           ;main.c: 53:     {;main.c: 54:         Factory_exec();
  3089  00503E  ECFF  F025         	call	_Factory_exec	;wreg free
  3090  005042  EF1F  F028         	goto	l728
  3091  005046  EF58  F000         	goto	start
  3092  00504A                     __end_of_main:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function _Factory_init *****************
  3096 ;; Defined at:
  3097 ;;		line 10 in file "class/factory.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3111 ;;      Params:         0       0       0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0
  3113 ;;      Temps:          0       2       0       0       0       0       0
  3114 ;;      Totals:         0       2       0       0       0       0       0
  3115 ;;Total ram usage:        2 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 11
  3118 ;; This function calls:
  3119 ;;		_GameParameters_init
  3120 ;;		_LCD_DrawText
  3121 ;;		_LCD_Fill
  3122 ;;		_LCD_Init
  3123 ;;		_XF_init
  3124 ;;		_sleepInit
  3125 ;; This function is called by:
  3126 ;;		_main
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text1
  3131  004240                     __ptext1:
  3132                           	callstack 0
  3133  004240                     _Factory_init:
  3134                           	callstack 19
  3135  004240                     
  3136                           ;class/factory.c: 13:     PLLEN = 1;
  3137  004240  8C9B               	bsf	3995,6,c	;volatile
  3138  004242                     
  3139                           ;class/factory.c: 14:     OSCCON = 0b01110000;
  3140  004242  0E70               	movlw	112
  3141  004244  6ED3               	movwf	211,c	;volatile
  3142  004246                     
  3143                           ;class/factory.c: 15:     _delay((unsigned long)((100)*(64000000L/4000.0)));
  3144  004246  0E09               	movlw	9
  3145  004248  0100               	movlb	0	; () banked
  3146  00424A  6FA5               	movwf	(??_Factory_init+1)& (0+255),b
  3147  00424C  0E1E               	movlw	30
  3148  00424E  6FA4               	movwf	??_Factory_init& (0+255),b
  3149  004250  0EE4               	movlw	228
  3150  004252                     u6027:
  3151  004252  2EE8               	decfsz	wreg,f,c
  3152  004254  D7FE               	bra	u6027
  3153  004256  2FA4               	decfsz	??_Factory_init& (0+255),f,b
  3154  004258  D7FC               	bra	u6027
  3155  00425A  2FA5               	decfsz	(??_Factory_init+1)& (0+255),f,b
  3156  00425C  D7FA               	bra	u6027
  3157  00425E  F000               	nop	
  3158  004260                     
  3159                           ;class/factory.c: 17:     LCD_Init();
  3160  004260  EC76  F013         	call	_LCD_Init	;wreg free
  3161  004264                     
  3162                           ;class/factory.c: 18:     LCD_Fill(0b0000000000011111);
  3163  004264  0E00               	movlw	0
  3164  004266  6E13               	movwf	(LCD_Fill@color+1)^0,c
  3165  004268  0E1F               	movlw	31
  3166  00426A  6E12               	movwf	LCD_Fill@color^0,c
  3167  00426C  EC04  F020         	call	_LCD_Fill	;wreg free
  3168  004270                     
  3169                           ;class/factory.c: 19:     LCD_DrawText("MenuStart",&arialNarrow_12ptFontInfo,A_CENTER,50
      +                          ,50,0b0000000000000000,0b1111111111111111);
  3170  004270  0EB6               	movlw	low STR_2
  3171  004272  6E20               	movwf	LCD_DrawText@msg^0,c
  3172  004274  0E7F               	movlw	high STR_2
  3173  004276  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  3174  004278  0E99               	movlw	low _arialNarrow_12ptFontInfo
  3175  00427A  6E22               	movwf	LCD_DrawText@font^0,c
  3176  00427C  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  3177  00427E  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  3178  004280  0E02               	movlw	2
  3179  004282  6E24               	movwf	LCD_DrawText@align^0,c
  3180  004284  0E00               	movlw	0
  3181  004286  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  3182  004288  0E32               	movlw	50
  3183  00428A  6E25               	movwf	LCD_DrawText@posX^0,c
  3184  00428C  0E00               	movlw	0
  3185  00428E  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  3186  004290  0E32               	movlw	50
  3187  004292  6E27               	movwf	LCD_DrawText@posY^0,c
  3188  004294  0E00               	movlw	0
  3189  004296  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  3190  004298  0E00               	movlw	0
  3191  00429A  6E29               	movwf	LCD_DrawText@color^0,c
  3192  00429C  0EFF               	movlw	255
  3193  00429E  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  3194  0042A0  682B               	setf	LCD_DrawText@bg_color^0,c
  3195  0042A2  EC86  F00A         	call	_LCD_DrawText	;wreg free
  3196  0042A6                     
  3197                           ;class/factory.c: 24:     GIE=1;
  3198  0042A6  8EF2               	bsf	4082,7,c	;volatile
  3199  0042A8                     
  3200                           ;class/factory.c: 25:     INT1IE=0;
  3201  0042A8  96F0               	bcf	4080,3,c	;volatile
  3202  0042AA                     
  3203                           ;class/factory.c: 28:     T0CON=0b10000110;
  3204  0042AA  0E86               	movlw	134
  3205  0042AC  6ED5               	movwf	213,c	;volatile
  3206  0042AE                     
  3207                           ;class/factory.c: 29:     TMR0H=0xE7;
  3208  0042AE  0EE7               	movlw	231
  3209  0042B0  6ED7               	movwf	215,c	;volatile
  3210  0042B2                     
  3211                           ;class/factory.c: 30:     TMR0L=0x95;
  3212  0042B2  0E95               	movlw	149
  3213  0042B4  6ED6               	movwf	214,c	;volatile
  3214  0042B6                     
  3215                           ;class/factory.c: 31:     TMR0IE=1;
  3216  0042B6  8AF2               	bsf	4082,5,c	;volatile
  3217  0042B8                     
  3218                           ;class/factory.c: 34:     TRISC1=0;
  3219  0042B8  9294               	bcf	3988,1,c	;volatile
  3220  0042BA                     
  3221                           ;class/factory.c: 35:     PR2=255;
  3222  0042BA  68BB               	setf	187,c	;volatile
  3223  0042BC                     
  3224                           ;class/factory.c: 36:     CCP2CONbits.CCP2M = 0xC;
  3225  0042BC  5066               	movf	102,w,c	;volatile
  3226  0042BE  0BF0               	andlw	-16
  3227  0042C0  090C               	iorlw	12
  3228  0042C2  6E66               	movwf	102,c	;volatile
  3229  0042C4                     
  3230                           ;class/factory.c: 37:     CCPR2L = 255;
  3231  0042C4  6867               	setf	103,c	;volatile
  3232  0042C6                     
  3233                           ;class/factory.c: 38:     CCP2CONbits.DC2B = 0;
  3234  0042C6  0ECF               	movlw	-49
  3235  0042C8  1666               	andwf	102,f,c	;volatile
  3236  0042CA                     
  3237                           ;class/factory.c: 39:     TMR2IF=0;
  3238  0042CA  929E               	bcf	3998,1,c	;volatile
  3239  0042CC                     
  3240                           ;class/factory.c: 40:     T2CONbits.T2CKPS0 = 1;
  3241  0042CC  80BA               	bsf	186,0,c	;volatile
  3242  0042CE                     
  3243                           ;class/factory.c: 41:     T2CONbits.T2CKPS1 = 0;
  3244  0042CE  92BA               	bcf	186,1,c	;volatile
  3245  0042D0                     
  3246                           ;class/factory.c: 42:     T2CONbits.TMR2ON = 1;
  3247  0042D0  84BA               	bsf	186,2,c	;volatile
  3248  0042D2                     
  3249                           ;class/factory.c: 44:     ADCON2=0b10100110;
  3250  0042D2  0EA6               	movlw	166
  3251  0042D4  6EC0               	movwf	192,c	;volatile
  3252  0042D6                     
  3253                           ;class/factory.c: 47:     XF_init();
  3254  0042D6  ECC4  F020         	call	_XF_init	;wreg free
  3255  0042DA                     
  3256                           ;class/factory.c: 48:     GameParameters_init(&g1);
  3257  0042DA  0E00               	movlw	low _g1
  3258  0042DC  6E2B               	movwf	GameParameters_init@s^0,c
  3259  0042DE  0E01               	movlw	high _g1
  3260  0042E0  6E2C               	movwf	(GameParameters_init@s+1)^0,c
  3261  0042E2  ECB3  F00E         	call	_GameParameters_init	;wreg free
  3262  0042E6                     
  3263                           ;class/factory.c: 49:     sleepInit(&g1);
  3264  0042E6  0E00               	movlw	low _g1
  3265  0042E8  0100               	movlb	0	; () banked
  3266  0042EA  6FA2               	movwf	sleepInit@g& (0+255),b
  3267  0042EC  0E01               	movlw	high _g1
  3268  0042EE  6FA3               	movwf	(sleepInit@g+1)& (0+255),b
  3269  0042F0  EC80  F027         	call	_sleepInit	;wreg free
  3270  0042F4  0012               	return		;funcret
  3271  0042F6                     __end_of_Factory_init:
  3272                           	callstack 0
  3273                           
  3274 ;; *************** function _sleepInit *****************
  3275 ;; Defined at:
  3276 ;;		line 11 in file "stateMachine/sleepSM.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  g               2   66[BANK0 ] PTR struct GameParameter
  3279 ;;		 -> g1(209), 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3291 ;;      Params:         0       2       0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0
  3294 ;;      Totals:         0       2       0       0       0       0       0
  3295 ;;Total ram usage:        2 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 10
  3298 ;; This function calls:
  3299 ;;		_displayInit
  3300 ;;		_gameControllerInit
  3301 ;;		_sleepController
  3302 ;;		_touchScreenInit
  3303 ;; This function is called by:
  3304 ;;		_Factory_init
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text2
  3309  004F00                     __ptext2:
  3310                           	callstack 0
  3311  004F00                     _sleepInit:
  3312                           	callstack 19
  3313  004F00                     
  3314                           ;stateMachine/sleepSM.c: 11: void sleepInit(GameParameters* g);stateMachine/sleepSM.c: 1
      +                          2: {;stateMachine/sleepSM.c: 13:     sleepState=WAKEUP;
  3315  004F00  0E00               	movlw	0
  3316  004F02  0100               	movlb	0	; () banked
  3317  004F04  6FDF               	movwf	_sleepState& (0+255),b
  3318  004F06                     
  3319                           ; BSR set to: 0
  3320                           ;stateMachine/sleepSM.c: 14:     displayInit(g);
  3321  004F06  C0A2  F0A0         	movff	sleepInit@g,displayInit@g
  3322  004F0A  C0A3  F0A1         	movff	sleepInit@g+1,displayInit@g+1
  3323  004F0E  EC0A  F028         	call	_displayInit	;wreg free
  3324  004F12                     
  3325                           ;stateMachine/sleepSM.c: 15:     gameControllerInit(g);
  3326  004F12  C0A2  F03B         	movff	sleepInit@g,gameControllerInit@g
  3327  004F16  C0A3  F03C         	movff	sleepInit@g+1,gameControllerInit@g+1
  3328  004F1A  EC14  F028         	call	_gameControllerInit	;wreg free
  3329  004F1E                     
  3330                           ;stateMachine/sleepSM.c: 16:     touchScreenInit();
  3331  004F1E  EC25  F028         	call	_touchScreenInit	;wreg free
  3332  004F22                     
  3333                           ;stateMachine/sleepSM.c: 17:     sleepController();
  3334  004F22  EC4C  F027         	call	_sleepController	;wreg free
  3335  004F26  0012               	return		;funcret
  3336  004F28                     __end_of_sleepInit:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function _touchScreenInit *****************
  3340 ;; Defined at:
  3341 ;;		line 17 in file "stateMachine/touchScreenSM.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3355 ;;      Params:         0       0       0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0
  3358 ;;      Totals:         0       0       0       0       0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 5
  3362 ;; This function calls:
  3363 ;;		_configTouch
  3364 ;; This function is called by:
  3365 ;;		_sleepInit
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text3
  3370  00504A                     __ptext3:
  3371                           	callstack 0
  3372  00504A                     _touchScreenInit:
  3373                           	callstack 23
  3374  00504A                     
  3375                           ;stateMachine/touchScreenSM.c: 19:     touchScreenState=WAITING;
  3376  00504A  0E00               	movlw	0
  3377  00504C  0100               	movlb	0	; () banked
  3378  00504E  6FDE               	movwf	_touchScreenState& (0+255),b
  3379  005050                     
  3380                           ; BSR set to: 0
  3381                           ;stateMachine/touchScreenSM.c: 20:     configTouch();
  3382  005050  ECBA  F027         	call	_configTouch	;wreg free
  3383  005054  0012               	return		;funcret
  3384  005056                     __end_of_touchScreenInit:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function _gameControllerInit *****************
  3388 ;; Defined at:
  3389 ;;		line 11 in file "stateMachine/gameController.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  g               2   58[COMRAM] PTR struct GameParameter
  3392 ;;		 -> g1(209), 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3404 ;;      Params:         2       0       0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0
  3407 ;;      Totals:         2       0       0       0       0       0       0
  3408 ;;Total ram usage:        2 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 7
  3411 ;; This function calls:
  3412 ;;		_gameControllerController
  3413 ;; This function is called by:
  3414 ;;		_sleepInit
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text4
  3419  005028                     __ptext4:
  3420                           	callstack 0
  3421  005028                     _gameControllerInit:
  3422                           	callstack 21
  3423  005028                     
  3424                           ;stateMachine/gameController.c: 11: void gameControllerInit(GameParameters* g);stateMach
      +                          ine/gameController.c: 12: {;stateMachine/gameController.c: 13:     gameControllerState=N
      +                          OGAME;
  3425  005028  0E00               	movlw	0
  3426  00502A  6E4D               	movwf	_gameControllerState^0,c
  3427  00502C                     
  3428                           ;stateMachine/gameController.c: 14:     gameControllerController(g);
  3429  00502C  C03B  F037         	movff	gameControllerInit@g,gameControllerController@g
  3430  005030  C03C  F038         	movff	gameControllerInit@g+1,gameControllerController@g+1
  3431  005034  ECAB  F00C         	call	_gameControllerController	;wreg free
  3432  005038  0012               	return		;funcret
  3433  00503A                     __end_of_gameControllerInit:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _displayInit *****************
  3437 ;; Defined at:
  3438 ;;		line 13 in file "stateMachine/display.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  g               2   64[BANK0 ] PTR struct GameParameter
  3441 ;;		 -> g1(209), 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;		None
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3453 ;;      Params:         0       2       0       0       0       0       0
  3454 ;;      Locals:         0       0       0       0       0       0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0
  3456 ;;      Totals:         0       2       0       0       0       0       0
  3457 ;;Total ram usage:        2 bytes
  3458 ;; Hardware stack levels used: 1
  3459 ;; Hardware stack levels required when called: 9
  3460 ;; This function calls:
  3461 ;;		_displayController
  3462 ;; This function is called by:
  3463 ;;		_sleepInit
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text5
  3468  005014                     __ptext5:
  3469                           	callstack 0
  3470  005014                     _displayInit:
  3471                           	callstack 19
  3472  005014                     
  3473                           ;stateMachine/display.c: 13: void displayInit(GameParameters* g);stateMachine/display.c:
      +                           14: {;stateMachine/display.c: 15:     displayState=WELCOME;
  3474  005014  0E00               	movlw	0
  3475  005016  0100               	movlb	0	; () banked
  3476  005018  6FDD               	movwf	_displayState& (0+255),b
  3477  00501A                     
  3478                           ; BSR set to: 0
  3479                           ;stateMachine/display.c: 16:     displayController(g);
  3480  00501A  C0A0  F09E         	movff	displayInit@g,displayController@g
  3481  00501E  C0A1  F09F         	movff	displayInit@g+1,displayController@g+1
  3482  005022  ECA7  F024         	call	_displayController	;wreg free
  3483  005026  0012               	return		;funcret
  3484  005028                     __end_of_displayInit:
  3485                           	callstack 0
  3486                           
  3487 ;; *************** function _XF_init *****************
  3488 ;; Defined at:
  3489 ;;		line 25 in file "xf/xf.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  i               2   31[COMRAM] int 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3503 ;;      Params:         0       0       0       0       0       0       0
  3504 ;;      Locals:         2       0       0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0
  3506 ;;      Totals:         2       0       0       0       0       0       0
  3507 ;;Total ram usage:        2 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 5
  3510 ;; This function calls:
  3511 ;;		___wmul
  3512 ;; This function is called by:
  3513 ;;		_Factory_init
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text6
  3518  004188                     __ptext6:
  3519                           	callstack 0
  3520  004188                     _XF_init:
  3521                           	callstack 24
  3522  004188                     
  3523                           ;xf/xf.c: 27:     int i;;xf/xf.c: 28:     for (i=0; i<12; i++)
  3524  004188  0E00               	movlw	0
  3525  00418A  6E21               	movwf	(XF_init@i+1)^0,c
  3526  00418C  0E00               	movlw	0
  3527  00418E  6E20               	movwf	XF_init@i^0,c
  3528  004190                     l9098:
  3529                           
  3530                           ;xf/xf.c: 29:     {;xf/xf.c: 30:         theXF.eventQueue[i] = NULLEVENT;
  3531  004190  0ECD               	movlw	low (_theXF+24)
  3532  004192  2420               	addwf	XF_init@i^0,w,c
  3533  004194  6ED9               	movwf	fsr2l,c
  3534  004196  0E00               	movlw	high (_theXF+24)
  3535  004198  2021               	addwfc	(XF_init@i+1)^0,w,c
  3536  00419A  6EDA               	movwf	fsr2h,c
  3537  00419C  0E00               	movlw	0
  3538  00419E  6EDF               	movwf	indf2,c
  3539  0041A0                     
  3540                           ;xf/xf.c: 31:     }
  3541  0041A0  4A20               	infsnz	XF_init@i^0,f,c
  3542  0041A2  2A21               	incf	(XF_init@i+1)^0,f,c
  3543  0041A4  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3544  0041A6  EFDE  F020         	goto	u5821
  3545  0041AA  5021               	movf	(XF_init@i+1)^0,w,c
  3546  0041AC  E109               	bnz	u5820
  3547  0041AE  0E0C               	movlw	12
  3548  0041B0  5C20               	subwf	XF_init@i^0,w,c
  3549  0041B2  A0D8               	btfss	status,0,c
  3550  0041B4  EFDE  F020         	goto	u5821
  3551  0041B8  EFE0  F020         	goto	u5820
  3552  0041BC                     u5821:
  3553  0041BC  EFC8  F020         	goto	l9098
  3554  0041C0                     u5820:
  3555  0041C0                     
  3556                           ;xf/xf.c: 33:     for (i=0; i<8; i++)
  3557  0041C0  0E00               	movlw	0
  3558  0041C2  6E21               	movwf	(XF_init@i+1)^0,c
  3559  0041C4  0E00               	movlw	0
  3560  0041C6  6E20               	movwf	XF_init@i^0,c
  3561  0041C8                     l9110:
  3562                           
  3563                           ;xf/xf.c: 34:     {;xf/xf.c: 35:         theXF.timerList[i].tm = 0;
  3564  0041C8  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3565  0041CC  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3566  0041D0  0E00               	movlw	0
  3567  0041D2  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3568  0041D4  0E03               	movlw	3
  3569  0041D6  6E1C               	movwf	___wmul@multiplicand^0,c
  3570  0041D8  EC94  F027         	call	___wmul	;wreg free
  3571  0041DC  0EB5               	movlw	low _theXF
  3572  0041DE  241A               	addwf	?___wmul^0,w,c
  3573  0041E0  6ED9               	movwf	fsr2l,c
  3574  0041E2  0E00               	movlw	high _theXF
  3575  0041E4  201B               	addwfc	(?___wmul+1)^0,w,c
  3576  0041E6  6EDA               	movwf	fsr2h,c
  3577  0041E8  0E00               	movlw	0
  3578  0041EA  6EDE               	movwf	postinc2,c
  3579  0041EC  0E00               	movlw	0
  3580  0041EE  6EDD               	movwf	postdec2,c
  3581                           
  3582                           ;xf/xf.c: 36:         theXF.timerList[i].ev = NULLEVENT;
  3583  0041F0  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3584  0041F4  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3585  0041F8  0E00               	movlw	0
  3586  0041FA  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3587  0041FC  0E03               	movlw	3
  3588  0041FE  6E1C               	movwf	___wmul@multiplicand^0,c
  3589  004200  EC94  F027         	call	___wmul	;wreg free
  3590  004204  0EB7               	movlw	low (_theXF+2)
  3591  004206  241A               	addwf	?___wmul^0,w,c
  3592  004208  6ED9               	movwf	fsr2l,c
  3593  00420A  0E00               	movlw	high (_theXF+2)
  3594  00420C  201B               	addwfc	(?___wmul+1)^0,w,c
  3595  00420E  6EDA               	movwf	fsr2h,c
  3596  004210  0E00               	movlw	0
  3597  004212  6EDF               	movwf	indf2,c
  3598  004214                     
  3599                           ;xf/xf.c: 37:     }
  3600  004214  4A20               	infsnz	XF_init@i^0,f,c
  3601  004216  2A21               	incf	(XF_init@i+1)^0,f,c
  3602  004218  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3603  00421A  EF18  F021         	goto	u5831
  3604  00421E  5021               	movf	(XF_init@i+1)^0,w,c
  3605  004220  E109               	bnz	u5830
  3606  004222  0E08               	movlw	8
  3607  004224  5C20               	subwf	XF_init@i^0,w,c
  3608  004226  A0D8               	btfss	status,0,c
  3609  004228  EF18  F021         	goto	u5831
  3610  00422C  EF1A  F021         	goto	u5830
  3611  004230                     u5831:
  3612  004230  EFE4  F020         	goto	l9110
  3613  004234                     u5830:
  3614  004234                     
  3615                           ;xf/xf.c: 38:     theXF.in = 0;
  3616  004234  0E00               	movlw	0
  3617  004236  0100               	movlb	0	; () banked
  3618  004238  6FD9               	movwf	(_theXF+36)& (0+255),b
  3619                           
  3620                           ;xf/xf.c: 39:     theXF.out = 0;
  3621  00423A  0E00               	movlw	0
  3622  00423C  6FDA               	movwf	(_theXF+37)& (0+255),b
  3623  00423E                     
  3624                           ; BSR set to: 0
  3625  00423E  0012               	return		;funcret
  3626  004240                     __end_of_XF_init:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function _LCD_Init *****************
  3630 ;; Defined at:
  3631 ;;		line 20 in file "libraries/lcd_highlevel.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  i               1   23[COMRAM] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3645 ;;      Params:         0       0       0       0       0       0       0
  3646 ;;      Locals:         1       0       0       0       0       0       0
  3647 ;;      Temps:          1       0       0       0       0       0       0
  3648 ;;      Totals:         2       0       0       0       0       0       0
  3649 ;;Total ram usage:        2 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 5
  3652 ;; This function calls:
  3653 ;;		_LCD_Lowlevel_Init
  3654 ;; This function is called by:
  3655 ;;		_Factory_init
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text7
  3660  0026EC                     __ptext7:
  3661                           	callstack 0
  3662  0026EC                     _LCD_Init:
  3663                           	callstack 24
  3664  0026EC                     
  3665                           ;libraries/lcd_highlevel.c: 22:   uint8_t i;;libraries/lcd_highlevel.c: 86:   LCD_Lowlev
      +                          el_Init();
  3666  0026EC  ECCF  F022         	call	_LCD_Lowlevel_Init	;wreg free
  3667  0026F0                     
  3668                           ;libraries/lcd_highlevel.c: 87:   PORTA = 0x11; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3669  0026F0  0E11               	movlw	17
  3670  0026F2  6E80               	movwf	128,c	;volatile
  3671  0026F4  988B               	bcf	3979,4,c	;volatile
  3672  0026F6  968B               	bcf	3979,3,c	;volatile
  3673  0026F8  868B               	bsf	3979,3,c	;volatile
  3674  0026FA  888B               	bsf	3979,4,c	;volatile
  3675  0026FC                     
  3676                           ;libraries/lcd_highlevel.c: 88:   for(i=0;i<10;i++)
  3677  0026FC  0E00               	movlw	0
  3678  0026FE  6E18               	movwf	LCD_Init@i^0,c
  3679  002700                     l3604:
  3680                           
  3681                           ;libraries/lcd_highlevel.c: 89:   {;libraries/lcd_highlevel.c: 90:     _delay((unsigned 
      +                          long)((10)*(64000000L/4000.0)));
  3682  002700  0ED0               	movlw	208
  3683  002702  6E17               	movwf	??_LCD_Init^0,c
  3684  002704  0ECA               	movlw	202
  3685  002706                     u6037:
  3686  002706  2EE8               	decfsz	wreg,f,c
  3687  002708  D7FE               	bra	u6037
  3688  00270A  2E17               	decfsz	??_LCD_Init^0,f,c
  3689  00270C  D7FC               	bra	u6037
  3690  00270E                     
  3691                           ;libraries/lcd_highlevel.c: 91:   }
  3692  00270E  2A18               	incf	LCD_Init@i^0,f,c
  3693  002710  0E09               	movlw	9
  3694  002712  6418               	cpfsgt	LCD_Init@i^0,c
  3695  002714  EF8E  F013         	goto	u1781
  3696  002718  EF90  F013         	goto	u1780
  3697  00271C                     u1781:
  3698  00271C  EF80  F013         	goto	l3604
  3699  002720                     u1780:
  3700  002720                     
  3701                           ;libraries/lcd_highlevel.c: 92:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3702  002720  0E36               	movlw	54
  3703  002722  6E80               	movwf	128,c	;volatile
  3704  002724  988B               	bcf	3979,4,c	;volatile
  3705  002726  968B               	bcf	3979,3,c	;volatile
  3706  002728  868B               	bsf	3979,3,c	;volatile
  3707  00272A  888B               	bsf	3979,4,c	;volatile
  3708                           
  3709                           ;libraries/lcd_highlevel.c: 93:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
  3710  00272C  0E00               	movlw	0
  3711  00272E  6E80               	movwf	128,c	;volatile
  3712  002730  968B               	bcf	3979,3,c	;volatile
  3713  002732  868B               	bsf	3979,3,c	;volatile
  3714                           
  3715                           ;libraries/lcd_highlevel.c: 94:   PORTA = 0x3A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3716  002734  0E3A               	movlw	58
  3717  002736  6E80               	movwf	128,c	;volatile
  3718  002738  988B               	bcf	3979,4,c	;volatile
  3719  00273A  968B               	bcf	3979,3,c	;volatile
  3720  00273C  868B               	bsf	3979,3,c	;volatile
  3721  00273E  888B               	bsf	3979,4,c	;volatile
  3722                           
  3723                           ;libraries/lcd_highlevel.c: 95:   PORTA = 0x55; LATC3 = 0; LATC3 = 1;;
  3724  002740  0E55               	movlw	85
  3725  002742  6E80               	movwf	128,c	;volatile
  3726  002744  968B               	bcf	3979,3,c	;volatile
  3727  002746  868B               	bsf	3979,3,c	;volatile
  3728                           
  3729                           ;libraries/lcd_highlevel.c: 96:   PORTA = 0xB2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3730  002748  0EB2               	movlw	178
  3731  00274A  6E80               	movwf	128,c	;volatile
  3732  00274C  988B               	bcf	3979,4,c	;volatile
  3733  00274E  968B               	bcf	3979,3,c	;volatile
  3734  002750  868B               	bsf	3979,3,c	;volatile
  3735  002752  888B               	bsf	3979,4,c	;volatile
  3736                           
  3737                           ;libraries/lcd_highlevel.c: 97:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3738  002754  0E0C               	movlw	12
  3739  002756  6E80               	movwf	128,c	;volatile
  3740  002758  968B               	bcf	3979,3,c	;volatile
  3741  00275A  868B               	bsf	3979,3,c	;volatile
  3742                           
  3743                           ;libraries/lcd_highlevel.c: 98:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3744  00275C  0E0C               	movlw	12
  3745  00275E  6E80               	movwf	128,c	;volatile
  3746  002760  968B               	bcf	3979,3,c	;volatile
  3747  002762  868B               	bsf	3979,3,c	;volatile
  3748                           
  3749                           ;libraries/lcd_highlevel.c: 99:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3750  002764  0E33               	movlw	51
  3751  002766  6E80               	movwf	128,c	;volatile
  3752  002768  968B               	bcf	3979,3,c	;volatile
  3753  00276A  868B               	bsf	3979,3,c	;volatile
  3754                           
  3755                           ;libraries/lcd_highlevel.c: 100:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3756  00276C  0E33               	movlw	51
  3757  00276E  6E80               	movwf	128,c	;volatile
  3758  002770  968B               	bcf	3979,3,c	;volatile
  3759  002772  868B               	bsf	3979,3,c	;volatile
  3760                           
  3761                           ;libraries/lcd_highlevel.c: 101:   PORTA = 0xB7; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3762  002774  0EB7               	movlw	183
  3763  002776  6E80               	movwf	128,c	;volatile
  3764  002778  988B               	bcf	3979,4,c	;volatile
  3765  00277A  968B               	bcf	3979,3,c	;volatile
  3766  00277C  868B               	bsf	3979,3,c	;volatile
  3767  00277E  888B               	bsf	3979,4,c	;volatile
  3768                           
  3769                           ;libraries/lcd_highlevel.c: 102:   PORTA = 0x35; LATC3 = 0; LATC3 = 1;;
  3770  002780  0E35               	movlw	53
  3771  002782  6E80               	movwf	128,c	;volatile
  3772  002784  968B               	bcf	3979,3,c	;volatile
  3773  002786  868B               	bsf	3979,3,c	;volatile
  3774                           
  3775                           ;libraries/lcd_highlevel.c: 103:   PORTA = 0xBB; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3776  002788  0EBB               	movlw	187
  3777  00278A  6E80               	movwf	128,c	;volatile
  3778  00278C  988B               	bcf	3979,4,c	;volatile
  3779  00278E  968B               	bcf	3979,3,c	;volatile
  3780  002790  868B               	bsf	3979,3,c	;volatile
  3781  002792  888B               	bsf	3979,4,c	;volatile
  3782                           
  3783                           ;libraries/lcd_highlevel.c: 104:   PORTA = 0x2B; LATC3 = 0; LATC3 = 1;;
  3784  002794  0E2B               	movlw	43
  3785  002796  6E80               	movwf	128,c	;volatile
  3786  002798  968B               	bcf	3979,3,c	;volatile
  3787  00279A  868B               	bsf	3979,3,c	;volatile
  3788                           
  3789                           ;libraries/lcd_highlevel.c: 105:   PORTA = 0xC0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3790  00279C  0EC0               	movlw	192
  3791  00279E  6E80               	movwf	128,c	;volatile
  3792  0027A0  988B               	bcf	3979,4,c	;volatile
  3793  0027A2  968B               	bcf	3979,3,c	;volatile
  3794  0027A4  868B               	bsf	3979,3,c	;volatile
  3795  0027A6  888B               	bsf	3979,4,c	;volatile
  3796                           
  3797                           ;libraries/lcd_highlevel.c: 106:   PORTA = 0x2C; LATC3 = 0; LATC3 = 1;;
  3798  0027A8  0E2C               	movlw	44
  3799  0027AA  6E80               	movwf	128,c	;volatile
  3800  0027AC  968B               	bcf	3979,3,c	;volatile
  3801  0027AE  868B               	bsf	3979,3,c	;volatile
  3802                           
  3803                           ;libraries/lcd_highlevel.c: 107:   PORTA = 0xC2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3804  0027B0  0EC2               	movlw	194
  3805  0027B2  6E80               	movwf	128,c	;volatile
  3806  0027B4  988B               	bcf	3979,4,c	;volatile
  3807  0027B6  968B               	bcf	3979,3,c	;volatile
  3808  0027B8  868B               	bsf	3979,3,c	;volatile
  3809  0027BA  888B               	bsf	3979,4,c	;volatile
  3810                           
  3811                           ;libraries/lcd_highlevel.c: 108:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  3812  0027BC  0E01               	movlw	1
  3813  0027BE  6E80               	movwf	128,c	;volatile
  3814  0027C0  968B               	bcf	3979,3,c	;volatile
  3815  0027C2  868B               	bsf	3979,3,c	;volatile
  3816  0027C4                     
  3817                           ;libraries/lcd_highlevel.c: 109:   PORTA = 0xFF; LATC3 = 0; LATC3 = 1;;
  3818  0027C4  6880               	setf	128,c	;volatile
  3819  0027C6  968B               	bcf	3979,3,c	;volatile
  3820  0027C8  868B               	bsf	3979,3,c	;volatile
  3821                           
  3822                           ;libraries/lcd_highlevel.c: 110:   PORTA = 0XC3; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3823  0027CA  0EC3               	movlw	195
  3824  0027CC  6E80               	movwf	128,c	;volatile
  3825  0027CE  988B               	bcf	3979,4,c	;volatile
  3826  0027D0  968B               	bcf	3979,3,c	;volatile
  3827  0027D2  868B               	bsf	3979,3,c	;volatile
  3828  0027D4  888B               	bsf	3979,4,c	;volatile
  3829                           
  3830                           ;libraries/lcd_highlevel.c: 111:   PORTA = 0x11; LATC3 = 0; LATC3 = 1;;
  3831  0027D6  0E11               	movlw	17
  3832  0027D8  6E80               	movwf	128,c	;volatile
  3833  0027DA  968B               	bcf	3979,3,c	;volatile
  3834  0027DC  868B               	bsf	3979,3,c	;volatile
  3835                           
  3836                           ;libraries/lcd_highlevel.c: 112:   PORTA = 0xC4; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3837  0027DE  0EC4               	movlw	196
  3838  0027E0  6E80               	movwf	128,c	;volatile
  3839  0027E2  988B               	bcf	3979,4,c	;volatile
  3840  0027E4  968B               	bcf	3979,3,c	;volatile
  3841  0027E6  868B               	bsf	3979,3,c	;volatile
  3842  0027E8  888B               	bsf	3979,4,c	;volatile
  3843                           
  3844                           ;libraries/lcd_highlevel.c: 113:   PORTA = 0x20; LATC3 = 0; LATC3 = 1;;
  3845  0027EA  0E20               	movlw	32
  3846  0027EC  6E80               	movwf	128,c	;volatile
  3847  0027EE  968B               	bcf	3979,3,c	;volatile
  3848  0027F0  868B               	bsf	3979,3,c	;volatile
  3849                           
  3850                           ;libraries/lcd_highlevel.c: 114:   PORTA = 0xC6; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3851  0027F2  0EC6               	movlw	198
  3852  0027F4  6E80               	movwf	128,c	;volatile
  3853  0027F6  988B               	bcf	3979,4,c	;volatile
  3854  0027F8  968B               	bcf	3979,3,c	;volatile
  3855  0027FA  868B               	bsf	3979,3,c	;volatile
  3856  0027FC  888B               	bsf	3979,4,c	;volatile
  3857                           
  3858                           ;libraries/lcd_highlevel.c: 115:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  3859  0027FE  0E09               	movlw	9
  3860  002800  6E80               	movwf	128,c	;volatile
  3861  002802  968B               	bcf	3979,3,c	;volatile
  3862  002804  868B               	bsf	3979,3,c	;volatile
  3863                           
  3864                           ;libraries/lcd_highlevel.c: 116:   PORTA = 0xD0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3865  002806  0ED0               	movlw	208
  3866  002808  6E80               	movwf	128,c	;volatile
  3867  00280A  988B               	bcf	3979,4,c	;volatile
  3868  00280C  968B               	bcf	3979,3,c	;volatile
  3869  00280E  868B               	bsf	3979,3,c	;volatile
  3870  002810  888B               	bsf	3979,4,c	;volatile
  3871                           
  3872                           ;libraries/lcd_highlevel.c: 117:   PORTA = 0xA4; LATC3 = 0; LATC3 = 1;;
  3873  002812  0EA4               	movlw	164
  3874  002814  6E80               	movwf	128,c	;volatile
  3875  002816  968B               	bcf	3979,3,c	;volatile
  3876  002818  868B               	bsf	3979,3,c	;volatile
  3877                           
  3878                           ;libraries/lcd_highlevel.c: 118:   PORTA = 0xA1; LATC3 = 0; LATC3 = 1;;
  3879  00281A  0EA1               	movlw	161
  3880  00281C  6E80               	movwf	128,c	;volatile
  3881  00281E  968B               	bcf	3979,3,c	;volatile
  3882  002820  868B               	bsf	3979,3,c	;volatile
  3883                           
  3884                           ;libraries/lcd_highlevel.c: 119:   PORTA = 0xE0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3885  002822  0EE0               	movlw	224
  3886  002824  6E80               	movwf	128,c	;volatile
  3887  002826  988B               	bcf	3979,4,c	;volatile
  3888  002828  968B               	bcf	3979,3,c	;volatile
  3889  00282A  868B               	bsf	3979,3,c	;volatile
  3890  00282C  888B               	bsf	3979,4,c	;volatile
  3891                           
  3892                           ;libraries/lcd_highlevel.c: 120:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  3893  00282E  0ED0               	movlw	208
  3894  002830  6E80               	movwf	128,c	;volatile
  3895  002832  968B               	bcf	3979,3,c	;volatile
  3896  002834  868B               	bsf	3979,3,c	;volatile
  3897                           
  3898                           ;libraries/lcd_highlevel.c: 121:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  3899  002836  0E00               	movlw	0
  3900  002838  6E80               	movwf	128,c	;volatile
  3901  00283A  968B               	bcf	3979,3,c	;volatile
  3902  00283C  868B               	bsf	3979,3,c	;volatile
  3903                           
  3904                           ;libraries/lcd_highlevel.c: 122:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  3905  00283E  0E05               	movlw	5
  3906  002840  6E80               	movwf	128,c	;volatile
  3907  002842  968B               	bcf	3979,3,c	;volatile
  3908  002844  868B               	bsf	3979,3,c	;volatile
  3909                           
  3910                           ;libraries/lcd_highlevel.c: 123:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  3911  002846  0E0E               	movlw	14
  3912  002848  6E80               	movwf	128,c	;volatile
  3913  00284A  968B               	bcf	3979,3,c	;volatile
  3914  00284C  868B               	bsf	3979,3,c	;volatile
  3915                           
  3916                           ;libraries/lcd_highlevel.c: 124:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  3917  00284E  0E15               	movlw	21
  3918  002850  6E80               	movwf	128,c	;volatile
  3919  002852  968B               	bcf	3979,3,c	;volatile
  3920  002854  868B               	bsf	3979,3,c	;volatile
  3921                           
  3922                           ;libraries/lcd_highlevel.c: 125:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  3923  002856  0E0D               	movlw	13
  3924  002858  6E80               	movwf	128,c	;volatile
  3925  00285A  968B               	bcf	3979,3,c	;volatile
  3926  00285C  868B               	bsf	3979,3,c	;volatile
  3927                           
  3928                           ;libraries/lcd_highlevel.c: 126:   PORTA = 0x37; LATC3 = 0; LATC3 = 1;;
  3929  00285E  0E37               	movlw	55
  3930  002860  6E80               	movwf	128,c	;volatile
  3931  002862  968B               	bcf	3979,3,c	;volatile
  3932  002864  868B               	bsf	3979,3,c	;volatile
  3933                           
  3934                           ;libraries/lcd_highlevel.c: 127:   PORTA = 0x43; LATC3 = 0; LATC3 = 1;;
  3935  002866  0E43               	movlw	67
  3936  002868  6E80               	movwf	128,c	;volatile
  3937  00286A  968B               	bcf	3979,3,c	;volatile
  3938  00286C  868B               	bsf	3979,3,c	;volatile
  3939                           
  3940                           ;libraries/lcd_highlevel.c: 128:   PORTA = 0x47; LATC3 = 0; LATC3 = 1;;
  3941  00286E  0E47               	movlw	71
  3942  002870  6E80               	movwf	128,c	;volatile
  3943  002872  968B               	bcf	3979,3,c	;volatile
  3944  002874  868B               	bsf	3979,3,c	;volatile
  3945                           
  3946                           ;libraries/lcd_highlevel.c: 129:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  3947  002876  0E09               	movlw	9
  3948  002878  6E80               	movwf	128,c	;volatile
  3949  00287A  968B               	bcf	3979,3,c	;volatile
  3950  00287C  868B               	bsf	3979,3,c	;volatile
  3951                           
  3952                           ;libraries/lcd_highlevel.c: 130:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  3953  00287E  0E15               	movlw	21
  3954  002880  6E80               	movwf	128,c	;volatile
  3955  002882  968B               	bcf	3979,3,c	;volatile
  3956  002884  868B               	bsf	3979,3,c	;volatile
  3957                           
  3958                           ;libraries/lcd_highlevel.c: 131:   PORTA = 0x12; LATC3 = 0; LATC3 = 1;;
  3959  002886  0E12               	movlw	18
  3960  002888  6E80               	movwf	128,c	;volatile
  3961  00288A  968B               	bcf	3979,3,c	;volatile
  3962  00288C  868B               	bsf	3979,3,c	;volatile
  3963                           
  3964                           ;libraries/lcd_highlevel.c: 132:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  3965  00288E  0E16               	movlw	22
  3966  002890  6E80               	movwf	128,c	;volatile
  3967  002892  968B               	bcf	3979,3,c	;volatile
  3968  002894  868B               	bsf	3979,3,c	;volatile
  3969                           
  3970                           ;libraries/lcd_highlevel.c: 133:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  3971  002896  0E19               	movlw	25
  3972  002898  6E80               	movwf	128,c	;volatile
  3973  00289A  968B               	bcf	3979,3,c	;volatile
  3974  00289C  868B               	bsf	3979,3,c	;volatile
  3975                           
  3976                           ;libraries/lcd_highlevel.c: 134:   PORTA = 0xE1; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3977  00289E  0EE1               	movlw	225
  3978  0028A0  6E80               	movwf	128,c	;volatile
  3979  0028A2  988B               	bcf	3979,4,c	;volatile
  3980  0028A4  968B               	bcf	3979,3,c	;volatile
  3981  0028A6  868B               	bsf	3979,3,c	;volatile
  3982  0028A8  888B               	bsf	3979,4,c	;volatile
  3983                           
  3984                           ;libraries/lcd_highlevel.c: 135:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  3985  0028AA  0ED0               	movlw	208
  3986  0028AC  6E80               	movwf	128,c	;volatile
  3987  0028AE  968B               	bcf	3979,3,c	;volatile
  3988  0028B0  868B               	bsf	3979,3,c	;volatile
  3989                           
  3990                           ;libraries/lcd_highlevel.c: 136:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  3991  0028B2  0E00               	movlw	0
  3992  0028B4  6E80               	movwf	128,c	;volatile
  3993  0028B6  968B               	bcf	3979,3,c	;volatile
  3994  0028B8  868B               	bsf	3979,3,c	;volatile
  3995                           
  3996                           ;libraries/lcd_highlevel.c: 137:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  3997  0028BA  0E05               	movlw	5
  3998  0028BC  6E80               	movwf	128,c	;volatile
  3999  0028BE  968B               	bcf	3979,3,c	;volatile
  4000  0028C0  868B               	bsf	3979,3,c	;volatile
  4001                           
  4002                           ;libraries/lcd_highlevel.c: 138:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4003  0028C2  0E0D               	movlw	13
  4004  0028C4  6E80               	movwf	128,c	;volatile
  4005  0028C6  968B               	bcf	3979,3,c	;volatile
  4006  0028C8  868B               	bsf	3979,3,c	;volatile
  4007                           
  4008                           ;libraries/lcd_highlevel.c: 139:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  4009  0028CA  0E0C               	movlw	12
  4010  0028CC  6E80               	movwf	128,c	;volatile
  4011  0028CE  968B               	bcf	3979,3,c	;volatile
  4012  0028D0  868B               	bsf	3979,3,c	;volatile
  4013                           
  4014                           ;libraries/lcd_highlevel.c: 140:   PORTA = 0x06; LATC3 = 0; LATC3 = 1;;
  4015  0028D2  0E06               	movlw	6
  4016  0028D4  6E80               	movwf	128,c	;volatile
  4017  0028D6  968B               	bcf	3979,3,c	;volatile
  4018  0028D8  868B               	bsf	3979,3,c	;volatile
  4019                           
  4020                           ;libraries/lcd_highlevel.c: 141:   PORTA = 0x2D; LATC3 = 0; LATC3 = 1;;
  4021  0028DA  0E2D               	movlw	45
  4022  0028DC  6E80               	movwf	128,c	;volatile
  4023  0028DE  968B               	bcf	3979,3,c	;volatile
  4024  0028E0  868B               	bsf	3979,3,c	;volatile
  4025                           
  4026                           ;libraries/lcd_highlevel.c: 142:   PORTA = 0x44; LATC3 = 0; LATC3 = 1;;
  4027  0028E2  0E44               	movlw	68
  4028  0028E4  6E80               	movwf	128,c	;volatile
  4029  0028E6  968B               	bcf	3979,3,c	;volatile
  4030  0028E8  868B               	bsf	3979,3,c	;volatile
  4031                           
  4032                           ;libraries/lcd_highlevel.c: 143:   PORTA = 0x40; LATC3 = 0; LATC3 = 1;;
  4033  0028EA  0E40               	movlw	64
  4034  0028EC  6E80               	movwf	128,c	;volatile
  4035  0028EE  968B               	bcf	3979,3,c	;volatile
  4036  0028F0  868B               	bsf	3979,3,c	;volatile
  4037                           
  4038                           ;libraries/lcd_highlevel.c: 144:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4039  0028F2  0E0E               	movlw	14
  4040  0028F4  6E80               	movwf	128,c	;volatile
  4041  0028F6  968B               	bcf	3979,3,c	;volatile
  4042  0028F8  868B               	bsf	3979,3,c	;volatile
  4043                           
  4044                           ;libraries/lcd_highlevel.c: 145:   PORTA = 0x1C; LATC3 = 0; LATC3 = 1;;
  4045  0028FA  0E1C               	movlw	28
  4046  0028FC  6E80               	movwf	128,c	;volatile
  4047  0028FE  968B               	bcf	3979,3,c	;volatile
  4048  002900  868B               	bsf	3979,3,c	;volatile
  4049                           
  4050                           ;libraries/lcd_highlevel.c: 146:   PORTA = 0x18; LATC3 = 0; LATC3 = 1;;
  4051  002902  0E18               	movlw	24
  4052  002904  6E80               	movwf	128,c	;volatile
  4053  002906  968B               	bcf	3979,3,c	;volatile
  4054  002908  868B               	bsf	3979,3,c	;volatile
  4055                           
  4056                           ;libraries/lcd_highlevel.c: 147:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4057  00290A  0E16               	movlw	22
  4058  00290C  6E80               	movwf	128,c	;volatile
  4059  00290E  968B               	bcf	3979,3,c	;volatile
  4060  002910  868B               	bsf	3979,3,c	;volatile
  4061                           
  4062                           ;libraries/lcd_highlevel.c: 148:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4063  002912  0E19               	movlw	25
  4064  002914  6E80               	movwf	128,c	;volatile
  4065  002916  968B               	bcf	3979,3,c	;volatile
  4066  002918  868B               	bsf	3979,3,c	;volatile
  4067                           
  4068                           ;libraries/lcd_highlevel.c: 149:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4069  00291A  0E2A               	movlw	42
  4070  00291C  6E80               	movwf	128,c	;volatile
  4071  00291E  988B               	bcf	3979,4,c	;volatile
  4072  002920  968B               	bcf	3979,3,c	;volatile
  4073  002922  868B               	bsf	3979,3,c	;volatile
  4074  002924  888B               	bsf	3979,4,c	;volatile
  4075                           
  4076                           ;libraries/lcd_highlevel.c: 150:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4077  002926  0E00               	movlw	0
  4078  002928  6E80               	movwf	128,c	;volatile
  4079  00292A  968B               	bcf	3979,3,c	;volatile
  4080  00292C  868B               	bsf	3979,3,c	;volatile
  4081                           
  4082                           ;libraries/lcd_highlevel.c: 151:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4083  00292E  0E00               	movlw	0
  4084  002930  6E80               	movwf	128,c	;volatile
  4085  002932  968B               	bcf	3979,3,c	;volatile
  4086  002934  868B               	bsf	3979,3,c	;volatile
  4087                           
  4088                           ;libraries/lcd_highlevel.c: 152:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4089  002936  0E00               	movlw	0
  4090  002938  6E80               	movwf	128,c	;volatile
  4091  00293A  968B               	bcf	3979,3,c	;volatile
  4092  00293C  868B               	bsf	3979,3,c	;volatile
  4093                           
  4094                           ;libraries/lcd_highlevel.c: 153:   PORTA = 0xEF; LATC3 = 0; LATC3 = 1;;
  4095  00293E  0EEF               	movlw	239
  4096  002940  6E80               	movwf	128,c	;volatile
  4097  002942  968B               	bcf	3979,3,c	;volatile
  4098  002944  868B               	bsf	3979,3,c	;volatile
  4099                           
  4100                           ;libraries/lcd_highlevel.c: 154:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4101  002946  0E2B               	movlw	43
  4102  002948  6E80               	movwf	128,c	;volatile
  4103  00294A  988B               	bcf	3979,4,c	;volatile
  4104  00294C  968B               	bcf	3979,3,c	;volatile
  4105  00294E  868B               	bsf	3979,3,c	;volatile
  4106  002950  888B               	bsf	3979,4,c	;volatile
  4107                           
  4108                           ;libraries/lcd_highlevel.c: 155:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4109  002952  0E00               	movlw	0
  4110  002954  6E80               	movwf	128,c	;volatile
  4111  002956  968B               	bcf	3979,3,c	;volatile
  4112  002958  868B               	bsf	3979,3,c	;volatile
  4113                           
  4114                           ;libraries/lcd_highlevel.c: 156:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4115  00295A  0E00               	movlw	0
  4116  00295C  6E80               	movwf	128,c	;volatile
  4117  00295E  968B               	bcf	3979,3,c	;volatile
  4118  002960  868B               	bsf	3979,3,c	;volatile
  4119                           
  4120                           ;libraries/lcd_highlevel.c: 157:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4121  002962  0E01               	movlw	1
  4122  002964  6E80               	movwf	128,c	;volatile
  4123  002966  968B               	bcf	3979,3,c	;volatile
  4124  002968  868B               	bsf	3979,3,c	;volatile
  4125                           
  4126                           ;libraries/lcd_highlevel.c: 158:   PORTA = 0x3F; LATC3 = 0; LATC3 = 1;;
  4127  00296A  0E3F               	movlw	63
  4128  00296C  6E80               	movwf	128,c	;volatile
  4129  00296E  968B               	bcf	3979,3,c	;volatile
  4130  002970  868B               	bsf	3979,3,c	;volatile
  4131                           
  4132                           ;libraries/lcd_highlevel.c: 159:   PORTA = 0x26; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4133  002972  0E26               	movlw	38
  4134  002974  6E80               	movwf	128,c	;volatile
  4135  002976  988B               	bcf	3979,4,c	;volatile
  4136  002978  968B               	bcf	3979,3,c	;volatile
  4137  00297A  868B               	bsf	3979,3,c	;volatile
  4138  00297C  888B               	bsf	3979,4,c	;volatile
  4139                           
  4140                           ;libraries/lcd_highlevel.c: 160:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4141  00297E  0E01               	movlw	1
  4142  002980  6E80               	movwf	128,c	;volatile
  4143  002982  968B               	bcf	3979,3,c	;volatile
  4144  002984  868B               	bsf	3979,3,c	;volatile
  4145                           
  4146                           ;libraries/lcd_highlevel.c: 161:   PORTA = 0x29; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4147  002986  0E29               	movlw	41
  4148  002988  6E80               	movwf	128,c	;volatile
  4149  00298A  988B               	bcf	3979,4,c	;volatile
  4150  00298C  968B               	bcf	3979,3,c	;volatile
  4151  00298E  868B               	bsf	3979,3,c	;volatile
  4152  002990  888B               	bsf	3979,4,c	;volatile
  4153  002992  0012               	return		;funcret
  4154  002994                     __end_of_LCD_Init:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _LCD_Lowlevel_Init *****************
  4158 ;; Defined at:
  4159 ;;		line 17 in file "libraries/lcd_lowlevel.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  i               4   18[COMRAM] unsigned long 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4173 ;;      Params:         0       0       0       0       0       0       0
  4174 ;;      Locals:         4       0       0       0       0       0       0
  4175 ;;      Temps:          1       0       0       0       0       0       0
  4176 ;;      Totals:         5       0       0       0       0       0       0
  4177 ;;Total ram usage:        5 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 4
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_LCD_Init
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text8
  4188  00459E                     __ptext8:
  4189                           	callstack 0
  4190  00459E                     _LCD_Lowlevel_Init:
  4191                           	callstack 24
  4192  00459E                     
  4193                           ;libraries/lcd_lowlevel.c: 19:   uint32_t i;;libraries/lcd_lowlevel.c: 20:   TRISC5 = 0;
  4194  00459E  9A94               	bcf	3988,5,c	;volatile
  4195                           
  4196                           ;libraries/lcd_lowlevel.c: 21:   TRISC2 = 0;
  4197  0045A0  9494               	bcf	3988,2,c	;volatile
  4198                           
  4199                           ;libraries/lcd_lowlevel.c: 22:   TRISC3 = 0;
  4200  0045A2  9694               	bcf	3988,3,c	;volatile
  4201                           
  4202                           ;libraries/lcd_lowlevel.c: 23:   TRISC4 = 0;
  4203  0045A4  9894               	bcf	3988,4,c	;volatile
  4204  0045A6                     
  4205                           ;libraries/lcd_lowlevel.c: 25:   TRISA = 0x00;
  4206  0045A6  0E00               	movlw	0
  4207  0045A8  6E92               	movwf	146,c	;volatile
  4208  0045AA                     
  4209                           ;libraries/lcd_lowlevel.c: 28:  LATC5 = 0;
  4210  0045AA  9A8B               	bcf	3979,5,c	;volatile
  4211  0045AC                     
  4212                           ;libraries/lcd_lowlevel.c: 29:  LATC2 = 1;
  4213  0045AC  848B               	bsf	3979,2,c	;volatile
  4214  0045AE                     
  4215                           ;libraries/lcd_lowlevel.c: 30:  LATC3 = 1;
  4216  0045AE  868B               	bsf	3979,3,c	;volatile
  4217  0045B0                     
  4218                           ;libraries/lcd_lowlevel.c: 31:  LATC4 = 1;
  4219  0045B0  888B               	bsf	3979,4,c	;volatile
  4220                           
  4221                           ;libraries/lcd_lowlevel.c: 33:   for(i=0;i<12;i++)
  4222  0045B2  0E00               	movlw	0
  4223  0045B4  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4224  0045B6  0E00               	movlw	0
  4225  0045B8  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4226  0045BA  0E00               	movlw	0
  4227  0045BC  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4228  0045BE  0E00               	movlw	0
  4229  0045C0  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4230  0045C2                     l3452:
  4231                           
  4232                           ;libraries/lcd_lowlevel.c: 34:   {;libraries/lcd_lowlevel.c: 35:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4233  0045C2  0ED0               	movlw	208
  4234  0045C4  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4235  0045C6  0ECA               	movlw	202
  4236  0045C8                     u6047:
  4237  0045C8  2EE8               	decfsz	wreg,f,c
  4238  0045CA  D7FE               	bra	u6047
  4239  0045CC  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4240  0045CE  D7FC               	bra	u6047
  4241  0045D0                     
  4242                           ;libraries/lcd_lowlevel.c: 36:   }
  4243  0045D0  0E01               	movlw	1
  4244  0045D2  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4245  0045D4  0E00               	movlw	0
  4246  0045D6  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4247  0045D8  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4248  0045DA  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4249  0045DC  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4250  0045DE  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4251  0045E0  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4252  0045E2  E109               	bnz	u1630
  4253  0045E4  0E0C               	movlw	12
  4254  0045E6  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4255  0045E8  A0D8               	btfss	status,0,c
  4256  0045EA  EFF9  F022         	goto	u1631
  4257  0045EE  EFFB  F022         	goto	u1630
  4258  0045F2                     u1631:
  4259  0045F2  EFE1  F022         	goto	l3452
  4260  0045F6                     u1630:
  4261  0045F6                     
  4262                           ;libraries/lcd_lowlevel.c: 38:   for(i=0;i<12;i++)
  4263  0045F6  0E00               	movlw	0
  4264  0045F8  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4265  0045FA  0E00               	movlw	0
  4266  0045FC  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4267  0045FE  0E00               	movlw	0
  4268  004600  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4269  004602  0E00               	movlw	0
  4270  004604  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4271  004606                     l3464:
  4272                           
  4273                           ;libraries/lcd_lowlevel.c: 39:   {;libraries/lcd_lowlevel.c: 40:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4274  004606  0ED0               	movlw	208
  4275  004608  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4276  00460A  0ECA               	movlw	202
  4277  00460C                     u6057:
  4278  00460C  2EE8               	decfsz	wreg,f,c
  4279  00460E  D7FE               	bra	u6057
  4280  004610  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4281  004612  D7FC               	bra	u6057
  4282  004614                     
  4283                           ;libraries/lcd_lowlevel.c: 41:   }
  4284  004614  0E01               	movlw	1
  4285  004616  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4286  004618  0E00               	movlw	0
  4287  00461A  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4288  00461C  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4289  00461E  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4290  004620  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4291  004622  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4292  004624  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4293  004626  E109               	bnz	u1640
  4294  004628  0E0C               	movlw	12
  4295  00462A  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4296  00462C  A0D8               	btfss	status,0,c
  4297  00462E  EF1B  F023         	goto	u1641
  4298  004632  EF1D  F023         	goto	u1640
  4299  004636                     u1641:
  4300  004636  EF03  F023         	goto	l3464
  4301  00463A                     u1640:
  4302  00463A  0012               	return		;funcret
  4303  00463C                     __end_of_LCD_Lowlevel_Init:
  4304                           	callstack 0
  4305                           
  4306 ;; *************** function _GameParameters_init *****************
  4307 ;; Defined at:
  4308 ;;		line 3 in file "class/gameParameters.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  s               2   42[COMRAM] PTR struct GameParameter
  4311 ;;		 -> g1(209), 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4323 ;;      Params:         2       0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0
  4326 ;;      Totals:         2       0       0       0       0       0       0
  4327 ;;Total ram usage:        2 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 5
  4330 ;; This function calls:
  4331 ;;		_Ball_init
  4332 ;;		_LCD_ButtonCreate
  4333 ;;		_LCD_SliderCreate
  4334 ;;		_Paddle_init
  4335 ;; This function is called by:
  4336 ;;		_Factory_init
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text9
  4341  001D66                     __ptext9:
  4342                           	callstack 0
  4343  001D66                     _GameParameters_init:
  4344                           	callstack 24
  4345  001D66                     
  4346                           ;class/gameParameters.c: 3: void GameParameters_init(struct GameParameters* s);class/gam
      +                          eParameters.c: 4: {;class/gameParameters.c: 5:     s->backlight = 11;
  4347  001D66  C02B  FFD9         	movff	GameParameters_init@s,fsr2l
  4348  001D6A  C02C  FFDA         	movff	GameParameters_init@s+1,fsr2h
  4349  001D6E  0E0B               	movlw	11
  4350  001D70  6EDE               	movwf	postinc2,c
  4351  001D72  0E00               	movlw	0
  4352  001D74  6EDD               	movwf	postdec2,c
  4353  001D76                     
  4354                           ;class/gameParameters.c: 6:     CCPR2L = 255;
  4355  001D76  6867               	setf	103,c	;volatile
  4356  001D78                     
  4357                           ;class/gameParameters.c: 7:     s->player = 0;
  4358  001D78  EE20 F002          	lfsr	2,2
  4359  001D7C  502B               	movf	GameParameters_init@s^0,w,c
  4360  001D7E  26D9               	addwf	fsr2l,f,c
  4361  001D80  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4362  001D82  22DA               	addwfc	fsr2h,f,c
  4363  001D84  0E00               	movlw	0
  4364  001D86  6EDE               	movwf	postinc2,c
  4365  001D88  0E00               	movlw	0
  4366  001D8A  6EDD               	movwf	postdec2,c
  4367  001D8C                     
  4368                           ;class/gameParameters.c: 8:     s->x=0;
  4369  001D8C  EE20 F004          	lfsr	2,4
  4370  001D90  502B               	movf	GameParameters_init@s^0,w,c
  4371  001D92  26D9               	addwf	fsr2l,f,c
  4372  001D94  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4373  001D96  22DA               	addwfc	fsr2h,f,c
  4374  001D98  0E00               	movlw	0
  4375  001D9A  6EDE               	movwf	postinc2,c
  4376  001D9C  0E00               	movlw	0
  4377  001D9E  6EDD               	movwf	postdec2,c
  4378  001DA0                     
  4379                           ;class/gameParameters.c: 9:     s->y=0;
  4380  001DA0  EE20 F006          	lfsr	2,6
  4381  001DA4  502B               	movf	GameParameters_init@s^0,w,c
  4382  001DA6  26D9               	addwf	fsr2l,f,c
  4383  001DA8  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4384  001DAA  22DA               	addwfc	fsr2h,f,c
  4385  001DAC  0E00               	movlw	0
  4386  001DAE  6EDE               	movwf	postinc2,c
  4387  001DB0  0E00               	movlw	0
  4388  001DB2  6EDD               	movwf	postdec2,c
  4389  001DB4                     
  4390                           ;class/gameParameters.c: 10:     Ball_init(&(s->b));
  4391  001DB4  0EB1               	movlw	177
  4392  001DB6  242B               	addwf	GameParameters_init@s^0,w,c
  4393  001DB8  6E12               	movwf	Ball_init@b^0,c
  4394  001DBA  0E00               	movlw	0
  4395  001DBC  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4396  001DBE  6E13               	movwf	(Ball_init@b+1)^0,c
  4397  001DC0  EC7C  F026         	call	_Ball_init	;wreg free
  4398  001DC4                     
  4399                           ;class/gameParameters.c: 11:     Paddle_init(&(s->p1),0);
  4400  001DC4  0EB9               	movlw	185
  4401  001DC6  242B               	addwf	GameParameters_init@s^0,w,c
  4402  001DC8  6E12               	movwf	Paddle_init@p^0,c
  4403  001DCA  0E00               	movlw	0
  4404  001DCC  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4405  001DCE  6E13               	movwf	(Paddle_init@p+1)^0,c
  4406  001DD0  0E00               	movlw	0
  4407  001DD2  6E15               	movwf	(Paddle_init@team+1)^0,c
  4408  001DD4  0E00               	movlw	0
  4409  001DD6  6E14               	movwf	Paddle_init@team^0,c
  4410  001DD8  ECA8  F01D         	call	_Paddle_init	;wreg free
  4411  001DDC                     
  4412                           ;class/gameParameters.c: 12:     Paddle_init(&(s->p2),1);
  4413  001DDC  0EC3               	movlw	195
  4414  001DDE  242B               	addwf	GameParameters_init@s^0,w,c
  4415  001DE0  6E12               	movwf	Paddle_init@p^0,c
  4416  001DE2  0E00               	movlw	0
  4417  001DE4  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4418  001DE6  6E13               	movwf	(Paddle_init@p+1)^0,c
  4419  001DE8  0E00               	movlw	0
  4420  001DEA  6E15               	movwf	(Paddle_init@team+1)^0,c
  4421  001DEC  0E01               	movlw	1
  4422  001DEE  6E14               	movwf	Paddle_init@team^0,c
  4423  001DF0  ECA8  F01D         	call	_Paddle_init	;wreg free
  4424  001DF4                     
  4425                           ;class/gameParameters.c: 13:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"Parametres",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s
      +                          ->btnParam),1);
  4426  001DF4  0E00               	movlw	0
  4427  001DF6  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4428  001DF8  0E82               	movlw	130
  4429  001DFA  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4430  001DFC  0E00               	movlw	0
  4431  001DFE  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4432  001E00  0E32               	movlw	50
  4433  001E02  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4434  001E04  0E00               	movlw	0
  4435  001E06  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4436  001E08  0E5A               	movlw	90
  4437  001E0A  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4438  001E0C  0E00               	movlw	0
  4439  001E0E  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4440  001E10  0E14               	movlw	20
  4441  001E12  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4442  001E14  0EFF               	movlw	255
  4443  001E16  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4444  001E18  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4445  001E1A  0E00               	movlw	0
  4446  001E1C  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4447  001E1E  0E00               	movlw	0
  4448  001E20  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4449  001E22  0EAB               	movlw	low STR_3
  4450  001E24  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4451  001E26  0E7F               	movlw	high STR_3
  4452  001E28  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4453  001E2A  0E99               	movlw	low _arialNarrow_12ptFontInfo
  4454  001E2C  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4455  001E2E  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4456  001E30  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4457  001E32  0E00               	movlw	0
  4458  001E34  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4459  001E36  0E00               	movlw	0
  4460  001E38  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4461  001E3A  0E00               	movlw	0
  4462  001E3C  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4463  001E3E  0E00               	movlw	0
  4464  001E40  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4465  001E42  0E00               	movlw	0
  4466  001E44  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4467  001E46  0E00               	movlw	0
  4468  001E48  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4469  001E4A  0E08               	movlw	8
  4470  001E4C  242B               	addwf	GameParameters_init@s^0,w,c
  4471  001E4E  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4472  001E50  0E00               	movlw	0
  4473  001E52  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4474  001E54  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4475  001E56  0E01               	movlw	1
  4476  001E58  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4477  001E5A  ECD6  F01B         	call	_LCD_ButtonCreate	;wreg free
  4478  001E5E                     
  4479                           ;class/gameParameters.c: 14:     LCD_ButtonCreate(10,250,70,20,0b1111111111111111,0b0000
      +                          000000000000,"1 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->
      +                          btnOnePlayer),2);
  4480  001E5E  0E00               	movlw	0
  4481  001E60  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4482  001E62  0E0A               	movlw	10
  4483  001E64  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4484  001E66  0E00               	movlw	0
  4485  001E68  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4486  001E6A  0EFA               	movlw	250
  4487  001E6C  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4488  001E6E  0E00               	movlw	0
  4489  001E70  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4490  001E72  0E46               	movlw	70
  4491  001E74  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4492  001E76  0E00               	movlw	0
  4493  001E78  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4494  001E7A  0E14               	movlw	20
  4495  001E7C  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4496  001E7E  0EFF               	movlw	255
  4497  001E80  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4498  001E82  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4499  001E84  0E00               	movlw	0
  4500  001E86  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4501  001E88  0E00               	movlw	0
  4502  001E8A  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4503  001E8C  0EC0               	movlw	low STR_4
  4504  001E8E  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4505  001E90  0E7F               	movlw	high STR_4
  4506  001E92  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4507  001E94  0E99               	movlw	low _arialNarrow_12ptFontInfo
  4508  001E96  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4509  001E98  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4510  001E9A  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4511  001E9C  0E00               	movlw	0
  4512  001E9E  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4513  001EA0  0E00               	movlw	0
  4514  001EA2  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4515  001EA4  0E00               	movlw	0
  4516  001EA6  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4517  001EA8  0E00               	movlw	0
  4518  001EAA  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4519  001EAC  0E00               	movlw	0
  4520  001EAE  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4521  001EB0  0E00               	movlw	0
  4522  001EB2  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4523  001EB4  0E20               	movlw	32
  4524  001EB6  242B               	addwf	GameParameters_init@s^0,w,c
  4525  001EB8  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4526  001EBA  0E00               	movlw	0
  4527  001EBC  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4528  001EBE  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4529  001EC0  0E02               	movlw	2
  4530  001EC2  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4531  001EC4  ECD6  F01B         	call	_LCD_ButtonCreate	;wreg free
  4532  001EC8                     
  4533                           ;class/gameParameters.c: 15:     LCD_ButtonCreate(150,250,70,20,0b1111111111111111,0b000
      +                          0000000000000,"2 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnTwoPlayer),3);
  4534  001EC8  0E00               	movlw	0
  4535  001ECA  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4536  001ECC  0E96               	movlw	150
  4537  001ECE  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4538  001ED0  0E00               	movlw	0
  4539  001ED2  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4540  001ED4  0EFA               	movlw	250
  4541  001ED6  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4542  001ED8  0E00               	movlw	0
  4543  001EDA  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4544  001EDC  0E46               	movlw	70
  4545  001EDE  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4546  001EE0  0E00               	movlw	0
  4547  001EE2  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4548  001EE4  0E14               	movlw	20
  4549  001EE6  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4550  001EE8  0EFF               	movlw	255
  4551  001EEA  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4552  001EEC  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4553  001EEE  0E00               	movlw	0
  4554  001EF0  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4555  001EF2  0E00               	movlw	0
  4556  001EF4  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4557  001EF6  0EC9               	movlw	low STR_5
  4558  001EF8  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4559  001EFA  0E7F               	movlw	high STR_5
  4560  001EFC  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4561  001EFE  0E99               	movlw	low _arialNarrow_12ptFontInfo
  4562  001F00  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4563  001F02  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4564  001F04  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4565  001F06  0E00               	movlw	0
  4566  001F08  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4567  001F0A  0E00               	movlw	0
  4568  001F0C  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4569  001F0E  0E00               	movlw	0
  4570  001F10  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4571  001F12  0E00               	movlw	0
  4572  001F14  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4573  001F16  0E00               	movlw	0
  4574  001F18  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4575  001F1A  0E00               	movlw	0
  4576  001F1C  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4577  001F1E  0E38               	movlw	56
  4578  001F20  242B               	addwf	GameParameters_init@s^0,w,c
  4579  001F22  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4580  001F24  0E00               	movlw	0
  4581  001F26  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4582  001F28  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4583  001F2A  0E03               	movlw	3
  4584  001F2C  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4585  001F2E  ECD6  F01B         	call	_LCD_ButtonCreate	;wreg free
  4586  001F32                     
  4587                           ;class/gameParameters.c: 16:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"QUITTER",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->b
      +                          tnLeaveParam),4);
  4588  001F32  0E00               	movlw	0
  4589  001F34  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4590  001F36  0E82               	movlw	130
  4591  001F38  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4592  001F3A  0E00               	movlw	0
  4593  001F3C  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4594  001F3E  0E32               	movlw	50
  4595  001F40  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4596  001F42  0E00               	movlw	0
  4597  001F44  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4598  001F46  0E5A               	movlw	90
  4599  001F48  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4600  001F4A  0E00               	movlw	0
  4601  001F4C  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4602  001F4E  0E14               	movlw	20
  4603  001F50  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4604  001F52  0EFF               	movlw	255
  4605  001F54  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4606  001F56  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4607  001F58  0E00               	movlw	0
  4608  001F5A  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4609  001F5C  0E00               	movlw	0
  4610  001F5E  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4611  001F60  0EDA               	movlw	low STR_6
  4612  001F62  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4613  001F64  0E7F               	movlw	high STR_6
  4614  001F66  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4615  001F68  0E99               	movlw	low _arialNarrow_12ptFontInfo
  4616  001F6A  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4617  001F6C  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4618  001F6E  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4619  001F70  0E00               	movlw	0
  4620  001F72  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4621  001F74  0E00               	movlw	0
  4622  001F76  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4623  001F78  0E00               	movlw	0
  4624  001F7A  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4625  001F7C  0E00               	movlw	0
  4626  001F7E  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4627  001F80  0E00               	movlw	0
  4628  001F82  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4629  001F84  0E00               	movlw	0
  4630  001F86  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4631  001F88  0E50               	movlw	80
  4632  001F8A  242B               	addwf	GameParameters_init@s^0,w,c
  4633  001F8C  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4634  001F8E  0E00               	movlw	0
  4635  001F90  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4636  001F92  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4637  001F94  0E04               	movlw	4
  4638  001F96  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4639  001F98  ECD6  F01B         	call	_LCD_ButtonCreate	;wreg free
  4640  001F9C                     
  4641                           ;class/gameParameters.c: 17:     LCD_ButtonCreate(10,220,70,50,0b0000000000000000,0b1111
      +                          111111111111,"<--",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnLe
      +                          ft),5);
  4642  001F9C  0E00               	movlw	0
  4643  001F9E  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4644  001FA0  0E0A               	movlw	10
  4645  001FA2  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4646  001FA4  0E00               	movlw	0
  4647  001FA6  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4648  001FA8  0EDC               	movlw	220
  4649  001FAA  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4650  001FAC  0E00               	movlw	0
  4651  001FAE  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4652  001FB0  0E46               	movlw	70
  4653  001FB2  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4654  001FB4  0E00               	movlw	0
  4655  001FB6  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4656  001FB8  0E32               	movlw	50
  4657  001FBA  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4658  001FBC  0E00               	movlw	0
  4659  001FBE  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4660  001FC0  0E00               	movlw	0
  4661  001FC2  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
  4662  001FC4  0EFF               	movlw	255
  4663  001FC6  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4664  001FC8  681C               	setf	LCD_ButtonCreate@bgColor^0,c
  4665  001FCA  0EF5               	movlw	low STR_7
  4666  001FCC  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4667  001FCE  0E7F               	movlw	high STR_7
  4668  001FD0  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4669  001FD2  0E99               	movlw	low _arialNarrow_12ptFontInfo
  4670  001FD4  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4671  001FD6  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4672  001FD8  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4673  001FDA  0E00               	movlw	0
  4674  001FDC  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4675  001FDE  0E00               	movlw	0
  4676  001FE0  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4677  001FE2  0E00               	movlw	0
  4678  001FE4  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4679  001FE6  0E00               	movlw	0
  4680  001FE8  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4681  001FEA  0E00               	movlw	0
  4682  001FEC  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4683  001FEE  0E00               	movlw	0
  4684  001FF0  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4685  001FF2  0E68               	movlw	104
  4686  001FF4  242B               	addwf	GameParameters_init@s^0,w,c
  4687  001FF6  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4688  001FF8  0E00               	movlw	0
  4689  001FFA  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4690  001FFC  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4691  001FFE  0E05               	movlw	5
  4692  002000  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4693  002002  ECD6  F01B         	call	_LCD_ButtonCreate	;wreg free
  4694  002006                     
  4695                           ;class/gameParameters.c: 18:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"-->",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnR
      +                          ight),6);
  4696  002006  0E00               	movlw	0
  4697  002008  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4698  00200A  0E96               	movlw	150
  4699  00200C  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4700  00200E  0E00               	movlw	0
  4701  002010  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4702  002012  0EDC               	movlw	220
  4703  002014  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4704  002016  0E00               	movlw	0
  4705  002018  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4706  00201A  0E46               	movlw	70
  4707  00201C  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4708  00201E  0E00               	movlw	0
  4709  002020  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4710  002022  0E32               	movlw	50
  4711  002024  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4712  002026  0E00               	movlw	0
  4713  002028  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4714  00202A  0E00               	movlw	0
  4715  00202C  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
  4716  00202E  0EFF               	movlw	255
  4717  002030  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4718  002032  681C               	setf	LCD_ButtonCreate@bgColor^0,c
  4719  002034  0EF9               	movlw	low STR_8
  4720  002036  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4721  002038  0E7F               	movlw	high STR_8
  4722  00203A  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4723  00203C  0E99               	movlw	low _arialNarrow_12ptFontInfo
  4724  00203E  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4725  002040  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4726  002042  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4727  002044  0E00               	movlw	0
  4728  002046  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4729  002048  0E00               	movlw	0
  4730  00204A  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4731  00204C  0E00               	movlw	0
  4732  00204E  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4733  002050  0E00               	movlw	0
  4734  002052  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4735  002054  0E00               	movlw	0
  4736  002056  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4737  002058  0E00               	movlw	0
  4738  00205A  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4739  00205C  0E80               	movlw	128
  4740  00205E  242B               	addwf	GameParameters_init@s^0,w,c
  4741  002060  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4742  002062  0E00               	movlw	0
  4743  002064  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4744  002066  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4745  002068  0E06               	movlw	6
  4746  00206A  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4747  00206C  ECD6  F01B         	call	_LCD_ButtonCreate	;wreg free
  4748  002070                     
  4749                           ;class/gameParameters.c: 19:     LCD_SliderCreate(50,100,165,20,0b0000000000000000,0b111
      +                          1111111111111,0b1111100000000000,0,11,((void*)0),&(s->sldParam));
  4750  002070  0E00               	movlw	0
  4751  002072  6E13               	movwf	(LCD_SliderCreate@posX+1)^0,c
  4752  002074  0E32               	movlw	50
  4753  002076  6E12               	movwf	LCD_SliderCreate@posX^0,c
  4754  002078  0E00               	movlw	0
  4755  00207A  6E15               	movwf	(LCD_SliderCreate@posY+1)^0,c
  4756  00207C  0E64               	movlw	100
  4757  00207E  6E14               	movwf	LCD_SliderCreate@posY^0,c
  4758  002080  0E00               	movlw	0
  4759  002082  6E17               	movwf	(LCD_SliderCreate@width+1)^0,c
  4760  002084  0EA5               	movlw	165
  4761  002086  6E16               	movwf	LCD_SliderCreate@width^0,c
  4762  002088  0E00               	movlw	0
  4763  00208A  6E19               	movwf	(LCD_SliderCreate@height+1)^0,c
  4764  00208C  0E14               	movlw	20
  4765  00208E  6E18               	movwf	LCD_SliderCreate@height^0,c
  4766  002090  0E00               	movlw	0
  4767  002092  6E1B               	movwf	(LCD_SliderCreate@sldColor+1)^0,c
  4768  002094  0E00               	movlw	0
  4769  002096  6E1A               	movwf	LCD_SliderCreate@sldColor^0,c
  4770  002098  0EFF               	movlw	255
  4771  00209A  6E1D               	movwf	(LCD_SliderCreate@bgColor+1)^0,c
  4772  00209C  681C               	setf	LCD_SliderCreate@bgColor^0,c
  4773  00209E  0EF8               	movlw	248
  4774  0020A0  6E1F               	movwf	(LCD_SliderCreate@borderColor+1)^0,c
  4775  0020A2  0E00               	movlw	0
  4776  0020A4  6E1E               	movwf	LCD_SliderCreate@borderColor^0,c
  4777  0020A6  0E00               	movlw	0
  4778  0020A8  6E21               	movwf	(LCD_SliderCreate@cursorWidth+1)^0,c
  4779  0020AA  0E00               	movlw	0
  4780  0020AC  6E20               	movwf	LCD_SliderCreate@cursorWidth^0,c
  4781  0020AE  0E00               	movlw	0
  4782  0020B0  6E23               	movwf	(LCD_SliderCreate@steps+1)^0,c
  4783  0020B2  0E0B               	movlw	11
  4784  0020B4  6E22               	movwf	LCD_SliderCreate@steps^0,c
  4785  0020B6  0E00               	movlw	0
  4786  0020B8  6E24               	movwf	LCD_SliderCreate@fpPress^0,c
  4787  0020BA  0E00               	movlw	0
  4788  0020BC  6E25               	movwf	(LCD_SliderCreate@fpPress+1)^0,c
  4789  0020BE  0E98               	movlw	152
  4790  0020C0  242B               	addwf	GameParameters_init@s^0,w,c
  4791  0020C2  6E26               	movwf	LCD_SliderCreate@slider^0,c
  4792  0020C4  0E00               	movlw	0
  4793  0020C6  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4794  0020C8  6E27               	movwf	(LCD_SliderCreate@slider+1)^0,c
  4795  0020CA  EC53  F01C         	call	_LCD_SliderCreate	;wreg free
  4796  0020CE  0012               	return		;funcret
  4797  0020D0                     __end_of_GameParameters_init:
  4798                           	callstack 0
  4799                           
  4800 ;; *************** function _Paddle_init *****************
  4801 ;; Defined at:
  4802 ;;		line 3 in file "class/paddle.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  p               2   17[COMRAM] PTR struct Paddle
  4805 ;;		 -> g1(209), 
  4806 ;;  team            2   19[COMRAM] unsigned short 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4818 ;;      Params:         4       0       0       0       0       0       0
  4819 ;;      Locals:         0       0       0       0       0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0
  4821 ;;      Totals:         4       0       0       0       0       0       0
  4822 ;;Total ram usage:        4 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 4
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_GameParameters_init
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text10
  4833  003B50                     __ptext10:
  4834                           	callstack 0
  4835  003B50                     _Paddle_init:
  4836                           	callstack 24
  4837  003B50                     
  4838                           ;class/paddle.c: 3: void Paddle_init(struct Paddle* p,uint16_t team);class/paddle.c: 4: 
      +                          {;class/paddle.c: 5:     if(team)
  4839  003B50  5014               	movf	Paddle_init@team^0,w,c
  4840  003B52  1015               	iorwf	(Paddle_init@team+1)^0,w,c
  4841  003B54  B4D8               	btfsc	status,2,c
  4842  003B56  EFAF  F01D         	goto	u3711
  4843  003B5A  EFB1  F01D         	goto	u3710
  4844  003B5E                     u3711:
  4845  003B5E  EFE3  F01D         	goto	l6428
  4846  003B62                     u3710:
  4847  003B62                     
  4848                           ;class/paddle.c: 6:     {;class/paddle.c: 7:         p->x = 90;
  4849  003B62  C012  FFD9         	movff	Paddle_init@p,fsr2l
  4850  003B66  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
  4851  003B6A  0E5A               	movlw	90
  4852  003B6C  6EDE               	movwf	postinc2,c
  4853  003B6E  0E00               	movlw	0
  4854  003B70  6EDD               	movwf	postdec2,c
  4855  003B72                     
  4856                           ;class/paddle.c: 8:         p->y = 20;
  4857  003B72  EE20 F002          	lfsr	2,2
  4858  003B76  5012               	movf	Paddle_init@p^0,w,c
  4859  003B78  26D9               	addwf	fsr2l,f,c
  4860  003B7A  5013               	movf	(Paddle_init@p+1)^0,w,c
  4861  003B7C  22DA               	addwfc	fsr2h,f,c
  4862  003B7E  0E14               	movlw	20
  4863  003B80  6EDE               	movwf	postinc2,c
  4864  003B82  0E00               	movlw	0
  4865  003B84  6EDD               	movwf	postdec2,c
  4866  003B86                     
  4867                           ;class/paddle.c: 9:         p->w = 50;
  4868  003B86  EE20 F004          	lfsr	2,4
  4869  003B8A  5012               	movf	Paddle_init@p^0,w,c
  4870  003B8C  26D9               	addwf	fsr2l,f,c
  4871  003B8E  5013               	movf	(Paddle_init@p+1)^0,w,c
  4872  003B90  22DA               	addwfc	fsr2h,f,c
  4873  003B92  0E32               	movlw	50
  4874  003B94  6EDE               	movwf	postinc2,c
  4875  003B96  0E00               	movlw	0
  4876  003B98  6EDD               	movwf	postdec2,c
  4877  003B9A                     
  4878                           ;class/paddle.c: 10:         p->h = 20;
  4879  003B9A  EE20 F006          	lfsr	2,6
  4880  003B9E  5012               	movf	Paddle_init@p^0,w,c
  4881  003BA0  26D9               	addwf	fsr2l,f,c
  4882  003BA2  5013               	movf	(Paddle_init@p+1)^0,w,c
  4883  003BA4  22DA               	addwfc	fsr2h,f,c
  4884  003BA6  0E14               	movlw	20
  4885  003BA8  6EDE               	movwf	postinc2,c
  4886  003BAA  0E00               	movlw	0
  4887  003BAC  6EDD               	movwf	postdec2,c
  4888  003BAE                     
  4889                           ;class/paddle.c: 11:         p->color = 0b0000000000011111;
  4890  003BAE  EE20 F008          	lfsr	2,8
  4891  003BB2  5012               	movf	Paddle_init@p^0,w,c
  4892  003BB4  26D9               	addwf	fsr2l,f,c
  4893  003BB6  5013               	movf	(Paddle_init@p+1)^0,w,c
  4894  003BB8  22DA               	addwfc	fsr2h,f,c
  4895  003BBA  0E1F               	movlw	31
  4896  003BBC  6EDE               	movwf	postinc2,c
  4897  003BBE  0E00               	movlw	0
  4898  003BC0  6EDD               	movwf	postdec2,c
  4899                           
  4900                           ;class/paddle.c: 12:     }
  4901  003BC2  EF13  F01E         	goto	l23
  4902  003BC6                     l6428:
  4903                           
  4904                           ;class/paddle.c: 14:     {;class/paddle.c: 15:         p->x = 90;
  4905  003BC6  C012  FFD9         	movff	Paddle_init@p,fsr2l
  4906  003BCA  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
  4907  003BCE  0E5A               	movlw	90
  4908  003BD0  6EDE               	movwf	postinc2,c
  4909  003BD2  0E00               	movlw	0
  4910  003BD4  6EDD               	movwf	postdec2,c
  4911  003BD6                     
  4912                           ;class/paddle.c: 16:         p->y = 280;
  4913  003BD6  EE20 F002          	lfsr	2,2
  4914  003BDA  5012               	movf	Paddle_init@p^0,w,c
  4915  003BDC  26D9               	addwf	fsr2l,f,c
  4916  003BDE  5013               	movf	(Paddle_init@p+1)^0,w,c
  4917  003BE0  22DA               	addwfc	fsr2h,f,c
  4918  003BE2  0E18               	movlw	24
  4919  003BE4  6EDE               	movwf	postinc2,c
  4920  003BE6  0E01               	movlw	1
  4921  003BE8  6EDD               	movwf	postdec2,c
  4922  003BEA                     
  4923                           ;class/paddle.c: 17:         p->w = 50;
  4924  003BEA  EE20 F004          	lfsr	2,4
  4925  003BEE  5012               	movf	Paddle_init@p^0,w,c
  4926  003BF0  26D9               	addwf	fsr2l,f,c
  4927  003BF2  5013               	movf	(Paddle_init@p+1)^0,w,c
  4928  003BF4  22DA               	addwfc	fsr2h,f,c
  4929  003BF6  0E32               	movlw	50
  4930  003BF8  6EDE               	movwf	postinc2,c
  4931  003BFA  0E00               	movlw	0
  4932  003BFC  6EDD               	movwf	postdec2,c
  4933  003BFE                     
  4934                           ;class/paddle.c: 18:         p->h = 20;
  4935  003BFE  EE20 F006          	lfsr	2,6
  4936  003C02  5012               	movf	Paddle_init@p^0,w,c
  4937  003C04  26D9               	addwf	fsr2l,f,c
  4938  003C06  5013               	movf	(Paddle_init@p+1)^0,w,c
  4939  003C08  22DA               	addwfc	fsr2h,f,c
  4940  003C0A  0E14               	movlw	20
  4941  003C0C  6EDE               	movwf	postinc2,c
  4942  003C0E  0E00               	movlw	0
  4943  003C10  6EDD               	movwf	postdec2,c
  4944  003C12                     
  4945                           ;class/paddle.c: 19:         p->color = 0b0000000000011111;
  4946  003C12  EE20 F008          	lfsr	2,8
  4947  003C16  5012               	movf	Paddle_init@p^0,w,c
  4948  003C18  26D9               	addwf	fsr2l,f,c
  4949  003C1A  5013               	movf	(Paddle_init@p+1)^0,w,c
  4950  003C1C  22DA               	addwfc	fsr2h,f,c
  4951  003C1E  0E1F               	movlw	31
  4952  003C20  6EDE               	movwf	postinc2,c
  4953  003C22  0E00               	movlw	0
  4954  003C24  6EDD               	movwf	postdec2,c
  4955  003C26                     l23:
  4956  003C26  0012               	return		;funcret
  4957  003C28                     __end_of_Paddle_init:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _LCD_SliderCreate *****************
  4961 ;; Defined at:
  4962 ;;		line 291 in file "libraries/lcd_highlevel.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  posX            2   17[COMRAM] unsigned short 
  4965 ;;  posY            2   19[COMRAM] unsigned short 
  4966 ;;  width           2   21[COMRAM] unsigned short 
  4967 ;;  height          2   23[COMRAM] unsigned short 
  4968 ;;  sldColor        2   25[COMRAM] unsigned short 
  4969 ;;  bgColor         2   27[COMRAM] unsigned short 
  4970 ;;  borderColor     2   29[COMRAM] unsigned short 
  4971 ;;  cursorWidth     2   31[COMRAM] unsigned short 
  4972 ;;  steps           2   33[COMRAM] unsigned short 
  4973 ;;  fpPress         2   35[COMRAM] PTR FTN()void 
  4974 ;;		 -> Absolute function(1), 
  4975 ;;  slider          2   37[COMRAM] PTR struct .
  4976 ;;		 -> g1(209), 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4988 ;;      Params:        22       0       0       0       0       0       0
  4989 ;;      Locals:         0       0       0       0       0       0       0
  4990 ;;      Temps:          0       0       0       0       0       0       0
  4991 ;;      Totals:        22       0       0       0       0       0       0
  4992 ;;Total ram usage:       22 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 4
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_GameParameters_init
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text11
  5003  0038A6                     __ptext11:
  5004                           	callstack 0
  5005  0038A6                     _LCD_SliderCreate:
  5006                           	callstack 24
  5007  0038A6                     
  5008                           ;libraries/lcd_highlevel.c: 291: void LCD_SliderCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 292:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 293:                       uint16_t sldColor, uint16_t bgColor, u
      +                          int16_t borderColor,;libraries/lcd_highlevel.c: 294:                       uint16_t curs
      +                          orWidth,;libraries/lcd_highlevel.c: 295:                       uint16_t steps,;libraries
      +                          /lcd_highlevel.c: 296:                       void (* fpPress)(),;libraries/lcd_highlevel
      +                          .c: 297:                       sld_t * slider)
  5009  0038A6  C026  FFD9         	movff	LCD_SliderCreate@slider,fsr2l
  5010  0038AA  C027  FFDA         	movff	LCD_SliderCreate@slider+1,fsr2h
  5011  0038AE  C012  FFDE         	movff	LCD_SliderCreate@posX,postinc2
  5012  0038B2  C013  FFDD         	movff	LCD_SliderCreate@posX+1,postdec2
  5013  0038B6                     
  5014                           ;libraries/lcd_highlevel.c: 300:   slider->posY = posY;
  5015  0038B6  EE20 F002          	lfsr	2,2
  5016  0038BA  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5017  0038BC  26D9               	addwf	fsr2l,f,c
  5018  0038BE  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5019  0038C0  22DA               	addwfc	fsr2h,f,c
  5020  0038C2  C014  FFDE         	movff	LCD_SliderCreate@posY,postinc2
  5021  0038C6  C015  FFDD         	movff	LCD_SliderCreate@posY+1,postdec2
  5022  0038CA                     
  5023                           ;libraries/lcd_highlevel.c: 301:   slider->height = height;
  5024  0038CA  EE20 F006          	lfsr	2,6
  5025  0038CE  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5026  0038D0  26D9               	addwf	fsr2l,f,c
  5027  0038D2  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5028  0038D4  22DA               	addwfc	fsr2h,f,c
  5029  0038D6  C018  FFDE         	movff	LCD_SliderCreate@height,postinc2
  5030  0038DA  C019  FFDD         	movff	LCD_SliderCreate@height+1,postdec2
  5031  0038DE                     
  5032                           ;libraries/lcd_highlevel.c: 302:   slider->width = width;
  5033  0038DE  EE20 F004          	lfsr	2,4
  5034  0038E2  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5035  0038E4  26D9               	addwf	fsr2l,f,c
  5036  0038E6  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5037  0038E8  22DA               	addwfc	fsr2h,f,c
  5038  0038EA  C016  FFDE         	movff	LCD_SliderCreate@width,postinc2
  5039  0038EE  C017  FFDD         	movff	LCD_SliderCreate@width+1,postdec2
  5040  0038F2                     
  5041                           ;libraries/lcd_highlevel.c: 303:   slider->sldColor = sldColor;
  5042  0038F2  EE20 F008          	lfsr	2,8
  5043  0038F6  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5044  0038F8  26D9               	addwf	fsr2l,f,c
  5045  0038FA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5046  0038FC  22DA               	addwfc	fsr2h,f,c
  5047  0038FE  C01A  FFDE         	movff	LCD_SliderCreate@sldColor,postinc2
  5048  003902  C01B  FFDD         	movff	LCD_SliderCreate@sldColor+1,postdec2
  5049  003906                     
  5050                           ;libraries/lcd_highlevel.c: 304:   slider->bgColor = bgColor;
  5051  003906  EE20 F00A          	lfsr	2,10
  5052  00390A  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5053  00390C  26D9               	addwf	fsr2l,f,c
  5054  00390E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5055  003910  22DA               	addwfc	fsr2h,f,c
  5056  003912  C01C  FFDE         	movff	LCD_SliderCreate@bgColor,postinc2
  5057  003916  C01D  FFDD         	movff	LCD_SliderCreate@bgColor+1,postdec2
  5058  00391A                     
  5059                           ;libraries/lcd_highlevel.c: 305:   slider->borderColor = borderColor;
  5060  00391A  EE20 F00C          	lfsr	2,12
  5061  00391E  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5062  003920  26D9               	addwf	fsr2l,f,c
  5063  003922  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5064  003924  22DA               	addwfc	fsr2h,f,c
  5065  003926  C01E  FFDE         	movff	LCD_SliderCreate@borderColor,postinc2
  5066  00392A  C01F  FFDD         	movff	LCD_SliderCreate@borderColor+1,postdec2
  5067  00392E                     
  5068                           ;libraries/lcd_highlevel.c: 306:   slider->cursorWidth = cursorWidth;
  5069  00392E  EE20 F00E          	lfsr	2,14
  5070  003932  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5071  003934  26D9               	addwf	fsr2l,f,c
  5072  003936  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5073  003938  22DA               	addwfc	fsr2h,f,c
  5074  00393A  C020  FFDE         	movff	LCD_SliderCreate@cursorWidth,postinc2
  5075  00393E  C021  FFDD         	movff	LCD_SliderCreate@cursorWidth+1,postdec2
  5076  003942                     
  5077                           ;libraries/lcd_highlevel.c: 307:   slider->fpPress = fpPress;
  5078  003942  EE20 F017          	lfsr	2,23
  5079  003946  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5080  003948  26D9               	addwf	fsr2l,f,c
  5081  00394A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5082  00394C  22DA               	addwfc	fsr2h,f,c
  5083  00394E  C024  FFDE         	movff	LCD_SliderCreate@fpPress,postinc2
  5084  003952  C025  FFDD         	movff	LCD_SliderCreate@fpPress+1,postdec2
  5085  003956                     
  5086                           ;libraries/lcd_highlevel.c: 308:   slider->steps = steps;
  5087  003956  EE20 F015          	lfsr	2,21
  5088  00395A  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5089  00395C  26D9               	addwf	fsr2l,f,c
  5090  00395E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5091  003960  22DA               	addwfc	fsr2h,f,c
  5092  003962  C022  FFDE         	movff	LCD_SliderCreate@steps,postinc2
  5093  003966  C023  FFDD         	movff	LCD_SliderCreate@steps+1,postdec2
  5094  00396A                     
  5095                           ;libraries/lcd_highlevel.c: 309:   slider->value = 0;
  5096  00396A  EE20 F011          	lfsr	2,17
  5097  00396E  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5098  003970  26D9               	addwf	fsr2l,f,c
  5099  003972  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5100  003974  22DA               	addwfc	fsr2h,f,c
  5101  003976  0E00               	movlw	0
  5102  003978  6EDE               	movwf	postinc2,c
  5103  00397A  0E00               	movlw	0
  5104  00397C  6EDD               	movwf	postdec2,c
  5105  00397E                     
  5106                           ;libraries/lcd_highlevel.c: 310:   slider->oldValue = 0;
  5107  00397E  EE20 F013          	lfsr	2,19
  5108  003982  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5109  003984  26D9               	addwf	fsr2l,f,c
  5110  003986  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5111  003988  22DA               	addwfc	fsr2h,f,c
  5112  00398A  0E00               	movlw	0
  5113  00398C  6EDE               	movwf	postinc2,c
  5114  00398E  0E00               	movlw	0
  5115  003990  6EDD               	movwf	postdec2,c
  5116  003992  0012               	return		;funcret
  5117  003994                     __end_of_LCD_SliderCreate:
  5118                           	callstack 0
  5119                           
  5120 ;; *************** function _LCD_ButtonCreate *****************
  5121 ;; Defined at:
  5122 ;;		line 396 in file "libraries/lcd_highlevel.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  posX            2   17[COMRAM] unsigned short 
  5125 ;;  posY            2   19[COMRAM] unsigned short 
  5126 ;;  width           2   21[COMRAM] unsigned short 
  5127 ;;  height          2   23[COMRAM] unsigned short 
  5128 ;;  txtColor        2   25[COMRAM] unsigned short 
  5129 ;;  bgColor         2   27[COMRAM] unsigned short 
  5130 ;;  textOrBmp       2   29[COMRAM] PTR const unsigned char 
  5131 ;;		 -> STR_8(4), STR_7(4), STR_6(8), STR_5(9), 
  5132 ;;		 -> STR_4(9), STR_3(11), 
  5133 ;;  font            2   31[COMRAM] PTR struct .
  5134 ;;		 -> arialNarrow_12ptFontInfo(7), 
  5135 ;;  fpPress         2   33[COMRAM] PTR FTN(unsigned char ,)
  5136 ;;		 -> Absolute function(1), 
  5137 ;;  fpReleased      2   35[COMRAM] PTR FTN(unsigned char ,)
  5138 ;;		 -> Absolute function(1), 
  5139 ;;  fpOut           2   37[COMRAM] PTR FTN(unsigned char ,)
  5140 ;;		 -> Absolute function(1), 
  5141 ;;  button          2   39[COMRAM] PTR struct .
  5142 ;;		 -> g1(209), 
  5143 ;;  index           1   41[COMRAM] unsigned char 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5155 ;;      Params:        25       0       0       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0
  5158 ;;      Totals:        25       0       0       0       0       0       0
  5159 ;;Total ram usage:       25 bytes
  5160 ;; Hardware stack levels used: 1
  5161 ;; Hardware stack levels required when called: 4
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_GameParameters_init
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text12
  5170  0037AC                     __ptext12:
  5171                           	callstack 0
  5172  0037AC                     _LCD_ButtonCreate:
  5173                           	callstack 24
  5174  0037AC                     
  5175                           ;libraries/lcd_highlevel.c: 396: void LCD_ButtonCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 397:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 398:                       uint16_t txtColor, uint16_t bgColor,;l
      +                          ibraries/lcd_highlevel.c: 399:                       const uint8_t * textOrBmp, FONT_INF
      +                          O * font,;libraries/lcd_highlevel.c: 400:                       void (*fpPress)(uint8_t)
      +                          , void (* fpReleased)(uint8_t), void (* fpOut)(uint8_t),;libraries/lcd_highlevel.c: 401:
      +                                                 btn_t * button,
  5176  0037AC  C028  FFD9         	movff	LCD_ButtonCreate@button,fsr2l
  5177  0037B0  C029  FFDA         	movff	LCD_ButtonCreate@button+1,fsr2h
  5178  0037B4  C012  FFDE         	movff	LCD_ButtonCreate@posX,postinc2
  5179  0037B8  C013  FFDD         	movff	LCD_ButtonCreate@posX+1,postdec2
  5180  0037BC                     
  5181                           ;libraries/lcd_highlevel.c: 405:   button->posY = posY;
  5182  0037BC  EE20 F002          	lfsr	2,2
  5183  0037C0  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5184  0037C2  26D9               	addwf	fsr2l,f,c
  5185  0037C4  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5186  0037C6  22DA               	addwfc	fsr2h,f,c
  5187  0037C8  C014  FFDE         	movff	LCD_ButtonCreate@posY,postinc2
  5188  0037CC  C015  FFDD         	movff	LCD_ButtonCreate@posY+1,postdec2
  5189  0037D0                     
  5190                           ;libraries/lcd_highlevel.c: 406:   button->height = height;
  5191  0037D0  EE20 F006          	lfsr	2,6
  5192  0037D4  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5193  0037D6  26D9               	addwf	fsr2l,f,c
  5194  0037D8  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5195  0037DA  22DA               	addwfc	fsr2h,f,c
  5196  0037DC  C018  FFDE         	movff	LCD_ButtonCreate@height,postinc2
  5197  0037E0  C019  FFDD         	movff	LCD_ButtonCreate@height+1,postdec2
  5198  0037E4                     
  5199                           ;libraries/lcd_highlevel.c: 407:   button->width = width;
  5200  0037E4  EE20 F004          	lfsr	2,4
  5201  0037E8  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5202  0037EA  26D9               	addwf	fsr2l,f,c
  5203  0037EC  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5204  0037EE  22DA               	addwfc	fsr2h,f,c
  5205  0037F0  C016  FFDE         	movff	LCD_ButtonCreate@width,postinc2
  5206  0037F4  C017  FFDD         	movff	LCD_ButtonCreate@width+1,postdec2
  5207  0037F8                     
  5208                           ;libraries/lcd_highlevel.c: 408:   button->txtColor = txtColor;
  5209  0037F8  EE20 F008          	lfsr	2,8
  5210  0037FC  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5211  0037FE  26D9               	addwf	fsr2l,f,c
  5212  003800  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5213  003802  22DA               	addwfc	fsr2h,f,c
  5214  003804  C01A  FFDE         	movff	LCD_ButtonCreate@txtColor,postinc2
  5215  003808  C01B  FFDD         	movff	LCD_ButtonCreate@txtColor+1,postdec2
  5216  00380C                     
  5217                           ;libraries/lcd_highlevel.c: 409:   button->bgColor = bgColor;
  5218  00380C  EE20 F00A          	lfsr	2,10
  5219  003810  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5220  003812  26D9               	addwf	fsr2l,f,c
  5221  003814  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5222  003816  22DA               	addwfc	fsr2h,f,c
  5223  003818  C01C  FFDE         	movff	LCD_ButtonCreate@bgColor,postinc2
  5224  00381C  C01D  FFDD         	movff	LCD_ButtonCreate@bgColor+1,postdec2
  5225  003820                     
  5226                           ;libraries/lcd_highlevel.c: 410:   button->text = textOrBmp;
  5227  003820  EE20 F00C          	lfsr	2,12
  5228  003824  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5229  003826  26D9               	addwf	fsr2l,f,c
  5230  003828  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5231  00382A  22DA               	addwfc	fsr2h,f,c
  5232  00382C  C01E  FFDE         	movff	LCD_ButtonCreate@textOrBmp,postinc2
  5233  003830  C01F  FFDD         	movff	LCD_ButtonCreate@textOrBmp+1,postdec2
  5234  003834                     
  5235                           ;libraries/lcd_highlevel.c: 411:   button->font = font;
  5236  003834  EE20 F00E          	lfsr	2,14
  5237  003838  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5238  00383A  26D9               	addwf	fsr2l,f,c
  5239  00383C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5240  00383E  22DA               	addwfc	fsr2h,f,c
  5241  003840  C020  FFDE         	movff	LCD_ButtonCreate@font,postinc2
  5242  003844  C021  FFDD         	movff	LCD_ButtonCreate@font+1,postdec2
  5243  003848                     
  5244                           ;libraries/lcd_highlevel.c: 412:   button->fpPress = fpPress;
  5245  003848  EE20 F011          	lfsr	2,17
  5246  00384C  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5247  00384E  26D9               	addwf	fsr2l,f,c
  5248  003850  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5249  003852  22DA               	addwfc	fsr2h,f,c
  5250  003854  C022  FFDE         	movff	LCD_ButtonCreate@fpPress,postinc2
  5251  003858  C023  FFDD         	movff	LCD_ButtonCreate@fpPress+1,postdec2
  5252  00385C                     
  5253                           ;libraries/lcd_highlevel.c: 413:   button->fpReleased = fpReleased;
  5254  00385C  EE20 F013          	lfsr	2,19
  5255  003860  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5256  003862  26D9               	addwf	fsr2l,f,c
  5257  003864  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5258  003866  22DA               	addwfc	fsr2h,f,c
  5259  003868  C024  FFDE         	movff	LCD_ButtonCreate@fpReleased,postinc2
  5260  00386C  C025  FFDD         	movff	LCD_ButtonCreate@fpReleased+1,postdec2
  5261  003870                     
  5262                           ;libraries/lcd_highlevel.c: 414:   button->fpOut = fpOut;
  5263  003870  EE20 F015          	lfsr	2,21
  5264  003874  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5265  003876  26D9               	addwf	fsr2l,f,c
  5266  003878  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5267  00387A  22DA               	addwfc	fsr2h,f,c
  5268  00387C  C026  FFDE         	movff	LCD_ButtonCreate@fpOut,postinc2
  5269  003880  C027  FFDD         	movff	LCD_ButtonCreate@fpOut+1,postdec2
  5270  003884                     
  5271                           ;libraries/lcd_highlevel.c: 415:   button->index = index;
  5272  003884  EE20 F017          	lfsr	2,23
  5273  003888  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5274  00388A  26D9               	addwf	fsr2l,f,c
  5275  00388C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5276  00388E  22DA               	addwfc	fsr2h,f,c
  5277  003890  C02A  FFDF         	movff	LCD_ButtonCreate@index,indf2
  5278  003894                     
  5279                           ;libraries/lcd_highlevel.c: 416:   button->pressed = 0;
  5280  003894  EE20 F010          	lfsr	2,16
  5281  003898  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5282  00389A  26D9               	addwf	fsr2l,f,c
  5283  00389C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5284  00389E  22DA               	addwfc	fsr2h,f,c
  5285  0038A0  0E00               	movlw	0
  5286  0038A2  6EDF               	movwf	indf2,c
  5287  0038A4  0012               	return		;funcret
  5288  0038A6                     __end_of_LCD_ButtonCreate:
  5289                           	callstack 0
  5290                           
  5291 ;; *************** function _Ball_init *****************
  5292 ;; Defined at:
  5293 ;;		line 3 in file "class/ball.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  b               2   17[COMRAM] PTR struct Ball
  5296 ;;		 -> g1(209), 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5308 ;;      Params:         2       0       0       0       0       0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0
  5311 ;;      Totals:         2       0       0       0       0       0       0
  5312 ;;Total ram usage:        2 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; Hardware stack levels required when called: 4
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_GameParameters_init
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text13
  5323  004CF8                     __ptext13:
  5324                           	callstack 0
  5325  004CF8                     _Ball_init:
  5326                           	callstack 24
  5327  004CF8                     
  5328                           ;class/ball.c: 3: void Ball_init(struct Ball* b);class/ball.c: 4: {;class/ball.c: 5:    
      +                           b->x = 90;
  5329  004CF8  C012  FFD9         	movff	Ball_init@b,fsr2l
  5330  004CFC  C013  FFDA         	movff	Ball_init@b+1,fsr2h
  5331  004D00  0E5A               	movlw	90
  5332  004D02  6EDE               	movwf	postinc2,c
  5333  004D04  0E00               	movlw	0
  5334  004D06  6EDD               	movwf	postdec2,c
  5335  004D08                     
  5336                           ;class/ball.c: 6:     b->y = 150;
  5337  004D08  EE20 F002          	lfsr	2,2
  5338  004D0C  5012               	movf	Ball_init@b^0,w,c
  5339  004D0E  26D9               	addwf	fsr2l,f,c
  5340  004D10  5013               	movf	(Ball_init@b+1)^0,w,c
  5341  004D12  22DA               	addwfc	fsr2h,f,c
  5342  004D14  0E96               	movlw	150
  5343  004D16  6EDE               	movwf	postinc2,c
  5344  004D18  0E00               	movlw	0
  5345  004D1A  6EDD               	movwf	postdec2,c
  5346  004D1C                     
  5347                           ;class/ball.c: 7:     b->r = 10;
  5348  004D1C  EE20 F004          	lfsr	2,4
  5349  004D20  5012               	movf	Ball_init@b^0,w,c
  5350  004D22  26D9               	addwf	fsr2l,f,c
  5351  004D24  5013               	movf	(Ball_init@b+1)^0,w,c
  5352  004D26  22DA               	addwfc	fsr2h,f,c
  5353  004D28  0E0A               	movlw	10
  5354  004D2A  6EDE               	movwf	postinc2,c
  5355  004D2C  0E00               	movlw	0
  5356  004D2E  6EDD               	movwf	postdec2,c
  5357  004D30                     
  5358                           ;class/ball.c: 8:     b->color = 0b1111100000000000;
  5359  004D30  EE20 F006          	lfsr	2,6
  5360  004D34  5012               	movf	Ball_init@b^0,w,c
  5361  004D36  26D9               	addwf	fsr2l,f,c
  5362  004D38  5013               	movf	(Ball_init@b+1)^0,w,c
  5363  004D3A  22DA               	addwfc	fsr2h,f,c
  5364  004D3C  0E00               	movlw	0
  5365  004D3E  6EDE               	movwf	postinc2,c
  5366  004D40  0EF8               	movlw	248
  5367  004D42  6EDD               	movwf	postdec2,c
  5368  004D44  0012               	return		;funcret
  5369  004D46                     __end_of_Ball_init:
  5370                           	callstack 0
  5371                           
  5372 ;; *************** function _Factory_exec *****************
  5373 ;; Defined at:
  5374 ;;		line 52 in file "class/factory.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  ev              1    0[BANK1 ] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5388 ;;      Params:         0       0       0       0       0       0       0
  5389 ;;      Locals:         0       0       1       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0       0       0
  5391 ;;      Totals:         0       0       1       0       0       0       0
  5392 ;;Total ram usage:        1 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; Hardware stack levels required when called: 14
  5395 ;; This function calls:
  5396 ;;		_XF_popEvent
  5397 ;;		_displaySM
  5398 ;;		_gameControllerSM
  5399 ;;		_sleepSM
  5400 ;;		_touchScreenSM
  5401 ;; This function is called by:
  5402 ;;		_main
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text14
  5407  004BFE                     __ptext14:
  5408                           	callstack 0
  5409  004BFE                     _Factory_exec:
  5410                           	callstack 16
  5411  004BFE                     
  5412                           ;class/factory.c: 55:     Event ev;;class/factory.c: 56:     ev = XF_popEvent(0);
  5413  004BFE  0E00               	movlw	0
  5414  004C00  ECA3  F025         	call	_XF_popEvent
  5415  004C04  0101               	movlb	1	; () banked
  5416  004C06  6FD1               	movwf	Factory_exec@ev& (0+255),b
  5417  004C08                     
  5418                           ; BSR set to: 1
  5419                           ;class/factory.c: 57:     if (ev != NULLEVENT)
  5420  004C08  51D1               	movf	Factory_exec@ev& (0+255),w,b
  5421  004C0A  B4D8               	btfsc	status,2,c
  5422  004C0C  EF0A  F026         	goto	u6011
  5423  004C10  EF0C  F026         	goto	u6010
  5424  004C14                     u6011:
  5425  004C14  EF29  F026         	goto	l104
  5426  004C18                     u6010:
  5427  004C18                     
  5428                           ; BSR set to: 1
  5429                           ;class/factory.c: 58:     {;class/factory.c: 59:         sleepSM(ev);
  5430  004C18  51D1               	movf	Factory_exec@ev& (0+255),w,b
  5431  004C1A  EC7E  F022         	call	_sleepSM
  5432  004C1E                     
  5433                           ;class/factory.c: 60:         touchScreenSM(ev,&g1);
  5434  004C1E  0E00               	movlw	low _g1
  5435  004C20  0100               	movlb	0	; () banked
  5436  004C22  6FB0               	movwf	touchScreenSM@g& (0+255),b
  5437  004C24  0E01               	movlw	high _g1
  5438  004C26  6FB1               	movwf	(touchScreenSM@g+1)& (0+255),b
  5439  004C28  0101               	movlb	1	; () banked
  5440  004C2A  51D1               	movf	Factory_exec@ev& (0+255),w,b
  5441  004C2C  EC6C  F023         	call	_touchScreenSM
  5442  004C30                     
  5443                           ;class/factory.c: 61:         displaySM(ev,&g1);
  5444  004C30  0E00               	movlw	low _g1
  5445  004C32  0100               	movlb	0	; () banked
  5446  004C34  6FA0               	movwf	displaySM@g& (0+255),b
  5447  004C36  0E01               	movlw	high _g1
  5448  004C38  6FA1               	movwf	(displaySM@g+1)& (0+255),b
  5449  004C3A  0101               	movlb	1	; () banked
  5450  004C3C  51D1               	movf	Factory_exec@ev& (0+255),w,b
  5451  004C3E  EC79  F01E         	call	_displaySM
  5452  004C42                     
  5453                           ;class/factory.c: 62:         gameControllerSM(ev,&g1);
  5454  004C42  0E00               	movlw	low _g1
  5455  004C44  6E3B               	movwf	gameControllerSM@g^0,c
  5456  004C46  0E01               	movlw	high _g1
  5457  004C48  6E3C               	movwf	(gameControllerSM@g+1)^0,c
  5458  004C4A  0101               	movlb	1	; () banked
  5459  004C4C  51D1               	movf	Factory_exec@ev& (0+255),w,b
  5460  004C4E  ECDE  F01E         	call	_gameControllerSM
  5461  004C52                     l104:
  5462  004C52  0012               	return		;funcret
  5463  004C54                     __end_of_Factory_exec:
  5464                           	callstack 0
  5465                           
  5466 ;; *************** function _touchScreenSM *****************
  5467 ;; Defined at:
  5468 ;;		line 25 in file "stateMachine/touchScreenSM.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  ev              1    wreg     unsigned char 
  5471 ;;  g               2   80[BANK0 ] PTR struct GameParameter
  5472 ;;		 -> g1(209), 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  ev              1   84[BANK0 ] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5484 ;;      Params:         0       2       0       0       0       0       0
  5485 ;;      Locals:         0       1       0       0       0       0       0
  5486 ;;      Temps:          0       2       0       0       0       0       0
  5487 ;;      Totals:         0       5       0       0       0       0       0
  5488 ;;Total ram usage:        5 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; Hardware stack levels required when called: 13
  5491 ;; This function calls:
  5492 ;;		_touchScreenController
  5493 ;; This function is called by:
  5494 ;;		_Factory_exec
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text15
  5499  0046D8                     __ptext15:
  5500                           	callstack 0
  5501  0046D8                     _touchScreenSM:
  5502                           	callstack 16
  5503                           
  5504                           ;incstack = 0
  5505                           ;touchScreenSM@ev stored from wreg
  5506  0046D8  0100               	movlb	0	; () banked
  5507  0046DA  6FB4               	movwf	touchScreenSM@ev& (0+255),b
  5508  0046DC                     
  5509                           ;stateMachine/touchScreenSM.c: 25: void touchScreenSM(Event ev, GameParameters* g);state
      +                          Machine/touchScreenSM.c: 26: {;stateMachine/touchScreenSM.c: 27:     switch(touchScreenS
      +                          tate)
  5510  0046DC  EF9F  F023         	goto	l9206
  5511  0046E0                     l9188:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;stateMachine/touchScreenSM.c: 30:             if(ev==evPress)
  5515  0046E0  05B4               	decf	touchScreenSM@ev& (0+255),w,b
  5516  0046E2  A4D8               	btfss	status,2,c
  5517  0046E4  EF76  F023         	goto	u5891
  5518  0046E8  EF78  F023         	goto	u5890
  5519  0046EC                     u5891:
  5520  0046EC  EFB5  F023         	goto	l489
  5521  0046F0                     u5890:
  5522  0046F0                     
  5523                           ; BSR set to: 0
  5524                           ;stateMachine/touchScreenSM.c: 31:             {;stateMachine/touchScreenSM.c: 32:      
      +                                     touchScreenState=CALCULATEPOSITION;
  5525  0046F0  0E01               	movlw	1
  5526  0046F2  6FDE               	movwf	_touchScreenState& (0+255),b
  5527  0046F4                     l9192:
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;stateMachine/touchScreenSM.c: 33:                 touchScreenController(g);
  5531  0046F4  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  5532  0046F8  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  5533  0046FC  ECE5  F015         	call	_touchScreenController	;wreg free
  5534  004700  EFB5  F023         	goto	l489
  5535  004704                     l9194:
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;stateMachine/touchScreenSM.c: 37:             if(ev==evRelease)
  5539  004704  0E02               	movlw	2
  5540  004706  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  5541  004708  A4D8               	btfss	status,2,c
  5542  00470A  EF89  F023         	goto	u5901
  5543  00470E  EF8B  F023         	goto	u5900
  5544  004712                     u5901:
  5545  004712  EF93  F023         	goto	l9200
  5546  004716                     u5900:
  5547  004716                     
  5548                           ; BSR set to: 0
  5549                           ;stateMachine/touchScreenSM.c: 38:             {;stateMachine/touchScreenSM.c: 39:      
      +                                     touchScreenState=WAITING;
  5550  004716  0E00               	movlw	0
  5551  004718  6FDE               	movwf	_touchScreenState& (0+255),b
  5552  00471A                     
  5553                           ; BSR set to: 0
  5554                           ;stateMachine/touchScreenSM.c: 40:                 touchScreenController(g);
  5555  00471A  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  5556  00471E  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  5557  004722  ECE5  F015         	call	_touchScreenController	;wreg free
  5558  004726                     l9200:
  5559                           
  5560                           ;stateMachine/touchScreenSM.c: 42:             if(ev==evTimerPos)
  5561  004726  0E04               	movlw	4
  5562  004728  0100               	movlb	0	; () banked
  5563  00472A  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  5564  00472C  A4D8               	btfss	status,2,c
  5565  00472E  EF9B  F023         	goto	u5911
  5566  004732  EF9D  F023         	goto	u5910
  5567  004736                     u5911:
  5568  004736  EFB5  F023         	goto	l489
  5569  00473A                     u5910:
  5570  00473A  EF7A  F023         	goto	l9192
  5571  00473E                     l9206:
  5572  00473E  0100               	movlb	0	; () banked
  5573  004740  51DE               	movf	_touchScreenState& (0+255),w,b
  5574  004742  6FB2               	movwf	??_touchScreenSM& (0+255),b
  5575  004744  6BB3               	clrf	(??_touchScreenSM+1)& (0+255),b
  5576                           
  5577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5578                           ; Switch size 1, requested type "simple"
  5579                           ; Number of cases is 1, Range of values is 0 to 0
  5580                           ; switch strategies available:
  5581                           ; Name         Instructions Cycles
  5582                           ; simple_byte            4     3 (average)
  5583                           ;	Chosen strategy is simple_byte
  5584  004746  51B3               	movf	(??_touchScreenSM+1)& (0+255),w,b
  5585  004748  0A00               	xorlw	0	; case 0
  5586  00474A  B4D8               	btfsc	status,2,c
  5587  00474C  EFAA  F023         	goto	l9556
  5588  004750  EFB5  F023         	goto	l489
  5589  004754                     l9556:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ; Switch size 1, requested type "simple"
  5593                           ; Number of cases is 2, Range of values is 0 to 1
  5594                           ; switch strategies available:
  5595                           ; Name         Instructions Cycles
  5596                           ; simple_byte            7     4 (average)
  5597                           ;	Chosen strategy is simple_byte
  5598  004754  51B2               	movf	??_touchScreenSM& (0+255),w,b
  5599  004756  0A00               	xorlw	0	; case 0
  5600  004758  B4D8               	btfsc	status,2,c
  5601  00475A  EF70  F023         	goto	l9188
  5602  00475E  0A01               	xorlw	1	; case 1
  5603  004760  B4D8               	btfsc	status,2,c
  5604  004762  EF82  F023         	goto	l9194
  5605  004766  EFB5  F023         	goto	l489
  5606  00476A                     l489:
  5607  00476A  0012               	return		;funcret
  5608  00476C                     __end_of_touchScreenSM:
  5609                           	callstack 0
  5610                           
  5611 ;; *************** function _touchScreenController *****************
  5612 ;; Defined at:
  5613 ;;		line 54 in file "stateMachine/touchScreenSM.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  g               2   48[BANK0 ] PTR struct GameParameter
  5616 ;;		 -> g1(209), 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  valueX          2   78[BANK0 ] unsigned short 
  5619 ;;  valueY          2   76[BANK0 ] unsigned short 
  5620 ;;  s              20   56[BANK0 ] unsigned char [20]
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5630 ;;      Params:         0       2       0       0       0       0       0
  5631 ;;      Locals:         0      24       0       0       0       0       0
  5632 ;;      Temps:          0       6       0       0       0       0       0
  5633 ;;      Totals:         0      32       0       0       0       0       0
  5634 ;;Total ram usage:       32 bytes
  5635 ;; Hardware stack levels used: 1
  5636 ;; Hardware stack levels required when called: 12
  5637 ;; This function calls:
  5638 ;;		_GameParameters_setX
  5639 ;;		_GameParameters_setY
  5640 ;;		_LCD_DrawText
  5641 ;;		_XF_scheduleTimer
  5642 ;;		_configMeasure
  5643 ;;		_configTouch
  5644 ;;		_sprintf
  5645 ;; This function is called by:
  5646 ;;		_touchScreenSM
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text16
  5651  002BCA                     __ptext16:
  5652                           	callstack 0
  5653  002BCA                     _touchScreenController:
  5654                           	callstack 16
  5655  002BCA                     
  5656                           ;stateMachine/touchScreenSM.c: 54: void touchScreenController(GameParameters* g);stateMa
      +                          chine/touchScreenSM.c: 55: {;stateMachine/touchScreenSM.c: 56:     char s[20];;stateMach
      +                          ine/touchScreenSM.c: 58:     switch(touchScreenState)
  5657  002BCA  EFE4  F016         	goto	l9086
  5658  002BCE                     l9044:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;stateMachine/touchScreenSM.c: 63:             configTouch();
  5662  002BCE  ECBA  F027         	call	_configTouch	;wreg free
  5663                           
  5664                           ;stateMachine/touchScreenSM.c: 65:             break;
  5665  002BD2  EFFA  F016         	goto	l508
  5666  002BD6                     l9046:
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;stateMachine/touchScreenSM.c: 70:             configMeasure(0);
  5670  002BD6  0E00               	movlw	0
  5671  002BD8  EC53  F026         	call	_configMeasure
  5672  002BDC                     l496:
  5673  002BDC  B2C2               	btfsc	194,1,c	;volatile
  5674  002BDE  EFF3  F015         	goto	u5771
  5675  002BE2  EFF5  F015         	goto	u5770
  5676  002BE6                     u5771:
  5677  002BE6  EFEE  F015         	goto	l496
  5678  002BEA                     u5770:
  5679  002BEA                     
  5680                           ;stateMachine/touchScreenSM.c: 72:             uint16_t valueX;;stateMachine/touchScreen
      +                          SM.c: 73:             valueX=(ADRESH<<8)+ADRESL;
  5681  002BEA  50C4               	movf	196,w,c	;volatile
  5682  002BEC  0100               	movlb	0	; () banked
  5683  002BEE  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5684  002BF0  6B92               	clrf	??_touchScreenController& (0+255),b
  5685  002BF2  50C3               	movf	195,w,c	;volatile
  5686  002BF4  2592               	addwf	??_touchScreenController& (0+255),w,b
  5687  002BF6  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5688  002BF8  0E00               	movlw	0
  5689  002BFA  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  5690  002BFC  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5691                           
  5692                           ;stateMachine/touchScreenSM.c: 74:             valueX=800-valueX;
  5693  002BFE  51AE               	movf	touchScreenController@valueX& (0+255),w,b
  5694  002C00  0820               	sublw	32
  5695  002C02  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5696  002C04  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  5697  002C06  A0D8               	btfss	status,0,c
  5698  002C08  2AE8               	incf	wreg,f,c
  5699  002C0A  0803               	sublw	3
  5700  002C0C  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5701                           
  5702                           ;stateMachine/touchScreenSM.c: 75:             if(valueX>=150)
  5703  002C0E  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  5704  002C10  E109               	bnz	u5780
  5705  002C12  0E96               	movlw	150
  5706  002C14  5DAE               	subwf	touchScreenController@valueX& (0+255),w,b
  5707  002C16  A0D8               	btfss	status,0,c
  5708  002C18  EF10  F016         	goto	u5781
  5709  002C1C  EF12  F016         	goto	u5780
  5710  002C20                     u5781:
  5711  002C20  EF27  F016         	goto	l9052
  5712  002C24                     u5780:
  5713  002C24                     
  5714                           ; BSR set to: 0
  5715                           ;stateMachine/touchScreenSM.c: 76:             {;stateMachine/touchScreenSM.c: 77:      
      +                                     valueX=(valueX-150)/2;
  5716  002C24  0E6A               	movlw	106
  5717  002C26  6F92               	movwf	??_touchScreenController& (0+255),b
  5718  002C28  0EFF               	movlw	255
  5719  002C2A  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5720  002C2C  C0AE  F094         	movff	touchScreenController@valueX,??_touchScreenController+2
  5721  002C30  C0AF  F095         	movff	touchScreenController@valueX+1,??_touchScreenController+3
  5722  002C34  5192               	movf	??_touchScreenController& (0+255),w,b
  5723  002C36  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  5724  002C38  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5725  002C3A  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  5726  002C3C  90D8               	bcf	status,0,c
  5727  002C3E  3195               	rrcf	(??_touchScreenController+3)& (0+255),w,b
  5728  002C40  6F96               	movwf	(??_touchScreenController+4)& (0+255),b
  5729  002C42  3194               	rrcf	(??_touchScreenController+2)& (0+255),w,b
  5730  002C44  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5731  002C46  C096  F0AF         	movff	??_touchScreenController+4,touchScreenController@valueX+1
  5732                           
  5733                           ;stateMachine/touchScreenSM.c: 78:             }else{valueX=0;}
  5734  002C4A  EF2B  F016         	goto	l9054
  5735  002C4E                     l9052:
  5736                           
  5737                           ; BSR set to: 0
  5738  002C4E  0E00               	movlw	0
  5739  002C50  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5740  002C52  0E00               	movlw	0
  5741  002C54  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5742  002C56                     l9054:
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;stateMachine/touchScreenSM.c: 80:             configMeasure(1);
  5746  002C56  0E01               	movlw	1
  5747  002C58  EC53  F026         	call	_configMeasure
  5748  002C5C                     l501:
  5749  002C5C  B2C2               	btfsc	194,1,c	;volatile
  5750  002C5E  EF33  F016         	goto	u5791
  5751  002C62  EF35  F016         	goto	u5790
  5752  002C66                     u5791:
  5753  002C66  EF2E  F016         	goto	l501
  5754  002C6A                     u5790:
  5755  002C6A                     
  5756                           ;stateMachine/touchScreenSM.c: 82:             uint16_t valueY;;stateMachine/touchScreen
      +                          SM.c: 83:             valueY=(ADRESH<<8)+ADRESL;
  5757  002C6A  50C4               	movf	196,w,c	;volatile
  5758  002C6C  0100               	movlb	0	; () banked
  5759  002C6E  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5760  002C70  6B92               	clrf	??_touchScreenController& (0+255),b
  5761  002C72  50C3               	movf	195,w,c	;volatile
  5762  002C74  2592               	addwf	??_touchScreenController& (0+255),w,b
  5763  002C76  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  5764  002C78  0E00               	movlw	0
  5765  002C7A  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  5766  002C7C  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  5767                           
  5768                           ;stateMachine/touchScreenSM.c: 84:             if(valueY>=125)
  5769  002C7E  51AD               	movf	(touchScreenController@valueY+1)& (0+255),w,b
  5770  002C80  E109               	bnz	u5800
  5771  002C82  0E7D               	movlw	125
  5772  002C84  5DAC               	subwf	touchScreenController@valueY& (0+255),w,b
  5773  002C86  A0D8               	btfss	status,0,c
  5774  002C88  EF48  F016         	goto	u5801
  5775  002C8C  EF4A  F016         	goto	u5800
  5776  002C90                     u5801:
  5777  002C90  EF5F  F016         	goto	l9060
  5778  002C94                     u5800:
  5779  002C94                     
  5780                           ; BSR set to: 0
  5781                           ;stateMachine/touchScreenSM.c: 85:             {;stateMachine/touchScreenSM.c: 86:      
      +                                     valueY=(valueY-125)/2;
  5782  002C94  0E83               	movlw	131
  5783  002C96  6F92               	movwf	??_touchScreenController& (0+255),b
  5784  002C98  0EFF               	movlw	255
  5785  002C9A  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5786  002C9C  C0AC  F094         	movff	touchScreenController@valueY,??_touchScreenController+2
  5787  002CA0  C0AD  F095         	movff	touchScreenController@valueY+1,??_touchScreenController+3
  5788  002CA4  5192               	movf	??_touchScreenController& (0+255),w,b
  5789  002CA6  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  5790  002CA8  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5791  002CAA  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  5792  002CAC  90D8               	bcf	status,0,c
  5793  002CAE  3195               	rrcf	(??_touchScreenController+3)& (0+255),w,b
  5794  002CB0  6F96               	movwf	(??_touchScreenController+4)& (0+255),b
  5795  002CB2  3194               	rrcf	(??_touchScreenController+2)& (0+255),w,b
  5796  002CB4  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  5797  002CB6  C096  F0AD         	movff	??_touchScreenController+4,touchScreenController@valueY+1
  5798                           
  5799                           ;stateMachine/touchScreenSM.c: 87:             }else{valueY=0;}
  5800  002CBA  EF63  F016         	goto	l9062
  5801  002CBE                     l9060:
  5802                           
  5803                           ; BSR set to: 0
  5804  002CBE  0E00               	movlw	0
  5805  002CC0  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  5806  002CC2  0E00               	movlw	0
  5807  002CC4  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  5808  002CC6                     l9062:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;stateMachine/touchScreenSM.c: 88:             XF_scheduleTimer(1,evTimerPos,0);
  5812  002CC6  0E00               	movlw	0
  5813  002CC8  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  5814  002CCA  0E01               	movlw	1
  5815  002CCC  6E13               	movwf	XF_scheduleTimer@tm^0,c
  5816  002CCE  0E04               	movlw	4
  5817  002CD0  6E15               	movwf	XF_scheduleTimer@ev^0,c
  5818  002CD2  0E00               	movlw	0
  5819  002CD4  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  5820  002CD6  EC33  F024         	call	_XF_scheduleTimer	;wreg free
  5821  002CDA                     
  5822                           ;stateMachine/touchScreenSM.c: 91:             ADCON0=0b00101001;
  5823  002CDA  0E29               	movlw	41
  5824  002CDC  6EC2               	movwf	194,c	;volatile
  5825  002CDE                     
  5826                           ;stateMachine/touchScreenSM.c: 92:             configTouch();
  5827  002CDE  ECBA  F027         	call	_configTouch	;wreg free
  5828  002CE2                     
  5829                           ;stateMachine/touchScreenSM.c: 93:             INT1IF=0;
  5830  002CE2  90F0               	bcf	4080,0,c	;volatile
  5831  002CE4                     
  5832                           ;stateMachine/touchScreenSM.c: 94:             INT1IE=1;
  5833  002CE4  86F0               	bsf	4080,3,c	;volatile
  5834  002CE6                     
  5835                           ;stateMachine/touchScreenSM.c: 97:             if(PORTBbits.RB1 == 0)
  5836  002CE6  B281               	btfsc	129,1,c	;volatile
  5837  002CE8  EF78  F016         	goto	u5811
  5838  002CEC  EF7A  F016         	goto	u5810
  5839  002CF0                     u5811:
  5840  002CF0  EFFA  F016         	goto	l508
  5841  002CF4                     u5810:
  5842  002CF4                     
  5843                           ;stateMachine/touchScreenSM.c: 98:             {;stateMachine/touchScreenSM.c: 99:      
      +                                     sprintf(s,"X: %d",valueX);
  5844  002CF4  0E98               	movlw	low touchScreenController@s
  5845  002CF6  0100               	movlb	0	; () banked
  5846  002CF8  6F82               	movwf	sprintf@s& (0+255),b
  5847  002CFA  0E00               	movlw	high touchScreenController@s
  5848  002CFC  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5849  002CFE  0EE9               	movlw	low STR_12
  5850  002D00  6F84               	movwf	sprintf@fmt& (0+255),b
  5851  002D02  0E7F               	movlw	high STR_12
  5852  002D04  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5853  002D06  C0AE  F086         	movff	touchScreenController@valueX,?_sprintf+4
  5854  002D0A  C0AF  F087         	movff	touchScreenController@valueX+1,?_sprintf+5
  5855  002D0E  EC2A  F026         	call	_sprintf	;wreg free
  5856  002D12                     
  5857                           ;stateMachine/touchScreenSM.c: 100:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,200,0b0000000000000000,0b1111111111111111);
  5858  002D12  0E98               	movlw	low touchScreenController@s
  5859  002D14  6E20               	movwf	LCD_DrawText@msg^0,c
  5860  002D16  0E00               	movlw	high touchScreenController@s
  5861  002D18  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5862  002D1A  0E99               	movlw	low _arialNarrow_12ptFontInfo
  5863  002D1C  6E22               	movwf	LCD_DrawText@font^0,c
  5864  002D1E  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5865  002D20  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5866  002D22  0E01               	movlw	1
  5867  002D24  6E24               	movwf	LCD_DrawText@align^0,c
  5868  002D26  0E00               	movlw	0
  5869  002D28  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5870  002D2A  0EC8               	movlw	200
  5871  002D2C  6E25               	movwf	LCD_DrawText@posX^0,c
  5872  002D2E  0E00               	movlw	0
  5873  002D30  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5874  002D32  0EC8               	movlw	200
  5875  002D34  6E27               	movwf	LCD_DrawText@posY^0,c
  5876  002D36  0E00               	movlw	0
  5877  002D38  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5878  002D3A  0E00               	movlw	0
  5879  002D3C  6E29               	movwf	LCD_DrawText@color^0,c
  5880  002D3E  0EFF               	movlw	255
  5881  002D40  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5882  002D42  682B               	setf	LCD_DrawText@bg_color^0,c
  5883  002D44  EC86  F00A         	call	_LCD_DrawText	;wreg free
  5884  002D48                     
  5885                           ;stateMachine/touchScreenSM.c: 101:                 GameParameters_setX(g,valueX);
  5886  002D48  C090  F012         	movff	touchScreenController@g,GameParameters_setX@s
  5887  002D4C  C091  F013         	movff	touchScreenController@g+1,GameParameters_setX@s+1
  5888  002D50  C0AE  F014         	movff	touchScreenController@valueX,GameParameters_setX@value
  5889  002D54  C0AF  F015         	movff	touchScreenController@valueX+1,GameParameters_setX@value+1
  5890  002D58  ECD3  F027         	call	_GameParameters_setX	;wreg free
  5891  002D5C                     
  5892                           ;stateMachine/touchScreenSM.c: 102:                 sprintf(s,"Y: %d",valueY);
  5893  002D5C  0E98               	movlw	low touchScreenController@s
  5894  002D5E  0100               	movlb	0	; () banked
  5895  002D60  6F82               	movwf	sprintf@s& (0+255),b
  5896  002D62  0E00               	movlw	high touchScreenController@s
  5897  002D64  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5898  002D66  0EEF               	movlw	low STR_13
  5899  002D68  6F84               	movwf	sprintf@fmt& (0+255),b
  5900  002D6A  0E7F               	movlw	high STR_13
  5901  002D6C  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5902  002D6E  C0AC  F086         	movff	touchScreenController@valueY,?_sprintf+4
  5903  002D72  C0AD  F087         	movff	touchScreenController@valueY+1,?_sprintf+5
  5904  002D76  EC2A  F026         	call	_sprintf	;wreg free
  5905  002D7A                     
  5906                           ;stateMachine/touchScreenSM.c: 103:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,250,0b0000000000000000,0b1111111111111111);
  5907  002D7A  0E98               	movlw	low touchScreenController@s
  5908  002D7C  6E20               	movwf	LCD_DrawText@msg^0,c
  5909  002D7E  0E00               	movlw	high touchScreenController@s
  5910  002D80  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5911  002D82  0E99               	movlw	low _arialNarrow_12ptFontInfo
  5912  002D84  6E22               	movwf	LCD_DrawText@font^0,c
  5913  002D86  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5914  002D88  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5915  002D8A  0E01               	movlw	1
  5916  002D8C  6E24               	movwf	LCD_DrawText@align^0,c
  5917  002D8E  0E00               	movlw	0
  5918  002D90  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5919  002D92  0EC8               	movlw	200
  5920  002D94  6E25               	movwf	LCD_DrawText@posX^0,c
  5921  002D96  0E00               	movlw	0
  5922  002D98  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5923  002D9A  0EFA               	movlw	250
  5924  002D9C  6E27               	movwf	LCD_DrawText@posY^0,c
  5925  002D9E  0E00               	movlw	0
  5926  002DA0  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5927  002DA2  0E00               	movlw	0
  5928  002DA4  6E29               	movwf	LCD_DrawText@color^0,c
  5929  002DA6  0EFF               	movlw	255
  5930  002DA8  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5931  002DAA  682B               	setf	LCD_DrawText@bg_color^0,c
  5932  002DAC  EC86  F00A         	call	_LCD_DrawText	;wreg free
  5933                           
  5934                           ;stateMachine/touchScreenSM.c: 104:                 GameParameters_setY(g,valueY);
  5935  002DB0  C090  F012         	movff	touchScreenController@g,GameParameters_setY@s
  5936  002DB4  C091  F013         	movff	touchScreenController@g+1,GameParameters_setY@s+1
  5937  002DB8  C0AC  F014         	movff	touchScreenController@valueY,GameParameters_setY@value
  5938  002DBC  C0AD  F015         	movff	touchScreenController@valueY+1,GameParameters_setY@value+1
  5939  002DC0  ECC8  F027         	call	_GameParameters_setY	;wreg free
  5940  002DC4  EFFA  F016         	goto	l508
  5941  002DC8                     l9086:
  5942  002DC8  0100               	movlb	0	; () banked
  5943  002DCA  51DE               	movf	_touchScreenState& (0+255),w,b
  5944  002DCC  6F92               	movwf	??_touchScreenController& (0+255),b
  5945  002DCE  6B93               	clrf	(??_touchScreenController+1)& (0+255),b
  5946                           
  5947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5948                           ; Switch size 1, requested type "simple"
  5949                           ; Number of cases is 1, Range of values is 0 to 0
  5950                           ; switch strategies available:
  5951                           ; Name         Instructions Cycles
  5952                           ; simple_byte            4     3 (average)
  5953                           ;	Chosen strategy is simple_byte
  5954  002DD0  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5955  002DD2  0A00               	xorlw	0	; case 0
  5956  002DD4  B4D8               	btfsc	status,2,c
  5957  002DD6  EFEF  F016         	goto	l9558
  5958  002DDA  EFFA  F016         	goto	l508
  5959  002DDE                     l9558:
  5960                           
  5961                           ; BSR set to: 0
  5962                           ; Switch size 1, requested type "simple"
  5963                           ; Number of cases is 2, Range of values is 0 to 1
  5964                           ; switch strategies available:
  5965                           ; Name         Instructions Cycles
  5966                           ; simple_byte            7     4 (average)
  5967                           ;	Chosen strategy is simple_byte
  5968  002DDE  5192               	movf	??_touchScreenController& (0+255),w,b
  5969  002DE0  0A00               	xorlw	0	; case 0
  5970  002DE2  B4D8               	btfsc	status,2,c
  5971  002DE4  EFE7  F015         	goto	l9044
  5972  002DE8  0A01               	xorlw	1	; case 1
  5973  002DEA  B4D8               	btfsc	status,2,c
  5974  002DEC  EFEB  F015         	goto	l9046
  5975  002DF0  EFFA  F016         	goto	l508
  5976  002DF4                     l508:
  5977  002DF4  0012               	return		;funcret
  5978  002DF6                     __end_of_touchScreenController:
  5979                           	callstack 0
  5980                           
  5981 ;; *************** function _sprintf *****************
  5982 ;; Defined at:
  5983 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  s               2   34[BANK0 ] PTR unsigned char 
  5986 ;;		 -> touchScreenController@s(20), 
  5987 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
  5988 ;;		 -> STR_13(6), STR_12(6), 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  f               6   42[BANK0 ] struct _IO_FILE
  5991 ;;  ap              2   40[BANK0 ] PTR void [1]
  5992 ;;		 -> ?_sprintf(2), 
  5993 ;;  ret             2    0        int 
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  2   34[BANK0 ] int 
  5996 ;; Registers used:
  5997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6003 ;;      Params:         0       6       0       0       0       0       0
  6004 ;;      Locals:         0       8       0       0       0       0       0
  6005 ;;      Temps:          0       0       0       0       0       0       0
  6006 ;;      Totals:         0      14       0       0       0       0       0
  6007 ;;Total ram usage:       14 bytes
  6008 ;; Hardware stack levels used: 1
  6009 ;; Hardware stack levels required when called: 11
  6010 ;; This function calls:
  6011 ;;		_vfprintf
  6012 ;; This function is called by:
  6013 ;;		_touchScreenController
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           	psect	text17
  6018  004C54                     __ptext17:
  6019                           	callstack 0
  6020  004C54                     _sprintf:
  6021                           	callstack 16
  6022  004C54  0E86               	movlw	low (?_sprintf+4)
  6023  004C56  0100               	movlb	0	; () banked
  6024  004C58  6F88               	movwf	sprintf@ap& (0+255),b
  6025  004C5A  0E00               	movlw	high (?_sprintf+4)
  6026  004C5C  6F89               	movwf	(sprintf@ap+1)& (0+255),b
  6027  004C5E  C082  F08A         	movff	sprintf@s,sprintf@f
  6028  004C62  C083  F08B         	movff	sprintf@s+1,sprintf@f+1
  6029  004C66                     
  6030                           ; BSR set to: 0
  6031  004C66  0E00               	movlw	0
  6032  004C68  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  6033  004C6A  0E00               	movlw	0
  6034  004C6C  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  6035  004C6E                     
  6036                           ; BSR set to: 0
  6037  004C6E  0E00               	movlw	0
  6038  004C70  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  6039  004C72  0E00               	movlw	0
  6040  004C74  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  6041  004C76                     
  6042                           ; BSR set to: 0
  6043  004C76  0E8A               	movlw	low sprintf@f
  6044  004C78  6F7A               	movwf	vfprintf@fp& (0+255),b
  6045  004C7A  0E00               	movlw	high sprintf@f
  6046  004C7C  6F7B               	movwf	(vfprintf@fp+1)& (0+255),b
  6047  004C7E  C084  F07C         	movff	sprintf@fmt,vfprintf@fmt
  6048  004C82  C085  F07D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6049  004C86  0E88               	movlw	low sprintf@ap
  6050  004C88  6F7E               	movwf	vfprintf@ap& (0+255),b
  6051  004C8A  0E00               	movlw	high sprintf@ap
  6052  004C8C  6F7F               	movwf	(vfprintf@ap+1)& (0+255),b
  6053  004C8E  EC72  F025         	call	_vfprintf	;wreg free
  6054  004C92  0100               	movlb	0	; () banked
  6055  004C94  518C               	movf	(sprintf@f+2)& (0+255),w,b
  6056  004C96  2582               	addwf	sprintf@s& (0+255),w,b
  6057  004C98  6ED9               	movwf	fsr2l,c
  6058  004C9A  518D               	movf	(sprintf@f+3)& (0+255),w,b
  6059  004C9C  2183               	addwfc	(sprintf@s+1)& (0+255),w,b
  6060  004C9E  6EDA               	movwf	fsr2h,c
  6061  004CA0  0E00               	movlw	0
  6062  004CA2  6EDF               	movwf	indf2,c
  6063  004CA4                     
  6064                           ; BSR set to: 0
  6065  004CA4  0012               	return		;funcret
  6066  004CA6                     __end_of_sprintf:
  6067                           	callstack 0
  6068                           
  6069 ;; *************** function _vfprintf *****************
  6070 ;; Defined at:
  6071 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  6074 ;;		 -> sprintf@f(6), 
  6075 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  6076 ;;		 -> STR_13(6), STR_12(6), 
  6077 ;;  ap              2   30[BANK0 ] PTR PTR void 
  6078 ;;		 -> sprintf@ap(2), 
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;  cfmt            2   32[BANK0 ] PTR unsigned char 
  6081 ;;		 -> STR_13(6), STR_12(6), 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  2   26[BANK0 ] int 
  6084 ;; Registers used:
  6085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6091 ;;      Params:         0       6       0       0       0       0       0
  6092 ;;      Locals:         0       2       0       0       0       0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0
  6094 ;;      Totals:         0       8       0       0       0       0       0
  6095 ;;Total ram usage:        8 bytes
  6096 ;; Hardware stack levels used: 1
  6097 ;; Hardware stack levels required when called: 10
  6098 ;; This function calls:
  6099 ;;		_vfpfcnvrt
  6100 ;; This function is called by:
  6101 ;;		_sprintf
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           	psect	text18
  6106  004AE4                     __ptext18:
  6107                           	callstack 0
  6108  004AE4                     _vfprintf:
  6109                           	callstack 16
  6110  004AE4                     
  6111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6112  004AE4  C07C  F080         	movff	vfprintf@fmt,vfprintf@cfmt
  6113  004AE8  C07D  F081         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6114  004AEC                     
  6115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6116  004AEC  0E00               	movlw	0
  6117  004AEE  0100               	movlb	0	; () banked
  6118  004AF0  6FDC               	movwf	(_nout+1)& (0+255),b
  6119  004AF2  0E00               	movlw	0
  6120  004AF4  6FDB               	movwf	_nout& (0+255),b
  6121                           
  6122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6123  004AF6  EF90  F025         	goto	l8878
  6124  004AFA                     l8876:
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6128  004AFA  C07A  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  6129  004AFE  C07B  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6130  004B02  0E80               	movlw	low vfprintf@cfmt
  6131  004B04  6E41               	movwf	vfpfcnvrt@fmt^0,c
  6132  004B06  0E00               	movlw	high vfprintf@cfmt
  6133  004B08  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6134  004B0A  C07E  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  6135  004B0E  C07F  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6136  004B12  ECFB  F016         	call	_vfpfcnvrt	;wreg free
  6137  004B16  503F               	movf	?_vfpfcnvrt^0,w,c
  6138  004B18  0100               	movlb	0	; () banked
  6139  004B1A  27DB               	addwf	_nout& (0+255),f,b
  6140  004B1C  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
  6141  004B1E  23DC               	addwfc	(_nout+1)& (0+255),f,b
  6142  004B20                     l8878:
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6146  004B20  C080  FFF6         	movff	vfprintf@cfmt,tblptrl
  6147  004B24  C081  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6148  004B28                     	if	0	;tblptru may be non-zero
  6149  004B28                     	endif
  6150  004B28                     	if	0	;tblptru may be non-zero
  6151  004B28                     	endif
  6152  004B28  0008               	tblrd		*
  6153  004B2A  50F5               	movf	tablat,w,c
  6154  004B2C  0900               	iorlw	0
  6155  004B2E  A4D8               	btfss	status,2,c
  6156  004B30  EF9C  F025         	goto	u5651
  6157  004B34  EF9E  F025         	goto	u5650
  6158  004B38                     u5651:
  6159  004B38  EF7D  F025         	goto	l8876
  6160  004B3C                     u5650:
  6161  004B3C                     
  6162                           ; BSR set to: 0
  6163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6164  004B3C  C0DB  F07A         	movff	_nout,?_vfprintf
  6165  004B40  C0DC  F07B         	movff	_nout+1,?_vfprintf+1
  6166  004B44                     
  6167                           ; BSR set to: 0
  6168  004B44  0012               	return		;funcret
  6169  004B46                     __end_of_vfprintf:
  6170                           	callstack 0
  6171                           
  6172 ;; *************** function _vfpfcnvrt *****************
  6173 ;; Defined at:
  6174 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  6177 ;;		 -> sprintf@f(6), 
  6178 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  6179 ;;		 -> vfprintf@cfmt(2), 
  6180 ;;  ap              2   66[COMRAM] PTR PTR void 
  6181 ;;		 -> sprintf@ap(2), 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  ll              8   18[BANK0 ] long long 
  6184 ;;  llu             8    0        unsigned long long 
  6185 ;;  f               4    0        unsigned long long 
  6186 ;;  vp              3    0        PTR void 
  6187 ;;  ct              3    0        unsigned char [3]
  6188 ;;  cp              3    0        PTR unsigned char 
  6189 ;;  i               2    0        int 
  6190 ;;  done            2    0        int 
  6191 ;;  c               1    0        unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  2   62[COMRAM] int 
  6194 ;; Registers used:
  6195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6201 ;;      Params:         6       0       0       0       0       0       0
  6202 ;;      Locals:         0       8       0       0       0       0       0
  6203 ;;      Temps:          2       0       0       0       0       0       0
  6204 ;;      Totals:         8       8       0       0       0       0       0
  6205 ;;Total ram usage:       16 bytes
  6206 ;; Hardware stack levels used: 1
  6207 ;; Hardware stack levels required when called: 9
  6208 ;; This function calls:
  6209 ;;		_dtoa
  6210 ;;		_fputc
  6211 ;; This function is called by:
  6212 ;;		_vfprintf
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text19
  6217  002DF6                     __ptext19:
  6218                           	callstack 0
  6219  002DF6                     _vfpfcnvrt:
  6220                           	callstack 16
  6221  002DF6                     
  6222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6223  002DF6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6224  002DFA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6225  002DFE  CFDE FFF6          	movff	postinc2,tblptrl
  6226  002E02  CFDD FFF7          	movff	postdec2,tblptrh
  6227  002E06                     	if	0	;tblptru may be non-zero
  6228  002E06                     	endif
  6229  002E06                     	if	0	;tblptru may be non-zero
  6230  002E06                     	endif
  6231  002E06  0008               	tblrd		*
  6232  002E08  50F5               	movf	tablat,w,c
  6233  002E0A  0A25               	xorlw	37
  6234  002E0C  A4D8               	btfss	status,2,c
  6235  002E0E  EF0B  F017         	goto	u5251
  6236  002E12  EF0D  F017         	goto	u5250
  6237  002E16                     u5251:
  6238  002E16  EFB9  F017         	goto	l8666
  6239  002E1A                     u5250:
  6240  002E1A                     
  6241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6242  002E1A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6243  002E1E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6244  002E22  2ADE               	incf	postinc2,f,c
  6245  002E24  0E00               	movlw	0
  6246  002E26  22DD               	addwfc	postdec2,f,c
  6247  002E28                     
  6248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6249  002E28  0E00               	movlw	0
  6250  002E2A  6E48               	movwf	(_width+1)^0,c
  6251  002E2C  0E00               	movlw	0
  6252  002E2E  6E47               	movwf	_width^0,c
  6253  002E30  C047  F04B         	movff	_width,_flags
  6254  002E34  C048  F04C         	movff	_width+1,_flags+1
  6255  002E38                     
  6256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6257  002E38  6849               	setf	_prec^0,c
  6258  002E3A  684A               	setf	(_prec+1)^0,c
  6259  002E3C                     
  6260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6261  002E3C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6262  002E40  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6263  002E44  CFDE FFF6          	movff	postinc2,tblptrl
  6264  002E48  CFDD FFF7          	movff	postdec2,tblptrh
  6265  002E4C                     	if	0	;tblptru may be non-zero
  6266  002E4C                     	endif
  6267  002E4C                     	if	0	;tblptru may be non-zero
  6268  002E4C                     	endif
  6269  002E4C  0008               	tblrd		*
  6270  002E4E  50F5               	movf	tablat,w,c
  6271  002E50  0A64               	xorlw	100
  6272  002E52  B4D8               	btfsc	status,2,c
  6273  002E54  EF2E  F017         	goto	u5261
  6274  002E58  EF30  F017         	goto	u5260
  6275  002E5C                     u5261:
  6276  002E5C  EF42  F017         	goto	l8644
  6277  002E60                     u5260:
  6278  002E60  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6279  002E64  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6280  002E68  CFDE FFF6          	movff	postinc2,tblptrl
  6281  002E6C  CFDD FFF7          	movff	postdec2,tblptrh
  6282  002E70                     	if	0	;tblptru may be non-zero
  6283  002E70                     	endif
  6284  002E70                     	if	0	;tblptru may be non-zero
  6285  002E70                     	endif
  6286  002E70  0008               	tblrd		*
  6287  002E72  50F5               	movf	tablat,w,c
  6288  002E74  0A69               	xorlw	105
  6289  002E76  A4D8               	btfss	status,2,c
  6290  002E78  EF40  F017         	goto	u5271
  6291  002E7C  EF42  F017         	goto	u5270
  6292  002E80                     u5271:
  6293  002E80  EF83  F017         	goto	l8650
  6294  002E84                     u5270:
  6295  002E84                     l8644:
  6296                           
  6297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6298  002E84  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6299  002E88  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6300  002E8C  2ADE               	incf	postinc2,f,c
  6301  002E8E  0E00               	movlw	0
  6302  002E90  22DD               	addwfc	postdec2,f,c
  6303                           
  6304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6305  002E92  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6306  002E96  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6307  002E9A  CFDF F045          	movff	indf2,??_vfpfcnvrt
  6308  002E9E  0E02               	movlw	2
  6309  002EA0  26DE               	addwf	postinc2,f,c
  6310  002EA2  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  6311  002EA6  0E00               	movlw	0
  6312  002EA8  22DD               	addwfc	postdec2,f,c
  6313  002EAA  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6314  002EAE  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6315  002EB2  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
  6316  002EB6  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
  6317  002EBA  0100               	movlb	0	; () banked
  6318  002EBC  0E00               	movlw	0
  6319  002EBE  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6320  002EC0  0EFF               	movlw	-1
  6321  002EC2  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6322  002EC4  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6323  002EC6  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6324  002EC8  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6325  002ECA  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6326  002ECC  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6327  002ECE                     
  6328                           ; BSR set to: 0
  6329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6330  002ECE  C03F  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
  6331  002ED2  C040  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6332  002ED6  C072  F02F         	movff	vfpfcnvrt@ll,dtoa@d
  6333  002EDA  C073  F030         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6334  002EDE  C074  F031         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6335  002EE2  C075  F032         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6336  002EE6  C076  F033         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6337  002EEA  C077  F034         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6338  002EEE  C078  F035         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6339  002EF2  C079  F036         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6340  002EF6  EC05  F012         	call	_dtoa	;wreg free
  6341  002EFA  C02D  F03F         	movff	?_dtoa,?_vfpfcnvrt
  6342  002EFE  C02E  F040         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6343  002F02  EFD4  F017         	goto	l1477
  6344  002F06                     l8650:
  6345                           
  6346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6347  002F06  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6348  002F0A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6349  002F0E  CFDE FFF6          	movff	postinc2,tblptrl
  6350  002F12  CFDD FFF7          	movff	postdec2,tblptrh
  6351  002F16                     	if	0	;tblptru may be non-zero
  6352  002F16                     	endif
  6353  002F16                     	if	0	;tblptru may be non-zero
  6354  002F16                     	endif
  6355  002F16  0008               	tblrd		*
  6356  002F18  50F5               	movf	tablat,w,c
  6357  002F1A  0A25               	xorlw	37
  6358  002F1C  A4D8               	btfss	status,2,c
  6359  002F1E  EF93  F017         	goto	u5281
  6360  002F22  EF95  F017         	goto	u5280
  6361  002F26                     u5281:
  6362  002F26  EFAC  F017         	goto	l8660
  6363  002F2A                     u5280:
  6364  002F2A                     
  6365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6366  002F2A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6367  002F2E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6368  002F32  2ADE               	incf	postinc2,f,c
  6369  002F34  0E00               	movlw	0
  6370  002F36  22DD               	addwfc	postdec2,f,c
  6371  002F38                     
  6372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6373  002F38  0E00               	movlw	0
  6374  002F3A  6E13               	movwf	(fputc@c+1)^0,c
  6375  002F3C  0E25               	movlw	37
  6376  002F3E  6E12               	movwf	fputc@c^0,c
  6377  002F40  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
  6378  002F44  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6379  002F48  EC14  F01E         	call	_fputc	;wreg free
  6380  002F4C                     l8656:
  6381                           
  6382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6383  002F4C  0E00               	movlw	0
  6384  002F4E  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  6385  002F50  0E01               	movlw	1
  6386  002F52  6E3F               	movwf	?_vfpfcnvrt^0,c
  6387  002F54  EFD4  F017         	goto	l1477
  6388  002F58                     l8660:
  6389                           
  6390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6391  002F58  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6392  002F5C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6393  002F60  2ADE               	incf	postinc2,f,c
  6394  002F62  0E00               	movlw	0
  6395  002F64  22DD               	addwfc	postdec2,f,c
  6396  002F66                     
  6397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6398  002F66  0E00               	movlw	0
  6399  002F68  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  6400  002F6A  0E00               	movlw	0
  6401  002F6C  6E3F               	movwf	?_vfpfcnvrt^0,c
  6402  002F6E  EFD4  F017         	goto	l1477
  6403  002F72                     l8666:
  6404                           
  6405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6406  002F72  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6407  002F76  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6408  002F7A  CFDE FFF6          	movff	postinc2,tblptrl
  6409  002F7E  CFDD FFF7          	movff	postdec2,tblptrh
  6410  002F82                     	if	0	;tblptru may be non-zero
  6411  002F82                     	endif
  6412  002F82                     	if	0	;tblptru may be non-zero
  6413  002F82                     	endif
  6414  002F82  0008               	tblrd		*
  6415  002F84  50F5               	movf	tablat,w,c
  6416  002F86  6E12               	movwf	fputc@c^0,c
  6417  002F88  6A13               	clrf	(fputc@c+1)^0,c
  6418  002F8A  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
  6419  002F8E  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6420  002F92  EC14  F01E         	call	_fputc	;wreg free
  6421  002F96                     
  6422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6423  002F96  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6424  002F9A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6425  002F9E  2ADE               	incf	postinc2,f,c
  6426  002FA0  0E00               	movlw	0
  6427  002FA2  22DD               	addwfc	postdec2,f,c
  6428  002FA4  EFA6  F017         	goto	l8656
  6429  002FA8                     l1477:
  6430  002FA8  0012               	return		;funcret
  6431  002FAA                     __end_of_vfpfcnvrt:
  6432                           	callstack 0
  6433                           
  6434 ;; *************** function _dtoa *****************
  6435 ;; Defined at:
  6436 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
  6439 ;;		 -> sprintf@f(6), 
  6440 ;;  d               8   46[COMRAM] long long 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;  n               8    8[BANK0 ] long long 
  6443 ;;  i               2   16[BANK0 ] int 
  6444 ;;  s               2    6[BANK0 ] int 
  6445 ;;  w               2    4[BANK0 ] int 
  6446 ;;  p               2    2[BANK0 ] int 
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  2   44[COMRAM] int 
  6449 ;; Registers used:
  6450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6456 ;;      Params:        10       0       0       0       0       0       0
  6457 ;;      Locals:         0      18       0       0       0       0       0
  6458 ;;      Temps:          8       0       0       0       0       0       0
  6459 ;;      Totals:        18      18       0       0       0       0       0
  6460 ;;Total ram usage:       36 bytes
  6461 ;; Hardware stack levels used: 1
  6462 ;; Hardware stack levels required when called: 8
  6463 ;; This function calls:
  6464 ;;		___aodiv
  6465 ;;		___aomod
  6466 ;;		_abs
  6467 ;;		_pad
  6468 ;; This function is called by:
  6469 ;;		_vfpfcnvrt
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text20
  6474  00240A                     __ptext20:
  6475                           	callstack 0
  6476  00240A                     _dtoa:
  6477                           	callstack 16
  6478  00240A                     
  6479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6480  00240A  C02F  F068         	movff	dtoa@d,dtoa@n
  6481  00240E  C030  F069         	movff	dtoa@d+1,dtoa@n+1
  6482  002412  C031  F06A         	movff	dtoa@d+2,dtoa@n+2
  6483  002416  C032  F06B         	movff	dtoa@d+3,dtoa@n+3
  6484  00241A  C033  F06C         	movff	dtoa@d+4,dtoa@n+4
  6485  00241E  C034  F06D         	movff	dtoa@d+5,dtoa@n+5
  6486  002422  C035  F06E         	movff	dtoa@d+6,dtoa@n+6
  6487  002426  C036  F06F         	movff	dtoa@d+7,dtoa@n+7
  6488  00242A                     
  6489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6490  00242A  0100               	movlb	0	; () banked
  6491  00242C  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
  6492  00242E  EF1B  F012         	goto	u4951
  6493  002432  EF1E  F012         	goto	u4950
  6494  002436                     u4951:
  6495  002436  0E01               	movlw	1
  6496  002438  EF1F  F012         	goto	u4960
  6497  00243C                     u4950:
  6498  00243C  0E00               	movlw	0
  6499  00243E                     u4960:
  6500  00243E  6F66               	movwf	dtoa@s& (0+255),b
  6501  002440  6B67               	clrf	(dtoa@s+1)& (0+255),b
  6502                           
  6503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6504  002442  5166               	movf	dtoa@s& (0+255),w,b
  6505  002444  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6506  002446  B4D8               	btfsc	status,2,c
  6507  002448  EF28  F012         	goto	u4971
  6508  00244C  EF2A  F012         	goto	u4970
  6509  002450                     u4971:
  6510  002450  EF3A  F012         	goto	l8384
  6511  002454                     u4970:
  6512  002454                     
  6513                           ; BSR set to: 0
  6514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6515  002454  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  6516  002456  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  6517  002458  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  6518  00245A  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  6519  00245C  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  6520  00245E  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  6521  002460  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  6522  002462  6D68               	negf	dtoa@n& (0+255),b
  6523  002464  0E00               	movlw	0
  6524  002466  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  6525  002468  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  6526  00246A  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  6527  00246C  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  6528  00246E  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  6529  002470  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  6530  002472  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  6531  002474                     l8384:
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6535  002474  BE4A               	btfsc	(_prec+1)^0,7,c
  6536  002476  EF3F  F012         	goto	u4981
  6537  00247A  EF41  F012         	goto	u4980
  6538  00247E                     u4981:
  6539  00247E  EF42  F012         	goto	l8388
  6540  002482                     u4980:
  6541  002482                     
  6542                           ; BSR set to: 0
  6543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6544  002482  924B               	bcf	_flags^0,1,c
  6545  002484                     l8388:
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6549  002484  BE4A               	btfsc	(_prec+1)^0,7,c
  6550  002486  EF4F  F012         	goto	u4990
  6551  00248A  504A               	movf	(_prec+1)^0,w,c
  6552  00248C  E106               	bnz	u4991
  6553  00248E  0449               	decf	_prec^0,w,c
  6554  002490  B0D8               	btfsc	status,0,c
  6555  002492  EF4D  F012         	goto	u4991
  6556  002496  EF4F  F012         	goto	u4990
  6557  00249A                     u4991:
  6558  00249A  EF55  F012         	goto	l1450
  6559  00249E                     u4990:
  6560  00249E                     
  6561                           ; BSR set to: 0
  6562  00249E  0E00               	movlw	0
  6563  0024A0  6F63               	movwf	(dtoa@p+1)& (0+255),b
  6564  0024A2  0E01               	movlw	1
  6565  0024A4  6F62               	movwf	dtoa@p& (0+255),b
  6566  0024A6  EF59  F012         	goto	l1452
  6567  0024AA                     l1450:
  6568                           
  6569                           ; BSR set to: 0
  6570  0024AA  C049  F062         	movff	_prec,dtoa@p
  6571  0024AE  C04A  F063         	movff	_prec+1,dtoa@p+1
  6572  0024B2                     l1452:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6576  0024B2  C047  F064         	movff	_width,dtoa@w
  6577  0024B6  C048  F065         	movff	_width+1,dtoa@w+1
  6578  0024BA                     
  6579                           ; BSR set to: 0
  6580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6581  0024BA  5166               	movf	dtoa@s& (0+255),w,b
  6582  0024BC  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6583  0024BE  A4D8               	btfss	status,2,c
  6584  0024C0  EF64  F012         	goto	u5001
  6585  0024C4  EF66  F012         	goto	u5000
  6586  0024C8                     u5001:
  6587  0024C8  EF6D  F012         	goto	l8396
  6588  0024CC                     u5000:
  6589  0024CC                     
  6590                           ; BSR set to: 0
  6591  0024CC  A44B               	btfss	_flags^0,2,c
  6592  0024CE  EF6B  F012         	goto	u5011
  6593  0024D2  EF6D  F012         	goto	u5010
  6594  0024D6                     u5011:
  6595  0024D6  EF70  F012         	goto	l8398
  6596  0024DA                     u5010:
  6597  0024DA                     l8396:
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  6601  0024DA  0764               	decf	dtoa@w& (0+255),f,b
  6602  0024DC  A0D8               	btfss	status,0,c
  6603  0024DE  0765               	decf	(dtoa@w+1)& (0+255),f,b
  6604  0024E0                     l8398:
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6608  0024E0  0E00               	movlw	0
  6609  0024E2  6F71               	movwf	(dtoa@i+1)& (0+255),b
  6610  0024E4  0E1F               	movlw	31
  6611  0024E6  6F70               	movwf	dtoa@i& (0+255),b
  6612  0024E8                     
  6613                           ; BSR set to: 0
  6614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6615  0024E8  0E00               	movlw	0
  6616  0024EA  6FFF               	movwf	(_dbuf+31)& (0+255),b
  6617                           
  6618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6619  0024EC  EFF5  F012         	goto	l8412
  6620  0024F0                     l8402:
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  6624  0024F0  0770               	decf	dtoa@i& (0+255),f,b
  6625  0024F2  A0D8               	btfss	status,0,c
  6626  0024F4  0771               	decf	(dtoa@i+1)& (0+255),f,b
  6627  0024F6                     
  6628                           ; BSR set to: 0
  6629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6630  0024F6  0EE0               	movlw	low _dbuf
  6631  0024F8  2570               	addwf	dtoa@i& (0+255),w,b
  6632  0024FA  6ED9               	movwf	fsr2l,c
  6633  0024FC  0E00               	movlw	high _dbuf
  6634  0024FE  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6635  002500  6EDA               	movwf	fsr2h,c
  6636  002502  C068  F012         	movff	dtoa@n,___aomod@dividend
  6637  002506  C069  F013         	movff	dtoa@n+1,___aomod@dividend+1
  6638  00250A  C06A  F014         	movff	dtoa@n+2,___aomod@dividend+2
  6639  00250E  C06B  F015         	movff	dtoa@n+3,___aomod@dividend+3
  6640  002512  C06C  F016         	movff	dtoa@n+4,___aomod@dividend+4
  6641  002516  C06D  F017         	movff	dtoa@n+5,___aomod@dividend+5
  6642  00251A  C06E  F018         	movff	dtoa@n+6,___aomod@dividend+6
  6643  00251E  C06F  F019         	movff	dtoa@n+7,___aomod@dividend+7
  6644  002522  0E0A               	movlw	10
  6645  002524  6E1A               	movwf	___aomod@divisor^0,c
  6646  002526  0E00               	movlw	0
  6647  002528  6E1B               	movwf	(___aomod@divisor+1)^0,c
  6648  00252A  0E00               	movlw	0
  6649  00252C  6E1C               	movwf	(___aomod@divisor+2)^0,c
  6650  00252E  0E00               	movlw	0
  6651  002530  6E1D               	movwf	(___aomod@divisor+3)^0,c
  6652  002532  0E00               	movlw	0
  6653  002534  6E1E               	movwf	(___aomod@divisor+4)^0,c
  6654  002536  0E00               	movlw	0
  6655  002538  6E1F               	movwf	(___aomod@divisor+5)^0,c
  6656  00253A  0E00               	movlw	0
  6657  00253C  6E20               	movwf	(___aomod@divisor+6)^0,c
  6658  00253E  0E00               	movlw	0
  6659  002540  6E21               	movwf	(___aomod@divisor+7)^0,c
  6660  002542  EC6B  F019         	call	___aomod	;wreg free
  6661  002546  C012  F037         	movff	?___aomod,??_dtoa
  6662  00254A  C013  F038         	movff	?___aomod+1,??_dtoa+1
  6663  00254E  C014  F039         	movff	?___aomod+2,??_dtoa+2
  6664  002552  C015  F03A         	movff	?___aomod+3,??_dtoa+3
  6665  002556  C016  F03B         	movff	?___aomod+4,??_dtoa+4
  6666  00255A  C017  F03C         	movff	?___aomod+5,??_dtoa+5
  6667  00255E  C018  F03D         	movff	?___aomod+6,??_dtoa+6
  6668  002562  C019  F03E         	movff	?___aomod+7,??_dtoa+7
  6669  002566  C037  F024         	movff	??_dtoa,abs@a
  6670  00256A  C039  F025         	movff	??_dtoa+2,abs@a+1
  6671  00256E  EC0E  F027         	call	_abs	;wreg free
  6672  002572  5024               	movf	?_abs^0,w,c
  6673  002574  0F30               	addlw	48
  6674  002576  6EDF               	movwf	indf2,c
  6675  002578                     
  6676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  6677  002578  0100               	movlb	0	; () banked
  6678  00257A  0762               	decf	dtoa@p& (0+255),f,b
  6679  00257C  A0D8               	btfss	status,0,c
  6680  00257E  0763               	decf	(dtoa@p+1)& (0+255),f,b
  6681  002580                     
  6682                           ; BSR set to: 0
  6683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  6684  002580  0764               	decf	dtoa@w& (0+255),f,b
  6685  002582  A0D8               	btfss	status,0,c
  6686  002584  0765               	decf	(dtoa@w+1)& (0+255),f,b
  6687  002586                     
  6688                           ; BSR set to: 0
  6689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6690  002586  C068  F012         	movff	dtoa@n,___aodiv@dividend
  6691  00258A  C069  F013         	movff	dtoa@n+1,___aodiv@dividend+1
  6692  00258E  C06A  F014         	movff	dtoa@n+2,___aodiv@dividend+2
  6693  002592  C06B  F015         	movff	dtoa@n+3,___aodiv@dividend+3
  6694  002596  C06C  F016         	movff	dtoa@n+4,___aodiv@dividend+4
  6695  00259A  C06D  F017         	movff	dtoa@n+5,___aodiv@dividend+5
  6696  00259E  C06E  F018         	movff	dtoa@n+6,___aodiv@dividend+6
  6697  0025A2  C06F  F019         	movff	dtoa@n+7,___aodiv@dividend+7
  6698  0025A6  0E0A               	movlw	10
  6699  0025A8  6E1A               	movwf	___aodiv@divisor^0,c
  6700  0025AA  0E00               	movlw	0
  6701  0025AC  6E1B               	movwf	(___aodiv@divisor+1)^0,c
  6702  0025AE  0E00               	movlw	0
  6703  0025B0  6E1C               	movwf	(___aodiv@divisor+2)^0,c
  6704  0025B2  0E00               	movlw	0
  6705  0025B4  6E1D               	movwf	(___aodiv@divisor+3)^0,c
  6706  0025B6  0E00               	movlw	0
  6707  0025B8  6E1E               	movwf	(___aodiv@divisor+4)^0,c
  6708  0025BA  0E00               	movlw	0
  6709  0025BC  6E1F               	movwf	(___aodiv@divisor+5)^0,c
  6710  0025BE  0E00               	movlw	0
  6711  0025C0  6E20               	movwf	(___aodiv@divisor+6)^0,c
  6712  0025C2  0E00               	movlw	0
  6713  0025C4  6E21               	movwf	(___aodiv@divisor+7)^0,c
  6714  0025C6  ECA7  F018         	call	___aodiv	;wreg free
  6715  0025CA  C012  F068         	movff	?___aodiv,dtoa@n
  6716  0025CE  C013  F069         	movff	?___aodiv+1,dtoa@n+1
  6717  0025D2  C014  F06A         	movff	?___aodiv+2,dtoa@n+2
  6718  0025D6  C015  F06B         	movff	?___aodiv+3,dtoa@n+3
  6719  0025DA  C016  F06C         	movff	?___aodiv+4,dtoa@n+4
  6720  0025DE  C017  F06D         	movff	?___aodiv+5,dtoa@n+5
  6721  0025E2  C018  F06E         	movff	?___aodiv+6,dtoa@n+6
  6722  0025E6  C019  F06F         	movff	?___aodiv+7,dtoa@n+7
  6723  0025EA                     l8412:
  6724                           
  6725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6726  0025EA  0100               	movlb	0	; () banked
  6727  0025EC  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  6728  0025EE  EF01  F013         	goto	u5021
  6729  0025F2  5171               	movf	(dtoa@i+1)& (0+255),w,b
  6730  0025F4  E108               	bnz	u5020
  6731  0025F6  0570               	decf	dtoa@i& (0+255),w,b
  6732  0025F8  A0D8               	btfss	status,0,c
  6733  0025FA  EF01  F013         	goto	u5021
  6734  0025FE  EF03  F013         	goto	u5020
  6735  002602                     u5021:
  6736  002602  EF33  F013         	goto	l8422
  6737  002606                     u5020:
  6738  002606                     
  6739                           ; BSR set to: 0
  6740  002606  5168               	movf	dtoa@n& (0+255),w,b
  6741  002608  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  6742  00260A  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  6743  00260C  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  6744  00260E  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  6745  002610  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  6746  002612  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  6747  002614  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  6748  002616  A4D8               	btfss	status,2,c
  6749  002618  EF10  F013         	goto	u5031
  6750  00261C  EF12  F013         	goto	u5030
  6751  002620                     u5031:
  6752  002620  EF78  F012         	goto	l8402
  6753  002624                     u5030:
  6754  002624                     
  6755                           ; BSR set to: 0
  6756  002624  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  6757  002626  EF1F  F013         	goto	u5040
  6758  00262A  5163               	movf	(dtoa@p+1)& (0+255),w,b
  6759  00262C  E106               	bnz	u5041
  6760  00262E  0562               	decf	dtoa@p& (0+255),w,b
  6761  002630  B0D8               	btfsc	status,0,c
  6762  002632  EF1D  F013         	goto	u5041
  6763  002636  EF1F  F013         	goto	u5040
  6764  00263A                     u5041:
  6765  00263A  EF78  F012         	goto	l8402
  6766  00263E                     u5040:
  6767  00263E                     
  6768                           ; BSR set to: 0
  6769  00263E  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  6770  002640  EF2A  F013         	goto	u5051
  6771  002644  5165               	movf	(dtoa@w+1)& (0+255),w,b
  6772  002646  E108               	bnz	u5050
  6773  002648  0564               	decf	dtoa@w& (0+255),w,b
  6774  00264A  A0D8               	btfss	status,0,c
  6775  00264C  EF2A  F013         	goto	u5051
  6776  002650  EF2C  F013         	goto	u5050
  6777  002654                     u5051:
  6778  002654  EF33  F013         	goto	l8422
  6779  002658                     u5050:
  6780  002658                     
  6781                           ; BSR set to: 0
  6782  002658  B24B               	btfsc	_flags^0,1,c
  6783  00265A  EF31  F013         	goto	u5061
  6784  00265E  EF33  F013         	goto	u5060
  6785  002662                     u5061:
  6786  002662  EF78  F012         	goto	l8402
  6787  002666                     u5060:
  6788  002666                     l8422:
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6792  002666  5166               	movf	dtoa@s& (0+255),w,b
  6793  002668  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6794  00266A  A4D8               	btfss	status,2,c
  6795  00266C  EF3A  F013         	goto	u5071
  6796  002670  EF3C  F013         	goto	u5070
  6797  002674                     u5071:
  6798  002674  EF43  F013         	goto	l8426
  6799  002678                     u5070:
  6800  002678                     
  6801                           ; BSR set to: 0
  6802  002678  A44B               	btfss	_flags^0,2,c
  6803  00267A  EF41  F013         	goto	u5081
  6804  00267E  EF43  F013         	goto	u5080
  6805  002682                     u5081:
  6806  002682  EF61  F013         	goto	l8436
  6807  002686                     u5080:
  6808  002686                     l8426:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  6812  002686  0770               	decf	dtoa@i& (0+255),f,b
  6813  002688  A0D8               	btfss	status,0,c
  6814  00268A  0771               	decf	(dtoa@i+1)& (0+255),f,b
  6815  00268C                     
  6816                           ; BSR set to: 0
  6817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6818  00268C  5166               	movf	dtoa@s& (0+255),w,b
  6819  00268E  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6820  002690  A4D8               	btfss	status,2,c
  6821  002692  EF4D  F013         	goto	u5091
  6822  002696  EF4F  F013         	goto	u5090
  6823  00269A                     u5091:
  6824  00269A  EF55  F013         	goto	l8432
  6825  00269E                     u5090:
  6826  00269E                     
  6827                           ; BSR set to: 0
  6828  00269E  0E00               	movlw	0
  6829  0026A0  6F61               	movwf	(_dtoa$3788+1)& (0+255),b
  6830  0026A2  0E2B               	movlw	43
  6831  0026A4  6F60               	movwf	_dtoa$3788& (0+255),b
  6832  0026A6  EF59  F013         	goto	l8434
  6833  0026AA                     l8432:
  6834                           
  6835                           ; BSR set to: 0
  6836  0026AA  0E00               	movlw	0
  6837  0026AC  6F61               	movwf	(_dtoa$3788+1)& (0+255),b
  6838  0026AE  0E2D               	movlw	45
  6839  0026B0  6F60               	movwf	_dtoa$3788& (0+255),b
  6840  0026B2                     l8434:
  6841                           
  6842                           ; BSR set to: 0
  6843  0026B2  0EE0               	movlw	low _dbuf
  6844  0026B4  2570               	addwf	dtoa@i& (0+255),w,b
  6845  0026B6  6ED9               	movwf	fsr2l,c
  6846  0026B8  0E00               	movlw	high _dbuf
  6847  0026BA  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6848  0026BC  6EDA               	movwf	fsr2h,c
  6849  0026BE  C060  FFDF         	movff	_dtoa$3788,indf2
  6850  0026C2                     l8436:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6854  0026C2  C02D  F022         	movff	dtoa@fp,pad@fp
  6855  0026C6  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
  6856  0026CA  0EE0               	movlw	low _dbuf
  6857  0026CC  2570               	addwf	dtoa@i& (0+255),w,b
  6858  0026CE  6E24               	movwf	pad@buf^0,c
  6859  0026D0  0E00               	movlw	high _dbuf
  6860  0026D2  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6861  0026D4  6E25               	movwf	(pad@buf+1)^0,c
  6862  0026D6  C064  F026         	movff	dtoa@w,pad@p
  6863  0026DA  C065  F027         	movff	dtoa@w+1,pad@p+1
  6864  0026DE  ECA3  F01F         	call	_pad	;wreg free
  6865  0026E2  C022  F02D         	movff	?_pad,?_dtoa
  6866  0026E6  C023  F02E         	movff	?_pad+1,?_dtoa+1
  6867  0026EA  0012               	return		;funcret
  6868  0026EC                     __end_of_dtoa:
  6869                           	callstack 0
  6870                           
  6871 ;; *************** function _pad *****************
  6872 ;; Defined at:
  6873 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6876 ;;		 -> sprintf@f(6), 
  6877 ;;  buf             2   35[COMRAM] PTR unsigned char 
  6878 ;;		 -> dbuf(32), 
  6879 ;;  p               2   37[COMRAM] int 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  w               2   42[COMRAM] int 
  6882 ;;  i               2   40[COMRAM] int 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  2   33[COMRAM] int 
  6885 ;; Registers used:
  6886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6892 ;;      Params:         6       0       0       0       0       0       0
  6893 ;;      Locals:         4       0       0       0       0       0       0
  6894 ;;      Temps:          1       0       0       0       0       0       0
  6895 ;;      Totals:        11       0       0       0       0       0       0
  6896 ;;Total ram usage:       11 bytes
  6897 ;; Hardware stack levels used: 1
  6898 ;; Hardware stack levels required when called: 7
  6899 ;; This function calls:
  6900 ;;		_fputc
  6901 ;;		_fputs
  6902 ;;		_strlen
  6903 ;; This function is called by:
  6904 ;;		_dtoa
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           	psect	text21
  6909  003F46                     __ptext21:
  6910                           	callstack 0
  6911  003F46                     _pad:
  6912                           	callstack 16
  6913  003F46                     
  6914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6915  003F46  A04B               	btfss	_flags^0,0,c
  6916  003F48  EFA8  F01F         	goto	u4611
  6917  003F4C  EFAA  F01F         	goto	u4610
  6918  003F50                     u4611:
  6919  003F50  EFB4  F01F         	goto	l7814
  6920  003F54                     u4610:
  6921  003F54                     
  6922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6923  003F54  C024  F01B         	movff	pad@buf,fputs@s
  6924  003F58  C025  F01C         	movff	pad@buf+1,fputs@s+1
  6925  003F5C  C022  F01D         	movff	pad@fp,fputs@fp
  6926  003F60  C023  F01E         	movff	pad@fp+1,fputs@fp+1
  6927  003F64  ECCA  F026         	call	_fputs	;wreg free
  6928  003F68                     l7814:
  6929                           
  6930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6931  003F68  BE27               	btfsc	(pad@p+1)^0,7,c
  6932  003F6A  EFB9  F01F         	goto	u4621
  6933  003F6E  EFBB  F01F         	goto	u4620
  6934  003F72                     u4621:
  6935  003F72  EFC1  F01F         	goto	l7818
  6936  003F76                     u4620:
  6937  003F76  C026  F02B         	movff	pad@p,pad@w
  6938  003F7A  C027  F02C         	movff	pad@p+1,pad@w+1
  6939  003F7E  EFC5  F01F         	goto	l1439
  6940  003F82                     l7818:
  6941  003F82  0E00               	movlw	0
  6942  003F84  6E2C               	movwf	(pad@w+1)^0,c
  6943  003F86  0E00               	movlw	0
  6944  003F88  6E2B               	movwf	pad@w^0,c
  6945  003F8A                     l1439:
  6946                           
  6947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6948  003F8A  0E00               	movlw	0
  6949  003F8C  6E2A               	movwf	(pad@i+1)^0,c
  6950  003F8E  0E00               	movlw	0
  6951  003F90  6E29               	movwf	pad@i^0,c
  6952                           
  6953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6954  003F92  EFD7  F01F         	goto	l7824
  6955  003F96                     l7820:
  6956                           
  6957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6958  003F96  0E00               	movlw	0
  6959  003F98  6E13               	movwf	(fputc@c+1)^0,c
  6960  003F9A  0E20               	movlw	32
  6961  003F9C  6E12               	movwf	fputc@c^0,c
  6962  003F9E  C022  F014         	movff	pad@fp,fputc@fp
  6963  003FA2  C023  F015         	movff	pad@fp+1,fputc@fp+1
  6964  003FA6  EC14  F01E         	call	_fputc	;wreg free
  6965  003FAA                     
  6966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6967  003FAA  4A29               	infsnz	pad@i^0,f,c
  6968  003FAC  2A2A               	incf	(pad@i+1)^0,f,c
  6969  003FAE                     l7824:
  6970                           
  6971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6972  003FAE  502B               	movf	pad@w^0,w,c
  6973  003FB0  5C29               	subwf	pad@i^0,w,c
  6974  003FB2  502A               	movf	(pad@i+1)^0,w,c
  6975  003FB4  0A80               	xorlw	128
  6976  003FB6  6E28               	movwf	??_pad^0,c
  6977  003FB8  502C               	movf	(pad@w+1)^0,w,c
  6978  003FBA  0A80               	xorlw	128
  6979  003FBC  5828               	subwfb	??_pad^0,w,c
  6980  003FBE  A0D8               	btfss	status,0,c
  6981  003FC0  EFE4  F01F         	goto	u4631
  6982  003FC4  EFE6  F01F         	goto	u4630
  6983  003FC8                     u4631:
  6984  003FC8  EFCB  F01F         	goto	l7820
  6985  003FCC                     u4630:
  6986  003FCC                     
  6987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6988  003FCC  B04B               	btfsc	_flags^0,0,c
  6989  003FCE  EFEB  F01F         	goto	u4641
  6990  003FD2  EFED  F01F         	goto	u4640
  6991  003FD6                     u4641:
  6992  003FD6  EFF7  F01F         	goto	l7828
  6993  003FDA                     u4640:
  6994  003FDA                     
  6995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6996  003FDA  C024  F01B         	movff	pad@buf,fputs@s
  6997  003FDE  C025  F01C         	movff	pad@buf+1,fputs@s+1
  6998  003FE2  C022  F01D         	movff	pad@fp,fputs@fp
  6999  003FE6  C023  F01E         	movff	pad@fp+1,fputs@fp+1
  7000  003FEA  ECCA  F026         	call	_fputs	;wreg free
  7001  003FEE                     l7828:
  7002                           
  7003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7004  003FEE  C024  F012         	movff	pad@buf,strlen@s
  7005  003FF2  C025  F013         	movff	pad@buf+1,strlen@s+1
  7006  003FF6  ECA3  F026         	call	_strlen	;wreg free
  7007  003FFA  502B               	movf	pad@w^0,w,c
  7008  003FFC  2412               	addwf	?_strlen^0,w,c
  7009  003FFE  6E22               	movwf	?_pad^0,c
  7010  004000  502C               	movf	(pad@w+1)^0,w,c
  7011  004002  2013               	addwfc	(?_strlen+1)^0,w,c
  7012  004004  6E23               	movwf	(?_pad+1)^0,c
  7013  004006  0012               	return		;funcret
  7014  004008                     __end_of_pad:
  7015                           	callstack 0
  7016                           
  7017 ;; *************** function _fputs *****************
  7018 ;; Defined at:
  7019 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  s               2   26[COMRAM] PTR const unsigned char 
  7022 ;;		 -> dbuf(32), 
  7023 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  7024 ;;		 -> sprintf@f(6), 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  i               2   31[COMRAM] int 
  7027 ;;  c               1   30[COMRAM] unsigned char 
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  2   26[COMRAM] int 
  7030 ;; Registers used:
  7031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7037 ;;      Params:         4       0       0       0       0       0       0
  7038 ;;      Locals:         3       0       0       0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0
  7040 ;;      Totals:         7       0       0       0       0       0       0
  7041 ;;Total ram usage:        7 bytes
  7042 ;; Hardware stack levels used: 1
  7043 ;; Hardware stack levels required when called: 6
  7044 ;; This function calls:
  7045 ;;		_fputc
  7046 ;; This function is called by:
  7047 ;;		_pad
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text22
  7052  004D94                     __ptext22:
  7053                           	callstack 0
  7054  004D94                     _fputs:
  7055                           	callstack 16
  7056  004D94  0E00               	movlw	0
  7057  004D96  6E21               	movwf	(fputs@i+1)^0,c
  7058  004D98  0E00               	movlw	0
  7059  004D9A  6E20               	movwf	fputs@i^0,c
  7060  004D9C  EFDB  F026         	goto	l7212
  7061  004DA0                     l7208:
  7062  004DA0  C01F  F012         	movff	fputs@c,fputc@c
  7063  004DA4  6A13               	clrf	(fputc@c+1)^0,c
  7064  004DA6  C01D  F014         	movff	fputs@fp,fputc@fp
  7065  004DAA  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
  7066  004DAE  EC14  F01E         	call	_fputc	;wreg free
  7067  004DB2  4A20               	infsnz	fputs@i^0,f,c
  7068  004DB4  2A21               	incf	(fputs@i+1)^0,f,c
  7069  004DB6                     l7212:
  7070  004DB6  5020               	movf	fputs@i^0,w,c
  7071  004DB8  241B               	addwf	fputs@s^0,w,c
  7072  004DBA  6ED9               	movwf	fsr2l,c
  7073  004DBC  5021               	movf	(fputs@i+1)^0,w,c
  7074  004DBE  201C               	addwfc	(fputs@s+1)^0,w,c
  7075  004DC0  6EDA               	movwf	fsr2h,c
  7076  004DC2  50DF               	movf	indf2,w,c
  7077  004DC4  6E1F               	movwf	fputs@c^0,c
  7078  004DC6  501F               	movf	fputs@c^0,w,c
  7079  004DC8  A4D8               	btfss	status,2,c
  7080  004DCA  EFE9  F026         	goto	u4221
  7081  004DCE  EFEB  F026         	goto	u4220
  7082  004DD2                     u4221:
  7083  004DD2  EFD0  F026         	goto	l7208
  7084  004DD6                     u4220:
  7085  004DD6  0012               	return		;funcret
  7086  004DD8                     __end_of_fputs:
  7087                           	callstack 0
  7088                           
  7089 ;; *************** function _fputc *****************
  7090 ;; Defined at:
  7091 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  c               2   17[COMRAM] int 
  7094 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  7095 ;;		 -> sprintf@f(6), 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;		None
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  2   17[COMRAM] int 
  7100 ;; Registers used:
  7101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7107 ;;      Params:         4       0       0       0       0       0       0
  7108 ;;      Locals:         0       0       0       0       0       0       0
  7109 ;;      Temps:          5       0       0       0       0       0       0
  7110 ;;      Totals:         9       0       0       0       0       0       0
  7111 ;;Total ram usage:        9 bytes
  7112 ;; Hardware stack levels used: 1
  7113 ;; Hardware stack levels required when called: 5
  7114 ;; This function calls:
  7115 ;;		_putch
  7116 ;; This function is called by:
  7117 ;;		_pad
  7118 ;;		_vfpfcnvrt
  7119 ;;		_fputs
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text23
  7124  003C28                     __ptext23:
  7125                           	callstack 0
  7126  003C28                     _fputc:
  7127                           	callstack 19
  7128  003C28  5014               	movf	fputc@fp^0,w,c
  7129  003C2A  1015               	iorwf	(fputc@fp+1)^0,w,c
  7130  003C2C  B4D8               	btfsc	status,2,c
  7131  003C2E  EF1B  F01E         	goto	u4161
  7132  003C32  EF1D  F01E         	goto	u4160
  7133  003C36                     u4161:
  7134  003C36  EF26  F01E         	goto	l7186
  7135  003C3A                     u4160:
  7136  003C3A  5014               	movf	fputc@fp^0,w,c
  7137  003C3C  1015               	iorwf	(fputc@fp+1)^0,w,c
  7138  003C3E  A4D8               	btfss	status,2,c
  7139  003C40  EF24  F01E         	goto	u4171
  7140  003C44  EF26  F01E         	goto	u4170
  7141  003C48                     u4171:
  7142  003C48  EF2B  F01E         	goto	l7188
  7143  003C4C                     u4170:
  7144  003C4C                     l7186:
  7145  003C4C  5012               	movf	fputc@c^0,w,c
  7146  003C4E  EC2B  F028         	call	_putch
  7147  003C52  EF78  F01E         	goto	l1503
  7148  003C56                     l7188:
  7149  003C56  EE20 F004          	lfsr	2,4
  7150  003C5A  5014               	movf	fputc@fp^0,w,c
  7151  003C5C  26D9               	addwf	fsr2l,f,c
  7152  003C5E  5015               	movf	(fputc@fp+1)^0,w,c
  7153  003C60  22DA               	addwfc	fsr2h,f,c
  7154  003C62  50DE               	movf	postinc2,w,c
  7155  003C64  10DE               	iorwf	postinc2,w,c
  7156  003C66  B4D8               	btfsc	status,2,c
  7157  003C68  EF38  F01E         	goto	u4181
  7158  003C6C  EF3A  F01E         	goto	u4180
  7159  003C70                     u4181:
  7160  003C70  EF55  F01E         	goto	l7192
  7161  003C74                     u4180:
  7162  003C74  EE20 F004          	lfsr	2,4
  7163  003C78  5014               	movf	fputc@fp^0,w,c
  7164  003C7A  26D9               	addwf	fsr2l,f,c
  7165  003C7C  5015               	movf	(fputc@fp+1)^0,w,c
  7166  003C7E  22DA               	addwfc	fsr2h,f,c
  7167  003C80  EE10 F002          	lfsr	1,2
  7168  003C84  5014               	movf	fputc@fp^0,w,c
  7169  003C86  26E1               	addwf	fsr1l,f,c
  7170  003C88  5015               	movf	(fputc@fp+1)^0,w,c
  7171  003C8A  22E2               	addwfc	fsr1h,f,c
  7172  003C8C  50DE               	movf	postinc2,w,c
  7173  003C8E  5CE6               	subwf	postinc1,w,c
  7174  003C90  50E6               	movf	postinc1,w,c
  7175  003C92  0A80               	xorlw	128
  7176  003C94  6E1A               	movwf	(??_fputc+4)^0,c
  7177  003C96  50DE               	movf	postinc2,w,c
  7178  003C98  0A80               	xorlw	128
  7179  003C9A  581A               	subwfb	(??_fputc+4)^0,w,c
  7180  003C9C  B0D8               	btfsc	status,0,c
  7181  003C9E  EF53  F01E         	goto	u4191
  7182  003CA2  EF55  F01E         	goto	u4190
  7183  003CA6                     u4191:
  7184  003CA6  EF78  F01E         	goto	l1503
  7185  003CAA                     u4190:
  7186  003CAA                     l7192:
  7187  003CAA  EE20 F002          	lfsr	2,2
  7188  003CAE  5014               	movf	fputc@fp^0,w,c
  7189  003CB0  26D9               	addwf	fsr2l,f,c
  7190  003CB2  5015               	movf	(fputc@fp+1)^0,w,c
  7191  003CB4  22DA               	addwfc	fsr2h,f,c
  7192  003CB6  CFDE F016          	movff	postinc2,??_fputc
  7193  003CBA  CFDD F017          	movff	postdec2,??_fputc+1
  7194  003CBE  C014  FFD9         	movff	fputc@fp,fsr2l
  7195  003CC2  C015  FFDA         	movff	fputc@fp+1,fsr2h
  7196  003CC6  CFDE F018          	movff	postinc2,??_fputc+2
  7197  003CCA  CFDD F019          	movff	postdec2,??_fputc+3
  7198  003CCE  5016               	movf	??_fputc^0,w,c
  7199  003CD0  2418               	addwf	(??_fputc+2)^0,w,c
  7200  003CD2  6ED9               	movwf	fsr2l,c
  7201  003CD4  5017               	movf	(??_fputc+1)^0,w,c
  7202  003CD6  2019               	addwfc	(??_fputc+3)^0,w,c
  7203  003CD8  6EDA               	movwf	fsr2h,c
  7204  003CDA  C012  FFDF         	movff	fputc@c,indf2
  7205  003CDE  EE20 F002          	lfsr	2,2
  7206  003CE2  5014               	movf	fputc@fp^0,w,c
  7207  003CE4  26D9               	addwf	fsr2l,f,c
  7208  003CE6  5015               	movf	(fputc@fp+1)^0,w,c
  7209  003CE8  22DA               	addwfc	fsr2h,f,c
  7210  003CEA  2ADE               	incf	postinc2,f,c
  7211  003CEC  0E00               	movlw	0
  7212  003CEE  22DD               	addwfc	postdec2,f,c
  7213  003CF0                     l1503:
  7214  003CF0  0012               	return		;funcret
  7215  003CF2                     __end_of_fputc:
  7216                           	callstack 0
  7217                           
  7218 ;; *************** function _putch *****************
  7219 ;; Defined at:
  7220 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  c               1    wreg     unsigned char 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  c               1    0[COMRAM] unsigned char 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7234 ;;      Params:         0       0       0       0       0       0       0
  7235 ;;      Locals:         0       0       0       0       0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0
  7237 ;;      Totals:         0       0       0       0       0       0       0
  7238 ;;Total ram usage:        0 bytes
  7239 ;; Hardware stack levels used: 1
  7240 ;; Hardware stack levels required when called: 4
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_fputc
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text24
  7249  005056                     __ptext24:
  7250                           	callstack 0
  7251  005056                     _putch:
  7252                           	callstack 19
  7253  005056  0012               	return		;funcret
  7254  005058                     __end_of_putch:
  7255                           	callstack 0
  7256                           
  7257 ;; *************** function _abs *****************
  7258 ;; Defined at:
  7259 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;  a               2   35[COMRAM] int 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  2   35[COMRAM] int 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7273 ;;      Params:         2       0       0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0
  7275 ;;      Temps:          2       0       0       0       0       0       0
  7276 ;;      Totals:         4       0       0       0       0       0       0
  7277 ;;Total ram usage:        4 bytes
  7278 ;; Hardware stack levels used: 1
  7279 ;; Hardware stack levels required when called: 4
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_dtoa
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text25
  7288  004E1C                     __ptext25:
  7289                           	callstack 0
  7290  004E1C                     _abs:
  7291                           	callstack 19
  7292  004E1C  BE25               	btfsc	(abs@a+1)^0,7,c
  7293  004E1E  EF1B  F027         	goto	u4650
  7294  004E22  5025               	movf	(abs@a+1)^0,w,c
  7295  004E24  E106               	bnz	u4651
  7296  004E26  0424               	decf	abs@a^0,w,c
  7297  004E28  B0D8               	btfsc	status,0,c
  7298  004E2A  EF19  F027         	goto	u4651
  7299  004E2E  EF1B  F027         	goto	u4650
  7300  004E32                     u4651:
  7301  004E32  EF29  F027         	goto	l1488
  7302  004E36                     u4650:
  7303  004E36  C024  F026         	movff	abs@a,??_abs
  7304  004E3A  C025  F027         	movff	abs@a+1,??_abs+1
  7305  004E3E  1E26               	comf	??_abs^0,f,c
  7306  004E40  1E27               	comf	(??_abs+1)^0,f,c
  7307  004E42  4A26               	infsnz	??_abs^0,f,c
  7308  004E44  2A27               	incf	(??_abs+1)^0,f,c
  7309  004E46  C026  F024         	movff	??_abs,?_abs
  7310  004E4A  C027  F025         	movff	??_abs+1,?_abs+1
  7311  004E4E  EF2D  F027         	goto	l1491
  7312  004E52                     l1488:
  7313  004E52  C024  F024         	movff	abs@a,?_abs
  7314  004E56  C025  F025         	movff	abs@a+1,?_abs+1
  7315  004E5A                     l1491:
  7316  004E5A  0012               	return		;funcret
  7317  004E5C                     __end_of_abs:
  7318                           	callstack 0
  7319                           
  7320 ;; *************** function ___aomod *****************
  7321 ;; Defined at:
  7322 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  dividend        8   17[COMRAM] long long 
  7325 ;;  divisor         8   25[COMRAM] long long 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  sign            1   34[COMRAM] unsigned char 
  7328 ;;  counter         1   33[COMRAM] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  8   17[COMRAM] long long 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7338 ;;      Params:        16       0       0       0       0       0       0
  7339 ;;      Locals:         2       0       0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0
  7341 ;;      Totals:        18       0       0       0       0       0       0
  7342 ;;Total ram usage:       18 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; Hardware stack levels required when called: 4
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_dtoa
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text26
  7353  0032D6                     __ptext26:
  7354                           	callstack 0
  7355  0032D6                     ___aomod:
  7356                           	callstack 19
  7357  0032D6  0E00               	movlw	0
  7358  0032D8  6E23               	movwf	___aomod@sign^0,c
  7359  0032DA  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
  7360  0032DC  EF74  F019         	goto	u4430
  7361  0032E0  EF72  F019         	goto	u4431
  7362  0032E4                     u4431:
  7363  0032E4  EF86  F019         	goto	l7700
  7364  0032E8                     u4430:
  7365  0032E8  1E19               	comf	(___aomod@dividend+7)^0,f,c
  7366  0032EA  1E18               	comf	(___aomod@dividend+6)^0,f,c
  7367  0032EC  1E17               	comf	(___aomod@dividend+5)^0,f,c
  7368  0032EE  1E16               	comf	(___aomod@dividend+4)^0,f,c
  7369  0032F0  1E15               	comf	(___aomod@dividend+3)^0,f,c
  7370  0032F2  1E14               	comf	(___aomod@dividend+2)^0,f,c
  7371  0032F4  1E13               	comf	(___aomod@dividend+1)^0,f,c
  7372  0032F6  6C12               	negf	___aomod@dividend^0,c
  7373  0032F8  0E00               	movlw	0
  7374  0032FA  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  7375  0032FC  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  7376  0032FE  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  7377  003300  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  7378  003302  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  7379  003304  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  7380  003306  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  7381  003308  0E01               	movlw	1
  7382  00330A  6E23               	movwf	___aomod@sign^0,c
  7383  00330C                     l7700:
  7384  00330C  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
  7385  00330E  EF8D  F019         	goto	u4440
  7386  003312  EF8B  F019         	goto	u4441
  7387  003316                     u4441:
  7388  003316  EF9D  F019         	goto	l7704
  7389  00331A                     u4440:
  7390  00331A  1E21               	comf	(___aomod@divisor+7)^0,f,c
  7391  00331C  1E20               	comf	(___aomod@divisor+6)^0,f,c
  7392  00331E  1E1F               	comf	(___aomod@divisor+5)^0,f,c
  7393  003320  1E1E               	comf	(___aomod@divisor+4)^0,f,c
  7394  003322  1E1D               	comf	(___aomod@divisor+3)^0,f,c
  7395  003324  1E1C               	comf	(___aomod@divisor+2)^0,f,c
  7396  003326  1E1B               	comf	(___aomod@divisor+1)^0,f,c
  7397  003328  6C1A               	negf	___aomod@divisor^0,c
  7398  00332A  0E00               	movlw	0
  7399  00332C  221B               	addwfc	(___aomod@divisor+1)^0,f,c
  7400  00332E  221C               	addwfc	(___aomod@divisor+2)^0,f,c
  7401  003330  221D               	addwfc	(___aomod@divisor+3)^0,f,c
  7402  003332  221E               	addwfc	(___aomod@divisor+4)^0,f,c
  7403  003334  221F               	addwfc	(___aomod@divisor+5)^0,f,c
  7404  003336  2220               	addwfc	(___aomod@divisor+6)^0,f,c
  7405  003338  2221               	addwfc	(___aomod@divisor+7)^0,f,c
  7406  00333A                     l7704:
  7407  00333A  501A               	movf	___aomod@divisor^0,w,c
  7408  00333C  101B               	iorwf	(___aomod@divisor+1)^0,w,c
  7409  00333E  101C               	iorwf	(___aomod@divisor+2)^0,w,c
  7410  003340  101D               	iorwf	(___aomod@divisor+3)^0,w,c
  7411  003342  101E               	iorwf	(___aomod@divisor+4)^0,w,c
  7412  003344  101F               	iorwf	(___aomod@divisor+5)^0,w,c
  7413  003346  1020               	iorwf	(___aomod@divisor+6)^0,w,c
  7414  003348  1021               	iorwf	(___aomod@divisor+7)^0,w,c
  7415  00334A  B4D8               	btfsc	status,2,c
  7416  00334C  EFAA  F019         	goto	u4451
  7417  003350  EFAC  F019         	goto	u4450
  7418  003354                     u4451:
  7419  003354  EFF4  F019         	goto	l7720
  7420  003358                     u4450:
  7421  003358  0E01               	movlw	1
  7422  00335A  6E22               	movwf	___aomod@counter^0,c
  7423  00335C  EFBA  F019         	goto	l7710
  7424  003360                     l7708:
  7425  003360  90D8               	bcf	status,0,c
  7426  003362  361A               	rlcf	___aomod@divisor^0,f,c
  7427  003364  361B               	rlcf	(___aomod@divisor+1)^0,f,c
  7428  003366  361C               	rlcf	(___aomod@divisor+2)^0,f,c
  7429  003368  361D               	rlcf	(___aomod@divisor+3)^0,f,c
  7430  00336A  361E               	rlcf	(___aomod@divisor+4)^0,f,c
  7431  00336C  361F               	rlcf	(___aomod@divisor+5)^0,f,c
  7432  00336E  3620               	rlcf	(___aomod@divisor+6)^0,f,c
  7433  003370  3621               	rlcf	(___aomod@divisor+7)^0,f,c
  7434  003372  2A22               	incf	___aomod@counter^0,f,c
  7435  003374                     l7710:
  7436  003374  AE21               	btfss	(___aomod@divisor+7)^0,7,c
  7437  003376  EFBF  F019         	goto	u4461
  7438  00337A  EFC1  F019         	goto	u4460
  7439  00337E                     u4461:
  7440  00337E  EFB0  F019         	goto	l7708
  7441  003382                     u4460:
  7442  003382                     l7712:
  7443  003382  501A               	movf	___aomod@divisor^0,w,c
  7444  003384  5C12               	subwf	___aomod@dividend^0,w,c
  7445  003386  501B               	movf	(___aomod@divisor+1)^0,w,c
  7446  003388  5813               	subwfb	(___aomod@dividend+1)^0,w,c
  7447  00338A  501C               	movf	(___aomod@divisor+2)^0,w,c
  7448  00338C  5814               	subwfb	(___aomod@dividend+2)^0,w,c
  7449  00338E  501D               	movf	(___aomod@divisor+3)^0,w,c
  7450  003390  5815               	subwfb	(___aomod@dividend+3)^0,w,c
  7451  003392  501E               	movf	(___aomod@divisor+4)^0,w,c
  7452  003394  5816               	subwfb	(___aomod@dividend+4)^0,w,c
  7453  003396  501F               	movf	(___aomod@divisor+5)^0,w,c
  7454  003398  5817               	subwfb	(___aomod@dividend+5)^0,w,c
  7455  00339A  5020               	movf	(___aomod@divisor+6)^0,w,c
  7456  00339C  5818               	subwfb	(___aomod@dividend+6)^0,w,c
  7457  00339E  5021               	movf	(___aomod@divisor+7)^0,w,c
  7458  0033A0  5819               	subwfb	(___aomod@dividend+7)^0,w,c
  7459  0033A2  A0D8               	btfss	status,0,c
  7460  0033A4  EFD6  F019         	goto	u4471
  7461  0033A8  EFD8  F019         	goto	u4470
  7462  0033AC                     u4471:
  7463  0033AC  EFE8  F019         	goto	l7716
  7464  0033B0                     u4470:
  7465  0033B0  501A               	movf	___aomod@divisor^0,w,c
  7466  0033B2  5E12               	subwf	___aomod@dividend^0,f,c
  7467  0033B4  501B               	movf	(___aomod@divisor+1)^0,w,c
  7468  0033B6  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
  7469  0033B8  501C               	movf	(___aomod@divisor+2)^0,w,c
  7470  0033BA  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
  7471  0033BC  501D               	movf	(___aomod@divisor+3)^0,w,c
  7472  0033BE  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
  7473  0033C0  501E               	movf	(___aomod@divisor+4)^0,w,c
  7474  0033C2  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
  7475  0033C4  501F               	movf	(___aomod@divisor+5)^0,w,c
  7476  0033C6  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
  7477  0033C8  5020               	movf	(___aomod@divisor+6)^0,w,c
  7478  0033CA  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
  7479  0033CC  5021               	movf	(___aomod@divisor+7)^0,w,c
  7480  0033CE  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
  7481  0033D0                     l7716:
  7482  0033D0  90D8               	bcf	status,0,c
  7483  0033D2  3221               	rrcf	(___aomod@divisor+7)^0,f,c
  7484  0033D4  3220               	rrcf	(___aomod@divisor+6)^0,f,c
  7485  0033D6  321F               	rrcf	(___aomod@divisor+5)^0,f,c
  7486  0033D8  321E               	rrcf	(___aomod@divisor+4)^0,f,c
  7487  0033DA  321D               	rrcf	(___aomod@divisor+3)^0,f,c
  7488  0033DC  321C               	rrcf	(___aomod@divisor+2)^0,f,c
  7489  0033DE  321B               	rrcf	(___aomod@divisor+1)^0,f,c
  7490  0033E0  321A               	rrcf	___aomod@divisor^0,f,c
  7491  0033E2  2E22               	decfsz	___aomod@counter^0,f,c
  7492  0033E4  EFC1  F019         	goto	l7712
  7493  0033E8                     l7720:
  7494  0033E8  5023               	movf	___aomod@sign^0,w,c
  7495  0033EA  B4D8               	btfsc	status,2,c
  7496  0033EC  EFFA  F019         	goto	u4481
  7497  0033F0  EFFC  F019         	goto	u4480
  7498  0033F4                     u4481:
  7499  0033F4  EF0C  F01A         	goto	l7724
  7500  0033F8                     u4480:
  7501  0033F8  1E19               	comf	(___aomod@dividend+7)^0,f,c
  7502  0033FA  1E18               	comf	(___aomod@dividend+6)^0,f,c
  7503  0033FC  1E17               	comf	(___aomod@dividend+5)^0,f,c
  7504  0033FE  1E16               	comf	(___aomod@dividend+4)^0,f,c
  7505  003400  1E15               	comf	(___aomod@dividend+3)^0,f,c
  7506  003402  1E14               	comf	(___aomod@dividend+2)^0,f,c
  7507  003404  1E13               	comf	(___aomod@dividend+1)^0,f,c
  7508  003406  6C12               	negf	___aomod@dividend^0,c
  7509  003408  0E00               	movlw	0
  7510  00340A  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  7511  00340C  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  7512  00340E  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  7513  003410  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  7514  003412  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  7515  003414  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  7516  003416  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  7517  003418                     l7724:
  7518  003418  C012  F012         	movff	___aomod@dividend,?___aomod
  7519  00341C  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
  7520  003420  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
  7521  003424  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
  7522  003428  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
  7523  00342C  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
  7524  003430  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
  7525  003434  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
  7526  003438  0012               	return		;funcret
  7527  00343A                     __end_of___aomod:
  7528                           	callstack 0
  7529                           
  7530 ;; *************** function ___aodiv *****************
  7531 ;; Defined at:
  7532 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  dividend        8   17[COMRAM] long long 
  7535 ;;  divisor         8   25[COMRAM] long long 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  quotient        8   35[COMRAM] long long 
  7538 ;;  sign            1   34[COMRAM] unsigned char 
  7539 ;;  counter         1   33[COMRAM] unsigned char 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  8   17[COMRAM] long long 
  7542 ;; Registers used:
  7543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7549 ;;      Params:        16       0       0       0       0       0       0
  7550 ;;      Locals:        10       0       0       0       0       0       0
  7551 ;;      Temps:          0       0       0       0       0       0       0
  7552 ;;      Totals:        26       0       0       0       0       0       0
  7553 ;;Total ram usage:       26 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 4
  7556 ;; This function calls:
  7557 ;;		Nothing
  7558 ;; This function is called by:
  7559 ;;		_dtoa
  7560 ;; This function uses a non-reentrant model
  7561 ;;
  7562                           
  7563                           	psect	text27
  7564  00314E                     __ptext27:
  7565                           	callstack 0
  7566  00314E                     ___aodiv:
  7567                           	callstack 19
  7568  00314E  0E00               	movlw	0
  7569  003150  6E23               	movwf	___aodiv@sign^0,c
  7570  003152  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
  7571  003154  EFB0  F018         	goto	u4360
  7572  003158  EFAE  F018         	goto	u4361
  7573  00315C                     u4361:
  7574  00315C  EFC2  F018         	goto	l7656
  7575  003160                     u4360:
  7576  003160  1E21               	comf	(___aodiv@divisor+7)^0,f,c
  7577  003162  1E20               	comf	(___aodiv@divisor+6)^0,f,c
  7578  003164  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
  7579  003166  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
  7580  003168  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
  7581  00316A  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
  7582  00316C  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
  7583  00316E  6C1A               	negf	___aodiv@divisor^0,c
  7584  003170  0E00               	movlw	0
  7585  003172  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
  7586  003174  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
  7587  003176  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
  7588  003178  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
  7589  00317A  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
  7590  00317C  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
  7591  00317E  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
  7592  003180  0E01               	movlw	1
  7593  003182  6E23               	movwf	___aodiv@sign^0,c
  7594  003184                     l7656:
  7595  003184  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
  7596  003186  EFC9  F018         	goto	u4370
  7597  00318A  EFC7  F018         	goto	u4371
  7598  00318E                     u4371:
  7599  00318E  EFDB  F018         	goto	l7662
  7600  003192                     u4370:
  7601  003192  1E19               	comf	(___aodiv@dividend+7)^0,f,c
  7602  003194  1E18               	comf	(___aodiv@dividend+6)^0,f,c
  7603  003196  1E17               	comf	(___aodiv@dividend+5)^0,f,c
  7604  003198  1E16               	comf	(___aodiv@dividend+4)^0,f,c
  7605  00319A  1E15               	comf	(___aodiv@dividend+3)^0,f,c
  7606  00319C  1E14               	comf	(___aodiv@dividend+2)^0,f,c
  7607  00319E  1E13               	comf	(___aodiv@dividend+1)^0,f,c
  7608  0031A0  6C12               	negf	___aodiv@dividend^0,c
  7609  0031A2  0E00               	movlw	0
  7610  0031A4  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
  7611  0031A6  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
  7612  0031A8  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
  7613  0031AA  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
  7614  0031AC  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
  7615  0031AE  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
  7616  0031B0  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
  7617  0031B2  0E01               	movlw	1
  7618  0031B4  1A23               	xorwf	___aodiv@sign^0,f,c
  7619  0031B6                     l7662:
  7620  0031B6  EE20  F024         	lfsr	2,___aodiv@quotient
  7621  0031BA  0E07               	movlw	7
  7622  0031BC                     u4381:
  7623  0031BC  6ADE               	clrf	postinc2,c
  7624  0031BE  06E8               	decf	wreg,f,c
  7625  0031C0  E2FD               	bc	u4381
  7626  0031C2  501A               	movf	___aodiv@divisor^0,w,c
  7627  0031C4  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
  7628  0031C6  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
  7629  0031C8  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
  7630  0031CA  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
  7631  0031CC  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
  7632  0031CE  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
  7633  0031D0  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
  7634  0031D2  B4D8               	btfsc	status,2,c
  7635  0031D4  EFEE  F018         	goto	u4391
  7636  0031D8  EFF0  F018         	goto	u4390
  7637  0031DC                     u4391:
  7638  0031DC  EF42  F019         	goto	l7684
  7639  0031E0                     u4390:
  7640  0031E0  0E01               	movlw	1
  7641  0031E2  6E22               	movwf	___aodiv@counter^0,c
  7642  0031E4  EFFE  F018         	goto	l7670
  7643  0031E8                     l7668:
  7644  0031E8  90D8               	bcf	status,0,c
  7645  0031EA  361A               	rlcf	___aodiv@divisor^0,f,c
  7646  0031EC  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
  7647  0031EE  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
  7648  0031F0  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
  7649  0031F2  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
  7650  0031F4  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
  7651  0031F6  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
  7652  0031F8  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
  7653  0031FA  2A22               	incf	___aodiv@counter^0,f,c
  7654  0031FC                     l7670:
  7655  0031FC  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
  7656  0031FE  EF03  F019         	goto	u4401
  7657  003202  EF05  F019         	goto	u4400
  7658  003206                     u4401:
  7659  003206  EFF4  F018         	goto	l7668
  7660  00320A                     u4400:
  7661  00320A                     l7672:
  7662  00320A  90D8               	bcf	status,0,c
  7663  00320C  3624               	rlcf	___aodiv@quotient^0,f,c
  7664  00320E  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
  7665  003210  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
  7666  003212  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
  7667  003214  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
  7668  003216  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
  7669  003218  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
  7670  00321A  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
  7671  00321C  501A               	movf	___aodiv@divisor^0,w,c
  7672  00321E  5C12               	subwf	___aodiv@dividend^0,w,c
  7673  003220  501B               	movf	(___aodiv@divisor+1)^0,w,c
  7674  003222  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
  7675  003224  501C               	movf	(___aodiv@divisor+2)^0,w,c
  7676  003226  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
  7677  003228  501D               	movf	(___aodiv@divisor+3)^0,w,c
  7678  00322A  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
  7679  00322C  501E               	movf	(___aodiv@divisor+4)^0,w,c
  7680  00322E  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
  7681  003230  501F               	movf	(___aodiv@divisor+5)^0,w,c
  7682  003232  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
  7683  003234  5020               	movf	(___aodiv@divisor+6)^0,w,c
  7684  003236  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
  7685  003238  5021               	movf	(___aodiv@divisor+7)^0,w,c
  7686  00323A  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
  7687  00323C  A0D8               	btfss	status,0,c
  7688  00323E  EF23  F019         	goto	u4411
  7689  003242  EF25  F019         	goto	u4410
  7690  003246                     u4411:
  7691  003246  EF36  F019         	goto	l7680
  7692  00324A                     u4410:
  7693  00324A  501A               	movf	___aodiv@divisor^0,w,c
  7694  00324C  5E12               	subwf	___aodiv@dividend^0,f,c
  7695  00324E  501B               	movf	(___aodiv@divisor+1)^0,w,c
  7696  003250  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
  7697  003252  501C               	movf	(___aodiv@divisor+2)^0,w,c
  7698  003254  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
  7699  003256  501D               	movf	(___aodiv@divisor+3)^0,w,c
  7700  003258  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
  7701  00325A  501E               	movf	(___aodiv@divisor+4)^0,w,c
  7702  00325C  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
  7703  00325E  501F               	movf	(___aodiv@divisor+5)^0,w,c
  7704  003260  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
  7705  003262  5020               	movf	(___aodiv@divisor+6)^0,w,c
  7706  003264  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
  7707  003266  5021               	movf	(___aodiv@divisor+7)^0,w,c
  7708  003268  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
  7709  00326A  8024               	bsf	___aodiv@quotient^0,0,c
  7710  00326C                     l7680:
  7711  00326C  90D8               	bcf	status,0,c
  7712  00326E  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
  7713  003270  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
  7714  003272  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
  7715  003274  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
  7716  003276  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
  7717  003278  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
  7718  00327A  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
  7719  00327C  321A               	rrcf	___aodiv@divisor^0,f,c
  7720  00327E  2E22               	decfsz	___aodiv@counter^0,f,c
  7721  003280  EF05  F019         	goto	l7672
  7722  003284                     l7684:
  7723  003284  5023               	movf	___aodiv@sign^0,w,c
  7724  003286  B4D8               	btfsc	status,2,c
  7725  003288  EF48  F019         	goto	u4421
  7726  00328C  EF4A  F019         	goto	u4420
  7727  003290                     u4421:
  7728  003290  EF5A  F019         	goto	l7688
  7729  003294                     u4420:
  7730  003294  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
  7731  003296  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
  7732  003298  1E29               	comf	(___aodiv@quotient+5)^0,f,c
  7733  00329A  1E28               	comf	(___aodiv@quotient+4)^0,f,c
  7734  00329C  1E27               	comf	(___aodiv@quotient+3)^0,f,c
  7735  00329E  1E26               	comf	(___aodiv@quotient+2)^0,f,c
  7736  0032A0  1E25               	comf	(___aodiv@quotient+1)^0,f,c
  7737  0032A2  6C24               	negf	___aodiv@quotient^0,c
  7738  0032A4  0E00               	movlw	0
  7739  0032A6  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
  7740  0032A8  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
  7741  0032AA  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
  7742  0032AC  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
  7743  0032AE  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
  7744  0032B0  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
  7745  0032B2  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
  7746  0032B4                     l7688:
  7747  0032B4  C024  F012         	movff	___aodiv@quotient,?___aodiv
  7748  0032B8  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
  7749  0032BC  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
  7750  0032C0  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
  7751  0032C4  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
  7752  0032C8  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
  7753  0032CC  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
  7754  0032D0  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
  7755  0032D4  0012               	return		;funcret
  7756  0032D6                     __end_of___aodiv:
  7757                           	callstack 0
  7758                           
  7759 ;; *************** function _configTouch *****************
  7760 ;; Defined at:
  7761 ;;		line 115 in file "stateMachine/touchScreenSM.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;		None
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;		None
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  1    wreg      void 
  7768 ;; Registers used:
  7769 ;;		wreg, status,2
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7775 ;;      Params:         0       0       0       0       0       0       0
  7776 ;;      Locals:         0       0       0       0       0       0       0
  7777 ;;      Temps:          0       0       0       0       0       0       0
  7778 ;;      Totals:         0       0       0       0       0       0       0
  7779 ;;Total ram usage:        0 bytes
  7780 ;; Hardware stack levels used: 1
  7781 ;; Hardware stack levels required when called: 4
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_touchScreenInit
  7786 ;;		_touchScreenController
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text28
  7791  004F74                     __ptext28:
  7792                           	callstack 0
  7793  004F74                     _configTouch:
  7794                           	callstack 23
  7795  004F74                     
  7796                           ;stateMachine/touchScreenSM.c: 117:     ANSB1=0;
  7797  004F74  010F               	movlb	15	; () banked
  7798  004F76  9339               	bcf	57,1,b	;volatile
  7799                           
  7800                           ;stateMachine/touchScreenSM.c: 118:     ANSB2=0;
  7801  004F78  9539               	bcf	57,2,b	;volatile
  7802                           
  7803                           ;stateMachine/touchScreenSM.c: 119:     TRISB2=0;
  7804  004F7A  9493               	bcf	3987,2,c	;volatile
  7805                           
  7806                           ;stateMachine/touchScreenSM.c: 120:     LATB2=0;
  7807  004F7C  948A               	bcf	3978,2,c	;volatile
  7808                           
  7809                           ;stateMachine/touchScreenSM.c: 121:     TRISB1=1;
  7810  004F7E  8293               	bsf	3987,1,c	;volatile
  7811                           
  7812                           ;stateMachine/touchScreenSM.c: 122:     RBPU=0;
  7813  004F80  9EF1               	bcf	4081,7,c	;volatile
  7814  004F82                     
  7815                           ; BSR set to: 15
  7816                           ;stateMachine/touchScreenSM.c: 123:     WPUB=0b00000010;
  7817  004F82  0E02               	movlw	2
  7818  004F84  6E61               	movwf	97,c	;volatile
  7819  004F86                     
  7820                           ; BSR set to: 15
  7821                           ;stateMachine/touchScreenSM.c: 124:     INTEDG1=0;
  7822  004F86  9AF1               	bcf	4081,5,c	;volatile
  7823  004F88                     
  7824                           ; BSR set to: 15
  7825                           ;stateMachine/touchScreenSM.c: 125:     TRISB3=1;
  7826  004F88  8693               	bsf	3987,3,c	;volatile
  7827  004F8A                     
  7828                           ; BSR set to: 15
  7829                           ;stateMachine/touchScreenSM.c: 126:     TRISB4=1;
  7830  004F8A  8893               	bsf	3987,4,c	;volatile
  7831  004F8C                     
  7832                           ; BSR set to: 15
  7833                           ;stateMachine/touchScreenSM.c: 127:     INT1IE=1;
  7834  004F8C  86F0               	bsf	4080,3,c	;volatile
  7835  004F8E                     
  7836                           ; BSR set to: 15
  7837  004F8E  0012               	return		;funcret
  7838  004F90                     __end_of_configTouch:
  7839                           	callstack 0
  7840                           
  7841 ;; *************** function _configMeasure *****************
  7842 ;; Defined at:
  7843 ;;		line 129 in file "stateMachine/touchScreenSM.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  channel         1    wreg     _Bool 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  channel         1   17[COMRAM] _Bool 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  1    wreg      void 
  7850 ;; Registers used:
  7851 ;;		wreg, status,2, status,0
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7857 ;;      Params:         0       0       0       0       0       0       0
  7858 ;;      Locals:         1       0       0       0       0       0       0
  7859 ;;      Temps:          0       0       0       0       0       0       0
  7860 ;;      Totals:         1       0       0       0       0       0       0
  7861 ;;Total ram usage:        1 bytes
  7862 ;; Hardware stack levels used: 1
  7863 ;; Hardware stack levels required when called: 4
  7864 ;; This function calls:
  7865 ;;		Nothing
  7866 ;; This function is called by:
  7867 ;;		_touchScreenController
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text29
  7872  004CA6                     __ptext29:
  7873                           	callstack 0
  7874  004CA6                     _configMeasure:
  7875                           	callstack 23
  7876                           
  7877                           ; BSR set to: 15
  7878                           ;incstack = 0
  7879                           ;configMeasure@channel stored from wreg
  7880  004CA6  6E12               	movwf	configMeasure@channel^0,c
  7881  004CA8                     
  7882                           ;stateMachine/touchScreenSM.c: 129: void configMeasure(_Bool channel);stateMachine/touch
      +                          ScreenSM.c: 130: {;stateMachine/touchScreenSM.c: 131:     if(channel==0)
  7883  004CA8  5012               	movf	configMeasure@channel^0,w,c
  7884  004CAA  A4D8               	btfss	status,2,c
  7885  004CAC  EF5A  F026         	goto	u5661
  7886  004CB0  EF5C  F026         	goto	u5660
  7887  004CB4                     u5661:
  7888  004CB4  EF68  F026         	goto	l8902
  7889  004CB8                     u5660:
  7890  004CB8                     
  7891                           ;stateMachine/touchScreenSM.c: 132:     {;stateMachine/touchScreenSM.c: 133:         INT
      +                          1IE=0;
  7892  004CB8  96F0               	bcf	4080,3,c	;volatile
  7893                           
  7894                           ;stateMachine/touchScreenSM.c: 134:         ANSB1=0;
  7895  004CBA  010F               	movlb	15	; () banked
  7896  004CBC  9339               	bcf	57,1,b	;volatile
  7897                           
  7898                           ;stateMachine/touchScreenSM.c: 135:         TRISB1=0;
  7899  004CBE  9293               	bcf	3987,1,c	;volatile
  7900                           
  7901                           ;stateMachine/touchScreenSM.c: 136:         LATB1=0;
  7902  004CC0  928A               	bcf	3978,1,c	;volatile
  7903                           
  7904                           ;stateMachine/touchScreenSM.c: 137:         TRISB3=0;
  7905  004CC2  9693               	bcf	3987,3,c	;volatile
  7906                           
  7907                           ;stateMachine/touchScreenSM.c: 138:         LATB3=1;
  7908  004CC4  868A               	bsf	3978,3,c	;volatile
  7909                           
  7910                           ;stateMachine/touchScreenSM.c: 139:         TRISB4=1;
  7911  004CC6  8893               	bsf	3987,4,c	;volatile
  7912                           
  7913                           ;stateMachine/touchScreenSM.c: 140:         TRISB2=1;
  7914  004CC8  8493               	bsf	3987,2,c	;volatile
  7915                           
  7916                           ;stateMachine/touchScreenSM.c: 141:         ANSB2=1;
  7917  004CCA  8539               	bsf	57,2,b	;volatile
  7918  004CCC                     
  7919                           ; BSR set to: 15
  7920                           ;stateMachine/touchScreenSM.c: 142:         ADCON0=0b00100011;
  7921  004CCC  0E23               	movlw	35
  7922  004CCE  6EC2               	movwf	194,c	;volatile
  7923  004CD0                     l8902:
  7924                           
  7925                           ;stateMachine/touchScreenSM.c: 144:     if(channel==1)
  7926  004CD0  0412               	decf	configMeasure@channel^0,w,c
  7927  004CD2  A4D8               	btfss	status,2,c
  7928  004CD4  EF6E  F026         	goto	u5671
  7929  004CD8  EF70  F026         	goto	u5670
  7930  004CDC                     u5671:
  7931  004CDC  EF7B  F026         	goto	l516
  7932  004CE0                     u5670:
  7933  004CE0                     
  7934                           ;stateMachine/touchScreenSM.c: 145:     {;stateMachine/touchScreenSM.c: 146:         ANS
      +                          B2=0;
  7935  004CE0  010F               	movlb	15	; () banked
  7936  004CE2  9539               	bcf	57,2,b	;volatile
  7937                           
  7938                           ;stateMachine/touchScreenSM.c: 147:         TRISB2=0;
  7939  004CE4  9493               	bcf	3987,2,c	;volatile
  7940                           
  7941                           ;stateMachine/touchScreenSM.c: 148:         LATB2=0;
  7942  004CE6  948A               	bcf	3978,2,c	;volatile
  7943                           
  7944                           ;stateMachine/touchScreenSM.c: 149:         TRISB4=0;
  7945  004CE8  9893               	bcf	3987,4,c	;volatile
  7946                           
  7947                           ;stateMachine/touchScreenSM.c: 150:         LATB4=1;
  7948  004CEA  888A               	bsf	3978,4,c	;volatile
  7949                           
  7950                           ;stateMachine/touchScreenSM.c: 151:         TRISB3=1;
  7951  004CEC  8693               	bsf	3987,3,c	;volatile
  7952                           
  7953                           ;stateMachine/touchScreenSM.c: 152:         TRISB1=1;
  7954  004CEE  8293               	bsf	3987,1,c	;volatile
  7955                           
  7956                           ;stateMachine/touchScreenSM.c: 153:         ANSB1=1;
  7957  004CF0  8339               	bsf	57,1,b	;volatile
  7958  004CF2                     
  7959                           ; BSR set to: 15
  7960                           ;stateMachine/touchScreenSM.c: 154:         ADCON0=0b00101011;
  7961  004CF2  0E2B               	movlw	43
  7962  004CF4  6EC2               	movwf	194,c	;volatile
  7963  004CF6                     l516:
  7964  004CF6  0012               	return		;funcret
  7965  004CF8                     __end_of_configMeasure:
  7966                           	callstack 0
  7967                           
  7968 ;; *************** function _XF_scheduleTimer *****************
  7969 ;; Defined at:
  7970 ;;		line 96 in file "xf/xf.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;  tm              2   18[COMRAM] unsigned short 
  7973 ;;  ev              1   20[COMRAM] unsigned char 
  7974 ;;  inISR           1   21[COMRAM] _Bool 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;  i               1   22[COMRAM] unsigned char 
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  1    wreg      unsigned char 
  7979 ;; Registers used:
  7980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7986 ;;      Params:         4       0       0       0       0       0       0
  7987 ;;      Locals:         1       0       0       0       0       0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0
  7989 ;;      Totals:         5       0       0       0       0       0       0
  7990 ;;Total ram usage:        5 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; Hardware stack levels required when called: 5
  7993 ;; This function calls:
  7994 ;;		_ENTERCRITICAL
  7995 ;;		_LEAVECRITICAL
  7996 ;; This function is called by:
  7997 ;;		_touchScreenController
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text30
  8002  004866                     __ptext30:
  8003                           	callstack 0
  8004  004866                     _XF_scheduleTimer:
  8005                           	callstack 22
  8006  004866                     
  8007                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
  8008  004866  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  8009  004868  ECE9  F027         	call	_ENTERCRITICAL
  8010  00486C                     
  8011                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
  8012  00486C  0E00               	movlw	0
  8013  00486E  6E17               	movwf	XF_scheduleTimer@i^0,c
  8014  004870                     l8916:
  8015                           
  8016                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
  8017  004870  5017               	movf	XF_scheduleTimer@i^0,w,c
  8018  004872  0D03               	mullw	3
  8019  004874  0EB7               	movlw	low (_theXF+2)
  8020  004876  24F3               	addwf	243,w,c
  8021  004878  6ED9               	movwf	fsr2l,c
  8022  00487A  0E00               	movlw	high (_theXF+2)
  8023  00487C  20F4               	addwfc	prodh,w,c
  8024  00487E  6EDA               	movwf	fsr2h,c
  8025  004880  50DF               	movf	indf2,w,c
  8026  004882  A4D8               	btfss	status,2,c
  8027  004884  EF46  F024         	goto	u5681
  8028  004888  EF48  F024         	goto	u5680
  8029  00488C                     u5681:
  8030  00488C  EF60  F024         	goto	l8920
  8031  004890                     u5680:
  8032  004890                     
  8033                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
  8034  004890  5017               	movf	XF_scheduleTimer@i^0,w,c
  8035  004892  0D03               	mullw	3
  8036  004894  0EB5               	movlw	low _theXF
  8037  004896  24F3               	addwf	243,w,c
  8038  004898  6ED9               	movwf	fsr2l,c
  8039  00489A  0E00               	movlw	high _theXF
  8040  00489C  20F4               	addwfc	prodh,w,c
  8041  00489E  6EDA               	movwf	fsr2h,c
  8042  0048A0  C013  FFDE         	movff	XF_scheduleTimer@tm,postinc2
  8043  0048A4  C014  FFDD         	movff	XF_scheduleTimer@tm+1,postdec2
  8044                           
  8045                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
  8046  0048A8  5017               	movf	XF_scheduleTimer@i^0,w,c
  8047  0048AA  0D03               	mullw	3
  8048  0048AC  0EB7               	movlw	low (_theXF+2)
  8049  0048AE  24F3               	addwf	243,w,c
  8050  0048B0  6ED9               	movwf	fsr2l,c
  8051  0048B2  0E00               	movlw	high (_theXF+2)
  8052  0048B4  20F4               	addwfc	prodh,w,c
  8053  0048B6  6EDA               	movwf	fsr2h,c
  8054  0048B8  C015  FFDF         	movff	XF_scheduleTimer@ev,indf2
  8055                           
  8056                           ;xf/xf.c: 107:             break;
  8057  0048BC  EF69  F024         	goto	l8924
  8058  0048C0                     l8920:
  8059                           
  8060                           ;xf/xf.c: 109:     }
  8061  0048C0  2A17               	incf	XF_scheduleTimer@i^0,f,c
  8062  0048C2  0E07               	movlw	7
  8063  0048C4  6417               	cpfsgt	XF_scheduleTimer@i^0,c
  8064  0048C6  EF67  F024         	goto	u5691
  8065  0048CA  EF69  F024         	goto	u5690
  8066  0048CE                     u5691:
  8067  0048CE  EF38  F024         	goto	l8916
  8068  0048D2                     u5690:
  8069  0048D2                     l8924:
  8070                           
  8071                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
  8072  0048D2  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  8073  0048D4  ECDE  F027         	call	_LEAVECRITICAL
  8074  0048D8  0012               	return		;funcret
  8075  0048DA                     __end_of_XF_scheduleTimer:
  8076                           	callstack 0
  8077                           
  8078 ;; *************** function _GameParameters_setY *****************
  8079 ;; Defined at:
  8080 ;;		line 45 in file "class/gameParameters.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  s               2   17[COMRAM] PTR struct GameParameter
  8083 ;;		 -> g1(209), 
  8084 ;;  value           2   19[COMRAM] unsigned short 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      void 
  8089 ;; Registers used:
  8090 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8096 ;;      Params:         4       0       0       0       0       0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0
  8099 ;;      Totals:         4       0       0       0       0       0       0
  8100 ;;Total ram usage:        4 bytes
  8101 ;; Hardware stack levels used: 1
  8102 ;; Hardware stack levels required when called: 4
  8103 ;; This function calls:
  8104 ;;		Nothing
  8105 ;; This function is called by:
  8106 ;;		_touchScreenController
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text31
  8111  004F90                     __ptext31:
  8112                           	callstack 0
  8113  004F90                     _GameParameters_setY:
  8114                           	callstack 23
  8115  004F90                     
  8116                           ;class/gameParameters.c: 45: void GameParameters_setY(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 46: {;class/gameParameters.c: 47:     s->y=value;
  8117  004F90  EE20 F006          	lfsr	2,6
  8118  004F94  5012               	movf	GameParameters_setY@s^0,w,c
  8119  004F96  26D9               	addwf	fsr2l,f,c
  8120  004F98  5013               	movf	(GameParameters_setY@s+1)^0,w,c
  8121  004F9A  22DA               	addwfc	fsr2h,f,c
  8122  004F9C  C014  FFDE         	movff	GameParameters_setY@value,postinc2
  8123  004FA0  C015  FFDD         	movff	GameParameters_setY@value+1,postdec2
  8124  004FA4  0012               	return		;funcret
  8125  004FA6                     __end_of_GameParameters_setY:
  8126                           	callstack 0
  8127                           
  8128 ;; *************** function _GameParameters_setX *****************
  8129 ;; Defined at:
  8130 ;;		line 41 in file "class/gameParameters.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  s               2   17[COMRAM] PTR struct GameParameter
  8133 ;;		 -> g1(209), 
  8134 ;;  value           2   19[COMRAM] unsigned short 
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8146 ;;      Params:         4       0       0       0       0       0       0
  8147 ;;      Locals:         0       0       0       0       0       0       0
  8148 ;;      Temps:          0       0       0       0       0       0       0
  8149 ;;      Totals:         4       0       0       0       0       0       0
  8150 ;;Total ram usage:        4 bytes
  8151 ;; Hardware stack levels used: 1
  8152 ;; Hardware stack levels required when called: 4
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_touchScreenController
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           	psect	text32
  8161  004FA6                     __ptext32:
  8162                           	callstack 0
  8163  004FA6                     _GameParameters_setX:
  8164                           	callstack 23
  8165  004FA6                     
  8166                           ;class/gameParameters.c: 41: void GameParameters_setX(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 42: {;class/gameParameters.c: 43:     s->x=value;
  8167  004FA6  EE20 F004          	lfsr	2,4
  8168  004FAA  5012               	movf	GameParameters_setX@s^0,w,c
  8169  004FAC  26D9               	addwf	fsr2l,f,c
  8170  004FAE  5013               	movf	(GameParameters_setX@s+1)^0,w,c
  8171  004FB0  22DA               	addwfc	fsr2h,f,c
  8172  004FB2  C014  FFDE         	movff	GameParameters_setX@value,postinc2
  8173  004FB6  C015  FFDD         	movff	GameParameters_setX@value+1,postdec2
  8174  004FBA  0012               	return		;funcret
  8175  004FBC                     __end_of_GameParameters_setX:
  8176                           	callstack 0
  8177                           
  8178 ;; *************** function _sleepSM *****************
  8179 ;; Defined at:
  8180 ;;		line 19 in file "stateMachine/sleepSM.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  ev              1    wreg     unsigned char 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  ev              1   21[COMRAM] unsigned char 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  1    wreg      void 
  8187 ;; Registers used:
  8188 ;;		wreg, status,2, status,0, cstack
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8194 ;;      Params:         0       0       0       0       0       0       0
  8195 ;;      Locals:         1       0       0       0       0       0       0
  8196 ;;      Temps:          2       0       0       0       0       0       0
  8197 ;;      Totals:         3       0       0       0       0       0       0
  8198 ;;Total ram usage:        3 bytes
  8199 ;; Hardware stack levels used: 1
  8200 ;; Hardware stack levels required when called: 5
  8201 ;; This function calls:
  8202 ;;		_sleepController
  8203 ;; This function is called by:
  8204 ;;		_Factory_exec
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text33
  8209  0044FC                     __ptext33:
  8210                           	callstack 0
  8211  0044FC                     _sleepSM:
  8212                           	callstack 24
  8213                           
  8214                           ;incstack = 0
  8215                           ;sleepSM@ev stored from wreg
  8216  0044FC  6E16               	movwf	sleepSM@ev^0,c
  8217  0044FE                     
  8218                           ;stateMachine/sleepSM.c: 19: void sleepSM(Event ev);stateMachine/sleepSM.c: 20: {;stateM
      +                          achine/sleepSM.c: 21:    switch(sleepState)
  8219  0044FE  EFB4  F022         	goto	l9178
  8220  004502                     l9152:
  8221                           
  8222                           ; BSR set to: 0
  8223                           ;stateMachine/sleepSM.c: 24:             if(ev==evTimer30)
  8224  004502  0E03               	movlw	3
  8225  004504  1816               	xorwf	sleepSM@ev^0,w,c
  8226  004506  A4D8               	btfss	status,2,c
  8227  004508  EF88  F022         	goto	u5851
  8228  00450C  EF8A  F022         	goto	u5850
  8229  004510                     u5851:
  8230  004510  EFCE  F022         	goto	l408
  8231  004514                     u5850:
  8232  004514                     
  8233                           ; BSR set to: 0
  8234                           ;stateMachine/sleepSM.c: 25:             {;stateMachine/sleepSM.c: 26:                sl
      +                          eepState=BACKLIGHTOFF;
  8235  004514  0E01               	movlw	1
  8236  004516  6FDF               	movwf	_sleepState& (0+255),b
  8237  004518                     l9156:
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;stateMachine/sleepSM.c: 27:                sleepController();
  8241  004518  EC4C  F027         	call	_sleepController	;wreg free
  8242  00451C  EFCE  F022         	goto	l408
  8243  004520                     l9158:
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;stateMachine/sleepSM.c: 31:             if(ev==evTimer30)
  8247  004520  0E03               	movlw	3
  8248  004522  1816               	xorwf	sleepSM@ev^0,w,c
  8249  004524  A4D8               	btfss	status,2,c
  8250  004526  EF97  F022         	goto	u5861
  8251  00452A  EF99  F022         	goto	u5860
  8252  00452E                     u5861:
  8253  00452E  EF9D  F022         	goto	l9164
  8254  004532                     u5860:
  8255  004532                     
  8256                           ; BSR set to: 0
  8257                           ;stateMachine/sleepSM.c: 32:             {;stateMachine/sleepSM.c: 33:                sl
      +                          eepState=SLEEP;
  8258  004532  0E02               	movlw	2
  8259  004534  6FDF               	movwf	_sleepState& (0+255),b
  8260  004536                     
  8261                           ; BSR set to: 0
  8262                           ;stateMachine/sleepSM.c: 34:                sleepController();
  8263  004536  EC4C  F027         	call	_sleepController	;wreg free
  8264  00453A                     l9164:
  8265                           
  8266                           ;stateMachine/sleepSM.c: 36:             if(ev==evPress)
  8267  00453A  0416               	decf	sleepSM@ev^0,w,c
  8268  00453C  A4D8               	btfss	status,2,c
  8269  00453E  EFA3  F022         	goto	u5871
  8270  004542  EFA5  F022         	goto	u5870
  8271  004546                     u5871:
  8272  004546  EFCE  F022         	goto	l408
  8273  00454A                     u5870:
  8274  00454A                     l9166:
  8275                           
  8276                           ;stateMachine/sleepSM.c: 37:             {;stateMachine/sleepSM.c: 38:                sl
      +                          eepState=WAKEUP;
  8277  00454A  0E00               	movlw	0
  8278  00454C  0100               	movlb	0	; () banked
  8279  00454E  6FDF               	movwf	_sleepState& (0+255),b
  8280  004550  EF8C  F022         	goto	l9156
  8281  004554                     l9170:
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;stateMachine/sleepSM.c: 43:             if(ev==evPress)
  8285  004554  0416               	decf	sleepSM@ev^0,w,c
  8286  004556  A4D8               	btfss	status,2,c
  8287  004558  EFB0  F022         	goto	u5881
  8288  00455C  EFB2  F022         	goto	u5880
  8289  004560                     u5881:
  8290  004560  EFCE  F022         	goto	l408
  8291  004564                     u5880:
  8292  004564  EFA5  F022         	goto	l9166
  8293  004568                     l9178:
  8294  004568  0100               	movlb	0	; () banked
  8295  00456A  51DF               	movf	_sleepState& (0+255),w,b
  8296  00456C  6E14               	movwf	??_sleepSM^0,c
  8297  00456E  6A15               	clrf	(??_sleepSM+1)^0,c
  8298                           
  8299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8300                           ; Switch size 1, requested type "simple"
  8301                           ; Number of cases is 1, Range of values is 0 to 0
  8302                           ; switch strategies available:
  8303                           ; Name         Instructions Cycles
  8304                           ; simple_byte            4     3 (average)
  8305                           ;	Chosen strategy is simple_byte
  8306  004570  5015               	movf	(??_sleepSM+1)^0,w,c
  8307  004572  0A00               	xorlw	0	; case 0
  8308  004574  B4D8               	btfsc	status,2,c
  8309  004576  EFBF  F022         	goto	l9560
  8310  00457A  EFCE  F022         	goto	l408
  8311  00457E                     l9560:
  8312                           
  8313                           ; BSR set to: 0
  8314                           ; Switch size 1, requested type "simple"
  8315                           ; Number of cases is 3, Range of values is 0 to 2
  8316                           ; switch strategies available:
  8317                           ; Name         Instructions Cycles
  8318                           ; simple_byte           10     6 (average)
  8319                           ;	Chosen strategy is simple_byte
  8320  00457E  5014               	movf	??_sleepSM^0,w,c
  8321  004580  0A00               	xorlw	0	; case 0
  8322  004582  B4D8               	btfsc	status,2,c
  8323  004584  EF81  F022         	goto	l9152
  8324  004588  0A01               	xorlw	1	; case 1
  8325  00458A  B4D8               	btfsc	status,2,c
  8326  00458C  EF90  F022         	goto	l9158
  8327  004590  0A03               	xorlw	3	; case 2
  8328  004592  B4D8               	btfsc	status,2,c
  8329  004594  EFAA  F022         	goto	l9170
  8330  004598  EFCE  F022         	goto	l408
  8331  00459C                     l408:
  8332  00459C  0012               	return		;funcret
  8333  00459E                     __end_of_sleepSM:
  8334                           	callstack 0
  8335                           
  8336 ;; *************** function _sleepController *****************
  8337 ;; Defined at:
  8338 ;;		line 53 in file "stateMachine/sleepSM.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;		None
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;		None
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  1    wreg      void 
  8345 ;; Registers used:
  8346 ;;		wreg, status,2, status,0
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8352 ;;      Params:         0       0       0       0       0       0       0
  8353 ;;      Locals:         0       0       0       0       0       0       0
  8354 ;;      Temps:          2       0       0       0       0       0       0
  8355 ;;      Totals:         2       0       0       0       0       0       0
  8356 ;;Total ram usage:        2 bytes
  8357 ;; Hardware stack levels used: 1
  8358 ;; Hardware stack levels required when called: 4
  8359 ;; This function calls:
  8360 ;;		Nothing
  8361 ;; This function is called by:
  8362 ;;		_sleepInit
  8363 ;;		_sleepSM
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           	psect	text34
  8368  004E98                     __ptext34:
  8369                           	callstack 0
  8370  004E98                     _sleepController:
  8371                           	callstack 24
  8372  004E98  0100               	movlb	0	; () banked
  8373  004E9A  51DF               	movf	_sleepState& (0+255),w,b
  8374  004E9C  6E12               	movwf	??_sleepController^0,c
  8375  004E9E  6A13               	clrf	(??_sleepController+1)^0,c
  8376                           
  8377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8378                           ; Switch size 1, requested type "simple"
  8379                           ; Number of cases is 1, Range of values is 0 to 0
  8380                           ; switch strategies available:
  8381                           ; Name         Instructions Cycles
  8382                           ; simple_byte            4     3 (average)
  8383                           ;	Chosen strategy is simple_byte
  8384  004EA0  5013               	movf	(??_sleepController+1)^0,w,c
  8385  004EA2  0A00               	xorlw	0	; case 0
  8386  004EA4  B4D8               	btfsc	status,2,c
  8387  004EA6  EF57  F027         	goto	l9562
  8388  004EAA  EF66  F027         	goto	l417
  8389  004EAE                     l9562:
  8390                           
  8391                           ; BSR set to: 0
  8392                           ; Switch size 1, requested type "simple"
  8393                           ; Number of cases is 3, Range of values is 0 to 2
  8394                           ; switch strategies available:
  8395                           ; Name         Instructions Cycles
  8396                           ; simple_byte           10     6 (average)
  8397                           ;	Chosen strategy is simple_byte
  8398  004EAE  5012               	movf	??_sleepController^0,w,c
  8399  004EB0  0A00               	xorlw	0	; case 0
  8400  004EB2  B4D8               	btfsc	status,2,c
  8401  004EB4  EF66  F027         	goto	l417
  8402  004EB8  0A01               	xorlw	1	; case 1
  8403  004EBA  B4D8               	btfsc	status,2,c
  8404  004EBC  EF66  F027         	goto	l417
  8405  004EC0  0A03               	xorlw	3	; case 2
  8406  004EC2  B4D8               	btfsc	status,2,c
  8407  004EC4  EF66  F027         	goto	l417
  8408  004EC8  EF66  F027         	goto	l417
  8409  004ECC                     l417:
  8410                           
  8411                           ; BSR set to: 0
  8412  004ECC  0012               	return		;funcret
  8413  004ECE                     __end_of_sleepController:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _gameControllerSM *****************
  8417 ;; Defined at:
  8418 ;;		line 16 in file "stateMachine/gameController.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  ev              1    wreg     unsigned char 
  8421 ;;  g               2   58[COMRAM] PTR struct GameParameter
  8422 ;;		 -> g1(209), 
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;  ev              1   62[COMRAM] unsigned char 
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  1    wreg      void 
  8427 ;; Registers used:
  8428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8434 ;;      Params:         2       0       0       0       0       0       0
  8435 ;;      Locals:         1       0       0       0       0       0       0
  8436 ;;      Temps:          2       0       0       0       0       0       0
  8437 ;;      Totals:         5       0       0       0       0       0       0
  8438 ;;Total ram usage:        5 bytes
  8439 ;; Hardware stack levels used: 1
  8440 ;; Hardware stack levels required when called: 7
  8441 ;; This function calls:
  8442 ;;		_gameControllerController
  8443 ;; This function is called by:
  8444 ;;		_Factory_exec
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text35
  8449  003DBC                     __ptext35:
  8450                           	callstack 0
  8451  003DBC                     _gameControllerSM:
  8452                           	callstack 22
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;incstack = 0
  8456                           ;gameControllerSM@ev stored from wreg
  8457  003DBC  6E3F               	movwf	gameControllerSM@ev^0,c
  8458  003DBE                     
  8459                           ;stateMachine/gameController.c: 16: void gameControllerSM(Event ev,GameParameters* g);st
      +                          ateMachine/gameController.c: 17: {;stateMachine/gameController.c: 18:    switch(gameCont
      +                          rollerState)
  8460  003DBE  EF23  F01F         	goto	l9276
  8461  003DC2                     l9250:
  8462                           
  8463                           ;stateMachine/gameController.c: 21:             gameControllerController(g);
  8464  003DC2  C03B  F037         	movff	gameControllerSM@g,gameControllerController@g
  8465  003DC6  C03C  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  8466  003DCA  ECAB  F00C         	call	_gameControllerController	;wreg free
  8467  003DCE                     
  8468                           ;stateMachine/gameController.c: 22:             if(ev==evParameters)
  8469  003DCE  0E07               	movlw	7
  8470  003DD0  183F               	xorwf	gameControllerSM@ev^0,w,c
  8471  003DD2  A4D8               	btfss	status,2,c
  8472  003DD4  EFEE  F01E         	goto	u5971
  8473  003DD8  EFF0  F01E         	goto	u5970
  8474  003DDC                     u5971:
  8475  003DDC  EFF2  F01E         	goto	l9256
  8476  003DE0                     u5970:
  8477  003DE0                     
  8478                           ;stateMachine/gameController.c: 23:             {;stateMachine/gameController.c: 24:    
      +                                       gameControllerState=PARAMETERS;
  8479  003DE0  0E01               	movlw	1
  8480  003DE2  6E4D               	movwf	_gameControllerState^0,c
  8481  003DE4                     l9256:
  8482                           
  8483                           ;stateMachine/gameController.c: 26:             if(ev==evOnePlayer)
  8484  003DE4  0E05               	movlw	5
  8485  003DE6  183F               	xorwf	gameControllerSM@ev^0,w,c
  8486  003DE8  A4D8               	btfss	status,2,c
  8487  003DEA  EFF9  F01E         	goto	u5981
  8488  003DEE  EFFB  F01E         	goto	u5980
  8489  003DF2                     u5981:
  8490  003DF2  EF40  F01F         	goto	l593
  8491  003DF6                     u5980:
  8492  003DF6                     
  8493                           ;stateMachine/gameController.c: 27:             {;stateMachine/gameController.c: 28:    
      +                                       gameControllerState=LOCAL;
  8494  003DF6  0E02               	movlw	2
  8495  003DF8  6E4D               	movwf	_gameControllerState^0,c
  8496  003DFA  EF40  F01F         	goto	l593
  8497  003DFE                     l9264:
  8498                           
  8499                           ;stateMachine/gameController.c: 36:             gameControllerController(g);
  8500  003DFE  C03B  F037         	movff	gameControllerSM@g,gameControllerController@g
  8501  003E02  C03C  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  8502  003E06  ECAB  F00C         	call	_gameControllerController	;wreg free
  8503  003E0A                     
  8504                           ;stateMachine/gameController.c: 37:             if(ev==evLeaveParam)
  8505  003E0A  0E08               	movlw	8
  8506  003E0C  183F               	xorwf	gameControllerSM@ev^0,w,c
  8507  003E0E  A4D8               	btfss	status,2,c
  8508  003E10  EF0C  F01F         	goto	u5991
  8509  003E14  EF0E  F01F         	goto	u5990
  8510  003E18                     u5991:
  8511  003E18  EF40  F01F         	goto	l593
  8512  003E1C                     u5990:
  8513  003E1C                     
  8514                           ;stateMachine/gameController.c: 38:             {;stateMachine/gameController.c: 39:    
      +                                       gameControllerState=NOGAME;
  8515  003E1C  0E00               	movlw	0
  8516  003E1E  6E4D               	movwf	_gameControllerState^0,c
  8517  003E20  EF40  F01F         	goto	l593
  8518  003E24                     l9270:
  8519                           
  8520                           ;stateMachine/gameController.c: 43:             if(ev==evTimerPos)
  8521  003E24  0E04               	movlw	4
  8522  003E26  183F               	xorwf	gameControllerSM@ev^0,w,c
  8523  003E28  A4D8               	btfss	status,2,c
  8524  003E2A  EF19  F01F         	goto	u6001
  8525  003E2E  EF1B  F01F         	goto	u6000
  8526  003E32                     u6001:
  8527  003E32  EF40  F01F         	goto	l593
  8528  003E36                     u6000:
  8529  003E36                     
  8530                           ;stateMachine/gameController.c: 44:             {;stateMachine/gameController.c: 45:    
      +                                       gameControllerController(g);
  8531  003E36  C03B  F037         	movff	gameControllerSM@g,gameControllerController@g
  8532  003E3A  C03C  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  8533  003E3E  ECAB  F00C         	call	_gameControllerController	;wreg free
  8534  003E42  EF40  F01F         	goto	l593
  8535  003E46                     l9276:
  8536  003E46  504D               	movf	_gameControllerState^0,w,c
  8537  003E48  6E3D               	movwf	??_gameControllerSM^0,c
  8538  003E4A  6A3E               	clrf	(??_gameControllerSM+1)^0,c
  8539                           
  8540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8541                           ; Switch size 1, requested type "simple"
  8542                           ; Number of cases is 1, Range of values is 0 to 0
  8543                           ; switch strategies available:
  8544                           ; Name         Instructions Cycles
  8545                           ; simple_byte            4     3 (average)
  8546                           ;	Chosen strategy is simple_byte
  8547  003E4C  503E               	movf	(??_gameControllerSM+1)^0,w,c
  8548  003E4E  0A00               	xorlw	0	; case 0
  8549  003E50  B4D8               	btfsc	status,2,c
  8550  003E52  EF2D  F01F         	goto	l9564
  8551  003E56  EF40  F01F         	goto	l593
  8552  003E5A                     l9564:
  8553                           
  8554                           ; Switch size 1, requested type "simple"
  8555                           ; Number of cases is 4, Range of values is 0 to 3
  8556                           ; switch strategies available:
  8557                           ; Name         Instructions Cycles
  8558                           ; simple_byte           13     7 (average)
  8559                           ;	Chosen strategy is simple_byte
  8560  003E5A  503D               	movf	??_gameControllerSM^0,w,c
  8561  003E5C  0A00               	xorlw	0	; case 0
  8562  003E5E  B4D8               	btfsc	status,2,c
  8563  003E60  EFE1  F01E         	goto	l9250
  8564  003E64  0A01               	xorlw	1	; case 1
  8565  003E66  B4D8               	btfsc	status,2,c
  8566  003E68  EFFF  F01E         	goto	l9264
  8567  003E6C  0A03               	xorlw	3	; case 2
  8568  003E6E  B4D8               	btfsc	status,2,c
  8569  003E70  EF12  F01F         	goto	l9270
  8570  003E74  0A01               	xorlw	1	; case 3
  8571  003E76  B4D8               	btfsc	status,2,c
  8572  003E78  EF40  F01F         	goto	l593
  8573  003E7C  EF40  F01F         	goto	l593
  8574  003E80                     l593:
  8575  003E80  0012               	return		;funcret
  8576  003E82                     __end_of_gameControllerSM:
  8577                           	callstack 0
  8578                           
  8579 ;; *************** function _gameControllerController *****************
  8580 ;; Defined at:
  8581 ;;		line 55 in file "stateMachine/gameController.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  g               2   54[COMRAM] PTR struct GameParameter
  8584 ;;		 -> g1(209), 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8596 ;;      Params:         2       0       0       0       0       0       0
  8597 ;;      Locals:         0       0       0       0       0       0       0
  8598 ;;      Temps:          2       0       0       0       0       0       0
  8599 ;;      Totals:         4       0       0       0       0       0       0
  8600 ;;Total ram usage:        4 bytes
  8601 ;; Hardware stack levels used: 1
  8602 ;; Hardware stack levels required when called: 6
  8603 ;; This function calls:
  8604 ;;		_LCD_ButtonUpdate
  8605 ;;		_LCD_InButton
  8606 ;;		_LCD_InSlider
  8607 ;;		_LCD_SliderUpdate
  8608 ;;		_Paddle_addX
  8609 ;;		_Paddle_draw
  8610 ;;		_XF_pushEvent
  8611 ;;		_backlightController
  8612 ;; This function is called by:
  8613 ;;		_gameControllerInit
  8614 ;;		_gameControllerSM
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text36
  8619  001956                     __ptext36:
  8620                           	callstack 0
  8621  001956                     _gameControllerController:
  8622                           	callstack 21
  8623  001956                     
  8624                           ;stateMachine/gameController.c: 55: void gameControllerController(GameParameters* g);sta
      +                          teMachine/gameController.c: 56: {;stateMachine/gameController.c: 57:     switch(gameCont
      +                          rollerState)
  8625  001956  EF95  F00E         	goto	l9014
  8626  00195A                     l8958:
  8627                           
  8628                           ;stateMachine/gameController.c: 60:             if(LCD_InButton(&(g->btnParam),g->x,g->y
      +                          ))
  8629  00195A  0E08               	movlw	8
  8630  00195C  2437               	addwf	gameControllerController@g^0,w,c
  8631  00195E  6E12               	movwf	LCD_InButton@button^0,c
  8632  001960  0E00               	movlw	0
  8633  001962  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8634  001964  6E13               	movwf	(LCD_InButton@button+1)^0,c
  8635  001966  EE20 F004          	lfsr	2,4
  8636  00196A  5037               	movf	gameControllerController@g^0,w,c
  8637  00196C  26D9               	addwf	fsr2l,f,c
  8638  00196E  5038               	movf	(gameControllerController@g+1)^0,w,c
  8639  001970  22DA               	addwfc	fsr2h,f,c
  8640  001972  CFDE F014          	movff	postinc2,LCD_InButton@posX
  8641  001976  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  8642  00197A  EE20 F006          	lfsr	2,6
  8643  00197E  5037               	movf	gameControllerController@g^0,w,c
  8644  001980  26D9               	addwf	fsr2l,f,c
  8645  001982  5038               	movf	(gameControllerController@g+1)^0,w,c
  8646  001984  22DA               	addwfc	fsr2h,f,c
  8647  001986  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8648  00198A  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8649  00198E  EC39  F01D         	call	_LCD_InButton	;wreg free
  8650  001992  0900               	iorlw	0
  8651  001994  B4D8               	btfsc	status,2,c
  8652  001996  EFCF  F00C         	goto	u5701
  8653  00199A  EFD1  F00C         	goto	u5700
  8654  00199E                     u5701:
  8655  00199E  EFEA  F00C         	goto	l598
  8656  0019A2                     u5700:
  8657  0019A2                     
  8658                           ;stateMachine/gameController.c: 61:             {;stateMachine/gameController.c: 62:    
      +                                       XF_pushEvent(evParameters,0);
  8659  0019A2  0E00               	movlw	0
  8660  0019A4  6E18               	movwf	XF_pushEvent@inISR^0,c
  8661  0019A6  0E07               	movlw	7
  8662  0019A8  ECDC  F024         	call	_XF_pushEvent
  8663  0019AC                     
  8664                           ;stateMachine/gameController.c: 63:                 g->x=0;
  8665  0019AC  EE20 F004          	lfsr	2,4
  8666  0019B0  5037               	movf	gameControllerController@g^0,w,c
  8667  0019B2  26D9               	addwf	fsr2l,f,c
  8668  0019B4  5038               	movf	(gameControllerController@g+1)^0,w,c
  8669  0019B6  22DA               	addwfc	fsr2h,f,c
  8670  0019B8  0E00               	movlw	0
  8671  0019BA  6EDE               	movwf	postinc2,c
  8672  0019BC  0E00               	movlw	0
  8673  0019BE  6EDD               	movwf	postdec2,c
  8674  0019C0                     
  8675                           ;stateMachine/gameController.c: 64:                 g->y=0;
  8676  0019C0  EE20 F006          	lfsr	2,6
  8677  0019C4  5037               	movf	gameControllerController@g^0,w,c
  8678  0019C6  26D9               	addwf	fsr2l,f,c
  8679  0019C8  5038               	movf	(gameControllerController@g+1)^0,w,c
  8680  0019CA  22DA               	addwfc	fsr2h,f,c
  8681  0019CC  0E00               	movlw	0
  8682  0019CE  6EDE               	movwf	postinc2,c
  8683  0019D0  0E00               	movlw	0
  8684  0019D2  6EDD               	movwf	postdec2,c
  8685  0019D4                     l598:
  8686                           
  8687                           ;stateMachine/gameController.c: 66:             if(LCD_InButton(&(g->btnOnePlayer),g->x,
      +                          g->y))
  8688  0019D4  0E20               	movlw	32
  8689  0019D6  2437               	addwf	gameControllerController@g^0,w,c
  8690  0019D8  6E12               	movwf	LCD_InButton@button^0,c
  8691  0019DA  0E00               	movlw	0
  8692  0019DC  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8693  0019DE  6E13               	movwf	(LCD_InButton@button+1)^0,c
  8694  0019E0  EE20 F004          	lfsr	2,4
  8695  0019E4  5037               	movf	gameControllerController@g^0,w,c
  8696  0019E6  26D9               	addwf	fsr2l,f,c
  8697  0019E8  5038               	movf	(gameControllerController@g+1)^0,w,c
  8698  0019EA  22DA               	addwfc	fsr2h,f,c
  8699  0019EC  CFDE F014          	movff	postinc2,LCD_InButton@posX
  8700  0019F0  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  8701  0019F4  EE20 F006          	lfsr	2,6
  8702  0019F8  5037               	movf	gameControllerController@g^0,w,c
  8703  0019FA  26D9               	addwf	fsr2l,f,c
  8704  0019FC  5038               	movf	(gameControllerController@g+1)^0,w,c
  8705  0019FE  22DA               	addwfc	fsr2h,f,c
  8706  001A00  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8707  001A04  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8708  001A08  EC39  F01D         	call	_LCD_InButton	;wreg free
  8709  001A0C  0900               	iorlw	0
  8710  001A0E  B4D8               	btfsc	status,2,c
  8711  001A10  EF0C  F00D         	goto	u5711
  8712  001A14  EF0E  F00D         	goto	u5710
  8713  001A18                     u5711:
  8714  001A18  EF27  F00D         	goto	l599
  8715  001A1C                     u5710:
  8716  001A1C                     
  8717                           ;stateMachine/gameController.c: 67:             {;stateMachine/gameController.c: 68:    
      +                                       XF_pushEvent(evOnePlayer,0);
  8718  001A1C  0E00               	movlw	0
  8719  001A1E  6E18               	movwf	XF_pushEvent@inISR^0,c
  8720  001A20  0E05               	movlw	5
  8721  001A22  ECDC  F024         	call	_XF_pushEvent
  8722  001A26                     
  8723                           ;stateMachine/gameController.c: 69:                 g->x=0;
  8724  001A26  EE20 F004          	lfsr	2,4
  8725  001A2A  5037               	movf	gameControllerController@g^0,w,c
  8726  001A2C  26D9               	addwf	fsr2l,f,c
  8727  001A2E  5038               	movf	(gameControllerController@g+1)^0,w,c
  8728  001A30  22DA               	addwfc	fsr2h,f,c
  8729  001A32  0E00               	movlw	0
  8730  001A34  6EDE               	movwf	postinc2,c
  8731  001A36  0E00               	movlw	0
  8732  001A38  6EDD               	movwf	postdec2,c
  8733  001A3A                     
  8734                           ;stateMachine/gameController.c: 70:                 g->y=0;
  8735  001A3A  EE20 F006          	lfsr	2,6
  8736  001A3E  5037               	movf	gameControllerController@g^0,w,c
  8737  001A40  26D9               	addwf	fsr2l,f,c
  8738  001A42  5038               	movf	(gameControllerController@g+1)^0,w,c
  8739  001A44  22DA               	addwfc	fsr2h,f,c
  8740  001A46  0E00               	movlw	0
  8741  001A48  6EDE               	movwf	postinc2,c
  8742  001A4A  0E00               	movlw	0
  8743  001A4C  6EDD               	movwf	postdec2,c
  8744  001A4E                     l599:
  8745                           
  8746                           ;stateMachine/gameController.c: 72:             if(LCD_InButton(&(g->btnTwoPlayer),g->x,
      +                          g->y))
  8747  001A4E  0E38               	movlw	56
  8748  001A50  2437               	addwf	gameControllerController@g^0,w,c
  8749  001A52  6E12               	movwf	LCD_InButton@button^0,c
  8750  001A54  0E00               	movlw	0
  8751  001A56  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8752  001A58  6E13               	movwf	(LCD_InButton@button+1)^0,c
  8753  001A5A  EE20 F004          	lfsr	2,4
  8754  001A5E  5037               	movf	gameControllerController@g^0,w,c
  8755  001A60  26D9               	addwf	fsr2l,f,c
  8756  001A62  5038               	movf	(gameControllerController@g+1)^0,w,c
  8757  001A64  22DA               	addwfc	fsr2h,f,c
  8758  001A66  CFDE F014          	movff	postinc2,LCD_InButton@posX
  8759  001A6A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  8760  001A6E  EE20 F006          	lfsr	2,6
  8761  001A72  5037               	movf	gameControllerController@g^0,w,c
  8762  001A74  26D9               	addwf	fsr2l,f,c
  8763  001A76  5038               	movf	(gameControllerController@g+1)^0,w,c
  8764  001A78  22DA               	addwfc	fsr2h,f,c
  8765  001A7A  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8766  001A7E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8767  001A82  EC39  F01D         	call	_LCD_InButton	;wreg free
  8768  001A86  0900               	iorlw	0
  8769  001A88  B4D8               	btfsc	status,2,c
  8770  001A8A  EF49  F00D         	goto	u5721
  8771  001A8E  EF4B  F00D         	goto	u5720
  8772  001A92                     u5721:
  8773  001A92  EFB2  F00E         	goto	l610
  8774  001A96                     u5720:
  8775  001A96                     
  8776                           ;stateMachine/gameController.c: 73:             {;stateMachine/gameController.c: 74:    
      +                                       XF_pushEvent(evTwoPlayer,0);
  8777  001A96  0E00               	movlw	0
  8778  001A98  6E18               	movwf	XF_pushEvent@inISR^0,c
  8779  001A9A  0E06               	movlw	6
  8780  001A9C  ECDC  F024         	call	_XF_pushEvent
  8781  001AA0                     
  8782                           ;stateMachine/gameController.c: 75:                 g->x=0;
  8783  001AA0  EE20 F004          	lfsr	2,4
  8784  001AA4  5037               	movf	gameControllerController@g^0,w,c
  8785  001AA6  26D9               	addwf	fsr2l,f,c
  8786  001AA8  5038               	movf	(gameControllerController@g+1)^0,w,c
  8787  001AAA  22DA               	addwfc	fsr2h,f,c
  8788  001AAC  0E00               	movlw	0
  8789  001AAE  6EDE               	movwf	postinc2,c
  8790  001AB0  0E00               	movlw	0
  8791  001AB2  6EDD               	movwf	postdec2,c
  8792  001AB4                     
  8793                           ;stateMachine/gameController.c: 76:                 g->y=0;
  8794  001AB4  EE20 F006          	lfsr	2,6
  8795  001AB8  5037               	movf	gameControllerController@g^0,w,c
  8796  001ABA  26D9               	addwf	fsr2l,f,c
  8797  001ABC  5038               	movf	(gameControllerController@g+1)^0,w,c
  8798  001ABE  22DA               	addwfc	fsr2h,f,c
  8799  001AC0  0E00               	movlw	0
  8800  001AC2  6EDE               	movwf	postinc2,c
  8801  001AC4  0E00               	movlw	0
  8802  001AC6  6EDD               	movwf	postdec2,c
  8803  001AC8  EFB2  F00E         	goto	l610
  8804  001ACC                     l8978:
  8805                           
  8806                           ;stateMachine/gameController.c: 80:             if(LCD_InSlider(&(g->sldParam),g->x,g->y
      +                          ))
  8807  001ACC  0E98               	movlw	152
  8808  001ACE  2437               	addwf	gameControllerController@g^0,w,c
  8809  001AD0  6E12               	movwf	LCD_InSlider@slider^0,c
  8810  001AD2  0E00               	movlw	0
  8811  001AD4  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8812  001AD6  6E13               	movwf	(LCD_InSlider@slider+1)^0,c
  8813  001AD8  EE20 F004          	lfsr	2,4
  8814  001ADC  5037               	movf	gameControllerController@g^0,w,c
  8815  001ADE  26D9               	addwf	fsr2l,f,c
  8816  001AE0  5038               	movf	(gameControllerController@g+1)^0,w,c
  8817  001AE2  22DA               	addwfc	fsr2h,f,c
  8818  001AE4  CFDE F014          	movff	postinc2,LCD_InSlider@posX
  8819  001AE8  CFDD F015          	movff	postdec2,LCD_InSlider@posX+1
  8820  001AEC  EE20 F006          	lfsr	2,6
  8821  001AF0  5037               	movf	gameControllerController@g^0,w,c
  8822  001AF2  26D9               	addwf	fsr2l,f,c
  8823  001AF4  5038               	movf	(gameControllerController@g+1)^0,w,c
  8824  001AF6  22DA               	addwfc	fsr2h,f,c
  8825  001AF8  CFDE F016          	movff	postinc2,LCD_InSlider@posY
  8826  001AFC  CFDD F017          	movff	postdec2,LCD_InSlider@posY+1
  8827  001B00  ECCA  F01C         	call	_LCD_InSlider	;wreg free
  8828  001B04  0900               	iorlw	0
  8829  001B06  B4D8               	btfsc	status,2,c
  8830  001B08  EF88  F00D         	goto	u5731
  8831  001B0C  EF8A  F00D         	goto	u5730
  8832  001B10                     u5731:
  8833  001B10  EFAC  F00D         	goto	l8986
  8834  001B14                     u5730:
  8835  001B14                     
  8836                           ;stateMachine/gameController.c: 81:             {;stateMachine/gameController.c: 82:    
      +                                       backlightController(g);
  8837  001B14  C037  F018         	movff	gameControllerController@g,backlightController@g
  8838  001B18  C038  F019         	movff	gameControllerController@g+1,backlightController@g+1
  8839  001B1C  EC37  F008         	call	_backlightController	;wreg free
  8840                           
  8841                           ;stateMachine/gameController.c: 83:                 LCD_SliderUpdate(&(g->sldParam));
  8842  001B20  0E98               	movlw	152
  8843  001B22  2437               	addwf	gameControllerController@g^0,w,c
  8844  001B24  6E27               	movwf	LCD_SliderUpdate@slider^0,c
  8845  001B26  0E00               	movlw	0
  8846  001B28  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8847  001B2A  6E28               	movwf	(LCD_SliderUpdate@slider+1)^0,c
  8848  001B2C  ECCC  F005         	call	_LCD_SliderUpdate	;wreg free
  8849  001B30                     
  8850                           ;stateMachine/gameController.c: 84:                 g->x=0;
  8851  001B30  EE20 F004          	lfsr	2,4
  8852  001B34  5037               	movf	gameControllerController@g^0,w,c
  8853  001B36  26D9               	addwf	fsr2l,f,c
  8854  001B38  5038               	movf	(gameControllerController@g+1)^0,w,c
  8855  001B3A  22DA               	addwfc	fsr2h,f,c
  8856  001B3C  0E00               	movlw	0
  8857  001B3E  6EDE               	movwf	postinc2,c
  8858  001B40  0E00               	movlw	0
  8859  001B42  6EDD               	movwf	postdec2,c
  8860  001B44                     
  8861                           ;stateMachine/gameController.c: 85:                 g->y=0;
  8862  001B44  EE20 F006          	lfsr	2,6
  8863  001B48  5037               	movf	gameControllerController@g^0,w,c
  8864  001B4A  26D9               	addwf	fsr2l,f,c
  8865  001B4C  5038               	movf	(gameControllerController@g+1)^0,w,c
  8866  001B4E  22DA               	addwfc	fsr2h,f,c
  8867  001B50  0E00               	movlw	0
  8868  001B52  6EDE               	movwf	postinc2,c
  8869  001B54  0E00               	movlw	0
  8870  001B56  6EDD               	movwf	postdec2,c
  8871  001B58                     l8986:
  8872                           
  8873                           ;stateMachine/gameController.c: 87:             if(LCD_InButton(&(g->btnLeaveParam),g->x
      +                          ,g->y))
  8874  001B58  0E50               	movlw	80
  8875  001B5A  2437               	addwf	gameControllerController@g^0,w,c
  8876  001B5C  6E12               	movwf	LCD_InButton@button^0,c
  8877  001B5E  0E00               	movlw	0
  8878  001B60  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8879  001B62  6E13               	movwf	(LCD_InButton@button+1)^0,c
  8880  001B64  EE20 F004          	lfsr	2,4
  8881  001B68  5037               	movf	gameControllerController@g^0,w,c
  8882  001B6A  26D9               	addwf	fsr2l,f,c
  8883  001B6C  5038               	movf	(gameControllerController@g+1)^0,w,c
  8884  001B6E  22DA               	addwfc	fsr2h,f,c
  8885  001B70  CFDE F014          	movff	postinc2,LCD_InButton@posX
  8886  001B74  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  8887  001B78  EE20 F006          	lfsr	2,6
  8888  001B7C  5037               	movf	gameControllerController@g^0,w,c
  8889  001B7E  26D9               	addwf	fsr2l,f,c
  8890  001B80  5038               	movf	(gameControllerController@g+1)^0,w,c
  8891  001B82  22DA               	addwfc	fsr2h,f,c
  8892  001B84  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8893  001B88  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8894  001B8C  EC39  F01D         	call	_LCD_InButton	;wreg free
  8895  001B90  0900               	iorlw	0
  8896  001B92  B4D8               	btfsc	status,2,c
  8897  001B94  EFCE  F00D         	goto	u5741
  8898  001B98  EFD0  F00D         	goto	u5740
  8899  001B9C                     u5741:
  8900  001B9C  EFB2  F00E         	goto	l610
  8901  001BA0                     u5740:
  8902  001BA0                     
  8903                           ;stateMachine/gameController.c: 88:             {;stateMachine/gameController.c: 89:    
      +                                       XF_pushEvent(evLeaveParam,0);
  8904  001BA0  0E00               	movlw	0
  8905  001BA2  6E18               	movwf	XF_pushEvent@inISR^0,c
  8906  001BA4  0E08               	movlw	8
  8907  001BA6  ECDC  F024         	call	_XF_pushEvent
  8908  001BAA                     
  8909                           ;stateMachine/gameController.c: 90:                 g->x=0;
  8910  001BAA  EE20 F004          	lfsr	2,4
  8911  001BAE  5037               	movf	gameControllerController@g^0,w,c
  8912  001BB0  26D9               	addwf	fsr2l,f,c
  8913  001BB2  5038               	movf	(gameControllerController@g+1)^0,w,c
  8914  001BB4  22DA               	addwfc	fsr2h,f,c
  8915  001BB6  0E00               	movlw	0
  8916  001BB8  6EDE               	movwf	postinc2,c
  8917  001BBA  0E00               	movlw	0
  8918  001BBC  6EDD               	movwf	postdec2,c
  8919  001BBE                     
  8920                           ;stateMachine/gameController.c: 91:                 g->y=0;
  8921  001BBE  EE20 F006          	lfsr	2,6
  8922  001BC2  5037               	movf	gameControllerController@g^0,w,c
  8923  001BC4  26D9               	addwf	fsr2l,f,c
  8924  001BC6  5038               	movf	(gameControllerController@g+1)^0,w,c
  8925  001BC8  22DA               	addwfc	fsr2h,f,c
  8926  001BCA  0E00               	movlw	0
  8927  001BCC  6EDE               	movwf	postinc2,c
  8928  001BCE  0E00               	movlw	0
  8929  001BD0  6EDD               	movwf	postdec2,c
  8930  001BD2  EFB2  F00E         	goto	l610
  8931  001BD6                     l8994:
  8932                           
  8933                           ;stateMachine/gameController.c: 95:             if(LCD_InButton(&(g->btnLeft),g->x,g->y)
      +                          )
  8934  001BD6  0E68               	movlw	104
  8935  001BD8  2437               	addwf	gameControllerController@g^0,w,c
  8936  001BDA  6E12               	movwf	LCD_InButton@button^0,c
  8937  001BDC  0E00               	movlw	0
  8938  001BDE  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8939  001BE0  6E13               	movwf	(LCD_InButton@button+1)^0,c
  8940  001BE2  EE20 F004          	lfsr	2,4
  8941  001BE6  5037               	movf	gameControllerController@g^0,w,c
  8942  001BE8  26D9               	addwf	fsr2l,f,c
  8943  001BEA  5038               	movf	(gameControllerController@g+1)^0,w,c
  8944  001BEC  22DA               	addwfc	fsr2h,f,c
  8945  001BEE  CFDE F014          	movff	postinc2,LCD_InButton@posX
  8946  001BF2  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  8947  001BF6  EE20 F006          	lfsr	2,6
  8948  001BFA  5037               	movf	gameControllerController@g^0,w,c
  8949  001BFC  26D9               	addwf	fsr2l,f,c
  8950  001BFE  5038               	movf	(gameControllerController@g+1)^0,w,c
  8951  001C00  22DA               	addwfc	fsr2h,f,c
  8952  001C02  CFDE F016          	movff	postinc2,LCD_InButton@posY
  8953  001C06  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  8954  001C0A  EC39  F01D         	call	_LCD_InButton	;wreg free
  8955  001C0E  0900               	iorlw	0
  8956  001C10  B4D8               	btfsc	status,2,c
  8957  001C12  EF0D  F00E         	goto	u5751
  8958  001C16  EF0F  F00E         	goto	u5750
  8959  001C1A                     u5751:
  8960  001C1A  EF33  F00E         	goto	l9000
  8961  001C1E                     u5750:
  8962  001C1E                     
  8963                           ;stateMachine/gameController.c: 96:             {;stateMachine/gameController.c: 97:    
      +                                       g->x=0;
  8964  001C1E  EE20 F004          	lfsr	2,4
  8965  001C22  5037               	movf	gameControllerController@g^0,w,c
  8966  001C24  26D9               	addwf	fsr2l,f,c
  8967  001C26  5038               	movf	(gameControllerController@g+1)^0,w,c
  8968  001C28  22DA               	addwfc	fsr2h,f,c
  8969  001C2A  0E00               	movlw	0
  8970  001C2C  6EDE               	movwf	postinc2,c
  8971  001C2E  0E00               	movlw	0
  8972  001C30  6EDD               	movwf	postdec2,c
  8973                           
  8974                           ;stateMachine/gameController.c: 98:                 g->y=0;
  8975  001C32  EE20 F006          	lfsr	2,6
  8976  001C36  5037               	movf	gameControllerController@g^0,w,c
  8977  001C38  26D9               	addwf	fsr2l,f,c
  8978  001C3A  5038               	movf	(gameControllerController@g+1)^0,w,c
  8979  001C3C  22DA               	addwfc	fsr2h,f,c
  8980  001C3E  0E00               	movlw	0
  8981  001C40  6EDE               	movwf	postinc2,c
  8982  001C42  0E00               	movlw	0
  8983  001C44  6EDD               	movwf	postdec2,c
  8984  001C46                     
  8985                           ;stateMachine/gameController.c: 99:                 Paddle_addX(&g->p1,8,0);
  8986  001C46  0EB9               	movlw	185
  8987  001C48  2437               	addwf	gameControllerController@g^0,w,c
  8988  001C4A  6E25               	movwf	Paddle_addX@p^0,c
  8989  001C4C  0E00               	movlw	0
  8990  001C4E  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  8991  001C50  6E26               	movwf	(Paddle_addX@p+1)^0,c
  8992  001C52  0E00               	movlw	0
  8993  001C54  6E28               	movwf	(Paddle_addX@value+1)^0,c
  8994  001C56  0E08               	movlw	8
  8995  001C58  6E27               	movwf	Paddle_addX@value^0,c
  8996  001C5A  0E00               	movlw	0
  8997  001C5C  6E2A               	movwf	(Paddle_addX@add+1)^0,c
  8998  001C5E  0E00               	movlw	0
  8999  001C60  6E29               	movwf	Paddle_addX@add^0,c
  9000  001C62  ECD5  F017         	call	_Paddle_addX	;wreg free
  9001  001C66                     l9000:
  9002                           
  9003                           ;stateMachine/gameController.c: 101:             if(LCD_InButton(&(g->btnRight),g->x,g->
      +                          y))
  9004  001C66  0E80               	movlw	128
  9005  001C68  2437               	addwf	gameControllerController@g^0,w,c
  9006  001C6A  6E12               	movwf	LCD_InButton@button^0,c
  9007  001C6C  0E00               	movlw	0
  9008  001C6E  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  9009  001C70  6E13               	movwf	(LCD_InButton@button+1)^0,c
  9010  001C72  EE20 F004          	lfsr	2,4
  9011  001C76  5037               	movf	gameControllerController@g^0,w,c
  9012  001C78  26D9               	addwf	fsr2l,f,c
  9013  001C7A  5038               	movf	(gameControllerController@g+1)^0,w,c
  9014  001C7C  22DA               	addwfc	fsr2h,f,c
  9015  001C7E  CFDE F014          	movff	postinc2,LCD_InButton@posX
  9016  001C82  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  9017  001C86  EE20 F006          	lfsr	2,6
  9018  001C8A  5037               	movf	gameControllerController@g^0,w,c
  9019  001C8C  26D9               	addwf	fsr2l,f,c
  9020  001C8E  5038               	movf	(gameControllerController@g+1)^0,w,c
  9021  001C90  22DA               	addwfc	fsr2h,f,c
  9022  001C92  CFDE F016          	movff	postinc2,LCD_InButton@posY
  9023  001C96  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  9024  001C9A  EC39  F01D         	call	_LCD_InButton	;wreg free
  9025  001C9E  0900               	iorlw	0
  9026  001CA0  B4D8               	btfsc	status,2,c
  9027  001CA2  EF55  F00E         	goto	u5761
  9028  001CA6  EF57  F00E         	goto	u5760
  9029  001CAA                     u5761:
  9030  001CAA  EF7B  F00E         	goto	l9006
  9031  001CAE                     u5760:
  9032  001CAE                     
  9033                           ;stateMachine/gameController.c: 102:             {;stateMachine/gameController.c: 103:  
      +                                         g->x=0;
  9034  001CAE  EE20 F004          	lfsr	2,4
  9035  001CB2  5037               	movf	gameControllerController@g^0,w,c
  9036  001CB4  26D9               	addwf	fsr2l,f,c
  9037  001CB6  5038               	movf	(gameControllerController@g+1)^0,w,c
  9038  001CB8  22DA               	addwfc	fsr2h,f,c
  9039  001CBA  0E00               	movlw	0
  9040  001CBC  6EDE               	movwf	postinc2,c
  9041  001CBE  0E00               	movlw	0
  9042  001CC0  6EDD               	movwf	postdec2,c
  9043                           
  9044                           ;stateMachine/gameController.c: 104:                 g->y=0;
  9045  001CC2  EE20 F006          	lfsr	2,6
  9046  001CC6  5037               	movf	gameControllerController@g^0,w,c
  9047  001CC8  26D9               	addwf	fsr2l,f,c
  9048  001CCA  5038               	movf	(gameControllerController@g+1)^0,w,c
  9049  001CCC  22DA               	addwfc	fsr2h,f,c
  9050  001CCE  0E00               	movlw	0
  9051  001CD0  6EDE               	movwf	postinc2,c
  9052  001CD2  0E00               	movlw	0
  9053  001CD4  6EDD               	movwf	postdec2,c
  9054  001CD6                     
  9055                           ;stateMachine/gameController.c: 105:                 Paddle_addX(&g->p1,8,1);
  9056  001CD6  0EB9               	movlw	185
  9057  001CD8  2437               	addwf	gameControllerController@g^0,w,c
  9058  001CDA  6E25               	movwf	Paddle_addX@p^0,c
  9059  001CDC  0E00               	movlw	0
  9060  001CDE  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  9061  001CE0  6E26               	movwf	(Paddle_addX@p+1)^0,c
  9062  001CE2  0E00               	movlw	0
  9063  001CE4  6E28               	movwf	(Paddle_addX@value+1)^0,c
  9064  001CE6  0E08               	movlw	8
  9065  001CE8  6E27               	movwf	Paddle_addX@value^0,c
  9066  001CEA  0E00               	movlw	0
  9067  001CEC  6E2A               	movwf	(Paddle_addX@add+1)^0,c
  9068  001CEE  0E01               	movlw	1
  9069  001CF0  6E29               	movwf	Paddle_addX@add^0,c
  9070  001CF2  ECD5  F017         	call	_Paddle_addX	;wreg free
  9071  001CF6                     l9006:
  9072                           
  9073                           ;stateMachine/gameController.c: 107:             Paddle_draw(&g->p1);
  9074  001CF6  0EB9               	movlw	185
  9075  001CF8  2437               	addwf	gameControllerController@g^0,w,c
  9076  001CFA  6E25               	movwf	Paddle_draw@p^0,c
  9077  001CFC  0E00               	movlw	0
  9078  001CFE  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  9079  001D00  6E26               	movwf	(Paddle_draw@p+1)^0,c
  9080  001D02  EC2B  F022         	call	_Paddle_draw	;wreg free
  9081  001D06                     
  9082                           ;stateMachine/gameController.c: 108:             LCD_ButtonUpdate(&(g->btnLeft));
  9083  001D06  0E68               	movlw	104
  9084  001D08  2437               	addwf	gameControllerController@g^0,w,c
  9085  001D0A  6E25               	movwf	LCD_ButtonUpdate@button^0,c
  9086  001D0C  0E00               	movlw	0
  9087  001D0E  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  9088  001D10  6E26               	movwf	(LCD_ButtonUpdate@button+1)^0,c
  9089  001D12  ECCA  F014         	call	_LCD_ButtonUpdate	;wreg free
  9090  001D16                     
  9091                           ;stateMachine/gameController.c: 109:             LCD_ButtonUpdate(&(g->btnRight));
  9092  001D16  0E80               	movlw	128
  9093  001D18  2437               	addwf	gameControllerController@g^0,w,c
  9094  001D1A  6E25               	movwf	LCD_ButtonUpdate@button^0,c
  9095  001D1C  0E00               	movlw	0
  9096  001D1E  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  9097  001D20  6E26               	movwf	(LCD_ButtonUpdate@button+1)^0,c
  9098  001D22  ECCA  F014         	call	_LCD_ButtonUpdate	;wreg free
  9099                           
  9100                           ;stateMachine/gameController.c: 110:             break;
  9101  001D26  EFB2  F00E         	goto	l610
  9102  001D2A                     l9014:
  9103  001D2A  504D               	movf	_gameControllerState^0,w,c
  9104  001D2C  6E39               	movwf	??_gameControllerController^0,c
  9105  001D2E  6A3A               	clrf	(??_gameControllerController+1)^0,c
  9106                           
  9107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9108                           ; Switch size 1, requested type "simple"
  9109                           ; Number of cases is 1, Range of values is 0 to 0
  9110                           ; switch strategies available:
  9111                           ; Name         Instructions Cycles
  9112                           ; simple_byte            4     3 (average)
  9113                           ;	Chosen strategy is simple_byte
  9114  001D30  503A               	movf	(??_gameControllerController+1)^0,w,c
  9115  001D32  0A00               	xorlw	0	; case 0
  9116  001D34  B4D8               	btfsc	status,2,c
  9117  001D36  EF9F  F00E         	goto	l9566
  9118  001D3A  EFB2  F00E         	goto	l610
  9119  001D3E                     l9566:
  9120                           
  9121                           ; Switch size 1, requested type "simple"
  9122                           ; Number of cases is 4, Range of values is 0 to 3
  9123                           ; switch strategies available:
  9124                           ; Name         Instructions Cycles
  9125                           ; simple_byte           13     7 (average)
  9126                           ;	Chosen strategy is simple_byte
  9127  001D3E  5039               	movf	??_gameControllerController^0,w,c
  9128  001D40  0A00               	xorlw	0	; case 0
  9129  001D42  B4D8               	btfsc	status,2,c
  9130  001D44  EFAD  F00C         	goto	l8958
  9131  001D48  0A01               	xorlw	1	; case 1
  9132  001D4A  B4D8               	btfsc	status,2,c
  9133  001D4C  EF66  F00D         	goto	l8978
  9134  001D50  0A03               	xorlw	3	; case 2
  9135  001D52  B4D8               	btfsc	status,2,c
  9136  001D54  EFEB  F00D         	goto	l8994
  9137  001D58  0A01               	xorlw	1	; case 3
  9138  001D5A  B4D8               	btfsc	status,2,c
  9139  001D5C  EFB2  F00E         	goto	l610
  9140  001D60  EFB2  F00E         	goto	l610
  9141  001D64                     l610:
  9142  001D64  0012               	return		;funcret
  9143  001D66                     __end_of_gameControllerController:
  9144                           	callstack 0
  9145                           
  9146 ;; *************** function _backlightController *****************
  9147 ;; Defined at:
  9148 ;;		line 117 in file "stateMachine/gameController.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;  g               2   23[COMRAM] PTR struct GameParameter
  9151 ;;		 -> g1(209), 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      void 
  9156 ;; Registers used:
  9157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9163 ;;      Params:         2       0       0       0       0       0       0
  9164 ;;      Locals:         0       0       0       0       0       0       0
  9165 ;;      Temps:          2       0       0       0       0       0       0
  9166 ;;      Totals:         4       0       0       0       0       0       0
  9167 ;;Total ram usage:        4 bytes
  9168 ;; Hardware stack levels used: 1
  9169 ;; Hardware stack levels required when called: 5
  9170 ;; This function calls:
  9171 ;;		_GameParameters_setBackLight
  9172 ;; This function is called by:
  9173 ;;		_gameControllerController
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text37
  9178  00106E                     __ptext37:
  9179                           	callstack 0
  9180  00106E                     _backlightController:
  9181                           	callstack 21
  9182  00106E                     
  9183                           ;stateMachine/gameController.c: 117: void backlightController(GameParameters* g);stateMa
      +                          chine/gameController.c: 118: {;stateMachine/gameController.c: 119:     if(((g->x)>=50)&&
      +                          ((g->x)<64))
  9184  00106E  EE20 F004          	lfsr	2,4
  9185  001072  5018               	movf	backlightController@g^0,w,c
  9186  001074  26D9               	addwf	fsr2l,f,c
  9187  001076  5019               	movf	(backlightController@g+1)^0,w,c
  9188  001078  22DA               	addwfc	fsr2h,f,c
  9189  00107A  0E01               	movlw	1
  9190  00107C  50DB               	movf	plusw2,w,c
  9191  00107E  E109               	bnz	u5410
  9192  001080  0E32               	movlw	50
  9193  001082  5CDE               	subwf	postinc2,w,c
  9194  001084  A0D8               	btfss	status,0,c
  9195  001086  EF47  F008         	goto	u5411
  9196  00108A  EF49  F008         	goto	u5410
  9197  00108E                     u5411:
  9198  00108E  EF67  F008         	goto	l8804
  9199  001092                     u5410:
  9200  001092  EE20 F004          	lfsr	2,4
  9201  001096  5018               	movf	backlightController@g^0,w,c
  9202  001098  26D9               	addwf	fsr2l,f,c
  9203  00109A  5019               	movf	(backlightController@g+1)^0,w,c
  9204  00109C  22DA               	addwfc	fsr2h,f,c
  9205  00109E  0E01               	movlw	1
  9206  0010A0  50DB               	movf	plusw2,w,c
  9207  0010A2  E107               	bnz	u5421
  9208  0010A4  0E40               	movlw	64
  9209  0010A6  5CDE               	subwf	postinc2,w,c
  9210  0010A8  B0D8               	btfsc	status,0,c
  9211  0010AA  EF59  F008         	goto	u5421
  9212  0010AE  EF5B  F008         	goto	u5420
  9213  0010B2                     u5421:
  9214  0010B2  EF67  F008         	goto	l8804
  9215  0010B6                     u5420:
  9216  0010B6                     
  9217                           ;stateMachine/gameController.c: 120:     {;stateMachine/gameController.c: 121:         G
      +                          ameParameters_setBackLight(g,0);
  9218  0010B6  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9219  0010BA  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9220  0010BE  0E00               	movlw	0
  9221  0010C0  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9222  0010C2  0E00               	movlw	0
  9223  0010C4  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9224  0010C6  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9225                           
  9226                           ;stateMachine/gameController.c: 122:     }
  9227  0010CA  EF77  F00A         	goto	l8870
  9228  0010CE                     l8804:
  9229  0010CE  EE20 F004          	lfsr	2,4
  9230  0010D2  5018               	movf	backlightController@g^0,w,c
  9231  0010D4  26D9               	addwf	fsr2l,f,c
  9232  0010D6  5019               	movf	(backlightController@g+1)^0,w,c
  9233  0010D8  22DA               	addwfc	fsr2h,f,c
  9234  0010DA  0E01               	movlw	1
  9235  0010DC  50DB               	movf	plusw2,w,c
  9236  0010DE  E109               	bnz	u5430
  9237  0010E0  0E40               	movlw	64
  9238  0010E2  5CDE               	subwf	postinc2,w,c
  9239  0010E4  A0D8               	btfss	status,0,c
  9240  0010E6  EF77  F008         	goto	u5431
  9241  0010EA  EF79  F008         	goto	u5430
  9242  0010EE                     u5431:
  9243  0010EE  EF97  F008         	goto	l8810
  9244  0010F2                     u5430:
  9245  0010F2  EE20 F004          	lfsr	2,4
  9246  0010F6  5018               	movf	backlightController@g^0,w,c
  9247  0010F8  26D9               	addwf	fsr2l,f,c
  9248  0010FA  5019               	movf	(backlightController@g+1)^0,w,c
  9249  0010FC  22DA               	addwfc	fsr2h,f,c
  9250  0010FE  0E01               	movlw	1
  9251  001100  50DB               	movf	plusw2,w,c
  9252  001102  E107               	bnz	u5441
  9253  001104  0E4E               	movlw	78
  9254  001106  5CDE               	subwf	postinc2,w,c
  9255  001108  B0D8               	btfsc	status,0,c
  9256  00110A  EF89  F008         	goto	u5441
  9257  00110E  EF8B  F008         	goto	u5440
  9258  001112                     u5441:
  9259  001112  EF97  F008         	goto	l8810
  9260  001116                     u5440:
  9261  001116                     
  9262                           ;stateMachine/gameController.c: 124:     {;stateMachine/gameController.c: 125:         G
      +                          ameParameters_setBackLight(g,1);
  9263  001116  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9264  00111A  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9265  00111E  0E00               	movlw	0
  9266  001120  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9267  001122  0E01               	movlw	1
  9268  001124  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9269  001126  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9270                           
  9271                           ;stateMachine/gameController.c: 126:     }
  9272  00112A  EF77  F00A         	goto	l8870
  9273  00112E                     l8810:
  9274  00112E  EE20 F004          	lfsr	2,4
  9275  001132  5018               	movf	backlightController@g^0,w,c
  9276  001134  26D9               	addwf	fsr2l,f,c
  9277  001136  5019               	movf	(backlightController@g+1)^0,w,c
  9278  001138  22DA               	addwfc	fsr2h,f,c
  9279  00113A  0E01               	movlw	1
  9280  00113C  50DB               	movf	plusw2,w,c
  9281  00113E  E109               	bnz	u5450
  9282  001140  0E4E               	movlw	78
  9283  001142  5CDE               	subwf	postinc2,w,c
  9284  001144  A0D8               	btfss	status,0,c
  9285  001146  EFA7  F008         	goto	u5451
  9286  00114A  EFA9  F008         	goto	u5450
  9287  00114E                     u5451:
  9288  00114E  EFC7  F008         	goto	l8816
  9289  001152                     u5450:
  9290  001152  EE20 F004          	lfsr	2,4
  9291  001156  5018               	movf	backlightController@g^0,w,c
  9292  001158  26D9               	addwf	fsr2l,f,c
  9293  00115A  5019               	movf	(backlightController@g+1)^0,w,c
  9294  00115C  22DA               	addwfc	fsr2h,f,c
  9295  00115E  0E01               	movlw	1
  9296  001160  50DB               	movf	plusw2,w,c
  9297  001162  E107               	bnz	u5461
  9298  001164  0E5C               	movlw	92
  9299  001166  5CDE               	subwf	postinc2,w,c
  9300  001168  B0D8               	btfsc	status,0,c
  9301  00116A  EFB9  F008         	goto	u5461
  9302  00116E  EFBB  F008         	goto	u5460
  9303  001172                     u5461:
  9304  001172  EFC7  F008         	goto	l8816
  9305  001176                     u5460:
  9306  001176                     
  9307                           ;stateMachine/gameController.c: 128:     {;stateMachine/gameController.c: 129:         G
      +                          ameParameters_setBackLight(g,2);
  9308  001176  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9309  00117A  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9310  00117E  0E00               	movlw	0
  9311  001180  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9312  001182  0E02               	movlw	2
  9313  001184  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9314  001186  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9315                           
  9316                           ;stateMachine/gameController.c: 130:     }
  9317  00118A  EF77  F00A         	goto	l8870
  9318  00118E                     l8816:
  9319  00118E  EE20 F004          	lfsr	2,4
  9320  001192  5018               	movf	backlightController@g^0,w,c
  9321  001194  26D9               	addwf	fsr2l,f,c
  9322  001196  5019               	movf	(backlightController@g+1)^0,w,c
  9323  001198  22DA               	addwfc	fsr2h,f,c
  9324  00119A  0E01               	movlw	1
  9325  00119C  50DB               	movf	plusw2,w,c
  9326  00119E  E109               	bnz	u5470
  9327  0011A0  0E5C               	movlw	92
  9328  0011A2  5CDE               	subwf	postinc2,w,c
  9329  0011A4  A0D8               	btfss	status,0,c
  9330  0011A6  EFD7  F008         	goto	u5471
  9331  0011AA  EFD9  F008         	goto	u5470
  9332  0011AE                     u5471:
  9333  0011AE  EFF7  F008         	goto	l8822
  9334  0011B2                     u5470:
  9335  0011B2  EE20 F004          	lfsr	2,4
  9336  0011B6  5018               	movf	backlightController@g^0,w,c
  9337  0011B8  26D9               	addwf	fsr2l,f,c
  9338  0011BA  5019               	movf	(backlightController@g+1)^0,w,c
  9339  0011BC  22DA               	addwfc	fsr2h,f,c
  9340  0011BE  0E01               	movlw	1
  9341  0011C0  50DB               	movf	plusw2,w,c
  9342  0011C2  E107               	bnz	u5481
  9343  0011C4  0E6A               	movlw	106
  9344  0011C6  5CDE               	subwf	postinc2,w,c
  9345  0011C8  B0D8               	btfsc	status,0,c
  9346  0011CA  EFE9  F008         	goto	u5481
  9347  0011CE  EFEB  F008         	goto	u5480
  9348  0011D2                     u5481:
  9349  0011D2  EFF7  F008         	goto	l8822
  9350  0011D6                     u5480:
  9351  0011D6                     
  9352                           ;stateMachine/gameController.c: 132:     {;stateMachine/gameController.c: 133:         G
      +                          ameParameters_setBackLight(g,3);
  9353  0011D6  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9354  0011DA  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9355  0011DE  0E00               	movlw	0
  9356  0011E0  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9357  0011E2  0E03               	movlw	3
  9358  0011E4  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9359  0011E6  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9360                           
  9361                           ;stateMachine/gameController.c: 134:     }
  9362  0011EA  EF77  F00A         	goto	l8870
  9363  0011EE                     l8822:
  9364  0011EE  EE20 F004          	lfsr	2,4
  9365  0011F2  5018               	movf	backlightController@g^0,w,c
  9366  0011F4  26D9               	addwf	fsr2l,f,c
  9367  0011F6  5019               	movf	(backlightController@g+1)^0,w,c
  9368  0011F8  22DA               	addwfc	fsr2h,f,c
  9369  0011FA  0E01               	movlw	1
  9370  0011FC  50DB               	movf	plusw2,w,c
  9371  0011FE  E109               	bnz	u5490
  9372  001200  0E6A               	movlw	106
  9373  001202  5CDE               	subwf	postinc2,w,c
  9374  001204  A0D8               	btfss	status,0,c
  9375  001206  EF07  F009         	goto	u5491
  9376  00120A  EF09  F009         	goto	u5490
  9377  00120E                     u5491:
  9378  00120E  EF27  F009         	goto	l8828
  9379  001212                     u5490:
  9380  001212  EE20 F004          	lfsr	2,4
  9381  001216  5018               	movf	backlightController@g^0,w,c
  9382  001218  26D9               	addwf	fsr2l,f,c
  9383  00121A  5019               	movf	(backlightController@g+1)^0,w,c
  9384  00121C  22DA               	addwfc	fsr2h,f,c
  9385  00121E  0E01               	movlw	1
  9386  001220  50DB               	movf	plusw2,w,c
  9387  001222  E107               	bnz	u5501
  9388  001224  0E78               	movlw	120
  9389  001226  5CDE               	subwf	postinc2,w,c
  9390  001228  B0D8               	btfsc	status,0,c
  9391  00122A  EF19  F009         	goto	u5501
  9392  00122E  EF1B  F009         	goto	u5500
  9393  001232                     u5501:
  9394  001232  EF27  F009         	goto	l8828
  9395  001236                     u5500:
  9396  001236                     
  9397                           ;stateMachine/gameController.c: 136:     {;stateMachine/gameController.c: 137:         G
      +                          ameParameters_setBackLight(g,4);
  9398  001236  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9399  00123A  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9400  00123E  0E00               	movlw	0
  9401  001240  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9402  001242  0E04               	movlw	4
  9403  001244  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9404  001246  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9405                           
  9406                           ;stateMachine/gameController.c: 138:     }
  9407  00124A  EF77  F00A         	goto	l8870
  9408  00124E                     l8828:
  9409  00124E  EE20 F004          	lfsr	2,4
  9410  001252  5018               	movf	backlightController@g^0,w,c
  9411  001254  26D9               	addwf	fsr2l,f,c
  9412  001256  5019               	movf	(backlightController@g+1)^0,w,c
  9413  001258  22DA               	addwfc	fsr2h,f,c
  9414  00125A  0E01               	movlw	1
  9415  00125C  50DB               	movf	plusw2,w,c
  9416  00125E  E109               	bnz	u5510
  9417  001260  0E78               	movlw	120
  9418  001262  5CDE               	subwf	postinc2,w,c
  9419  001264  A0D8               	btfss	status,0,c
  9420  001266  EF37  F009         	goto	u5511
  9421  00126A  EF39  F009         	goto	u5510
  9422  00126E                     u5511:
  9423  00126E  EF57  F009         	goto	l8834
  9424  001272                     u5510:
  9425  001272  EE20 F004          	lfsr	2,4
  9426  001276  5018               	movf	backlightController@g^0,w,c
  9427  001278  26D9               	addwf	fsr2l,f,c
  9428  00127A  5019               	movf	(backlightController@g+1)^0,w,c
  9429  00127C  22DA               	addwfc	fsr2h,f,c
  9430  00127E  0E01               	movlw	1
  9431  001280  50DB               	movf	plusw2,w,c
  9432  001282  E107               	bnz	u5521
  9433  001284  0E86               	movlw	134
  9434  001286  5CDE               	subwf	postinc2,w,c
  9435  001288  B0D8               	btfsc	status,0,c
  9436  00128A  EF49  F009         	goto	u5521
  9437  00128E  EF4B  F009         	goto	u5520
  9438  001292                     u5521:
  9439  001292  EF57  F009         	goto	l8834
  9440  001296                     u5520:
  9441  001296                     
  9442                           ;stateMachine/gameController.c: 140:     {;stateMachine/gameController.c: 141:         G
      +                          ameParameters_setBackLight(g,5);
  9443  001296  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9444  00129A  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9445  00129E  0E00               	movlw	0
  9446  0012A0  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9447  0012A2  0E05               	movlw	5
  9448  0012A4  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9449  0012A6  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9450                           
  9451                           ;stateMachine/gameController.c: 142:     }
  9452  0012AA  EF77  F00A         	goto	l8870
  9453  0012AE                     l8834:
  9454  0012AE  EE20 F004          	lfsr	2,4
  9455  0012B2  5018               	movf	backlightController@g^0,w,c
  9456  0012B4  26D9               	addwf	fsr2l,f,c
  9457  0012B6  5019               	movf	(backlightController@g+1)^0,w,c
  9458  0012B8  22DA               	addwfc	fsr2h,f,c
  9459  0012BA  0E01               	movlw	1
  9460  0012BC  50DB               	movf	plusw2,w,c
  9461  0012BE  E109               	bnz	u5530
  9462  0012C0  0E86               	movlw	134
  9463  0012C2  5CDE               	subwf	postinc2,w,c
  9464  0012C4  A0D8               	btfss	status,0,c
  9465  0012C6  EF67  F009         	goto	u5531
  9466  0012CA  EF69  F009         	goto	u5530
  9467  0012CE                     u5531:
  9468  0012CE  EF87  F009         	goto	l8840
  9469  0012D2                     u5530:
  9470  0012D2  EE20 F004          	lfsr	2,4
  9471  0012D6  5018               	movf	backlightController@g^0,w,c
  9472  0012D8  26D9               	addwf	fsr2l,f,c
  9473  0012DA  5019               	movf	(backlightController@g+1)^0,w,c
  9474  0012DC  22DA               	addwfc	fsr2h,f,c
  9475  0012DE  0E01               	movlw	1
  9476  0012E0  50DB               	movf	plusw2,w,c
  9477  0012E2  E107               	bnz	u5541
  9478  0012E4  0E96               	movlw	150
  9479  0012E6  5CDE               	subwf	postinc2,w,c
  9480  0012E8  B0D8               	btfsc	status,0,c
  9481  0012EA  EF79  F009         	goto	u5541
  9482  0012EE  EF7B  F009         	goto	u5540
  9483  0012F2                     u5541:
  9484  0012F2  EF87  F009         	goto	l8840
  9485  0012F6                     u5540:
  9486  0012F6                     
  9487                           ;stateMachine/gameController.c: 144:     {;stateMachine/gameController.c: 145:         G
      +                          ameParameters_setBackLight(g,6);
  9488  0012F6  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9489  0012FA  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9490  0012FE  0E00               	movlw	0
  9491  001300  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9492  001302  0E06               	movlw	6
  9493  001304  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9494  001306  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9495                           
  9496                           ;stateMachine/gameController.c: 146:     }
  9497  00130A  EF77  F00A         	goto	l8870
  9498  00130E                     l8840:
  9499  00130E  EE20 F004          	lfsr	2,4
  9500  001312  5018               	movf	backlightController@g^0,w,c
  9501  001314  26D9               	addwf	fsr2l,f,c
  9502  001316  5019               	movf	(backlightController@g+1)^0,w,c
  9503  001318  22DA               	addwfc	fsr2h,f,c
  9504  00131A  0E01               	movlw	1
  9505  00131C  50DB               	movf	plusw2,w,c
  9506  00131E  E109               	bnz	u5550
  9507  001320  0E96               	movlw	150
  9508  001322  5CDE               	subwf	postinc2,w,c
  9509  001324  A0D8               	btfss	status,0,c
  9510  001326  EF97  F009         	goto	u5551
  9511  00132A  EF99  F009         	goto	u5550
  9512  00132E                     u5551:
  9513  00132E  EFB7  F009         	goto	l8846
  9514  001332                     u5550:
  9515  001332  EE20 F004          	lfsr	2,4
  9516  001336  5018               	movf	backlightController@g^0,w,c
  9517  001338  26D9               	addwf	fsr2l,f,c
  9518  00133A  5019               	movf	(backlightController@g+1)^0,w,c
  9519  00133C  22DA               	addwfc	fsr2h,f,c
  9520  00133E  0E01               	movlw	1
  9521  001340  50DB               	movf	plusw2,w,c
  9522  001342  E107               	bnz	u5561
  9523  001344  0EA4               	movlw	164
  9524  001346  5CDE               	subwf	postinc2,w,c
  9525  001348  B0D8               	btfsc	status,0,c
  9526  00134A  EFA9  F009         	goto	u5561
  9527  00134E  EFAB  F009         	goto	u5560
  9528  001352                     u5561:
  9529  001352  EFB7  F009         	goto	l8846
  9530  001356                     u5560:
  9531  001356                     
  9532                           ;stateMachine/gameController.c: 148:     {;stateMachine/gameController.c: 149:         G
      +                          ameParameters_setBackLight(g,7);
  9533  001356  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9534  00135A  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9535  00135E  0E00               	movlw	0
  9536  001360  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9537  001362  0E07               	movlw	7
  9538  001364  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9539  001366  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9540                           
  9541                           ;stateMachine/gameController.c: 150:     }
  9542  00136A  EF77  F00A         	goto	l8870
  9543  00136E                     l8846:
  9544  00136E  EE20 F004          	lfsr	2,4
  9545  001372  5018               	movf	backlightController@g^0,w,c
  9546  001374  26D9               	addwf	fsr2l,f,c
  9547  001376  5019               	movf	(backlightController@g+1)^0,w,c
  9548  001378  22DA               	addwfc	fsr2h,f,c
  9549  00137A  0E01               	movlw	1
  9550  00137C  50DB               	movf	plusw2,w,c
  9551  00137E  E109               	bnz	u5570
  9552  001380  0EA4               	movlw	164
  9553  001382  5CDE               	subwf	postinc2,w,c
  9554  001384  A0D8               	btfss	status,0,c
  9555  001386  EFC7  F009         	goto	u5571
  9556  00138A  EFC9  F009         	goto	u5570
  9557  00138E                     u5571:
  9558  00138E  EFE7  F009         	goto	l8852
  9559  001392                     u5570:
  9560  001392  EE20 F004          	lfsr	2,4
  9561  001396  5018               	movf	backlightController@g^0,w,c
  9562  001398  26D9               	addwf	fsr2l,f,c
  9563  00139A  5019               	movf	(backlightController@g+1)^0,w,c
  9564  00139C  22DA               	addwfc	fsr2h,f,c
  9565  00139E  0E01               	movlw	1
  9566  0013A0  50DB               	movf	plusw2,w,c
  9567  0013A2  E107               	bnz	u5581
  9568  0013A4  0EB2               	movlw	178
  9569  0013A6  5CDE               	subwf	postinc2,w,c
  9570  0013A8  B0D8               	btfsc	status,0,c
  9571  0013AA  EFD9  F009         	goto	u5581
  9572  0013AE  EFDB  F009         	goto	u5580
  9573  0013B2                     u5581:
  9574  0013B2  EFE7  F009         	goto	l8852
  9575  0013B6                     u5580:
  9576  0013B6                     
  9577                           ;stateMachine/gameController.c: 152:     {;stateMachine/gameController.c: 153:         G
      +                          ameParameters_setBackLight(g,8);
  9578  0013B6  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9579  0013BA  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9580  0013BE  0E00               	movlw	0
  9581  0013C0  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9582  0013C2  0E08               	movlw	8
  9583  0013C4  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9584  0013C6  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9585                           
  9586                           ;stateMachine/gameController.c: 154:     }
  9587  0013CA  EF77  F00A         	goto	l8870
  9588  0013CE                     l8852:
  9589  0013CE  EE20 F004          	lfsr	2,4
  9590  0013D2  5018               	movf	backlightController@g^0,w,c
  9591  0013D4  26D9               	addwf	fsr2l,f,c
  9592  0013D6  5019               	movf	(backlightController@g+1)^0,w,c
  9593  0013D8  22DA               	addwfc	fsr2h,f,c
  9594  0013DA  0E01               	movlw	1
  9595  0013DC  50DB               	movf	plusw2,w,c
  9596  0013DE  E109               	bnz	u5590
  9597  0013E0  0EB2               	movlw	178
  9598  0013E2  5CDE               	subwf	postinc2,w,c
  9599  0013E4  A0D8               	btfss	status,0,c
  9600  0013E6  EFF7  F009         	goto	u5591
  9601  0013EA  EFF9  F009         	goto	u5590
  9602  0013EE                     u5591:
  9603  0013EE  EF17  F00A         	goto	l8858
  9604  0013F2                     u5590:
  9605  0013F2  EE20 F004          	lfsr	2,4
  9606  0013F6  5018               	movf	backlightController@g^0,w,c
  9607  0013F8  26D9               	addwf	fsr2l,f,c
  9608  0013FA  5019               	movf	(backlightController@g+1)^0,w,c
  9609  0013FC  22DA               	addwfc	fsr2h,f,c
  9610  0013FE  0E01               	movlw	1
  9611  001400  50DB               	movf	plusw2,w,c
  9612  001402  E107               	bnz	u5601
  9613  001404  0EC0               	movlw	192
  9614  001406  5CDE               	subwf	postinc2,w,c
  9615  001408  B0D8               	btfsc	status,0,c
  9616  00140A  EF09  F00A         	goto	u5601
  9617  00140E  EF0B  F00A         	goto	u5600
  9618  001412                     u5601:
  9619  001412  EF17  F00A         	goto	l8858
  9620  001416                     u5600:
  9621  001416                     
  9622                           ;stateMachine/gameController.c: 156:     {;stateMachine/gameController.c: 157:         G
      +                          ameParameters_setBackLight(g,9);
  9623  001416  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9624  00141A  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9625  00141E  0E00               	movlw	0
  9626  001420  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9627  001422  0E09               	movlw	9
  9628  001424  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9629  001426  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9630                           
  9631                           ;stateMachine/gameController.c: 158:     }
  9632  00142A  EF77  F00A         	goto	l8870
  9633  00142E                     l8858:
  9634  00142E  EE20 F004          	lfsr	2,4
  9635  001432  5018               	movf	backlightController@g^0,w,c
  9636  001434  26D9               	addwf	fsr2l,f,c
  9637  001436  5019               	movf	(backlightController@g+1)^0,w,c
  9638  001438  22DA               	addwfc	fsr2h,f,c
  9639  00143A  0E01               	movlw	1
  9640  00143C  50DB               	movf	plusw2,w,c
  9641  00143E  E109               	bnz	u5610
  9642  001440  0EC0               	movlw	192
  9643  001442  5CDE               	subwf	postinc2,w,c
  9644  001444  A0D8               	btfss	status,0,c
  9645  001446  EF27  F00A         	goto	u5611
  9646  00144A  EF29  F00A         	goto	u5610
  9647  00144E                     u5611:
  9648  00144E  EF47  F00A         	goto	l8864
  9649  001452                     u5610:
  9650  001452  EE20 F004          	lfsr	2,4
  9651  001456  5018               	movf	backlightController@g^0,w,c
  9652  001458  26D9               	addwf	fsr2l,f,c
  9653  00145A  5019               	movf	(backlightController@g+1)^0,w,c
  9654  00145C  22DA               	addwfc	fsr2h,f,c
  9655  00145E  0E01               	movlw	1
  9656  001460  50DB               	movf	plusw2,w,c
  9657  001462  E107               	bnz	u5621
  9658  001464  0ECE               	movlw	206
  9659  001466  5CDE               	subwf	postinc2,w,c
  9660  001468  B0D8               	btfsc	status,0,c
  9661  00146A  EF39  F00A         	goto	u5621
  9662  00146E  EF3B  F00A         	goto	u5620
  9663  001472                     u5621:
  9664  001472  EF47  F00A         	goto	l8864
  9665  001476                     u5620:
  9666  001476                     
  9667                           ;stateMachine/gameController.c: 160:     {;stateMachine/gameController.c: 161:         G
      +                          ameParameters_setBackLight(g,10);
  9668  001476  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9669  00147A  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9670  00147E  0E00               	movlw	0
  9671  001480  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9672  001482  0E0A               	movlw	10
  9673  001484  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9674  001486  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9675                           
  9676                           ;stateMachine/gameController.c: 162:     }
  9677  00148A  EF77  F00A         	goto	l8870
  9678  00148E                     l8864:
  9679  00148E  EE20 F004          	lfsr	2,4
  9680  001492  5018               	movf	backlightController@g^0,w,c
  9681  001494  26D9               	addwf	fsr2l,f,c
  9682  001496  5019               	movf	(backlightController@g+1)^0,w,c
  9683  001498  22DA               	addwfc	fsr2h,f,c
  9684  00149A  0E01               	movlw	1
  9685  00149C  50DB               	movf	plusw2,w,c
  9686  00149E  E109               	bnz	u5630
  9687  0014A0  0ECE               	movlw	206
  9688  0014A2  5CDE               	subwf	postinc2,w,c
  9689  0014A4  A0D8               	btfss	status,0,c
  9690  0014A6  EF57  F00A         	goto	u5631
  9691  0014AA  EF59  F00A         	goto	u5630
  9692  0014AE                     u5631:
  9693  0014AE  EF77  F00A         	goto	l630
  9694  0014B2                     u5630:
  9695  0014B2  EE20 F004          	lfsr	2,4
  9696  0014B6  5018               	movf	backlightController@g^0,w,c
  9697  0014B8  26D9               	addwf	fsr2l,f,c
  9698  0014BA  5019               	movf	(backlightController@g+1)^0,w,c
  9699  0014BC  22DA               	addwfc	fsr2h,f,c
  9700  0014BE  0E01               	movlw	1
  9701  0014C0  50DB               	movf	plusw2,w,c
  9702  0014C2  E107               	bnz	u5641
  9703  0014C4  0ED7               	movlw	215
  9704  0014C6  5CDE               	subwf	postinc2,w,c
  9705  0014C8  B0D8               	btfsc	status,0,c
  9706  0014CA  EF69  F00A         	goto	u5641
  9707  0014CE  EF6B  F00A         	goto	u5640
  9708  0014D2                     u5641:
  9709  0014D2  EF77  F00A         	goto	l630
  9710  0014D6                     u5640:
  9711  0014D6                     
  9712                           ;stateMachine/gameController.c: 164:     {;stateMachine/gameController.c: 165:         G
      +                          ameParameters_setBackLight(g,11);
  9713  0014D6  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9714  0014DA  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9715  0014DE  0E00               	movlw	0
  9716  0014E0  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9717  0014E2  0E0B               	movlw	11
  9718  0014E4  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9719  0014E6  ECEC  F026         	call	_GameParameters_setBackLight	;wreg free
  9720  0014EA  EF77  F00A         	goto	l8870
  9721  0014EE                     l630:
  9722  0014EE                     l8870:
  9723                           
  9724                           ;stateMachine/gameController.c: 167:     g->sldParam.value=g->backlight;
  9725  0014EE  C018  FFD9         	movff	backlightController@g,fsr2l
  9726  0014F2  C019  FFDA         	movff	backlightController@g+1,fsr2h
  9727  0014F6  EE10 F0A9          	lfsr	1,169
  9728  0014FA  5018               	movf	backlightController@g^0,w,c
  9729  0014FC  26E1               	addwf	fsr1l,f,c
  9730  0014FE  5019               	movf	(backlightController@g+1)^0,w,c
  9731  001500  22E2               	addwfc	fsr1h,f,c
  9732  001502  CFDE FFE6          	movff	postinc2,postinc1
  9733  001506  CFDD FFE5          	movff	postdec2,postdec1
  9734  00150A  0012               	return		;funcret
  9735  00150C                     __end_of_backlightController:
  9736                           	callstack 0
  9737                           
  9738 ;; *************** function _GameParameters_setBackLight *****************
  9739 ;; Defined at:
  9740 ;;		line 21 in file "class/gameParameters.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9743 ;;		 -> g1(209), 
  9744 ;;  value           2   19[COMRAM] unsigned short 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9756 ;;      Params:         4       0       0       0       0       0       0
  9757 ;;      Locals:         0       0       0       0       0       0       0
  9758 ;;      Temps:          2       0       0       0       0       0       0
  9759 ;;      Totals:         6       0       0       0       0       0       0
  9760 ;;Total ram usage:        6 bytes
  9761 ;; Hardware stack levels used: 1
  9762 ;; Hardware stack levels required when called: 4
  9763 ;; This function calls:
  9764 ;;		Nothing
  9765 ;; This function is called by:
  9766 ;;		_backlightController
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           	psect	text38
  9771  004DD8                     __ptext38:
  9772                           	callstack 0
  9773  004DD8                     _GameParameters_setBackLight:
  9774                           	callstack 21
  9775  004DD8                     
  9776                           ;class/gameParameters.c: 21: void GameParameters_setBackLight(struct GameParameters* s, 
      +                          uint16_t value);class/gameParameters.c: 22: {;class/gameParameters.c: 23:     s->backlig
      +                          ht = value;
  9777  004DD8  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9778  004DDC  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9779  004DE0  C014  FFDE         	movff	GameParameters_setBackLight@value,postinc2
  9780  004DE4  C015  FFDD         	movff	GameParameters_setBackLight@value+1,postdec2
  9781  004DE8                     
  9782                           ;class/gameParameters.c: 24:     if(s->backlight==11)
  9783  004DE8  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9784  004DEC  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9785  004DF0  0E0B               	movlw	11
  9786  004DF2  18DE               	xorwf	postinc2,w,c
  9787  004DF4  10DE               	iorwf	postinc2,w,c
  9788  004DF6  A4D8               	btfss	status,2,c
  9789  004DF8  EF00  F027         	goto	u5121
  9790  004DFC  EF02  F027         	goto	u5120
  9791  004E00                     u5121:
  9792  004E00  EF05  F027         	goto	l8528
  9793  004E04                     u5120:
  9794  004E04                     
  9795                           ;class/gameParameters.c: 25:     {;class/gameParameters.c: 26:         CCPR2L = 255;
  9796  004E04  6867               	setf	103,c	;volatile
  9797                           
  9798                           ;class/gameParameters.c: 27:     }
  9799  004E06  EF0D  F027         	goto	l136
  9800  004E0A                     l8528:
  9801                           
  9802                           ;class/gameParameters.c: 29:     {;class/gameParameters.c: 30:         CCPR2L=(s->backli
      +                          ght)*23;
  9803  004E0A  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9804  004E0E  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9805  004E12  50DF               	movf	indf2,w,c
  9806  004E14  0D17               	mullw	23
  9807  004E16  CFF3 FF67          	movff	prodl,3943	;volatile
  9808  004E1A                     l136:
  9809  004E1A  0012               	return		;funcret
  9810  004E1C                     __end_of_GameParameters_setBackLight:
  9811                           	callstack 0
  9812                           
  9813 ;; *************** function _XF_pushEvent *****************
  9814 ;; Defined at:
  9815 ;;		line 49 in file "xf/xf.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  ev              1    wreg     unsigned char 
  9818 ;;  inISR           1   23[COMRAM] _Bool 
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  ev              1   24[COMRAM] unsigned char 
  9821 ;;  temp            1   25[COMRAM] unsigned char 
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      _Bool 
  9824 ;; Registers used:
  9825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9831 ;;      Params:         1       0       0       0       0       0       0
  9832 ;;      Locals:         2       0       0       0       0       0       0
  9833 ;;      Temps:          0       0       0       0       0       0       0
  9834 ;;      Totals:         3       0       0       0       0       0       0
  9835 ;;Total ram usage:        3 bytes
  9836 ;; Hardware stack levels used: 1
  9837 ;; Hardware stack levels required when called: 5
  9838 ;; This function calls:
  9839 ;;		_ENTERCRITICAL
  9840 ;;		_LEAVECRITICAL
  9841 ;;		___awmod
  9842 ;; This function is called by:
  9843 ;;		_gameControllerController
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           	psect	text39
  9848  0049B8                     __ptext39:
  9849                           	callstack 0
  9850  0049B8                     _XF_pushEvent:
  9851                           	callstack 21
  9852                           
  9853                           ;incstack = 0
  9854                           ;XF_pushEvent@ev stored from wreg
  9855  0049B8  6E19               	movwf	XF_pushEvent@ev^0,c
  9856  0049BA                     
  9857                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
  9858  0049BA  5018               	movf	XF_pushEvent@inISR^0,w,c
  9859  0049BC  ECE9  F027         	call	_ENTERCRITICAL
  9860  0049C0                     
  9861                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
  9862  0049C0  0E01               	movlw	1
  9863  0049C2  0100               	movlb	0	; () banked
  9864  0049C4  25D9               	addwf	(_theXF+36)& (0+255),w,b
  9865  0049C6  6E12               	movwf	___awmod@dividend^0,c
  9866  0049C8  6A13               	clrf	(___awmod@dividend+1)^0,c
  9867  0049CA  0E00               	movlw	0
  9868  0049CC  2213               	addwfc	(___awmod@dividend+1)^0,f,c
  9869  0049CE  0E00               	movlw	0
  9870  0049D0  6E15               	movwf	(___awmod@divisor+1)^0,c
  9871  0049D2  0E0C               	movlw	12
  9872  0049D4  6E14               	movwf	___awmod@divisor^0,c
  9873  0049D6  EC7B  F021         	call	___awmod	;wreg free
  9874  0049DA  5012               	movf	?___awmod^0,w,c
  9875  0049DC  6E1A               	movwf	XF_pushEvent@temp^0,c
  9876  0049DE                     
  9877                           ;xf/xf.c: 55:     if(temp == theXF.out)
  9878  0049DE  501A               	movf	XF_pushEvent@temp^0,w,c
  9879  0049E0  0100               	movlb	0	; () banked
  9880  0049E2  19DA               	xorwf	(_theXF+37)& (0+255),w,b
  9881  0049E4  A4D8               	btfss	status,2,c
  9882  0049E6  EFF7  F024         	goto	u5401
  9883  0049EA  EFF9  F024         	goto	u5400
  9884  0049EE                     u5401:
  9885  0049EE  EFFF  F024         	goto	l8788
  9886  0049F2                     u5400:
  9887  0049F2                     
  9888                           ; BSR set to: 0
  9889                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
  9890  0049F2  5018               	movf	XF_pushEvent@inISR^0,w,c
  9891  0049F4  ECDE  F027         	call	_LEAVECRITICAL
  9892  0049F8                     
  9893                           ;xf/xf.c: 58:       return 0;
  9894  0049F8  0E00               	movlw	0
  9895  0049FA  EF0D  F025         	goto	l655
  9896  0049FE                     l8788:
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
  9900  0049FE  0ECD               	movlw	low (_theXF+24)
  9901  004A00  25D9               	addwf	(_theXF+36)& (0+255),w,b
  9902  004A02  6ED9               	movwf	fsr2l,c
  9903  004A04  6ADA               	clrf	fsr2h,c
  9904  004A06  0E00               	movlw	high (_theXF+24)
  9905  004A08  22DA               	addwfc	fsr2h,f,c
  9906  004A0A  C019  FFDF         	movff	XF_pushEvent@ev,indf2
  9907  004A0E                     
  9908                           ; BSR set to: 0
  9909                           ;xf/xf.c: 61:     theXF.in = temp;
  9910  004A0E  C01A  F0D9         	movff	XF_pushEvent@temp,_theXF+36
  9911  004A12                     
  9912                           ; BSR set to: 0
  9913                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
  9914  004A12  5018               	movf	XF_pushEvent@inISR^0,w,c
  9915  004A14  ECDE  F027         	call	_LEAVECRITICAL
  9916  004A18                     
  9917                           ;xf/xf.c: 63:     return 1;
  9918  004A18  0E01               	movlw	1
  9919  004A1A                     l655:
  9920  004A1A  0012               	return		;funcret
  9921  004A1C                     __end_of_XF_pushEvent:
  9922                           	callstack 0
  9923                           
  9924 ;; *************** function _Paddle_addX *****************
  9925 ;; Defined at:
  9926 ;;		line 23 in file "class/paddle.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;  p               2   36[COMRAM] PTR struct Paddle
  9929 ;;		 -> g1(209), 
  9930 ;;  value           2   38[COMRAM] unsigned short 
  9931 ;;  add             2   40[COMRAM] unsigned short 
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  1    wreg      void 
  9936 ;; Registers used:
  9937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9943 ;;      Params:         6       0       0       0       0       0       0
  9944 ;;      Locals:         0       0       0       0       0       0       0
  9945 ;;      Temps:          8       0       0       0       0       0       0
  9946 ;;      Totals:        14       0       0       0       0       0       0
  9947 ;;Total ram usage:       14 bytes
  9948 ;; Hardware stack levels used: 1
  9949 ;; Hardware stack levels required when called: 5
  9950 ;; This function calls:
  9951 ;;		_LCD_DrawRect
  9952 ;; This function is called by:
  9953 ;;		_gameControllerController
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           	psect	text40
  9958  002FAA                     __ptext40:
  9959                           	callstack 0
  9960  002FAA                     _Paddle_addX:
  9961                           	callstack 21
  9962  002FAA                     
  9963                           ;class/paddle.c: 23: void Paddle_addX(struct Paddle* p,uint16_t value,uint16_t add);clas
      +                          s/paddle.c: 24: {;class/paddle.c: 25:     LCD_DrawRect(p->x,p->y,p->x+p->w,p->y+p->h,1,0
      +                          b1111111111111111);
  9964  002FAA  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9965  002FAE  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9966  002FB2  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
  9967  002FB6  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
  9968  002FBA  EE20 F002          	lfsr	2,2
  9969  002FBE  5025               	movf	Paddle_addX@p^0,w,c
  9970  002FC0  26D9               	addwf	fsr2l,f,c
  9971  002FC2  5026               	movf	(Paddle_addX@p+1)^0,w,c
  9972  002FC4  22DA               	addwfc	fsr2h,f,c
  9973  002FC6  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
  9974  002FCA  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
  9975  002FCE  EE20 F004          	lfsr	2,4
  9976  002FD2  5025               	movf	Paddle_addX@p^0,w,c
  9977  002FD4  26D9               	addwf	fsr2l,f,c
  9978  002FD6  5026               	movf	(Paddle_addX@p+1)^0,w,c
  9979  002FD8  22DA               	addwfc	fsr2h,f,c
  9980  002FDA  CFDE F02B          	movff	postinc2,??_Paddle_addX
  9981  002FDE  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
  9982  002FE2  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9983  002FE6  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9984  002FEA  CFDE F02D          	movff	postinc2,??_Paddle_addX+2
  9985  002FEE  CFDD F02E          	movff	postdec2,??_Paddle_addX+3
  9986  002FF2  502B               	movf	??_Paddle_addX^0,w,c
  9987  002FF4  242D               	addwf	(??_Paddle_addX+2)^0,w,c
  9988  002FF6  6E16               	movwf	LCD_DrawRect@posX2^0,c
  9989  002FF8  502C               	movf	(??_Paddle_addX+1)^0,w,c
  9990  002FFA  202E               	addwfc	(??_Paddle_addX+3)^0,w,c
  9991  002FFC  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
  9992  002FFE  EE20 F006          	lfsr	2,6
  9993  003002  5025               	movf	Paddle_addX@p^0,w,c
  9994  003004  26D9               	addwf	fsr2l,f,c
  9995  003006  5026               	movf	(Paddle_addX@p+1)^0,w,c
  9996  003008  22DA               	addwfc	fsr2h,f,c
  9997  00300A  CFDE F02F          	movff	postinc2,??_Paddle_addX+4
  9998  00300E  CFDD F030          	movff	postdec2,??_Paddle_addX+5
  9999  003012  EE20 F002          	lfsr	2,2
 10000  003016  5025               	movf	Paddle_addX@p^0,w,c
 10001  003018  26D9               	addwf	fsr2l,f,c
 10002  00301A  5026               	movf	(Paddle_addX@p+1)^0,w,c
 10003  00301C  22DA               	addwfc	fsr2h,f,c
 10004  00301E  CFDE F031          	movff	postinc2,??_Paddle_addX+6
 10005  003022  CFDD F032          	movff	postdec2,??_Paddle_addX+7
 10006  003026  502F               	movf	(??_Paddle_addX+4)^0,w,c
 10007  003028  2431               	addwf	(??_Paddle_addX+6)^0,w,c
 10008  00302A  6E18               	movwf	LCD_DrawRect@posY2^0,c
 10009  00302C  5030               	movf	(??_Paddle_addX+5)^0,w,c
 10010  00302E  2032               	addwfc	(??_Paddle_addX+7)^0,w,c
 10011  003030  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 10012  003032  0E01               	movlw	1
 10013  003034  6E1A               	movwf	LCD_DrawRect@fill^0,c
 10014  003036  0EFF               	movlw	255
 10015  003038  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 10016  00303A  681B               	setf	LCD_DrawRect@color^0,c
 10017  00303C  EC68  F010         	call	_LCD_DrawRect	;wreg free
 10018  003040                     
 10019                           ;class/paddle.c: 26:     if(add==1)
 10020  003040  0429               	decf	Paddle_addX@add^0,w,c
 10021  003042  102A               	iorwf	(Paddle_addX@add+1)^0,w,c
 10022  003044  A4D8               	btfss	status,2,c
 10023  003046  EF27  F018         	goto	u5291
 10024  00304A  EF29  F018         	goto	u5290
 10025  00304E                     u5291:
 10026  00304E  EF7A  F018         	goto	l8682
 10027  003052                     u5290:
 10028  003052                     
 10029                           ;class/paddle.c: 27:     {;class/paddle.c: 28:         p->x=(p->x)+value;
 10030  003052  C025  FFD9         	movff	Paddle_addX@p,fsr2l
 10031  003056  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
 10032  00305A  CFDE F02B          	movff	postinc2,??_Paddle_addX
 10033  00305E  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
 10034  003062  5027               	movf	Paddle_addX@value^0,w,c
 10035  003064  262B               	addwf	??_Paddle_addX^0,f,c
 10036  003066  5028               	movf	(Paddle_addX@value+1)^0,w,c
 10037  003068  222C               	addwfc	(??_Paddle_addX+1)^0,f,c
 10038  00306A  C025  FFD9         	movff	Paddle_addX@p,fsr2l
 10039  00306E  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
 10040  003072  C02B  FFDE         	movff	??_Paddle_addX,postinc2
 10041  003076  C02C  FFDD         	movff	??_Paddle_addX+1,postdec2
 10042                           
 10043                           ;class/paddle.c: 29:         if((p->x+p->w)>239)
 10044  00307A  EE20 F004          	lfsr	2,4
 10045  00307E  5025               	movf	Paddle_addX@p^0,w,c
 10046  003080  26D9               	addwf	fsr2l,f,c
 10047  003082  5026               	movf	(Paddle_addX@p+1)^0,w,c
 10048  003084  22DA               	addwfc	fsr2h,f,c
 10049  003086  CFDE F02B          	movff	postinc2,??_Paddle_addX
 10050  00308A  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
 10051  00308E  C025  FFD9         	movff	Paddle_addX@p,fsr2l
 10052  003092  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
 10053  003096  CFDE F02D          	movff	postinc2,??_Paddle_addX+2
 10054  00309A  CFDD F02E          	movff	postdec2,??_Paddle_addX+3
 10055  00309E  502B               	movf	??_Paddle_addX^0,w,c
 10056  0030A0  262D               	addwf	(??_Paddle_addX+2)^0,f,c
 10057  0030A2  502C               	movf	(??_Paddle_addX+1)^0,w,c
 10058  0030A4  222E               	addwfc	(??_Paddle_addX+3)^0,f,c
 10059  0030A6  502E               	movf	(??_Paddle_addX+3)^0,w,c
 10060  0030A8  E109               	bnz	u5300
 10061  0030AA  0EF0               	movlw	240
 10062  0030AC  5C2D               	subwf	(??_Paddle_addX+2)^0,w,c
 10063  0030AE  A0D8               	btfss	status,0,c
 10064  0030B0  EF5C  F018         	goto	u5301
 10065  0030B4  EF5E  F018         	goto	u5300
 10066  0030B8                     u5301:
 10067  0030B8  EFA6  F018         	goto	l30
 10068  0030BC                     u5300:
 10069  0030BC                     
 10070                           ;class/paddle.c: 30:         {;class/paddle.c: 31:             p->x=239-(p->w);
 10071  0030BC  EE20 F004          	lfsr	2,4
 10072  0030C0  5025               	movf	Paddle_addX@p^0,w,c
 10073  0030C2  26D9               	addwf	fsr2l,f,c
 10074  0030C4  5026               	movf	(Paddle_addX@p+1)^0,w,c
 10075  0030C6  22DA               	addwfc	fsr2h,f,c
 10076  0030C8  CFDE F02B          	movff	postinc2,??_Paddle_addX
 10077  0030CC  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
 10078  0030D0  0EEF               	movlw	239
 10079  0030D2  6E2D               	movwf	(??_Paddle_addX+2)^0,c
 10080  0030D4  0E00               	movlw	0
 10081  0030D6  6E2E               	movwf	(??_Paddle_addX+3)^0,c
 10082  0030D8  502B               	movf	??_Paddle_addX^0,w,c
 10083  0030DA  5E2D               	subwf	(??_Paddle_addX+2)^0,f,c
 10084  0030DC  502C               	movf	(??_Paddle_addX+1)^0,w,c
 10085  0030DE  5A2E               	subwfb	(??_Paddle_addX+3)^0,f,c
 10086  0030E0  C025  FFD9         	movff	Paddle_addX@p,fsr2l
 10087  0030E4  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
 10088  0030E8  C02D  FFDE         	movff	??_Paddle_addX+2,postinc2
 10089  0030EC  C02E  FFDD         	movff	??_Paddle_addX+3,postdec2
 10090  0030F0  EFA6  F018         	goto	l30
 10091  0030F4                     l8682:
 10092                           
 10093                           ;class/paddle.c: 35:     {;class/paddle.c: 36:         p->x=(p->x)-value;
 10094  0030F4  C025  FFD9         	movff	Paddle_addX@p,fsr2l
 10095  0030F8  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
 10096  0030FC  CFDE F02B          	movff	postinc2,??_Paddle_addX
 10097  003100  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
 10098  003104  5027               	movf	Paddle_addX@value^0,w,c
 10099  003106  5E2B               	subwf	??_Paddle_addX^0,f,c
 10100  003108  5028               	movf	(Paddle_addX@value+1)^0,w,c
 10101  00310A  5A2C               	subwfb	(??_Paddle_addX+1)^0,f,c
 10102  00310C  C025  FFD9         	movff	Paddle_addX@p,fsr2l
 10103  003110  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
 10104  003114  C02B  FFDE         	movff	??_Paddle_addX,postinc2
 10105  003118  C02C  FFDD         	movff	??_Paddle_addX+1,postdec2
 10106                           
 10107                           ;class/paddle.c: 37:         if((p->x)<5)
 10108  00311C  C025  FFD9         	movff	Paddle_addX@p,fsr2l
 10109  003120  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
 10110  003124  0E01               	movlw	1
 10111  003126  50DB               	movf	plusw2,w,c
 10112  003128  E107               	bnz	u5311
 10113  00312A  0E05               	movlw	5
 10114  00312C  5CDE               	subwf	postinc2,w,c
 10115  00312E  B0D8               	btfsc	status,0,c
 10116  003130  EF9C  F018         	goto	u5311
 10117  003134  EF9E  F018         	goto	u5310
 10118  003138                     u5311:
 10119  003138  EFA6  F018         	goto	l30
 10120  00313C                     u5310:
 10121  00313C                     
 10122                           ;class/paddle.c: 38:         {;class/paddle.c: 39:             p->x=5;
 10123  00313C  C025  FFD9         	movff	Paddle_addX@p,fsr2l
 10124  003140  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
 10125  003144  0E05               	movlw	5
 10126  003146  6EDE               	movwf	postinc2,c
 10127  003148  0E00               	movlw	0
 10128  00314A  6EDD               	movwf	postdec2,c
 10129  00314C                     l30:
 10130  00314C  0012               	return		;funcret
 10131  00314E                     __end_of_Paddle_addX:
 10132                           	callstack 0
 10133                           
 10134 ;; *************** function _LCD_InSlider *****************
 10135 ;; Defined at:
 10136 ;;		line 546 in file "libraries/lcd_highlevel.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  slider          2   17[COMRAM] PTR struct .
 10139 ;;		 -> g1(209), 
 10140 ;;  posX            2   19[COMRAM] unsigned short 
 10141 ;;  posY            2   21[COMRAM] unsigned short 
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;		None
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      unsigned char 
 10146 ;; Registers used:
 10147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10153 ;;      Params:         6       0       0       0       0       0       0
 10154 ;;      Locals:         0       0       0       0       0       0       0
 10155 ;;      Temps:          4       0       0       0       0       0       0
 10156 ;;      Totals:        10       0       0       0       0       0       0
 10157 ;;Total ram usage:       10 bytes
 10158 ;; Hardware stack levels used: 1
 10159 ;; Hardware stack levels required when called: 4
 10160 ;; This function calls:
 10161 ;;		Nothing
 10162 ;; This function is called by:
 10163 ;;		_gameControllerController
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           	psect	text41
 10168  003994                     __ptext41:
 10169                           	callstack 0
 10170  003994                     _LCD_InSlider:
 10171                           	callstack 22
 10172  003994                     
 10173                           ;libraries/lcd_highlevel.c: 546: uint8_t LCD_InSlider(sld_t * slider, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 547: {;libraries/lcd_highlevel.c: 549:   if(posX 
      +                          < slider->posX)
 10174  003994  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
 10175  003998  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
 10176  00399C  50DE               	movf	postinc2,w,c
 10177  00399E  5C14               	subwf	LCD_InSlider@posX^0,w,c
 10178  0039A0  50DE               	movf	postinc2,w,c
 10179  0039A2  5815               	subwfb	(LCD_InSlider@posX+1)^0,w,c
 10180  0039A4  B0D8               	btfsc	status,0,c
 10181  0039A6  EFD7  F01C         	goto	u5361
 10182  0039AA  EFD9  F01C         	goto	u5360
 10183  0039AE                     u5361:
 10184  0039AE  EFDC  F01C         	goto	l8754
 10185  0039B2                     u5360:
 10186  0039B2                     l8750:
 10187                           
 10188                           ;libraries/lcd_highlevel.c: 550:   {;libraries/lcd_highlevel.c: 551:     return 0;
 10189  0039B2  0E00               	movlw	0
 10190  0039B4  EF38  F01D         	goto	l254
 10191  0039B8                     l8754:
 10192                           
 10193                           ;libraries/lcd_highlevel.c: 554:   if(posX > (slider->posX + slider->width))
 10194  0039B8  EE20 F004          	lfsr	2,4
 10195  0039BC  5012               	movf	LCD_InSlider@slider^0,w,c
 10196  0039BE  26D9               	addwf	fsr2l,f,c
 10197  0039C0  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10198  0039C2  22DA               	addwfc	fsr2h,f,c
 10199  0039C4  CFDE F018          	movff	postinc2,??_LCD_InSlider
 10200  0039C8  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
 10201  0039CC  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
 10202  0039D0  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
 10203  0039D4  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
 10204  0039D8  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
 10205  0039DC  5018               	movf	??_LCD_InSlider^0,w,c
 10206  0039DE  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
 10207  0039E0  5019               	movf	(??_LCD_InSlider+1)^0,w,c
 10208  0039E2  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
 10209  0039E4  5014               	movf	LCD_InSlider@posX^0,w,c
 10210  0039E6  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
 10211  0039E8  5015               	movf	(LCD_InSlider@posX+1)^0,w,c
 10212  0039EA  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
 10213  0039EC  B0D8               	btfsc	status,0,c
 10214  0039EE  EFFB  F01C         	goto	u5371
 10215  0039F2  EFFD  F01C         	goto	u5370
 10216  0039F6                     u5371:
 10217  0039F6  EFFF  F01C         	goto	l8760
 10218  0039FA                     u5370:
 10219  0039FA  EFD9  F01C         	goto	l8750
 10220  0039FE                     l8760:
 10221                           
 10222                           ;libraries/lcd_highlevel.c: 559:   if(posY < slider->posY)
 10223  0039FE  EE20 F002          	lfsr	2,2
 10224  003A02  5012               	movf	LCD_InSlider@slider^0,w,c
 10225  003A04  26D9               	addwf	fsr2l,f,c
 10226  003A06  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10227  003A08  22DA               	addwfc	fsr2h,f,c
 10228  003A0A  50DE               	movf	postinc2,w,c
 10229  003A0C  5C16               	subwf	LCD_InSlider@posY^0,w,c
 10230  003A0E  50DE               	movf	postinc2,w,c
 10231  003A10  5817               	subwfb	(LCD_InSlider@posY+1)^0,w,c
 10232  003A12  B0D8               	btfsc	status,0,c
 10233  003A14  EF0E  F01D         	goto	u5381
 10234  003A18  EF10  F01D         	goto	u5380
 10235  003A1C                     u5381:
 10236  003A1C  EF12  F01D         	goto	l8766
 10237  003A20                     u5380:
 10238  003A20  EFD9  F01C         	goto	l8750
 10239  003A24                     l8766:
 10240                           
 10241                           ;libraries/lcd_highlevel.c: 564:   if(posY > (slider->posY + slider->height))
 10242  003A24  EE20 F006          	lfsr	2,6
 10243  003A28  5012               	movf	LCD_InSlider@slider^0,w,c
 10244  003A2A  26D9               	addwf	fsr2l,f,c
 10245  003A2C  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10246  003A2E  22DA               	addwfc	fsr2h,f,c
 10247  003A30  CFDE F018          	movff	postinc2,??_LCD_InSlider
 10248  003A34  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
 10249  003A38  EE20 F002          	lfsr	2,2
 10250  003A3C  5012               	movf	LCD_InSlider@slider^0,w,c
 10251  003A3E  26D9               	addwf	fsr2l,f,c
 10252  003A40  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10253  003A42  22DA               	addwfc	fsr2h,f,c
 10254  003A44  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
 10255  003A48  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
 10256  003A4C  5018               	movf	??_LCD_InSlider^0,w,c
 10257  003A4E  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
 10258  003A50  5019               	movf	(??_LCD_InSlider+1)^0,w,c
 10259  003A52  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
 10260  003A54  5016               	movf	LCD_InSlider@posY^0,w,c
 10261  003A56  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
 10262  003A58  5017               	movf	(LCD_InSlider@posY+1)^0,w,c
 10263  003A5A  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
 10264  003A5C  B0D8               	btfsc	status,0,c
 10265  003A5E  EF33  F01D         	goto	u5391
 10266  003A62  EF35  F01D         	goto	u5390
 10267  003A66                     u5391:
 10268  003A66  EF37  F01D         	goto	l8772
 10269  003A6A                     u5390:
 10270  003A6A  EFD9  F01C         	goto	l8750
 10271  003A6E                     l8772:
 10272                           
 10273                           ;libraries/lcd_highlevel.c: 568:   return 1;
 10274  003A6E  0E01               	movlw	1
 10275  003A70                     l254:
 10276  003A70  0012               	return		;funcret
 10277  003A72                     __end_of_LCD_InSlider:
 10278                           	callstack 0
 10279                           
 10280 ;; *************** function _LCD_InButton *****************
 10281 ;; Defined at:
 10282 ;;		line 514 in file "libraries/lcd_highlevel.c"
 10283 ;; Parameters:    Size  Location     Type
 10284 ;;  button          2   17[COMRAM] PTR struct .
 10285 ;;		 -> g1(209), 
 10286 ;;  posX            2   19[COMRAM] unsigned short 
 10287 ;;  posY            2   21[COMRAM] unsigned short 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;		None
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  1    wreg      unsigned char 
 10292 ;; Registers used:
 10293 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10299 ;;      Params:         6       0       0       0       0       0       0
 10300 ;;      Locals:         0       0       0       0       0       0       0
 10301 ;;      Temps:          4       0       0       0       0       0       0
 10302 ;;      Totals:        10       0       0       0       0       0       0
 10303 ;;Total ram usage:       10 bytes
 10304 ;; Hardware stack levels used: 1
 10305 ;; Hardware stack levels required when called: 4
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_gameControllerController
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text42
 10314  003A72                     __ptext42:
 10315                           	callstack 0
 10316  003A72                     _LCD_InButton:
 10317                           	callstack 22
 10318  003A72                     
 10319                           ;libraries/lcd_highlevel.c: 514: uint8_t LCD_InButton(btn_t * button, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 515: {;libraries/lcd_highlevel.c: 517:   if(posX 
      +                          < button->posX)
 10320  003A72  C012  FFD9         	movff	LCD_InButton@button,fsr2l
 10321  003A76  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
 10322  003A7A  50DE               	movf	postinc2,w,c
 10323  003A7C  5C14               	subwf	LCD_InButton@posX^0,w,c
 10324  003A7E  50DE               	movf	postinc2,w,c
 10325  003A80  5815               	subwfb	(LCD_InButton@posX+1)^0,w,c
 10326  003A82  B0D8               	btfsc	status,0,c
 10327  003A84  EF46  F01D         	goto	u5321
 10328  003A88  EF48  F01D         	goto	u5320
 10329  003A8C                     u5321:
 10330  003A8C  EF4B  F01D         	goto	l8726
 10331  003A90                     u5320:
 10332  003A90                     l8722:
 10333                           
 10334                           ;libraries/lcd_highlevel.c: 518:   {;libraries/lcd_highlevel.c: 519:     return 0;
 10335  003A90  0E00               	movlw	0
 10336  003A92  EFA7  F01D         	goto	l247
 10337  003A96                     l8726:
 10338                           
 10339                           ;libraries/lcd_highlevel.c: 522:   if(posX > (button->posX + button->width))
 10340  003A96  EE20 F004          	lfsr	2,4
 10341  003A9A  5012               	movf	LCD_InButton@button^0,w,c
 10342  003A9C  26D9               	addwf	fsr2l,f,c
 10343  003A9E  5013               	movf	(LCD_InButton@button+1)^0,w,c
 10344  003AA0  22DA               	addwfc	fsr2h,f,c
 10345  003AA2  CFDE F018          	movff	postinc2,??_LCD_InButton
 10346  003AA6  CFDD F019          	movff	postdec2,??_LCD_InButton+1
 10347  003AAA  C012  FFD9         	movff	LCD_InButton@button,fsr2l
 10348  003AAE  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
 10349  003AB2  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
 10350  003AB6  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
 10351  003ABA  5018               	movf	??_LCD_InButton^0,w,c
 10352  003ABC  261A               	addwf	(??_LCD_InButton+2)^0,f,c
 10353  003ABE  5019               	movf	(??_LCD_InButton+1)^0,w,c
 10354  003AC0  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
 10355  003AC2  5014               	movf	LCD_InButton@posX^0,w,c
 10356  003AC4  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
 10357  003AC6  5015               	movf	(LCD_InButton@posX+1)^0,w,c
 10358  003AC8  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
 10359  003ACA  B0D8               	btfsc	status,0,c
 10360  003ACC  EF6A  F01D         	goto	u5331
 10361  003AD0  EF6C  F01D         	goto	u5330
 10362  003AD4                     u5331:
 10363  003AD4  EF6E  F01D         	goto	l8732
 10364  003AD8                     u5330:
 10365  003AD8  EF48  F01D         	goto	l8722
 10366  003ADC                     l8732:
 10367                           
 10368                           ;libraries/lcd_highlevel.c: 527:   if(posY < button->posY)
 10369  003ADC  EE20 F002          	lfsr	2,2
 10370  003AE0  5012               	movf	LCD_InButton@button^0,w,c
 10371  003AE2  26D9               	addwf	fsr2l,f,c
 10372  003AE4  5013               	movf	(LCD_InButton@button+1)^0,w,c
 10373  003AE6  22DA               	addwfc	fsr2h,f,c
 10374  003AE8  50DE               	movf	postinc2,w,c
 10375  003AEA  5C16               	subwf	LCD_InButton@posY^0,w,c
 10376  003AEC  50DE               	movf	postinc2,w,c
 10377  003AEE  5817               	subwfb	(LCD_InButton@posY+1)^0,w,c
 10378  003AF0  B0D8               	btfsc	status,0,c
 10379  003AF2  EF7D  F01D         	goto	u5341
 10380  003AF6  EF7F  F01D         	goto	u5340
 10381  003AFA                     u5341:
 10382  003AFA  EF81  F01D         	goto	l8738
 10383  003AFE                     u5340:
 10384  003AFE  EF48  F01D         	goto	l8722
 10385  003B02                     l8738:
 10386                           
 10387                           ;libraries/lcd_highlevel.c: 532:   if(posY > (button->posY + button->height))
 10388  003B02  EE20 F006          	lfsr	2,6
 10389  003B06  5012               	movf	LCD_InButton@button^0,w,c
 10390  003B08  26D9               	addwf	fsr2l,f,c
 10391  003B0A  5013               	movf	(LCD_InButton@button+1)^0,w,c
 10392  003B0C  22DA               	addwfc	fsr2h,f,c
 10393  003B0E  CFDE F018          	movff	postinc2,??_LCD_InButton
 10394  003B12  CFDD F019          	movff	postdec2,??_LCD_InButton+1
 10395  003B16  EE20 F002          	lfsr	2,2
 10396  003B1A  5012               	movf	LCD_InButton@button^0,w,c
 10397  003B1C  26D9               	addwf	fsr2l,f,c
 10398  003B1E  5013               	movf	(LCD_InButton@button+1)^0,w,c
 10399  003B20  22DA               	addwfc	fsr2h,f,c
 10400  003B22  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
 10401  003B26  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
 10402  003B2A  5018               	movf	??_LCD_InButton^0,w,c
 10403  003B2C  261A               	addwf	(??_LCD_InButton+2)^0,f,c
 10404  003B2E  5019               	movf	(??_LCD_InButton+1)^0,w,c
 10405  003B30  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
 10406  003B32  5016               	movf	LCD_InButton@posY^0,w,c
 10407  003B34  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
 10408  003B36  5017               	movf	(LCD_InButton@posY+1)^0,w,c
 10409  003B38  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
 10410  003B3A  B0D8               	btfsc	status,0,c
 10411  003B3C  EFA2  F01D         	goto	u5351
 10412  003B40  EFA4  F01D         	goto	u5350
 10413  003B44                     u5351:
 10414  003B44  EFA6  F01D         	goto	l8744
 10415  003B48                     u5350:
 10416  003B48  EF48  F01D         	goto	l8722
 10417  003B4C                     l8744:
 10418                           
 10419                           ;libraries/lcd_highlevel.c: 536:   return 1;
 10420  003B4C  0E01               	movlw	1
 10421  003B4E                     l247:
 10422  003B4E  0012               	return		;funcret
 10423  003B50                     __end_of_LCD_InButton:
 10424                           	callstack 0
 10425                           
 10426 ;; *************** function _displaySM *****************
 10427 ;; Defined at:
 10428 ;;		line 18 in file "stateMachine/display.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  ev              1    wreg     unsigned char 
 10431 ;;  g               2   64[BANK0 ] PTR struct GameParameter
 10432 ;;		 -> g1(209), 
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;  ev              1   68[BANK0 ] unsigned char 
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      void 
 10437 ;; Registers used:
 10438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10444 ;;      Params:         0       2       0       0       0       0       0
 10445 ;;      Locals:         0       1       0       0       0       0       0
 10446 ;;      Temps:          0       2       0       0       0       0       0
 10447 ;;      Totals:         0       5       0       0       0       0       0
 10448 ;;Total ram usage:        5 bytes
 10449 ;; Hardware stack levels used: 1
 10450 ;; Hardware stack levels required when called: 9
 10451 ;; This function calls:
 10452 ;;		_displayController
 10453 ;; This function is called by:
 10454 ;;		_Factory_exec
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458                           	psect	text43
 10459  003CF2                     __ptext43:
 10460                           	callstack 0
 10461  003CF2                     _displaySM:
 10462                           	callstack 20
 10463                           
 10464                           ;incstack = 0
 10465                           ;displaySM@ev stored from wreg
 10466  003CF2  0100               	movlb	0	; () banked
 10467  003CF4  6FA4               	movwf	displaySM@ev& (0+255),b
 10468  003CF6                     
 10469                           ;stateMachine/display.c: 18: void displaySM(Event ev, GameParameters* g);stateMachine/di
      +                          splay.c: 19: {;stateMachine/display.c: 20:    switch(displayState)
 10470  003CF6  EFC3  F01E         	goto	l9242
 10471  003CFA                     l9214:
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;stateMachine/display.c: 23:             if((ev==evOnePlayer)||(ev==evTwoPlayer))
 10475  003CFA  0E05               	movlw	5
 10476  003CFC  19A4               	xorwf	displaySM@ev& (0+255),w,b
 10477  003CFE  B4D8               	btfsc	status,2,c
 10478  003D00  EF84  F01E         	goto	u5921
 10479  003D04  EF86  F01E         	goto	u5920
 10480  003D08                     u5921:
 10481  003D08  EF8F  F01E         	goto	l9218
 10482  003D0C                     u5920:
 10483  003D0C                     
 10484                           ; BSR set to: 0
 10485  003D0C  0E06               	movlw	6
 10486  003D0E  19A4               	xorwf	displaySM@ev& (0+255),w,b
 10487  003D10  A4D8               	btfss	status,2,c
 10488  003D12  EF8D  F01E         	goto	u5931
 10489  003D16  EF8F  F01E         	goto	u5930
 10490  003D1A                     u5931:
 10491  003D1A  EF97  F01E         	goto	l9222
 10492  003D1E                     u5930:
 10493  003D1E                     l9218:
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;stateMachine/display.c: 24:             {;stateMachine/display.c: 25:                 d
      +                          isplayState=INGAME;
 10497  003D1E  0E02               	movlw	2
 10498  003D20  6FDD               	movwf	_displayState& (0+255),b
 10499  003D22                     
 10500                           ; BSR set to: 0
 10501                           ;stateMachine/display.c: 26:                 displayController(g);
 10502  003D22  C0A0  F09E         	movff	displaySM@g,displayController@g
 10503  003D26  C0A1  F09F         	movff	displaySM@g+1,displayController@g+1
 10504  003D2A  ECA7  F024         	call	_displayController	;wreg free
 10505  003D2E                     l9222:
 10506                           
 10507                           ;stateMachine/display.c: 28:             if(ev==evParameters)
 10508  003D2E  0E07               	movlw	7
 10509  003D30  0100               	movlb	0	; () banked
 10510  003D32  19A4               	xorwf	displaySM@ev& (0+255),w,b
 10511  003D34  A4D8               	btfss	status,2,c
 10512  003D36  EF9F  F01E         	goto	u5941
 10513  003D3A  EFA1  F01E         	goto	u5940
 10514  003D3E                     u5941:
 10515  003D3E  EFDD  F01E         	goto	l544
 10516  003D42                     u5940:
 10517  003D42                     
 10518                           ; BSR set to: 0
 10519                           ;stateMachine/display.c: 29:             {;stateMachine/display.c: 30:                 d
      +                          isplayState=PARAMETERS;
 10520  003D42  0E01               	movlw	1
 10521  003D44  6FDD               	movwf	_displayState& (0+255),b
 10522  003D46                     l9226:
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;stateMachine/display.c: 31:                 displayController(g);
 10526  003D46  C0A0  F09E         	movff	displaySM@g,displayController@g
 10527  003D4A  C0A1  F09F         	movff	displaySM@g+1,displayController@g+1
 10528  003D4E  ECA7  F024         	call	_displayController	;wreg free
 10529  003D52  EFDD  F01E         	goto	l544
 10530  003D56                     l9228:
 10531                           
 10532                           ; BSR set to: 0
 10533                           ;stateMachine/display.c: 35:             if(ev==evLeaveParam)
 10534  003D56  0E08               	movlw	8
 10535  003D58  19A4               	xorwf	displaySM@ev& (0+255),w,b
 10536  003D5A  A4D8               	btfss	status,2,c
 10537  003D5C  EFB2  F01E         	goto	u5951
 10538  003D60  EFB4  F01E         	goto	u5950
 10539  003D64                     u5951:
 10540  003D64  EFDD  F01E         	goto	l544
 10541  003D68                     u5950:
 10542  003D68                     l9230:
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;stateMachine/display.c: 36:             {;stateMachine/display.c: 37:                 d
      +                          isplayState=WELCOME;
 10546  003D68  0E00               	movlw	0
 10547  003D6A  6FDD               	movwf	_displayState& (0+255),b
 10548  003D6C  EFA3  F01E         	goto	l9226
 10549  003D70                     l9234:
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;stateMachine/display.c: 42:             if(ev==evNewGame)
 10553  003D70  0E09               	movlw	9
 10554  003D72  19A4               	xorwf	displaySM@ev& (0+255),w,b
 10555  003D74  A4D8               	btfss	status,2,c
 10556  003D76  EFBF  F01E         	goto	u5961
 10557  003D7A  EFC1  F01E         	goto	u5960
 10558  003D7E                     u5961:
 10559  003D7E  EFDD  F01E         	goto	l544
 10560  003D82                     u5960:
 10561  003D82  EFB4  F01E         	goto	l9230
 10562  003D86                     l9242:
 10563  003D86  0100               	movlb	0	; () banked
 10564  003D88  51DD               	movf	_displayState& (0+255),w,b
 10565  003D8A  6FA2               	movwf	??_displaySM& (0+255),b
 10566  003D8C  6BA3               	clrf	(??_displaySM+1)& (0+255),b
 10567                           
 10568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10569                           ; Switch size 1, requested type "simple"
 10570                           ; Number of cases is 1, Range of values is 0 to 0
 10571                           ; switch strategies available:
 10572                           ; Name         Instructions Cycles
 10573                           ; simple_byte            4     3 (average)
 10574                           ;	Chosen strategy is simple_byte
 10575  003D8E  51A3               	movf	(??_displaySM+1)& (0+255),w,b
 10576  003D90  0A00               	xorlw	0	; case 0
 10577  003D92  B4D8               	btfsc	status,2,c
 10578  003D94  EFCE  F01E         	goto	l9568
 10579  003D98  EFDD  F01E         	goto	l544
 10580  003D9C                     l9568:
 10581                           
 10582                           ; BSR set to: 0
 10583                           ; Switch size 1, requested type "simple"
 10584                           ; Number of cases is 3, Range of values is 0 to 2
 10585                           ; switch strategies available:
 10586                           ; Name         Instructions Cycles
 10587                           ; simple_byte           10     6 (average)
 10588                           ;	Chosen strategy is simple_byte
 10589  003D9C  51A2               	movf	??_displaySM& (0+255),w,b
 10590  003D9E  0A00               	xorlw	0	; case 0
 10591  003DA0  B4D8               	btfsc	status,2,c
 10592  003DA2  EF7D  F01E         	goto	l9214
 10593  003DA6  0A01               	xorlw	1	; case 1
 10594  003DA8  B4D8               	btfsc	status,2,c
 10595  003DAA  EFAB  F01E         	goto	l9228
 10596  003DAE  0A03               	xorlw	3	; case 2
 10597  003DB0  B4D8               	btfsc	status,2,c
 10598  003DB2  EFB8  F01E         	goto	l9234
 10599  003DB6  EFDD  F01E         	goto	l544
 10600  003DBA                     l544:
 10601  003DBA  0012               	return		;funcret
 10602  003DBC                     __end_of_displaySM:
 10603                           	callstack 0
 10604                           
 10605 ;; *************** function _displayController *****************
 10606 ;; Defined at:
 10607 ;;		line 52 in file "stateMachine/display.c"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;  g               2   62[BANK0 ] PTR struct GameParameter
 10610 ;;		 -> g1(209), 
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;		None
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10622 ;;      Params:         0       2       0       0       0       0       0
 10623 ;;      Locals:         0       0       0       0       0       0       0
 10624 ;;      Temps:          2       0       0       0       0       0       0
 10625 ;;      Totals:         2       2       0       0       0       0       0
 10626 ;;Total ram usage:        4 bytes
 10627 ;; Hardware stack levels used: 1
 10628 ;; Hardware stack levels required when called: 8
 10629 ;; This function calls:
 10630 ;;		_Menu_inGameDraw
 10631 ;;		_Menu_parametersDraw
 10632 ;;		_Menu_welcomeDraw
 10633 ;; This function is called by:
 10634 ;;		_displayInit
 10635 ;;		_displaySM
 10636 ;; This function uses a non-reentrant model
 10637 ;;
 10638                           
 10639                           	psect	text44
 10640  00494E                     __ptext44:
 10641                           	callstack 0
 10642  00494E                     _displayController:
 10643                           	callstack 19
 10644  00494E                     
 10645                           ;stateMachine/display.c: 52: void displayController(GameParameters* g);stateMachine/disp
      +                          lay.c: 53: {;stateMachine/display.c: 54:     switch(displayState)
 10646  00494E  EFC1  F024         	goto	l8950
 10647  004952                     l8942:
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;stateMachine/display.c: 58:             Menu_welcomeDraw(g);
 10651  004952  C09E  F09C         	movff	displayController@g,Menu_welcomeDraw@g
 10652  004956  C09F  F09D         	movff	displayController@g+1,Menu_welcomeDraw@g+1
 10653  00495A  ECF7  F023         	call	_Menu_welcomeDraw	;wreg free
 10654                           
 10655                           ;stateMachine/display.c: 59:             break;
 10656  00495E  EFDB  F024         	goto	l553
 10657  004962                     l8944:
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;stateMachine/display.c: 62:             Menu_parametersDraw(g);
 10661  004962  C09E  F09C         	movff	displayController@g,Menu_parametersDraw@g
 10662  004966  C09F  F09D         	movff	displayController@g+1,Menu_parametersDraw@g+1
 10663  00496A  ECB6  F023         	call	_Menu_parametersDraw	;wreg free
 10664                           
 10665                           ;stateMachine/display.c: 63:             break;
 10666  00496E  EFDB  F024         	goto	l553
 10667  004972                     l8946:
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;stateMachine/display.c: 68:             Menu_inGameDraw(g);
 10671  004972  C09E  F09C         	movff	displayController@g,Menu_inGameDraw@g
 10672  004976  C09F  F09D         	movff	displayController@g+1,Menu_inGameDraw@g+1
 10673  00497A  EC1E  F023         	call	_Menu_inGameDraw	;wreg free
 10674                           
 10675                           ;stateMachine/display.c: 69:             break;
 10676  00497E  EFDB  F024         	goto	l553
 10677  004982                     l8950:
 10678  004982  0100               	movlb	0	; () banked
 10679  004984  51DD               	movf	_displayState& (0+255),w,b
 10680  004986  6E45               	movwf	??_displayController^0,c
 10681  004988  6A46               	clrf	(??_displayController+1)^0,c
 10682                           
 10683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10684                           ; Switch size 1, requested type "simple"
 10685                           ; Number of cases is 1, Range of values is 0 to 0
 10686                           ; switch strategies available:
 10687                           ; Name         Instructions Cycles
 10688                           ; simple_byte            4     3 (average)
 10689                           ;	Chosen strategy is simple_byte
 10690  00498A  5046               	movf	(??_displayController+1)^0,w,c
 10691  00498C  0A00               	xorlw	0	; case 0
 10692  00498E  B4D8               	btfsc	status,2,c
 10693  004990  EFCC  F024         	goto	l9570
 10694  004994  EFDB  F024         	goto	l553
 10695  004998                     l9570:
 10696                           
 10697                           ; BSR set to: 0
 10698                           ; Switch size 1, requested type "simple"
 10699                           ; Number of cases is 3, Range of values is 0 to 2
 10700                           ; switch strategies available:
 10701                           ; Name         Instructions Cycles
 10702                           ; simple_byte           10     6 (average)
 10703                           ;	Chosen strategy is simple_byte
 10704  004998  5045               	movf	??_displayController^0,w,c
 10705  00499A  0A00               	xorlw	0	; case 0
 10706  00499C  B4D8               	btfsc	status,2,c
 10707  00499E  EFA9  F024         	goto	l8942
 10708  0049A2  0A01               	xorlw	1	; case 1
 10709  0049A4  B4D8               	btfsc	status,2,c
 10710  0049A6  EFB1  F024         	goto	l8944
 10711  0049AA  0A03               	xorlw	3	; case 2
 10712  0049AC  B4D8               	btfsc	status,2,c
 10713  0049AE  EFB9  F024         	goto	l8946
 10714  0049B2  EFDB  F024         	goto	l553
 10715  0049B6                     l553:
 10716  0049B6  0012               	return		;funcret
 10717  0049B8                     __end_of_displayController:
 10718                           	callstack 0
 10719                           
 10720 ;; *************** function _Menu_welcomeDraw *****************
 10721 ;; Defined at:
 10722 ;;		line 3 in file "class/menu.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 10725 ;;		 -> g1(209), 
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10737 ;;      Params:         0       2       0       0       0       0       0
 10738 ;;      Locals:         0       0       0       0       0       0       0
 10739 ;;      Temps:          0       0       0       0       0       0       0
 10740 ;;      Totals:         0       2       0       0       0       0       0
 10741 ;;Total ram usage:        2 bytes
 10742 ;; Hardware stack levels used: 1
 10743 ;; Hardware stack levels required when called: 7
 10744 ;; This function calls:
 10745 ;;		_LCD_ButtonDraw
 10746 ;;		_LCD_DrawText
 10747 ;;		_LCD_Fill
 10748 ;; This function is called by:
 10749 ;;		_displayController
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text45
 10754  0047EE                     __ptext45:
 10755                           	callstack 0
 10756  0047EE                     _Menu_welcomeDraw:
 10757                           	callstack 19
 10758  0047EE                     
 10759                           ;class/menu.c: 3: void Menu_welcomeDraw(GameParameters* g);class/menu.c: 4: {;class/menu
      +                          .c: 5:     LCD_Fill(0b1111111111111111);
 10760  0047EE  0EFF               	movlw	255
 10761  0047F0  6E13               	movwf	(LCD_Fill@color+1)^0,c
 10762  0047F2  6812               	setf	LCD_Fill@color^0,c
 10763  0047F4  EC04  F020         	call	_LCD_Fill	;wreg free
 10764  0047F8                     
 10765                           ;class/menu.c: 6:     LCD_DrawText("WELCOME",&arialNarrow_12ptFontInfo,A_CENTER,50,50,0b
      +                          0000000000000000,0b1111111111111111);
 10766  0047F8  0ED2               	movlw	low STR_9
 10767  0047FA  6E20               	movwf	LCD_DrawText@msg^0,c
 10768  0047FC  0E7F               	movlw	high STR_9
 10769  0047FE  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 10770  004800  0E99               	movlw	low _arialNarrow_12ptFontInfo
 10771  004802  6E22               	movwf	LCD_DrawText@font^0,c
 10772  004804  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10773  004806  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 10774  004808  0E02               	movlw	2
 10775  00480A  6E24               	movwf	LCD_DrawText@align^0,c
 10776  00480C  0E00               	movlw	0
 10777  00480E  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 10778  004810  0E32               	movlw	50
 10779  004812  6E25               	movwf	LCD_DrawText@posX^0,c
 10780  004814  0E00               	movlw	0
 10781  004816  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 10782  004818  0E32               	movlw	50
 10783  00481A  6E27               	movwf	LCD_DrawText@posY^0,c
 10784  00481C  0E00               	movlw	0
 10785  00481E  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 10786  004820  0E00               	movlw	0
 10787  004822  6E29               	movwf	LCD_DrawText@color^0,c
 10788  004824  0EFF               	movlw	255
 10789  004826  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 10790  004828  682B               	setf	LCD_DrawText@bg_color^0,c
 10791  00482A  EC86  F00A         	call	_LCD_DrawText	;wreg free
 10792  00482E                     
 10793                           ;class/menu.c: 7:     LCD_ButtonDraw(&(g->btnParam));
 10794  00482E  0E08               	movlw	8
 10795  004830  0100               	movlb	0	; () banked
 10796  004832  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 10797  004834  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 10798  004836  0E00               	movlw	0
 10799  004838  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 10800  00483A  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 10801  00483C  EC55  F003         	call	_LCD_ButtonDraw	;wreg free
 10802  004840                     
 10803                           ;class/menu.c: 8:     LCD_ButtonDraw(&(g->btnOnePlayer));
 10804  004840  0E20               	movlw	32
 10805  004842  0100               	movlb	0	; () banked
 10806  004844  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 10807  004846  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 10808  004848  0E00               	movlw	0
 10809  00484A  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 10810  00484C  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 10811  00484E  EC55  F003         	call	_LCD_ButtonDraw	;wreg free
 10812  004852                     
 10813                           ;class/menu.c: 9:     LCD_ButtonDraw(&(g->btnTwoPlayer));
 10814  004852  0E38               	movlw	56
 10815  004854  0100               	movlb	0	; () banked
 10816  004856  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 10817  004858  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 10818  00485A  0E00               	movlw	0
 10819  00485C  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 10820  00485E  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 10821  004860  EC55  F003         	call	_LCD_ButtonDraw	;wreg free
 10822  004864  0012               	return		;funcret
 10823  004866                     __end_of_Menu_welcomeDraw:
 10824                           	callstack 0
 10825                           
 10826 ;; *************** function _Menu_parametersDraw *****************
 10827 ;; Defined at:
 10828 ;;		line 11 in file "class/menu.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 10831 ;;		 -> g1(209), 
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;		None
 10834 ;; Return value:  Size  Location     Type
 10835 ;;                  1    wreg      void 
 10836 ;; Registers used:
 10837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10838 ;; Tracked objects:
 10839 ;;		On entry : 0/0
 10840 ;;		On exit  : 0/0
 10841 ;;		Unchanged: 0/0
 10842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10843 ;;      Params:         0       2       0       0       0       0       0
 10844 ;;      Locals:         0       0       0       0       0       0       0
 10845 ;;      Temps:          0       0       0       0       0       0       0
 10846 ;;      Totals:         0       2       0       0       0       0       0
 10847 ;;Total ram usage:        2 bytes
 10848 ;; Hardware stack levels used: 1
 10849 ;; Hardware stack levels required when called: 7
 10850 ;; This function calls:
 10851 ;;		_LCD_ButtonDraw
 10852 ;;		_LCD_DrawText
 10853 ;;		_LCD_Fill
 10854 ;;		_LCD_SliderDraw
 10855 ;; This function is called by:
 10856 ;;		_displayController
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           	psect	text46
 10861  00476C                     __ptext46:
 10862                           	callstack 0
 10863  00476C                     _Menu_parametersDraw:
 10864                           	callstack 19
 10865  00476C                     
 10866                           ;class/menu.c: 11: void Menu_parametersDraw(GameParameters* g);class/menu.c: 12: {;class
      +                          /menu.c: 13:     LCD_Fill(0b1111111111111111);
 10867  00476C  0EFF               	movlw	255
 10868  00476E  6E13               	movwf	(LCD_Fill@color+1)^0,c
 10869  004770  6812               	setf	LCD_Fill@color^0,c
 10870  004772  EC04  F020         	call	_LCD_Fill	;wreg free
 10871  004776                     
 10872                           ;class/menu.c: 14:     LCD_DrawText("PARAMETERS",&arialNarrow_12ptFontInfo,A_CENTER,50,5
      +                          0,0b0000000000000000,0b1111111111111111);
 10873  004776  0EA0               	movlw	low STR_10
 10874  004778  6E20               	movwf	LCD_DrawText@msg^0,c
 10875  00477A  0E7F               	movlw	high STR_10
 10876  00477C  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 10877  00477E  0E99               	movlw	low _arialNarrow_12ptFontInfo
 10878  004780  6E22               	movwf	LCD_DrawText@font^0,c
 10879  004782  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10880  004784  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 10881  004786  0E02               	movlw	2
 10882  004788  6E24               	movwf	LCD_DrawText@align^0,c
 10883  00478A  0E00               	movlw	0
 10884  00478C  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 10885  00478E  0E32               	movlw	50
 10886  004790  6E25               	movwf	LCD_DrawText@posX^0,c
 10887  004792  0E00               	movlw	0
 10888  004794  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 10889  004796  0E32               	movlw	50
 10890  004798  6E27               	movwf	LCD_DrawText@posY^0,c
 10891  00479A  0E00               	movlw	0
 10892  00479C  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 10893  00479E  0E00               	movlw	0
 10894  0047A0  6E29               	movwf	LCD_DrawText@color^0,c
 10895  0047A2  0EFF               	movlw	255
 10896  0047A4  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 10897  0047A6  682B               	setf	LCD_DrawText@bg_color^0,c
 10898  0047A8  EC86  F00A         	call	_LCD_DrawText	;wreg free
 10899  0047AC                     
 10900                           ;class/menu.c: 15:     LCD_ButtonDraw(&(g->btnLeaveParam));
 10901  0047AC  0E50               	movlw	80
 10902  0047AE  0100               	movlb	0	; () banked
 10903  0047B0  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 10904  0047B2  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 10905  0047B4  0E00               	movlw	0
 10906  0047B6  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 10907  0047B8  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 10908  0047BA  EC55  F003         	call	_LCD_ButtonDraw	;wreg free
 10909  0047BE                     
 10910                           ;class/menu.c: 16:     g->sldParam.value=g->backlight;
 10911  0047BE  C09C  FFD9         	movff	Menu_parametersDraw@g,fsr2l
 10912  0047C2  C09D  FFDA         	movff	Menu_parametersDraw@g+1,fsr2h
 10913  0047C6  0100               	movlb	0	; () banked
 10914  0047C8  EE10 F0A9          	lfsr	1,169
 10915  0047CC  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 10916  0047CE  26E1               	addwf	fsr1l,f,c
 10917  0047D0  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 10918  0047D2  22E2               	addwfc	fsr1h,f,c
 10919  0047D4  CFDE FFE6          	movff	postinc2,postinc1
 10920  0047D8  CFDD FFE5          	movff	postdec2,postdec1
 10921  0047DC                     
 10922                           ; BSR set to: 0
 10923                           ;class/menu.c: 17:     LCD_SliderDraw(&(g->sldParam));
 10924  0047DC  0E98               	movlw	152
 10925  0047DE  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 10926  0047E0  6E37               	movwf	LCD_SliderDraw@slider^0,c
 10927  0047E2  0E00               	movlw	0
 10928  0047E4  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 10929  0047E6  6E38               	movwf	(LCD_SliderDraw@slider+1)^0,c
 10930  0047E8  EC4F  F01B         	call	_LCD_SliderDraw	;wreg free
 10931  0047EC  0012               	return		;funcret
 10932  0047EE                     __end_of_Menu_parametersDraw:
 10933                           	callstack 0
 10934                           
 10935 ;; *************** function _LCD_SliderDraw *****************
 10936 ;; Defined at:
 10937 ;;		line 371 in file "libraries/lcd_highlevel.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  slider          2   54[COMRAM] PTR struct .
 10940 ;;		 -> g1(209), 
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;  y2              2   66[COMRAM] unsigned short 
 10943 ;;  y1              2   64[COMRAM] unsigned short 
 10944 ;;  x2              2   62[COMRAM] unsigned short 
 10945 ;;  x1              2   60[COMRAM] unsigned short 
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      void 
 10948 ;; Registers used:
 10949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10955 ;;      Params:         2       0       0       0       0       0       0
 10956 ;;      Locals:         8       0       0       0       0       0       0
 10957 ;;      Temps:          4       0       0       0       0       0       0
 10958 ;;      Totals:        14       0       0       0       0       0       0
 10959 ;;Total ram usage:       14 bytes
 10960 ;; Hardware stack levels used: 1
 10961 ;; Hardware stack levels required when called: 6
 10962 ;; This function calls:
 10963 ;;		_LCD_DrawRect
 10964 ;;		_LCD_SliderUpdate
 10965 ;; This function is called by:
 10966 ;;		_Menu_parametersDraw
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           	psect	text47
 10971  00369E                     __ptext47:
 10972                           	callstack 0
 10973  00369E                     _LCD_SliderDraw:
 10974                           	callstack 19
 10975  00369E                     
 10976                           ;libraries/lcd_highlevel.c: 371: void LCD_SliderDraw(sld_t * slider);libraries/lcd_highl
      +                          evel.c: 372: {;libraries/lcd_highlevel.c: 373:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 375:   x1 = slider->posX;
 10977  00369E  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 10978  0036A2  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 10979  0036A6  CFDE F03D          	movff	postinc2,LCD_SliderDraw@x1
 10980  0036AA  CFDD F03E          	movff	postdec2,LCD_SliderDraw@x1+1
 10981  0036AE                     
 10982                           ;libraries/lcd_highlevel.c: 376:   x2 = slider->posX + slider->width;
 10983  0036AE  EE20 F004          	lfsr	2,4
 10984  0036B2  5037               	movf	LCD_SliderDraw@slider^0,w,c
 10985  0036B4  26D9               	addwf	fsr2l,f,c
 10986  0036B6  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 10987  0036B8  22DA               	addwfc	fsr2h,f,c
 10988  0036BA  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 10989  0036BE  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 10990  0036C2  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 10991  0036C6  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 10992  0036CA  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 10993  0036CE  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 10994  0036D2  5039               	movf	??_LCD_SliderDraw^0,w,c
 10995  0036D4  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 10996  0036D6  6E3F               	movwf	LCD_SliderDraw@x2^0,c
 10997  0036D8  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 10998  0036DA  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 10999  0036DC  6E40               	movwf	(LCD_SliderDraw@x2+1)^0,c
 11000  0036DE                     
 11001                           ;libraries/lcd_highlevel.c: 377:   y1 = slider->posY;
 11002  0036DE  EE20 F002          	lfsr	2,2
 11003  0036E2  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11004  0036E4  26D9               	addwf	fsr2l,f,c
 11005  0036E6  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11006  0036E8  22DA               	addwfc	fsr2h,f,c
 11007  0036EA  CFDE F041          	movff	postinc2,LCD_SliderDraw@y1
 11008  0036EE  CFDD F042          	movff	postdec2,LCD_SliderDraw@y1+1
 11009  0036F2                     
 11010                           ;libraries/lcd_highlevel.c: 378:   y2 = slider->posY + slider->height;
 11011  0036F2  EE20 F006          	lfsr	2,6
 11012  0036F6  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11013  0036F8  26D9               	addwf	fsr2l,f,c
 11014  0036FA  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11015  0036FC  22DA               	addwfc	fsr2h,f,c
 11016  0036FE  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11017  003702  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11018  003706  EE20 F002          	lfsr	2,2
 11019  00370A  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11020  00370C  26D9               	addwf	fsr2l,f,c
 11021  00370E  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11022  003710  22DA               	addwfc	fsr2h,f,c
 11023  003712  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11024  003716  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11025  00371A  5039               	movf	??_LCD_SliderDraw^0,w,c
 11026  00371C  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11027  00371E  6E43               	movwf	LCD_SliderDraw@y2^0,c
 11028  003720  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11029  003722  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11030  003724  6E44               	movwf	(LCD_SliderDraw@y2+1)^0,c
 11031  003726                     
 11032                           ;libraries/lcd_highlevel.c: 379:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->bgColor);
 11033  003726  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11034  00372A  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11035  00372E  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11036  003732  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11037  003736  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11038  00373A  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11039  00373E  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11040  003742  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11041  003746  0E01               	movlw	1
 11042  003748  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11043  00374A  EE20 F00A          	lfsr	2,10
 11044  00374E  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11045  003750  26D9               	addwf	fsr2l,f,c
 11046  003752  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11047  003754  22DA               	addwfc	fsr2h,f,c
 11048  003756  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11049  00375A  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11050  00375E  EC68  F010         	call	_LCD_DrawRect	;wreg free
 11051  003762                     
 11052                           ;libraries/lcd_highlevel.c: 380:   LCD_DrawRect(x1, y1, x2, y2, 0, slider->borderColor);
 11053  003762  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11054  003766  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11055  00376A  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11056  00376E  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11057  003772  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11058  003776  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11059  00377A  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11060  00377E  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11061  003782  0E00               	movlw	0
 11062  003784  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11063  003786  EE20 F00C          	lfsr	2,12
 11064  00378A  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11065  00378C  26D9               	addwf	fsr2l,f,c
 11066  00378E  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11067  003790  22DA               	addwfc	fsr2h,f,c
 11068  003792  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11069  003796  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11070  00379A  EC68  F010         	call	_LCD_DrawRect	;wreg free
 11071  00379E                     
 11072                           ;libraries/lcd_highlevel.c: 381:   LCD_SliderUpdate(slider);
 11073  00379E  C037  F027         	movff	LCD_SliderDraw@slider,LCD_SliderUpdate@slider
 11074  0037A2  C038  F028         	movff	LCD_SliderDraw@slider+1,LCD_SliderUpdate@slider+1
 11075  0037A6  ECCC  F005         	call	_LCD_SliderUpdate	;wreg free
 11076  0037AA  0012               	return		;funcret
 11077  0037AC                     __end_of_LCD_SliderDraw:
 11078                           	callstack 0
 11079                           
 11080 ;; *************** function _LCD_SliderUpdate *****************
 11081 ;; Defined at:
 11082 ;;		line 319 in file "libraries/lcd_highlevel.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  slider          2   38[COMRAM] PTR struct .
 11085 ;;		 -> g1(209), 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  x1              2   52[COMRAM] unsigned short 
 11088 ;;  y2              2   50[COMRAM] unsigned short 
 11089 ;;  y1              2   48[COMRAM] unsigned short 
 11090 ;;  x2              2   46[COMRAM] unsigned short 
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      void 
 11093 ;; Registers used:
 11094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11100 ;;      Params:         2       0       0       0       0       0       0
 11101 ;;      Locals:         8       0       0       0       0       0       0
 11102 ;;      Temps:          6       0       0       0       0       0       0
 11103 ;;      Totals:        16       0       0       0       0       0       0
 11104 ;;Total ram usage:       16 bytes
 11105 ;; Hardware stack levels used: 1
 11106 ;; Hardware stack levels required when called: 5
 11107 ;; This function calls:
 11108 ;;		_LCD_DrawRect
 11109 ;;		___lwdiv
 11110 ;;		___wmul
 11111 ;; This function is called by:
 11112 ;;		_LCD_SliderDraw
 11113 ;;		_gameControllerController
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           
 11117                           	psect	text48
 11118  000B98                     __ptext48:
 11119                           	callstack 0
 11120  000B98                     _LCD_SliderUpdate:
 11121                           	callstack 21
 11122  000B98                     
 11123                           ;libraries/lcd_highlevel.c: 319: void LCD_SliderUpdate(sld_t * slider);libraries/lcd_hig
      +                          hlevel.c: 320: {;libraries/lcd_highlevel.c: 321:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 325:   if(slider->cursorWidth != 0)
 11124  000B98  EE20 F00E          	lfsr	2,14
 11125  000B9C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11126  000B9E  26D9               	addwf	fsr2l,f,c
 11127  000BA0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11128  000BA2  22DA               	addwfc	fsr2h,f,c
 11129  000BA4  50DE               	movf	postinc2,w,c
 11130  000BA6  10DE               	iorwf	postinc2,w,c
 11131  000BA8  B4D8               	btfsc	status,2,c
 11132  000BAA  EFD9  F005         	goto	u4781
 11133  000BAE  EFDB  F005         	goto	u4780
 11134  000BB2                     u4781:
 11135  000BB2  EF67  F006         	goto	l8024
 11136  000BB6                     u4780:
 11137  000BB6                     
 11138                           ;libraries/lcd_highlevel.c: 326:   {;libraries/lcd_highlevel.c: 327:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->oldValue)/ slider->steps);
 11139  000BB6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11140  000BBA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11141  000BBE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11142  000BC2  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11143  000BC6  EE20 F00E          	lfsr	2,14
 11144  000BCA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11145  000BCC  26D9               	addwf	fsr2l,f,c
 11146  000BCE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11147  000BD0  22DA               	addwfc	fsr2h,f,c
 11148  000BD2  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11149  000BD6  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11150  000BDA  EE20 F004          	lfsr	2,4
 11151  000BDE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11152  000BE0  26D9               	addwf	fsr2l,f,c
 11153  000BE2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11154  000BE4  22DA               	addwfc	fsr2h,f,c
 11155  000BE6  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 11156  000BEA  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 11157  000BEE  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 11158  000BF0  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 11159  000BF2  6E1A               	movwf	___wmul@multiplier^0,c
 11160  000BF4  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 11161  000BF6  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 11162  000BF8  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 11163  000BFA  EE20 F013          	lfsr	2,19
 11164  000BFE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11165  000C00  26D9               	addwf	fsr2l,f,c
 11166  000C02  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11167  000C04  22DA               	addwfc	fsr2h,f,c
 11168  000C06  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11169  000C0A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11170  000C0E  EC94  F027         	call	___wmul	;wreg free
 11171  000C12  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11172  000C16  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11173  000C1A  EE20 F015          	lfsr	2,21
 11174  000C1E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11175  000C20  26D9               	addwf	fsr2l,f,c
 11176  000C22  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11177  000C24  22DA               	addwfc	fsr2h,f,c
 11178  000C26  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11179  000C2A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11180  000C2E  EC6D  F024         	call	___lwdiv	;wreg free
 11181  000C32  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11182  000C34  2620               	addwf	?___lwdiv^0,f,c
 11183  000C36  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11184  000C38  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11185  000C3A  0E01               	movlw	1
 11186  000C3C  2420               	addwf	?___lwdiv^0,w,c
 11187  000C3E  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11188  000C40  0E00               	movlw	0
 11189  000C42  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11190  000C44  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11191  000C46                     
 11192                           ;libraries/lcd_highlevel.c: 328:     x2 = x1 + slider->cursorWidth-2;
 11193  000C46  EE20 F00E          	lfsr	2,14
 11194  000C4A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11195  000C4C  26D9               	addwf	fsr2l,f,c
 11196  000C4E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11197  000C50  22DA               	addwfc	fsr2h,f,c
 11198  000C52  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11199  000C56  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11200  000C5A  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 11201  000C5C  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 11202  000C5E  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 11203  000C60  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 11204  000C62  0EFE               	movlw	254
 11205  000C64  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11206  000C66  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11207  000C68  0EFF               	movlw	255
 11208  000C6A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11209  000C6C  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11210  000C6E                     
 11211                           ;libraries/lcd_highlevel.c: 329:     y1 = slider->posY + 2;
 11212  000C6E  EE20 F002          	lfsr	2,2
 11213  000C72  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11214  000C74  26D9               	addwf	fsr2l,f,c
 11215  000C76  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11216  000C78  22DA               	addwfc	fsr2h,f,c
 11217  000C7A  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11218  000C7E  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11219  000C82  0E02               	movlw	2
 11220  000C84  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11221  000C86  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11222  000C88  0E00               	movlw	0
 11223  000C8A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11224  000C8C  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11225  000C8E                     
 11226                           ;libraries/lcd_highlevel.c: 330:     y2 = slider->posY + slider->height - 2;
 11227  000C8E  EE20 F006          	lfsr	2,6
 11228  000C92  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11229  000C94  26D9               	addwf	fsr2l,f,c
 11230  000C96  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11231  000C98  22DA               	addwfc	fsr2h,f,c
 11232  000C9A  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11233  000C9E  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11234  000CA2  EE20 F002          	lfsr	2,2
 11235  000CA6  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11236  000CA8  26D9               	addwf	fsr2l,f,c
 11237  000CAA  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11238  000CAC  22DA               	addwfc	fsr2h,f,c
 11239  000CAE  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11240  000CB2  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11241  000CB6  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11242  000CB8  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11243  000CBA  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11244  000CBC  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11245  000CBE  0EFE               	movlw	254
 11246  000CC0  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 11247  000CC2  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 11248  000CC4  0EFF               	movlw	255
 11249  000CC6  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 11250  000CC8  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 11251                           
 11252                           ;libraries/lcd_highlevel.c: 331:   }
 11253  000CCA  EFDB  F006         	goto	l8032
 11254  000CCE                     l8024:
 11255                           
 11256                           ;libraries/lcd_highlevel.c: 333:   {;libraries/lcd_highlevel.c: 334:     x1 = slider->po
      +                          sX + 1;
 11257  000CCE  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11258  000CD2  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11259  000CD6  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11260  000CDA  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11261  000CDE  0E01               	movlw	1
 11262  000CE0  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11263  000CE2  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11264  000CE4  0E00               	movlw	0
 11265  000CE6  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11266  000CE8  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11267  000CEA                     
 11268                           ;libraries/lcd_highlevel.c: 335:     x2 = slider->posX - 1 + ((slider->width * slider->o
      +                          ldValue)/ slider->steps);
 11269  000CEA  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11270  000CEE  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11271  000CF2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11272  000CF6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11273  000CFA  EE20 F004          	lfsr	2,4
 11274  000CFE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11275  000D00  26D9               	addwf	fsr2l,f,c
 11276  000D02  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11277  000D04  22DA               	addwfc	fsr2h,f,c
 11278  000D06  CFDE F01A          	movff	postinc2,___wmul@multiplier
 11279  000D0A  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 11280  000D0E  EE20 F013          	lfsr	2,19
 11281  000D12  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11282  000D14  26D9               	addwf	fsr2l,f,c
 11283  000D16  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11284  000D18  22DA               	addwfc	fsr2h,f,c
 11285  000D1A  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11286  000D1E  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11287  000D22  EC94  F027         	call	___wmul	;wreg free
 11288  000D26  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11289  000D2A  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11290  000D2E  EE20 F015          	lfsr	2,21
 11291  000D32  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11292  000D34  26D9               	addwf	fsr2l,f,c
 11293  000D36  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11294  000D38  22DA               	addwfc	fsr2h,f,c
 11295  000D3A  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11296  000D3E  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11297  000D42  EC6D  F024         	call	___lwdiv	;wreg free
 11298  000D46  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11299  000D48  2620               	addwf	?___lwdiv^0,f,c
 11300  000D4A  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11301  000D4C  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11302  000D4E  0EFF               	movlw	255
 11303  000D50  2420               	addwf	?___lwdiv^0,w,c
 11304  000D52  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11305  000D54  0EFF               	movlw	255
 11306  000D56  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11307  000D58  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11308  000D5A                     
 11309                           ;libraries/lcd_highlevel.c: 336:     y1 = slider->posY + 2;
 11310  000D5A  EE20 F002          	lfsr	2,2
 11311  000D5E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11312  000D60  26D9               	addwf	fsr2l,f,c
 11313  000D62  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11314  000D64  22DA               	addwfc	fsr2h,f,c
 11315  000D66  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11316  000D6A  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11317  000D6E  0E02               	movlw	2
 11318  000D70  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11319  000D72  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11320  000D74  0E00               	movlw	0
 11321  000D76  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11322  000D78  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11323  000D7A                     
 11324                           ;libraries/lcd_highlevel.c: 337:     y2 = slider->posY + slider->height - 2;
 11325  000D7A  EE20 F006          	lfsr	2,6
 11326  000D7E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11327  000D80  26D9               	addwf	fsr2l,f,c
 11328  000D82  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11329  000D84  22DA               	addwfc	fsr2h,f,c
 11330  000D86  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11331  000D8A  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11332  000D8E  EE20 F002          	lfsr	2,2
 11333  000D92  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11334  000D94  26D9               	addwf	fsr2l,f,c
 11335  000D96  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11336  000D98  22DA               	addwfc	fsr2h,f,c
 11337  000D9A  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11338  000D9E  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11339  000DA2  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11340  000DA4  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11341  000DA6  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11342  000DA8  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11343  000DAA  0EFE               	movlw	254
 11344  000DAC  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 11345  000DAE  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 11346  000DB0  0EFF               	movlw	255
 11347  000DB2  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 11348  000DB4  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 11349  000DB6                     l8032:
 11350                           
 11351                           ;libraries/lcd_highlevel.c: 339:   LCD_DrawRect(x1,
 11352  000DB6  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 11353  000DBA  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 11354  000DBE  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 11355  000DC2  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 11356  000DC6  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 11357  000DCA  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 11358  000DCE  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 11359  000DD2  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 11360  000DD6  0E01               	movlw	1
 11361  000DD8  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11362  000DDA  EE20 F00A          	lfsr	2,10
 11363  000DDE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11364  000DE0  26D9               	addwf	fsr2l,f,c
 11365  000DE2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11366  000DE4  22DA               	addwfc	fsr2h,f,c
 11367  000DE6  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11368  000DEA  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11369  000DEE  EC68  F010         	call	_LCD_DrawRect	;wreg free
 11370  000DF2                     
 11371                           ;libraries/lcd_highlevel.c: 344:   slider->oldValue = slider->value;
 11372  000DF2  EE20 F011          	lfsr	2,17
 11373  000DF6  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11374  000DF8  26D9               	addwf	fsr2l,f,c
 11375  000DFA  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11376  000DFC  22DA               	addwfc	fsr2h,f,c
 11377  000DFE  EE10 F013          	lfsr	1,19
 11378  000E02  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11379  000E04  26E1               	addwf	fsr1l,f,c
 11380  000E06  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11381  000E08  22E2               	addwfc	fsr1h,f,c
 11382  000E0A  CFDE FFE6          	movff	postinc2,postinc1
 11383  000E0E  CFDD FFE5          	movff	postdec2,postdec1
 11384  000E12                     
 11385                           ;libraries/lcd_highlevel.c: 347:   if(slider->cursorWidth == 0)
 11386  000E12  EE20 F00E          	lfsr	2,14
 11387  000E16  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11388  000E18  26D9               	addwf	fsr2l,f,c
 11389  000E1A  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11390  000E1C  22DA               	addwfc	fsr2h,f,c
 11391  000E1E  50DE               	movf	postinc2,w,c
 11392  000E20  10DE               	iorwf	postinc2,w,c
 11393  000E22  A4D8               	btfss	status,2,c
 11394  000E24  EF16  F007         	goto	u4791
 11395  000E28  EF18  F007         	goto	u4790
 11396  000E2C                     u4791:
 11397  000E2C  EF8E  F007         	goto	l8046
 11398  000E30                     u4790:
 11399  000E30                     
 11400                           ;libraries/lcd_highlevel.c: 348:   {;libraries/lcd_highlevel.c: 349:     x1 = slider->po
      +                          sX + 1;
 11401  000E30  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11402  000E34  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11403  000E38  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11404  000E3C  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11405  000E40  0E01               	movlw	1
 11406  000E42  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11407  000E44  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11408  000E46  0E00               	movlw	0
 11409  000E48  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11410  000E4A  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11411  000E4C                     
 11412                           ;libraries/lcd_highlevel.c: 350:     x2 = slider->posX - 1 + ((slider->width * slider->v
      +                          alue)/ slider->steps);
 11413  000E4C  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11414  000E50  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11415  000E54  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11416  000E58  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11417  000E5C  EE20 F004          	lfsr	2,4
 11418  000E60  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11419  000E62  26D9               	addwf	fsr2l,f,c
 11420  000E64  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11421  000E66  22DA               	addwfc	fsr2h,f,c
 11422  000E68  CFDE F01A          	movff	postinc2,___wmul@multiplier
 11423  000E6C  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 11424  000E70  EE20 F011          	lfsr	2,17
 11425  000E74  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11426  000E76  26D9               	addwf	fsr2l,f,c
 11427  000E78  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11428  000E7A  22DA               	addwfc	fsr2h,f,c
 11429  000E7C  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11430  000E80  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11431  000E84  EC94  F027         	call	___wmul	;wreg free
 11432  000E88  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11433  000E8C  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11434  000E90  EE20 F015          	lfsr	2,21
 11435  000E94  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11436  000E96  26D9               	addwf	fsr2l,f,c
 11437  000E98  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11438  000E9A  22DA               	addwfc	fsr2h,f,c
 11439  000E9C  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11440  000EA0  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11441  000EA4  EC6D  F024         	call	___lwdiv	;wreg free
 11442  000EA8  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11443  000EAA  2620               	addwf	?___lwdiv^0,f,c
 11444  000EAC  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11445  000EAE  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11446  000EB0  0EFF               	movlw	255
 11447  000EB2  2420               	addwf	?___lwdiv^0,w,c
 11448  000EB4  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11449  000EB6  0EFF               	movlw	255
 11450  000EB8  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11451  000EBA  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11452  000EBC                     
 11453                           ;libraries/lcd_highlevel.c: 351:     y1 = slider->posY + 2;
 11454  000EBC  EE20 F002          	lfsr	2,2
 11455  000EC0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11456  000EC2  26D9               	addwf	fsr2l,f,c
 11457  000EC4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11458  000EC6  22DA               	addwfc	fsr2h,f,c
 11459  000EC8  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11460  000ECC  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11461  000ED0  0E02               	movlw	2
 11462  000ED2  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11463  000ED4  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11464  000ED6  0E00               	movlw	0
 11465  000ED8  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11466  000EDA  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11467  000EDC                     
 11468                           ;libraries/lcd_highlevel.c: 352:     y2 = slider->posY + slider->height - 2;
 11469  000EDC  EE20 F006          	lfsr	2,6
 11470  000EE0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11471  000EE2  26D9               	addwf	fsr2l,f,c
 11472  000EE4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11473  000EE6  22DA               	addwfc	fsr2h,f,c
 11474  000EE8  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11475  000EEC  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11476  000EF0  EE20 F002          	lfsr	2,2
 11477  000EF4  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11478  000EF6  26D9               	addwf	fsr2l,f,c
 11479  000EF8  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11480  000EFA  22DA               	addwfc	fsr2h,f,c
 11481  000EFC  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11482  000F00  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11483  000F04  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11484  000F06  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11485  000F08  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11486  000F0A  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11487  000F0C  0EFE               	movlw	254
 11488  000F0E  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 11489  000F10  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 11490  000F12  0EFF               	movlw	255
 11491  000F14  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 11492  000F16  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 11493                           
 11494                           ;libraries/lcd_highlevel.c: 353:   }
 11495  000F18  EF18  F008         	goto	l8054
 11496  000F1C                     l8046:
 11497                           
 11498                           ;libraries/lcd_highlevel.c: 357:   {;libraries/lcd_highlevel.c: 358:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->value)/ slider->steps);
 11499  000F1C  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11500  000F20  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11501  000F24  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11502  000F28  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11503  000F2C  EE20 F00E          	lfsr	2,14
 11504  000F30  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11505  000F32  26D9               	addwf	fsr2l,f,c
 11506  000F34  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11507  000F36  22DA               	addwfc	fsr2h,f,c
 11508  000F38  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11509  000F3C  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11510  000F40  EE20 F004          	lfsr	2,4
 11511  000F44  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11512  000F46  26D9               	addwf	fsr2l,f,c
 11513  000F48  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11514  000F4A  22DA               	addwfc	fsr2h,f,c
 11515  000F4C  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 11516  000F50  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 11517  000F54  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 11518  000F56  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 11519  000F58  6E1A               	movwf	___wmul@multiplier^0,c
 11520  000F5A  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 11521  000F5C  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 11522  000F5E  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 11523  000F60  EE20 F011          	lfsr	2,17
 11524  000F64  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11525  000F66  26D9               	addwf	fsr2l,f,c
 11526  000F68  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11527  000F6A  22DA               	addwfc	fsr2h,f,c
 11528  000F6C  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11529  000F70  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11530  000F74  EC94  F027         	call	___wmul	;wreg free
 11531  000F78  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11532  000F7C  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11533  000F80  EE20 F015          	lfsr	2,21
 11534  000F84  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11535  000F86  26D9               	addwf	fsr2l,f,c
 11536  000F88  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11537  000F8A  22DA               	addwfc	fsr2h,f,c
 11538  000F8C  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11539  000F90  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11540  000F94  EC6D  F024         	call	___lwdiv	;wreg free
 11541  000F98  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11542  000F9A  2620               	addwf	?___lwdiv^0,f,c
 11543  000F9C  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11544  000F9E  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11545  000FA0  0E01               	movlw	1
 11546  000FA2  2420               	addwf	?___lwdiv^0,w,c
 11547  000FA4  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11548  000FA6  0E00               	movlw	0
 11549  000FA8  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11550  000FAA  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11551  000FAC                     
 11552                           ;libraries/lcd_highlevel.c: 359:     x2 = x1 + slider->cursorWidth-2;
 11553  000FAC  EE20 F00E          	lfsr	2,14
 11554  000FB0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11555  000FB2  26D9               	addwf	fsr2l,f,c
 11556  000FB4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11557  000FB6  22DA               	addwfc	fsr2h,f,c
 11558  000FB8  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11559  000FBC  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11560  000FC0  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 11561  000FC2  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 11562  000FC4  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 11563  000FC6  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 11564  000FC8  0EFE               	movlw	254
 11565  000FCA  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11566  000FCC  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11567  000FCE  0EFF               	movlw	255
 11568  000FD0  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11569  000FD2  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11570  000FD4                     
 11571                           ;libraries/lcd_highlevel.c: 360:     y1 = slider->posY + 2;
 11572  000FD4  EE20 F002          	lfsr	2,2
 11573  000FD8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11574  000FDA  26D9               	addwf	fsr2l,f,c
 11575  000FDC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11576  000FDE  22DA               	addwfc	fsr2h,f,c
 11577  000FE0  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11578  000FE4  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11579  000FE8  0E02               	movlw	2
 11580  000FEA  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11581  000FEC  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11582  000FEE  0E00               	movlw	0
 11583  000FF0  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11584  000FF2  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11585  000FF4                     
 11586                           ;libraries/lcd_highlevel.c: 361:     y2 = slider->posY + slider->height - 2;
 11587  000FF4  EE20 F006          	lfsr	2,6
 11588  000FF8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11589  000FFA  26D9               	addwf	fsr2l,f,c
 11590  000FFC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11591  000FFE  22DA               	addwfc	fsr2h,f,c
 11592  001000  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11593  001004  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11594  001008  EE20 F002          	lfsr	2,2
 11595  00100C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11596  00100E  26D9               	addwf	fsr2l,f,c
 11597  001010  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11598  001012  22DA               	addwfc	fsr2h,f,c
 11599  001014  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11600  001018  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11601  00101C  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11602  00101E  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11603  001020  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11604  001022  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11605  001024  0EFE               	movlw	254
 11606  001026  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 11607  001028  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 11608  00102A  0EFF               	movlw	255
 11609  00102C  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 11610  00102E  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 11611  001030                     l8054:
 11612                           
 11613                           ;libraries/lcd_highlevel.c: 363:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->sldColor);
 11614  001030  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 11615  001034  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 11616  001038  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 11617  00103C  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 11618  001040  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 11619  001044  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 11620  001048  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 11621  00104C  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 11622  001050  0E01               	movlw	1
 11623  001052  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11624  001054  EE20 F008          	lfsr	2,8
 11625  001058  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11626  00105A  26D9               	addwf	fsr2l,f,c
 11627  00105C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11628  00105E  22DA               	addwfc	fsr2h,f,c
 11629  001060  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11630  001064  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11631  001068  EC68  F010         	call	_LCD_DrawRect	;wreg free
 11632  00106C  0012               	return		;funcret
 11633  00106E                     __end_of_LCD_SliderUpdate:
 11634                           	callstack 0
 11635                           
 11636 ;; *************** function _Menu_inGameDraw *****************
 11637 ;; Defined at:
 11638 ;;		line 19 in file "class/menu.c"
 11639 ;; Parameters:    Size  Location     Type
 11640 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11641 ;;		 -> g1(209), 
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;		None
 11644 ;; Return value:  Size  Location     Type
 11645 ;;                  1    wreg      void 
 11646 ;; Registers used:
 11647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11648 ;; Tracked objects:
 11649 ;;		On entry : 0/0
 11650 ;;		On exit  : 0/0
 11651 ;;		Unchanged: 0/0
 11652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11653 ;;      Params:         0       2       0       0       0       0       0
 11654 ;;      Locals:         0       0       0       0       0       0       0
 11655 ;;      Temps:          0       0       0       0       0       0       0
 11656 ;;      Totals:         0       2       0       0       0       0       0
 11657 ;;Total ram usage:        2 bytes
 11658 ;; Hardware stack levels used: 1
 11659 ;; Hardware stack levels required when called: 7
 11660 ;; This function calls:
 11661 ;;		_Ball_draw
 11662 ;;		_LCD_ButtonDraw
 11663 ;;		_LCD_DrawText
 11664 ;;		_LCD_Fill
 11665 ;;		_Paddle_draw
 11666 ;; This function is called by:
 11667 ;;		_displayController
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text49
 11672  00463C                     __ptext49:
 11673                           	callstack 0
 11674  00463C                     _Menu_inGameDraw:
 11675                           	callstack 19
 11676  00463C                     
 11677                           ;class/menu.c: 19: void Menu_inGameDraw(GameParameters* g);class/menu.c: 20: {;class/men
      +                          u.c: 21:     LCD_Fill(0b1111111111111111);
 11678  00463C  0EFF               	movlw	255
 11679  00463E  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11680  004640  6812               	setf	LCD_Fill@color^0,c
 11681  004642  EC04  F020         	call	_LCD_Fill	;wreg free
 11682  004646                     
 11683                           ;class/menu.c: 22:     LCD_DrawText("INGAME",&arialNarrow_12ptFontInfo,A_CENTER,50,50,0b
      +                          0000000000000000,0b1111111111111111);
 11684  004646  0EE2               	movlw	low STR_11
 11685  004648  6E20               	movwf	LCD_DrawText@msg^0,c
 11686  00464A  0E7F               	movlw	high STR_11
 11687  00464C  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11688  00464E  0E99               	movlw	low _arialNarrow_12ptFontInfo
 11689  004650  6E22               	movwf	LCD_DrawText@font^0,c
 11690  004652  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11691  004654  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11692  004656  0E02               	movlw	2
 11693  004658  6E24               	movwf	LCD_DrawText@align^0,c
 11694  00465A  0E00               	movlw	0
 11695  00465C  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11696  00465E  0E32               	movlw	50
 11697  004660  6E25               	movwf	LCD_DrawText@posX^0,c
 11698  004662  0E00               	movlw	0
 11699  004664  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11700  004666  0E32               	movlw	50
 11701  004668  6E27               	movwf	LCD_DrawText@posY^0,c
 11702  00466A  0E00               	movlw	0
 11703  00466C  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11704  00466E  0E00               	movlw	0
 11705  004670  6E29               	movwf	LCD_DrawText@color^0,c
 11706  004672  0EFF               	movlw	255
 11707  004674  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11708  004676  682B               	setf	LCD_DrawText@bg_color^0,c
 11709  004678  EC86  F00A         	call	_LCD_DrawText	;wreg free
 11710  00467C                     
 11711                           ;class/menu.c: 23:     LCD_ButtonDraw(&(g->btnRight));
 11712  00467C  0E80               	movlw	128
 11713  00467E  0100               	movlb	0	; () banked
 11714  004680  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 11715  004682  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11716  004684  0E00               	movlw	0
 11717  004686  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 11718  004688  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11719  00468A  EC55  F003         	call	_LCD_ButtonDraw	;wreg free
 11720  00468E                     
 11721                           ;class/menu.c: 24:     LCD_ButtonDraw(&(g->btnLeft));
 11722  00468E  0E68               	movlw	104
 11723  004690  0100               	movlb	0	; () banked
 11724  004692  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 11725  004694  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11726  004696  0E00               	movlw	0
 11727  004698  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 11728  00469A  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11729  00469C  EC55  F003         	call	_LCD_ButtonDraw	;wreg free
 11730  0046A0                     
 11731                           ;class/menu.c: 25:     Paddle_draw(&g->p1);
 11732  0046A0  0EB9               	movlw	185
 11733  0046A2  0100               	movlb	0	; () banked
 11734  0046A4  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 11735  0046A6  6E25               	movwf	Paddle_draw@p^0,c
 11736  0046A8  0E00               	movlw	0
 11737  0046AA  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 11738  0046AC  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11739  0046AE  EC2B  F022         	call	_Paddle_draw	;wreg free
 11740  0046B2                     
 11741                           ;class/menu.c: 26:     Paddle_draw(&g->p2);
 11742  0046B2  0EC3               	movlw	195
 11743  0046B4  0100               	movlb	0	; () banked
 11744  0046B6  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 11745  0046B8  6E25               	movwf	Paddle_draw@p^0,c
 11746  0046BA  0E00               	movlw	0
 11747  0046BC  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 11748  0046BE  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11749  0046C0  EC2B  F022         	call	_Paddle_draw	;wreg free
 11750  0046C4                     
 11751                           ;class/menu.c: 27:     Ball_draw(&g->b);
 11752  0046C4  0EB1               	movlw	177
 11753  0046C6  0100               	movlb	0	; () banked
 11754  0046C8  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 11755  0046CA  6E42               	movwf	Ball_draw@b^0,c
 11756  0046CC  0E00               	movlw	0
 11757  0046CE  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 11758  0046D0  6E43               	movwf	(Ball_draw@b+1)^0,c
 11759  0046D2  ECD3  F025         	call	_Ball_draw	;wreg free
 11760  0046D6  0012               	return		;funcret
 11761  0046D8                     __end_of_Menu_inGameDraw:
 11762                           	callstack 0
 11763                           
 11764 ;; *************** function _Paddle_draw *****************
 11765 ;; Defined at:
 11766 ;;		line 43 in file "class/paddle.c"
 11767 ;; Parameters:    Size  Location     Type
 11768 ;;  p               2   36[COMRAM] PTR struct Paddle
 11769 ;;		 -> g1(209), 
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;		None
 11772 ;; Return value:  Size  Location     Type
 11773 ;;                  1    wreg      void 
 11774 ;; Registers used:
 11775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11776 ;; Tracked objects:
 11777 ;;		On entry : 0/0
 11778 ;;		On exit  : 0/0
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11781 ;;      Params:         2       0       0       0       0       0       0
 11782 ;;      Locals:         0       0       0       0       0       0       0
 11783 ;;      Temps:          8       0       0       0       0       0       0
 11784 ;;      Totals:        10       0       0       0       0       0       0
 11785 ;;Total ram usage:       10 bytes
 11786 ;; Hardware stack levels used: 1
 11787 ;; Hardware stack levels required when called: 5
 11788 ;; This function calls:
 11789 ;;		_LCD_DrawRect
 11790 ;; This function is called by:
 11791 ;;		_Menu_inGameDraw
 11792 ;;		_gameControllerController
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           	psect	text50
 11797  004456                     __ptext50:
 11798                           	callstack 0
 11799  004456                     _Paddle_draw:
 11800                           	callstack 21
 11801  004456                     
 11802                           ;class/paddle.c: 43: void Paddle_draw(struct Paddle* p);class/paddle.c: 44: {;class/padd
      +                          le.c: 46:     LCD_DrawRect(p->x,p->y,p->x+p->w,p->y+p->h,1,p->color);
 11803  004456  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 11804  00445A  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 11805  00445E  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 11806  004462  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 11807  004466  EE20 F002          	lfsr	2,2
 11808  00446A  5025               	movf	Paddle_draw@p^0,w,c
 11809  00446C  26D9               	addwf	fsr2l,f,c
 11810  00446E  5026               	movf	(Paddle_draw@p+1)^0,w,c
 11811  004470  22DA               	addwfc	fsr2h,f,c
 11812  004472  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 11813  004476  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 11814  00447A  EE20 F004          	lfsr	2,4
 11815  00447E  5025               	movf	Paddle_draw@p^0,w,c
 11816  004480  26D9               	addwf	fsr2l,f,c
 11817  004482  5026               	movf	(Paddle_draw@p+1)^0,w,c
 11818  004484  22DA               	addwfc	fsr2h,f,c
 11819  004486  CFDE F027          	movff	postinc2,??_Paddle_draw
 11820  00448A  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 11821  00448E  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 11822  004492  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 11823  004496  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 11824  00449A  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 11825  00449E  5027               	movf	??_Paddle_draw^0,w,c
 11826  0044A0  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 11827  0044A2  6E16               	movwf	LCD_DrawRect@posX2^0,c
 11828  0044A4  5028               	movf	(??_Paddle_draw+1)^0,w,c
 11829  0044A6  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 11830  0044A8  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 11831  0044AA  EE20 F006          	lfsr	2,6
 11832  0044AE  5025               	movf	Paddle_draw@p^0,w,c
 11833  0044B0  26D9               	addwf	fsr2l,f,c
 11834  0044B2  5026               	movf	(Paddle_draw@p+1)^0,w,c
 11835  0044B4  22DA               	addwfc	fsr2h,f,c
 11836  0044B6  CFDE F02B          	movff	postinc2,??_Paddle_draw+4
 11837  0044BA  CFDD F02C          	movff	postdec2,??_Paddle_draw+5
 11838  0044BE  EE20 F002          	lfsr	2,2
 11839  0044C2  5025               	movf	Paddle_draw@p^0,w,c
 11840  0044C4  26D9               	addwf	fsr2l,f,c
 11841  0044C6  5026               	movf	(Paddle_draw@p+1)^0,w,c
 11842  0044C8  22DA               	addwfc	fsr2h,f,c
 11843  0044CA  CFDE F02D          	movff	postinc2,??_Paddle_draw+6
 11844  0044CE  CFDD F02E          	movff	postdec2,??_Paddle_draw+7
 11845  0044D2  502B               	movf	(??_Paddle_draw+4)^0,w,c
 11846  0044D4  242D               	addwf	(??_Paddle_draw+6)^0,w,c
 11847  0044D6  6E18               	movwf	LCD_DrawRect@posY2^0,c
 11848  0044D8  502C               	movf	(??_Paddle_draw+5)^0,w,c
 11849  0044DA  202E               	addwfc	(??_Paddle_draw+7)^0,w,c
 11850  0044DC  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 11851  0044DE  0E01               	movlw	1
 11852  0044E0  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11853  0044E2  EE20 F008          	lfsr	2,8
 11854  0044E6  5025               	movf	Paddle_draw@p^0,w,c
 11855  0044E8  26D9               	addwf	fsr2l,f,c
 11856  0044EA  5026               	movf	(Paddle_draw@p+1)^0,w,c
 11857  0044EC  22DA               	addwfc	fsr2h,f,c
 11858  0044EE  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11859  0044F2  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11860  0044F6  EC68  F010         	call	_LCD_DrawRect	;wreg free
 11861  0044FA  0012               	return		;funcret
 11862  0044FC                     __end_of_Paddle_draw:
 11863                           	callstack 0
 11864                           
 11865 ;; *************** function _LCD_Fill *****************
 11866 ;; Defined at:
 11867 ;;		line 218 in file "libraries/lcd_highlevel.c"
 11868 ;; Parameters:    Size  Location     Type
 11869 ;;  color           2   17[COMRAM] unsigned short 
 11870 ;; Auto vars:     Size  Location     Type
 11871 ;;  page            2   23[COMRAM] unsigned short 
 11872 ;;  column          2   21[COMRAM] unsigned short 
 11873 ;;  colorL          1   20[COMRAM] unsigned char 
 11874 ;;  colorH          1   19[COMRAM] unsigned char 
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, status,2, status,0
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11884 ;;      Params:         2       0       0       0       0       0       0
 11885 ;;      Locals:         6       0       0       0       0       0       0
 11886 ;;      Temps:          0       0       0       0       0       0       0
 11887 ;;      Totals:         8       0       0       0       0       0       0
 11888 ;;Total ram usage:        8 bytes
 11889 ;; Hardware stack levels used: 1
 11890 ;; Hardware stack levels required when called: 4
 11891 ;; This function calls:
 11892 ;;		Nothing
 11893 ;; This function is called by:
 11894 ;;		_Factory_init
 11895 ;;		_Menu_welcomeDraw
 11896 ;;		_Menu_parametersDraw
 11897 ;;		_Menu_inGameDraw
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           
 11901                           	psect	text51
 11902  004008                     __ptext51:
 11903                           	callstack 0
 11904  004008                     _LCD_Fill:
 11905                           	callstack 21
 11906  004008                     
 11907                           ;libraries/lcd_highlevel.c: 218: void LCD_Fill(uint16_t color);libraries/lcd_highlevel.c
      +                          : 219: {;libraries/lcd_highlevel.c: 220:   uint16_t column;;libraries/lcd_highlevel.c: 2
      +                          21:   uint16_t page;;libraries/lcd_highlevel.c: 222:   uint8_t colorH, colorL;;libraries
      +                          /lcd_highlevel.c: 223:   colorH = color >> 8;
 11908  004008  5013               	movf	(LCD_Fill@color+1)^0,w,c
 11909  00400A  6E14               	movwf	LCD_Fill@colorH^0,c
 11910  00400C                     
 11911                           ;libraries/lcd_highlevel.c: 224:   colorL = color;
 11912  00400C  C012  F015         	movff	LCD_Fill@color,LCD_Fill@colorL
 11913                           
 11914                           ;libraries/lcd_highlevel.c: 226:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 11915  004010  0E2A               	movlw	42
 11916  004012  6E80               	movwf	128,c	;volatile
 11917  004014  988B               	bcf	3979,4,c	;volatile
 11918  004016  968B               	bcf	3979,3,c	;volatile
 11919  004018  868B               	bsf	3979,3,c	;volatile
 11920  00401A  888B               	bsf	3979,4,c	;volatile
 11921                           
 11922                           ;libraries/lcd_highlevel.c: 227:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 11923  00401C  0E00               	movlw	0
 11924  00401E  6E80               	movwf	128,c	;volatile
 11925  004020  968B               	bcf	3979,3,c	;volatile
 11926  004022  868B               	bsf	3979,3,c	;volatile
 11927                           
 11928                           ;libraries/lcd_highlevel.c: 228:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 11929  004024  0E00               	movlw	0
 11930  004026  6E80               	movwf	128,c	;volatile
 11931  004028  968B               	bcf	3979,3,c	;volatile
 11932  00402A  868B               	bsf	3979,3,c	;volatile
 11933                           
 11934                           ;libraries/lcd_highlevel.c: 229:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 11935  00402C  0E00               	movlw	0
 11936  00402E  6E80               	movwf	128,c	;volatile
 11937  004030  968B               	bcf	3979,3,c	;volatile
 11938  004032  868B               	bsf	3979,3,c	;volatile
 11939                           
 11940                           ;libraries/lcd_highlevel.c: 230:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 11941  004034  0EEF               	movlw	239
 11942  004036  6E80               	movwf	128,c	;volatile
 11943  004038  968B               	bcf	3979,3,c	;volatile
 11944  00403A  868B               	bsf	3979,3,c	;volatile
 11945                           
 11946                           ;libraries/lcd_highlevel.c: 232:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 11947  00403C  0E2B               	movlw	43
 11948  00403E  6E80               	movwf	128,c	;volatile
 11949  004040  988B               	bcf	3979,4,c	;volatile
 11950  004042  968B               	bcf	3979,3,c	;volatile
 11951  004044  868B               	bsf	3979,3,c	;volatile
 11952  004046  888B               	bsf	3979,4,c	;volatile
 11953                           
 11954                           ;libraries/lcd_highlevel.c: 233:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 11955  004048  0E00               	movlw	0
 11956  00404A  6E80               	movwf	128,c	;volatile
 11957  00404C  968B               	bcf	3979,3,c	;volatile
 11958  00404E  868B               	bsf	3979,3,c	;volatile
 11959                           
 11960                           ;libraries/lcd_highlevel.c: 234:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 11961  004050  0E00               	movlw	0
 11962  004052  6E80               	movwf	128,c	;volatile
 11963  004054  968B               	bcf	3979,3,c	;volatile
 11964  004056  868B               	bsf	3979,3,c	;volatile
 11965                           
 11966                           ;libraries/lcd_highlevel.c: 235:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 11967  004058  0E01               	movlw	1
 11968  00405A  6E80               	movwf	128,c	;volatile
 11969  00405C  968B               	bcf	3979,3,c	;volatile
 11970  00405E  868B               	bsf	3979,3,c	;volatile
 11971                           
 11972                           ;libraries/lcd_highlevel.c: 236:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 11973  004060  0E3F               	movlw	63
 11974  004062  6E80               	movwf	128,c	;volatile
 11975  004064  968B               	bcf	3979,3,c	;volatile
 11976  004066  868B               	bsf	3979,3,c	;volatile
 11977                           
 11978                           ;libraries/lcd_highlevel.c: 238:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 11979  004068  0E2C               	movlw	44
 11980  00406A  6E80               	movwf	128,c	;volatile
 11981  00406C  988B               	bcf	3979,4,c	;volatile
 11982  00406E  968B               	bcf	3979,3,c	;volatile
 11983  004070  868B               	bsf	3979,3,c	;volatile
 11984  004072  888B               	bsf	3979,4,c	;volatile
 11985                           
 11986                           ;libraries/lcd_highlevel.c: 239:   for(column=0; column<320; column++)
 11987  004074  0E00               	movlw	0
 11988  004076  6E17               	movwf	(LCD_Fill@column+1)^0,c
 11989  004078  0E00               	movlw	0
 11990  00407A  6E16               	movwf	LCD_Fill@column^0,c
 11991  00407C                     l8508:
 11992                           
 11993                           ;libraries/lcd_highlevel.c: 240:   {;libraries/lcd_highlevel.c: 241:     for(page=0; pag
      +                          e<240; page++)
 11994  00407C  0E00               	movlw	0
 11995  00407E  6E19               	movwf	(LCD_Fill@page+1)^0,c
 11996  004080  0E00               	movlw	0
 11997  004082  6E18               	movwf	LCD_Fill@page^0,c
 11998  004084                     l207:
 11999                           
 12000                           ;libraries/lcd_highlevel.c: 242:     {;libraries/lcd_highlevel.c: 243:       PORTA = col
      +                          orH;
 12001  004084  C014  FF80         	movff	LCD_Fill@colorH,3968	;volatile
 12002                           
 12003                           ;libraries/lcd_highlevel.c: 244:       LATC3 = 0;
 12004  004088  968B               	bcf	3979,3,c	;volatile
 12005                           
 12006                           ;libraries/lcd_highlevel.c: 245:       LATC3 = 1;
 12007  00408A  868B               	bsf	3979,3,c	;volatile
 12008                           
 12009                           ;libraries/lcd_highlevel.c: 246:       PORTA = colorL;
 12010  00408C  C015  FF80         	movff	LCD_Fill@colorL,3968	;volatile
 12011                           
 12012                           ;libraries/lcd_highlevel.c: 247:       LATC3 = 0;
 12013  004090  968B               	bcf	3979,3,c	;volatile
 12014                           
 12015                           ;libraries/lcd_highlevel.c: 248:       LATC3 = 1;
 12016  004092  868B               	bsf	3979,3,c	;volatile
 12017  004094                     
 12018                           ;libraries/lcd_highlevel.c: 249:     }
 12019  004094  4A18               	infsnz	LCD_Fill@page^0,f,c
 12020  004096  2A19               	incf	(LCD_Fill@page+1)^0,f,c
 12021  004098  5019               	movf	(LCD_Fill@page+1)^0,w,c
 12022  00409A  E109               	bnz	u5100
 12023  00409C  0EF0               	movlw	240
 12024  00409E  5C18               	subwf	LCD_Fill@page^0,w,c
 12025  0040A0  A0D8               	btfss	status,0,c
 12026  0040A2  EF55  F020         	goto	u5101
 12027  0040A6  EF57  F020         	goto	u5100
 12028  0040AA                     u5101:
 12029  0040AA  EF42  F020         	goto	l207
 12030  0040AE                     u5100:
 12031  0040AE                     
 12032                           ;libraries/lcd_highlevel.c: 250:   }
 12033  0040AE  4A16               	infsnz	LCD_Fill@column^0,f,c
 12034  0040B0  2A17               	incf	(LCD_Fill@column+1)^0,f,c
 12035  0040B2  0E40               	movlw	64
 12036  0040B4  5C16               	subwf	LCD_Fill@column^0,w,c
 12037  0040B6  0E01               	movlw	1
 12038  0040B8  5817               	subwfb	(LCD_Fill@column+1)^0,w,c
 12039  0040BA  A0D8               	btfss	status,0,c
 12040  0040BC  EF62  F020         	goto	u5111
 12041  0040C0  EF64  F020         	goto	u5110
 12042  0040C4                     u5111:
 12043  0040C4  EF3E  F020         	goto	l8508
 12044  0040C8                     u5110:
 12045  0040C8  0012               	return		;funcret
 12046  0040CA                     __end_of_LCD_Fill:
 12047                           	callstack 0
 12048                           
 12049 ;; *************** function _LCD_ButtonDraw *****************
 12050 ;; Defined at:
 12051 ;;		line 462 in file "libraries/lcd_highlevel.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  button          2   28[BANK0 ] PTR struct .
 12054 ;;		 -> g1(209), 
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;  bmpPtr          2   58[BANK0 ] PTR struct .
 12057 ;;		 -> STR_8(4), STR_7(4), STR_6(8), STR_5(9), 
 12058 ;;		 -> STR_4(9), STR_3(11), 
 12059 ;;  yText           2   55[BANK0 ] unsigned short 
 12060 ;;  xText           2   53[BANK0 ] unsigned short 
 12061 ;;  y2              2   51[BANK0 ] unsigned short 
 12062 ;;  y1              2   49[BANK0 ] unsigned short 
 12063 ;;  x2              2   47[BANK0 ] unsigned short 
 12064 ;;  x1              2   45[BANK0 ] unsigned short 
 12065 ;;  width           2   43[BANK0 ] unsigned short 
 12066 ;;  i               1   57[BANK0 ] unsigned char 
 12067 ;;  tempChar        1   42[BANK0 ] unsigned char 
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  1    wreg      void 
 12070 ;; Registers used:
 12071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12077 ;;      Params:         0       2       0       0       0       0       0
 12078 ;;      Locals:         0      18       0       0       0       0       0
 12079 ;;      Temps:          0      12       0       0       0       0       0
 12080 ;;      Totals:         0      32       0       0       0       0       0
 12081 ;;Total ram usage:       32 bytes
 12082 ;; Hardware stack levels used: 1
 12083 ;; Hardware stack levels required when called: 6
 12084 ;; This function calls:
 12085 ;;		_LCD_Bitmap
 12086 ;;		_LCD_ButtonUpdate
 12087 ;;		_LCD_DrawRect
 12088 ;;		_LCD_DrawText
 12089 ;;		___awdiv
 12090 ;;		_strlen
 12091 ;; This function is called by:
 12092 ;;		_Menu_welcomeDraw
 12093 ;;		_Menu_parametersDraw
 12094 ;;		_Menu_inGameDraw
 12095 ;; This function uses a non-reentrant model
 12096 ;;
 12097                           
 12098                           	psect	text52
 12099  0006AA                     __ptext52:
 12100                           	callstack 0
 12101  0006AA                     _LCD_ButtonDraw:
 12102                           	callstack 19
 12103  0006AA                     
 12104                           ;libraries/lcd_highlevel.c: 462: void LCD_ButtonDraw(btn_t * button);libraries/lcd_highl
      +                          evel.c: 463: {;libraries/lcd_highlevel.c: 464:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 465:   uint16_t xText,yText;;libraries/lcd_highlevel.c: 466:   uint8_t i, temp
      +                          Char;;libraries/lcd_highlevel.c: 467:   uint16_t width=0;
 12105  0006AA  0E00               	movlw	0
 12106  0006AC  0100               	movlb	0	; () banked
 12107  0006AE  6F8C               	movwf	(LCD_ButtonDraw@width+1)& (0+255),b
 12108  0006B0  0E00               	movlw	0
 12109  0006B2  6F8B               	movwf	LCD_ButtonDraw@width& (0+255),b
 12110  0006B4                     
 12111                           ; BSR set to: 0
 12112                           ;libraries/lcd_highlevel.c: 468:   BMP_STRUCT *bmpPtr;;libraries/lcd_highlevel.c: 470:  
      +                           x1 = button->posX;
 12113  0006B4  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12114  0006B8  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12115  0006BC  CFDE F08D          	movff	postinc2,LCD_ButtonDraw@x1
 12116  0006C0  CFDD F08E          	movff	postdec2,LCD_ButtonDraw@x1+1
 12117  0006C4                     
 12118                           ; BSR set to: 0
 12119                           ;libraries/lcd_highlevel.c: 471:   x2 = button->posX + button->width;
 12120  0006C4  EE20 F004          	lfsr	2,4
 12121  0006C8  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12122  0006CA  26D9               	addwf	fsr2l,f,c
 12123  0006CC  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12124  0006CE  22DA               	addwfc	fsr2h,f,c
 12125  0006D0  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12126  0006D4  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12127  0006D8  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12128  0006DC  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12129  0006E0  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12130  0006E4  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12131  0006E8  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12132  0006EA  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12133  0006EC  6F8F               	movwf	LCD_ButtonDraw@x2& (0+255),b
 12134  0006EE  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12135  0006F0  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12136  0006F2  6F90               	movwf	(LCD_ButtonDraw@x2+1)& (0+255),b
 12137  0006F4                     
 12138                           ; BSR set to: 0
 12139                           ;libraries/lcd_highlevel.c: 472:   y1 = button->posY;
 12140  0006F4  EE20 F002          	lfsr	2,2
 12141  0006F8  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12142  0006FA  26D9               	addwf	fsr2l,f,c
 12143  0006FC  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12144  0006FE  22DA               	addwfc	fsr2h,f,c
 12145  000700  CFDE F091          	movff	postinc2,LCD_ButtonDraw@y1
 12146  000704  CFDD F092          	movff	postdec2,LCD_ButtonDraw@y1+1
 12147  000708                     
 12148                           ; BSR set to: 0
 12149                           ;libraries/lcd_highlevel.c: 473:   y2 = button->posY + button->height;
 12150  000708  EE20 F006          	lfsr	2,6
 12151  00070C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12152  00070E  26D9               	addwf	fsr2l,f,c
 12153  000710  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12154  000712  22DA               	addwfc	fsr2h,f,c
 12155  000714  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12156  000718  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12157  00071C  EE20 F002          	lfsr	2,2
 12158  000720  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12159  000722  26D9               	addwf	fsr2l,f,c
 12160  000724  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12161  000726  22DA               	addwfc	fsr2h,f,c
 12162  000728  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12163  00072C  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12164  000730  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12165  000732  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12166  000734  6F93               	movwf	LCD_ButtonDraw@y2& (0+255),b
 12167  000736  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12168  000738  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12169  00073A  6F94               	movwf	(LCD_ButtonDraw@y2+1)& (0+255),b
 12170  00073C                     
 12171                           ; BSR set to: 0
 12172                           ;libraries/lcd_highlevel.c: 474:   if(button->bgColor != button->txtColor)
 12173  00073C  EE20 F008          	lfsr	2,8
 12174  000740  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12175  000742  26D9               	addwf	fsr2l,f,c
 12176  000744  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12177  000746  22DA               	addwfc	fsr2h,f,c
 12178  000748  EE10 F00A          	lfsr	1,10
 12179  00074C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12180  00074E  26E1               	addwf	fsr1l,f,c
 12181  000750  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12182  000752  22E2               	addwfc	fsr1h,f,c
 12183  000754  50DE               	movf	postinc2,w,c
 12184  000756  18E6               	xorwf	postinc1,w,c
 12185  000758  E109               	bnz	u5130
 12186  00075A  50DE               	movf	postinc2,w,c
 12187  00075C  18E6               	xorwf	postinc1,w,c
 12188  00075E  B4D8               	btfsc	status,2,c
 12189  000760  EFB4  F003         	goto	u5131
 12190  000764  EFB6  F003         	goto	u5130
 12191  000768                     u5131:
 12192  000768  EFF3  F003         	goto	l8544
 12193  00076C                     u5130:
 12194  00076C                     
 12195                           ; BSR set to: 0
 12196                           ;libraries/lcd_highlevel.c: 475:   {;libraries/lcd_highlevel.c: 476:     LCD_DrawRect(x1
      +                          , y1, x2, y2, 1, button->bgColor);
 12197  00076C  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12198  000770  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12199  000774  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12200  000778  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12201  00077C  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12202  000780  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12203  000784  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12204  000788  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12205  00078C  0E01               	movlw	1
 12206  00078E  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12207  000790  EE20 F00A          	lfsr	2,10
 12208  000794  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12209  000796  26D9               	addwf	fsr2l,f,c
 12210  000798  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12211  00079A  22DA               	addwfc	fsr2h,f,c
 12212  00079C  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12213  0007A0  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12214  0007A4  EC68  F010         	call	_LCD_DrawRect	;wreg free
 12215                           
 12216                           ;libraries/lcd_highlevel.c: 477:     LCD_DrawRect(x1, y1, x2, y2, 0, button->txtColor);
 12217  0007A8  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12218  0007AC  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12219  0007B0  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12220  0007B4  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12221  0007B8  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12222  0007BC  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12223  0007C0  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12224  0007C4  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12225  0007C8  0E00               	movlw	0
 12226  0007CA  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12227  0007CC  0100               	movlb	0	; () banked
 12228  0007CE  EE20 F008          	lfsr	2,8
 12229  0007D2  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12230  0007D4  26D9               	addwf	fsr2l,f,c
 12231  0007D6  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12232  0007D8  22DA               	addwfc	fsr2h,f,c
 12233  0007DA  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12234  0007DE  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12235  0007E2  EC68  F010         	call	_LCD_DrawRect	;wreg free
 12236  0007E6                     l8544:
 12237                           
 12238                           ;libraries/lcd_highlevel.c: 482:   if((button->text[0] == 'B')&&(button->text[1] == 'M')
      +                          )
 12239  0007E6  0100               	movlb	0	; () banked
 12240  0007E8  EE20 F00C          	lfsr	2,12
 12241  0007EC  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12242  0007EE  26D9               	addwf	fsr2l,f,c
 12243  0007F0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12244  0007F2  22DA               	addwfc	fsr2h,f,c
 12245  0007F4  CFDE FFF6          	movff	postinc2,tblptrl
 12246  0007F8  CFDD FFF7          	movff	postdec2,tblptrh
 12247  0007FC                     	if	0	;tblptru may be non-zero
 12248  0007FC                     	endif
 12249  0007FC                     	if	0	;tblptru may be non-zero
 12250  0007FC                     	endif
 12251  0007FC  0008               	tblrd		*
 12252  0007FE  50F5               	movf	tablat,w,c
 12253  000800  0A42               	xorlw	66
 12254  000802  A4D8               	btfss	status,2,c
 12255  000804  EF06  F004         	goto	u5141
 12256  000808  EF08  F004         	goto	u5140
 12257  00080C                     u5141:
 12258  00080C  EFB8  F004         	goto	l8556
 12259  000810                     u5140:
 12260  000810                     
 12261                           ; BSR set to: 0
 12262  000810  EE20 F00C          	lfsr	2,12
 12263  000814  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12264  000816  26D9               	addwf	fsr2l,f,c
 12265  000818  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12266  00081A  22DA               	addwfc	fsr2h,f,c
 12267  00081C  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12268  000820  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12269  000824  0E01               	movlw	1
 12270  000826  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12271  000828  0E00               	movlw	0
 12272  00082A  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12273  00082C  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12274  000830  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12275  000834                     	if	0	;tblptru may be non-zero
 12276  000834                     	endif
 12277  000834                     	if	0	;tblptru may be non-zero
 12278  000834                     	endif
 12279  000834  0008               	tblrd		*
 12280  000836  50F5               	movf	tablat,w,c
 12281  000838  0A4D               	xorlw	77
 12282  00083A  A4D8               	btfss	status,2,c
 12283  00083C  EF22  F004         	goto	u5151
 12284  000840  EF24  F004         	goto	u5150
 12285  000844                     u5151:
 12286  000844  EFB8  F004         	goto	l8556
 12287  000848                     u5150:
 12288  000848                     
 12289                           ; BSR set to: 0
 12290                           ;libraries/lcd_highlevel.c: 483:   {;libraries/lcd_highlevel.c: 484:     bmpPtr = (BMP_S
      +                          TRUCT *)button->text;
 12291  000848  EE20 F00C          	lfsr	2,12
 12292  00084C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12293  00084E  26D9               	addwf	fsr2l,f,c
 12294  000850  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12295  000852  22DA               	addwfc	fsr2h,f,c
 12296  000854  CFDE F09A          	movff	postinc2,LCD_ButtonDraw@bmpPtr
 12297  000858  CFDD F09B          	movff	postdec2,LCD_ButtonDraw@bmpPtr+1
 12298  00085C                     
 12299                           ; BSR set to: 0
 12300                           ;libraries/lcd_highlevel.c: 485:     yText = button->height / 2 + button->posY - (bmpPtr
      +                          ->biHeight / 2);
 12301  00085C  EE20 F002          	lfsr	2,2
 12302  000860  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12303  000862  26D9               	addwf	fsr2l,f,c
 12304  000864  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12305  000866  22DA               	addwfc	fsr2h,f,c
 12306  000868  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12307  00086C  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12308  000870  0E16               	movlw	22
 12309  000872  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12310  000874  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12311  000876  0E00               	movlw	0
 12312  000878  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12313  00087A  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12314  00087C  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12315  000880  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12316  000884                     	if	0	;tblptru may be non-zero
 12317  000884                     	endif
 12318  000884                     	if	0	;tblptru may be non-zero
 12319  000884                     	endif
 12320  000884  0009               	tblrd		*+
 12321  000886  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12322  00088A  0009               	tblrd		*+
 12323  00088C  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12324  000890  0009               	tblrd		*+
 12325  000892  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12326  000896  0009               	tblrd		*+
 12327  000898  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12328  00089C  90D8               	bcf	status,0,c
 12329  00089E  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12330  0008A0  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12331  0008A2  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12332  0008A4  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12333  0008A6  EE20 F006          	lfsr	2,6
 12334  0008AA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12335  0008AC  26D9               	addwf	fsr2l,f,c
 12336  0008AE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12337  0008B0  22DA               	addwfc	fsr2h,f,c
 12338  0008B2  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12339  0008B6  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12340  0008BA  90D8               	bcf	status,0,c
 12341  0008BC  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12342  0008BE  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12343  0008C0  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12344  0008C2  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12345  0008C4  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12346  0008C6  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12347  0008C8  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12348  0008CA  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12349  0008CC  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12350  0008CE  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12351  0008D0  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12352  0008D2  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12353  0008D4  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12354  0008D6  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12355  0008D8                     
 12356                           ; BSR set to: 0
 12357                           ;libraries/lcd_highlevel.c: 486:     xText = button->width / 2 + button->posX - (bmpPtr-
      +                          >biWidth / 2);
 12358  0008D8  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12359  0008DC  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12360  0008E0  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12361  0008E4  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12362  0008E8  0E12               	movlw	18
 12363  0008EA  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12364  0008EC  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12365  0008EE  0E00               	movlw	0
 12366  0008F0  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12367  0008F2  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12368  0008F4  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12369  0008F8  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12370  0008FC                     	if	0	;tblptru may be non-zero
 12371  0008FC                     	endif
 12372  0008FC                     	if	0	;tblptru may be non-zero
 12373  0008FC                     	endif
 12374  0008FC  0009               	tblrd		*+
 12375  0008FE  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12376  000902  0009               	tblrd		*+
 12377  000904  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12378  000908  0009               	tblrd		*+
 12379  00090A  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12380  00090E  0009               	tblrd		*+
 12381  000910  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12382  000914  90D8               	bcf	status,0,c
 12383  000916  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12384  000918  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12385  00091A  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12386  00091C  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12387  00091E  EE20 F004          	lfsr	2,4
 12388  000922  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12389  000924  26D9               	addwf	fsr2l,f,c
 12390  000926  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12391  000928  22DA               	addwfc	fsr2h,f,c
 12392  00092A  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12393  00092E  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12394  000932  90D8               	bcf	status,0,c
 12395  000934  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12396  000936  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12397  000938  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12398  00093A  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12399  00093C  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12400  00093E  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12401  000940  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12402  000942  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12403  000944  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12404  000946  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12405  000948  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 12406  00094A  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12407  00094C  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12408  00094E  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 12409  000950                     
 12410                           ; BSR set to: 0
 12411                           ;libraries/lcd_highlevel.c: 487:     LCD_Bitmap((const uint8_t *)bmpPtr,xText,yText);
 12412  000950  C09A  F027         	movff	LCD_ButtonDraw@bmpPtr,LCD_Bitmap@bmpPtr
 12413  000954  C09B  F028         	movff	LCD_ButtonDraw@bmpPtr+1,LCD_Bitmap@bmpPtr+1
 12414  000958  C095  F029         	movff	LCD_ButtonDraw@xText,LCD_Bitmap@posX
 12415  00095C  C096  F02A         	movff	LCD_ButtonDraw@xText+1,LCD_Bitmap@posX+1
 12416  000960  C097  F02B         	movff	LCD_ButtonDraw@yText,LCD_Bitmap@posY
 12417  000964  C098  F02C         	movff	LCD_ButtonDraw@yText+1,LCD_Bitmap@posY+1
 12418  000968  EC5A  F000         	call	_LCD_Bitmap	;wreg free
 12419                           
 12420                           ;libraries/lcd_highlevel.c: 488:   }
 12421  00096C  EFC5  F005         	goto	l8572
 12422  000970                     l8556:
 12423                           
 12424                           ; BSR set to: 0
 12425                           ;libraries/lcd_highlevel.c: 493:   {;libraries/lcd_highlevel.c: 494:     yText = button-
      +                          >height / 2 + button->posY - (button->font->height / 2);
 12426  000970  EE20 F002          	lfsr	2,2
 12427  000974  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12428  000976  26D9               	addwf	fsr2l,f,c
 12429  000978  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12430  00097A  22DA               	addwfc	fsr2h,f,c
 12431  00097C  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12432  000980  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12433  000984  EE20 F00E          	lfsr	2,14
 12434  000988  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12435  00098A  26D9               	addwf	fsr2l,f,c
 12436  00098C  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12437  00098E  22DA               	addwfc	fsr2h,f,c
 12438  000990  CFDE FFF6          	movff	postinc2,tblptrl
 12439  000994  CFDD FFF7          	movff	postdec2,tblptrh
 12440  000998                     	if	0	;tblptru may be non-zero
 12441  000998                     	endif
 12442  000998                     	if	0	;tblptru may be non-zero
 12443  000998                     	endif
 12444  000998  0008               	tblrd		*
 12445  00099A  50F5               	movf	tablat,w,c
 12446  00099C  6E12               	movwf	___awdiv@dividend^0,c
 12447  00099E  6A13               	clrf	(___awdiv@dividend+1)^0,c
 12448  0009A0  0E00               	movlw	0
 12449  0009A2  6E15               	movwf	(___awdiv@divisor+1)^0,c
 12450  0009A4  0E02               	movlw	2
 12451  0009A6  6E14               	movwf	___awdiv@divisor^0,c
 12452  0009A8  EC41  F01F         	call	___awdiv	;wreg free
 12453  0009AC  0100               	movlb	0	; () banked
 12454  0009AE  EE20 F006          	lfsr	2,6
 12455  0009B2  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12456  0009B4  26D9               	addwf	fsr2l,f,c
 12457  0009B6  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12458  0009B8  22DA               	addwfc	fsr2h,f,c
 12459  0009BA  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12460  0009BE  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12461  0009C2  90D8               	bcf	status,0,c
 12462  0009C4  3181               	rrcf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12463  0009C6  6F83               	movwf	(??_LCD_ButtonDraw+5)& (0+255),b
 12464  0009C8  3180               	rrcf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12465  0009CA  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12466  0009CC  5012               	movf	?___awdiv^0,w,c
 12467  0009CE  5F82               	subwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12468  0009D0  5013               	movf	(?___awdiv+1)^0,w,c
 12469  0009D2  5B83               	subwfb	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12470  0009D4  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12471  0009D6  2582               	addwf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12472  0009D8  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12473  0009DA  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12474  0009DC  2183               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12475  0009DE  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12476  0009E0                     
 12477                           ; BSR set to: 0
 12478                           ;libraries/lcd_highlevel.c: 495:     for(i=0;i<strlen(button->text);i++)
 12479  0009E0  0E00               	movlw	0
 12480  0009E2  6F99               	movwf	LCD_ButtonDraw@i& (0+255),b
 12481  0009E4  EF50  F005         	goto	l8566
 12482  0009E8                     l8560:
 12483                           
 12484                           ; BSR set to: 0
 12485                           ;libraries/lcd_highlevel.c: 496:     {;libraries/lcd_highlevel.c: 497:       tempChar = 
      +                          (button->text[i]) - button->font->start_char;
 12486  0009E8  EE20 F00E          	lfsr	2,14
 12487  0009EC  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12488  0009EE  26D9               	addwf	fsr2l,f,c
 12489  0009F0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12490  0009F2  22DA               	addwfc	fsr2h,f,c
 12491  0009F4  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12492  0009F8  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12493  0009FC  0E01               	movlw	1
 12494  0009FE  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12495  000A00  0E00               	movlw	0
 12496  000A02  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12497  000A04  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12498  000A08  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12499  000A0C                     	if	0	;tblptru may be non-zero
 12500  000A0C                     	endif
 12501  000A0C                     	if	0	;tblptru may be non-zero
 12502  000A0C                     	endif
 12503  000A0C  0008               	tblrd		*
 12504  000A0E  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12505  000A12  EE20 F00C          	lfsr	2,12
 12506  000A16  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12507  000A18  26D9               	addwf	fsr2l,f,c
 12508  000A1A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12509  000A1C  22DA               	addwfc	fsr2h,f,c
 12510  000A1E  CFDE F081          	movff	postinc2,??_LCD_ButtonDraw+3
 12511  000A22  CFDD F082          	movff	postdec2,??_LCD_ButtonDraw+4
 12512  000A26  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12513  000A28  2781               	addwf	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12514  000A2A  0E00               	movlw	0
 12515  000A2C  2382               	addwfc	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12516  000A2E  C081  FFF6         	movff	??_LCD_ButtonDraw+3,tblptrl
 12517  000A32  C082  FFF7         	movff	??_LCD_ButtonDraw+4,tblptrh
 12518  000A36                     	if	0	;tblptru may be non-zero
 12519  000A36                     	endif
 12520  000A36                     	if	0	;tblptru may be non-zero
 12521  000A36                     	endif
 12522  000A36  0008               	tblrd		*
 12523  000A38  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12524  000A3C  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12525  000A3E  5D83               	subwf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12526  000A40  6F8A               	movwf	LCD_ButtonDraw@tempChar& (0+255),b
 12527  000A42                     
 12528                           ; BSR set to: 0
 12529                           ;libraries/lcd_highlevel.c: 498:       width += button->font->descriptor[tempChar].width
      +                          +2;
 12530  000A42  518A               	movf	LCD_ButtonDraw@tempChar& (0+255),w,b
 12531  000A44  0D03               	mullw	3
 12532  000A46  EE20 F00E          	lfsr	2,14
 12533  000A4A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12534  000A4C  26D9               	addwf	fsr2l,f,c
 12535  000A4E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12536  000A50  22DA               	addwfc	fsr2h,f,c
 12537  000A52  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12538  000A56  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12539  000A5A  0E03               	movlw	3
 12540  000A5C  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12541  000A5E  0E00               	movlw	0
 12542  000A60  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12543  000A62  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12544  000A66  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12545  000A6A                     	if	0	;tblptru may be non-zero
 12546  000A6A                     	endif
 12547  000A6A                     	if	0	;tblptru may be non-zero
 12548  000A6A                     	endif
 12549  000A6A  0009               	tblrd		*+
 12550  000A6C  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12551  000A70  0009               	tblrd		*+
 12552  000A72  CFF5 F081          	movff	tablat,??_LCD_ButtonDraw+3
 12553  000A76  50F3               	movf	243,w,c
 12554  000A78  2780               	addwf	(??_LCD_ButtonDraw+2)& (0+255),f,b
 12555  000A7A  50F4               	movf	244,w,c
 12556  000A7C  2381               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12557  000A7E  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12558  000A82  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12559  000A86                     	if	0	;tblptru may be non-zero
 12560  000A86                     	endif
 12561  000A86                     	if	0	;tblptru may be non-zero
 12562  000A86                     	endif
 12563  000A86  0008               	tblrd		*
 12564  000A88  50F5               	movf	tablat,w,c
 12565  000A8A  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12566  000A8C  6B83               	clrf	(??_LCD_ButtonDraw+5)& (0+255),b
 12567  000A8E  0E02               	movlw	2
 12568  000A90  2782               	addwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12569  000A92  0E00               	movlw	0
 12570  000A94  2383               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12571  000A96  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12572  000A98  278B               	addwf	LCD_ButtonDraw@width& (0+255),f,b
 12573  000A9A  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12574  000A9C  238C               	addwfc	(LCD_ButtonDraw@width+1)& (0+255),f,b
 12575  000A9E                     
 12576                           ; BSR set to: 0
 12577                           ;libraries/lcd_highlevel.c: 499:     }
 12578  000A9E  2B99               	incf	LCD_ButtonDraw@i& (0+255),f,b
 12579  000AA0                     l8566:
 12580                           
 12581                           ; BSR set to: 0
 12582  000AA0  EE20 F00C          	lfsr	2,12
 12583  000AA4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12584  000AA6  26D9               	addwf	fsr2l,f,c
 12585  000AA8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12586  000AAA  22DA               	addwfc	fsr2h,f,c
 12587  000AAC  CFDE F012          	movff	postinc2,strlen@s
 12588  000AB0  CFDD F013          	movff	postdec2,strlen@s+1
 12589  000AB4  ECA3  F026         	call	_strlen	;wreg free
 12590  000AB8  0100               	movlb	0	; () banked
 12591  000ABA  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12592  000ABC  6F7E               	movwf	??_LCD_ButtonDraw& (0+255),b
 12593  000ABE  6B7F               	clrf	(??_LCD_ButtonDraw+1)& (0+255),b
 12594  000AC0  5012               	movf	?_strlen^0,w,c
 12595  000AC2  5D7E               	subwf	??_LCD_ButtonDraw& (0+255),w,b
 12596  000AC4  5013               	movf	(?_strlen+1)^0,w,c
 12597  000AC6  597F               	subwfb	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12598  000AC8  A0D8               	btfss	status,0,c
 12599  000ACA  EF69  F005         	goto	u5161
 12600  000ACE  EF6B  F005         	goto	u5160
 12601  000AD2                     u5161:
 12602  000AD2  EFF4  F004         	goto	l8560
 12603  000AD6                     u5160:
 12604  000AD6                     
 12605                           ; BSR set to: 0
 12606                           ;libraries/lcd_highlevel.c: 500:     xText = button->width / 2 + button->posX - (width /
      +                           2);
 12607  000AD6  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12608  000ADA  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12609  000ADE  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12610  000AE2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12611  000AE6  90D8               	bcf	status,0,c
 12612  000AE8  318C               	rrcf	(LCD_ButtonDraw@width+1)& (0+255),w,b
 12613  000AEA  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12614  000AEC  318B               	rrcf	LCD_ButtonDraw@width& (0+255),w,b
 12615  000AEE  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12616  000AF0  EE20 F004          	lfsr	2,4
 12617  000AF4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12618  000AF6  26D9               	addwf	fsr2l,f,c
 12619  000AF8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12620  000AFA  22DA               	addwfc	fsr2h,f,c
 12621  000AFC  CFDE F082          	movff	postinc2,??_LCD_ButtonDraw+4
 12622  000B00  CFDD F083          	movff	postdec2,??_LCD_ButtonDraw+5
 12623  000B04  90D8               	bcf	status,0,c
 12624  000B06  3183               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12625  000B08  6F85               	movwf	(??_LCD_ButtonDraw+7)& (0+255),b
 12626  000B0A  3182               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12627  000B0C  6F84               	movwf	(??_LCD_ButtonDraw+6)& (0+255),b
 12628  000B0E  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12629  000B10  5F84               	subwf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12630  000B12  5181               	movf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12631  000B14  5B85               	subwfb	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12632  000B16  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12633  000B18  2584               	addwf	(??_LCD_ButtonDraw+6)& (0+255),w,b
 12634  000B1A  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 12635  000B1C  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12636  000B1E  2185               	addwfc	(??_LCD_ButtonDraw+7)& (0+255),w,b
 12637  000B20  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 12638  000B22                     
 12639                           ; BSR set to: 0
 12640                           ;libraries/lcd_highlevel.c: 501:     LCD_DrawText(button->text, button->font,A_LEFT,
 12641  000B22  EE20 F00C          	lfsr	2,12
 12642  000B26  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12643  000B28  26D9               	addwf	fsr2l,f,c
 12644  000B2A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12645  000B2C  22DA               	addwfc	fsr2h,f,c
 12646  000B2E  CFDE F020          	movff	postinc2,LCD_DrawText@msg
 12647  000B32  CFDD F021          	movff	postdec2,LCD_DrawText@msg+1
 12648  000B36  EE20 F00E          	lfsr	2,14
 12649  000B3A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12650  000B3C  26D9               	addwf	fsr2l,f,c
 12651  000B3E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12652  000B40  22DA               	addwfc	fsr2h,f,c
 12653  000B42  CFDE F022          	movff	postinc2,LCD_DrawText@font
 12654  000B46  CFDD F023          	movff	postdec2,LCD_DrawText@font+1
 12655  000B4A  0E00               	movlw	0
 12656  000B4C  6E24               	movwf	LCD_DrawText@align^0,c
 12657  000B4E  C095  F025         	movff	LCD_ButtonDraw@xText,LCD_DrawText@posX
 12658  000B52  C096  F026         	movff	LCD_ButtonDraw@xText+1,LCD_DrawText@posX+1
 12659  000B56  C097  F027         	movff	LCD_ButtonDraw@yText,LCD_DrawText@posY
 12660  000B5A  C098  F028         	movff	LCD_ButtonDraw@yText+1,LCD_DrawText@posY+1
 12661  000B5E  EE20 F008          	lfsr	2,8
 12662  000B62  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12663  000B64  26D9               	addwf	fsr2l,f,c
 12664  000B66  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12665  000B68  22DA               	addwfc	fsr2h,f,c
 12666  000B6A  CFDE F029          	movff	postinc2,LCD_DrawText@color
 12667  000B6E  CFDD F02A          	movff	postdec2,LCD_DrawText@color+1
 12668  000B72  EE20 F00A          	lfsr	2,10
 12669  000B76  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12670  000B78  26D9               	addwf	fsr2l,f,c
 12671  000B7A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12672  000B7C  22DA               	addwfc	fsr2h,f,c
 12673  000B7E  CFDE F02B          	movff	postinc2,LCD_DrawText@bg_color
 12674  000B82  CFDD F02C          	movff	postdec2,LCD_DrawText@bg_color+1
 12675  000B86  EC86  F00A         	call	_LCD_DrawText	;wreg free
 12676  000B8A                     l8572:
 12677                           
 12678                           ;libraries/lcd_highlevel.c: 504:   LCD_ButtonUpdate(button);
 12679  000B8A  C07C  F025         	movff	LCD_ButtonDraw@button,LCD_ButtonUpdate@button
 12680  000B8E  C07D  F026         	movff	LCD_ButtonDraw@button+1,LCD_ButtonUpdate@button+1
 12681  000B92  ECCA  F014         	call	_LCD_ButtonUpdate	;wreg free
 12682  000B96  0012               	return		;funcret
 12683  000B98                     __end_of_LCD_ButtonDraw:
 12684                           	callstack 0
 12685                           
 12686 ;; *************** function _LCD_ButtonUpdate *****************
 12687 ;; Defined at:
 12688 ;;		line 425 in file "libraries/lcd_highlevel.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;  button          2   36[COMRAM] PTR struct .
 12691 ;;		 -> g1(209), 
 12692 ;; Auto vars:     Size  Location     Type
 12693 ;;  y2              2   52[COMRAM] unsigned short 
 12694 ;;  x1              2   50[COMRAM] unsigned short 
 12695 ;;  y1              2   48[COMRAM] unsigned short 
 12696 ;;  x2              2   46[COMRAM] unsigned short 
 12697 ;;  colorIn         2   44[COMRAM] unsigned short 
 12698 ;;  colorOut        2   42[COMRAM] unsigned short 
 12699 ;; Return value:  Size  Location     Type
 12700 ;;                  1    wreg      void 
 12701 ;; Registers used:
 12702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12703 ;; Tracked objects:
 12704 ;;		On entry : 0/0
 12705 ;;		On exit  : 0/0
 12706 ;;		Unchanged: 0/0
 12707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12708 ;;      Params:         2       0       0       0       0       0       0
 12709 ;;      Locals:        12       0       0       0       0       0       0
 12710 ;;      Temps:          4       0       0       0       0       0       0
 12711 ;;      Totals:        18       0       0       0       0       0       0
 12712 ;;Total ram usage:       18 bytes
 12713 ;; Hardware stack levels used: 1
 12714 ;; Hardware stack levels required when called: 5
 12715 ;; This function calls:
 12716 ;;		_LCD_DrawRect
 12717 ;;		_LCD_Read
 12718 ;; This function is called by:
 12719 ;;		_LCD_ButtonDraw
 12720 ;;		_gameControllerController
 12721 ;; This function uses a non-reentrant model
 12722 ;;
 12723                           
 12724                           	psect	text53
 12725  002994                     __ptext53:
 12726                           	callstack 0
 12727  002994                     _LCD_ButtonUpdate:
 12728                           	callstack 21
 12729  002994                     
 12730                           ;libraries/lcd_highlevel.c: 425: void LCD_ButtonUpdate(btn_t * button);libraries/lcd_hig
      +                          hlevel.c: 426: {;libraries/lcd_highlevel.c: 427:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 428:   uint16_t colorOut, colorIn;;libraries/lcd_highlevel.c: 430:   x1 = bu
      +                          tton->posX;
 12731  002994  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 12732  002998  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 12733  00299C  CFDE F033          	movff	postinc2,LCD_ButtonUpdate@x1
 12734  0029A0  CFDD F034          	movff	postdec2,LCD_ButtonUpdate@x1+1
 12735  0029A4                     
 12736                           ;libraries/lcd_highlevel.c: 431:   x2 = button->posX + button->width;
 12737  0029A4  EE20 F004          	lfsr	2,4
 12738  0029A8  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 12739  0029AA  26D9               	addwf	fsr2l,f,c
 12740  0029AC  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 12741  0029AE  22DA               	addwfc	fsr2h,f,c
 12742  0029B0  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 12743  0029B4  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 12744  0029B8  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 12745  0029BC  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 12746  0029C0  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 12747  0029C4  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 12748  0029C8  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 12749  0029CA  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 12750  0029CC  6E2F               	movwf	LCD_ButtonUpdate@x2^0,c
 12751  0029CE  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 12752  0029D0  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 12753  0029D2  6E30               	movwf	(LCD_ButtonUpdate@x2+1)^0,c
 12754  0029D4                     
 12755                           ;libraries/lcd_highlevel.c: 432:   y1 = button->posY;
 12756  0029D4  EE20 F002          	lfsr	2,2
 12757  0029D8  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 12758  0029DA  26D9               	addwf	fsr2l,f,c
 12759  0029DC  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 12760  0029DE  22DA               	addwfc	fsr2h,f,c
 12761  0029E0  CFDE F031          	movff	postinc2,LCD_ButtonUpdate@y1
 12762  0029E4  CFDD F032          	movff	postdec2,LCD_ButtonUpdate@y1+1
 12763  0029E8                     
 12764                           ;libraries/lcd_highlevel.c: 433:   y2 = button->posY + button->height;
 12765  0029E8  EE20 F006          	lfsr	2,6
 12766  0029EC  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 12767  0029EE  26D9               	addwf	fsr2l,f,c
 12768  0029F0  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 12769  0029F2  22DA               	addwfc	fsr2h,f,c
 12770  0029F4  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 12771  0029F8  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 12772  0029FC  EE20 F002          	lfsr	2,2
 12773  002A00  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 12774  002A02  26D9               	addwf	fsr2l,f,c
 12775  002A04  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 12776  002A06  22DA               	addwfc	fsr2h,f,c
 12777  002A08  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 12778  002A0C  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 12779  002A10  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 12780  002A12  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 12781  002A14  6E35               	movwf	LCD_ButtonUpdate@y2^0,c
 12782  002A16  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 12783  002A18  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 12784  002A1A  6E36               	movwf	(LCD_ButtonUpdate@y2+1)^0,c
 12785  002A1C                     
 12786                           ;libraries/lcd_highlevel.c: 435:   if(button->pressed == 0)
 12787  002A1C  EE20 F010          	lfsr	2,16
 12788  002A20  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 12789  002A22  26D9               	addwf	fsr2l,f,c
 12790  002A24  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 12791  002A26  22DA               	addwfc	fsr2h,f,c
 12792  002A28  50DF               	movf	indf2,w,c
 12793  002A2A  A4D8               	btfss	status,2,c
 12794  002A2C  EF1A  F015         	goto	u4801
 12795  002A30  EF1C  F015         	goto	u4800
 12796  002A34                     u4801:
 12797  002A34  EF32  F015         	goto	l8068
 12798  002A38                     u4800:
 12799  002A38                     
 12800                           ;libraries/lcd_highlevel.c: 436:   {;libraries/lcd_highlevel.c: 437:     colorOut = butt
      +                          on->txtColor;
 12801  002A38  EE20 F008          	lfsr	2,8
 12802  002A3C  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 12803  002A3E  26D9               	addwf	fsr2l,f,c
 12804  002A40  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 12805  002A42  22DA               	addwfc	fsr2h,f,c
 12806  002A44  CFDE F02B          	movff	postinc2,LCD_ButtonUpdate@colorOut
 12807  002A48  CFDD F02C          	movff	postdec2,LCD_ButtonUpdate@colorOut+1
 12808                           
 12809                           ;libraries/lcd_highlevel.c: 438:     colorIn = button->bgColor;
 12810  002A4C  EE20 F00A          	lfsr	2,10
 12811  002A50  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 12812  002A52  26D9               	addwf	fsr2l,f,c
 12813  002A54  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 12814  002A56  22DA               	addwfc	fsr2h,f,c
 12815  002A58  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 12816  002A5C  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 12817                           
 12818                           ;libraries/lcd_highlevel.c: 439:   }
 12819  002A60  EF4C  F015         	goto	l8072
 12820  002A64                     l8068:
 12821                           
 12822                           ;libraries/lcd_highlevel.c: 441:   {;libraries/lcd_highlevel.c: 443:     colorOut = LCD_
      +                          Read(x1,y2+1);
 12823  002A64  C033  F012         	movff	LCD_ButtonUpdate@x1,LCD_Read@posX
 12824  002A68  C034  F013         	movff	LCD_ButtonUpdate@x1+1,LCD_Read@posX+1
 12825  002A6C  0E01               	movlw	1
 12826  002A6E  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 12827  002A70  6E14               	movwf	LCD_Read@posY^0,c
 12828  002A72  0E00               	movlw	0
 12829  002A74  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 12830  002A76  6E15               	movwf	(LCD_Read@posY+1)^0,c
 12831  002A78  EC1D  F01A         	call	_LCD_Read	;wreg free
 12832  002A7C  C012  F02B         	movff	?_LCD_Read,LCD_ButtonUpdate@colorOut
 12833  002A80  C013  F02C         	movff	?_LCD_Read+1,LCD_ButtonUpdate@colorOut+1
 12834  002A84                     
 12835                           ;libraries/lcd_highlevel.c: 444:     colorIn = button->txtColor;
 12836  002A84  EE20 F008          	lfsr	2,8
 12837  002A88  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 12838  002A8A  26D9               	addwf	fsr2l,f,c
 12839  002A8C  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 12840  002A8E  22DA               	addwfc	fsr2h,f,c
 12841  002A90  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 12842  002A94  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 12843  002A98                     l8072:
 12844                           
 12845                           ;libraries/lcd_highlevel.c: 446:   if(button->bgColor != button->txtColor)
 12846  002A98  EE20 F008          	lfsr	2,8
 12847  002A9C  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 12848  002A9E  26D9               	addwf	fsr2l,f,c
 12849  002AA0  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 12850  002AA2  22DA               	addwfc	fsr2h,f,c
 12851  002AA4  EE10 F00A          	lfsr	1,10
 12852  002AA8  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 12853  002AAA  26E1               	addwf	fsr1l,f,c
 12854  002AAC  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 12855  002AAE  22E2               	addwfc	fsr1h,f,c
 12856  002AB0  50DE               	movf	postinc2,w,c
 12857  002AB2  18E6               	xorwf	postinc1,w,c
 12858  002AB4  E109               	bnz	u4810
 12859  002AB6  50DE               	movf	postinc2,w,c
 12860  002AB8  18E6               	xorwf	postinc1,w,c
 12861  002ABA  B4D8               	btfsc	status,2,c
 12862  002ABC  EF62  F015         	goto	u4811
 12863  002AC0  EF64  F015         	goto	u4810
 12864  002AC4                     u4811:
 12865  002AC4  EFE4  F015         	goto	l234
 12866  002AC8                     u4810:
 12867  002AC8                     
 12868                           ;libraries/lcd_highlevel.c: 447:   {;libraries/lcd_highlevel.c: 449:     LCD_DrawRect(x1
      +                          +3, y2+1, x2+3, y2+3, 1, colorOut);
 12869  002AC8  0E03               	movlw	3
 12870  002ACA  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 12871  002ACC  6E12               	movwf	LCD_DrawRect@posX1^0,c
 12872  002ACE  0E00               	movlw	0
 12873  002AD0  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 12874  002AD2  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 12875  002AD4  0E01               	movlw	1
 12876  002AD6  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 12877  002AD8  6E14               	movwf	LCD_DrawRect@posY1^0,c
 12878  002ADA  0E00               	movlw	0
 12879  002ADC  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 12880  002ADE  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 12881  002AE0  0E03               	movlw	3
 12882  002AE2  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 12883  002AE4  6E16               	movwf	LCD_DrawRect@posX2^0,c
 12884  002AE6  0E00               	movlw	0
 12885  002AE8  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 12886  002AEA  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 12887  002AEC  0E03               	movlw	3
 12888  002AEE  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 12889  002AF0  6E18               	movwf	LCD_DrawRect@posY2^0,c
 12890  002AF2  0E00               	movlw	0
 12891  002AF4  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 12892  002AF6  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 12893  002AF8  0E01               	movlw	1
 12894  002AFA  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12895  002AFC  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 12896  002B00  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 12897  002B04  EC68  F010         	call	_LCD_DrawRect	;wreg free
 12898                           
 12899                           ;libraries/lcd_highlevel.c: 450:     LCD_DrawRect(x2+1, y1+3, x2+3, y2+3, 1, colorOut);
 12900  002B08  0E01               	movlw	1
 12901  002B0A  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 12902  002B0C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 12903  002B0E  0E00               	movlw	0
 12904  002B10  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 12905  002B12  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 12906  002B14  0E03               	movlw	3
 12907  002B16  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 12908  002B18  6E14               	movwf	LCD_DrawRect@posY1^0,c
 12909  002B1A  0E00               	movlw	0
 12910  002B1C  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 12911  002B1E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 12912  002B20  0E03               	movlw	3
 12913  002B22  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 12914  002B24  6E16               	movwf	LCD_DrawRect@posX2^0,c
 12915  002B26  0E00               	movlw	0
 12916  002B28  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 12917  002B2A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 12918  002B2C  0E03               	movlw	3
 12919  002B2E  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 12920  002B30  6E18               	movwf	LCD_DrawRect@posY2^0,c
 12921  002B32  0E00               	movlw	0
 12922  002B34  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 12923  002B36  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 12924  002B38  0E01               	movlw	1
 12925  002B3A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12926  002B3C  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 12927  002B40  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 12928  002B44  EC68  F010         	call	_LCD_DrawRect	;wreg free
 12929                           
 12930                           ;libraries/lcd_highlevel.c: 451:     LCD_DrawRect(x1+1, y1+1, x2-1, y1+2, 1, colorIn);
 12931  002B48  0E01               	movlw	1
 12932  002B4A  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 12933  002B4C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 12934  002B4E  0E00               	movlw	0
 12935  002B50  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 12936  002B52  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 12937  002B54  0E01               	movlw	1
 12938  002B56  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 12939  002B58  6E14               	movwf	LCD_DrawRect@posY1^0,c
 12940  002B5A  0E00               	movlw	0
 12941  002B5C  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 12942  002B5E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 12943  002B60  0EFF               	movlw	255
 12944  002B62  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 12945  002B64  6E16               	movwf	LCD_DrawRect@posX2^0,c
 12946  002B66  0EFF               	movlw	255
 12947  002B68  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 12948  002B6A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 12949  002B6C  0E02               	movlw	2
 12950  002B6E  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 12951  002B70  6E18               	movwf	LCD_DrawRect@posY2^0,c
 12952  002B72  0E00               	movlw	0
 12953  002B74  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 12954  002B76  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 12955  002B78  0E01               	movlw	1
 12956  002B7A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12957  002B7C  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 12958  002B80  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 12959  002B84  EC68  F010         	call	_LCD_DrawRect	;wreg free
 12960                           
 12961                           ;libraries/lcd_highlevel.c: 452:     LCD_DrawRect(x1+1, y1+1, x1+2, y2-1, 1, colorIn);
 12962  002B88  0E01               	movlw	1
 12963  002B8A  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 12964  002B8C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 12965  002B8E  0E00               	movlw	0
 12966  002B90  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 12967  002B92  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 12968  002B94  0E01               	movlw	1
 12969  002B96  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 12970  002B98  6E14               	movwf	LCD_DrawRect@posY1^0,c
 12971  002B9A  0E00               	movlw	0
 12972  002B9C  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 12973  002B9E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 12974  002BA0  0E02               	movlw	2
 12975  002BA2  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 12976  002BA4  6E16               	movwf	LCD_DrawRect@posX2^0,c
 12977  002BA6  0E00               	movlw	0
 12978  002BA8  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 12979  002BAA  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 12980  002BAC  0EFF               	movlw	255
 12981  002BAE  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 12982  002BB0  6E18               	movwf	LCD_DrawRect@posY2^0,c
 12983  002BB2  0EFF               	movlw	255
 12984  002BB4  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 12985  002BB6  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 12986  002BB8  0E01               	movlw	1
 12987  002BBA  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12988  002BBC  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 12989  002BC0  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 12990  002BC4  EC68  F010         	call	_LCD_DrawRect	;wreg free
 12991  002BC8                     l234:
 12992  002BC8  0012               	return		;funcret
 12993  002BCA                     __end_of_LCD_ButtonUpdate:
 12994                           	callstack 0
 12995                           
 12996 ;; *************** function _LCD_Read *****************
 12997 ;; Defined at:
 12998 ;;		line 64 in file "libraries/lcd_lowlevel.c"
 12999 ;; Parameters:    Size  Location     Type
 13000 ;;  posX            2   17[COMRAM] unsigned short 
 13001 ;;  posY            2   19[COMRAM] unsigned short 
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;  temp16          2   25[COMRAM] unsigned short 
 13004 ;;  color           2   23[COMRAM] unsigned short 
 13005 ;; Return value:  Size  Location     Type
 13006 ;;                  2   17[COMRAM] unsigned short 
 13007 ;; Registers used:
 13008 ;;		wreg, status,2, status,0
 13009 ;; Tracked objects:
 13010 ;;		On entry : 0/0
 13011 ;;		On exit  : 0/0
 13012 ;;		Unchanged: 0/0
 13013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13014 ;;      Params:         4       0       0       0       0       0       0
 13015 ;;      Locals:         4       0       0       0       0       0       0
 13016 ;;      Temps:          2       0       0       0       0       0       0
 13017 ;;      Totals:        10       0       0       0       0       0       0
 13018 ;;Total ram usage:       10 bytes
 13019 ;; Hardware stack levels used: 1
 13020 ;; Hardware stack levels required when called: 4
 13021 ;; This function calls:
 13022 ;;		Nothing
 13023 ;; This function is called by:
 13024 ;;		_LCD_ButtonUpdate
 13025 ;; This function uses a non-reentrant model
 13026 ;;
 13027                           
 13028                           	psect	text54
 13029  00343A                     __ptext54:
 13030                           	callstack 0
 13031  00343A                     _LCD_Read:
 13032                           	callstack 21
 13033  00343A                     
 13034                           ;libraries/lcd_lowlevel.c: 64: uint16_t LCD_Read(uint16_t posX, uint16_t posY);libraries
      +                          /lcd_lowlevel.c: 65: {;libraries/lcd_lowlevel.c: 66:  uint16_t temp16;;libraries/lcd_low
      +                          level.c: 67:   uint16_t color;;libraries/lcd_lowlevel.c: 70:   PORTA = 0x2A; LATC4 = 0; 
      +                          LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 13035  00343A  0E2A               	movlw	42
 13036  00343C  6E80               	movwf	128,c	;volatile
 13037  00343E  988B               	bcf	3979,4,c	;volatile
 13038  003440  968B               	bcf	3979,3,c	;volatile
 13039  003442  868B               	bsf	3979,3,c	;volatile
 13040  003444  888B               	bsf	3979,4,c	;volatile
 13041                           
 13042                           ;libraries/lcd_lowlevel.c: 71:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13043  003446  5013               	movf	(LCD_Read@posX+1)^0,w,c
 13044  003448  6E80               	movwf	128,c	;volatile
 13045  00344A  968B               	bcf	3979,3,c	;volatile
 13046  00344C  868B               	bsf	3979,3,c	;volatile
 13047  00344E                     
 13048                           ;libraries/lcd_lowlevel.c: 72:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13049  00344E  C012  FF80         	movff	LCD_Read@posX,3968	;volatile
 13050  003452  968B               	bcf	3979,3,c	;volatile
 13051  003454  868B               	bsf	3979,3,c	;volatile
 13052                           
 13053                           ;libraries/lcd_lowlevel.c: 73:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13054  003456  0E00               	movlw	0
 13055  003458  6E80               	movwf	128,c	;volatile
 13056  00345A  968B               	bcf	3979,3,c	;volatile
 13057  00345C  868B               	bsf	3979,3,c	;volatile
 13058                           
 13059                           ;libraries/lcd_lowlevel.c: 74:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 13060  00345E  0EEF               	movlw	239
 13061  003460  6E80               	movwf	128,c	;volatile
 13062  003462  968B               	bcf	3979,3,c	;volatile
 13063  003464  868B               	bsf	3979,3,c	;volatile
 13064                           
 13065                           ;libraries/lcd_lowlevel.c: 76:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13066  003466  0E2B               	movlw	43
 13067  003468  6E80               	movwf	128,c	;volatile
 13068  00346A  988B               	bcf	3979,4,c	;volatile
 13069  00346C  968B               	bcf	3979,3,c	;volatile
 13070  00346E  868B               	bsf	3979,3,c	;volatile
 13071  003470  888B               	bsf	3979,4,c	;volatile
 13072                           
 13073                           ;libraries/lcd_lowlevel.c: 77:   PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 13074  003472  5015               	movf	(LCD_Read@posY+1)^0,w,c
 13075  003474  6E80               	movwf	128,c	;volatile
 13076  003476  968B               	bcf	3979,3,c	;volatile
 13077  003478  868B               	bsf	3979,3,c	;volatile
 13078  00347A                     
 13079                           ;libraries/lcd_lowlevel.c: 78:   PORTA = posY; LATC3 = 0; LATC3 = 1;;
 13080  00347A  C014  FF80         	movff	LCD_Read@posY,3968	;volatile
 13081  00347E  968B               	bcf	3979,3,c	;volatile
 13082  003480  868B               	bsf	3979,3,c	;volatile
 13083                           
 13084                           ;libraries/lcd_lowlevel.c: 79:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13085  003482  0E01               	movlw	1
 13086  003484  6E80               	movwf	128,c	;volatile
 13087  003486  968B               	bcf	3979,3,c	;volatile
 13088  003488  868B               	bsf	3979,3,c	;volatile
 13089                           
 13090                           ;libraries/lcd_lowlevel.c: 80:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 13091  00348A  0E3F               	movlw	63
 13092  00348C  6E80               	movwf	128,c	;volatile
 13093  00348E  968B               	bcf	3979,3,c	;volatile
 13094  003490  868B               	bsf	3979,3,c	;volatile
 13095                           
 13096                           ;libraries/lcd_lowlevel.c: 82:   PORTA = 0x2E; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13097  003492  0E2E               	movlw	46
 13098  003494  6E80               	movwf	128,c	;volatile
 13099  003496  988B               	bcf	3979,4,c	;volatile
 13100  003498  968B               	bcf	3979,3,c	;volatile
 13101  00349A  868B               	bsf	3979,3,c	;volatile
 13102  00349C  888B               	bsf	3979,4,c	;volatile
 13103  00349E                     
 13104                           ;libraries/lcd_lowlevel.c: 83:  TRISA = 0xFF;
 13105  00349E  6892               	setf	146,c	;volatile
 13106  0034A0                     
 13107                           ;libraries/lcd_lowlevel.c: 84:  LATC2 = 0;
 13108  0034A0  948B               	bcf	3979,2,c	;volatile
 13109  0034A2                     
 13110                           ;libraries/lcd_lowlevel.c: 85:   __nop();
 13111  0034A2  F000               	nop	
 13112  0034A4                     
 13113                           ;libraries/lcd_lowlevel.c: 86:  LATC2 = 1;
 13114  0034A4  848B               	bsf	3979,2,c	;volatile
 13115  0034A6                     
 13116                           ;libraries/lcd_lowlevel.c: 87:  TRISA = 0xFF;
 13117  0034A6  6892               	setf	146,c	;volatile
 13118  0034A8                     
 13119                           ;libraries/lcd_lowlevel.c: 88:  LATC2 = 0;
 13120  0034A8  948B               	bcf	3979,2,c	;volatile
 13121  0034AA                     
 13122                           ;libraries/lcd_lowlevel.c: 89:   __nop();
 13123  0034AA  F000               	nop	
 13124  0034AC                     
 13125                           ;libraries/lcd_lowlevel.c: 90:  temp16 = PORTA;
 13126  0034AC  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13127  0034B0  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13128  0034B2                     
 13129                           ;libraries/lcd_lowlevel.c: 91:  LATC2 = 1;
 13130  0034B2  848B               	bsf	3979,2,c	;volatile
 13131  0034B4                     
 13132                           ;libraries/lcd_lowlevel.c: 92:   temp16 = temp16 >> 3;
 13133  0034B4  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13134  0034B8  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13135  0034BC  90D8               	bcf	status,0,c
 13136  0034BE  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13137  0034C0  3216               	rrcf	??_LCD_Read^0,f,c
 13138  0034C2  90D8               	bcf	status,0,c
 13139  0034C4  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13140  0034C6  3216               	rrcf	??_LCD_Read^0,f,c
 13141  0034C8  90D8               	bcf	status,0,c
 13142  0034CA  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13143  0034CC  3216               	rrcf	??_LCD_Read^0,f,c
 13144  0034CE  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13145  0034D2  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13146  0034D6                     
 13147                           ;libraries/lcd_lowlevel.c: 93:   color = temp16 << 11;
 13148  0034D6  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13149  0034DA  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13150  0034DE  0E0B               	movlw	11
 13151  0034E0                     u4325:
 13152  0034E0  90D8               	bcf	status,0,c
 13153  0034E2  3616               	rlcf	??_LCD_Read^0,f,c
 13154  0034E4  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13155  0034E6  2EE8               	decfsz	wreg,f,c
 13156  0034E8  EF70  F01A         	goto	u4325
 13157  0034EC  C016  F018         	movff	??_LCD_Read,LCD_Read@color
 13158  0034F0  C017  F019         	movff	??_LCD_Read+1,LCD_Read@color+1
 13159  0034F4                     
 13160                           ;libraries/lcd_lowlevel.c: 94:  LATC2 = 0;
 13161  0034F4  948B               	bcf	3979,2,c	;volatile
 13162  0034F6                     
 13163                           ;libraries/lcd_lowlevel.c: 95:   __nop();
 13164  0034F6  F000               	nop	
 13165  0034F8                     
 13166                           ;libraries/lcd_lowlevel.c: 96:  temp16 = PORTA;
 13167  0034F8  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13168  0034FC  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13169  0034FE                     
 13170                           ;libraries/lcd_lowlevel.c: 97:  LATC2 = 1;
 13171  0034FE  848B               	bsf	3979,2,c	;volatile
 13172  003500                     
 13173                           ;libraries/lcd_lowlevel.c: 98:   temp16 = temp16 >> 2;
 13174  003500  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13175  003504  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13176  003508  90D8               	bcf	status,0,c
 13177  00350A  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13178  00350C  3216               	rrcf	??_LCD_Read^0,f,c
 13179  00350E  90D8               	bcf	status,0,c
 13180  003510  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13181  003512  3216               	rrcf	??_LCD_Read^0,f,c
 13182  003514  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13183  003518  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13184  00351C                     
 13185                           ;libraries/lcd_lowlevel.c: 99:   color |= temp16 << 5;
 13186  00351C  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13187  003520  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13188  003524  0E05               	movlw	5
 13189  003526                     u4335:
 13190  003526  90D8               	bcf	status,0,c
 13191  003528  3616               	rlcf	??_LCD_Read^0,f,c
 13192  00352A  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13193  00352C  2EE8               	decfsz	wreg,f,c
 13194  00352E  EF93  F01A         	goto	u4335
 13195  003532  5016               	movf	??_LCD_Read^0,w,c
 13196  003534  1218               	iorwf	LCD_Read@color^0,f,c
 13197  003536  5017               	movf	(??_LCD_Read+1)^0,w,c
 13198  003538  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13199  00353A                     
 13200                           ;libraries/lcd_lowlevel.c: 100:  LATC2 = 0;
 13201  00353A  948B               	bcf	3979,2,c	;volatile
 13202  00353C                     
 13203                           ;libraries/lcd_lowlevel.c: 101:   __nop();
 13204  00353C  F000               	nop	
 13205  00353E                     
 13206                           ;libraries/lcd_lowlevel.c: 102:  temp16 |= PORTA;
 13207  00353E  5080               	movf	128,w,c	;volatile
 13208  003540  121A               	iorwf	LCD_Read@temp16^0,f,c
 13209  003542                     
 13210                           ;libraries/lcd_lowlevel.c: 103:  LATC2 = 1;
 13211  003542  848B               	bsf	3979,2,c	;volatile
 13212  003544                     
 13213                           ;libraries/lcd_lowlevel.c: 104:   temp16 = temp16 >> 3;
 13214  003544  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13215  003548  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13216  00354C  90D8               	bcf	status,0,c
 13217  00354E  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13218  003550  3216               	rrcf	??_LCD_Read^0,f,c
 13219  003552  90D8               	bcf	status,0,c
 13220  003554  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13221  003556  3216               	rrcf	??_LCD_Read^0,f,c
 13222  003558  90D8               	bcf	status,0,c
 13223  00355A  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13224  00355C  3216               	rrcf	??_LCD_Read^0,f,c
 13225  00355E  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13226  003562  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13227  003566                     
 13228                           ;libraries/lcd_lowlevel.c: 105:   color |= temp16;
 13229  003566  501A               	movf	LCD_Read@temp16^0,w,c
 13230  003568  1218               	iorwf	LCD_Read@color^0,f,c
 13231  00356A  501B               	movf	(LCD_Read@temp16+1)^0,w,c
 13232  00356C  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13233  00356E                     
 13234                           ;libraries/lcd_lowlevel.c: 106:  TRISA = 0x00;
 13235  00356E  0E00               	movlw	0
 13236  003570  6E92               	movwf	146,c	;volatile
 13237  003572                     
 13238                           ;libraries/lcd_lowlevel.c: 107:  return color;
 13239  003572  C018  F012         	movff	LCD_Read@color,?_LCD_Read
 13240  003576  C019  F013         	movff	LCD_Read@color+1,?_LCD_Read+1
 13241  00357A  0012               	return		;funcret
 13242  00357C                     __end_of_LCD_Read:
 13243                           	callstack 0
 13244                           
 13245 ;; *************** function _LCD_DrawRect *****************
 13246 ;; Defined at:
 13247 ;;		line 584 in file "libraries/lcd_highlevel.c"
 13248 ;; Parameters:    Size  Location     Type
 13249 ;;  posX1           2   17[COMRAM] unsigned short 
 13250 ;;  posY1           2   19[COMRAM] unsigned short 
 13251 ;;  posX2           2   21[COMRAM] unsigned short 
 13252 ;;  posY2           2   23[COMRAM] unsigned short 
 13253 ;;  fill            1   25[COMRAM] unsigned char 
 13254 ;;  color           2   26[COMRAM] unsigned short 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;  i               2   34[COMRAM] unsigned short 
 13257 ;;  temp            2   30[COMRAM] unsigned short 
 13258 ;;  j               2   28[COMRAM] unsigned short 
 13259 ;;  colorL          1   33[COMRAM] unsigned char 
 13260 ;;  colorH          1   32[COMRAM] unsigned char 
 13261 ;; Return value:  Size  Location     Type
 13262 ;;                  1    wreg      void 
 13263 ;; Registers used:
 13264 ;;		wreg, status,2, status,0
 13265 ;; Tracked objects:
 13266 ;;		On entry : 0/0
 13267 ;;		On exit  : 0/0
 13268 ;;		Unchanged: 0/0
 13269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13270 ;;      Params:        11       0       0       0       0       0       0
 13271 ;;      Locals:         8       0       0       0       0       0       0
 13272 ;;      Temps:          0       0       0       0       0       0       0
 13273 ;;      Totals:        19       0       0       0       0       0       0
 13274 ;;Total ram usage:       19 bytes
 13275 ;; Hardware stack levels used: 1
 13276 ;; Hardware stack levels required when called: 4
 13277 ;; This function calls:
 13278 ;;		Nothing
 13279 ;; This function is called by:
 13280 ;;		_Paddle_addX
 13281 ;;		_Paddle_draw
 13282 ;;		_LCD_SliderUpdate
 13283 ;;		_LCD_SliderDraw
 13284 ;;		_LCD_ButtonUpdate
 13285 ;;		_LCD_ButtonDraw
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text55
 13290  0020D0                     __ptext55:
 13291                           	callstack 0
 13292  0020D0                     _LCD_DrawRect:
 13293                           	callstack 21
 13294  0020D0                     
 13295                           ;libraries/lcd_highlevel.c: 584: void LCD_DrawRect(uint16_t posX1,uint16_t posY1, uint16
      +                          _t posX2,;libraries/lcd_highlevel.c: 585:   uint16_t posY2,uint8_t fill,uint16_t color);
      +                          libraries/lcd_highlevel.c: 586: {;libraries/lcd_highlevel.c: 587:   uint16_t i;;librarie
      +                          s/lcd_highlevel.c: 588:   uint16_t j;;libraries/lcd_highlevel.c: 589:   uint16_t temp;;l
      +                          ibraries/lcd_highlevel.c: 590:   uint8_t colorH,colorL;;libraries/lcd_highlevel.c: 592: 
      +                            colorH = color>>8;
 13296  0020D0  501C               	movf	(LCD_DrawRect@color+1)^0,w,c
 13297  0020D2  6E21               	movwf	LCD_DrawRect@colorH^0,c
 13298  0020D4                     
 13299                           ;libraries/lcd_highlevel.c: 593:   colorL = color;
 13300  0020D4  C01B  F022         	movff	LCD_DrawRect@color,LCD_DrawRect@colorL
 13301  0020D8                     
 13302                           ;libraries/lcd_highlevel.c: 597:   if(posX1 > posX2)
 13303  0020D8  5012               	movf	LCD_DrawRect@posX1^0,w,c
 13304  0020DA  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 13305  0020DC  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 13306  0020DE  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 13307  0020E0  B0D8               	btfsc	status,0,c
 13308  0020E2  EF75  F010         	goto	u4231
 13309  0020E6  EF77  F010         	goto	u4230
 13310  0020EA                     u4231:
 13311  0020EA  EF83  F010         	goto	l7222
 13312  0020EE                     u4230:
 13313  0020EE                     
 13314                           ;libraries/lcd_highlevel.c: 598:   {;libraries/lcd_highlevel.c: 599:     temp = posX1;
 13315  0020EE  C012  F01F         	movff	LCD_DrawRect@posX1,LCD_DrawRect@temp
 13316  0020F2  C013  F020         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@temp+1
 13317                           
 13318                           ;libraries/lcd_highlevel.c: 600:     posX1 = posX2;
 13319  0020F6  C016  F012         	movff	LCD_DrawRect@posX2,LCD_DrawRect@posX1
 13320  0020FA  C017  F013         	movff	LCD_DrawRect@posX2+1,LCD_DrawRect@posX1+1
 13321                           
 13322                           ;libraries/lcd_highlevel.c: 601:     posX2 = temp;
 13323  0020FE  C01F  F016         	movff	LCD_DrawRect@temp,LCD_DrawRect@posX2
 13324  002102  C020  F017         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posX2+1
 13325  002106                     l7222:
 13326                           
 13327                           ;libraries/lcd_highlevel.c: 603:   if(posY1 > posY2)
 13328  002106  5014               	movf	LCD_DrawRect@posY1^0,w,c
 13329  002108  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 13330  00210A  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 13331  00210C  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 13332  00210E  B0D8               	btfsc	status,0,c
 13333  002110  EF8C  F010         	goto	u4241
 13334  002114  EF8E  F010         	goto	u4240
 13335  002118                     u4241:
 13336  002118  EF9A  F010         	goto	l7226
 13337  00211C                     u4240:
 13338  00211C                     
 13339                           ;libraries/lcd_highlevel.c: 604:   {;libraries/lcd_highlevel.c: 605:     temp = posY1;
 13340  00211C  C014  F01F         	movff	LCD_DrawRect@posY1,LCD_DrawRect@temp
 13341  002120  C015  F020         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@temp+1
 13342                           
 13343                           ;libraries/lcd_highlevel.c: 606:     posY1 = posY2;
 13344  002124  C018  F014         	movff	LCD_DrawRect@posY2,LCD_DrawRect@posY1
 13345  002128  C019  F015         	movff	LCD_DrawRect@posY2+1,LCD_DrawRect@posY1+1
 13346                           
 13347                           ;libraries/lcd_highlevel.c: 607:     posY2 = temp;
 13348  00212C  C01F  F018         	movff	LCD_DrawRect@temp,LCD_DrawRect@posY2
 13349  002130  C020  F019         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posY2+1
 13350  002134                     l7226:
 13351                           
 13352                           ;libraries/lcd_highlevel.c: 610:   if(fill==1)
 13353  002134  041A               	decf	LCD_DrawRect@fill^0,w,c
 13354  002136  A4D8               	btfss	status,2,c
 13355  002138  EFA0  F010         	goto	u4251
 13356  00213C  EFA2  F010         	goto	u4250
 13357  002140                     u4251:
 13358  002140  EF04  F011         	goto	l7302
 13359  002144                     u4250:
 13360  002144                     
 13361                           ;libraries/lcd_highlevel.c: 611:   {;libraries/lcd_highlevel.c: 613:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 13362  002144  0E2A               	movlw	42
 13363  002146  6E80               	movwf	128,c	;volatile
 13364  002148  988B               	bcf	3979,4,c	;volatile
 13365  00214A  968B               	bcf	3979,3,c	;volatile
 13366  00214C  868B               	bsf	3979,3,c	;volatile
 13367  00214E  888B               	bsf	3979,4,c	;volatile
 13368                           
 13369                           ;libraries/lcd_highlevel.c: 614:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 13370  002150  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 13371  002152  6E80               	movwf	128,c	;volatile
 13372  002154  968B               	bcf	3979,3,c	;volatile
 13373  002156  868B               	bsf	3979,3,c	;volatile
 13374  002158                     
 13375                           ;libraries/lcd_highlevel.c: 615:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 13376  002158  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 13377  00215C  968B               	bcf	3979,3,c	;volatile
 13378  00215E  868B               	bsf	3979,3,c	;volatile
 13379                           
 13380                           ;libraries/lcd_highlevel.c: 616:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 13381  002160  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 13382  002162  6E80               	movwf	128,c	;volatile
 13383  002164  968B               	bcf	3979,3,c	;volatile
 13384  002166  868B               	bsf	3979,3,c	;volatile
 13385  002168                     
 13386                           ;libraries/lcd_highlevel.c: 617:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 13387  002168  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 13388  00216C  968B               	bcf	3979,3,c	;volatile
 13389  00216E  868B               	bsf	3979,3,c	;volatile
 13390                           
 13391                           ;libraries/lcd_highlevel.c: 619:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13392  002170  0E2B               	movlw	43
 13393  002172  6E80               	movwf	128,c	;volatile
 13394  002174  988B               	bcf	3979,4,c	;volatile
 13395  002176  968B               	bcf	3979,3,c	;volatile
 13396  002178  868B               	bsf	3979,3,c	;volatile
 13397  00217A  888B               	bsf	3979,4,c	;volatile
 13398                           
 13399                           ;libraries/lcd_highlevel.c: 620:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 13400  00217C  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 13401  00217E  6E80               	movwf	128,c	;volatile
 13402  002180  968B               	bcf	3979,3,c	;volatile
 13403  002182  868B               	bsf	3979,3,c	;volatile
 13404  002184                     
 13405                           ;libraries/lcd_highlevel.c: 621:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 13406  002184  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 13407  002188  968B               	bcf	3979,3,c	;volatile
 13408  00218A  868B               	bsf	3979,3,c	;volatile
 13409                           
 13410                           ;libraries/lcd_highlevel.c: 622:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13411  00218C  0E01               	movlw	1
 13412  00218E  6E80               	movwf	128,c	;volatile
 13413  002190  968B               	bcf	3979,3,c	;volatile
 13414  002192  868B               	bsf	3979,3,c	;volatile
 13415                           
 13416                           ;libraries/lcd_highlevel.c: 623:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 13417  002194  0E3F               	movlw	63
 13418  002196  6E80               	movwf	128,c	;volatile
 13419  002198  968B               	bcf	3979,3,c	;volatile
 13420  00219A  868B               	bsf	3979,3,c	;volatile
 13421                           
 13422                           ;libraries/lcd_highlevel.c: 625:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13423  00219C  0E2C               	movlw	44
 13424  00219E  6E80               	movwf	128,c	;volatile
 13425  0021A0  988B               	bcf	3979,4,c	;volatile
 13426  0021A2  968B               	bcf	3979,3,c	;volatile
 13427  0021A4  868B               	bsf	3979,3,c	;volatile
 13428  0021A6  888B               	bsf	3979,4,c	;volatile
 13429  0021A8                     
 13430                           ;libraries/lcd_highlevel.c: 626:     for(i=posX1;i<=posX2;i++)
 13431  0021A8  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 13432  0021AC  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 13433  0021B0  EFF7  F010         	goto	l7300
 13434  0021B4                     l264:
 13435                           
 13436                           ;libraries/lcd_highlevel.c: 627:     {;libraries/lcd_highlevel.c: 628:       for(j=posY1
      +                          ;j<=posY2;j++)
 13437  0021B4  C014  F01D         	movff	LCD_DrawRect@posY1,LCD_DrawRect@j
 13438  0021B8  C015  F01E         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@j+1
 13439  0021BC  EFEA  F010         	goto	l7296
 13440  0021C0                     l266:
 13441                           
 13442                           ;libraries/lcd_highlevel.c: 629:       {;libraries/lcd_highlevel.c: 630:         PORTA =
      +                           colorH; LATC3 = 0; LATC3 = 1;;
 13443  0021C0  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 13444  0021C4  968B               	bcf	3979,3,c	;volatile
 13445  0021C6  868B               	bsf	3979,3,c	;volatile
 13446                           
 13447                           ;libraries/lcd_highlevel.c: 631:         PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 13448  0021C8  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 13449  0021CC  968B               	bcf	3979,3,c	;volatile
 13450  0021CE  868B               	bsf	3979,3,c	;volatile
 13451  0021D0                     
 13452                           ;libraries/lcd_highlevel.c: 632:       }
 13453  0021D0  4A1D               	infsnz	LCD_DrawRect@j^0,f,c
 13454  0021D2  2A1E               	incf	(LCD_DrawRect@j+1)^0,f,c
 13455  0021D4                     l7296:
 13456  0021D4  501D               	movf	LCD_DrawRect@j^0,w,c
 13457  0021D6  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 13458  0021D8  501E               	movf	(LCD_DrawRect@j+1)^0,w,c
 13459  0021DA  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 13460  0021DC  B0D8               	btfsc	status,0,c
 13461  0021DE  EFF3  F010         	goto	u4261
 13462  0021E2  EFF5  F010         	goto	u4260
 13463  0021E6                     u4261:
 13464  0021E6  EFE0  F010         	goto	l266
 13465  0021EA                     u4260:
 13466  0021EA                     
 13467                           ;libraries/lcd_highlevel.c: 633:     }
 13468  0021EA  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 13469  0021EC  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 13470  0021EE                     l7300:
 13471  0021EE  5023               	movf	LCD_DrawRect@i^0,w,c
 13472  0021F0  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 13473  0021F2  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 13474  0021F4  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 13475  0021F6  B0D8               	btfsc	status,0,c
 13476  0021F8  EF00  F011         	goto	u4271
 13477  0021FC  EF02  F011         	goto	u4270
 13478  002200                     u4271:
 13479  002200  EFDA  F010         	goto	l264
 13480  002204                     u4270:
 13481  002204  EF04  F012         	goto	l282
 13482  002208                     l7302:
 13483                           
 13484                           ;libraries/lcd_highlevel.c: 637:   {;libraries/lcd_highlevel.c: 639:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 13485  002208  0E2A               	movlw	42
 13486  00220A  6E80               	movwf	128,c	;volatile
 13487  00220C  988B               	bcf	3979,4,c	;volatile
 13488  00220E  968B               	bcf	3979,3,c	;volatile
 13489  002210  868B               	bsf	3979,3,c	;volatile
 13490  002212  888B               	bsf	3979,4,c	;volatile
 13491                           
 13492                           ;libraries/lcd_highlevel.c: 640:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 13493  002214  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 13494  002216  6E80               	movwf	128,c	;volatile
 13495  002218  968B               	bcf	3979,3,c	;volatile
 13496  00221A  868B               	bsf	3979,3,c	;volatile
 13497  00221C                     
 13498                           ;libraries/lcd_highlevel.c: 641:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 13499  00221C  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 13500  002220  968B               	bcf	3979,3,c	;volatile
 13501  002222  868B               	bsf	3979,3,c	;volatile
 13502                           
 13503                           ;libraries/lcd_highlevel.c: 642:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 13504  002224  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 13505  002226  6E80               	movwf	128,c	;volatile
 13506  002228  968B               	bcf	3979,3,c	;volatile
 13507  00222A  868B               	bsf	3979,3,c	;volatile
 13508  00222C                     
 13509                           ;libraries/lcd_highlevel.c: 643:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 13510  00222C  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 13511  002230  968B               	bcf	3979,3,c	;volatile
 13512  002232  868B               	bsf	3979,3,c	;volatile
 13513                           
 13514                           ;libraries/lcd_highlevel.c: 645:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13515  002234  0E2B               	movlw	43
 13516  002236  6E80               	movwf	128,c	;volatile
 13517  002238  988B               	bcf	3979,4,c	;volatile
 13518  00223A  968B               	bcf	3979,3,c	;volatile
 13519  00223C  868B               	bsf	3979,3,c	;volatile
 13520  00223E  888B               	bsf	3979,4,c	;volatile
 13521                           
 13522                           ;libraries/lcd_highlevel.c: 646:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 13523  002240  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 13524  002242  6E80               	movwf	128,c	;volatile
 13525  002244  968B               	bcf	3979,3,c	;volatile
 13526  002246  868B               	bsf	3979,3,c	;volatile
 13527  002248                     
 13528                           ;libraries/lcd_highlevel.c: 647:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 13529  002248  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 13530  00224C  968B               	bcf	3979,3,c	;volatile
 13531  00224E  868B               	bsf	3979,3,c	;volatile
 13532                           
 13533                           ;libraries/lcd_highlevel.c: 648:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13534  002250  0E01               	movlw	1
 13535  002252  6E80               	movwf	128,c	;volatile
 13536  002254  968B               	bcf	3979,3,c	;volatile
 13537  002256  868B               	bsf	3979,3,c	;volatile
 13538                           
 13539                           ;libraries/lcd_highlevel.c: 649:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 13540  002258  0E3F               	movlw	63
 13541  00225A  6E80               	movwf	128,c	;volatile
 13542  00225C  968B               	bcf	3979,3,c	;volatile
 13543  00225E  868B               	bsf	3979,3,c	;volatile
 13544                           
 13545                           ;libraries/lcd_highlevel.c: 651:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13546  002260  0E2C               	movlw	44
 13547  002262  6E80               	movwf	128,c	;volatile
 13548  002264  988B               	bcf	3979,4,c	;volatile
 13549  002266  968B               	bcf	3979,3,c	;volatile
 13550  002268  868B               	bsf	3979,3,c	;volatile
 13551  00226A  888B               	bsf	3979,4,c	;volatile
 13552  00226C                     
 13553                           ;libraries/lcd_highlevel.c: 653:     for(i=posX1;i<=posX2;i++)
 13554  00226C  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 13555  002270  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 13556  002274  EF46  F011         	goto	l7370
 13557  002278                     l271:
 13558                           
 13559                           ;libraries/lcd_highlevel.c: 654:     {;libraries/lcd_highlevel.c: 655:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 13560  002278  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 13561  00227C  968B               	bcf	3979,3,c	;volatile
 13562  00227E  868B               	bsf	3979,3,c	;volatile
 13563                           
 13564                           ;libraries/lcd_highlevel.c: 656:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 13565  002280  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 13566  002284  968B               	bcf	3979,3,c	;volatile
 13567  002286  868B               	bsf	3979,3,c	;volatile
 13568  002288                     
 13569                           ;libraries/lcd_highlevel.c: 657:     }
 13570  002288  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 13571  00228A  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 13572  00228C                     l7370:
 13573  00228C  5023               	movf	LCD_DrawRect@i^0,w,c
 13574  00228E  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 13575  002290  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 13576  002292  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 13577  002294  B0D8               	btfsc	status,0,c
 13578  002296  EF4F  F011         	goto	u4281
 13579  00229A  EF51  F011         	goto	u4280
 13580  00229E                     u4281:
 13581  00229E  EF3C  F011         	goto	l271
 13582  0022A2                     u4280:
 13583  0022A2                     
 13584                           ;libraries/lcd_highlevel.c: 659:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13585  0022A2  0E2B               	movlw	43
 13586  0022A4  6E80               	movwf	128,c	;volatile
 13587  0022A6  988B               	bcf	3979,4,c	;volatile
 13588  0022A8  968B               	bcf	3979,3,c	;volatile
 13589  0022AA  868B               	bsf	3979,3,c	;volatile
 13590  0022AC  888B               	bsf	3979,4,c	;volatile
 13591                           
 13592                           ;libraries/lcd_highlevel.c: 660:     PORTA = posY2>>8; LATC3 = 0; LATC3 = 1;;
 13593  0022AE  5019               	movf	(LCD_DrawRect@posY2+1)^0,w,c
 13594  0022B0  6E80               	movwf	128,c	;volatile
 13595  0022B2  968B               	bcf	3979,3,c	;volatile
 13596  0022B4  868B               	bsf	3979,3,c	;volatile
 13597  0022B6                     
 13598                           ;libraries/lcd_highlevel.c: 661:     PORTA = posY2; LATC3 = 0; LATC3 = 1;;
 13599  0022B6  C018  FF80         	movff	LCD_DrawRect@posY2,3968	;volatile
 13600  0022BA  968B               	bcf	3979,3,c	;volatile
 13601  0022BC  868B               	bsf	3979,3,c	;volatile
 13602                           
 13603                           ;libraries/lcd_highlevel.c: 662:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13604  0022BE  0E2C               	movlw	44
 13605  0022C0  6E80               	movwf	128,c	;volatile
 13606  0022C2  988B               	bcf	3979,4,c	;volatile
 13607  0022C4  968B               	bcf	3979,3,c	;volatile
 13608  0022C6  868B               	bsf	3979,3,c	;volatile
 13609  0022C8  888B               	bsf	3979,4,c	;volatile
 13610  0022CA                     
 13611                           ;libraries/lcd_highlevel.c: 663:     for(i=posX1;i<=posX2;i++)
 13612  0022CA  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 13613  0022CE  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 13614  0022D2  EF75  F011         	goto	l7404
 13615  0022D6                     l274:
 13616                           
 13617                           ;libraries/lcd_highlevel.c: 664:     {;libraries/lcd_highlevel.c: 665:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 13618  0022D6  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 13619  0022DA  968B               	bcf	3979,3,c	;volatile
 13620  0022DC  868B               	bsf	3979,3,c	;volatile
 13621                           
 13622                           ;libraries/lcd_highlevel.c: 666:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 13623  0022DE  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 13624  0022E2  968B               	bcf	3979,3,c	;volatile
 13625  0022E4  868B               	bsf	3979,3,c	;volatile
 13626  0022E6                     
 13627                           ;libraries/lcd_highlevel.c: 667:     }
 13628  0022E6  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 13629  0022E8  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 13630  0022EA                     l7404:
 13631  0022EA  5023               	movf	LCD_DrawRect@i^0,w,c
 13632  0022EC  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 13633  0022EE  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 13634  0022F0  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 13635  0022F2  B0D8               	btfsc	status,0,c
 13636  0022F4  EF7E  F011         	goto	u4291
 13637  0022F8  EF80  F011         	goto	u4290
 13638  0022FC                     u4291:
 13639  0022FC  EF6B  F011         	goto	l274
 13640  002300                     u4290:
 13641  002300                     
 13642                           ;libraries/lcd_highlevel.c: 669:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13643  002300  0E2A               	movlw	42
 13644  002302  6E80               	movwf	128,c	;volatile
 13645  002304  988B               	bcf	3979,4,c	;volatile
 13646  002306  968B               	bcf	3979,3,c	;volatile
 13647  002308  868B               	bsf	3979,3,c	;volatile
 13648  00230A  888B               	bsf	3979,4,c	;volatile
 13649                           
 13650                           ;libraries/lcd_highlevel.c: 670:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 13651  00230C  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 13652  00230E  6E80               	movwf	128,c	;volatile
 13653  002310  968B               	bcf	3979,3,c	;volatile
 13654  002312  868B               	bsf	3979,3,c	;volatile
 13655  002314                     
 13656                           ;libraries/lcd_highlevel.c: 671:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 13657  002314  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 13658  002318  968B               	bcf	3979,3,c	;volatile
 13659  00231A  868B               	bsf	3979,3,c	;volatile
 13660                           
 13661                           ;libraries/lcd_highlevel.c: 672:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 13662  00231C  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 13663  00231E  6E80               	movwf	128,c	;volatile
 13664  002320  968B               	bcf	3979,3,c	;volatile
 13665  002322  868B               	bsf	3979,3,c	;volatile
 13666  002324                     
 13667                           ;libraries/lcd_highlevel.c: 673:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 13668  002324  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 13669  002328  968B               	bcf	3979,3,c	;volatile
 13670  00232A  868B               	bsf	3979,3,c	;volatile
 13671                           
 13672                           ;libraries/lcd_highlevel.c: 675:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13673  00232C  0E2B               	movlw	43
 13674  00232E  6E80               	movwf	128,c	;volatile
 13675  002330  988B               	bcf	3979,4,c	;volatile
 13676  002332  968B               	bcf	3979,3,c	;volatile
 13677  002334  868B               	bsf	3979,3,c	;volatile
 13678  002336  888B               	bsf	3979,4,c	;volatile
 13679                           
 13680                           ;libraries/lcd_highlevel.c: 676:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 13681  002338  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 13682  00233A  6E80               	movwf	128,c	;volatile
 13683  00233C  968B               	bcf	3979,3,c	;volatile
 13684  00233E  868B               	bsf	3979,3,c	;volatile
 13685  002340                     
 13686                           ;libraries/lcd_highlevel.c: 677:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 13687  002340  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 13688  002344  968B               	bcf	3979,3,c	;volatile
 13689  002346  868B               	bsf	3979,3,c	;volatile
 13690                           
 13691                           ;libraries/lcd_highlevel.c: 678:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13692  002348  0E01               	movlw	1
 13693  00234A  6E80               	movwf	128,c	;volatile
 13694  00234C  968B               	bcf	3979,3,c	;volatile
 13695  00234E  868B               	bsf	3979,3,c	;volatile
 13696                           
 13697                           ;libraries/lcd_highlevel.c: 679:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 13698  002350  0E3F               	movlw	63
 13699  002352  6E80               	movwf	128,c	;volatile
 13700  002354  968B               	bcf	3979,3,c	;volatile
 13701  002356  868B               	bsf	3979,3,c	;volatile
 13702                           
 13703                           ;libraries/lcd_highlevel.c: 680:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13704  002358  0E2C               	movlw	44
 13705  00235A  6E80               	movwf	128,c	;volatile
 13706  00235C  988B               	bcf	3979,4,c	;volatile
 13707  00235E  968B               	bcf	3979,3,c	;volatile
 13708  002360  868B               	bsf	3979,3,c	;volatile
 13709  002362  888B               	bsf	3979,4,c	;volatile
 13710  002364                     
 13711                           ;libraries/lcd_highlevel.c: 681:     for(i=posY1;i<=posY2;i++)
 13712  002364  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 13713  002368  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 13714  00236C  EFC2  F011         	goto	l7474
 13715  002370                     l277:
 13716                           
 13717                           ;libraries/lcd_highlevel.c: 682:     {;libraries/lcd_highlevel.c: 683:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 13718  002370  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 13719  002374  968B               	bcf	3979,3,c	;volatile
 13720  002376  868B               	bsf	3979,3,c	;volatile
 13721                           
 13722                           ;libraries/lcd_highlevel.c: 684:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 13723  002378  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 13724  00237C  968B               	bcf	3979,3,c	;volatile
 13725  00237E  868B               	bsf	3979,3,c	;volatile
 13726  002380                     
 13727                           ;libraries/lcd_highlevel.c: 685:     }
 13728  002380  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 13729  002382  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 13730  002384                     l7474:
 13731  002384  5023               	movf	LCD_DrawRect@i^0,w,c
 13732  002386  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 13733  002388  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 13734  00238A  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 13735  00238C  B0D8               	btfsc	status,0,c
 13736  00238E  EFCB  F011         	goto	u4301
 13737  002392  EFCD  F011         	goto	u4300
 13738  002396                     u4301:
 13739  002396  EFB8  F011         	goto	l277
 13740  00239A                     u4300:
 13741  00239A                     
 13742                           ;libraries/lcd_highlevel.c: 687:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13743  00239A  0E2A               	movlw	42
 13744  00239C  6E80               	movwf	128,c	;volatile
 13745  00239E  988B               	bcf	3979,4,c	;volatile
 13746  0023A0  968B               	bcf	3979,3,c	;volatile
 13747  0023A2  868B               	bsf	3979,3,c	;volatile
 13748  0023A4  888B               	bsf	3979,4,c	;volatile
 13749                           
 13750                           ;libraries/lcd_highlevel.c: 688:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 13751  0023A6  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 13752  0023A8  6E80               	movwf	128,c	;volatile
 13753  0023AA  968B               	bcf	3979,3,c	;volatile
 13754  0023AC  868B               	bsf	3979,3,c	;volatile
 13755  0023AE                     
 13756                           ;libraries/lcd_highlevel.c: 689:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 13757  0023AE  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 13758  0023B2  968B               	bcf	3979,3,c	;volatile
 13759  0023B4  868B               	bsf	3979,3,c	;volatile
 13760                           
 13761                           ;libraries/lcd_highlevel.c: 690:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 13762  0023B6  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 13763  0023B8  6E80               	movwf	128,c	;volatile
 13764  0023BA  968B               	bcf	3979,3,c	;volatile
 13765  0023BC  868B               	bsf	3979,3,c	;volatile
 13766  0023BE                     
 13767                           ;libraries/lcd_highlevel.c: 691:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 13768  0023BE  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 13769  0023C2  968B               	bcf	3979,3,c	;volatile
 13770  0023C4  868B               	bsf	3979,3,c	;volatile
 13771                           
 13772                           ;libraries/lcd_highlevel.c: 692:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 13773  0023C6  0E2C               	movlw	44
 13774  0023C8  6E80               	movwf	128,c	;volatile
 13775  0023CA  988B               	bcf	3979,4,c	;volatile
 13776  0023CC  968B               	bcf	3979,3,c	;volatile
 13777  0023CE  868B               	bsf	3979,3,c	;volatile
 13778  0023D0  888B               	bsf	3979,4,c	;volatile
 13779  0023D2                     
 13780                           ;libraries/lcd_highlevel.c: 693:     for(i=posY1;i<=posY2;i++)
 13781  0023D2  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 13782  0023D6  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 13783  0023DA  EFF9  F011         	goto	l7518
 13784  0023DE                     l280:
 13785                           
 13786                           ;libraries/lcd_highlevel.c: 694:     {;libraries/lcd_highlevel.c: 695:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 13787  0023DE  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 13788  0023E2  968B               	bcf	3979,3,c	;volatile
 13789  0023E4  868B               	bsf	3979,3,c	;volatile
 13790                           
 13791                           ;libraries/lcd_highlevel.c: 696:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 13792  0023E6  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 13793  0023EA  968B               	bcf	3979,3,c	;volatile
 13794  0023EC  868B               	bsf	3979,3,c	;volatile
 13795  0023EE                     
 13796                           ;libraries/lcd_highlevel.c: 697:     }
 13797  0023EE  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 13798  0023F0  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 13799  0023F2                     l7518:
 13800  0023F2  5023               	movf	LCD_DrawRect@i^0,w,c
 13801  0023F4  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 13802  0023F6  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 13803  0023F8  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 13804  0023FA  B0D8               	btfsc	status,0,c
 13805  0023FC  EF02  F012         	goto	u4311
 13806  002400  EF04  F012         	goto	u4310
 13807  002404                     u4311:
 13808  002404  EFEF  F011         	goto	l280
 13809  002408                     u4310:
 13810  002408                     l282:
 13811  002408  0012               	return		;funcret
 13812  00240A                     __end_of_LCD_DrawRect:
 13813                           	callstack 0
 13814                           
 13815 ;; *************** function _LCD_Bitmap *****************
 13816 ;; Defined at:
 13817 ;;		line 823 in file "libraries/lcd_highlevel.c"
 13818 ;; Parameters:    Size  Location     Type
 13819 ;;  bmpPtr          2   38[COMRAM] PTR const unsigned char 
 13820 ;;		 -> STR_8(4), STR_7(4), STR_6(8), STR_5(9), 
 13821 ;;		 -> STR_4(9), STR_3(11), 
 13822 ;;  posX            2   40[COMRAM] unsigned short 
 13823 ;;  posY            2   42[COMRAM] unsigned short 
 13824 ;; Auto vars:     Size  Location     Type
 13825 ;;  bfOffBits       4    0[BANK0 ] unsigned long 
 13826 ;;  i               2   26[BANK0 ] unsigned short 
 13827 ;;  jumpColor       2   24[BANK0 ] unsigned short 
 13828 ;;  biWidth         2   22[BANK0 ] unsigned short 
 13829 ;;  newY            2   19[BANK0 ] unsigned short 
 13830 ;;  strPtr          2   17[BANK0 ] PTR struct .
 13831 ;;		 -> STR_8(4), STR_7(4), STR_6(8), STR_5(9), 
 13832 ;;		 -> STR_4(9), STR_3(11), 
 13833 ;;  curXPos         2   15[BANK0 ] unsigned short 
 13834 ;;  color           2   13[BANK0 ] unsigned short 
 13835 ;;  biHeight        2   11[BANK0 ] unsigned short 
 13836 ;;  colorTablePt    2    9[BANK0 ] PTR unsigned char 
 13837 ;;		 -> STR_8(4), STR_7(4), STR_6(8), STR_5(9), 
 13838 ;;		 -> STR_4(9), STR_3(11), 
 13839 ;;  curYPos         2    7[BANK0 ] unsigned short 
 13840 ;;  jumpCount       2    5[BANK0 ] unsigned short 
 13841 ;;  pixelCount      1   21[BANK0 ] unsigned char 
 13842 ;;  endOfImage      1    4[BANK0 ] unsigned char 
 13843 ;; Return value:  Size  Location     Type
 13844 ;;                  1    wreg      unsigned char 
 13845 ;; Registers used:
 13846 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13847 ;; Tracked objects:
 13848 ;;		On entry : 0/0
 13849 ;;		On exit  : 0/0
 13850 ;;		Unchanged: 0/0
 13851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13852 ;;      Params:         6       0       0       0       0       0       0
 13853 ;;      Locals:         0      28       0       0       0       0       0
 13854 ;;      Temps:          4       0       0       0       0       0       0
 13855 ;;      Totals:        10      28       0       0       0       0       0
 13856 ;;Total ram usage:       38 bytes
 13857 ;; Hardware stack levels used: 1
 13858 ;; Hardware stack levels required when called: 5
 13859 ;; This function calls:
 13860 ;;		_RGB2LCD
 13861 ;;		___lwdiv
 13862 ;;		___lwmod
 13863 ;;		___wmul
 13864 ;; This function is called by:
 13865 ;;		_LCD_ButtonDraw
 13866 ;; This function uses a non-reentrant model
 13867 ;;
 13868                           
 13869                           	psect	text56
 13870  0000B4                     __ptext56:
 13871                           	callstack 0
 13872  0000B4                     _LCD_Bitmap:
 13873                           	callstack 19
 13874  0000B4                     
 13875                           ;libraries/lcd_highlevel.c: 823: uint8_t LCD_Bitmap(const uint8_t * bmpPtr, uint16_t pos
      +                          X, uint16_t posY);libraries/lcd_highlevel.c: 824: {;libraries/lcd_highlevel.c: 825:   ui
      +                          nt32_t bfOffBits;;libraries/lcd_highlevel.c: 826:   uint16_t biWidth, biHeight;;librarie
      +                          s/lcd_highlevel.c: 827:   uint8_t * colorTablePtr;;libraries/lcd_highlevel.c: 828:   uin
      +                          t8_t endOfImage;;libraries/lcd_highlevel.c: 829:   uint16_t i,curXPos,curYPos;;libraries
      +                          /lcd_highlevel.c: 830:   uint8_t pixelCount;;libraries/lcd_highlevel.c: 831:   uint16_t 
      +                          color;
 13876  0000B4  C027  F071         	movff	LCD_Bitmap@bmpPtr,LCD_Bitmap@strPtr
 13877  0000B8  C028  F072         	movff	LCD_Bitmap@bmpPtr+1,LCD_Bitmap@strPtr+1
 13878  0000BC                     
 13879                           ;libraries/lcd_highlevel.c: 839:   bfOffBits = strPtr->bfOffBits;
 13880  0000BC  0E0A               	movlw	10
 13881  0000BE  0100               	movlb	0	; () banked
 13882  0000C0  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13883  0000C2  6E2D               	movwf	??_LCD_Bitmap^0,c
 13884  0000C4  0E00               	movlw	0
 13885  0000C6  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13886  0000C8  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13887  0000CA  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13888  0000CE  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13889  0000D2                     	if	0	;tblptru may be non-zero
 13890  0000D2                     	endif
 13891  0000D2                     	if	0	;tblptru may be non-zero
 13892  0000D2                     	endif
 13893  0000D2  0009               	tblrd		*+
 13894  0000D4  CFF5 F060          	movff	tablat,LCD_Bitmap@bfOffBits
 13895  0000D8  0009               	tblrd		*+
 13896  0000DA  CFF5 F061          	movff	tablat,LCD_Bitmap@bfOffBits+1
 13897  0000DE  0009               	tblrd		*+
 13898  0000E0  CFF5 F062          	movff	tablat,LCD_Bitmap@bfOffBits+2
 13899  0000E4  000A               	tblrd		*-
 13900  0000E6  CFF5 F063          	movff	tablat,LCD_Bitmap@bfOffBits+3
 13901  0000EA                     
 13902                           ; BSR set to: 0
 13903                           ;libraries/lcd_highlevel.c: 840:   biWidth = strPtr->biWidth;
 13904  0000EA  0E12               	movlw	18
 13905  0000EC  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13906  0000EE  6E2D               	movwf	??_LCD_Bitmap^0,c
 13907  0000F0  0E00               	movlw	0
 13908  0000F2  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13909  0000F4  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13910  0000F6  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13911  0000FA  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13912  0000FE                     	if	0	;tblptru may be non-zero
 13913  0000FE                     	endif
 13914  0000FE                     	if	0	;tblptru may be non-zero
 13915  0000FE                     	endif
 13916  0000FE  0009               	tblrd		*+
 13917  000100  CFF5 F076          	movff	tablat,LCD_Bitmap@biWidth
 13918  000104  000A               	tblrd		*-
 13919  000106  CFF5 F077          	movff	tablat,LCD_Bitmap@biWidth+1
 13920  00010A                     
 13921                           ; BSR set to: 0
 13922                           ;libraries/lcd_highlevel.c: 841:   biHeight = strPtr->biHeight;
 13923  00010A  0E16               	movlw	22
 13924  00010C  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13925  00010E  6E2D               	movwf	??_LCD_Bitmap^0,c
 13926  000110  0E00               	movlw	0
 13927  000112  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13928  000114  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13929  000116  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13930  00011A  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13931  00011E                     	if	0	;tblptru may be non-zero
 13932  00011E                     	endif
 13933  00011E                     	if	0	;tblptru may be non-zero
 13934  00011E                     	endif
 13935  00011E  0009               	tblrd		*+
 13936  000120  CFF5 F06B          	movff	tablat,LCD_Bitmap@biHeight
 13937  000124  000A               	tblrd		*-
 13938  000126  CFF5 F06C          	movff	tablat,LCD_Bitmap@biHeight+1
 13939  00012A                     
 13940                           ; BSR set to: 0
 13941                           ;libraries/lcd_highlevel.c: 842:   if((strPtr->biBitCount != 8) ||
 13942  00012A  0E1C               	movlw	28
 13943  00012C  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13944  00012E  6E2D               	movwf	??_LCD_Bitmap^0,c
 13945  000130  0E00               	movlw	0
 13946  000132  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13947  000134  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13948  000136  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13949  00013A  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13950  00013E                     	if	0	;tblptru may be non-zero
 13951  00013E                     	endif
 13952  00013E                     	if	0	;tblptru may be non-zero
 13953  00013E                     	endif
 13954  00013E  0009               	tblrd		*+
 13955  000140  0E08               	movlw	8
 13956  000142  18F5               	xorwf	tablat,w,c
 13957  000144  0009               	tblrd		*+
 13958  000146  10F5               	iorwf	tablat,w,c
 13959  000148  A4D8               	btfss	status,2,c
 13960  00014A  EFA9  F000         	goto	u4821
 13961  00014E  EFAB  F000         	goto	u4820
 13962  000152                     u4821:
 13963  000152  EF54  F003         	goto	l312
 13964  000156                     u4820:
 13965  000156                     
 13966                           ; BSR set to: 0
 13967  000156  0E1E               	movlw	30
 13968  000158  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13969  00015A  6E2D               	movwf	??_LCD_Bitmap^0,c
 13970  00015C  0E00               	movlw	0
 13971  00015E  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13972  000160  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13973  000162  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13974  000166  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13975  00016A                     	if	0	;tblptru may be non-zero
 13976  00016A                     	endif
 13977  00016A                     	if	0	;tblptru may be non-zero
 13978  00016A                     	endif
 13979  00016A  0009               	tblrd		*+
 13980  00016C  04F5               	decf	tablat,w,c
 13981  00016E  0009               	tblrd		*+
 13982  000170  10F5               	iorwf	tablat,w,c
 13983  000172  0009               	tblrd		*+
 13984  000174  10F5               	iorwf	tablat,w,c
 13985  000176  0009               	tblrd		*+
 13986  000178  10F5               	iorwf	tablat,w,c
 13987  00017A  B4D8               	btfsc	status,2,c
 13988  00017C  EFC2  F000         	goto	u4831
 13989  000180  EFC4  F000         	goto	u4830
 13990  000184                     u4831:
 13991  000184  EFC6  F000         	goto	l8088
 13992  000188                     u4830:
 13993  000188  EF54  F003         	goto	l312
 13994  00018C                     l8088:
 13995                           
 13996                           ; BSR set to: 0
 13997                           ;libraries/lcd_highlevel.c: 847:   if(((posX + biWidth) > (240)) ||
 13998  00018C  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 13999  00018E  2429               	addwf	LCD_Bitmap@posX^0,w,c
 14000  000190  6E2D               	movwf	??_LCD_Bitmap^0,c
 14001  000192  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14002  000194  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 14003  000196  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14004  000198  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14005  00019A  E107               	bnz	u4841
 14006  00019C  0EF1               	movlw	241
 14007  00019E  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 14008  0001A0  B0D8               	btfsc	status,0,c
 14009  0001A2  EFD5  F000         	goto	u4841
 14010  0001A6  EFD7  F000         	goto	u4840
 14011  0001AA                     u4841:
 14012  0001AA  EF54  F003         	goto	l312
 14013  0001AE                     u4840:
 14014  0001AE                     
 14015                           ; BSR set to: 0
 14016  0001AE  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14017  0001B0  242B               	addwf	LCD_Bitmap@posY^0,w,c
 14018  0001B2  6E2D               	movwf	??_LCD_Bitmap^0,c
 14019  0001B4  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14020  0001B6  202C               	addwfc	(LCD_Bitmap@posY+1)^0,w,c
 14021  0001B8  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14022  0001BA  0E41               	movlw	65
 14023  0001BC  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 14024  0001BE  0E01               	movlw	1
 14025  0001C0  582E               	subwfb	(??_LCD_Bitmap+1)^0,w,c
 14026  0001C2  A0D8               	btfss	status,0,c
 14027  0001C4  EFE6  F000         	goto	u4851
 14028  0001C8  EFE8  F000         	goto	u4850
 14029  0001CC                     u4851:
 14030  0001CC  EFEA  F000         	goto	l8092
 14031  0001D0                     u4850:
 14032  0001D0  EF54  F003         	goto	l312
 14033  0001D4                     l8092:
 14034                           
 14035                           ; BSR set to: 0
 14036                           ;libraries/lcd_highlevel.c: 853:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14037  0001D4  0E36               	movlw	54
 14038  0001D6  6E80               	movwf	128,c	;volatile
 14039  0001D8                     
 14040                           ; BSR set to: 0
 14041  0001D8  988B               	bcf	3979,4,c	;volatile
 14042  0001DA                     
 14043                           ; BSR set to: 0
 14044  0001DA  968B               	bcf	3979,3,c	;volatile
 14045  0001DC                     
 14046                           ; BSR set to: 0
 14047  0001DC  868B               	bsf	3979,3,c	;volatile
 14048  0001DE                     
 14049                           ; BSR set to: 0
 14050  0001DE  888B               	bsf	3979,4,c	;volatile
 14051                           
 14052                           ;libraries/lcd_highlevel.c: 855:   PORTA = 0b10000000; LATC3 = 0; LATC3 = 1;;
 14053  0001E0  0E80               	movlw	128
 14054  0001E2  6E80               	movwf	128,c	;volatile
 14055  0001E4                     
 14056                           ; BSR set to: 0
 14057  0001E4  968B               	bcf	3979,3,c	;volatile
 14058  0001E6                     
 14059                           ; BSR set to: 0
 14060  0001E6  868B               	bsf	3979,3,c	;volatile
 14061  0001E8                     
 14062                           ; BSR set to: 0
 14063                           ;libraries/lcd_highlevel.c: 857:   colorTablePtr = (uint8_t *)bmpPtr + 54;
 14064  0001E8  0E36               	movlw	54
 14065  0001EA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14066  0001EC  6F69               	movwf	LCD_Bitmap@colorTablePtr& (0+255),b
 14067  0001EE  0E00               	movlw	0
 14068  0001F0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14069  0001F2  6F6A               	movwf	(LCD_Bitmap@colorTablePtr+1)& (0+255),b
 14070  0001F4                     
 14071                           ; BSR set to: 0
 14072                           ;libraries/lcd_highlevel.c: 858:   bmpPtr += bfOffBits;
 14073  0001F4  5160               	movf	LCD_Bitmap@bfOffBits& (0+255),w,b
 14074  0001F6  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14075  0001F8  5161               	movf	(LCD_Bitmap@bfOffBits+1)& (0+255),w,b
 14076  0001FA  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14077                           
 14078                           ;libraries/lcd_highlevel.c: 859:   endOfImage = 0;
 14079  0001FC  0E00               	movlw	0
 14080  0001FE  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 14081  000200                     
 14082                           ; BSR set to: 0
 14083                           ;libraries/lcd_highlevel.c: 860:   jumpColor = RGB2LCD(colorTablePtr);
 14084  000200  C069  F012         	movff	LCD_Bitmap@colorTablePtr,RGB2LCD@colorTableEntry
 14085  000204  C06A  F013         	movff	LCD_Bitmap@colorTablePtr+1,RGB2LCD@colorTableEntry+1
 14086  000208  EC65  F020         	call	_RGB2LCD	;wreg free
 14087  00020C  C012  F078         	movff	?_RGB2LCD,LCD_Bitmap@jumpColor
 14088  000210  C013  F079         	movff	?_RGB2LCD+1,LCD_Bitmap@jumpColor+1
 14089  000214                     
 14090                           ;libraries/lcd_highlevel.c: 862:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14091  000214  0E2A               	movlw	42
 14092  000216  6E80               	movwf	128,c	;volatile
 14093  000218  988B               	bcf	3979,4,c	;volatile
 14094  00021A  968B               	bcf	3979,3,c	;volatile
 14095  00021C  868B               	bsf	3979,3,c	;volatile
 14096  00021E  888B               	bsf	3979,4,c	;volatile
 14097  000220                     
 14098                           ;libraries/lcd_highlevel.c: 863:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 14099  000220  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 14100  000222  6E80               	movwf	128,c	;volatile
 14101  000224  968B               	bcf	3979,3,c	;volatile
 14102  000226  868B               	bsf	3979,3,c	;volatile
 14103  000228                     
 14104                           ;libraries/lcd_highlevel.c: 864:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 14105  000228  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 14106  00022C  968B               	bcf	3979,3,c	;volatile
 14107  00022E  868B               	bsf	3979,3,c	;volatile
 14108  000230                     
 14109                           ;libraries/lcd_highlevel.c: 865:   posX = posX + biWidth-1;
 14110  000230  0100               	movlb	0	; () banked
 14111  000232  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 14112  000234  2429               	addwf	LCD_Bitmap@posX^0,w,c
 14113  000236  6E2D               	movwf	??_LCD_Bitmap^0,c
 14114  000238  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14115  00023A  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 14116  00023C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14117  00023E  0EFF               	movlw	255
 14118  000240  242D               	addwf	??_LCD_Bitmap^0,w,c
 14119  000242  6E29               	movwf	LCD_Bitmap@posX^0,c
 14120  000244  0EFF               	movlw	255
 14121  000246  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14122  000248  6E2A               	movwf	(LCD_Bitmap@posX+1)^0,c
 14123  00024A                     
 14124                           ; BSR set to: 0
 14125                           ;libraries/lcd_highlevel.c: 866:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 14126  00024A  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 14127  00024C  6E80               	movwf	128,c	;volatile
 14128  00024E                     
 14129                           ; BSR set to: 0
 14130  00024E  968B               	bcf	3979,3,c	;volatile
 14131  000250                     
 14132                           ; BSR set to: 0
 14133  000250  868B               	bsf	3979,3,c	;volatile
 14134  000252                     
 14135                           ; BSR set to: 0
 14136                           ;libraries/lcd_highlevel.c: 867:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 14137  000252  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 14138  000256                     
 14139                           ; BSR set to: 0
 14140  000256  968B               	bcf	3979,3,c	;volatile
 14141  000258                     
 14142                           ; BSR set to: 0
 14143  000258  868B               	bsf	3979,3,c	;volatile
 14144  00025A                     
 14145                           ; BSR set to: 0
 14146                           ;libraries/lcd_highlevel.c: 869:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14147  00025A  0E2B               	movlw	43
 14148  00025C  6E80               	movwf	128,c	;volatile
 14149  00025E                     
 14150                           ; BSR set to: 0
 14151  00025E  988B               	bcf	3979,4,c	;volatile
 14152  000260                     
 14153                           ; BSR set to: 0
 14154  000260  968B               	bcf	3979,3,c	;volatile
 14155  000262                     
 14156                           ; BSR set to: 0
 14157  000262  868B               	bsf	3979,3,c	;volatile
 14158  000264                     
 14159                           ; BSR set to: 0
 14160  000264  888B               	bsf	3979,4,c	;volatile
 14161  000266                     
 14162                           ; BSR set to: 0
 14163                           ;libraries/lcd_highlevel.c: 870:   newY = 320 - posY - biHeight;
 14164  000266  C02B  F02D         	movff	LCD_Bitmap@posY,??_LCD_Bitmap
 14165  00026A  C02C  F02E         	movff	LCD_Bitmap@posY+1,??_LCD_Bitmap+1
 14166  00026E  1E2D               	comf	??_LCD_Bitmap^0,f,c
 14167  000270  1E2E               	comf	(??_LCD_Bitmap+1)^0,f,c
 14168  000272  4A2D               	infsnz	??_LCD_Bitmap^0,f,c
 14169  000274  2A2E               	incf	(??_LCD_Bitmap+1)^0,f,c
 14170  000276  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14171  000278  5E2D               	subwf	??_LCD_Bitmap^0,f,c
 14172  00027A  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14173  00027C  5A2E               	subwfb	(??_LCD_Bitmap+1)^0,f,c
 14174  00027E  0E40               	movlw	64
 14175  000280  242D               	addwf	??_LCD_Bitmap^0,w,c
 14176  000282  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 14177  000284  0E01               	movlw	1
 14178  000286  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14179  000288  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 14180  00028A                     
 14181                           ; BSR set to: 0
 14182                           ;libraries/lcd_highlevel.c: 871:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14183  00028A  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14184  00028C  6E80               	movwf	128,c	;volatile
 14185  00028E                     
 14186                           ; BSR set to: 0
 14187  00028E  968B               	bcf	3979,3,c	;volatile
 14188  000290                     
 14189                           ; BSR set to: 0
 14190  000290  868B               	bsf	3979,3,c	;volatile
 14191  000292                     
 14192                           ; BSR set to: 0
 14193                           ;libraries/lcd_highlevel.c: 872:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14194  000292  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14195  000296                     
 14196                           ; BSR set to: 0
 14197  000296  968B               	bcf	3979,3,c	;volatile
 14198  000298                     
 14199                           ; BSR set to: 0
 14200  000298  868B               	bsf	3979,3,c	;volatile
 14201  00029A                     
 14202                           ; BSR set to: 0
 14203                           ;libraries/lcd_highlevel.c: 873:   newY = newY + biHeight-1;
 14204  00029A  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14205  00029C  2573               	addwf	LCD_Bitmap@newY& (0+255),w,b
 14206  00029E  6E2D               	movwf	??_LCD_Bitmap^0,c
 14207  0002A0  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14208  0002A2  2174               	addwfc	(LCD_Bitmap@newY+1)& (0+255),w,b
 14209  0002A4  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14210  0002A6  0EFF               	movlw	255
 14211  0002A8  242D               	addwf	??_LCD_Bitmap^0,w,c
 14212  0002AA  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 14213  0002AC  0EFF               	movlw	255
 14214  0002AE  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14215  0002B0  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 14216  0002B2                     
 14217                           ; BSR set to: 0
 14218                           ;libraries/lcd_highlevel.c: 874:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14219  0002B2  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14220  0002B4  6E80               	movwf	128,c	;volatile
 14221  0002B6                     
 14222                           ; BSR set to: 0
 14223  0002B6  968B               	bcf	3979,3,c	;volatile
 14224  0002B8                     
 14225                           ; BSR set to: 0
 14226  0002B8  868B               	bsf	3979,3,c	;volatile
 14227  0002BA                     
 14228                           ; BSR set to: 0
 14229                           ;libraries/lcd_highlevel.c: 875:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14230  0002BA  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14231  0002BE                     
 14232                           ; BSR set to: 0
 14233  0002BE  968B               	bcf	3979,3,c	;volatile
 14234  0002C0                     
 14235                           ; BSR set to: 0
 14236  0002C0  868B               	bsf	3979,3,c	;volatile
 14237  0002C2                     
 14238                           ; BSR set to: 0
 14239                           ;libraries/lcd_highlevel.c: 877:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14240  0002C2  0E2C               	movlw	44
 14241  0002C4  6E80               	movwf	128,c	;volatile
 14242  0002C6                     
 14243                           ; BSR set to: 0
 14244  0002C6  988B               	bcf	3979,4,c	;volatile
 14245  0002C8                     
 14246                           ; BSR set to: 0
 14247  0002C8  968B               	bcf	3979,3,c	;volatile
 14248  0002CA                     
 14249                           ; BSR set to: 0
 14250  0002CA  868B               	bsf	3979,3,c	;volatile
 14251  0002CC                     
 14252                           ; BSR set to: 0
 14253  0002CC  888B               	bsf	3979,4,c	;volatile
 14254  0002CE                     
 14255                           ; BSR set to: 0
 14256                           ;libraries/lcd_highlevel.c: 878:   curXPos = 0;
 14257  0002CE  0E00               	movlw	0
 14258  0002D0  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14259  0002D2  0E00               	movlw	0
 14260  0002D4  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14261  0002D6                     
 14262                           ; BSR set to: 0
 14263                           ;libraries/lcd_highlevel.c: 879:   curYPos = 0;
 14264  0002D6  0E00               	movlw	0
 14265  0002D8  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14266  0002DA  0E00               	movlw	0
 14267  0002DC  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14268  0002DE                     l8200:
 14269                           
 14270                           ; BSR set to: 0
 14271                           ;libraries/lcd_highlevel.c: 881:   {;libraries/lcd_highlevel.c: 882:     if(bmpPtr[0] ==
      +                           0)
 14272  0002DE  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14273  0002E2  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14274  0002E6                     	if	0	;tblptru may be non-zero
 14275  0002E6                     	endif
 14276  0002E6                     	if	0	;tblptru may be non-zero
 14277  0002E6                     	endif
 14278  0002E6  0008               	tblrd		*
 14279  0002E8  50F5               	movf	tablat,w,c
 14280  0002EA  0900               	iorlw	0
 14281  0002EC  A4D8               	btfss	status,2,c
 14282  0002EE  EF7B  F001         	goto	u4861
 14283  0002F2  EF7D  F001         	goto	u4860
 14284  0002F6                     u4861:
 14285  0002F6  EFF8  F002         	goto	l8326
 14286  0002FA                     u4860:
 14287  0002FA  EFD4  F002         	goto	l8324
 14288  0002FE                     l8204:
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;libraries/lcd_highlevel.c: 887:           bmpPtr += 2;
 14292  0002FE  0E02               	movlw	2
 14293  000300  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14294  000302  0E00               	movlw	0
 14295  000304  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14296  000306                     
 14297                           ; BSR set to: 0
 14298                           ;libraries/lcd_highlevel.c: 888:           for(i=0;i<biWidth - curXPos;i++)
 14299  000306  0E00               	movlw	0
 14300  000308  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14301  00030A  0E00               	movlw	0
 14302  00030C  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14303  00030E  EF93  F001         	goto	l8222
 14304  000312                     l8208:
 14305                           
 14306                           ; BSR set to: 0
 14307                           ;libraries/lcd_highlevel.c: 889:           {;libraries/lcd_highlevel.c: 890:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14308  000312  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14309  000314  6E80               	movwf	128,c	;volatile
 14310  000316                     
 14311                           ; BSR set to: 0
 14312  000316  968B               	bcf	3979,3,c	;volatile
 14313  000318                     
 14314                           ; BSR set to: 0
 14315  000318  868B               	bsf	3979,3,c	;volatile
 14316  00031A                     
 14317                           ; BSR set to: 0
 14318                           ;libraries/lcd_highlevel.c: 891:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14319  00031A  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14320  00031E                     
 14321                           ; BSR set to: 0
 14322  00031E  968B               	bcf	3979,3,c	;volatile
 14323  000320                     
 14324                           ; BSR set to: 0
 14325  000320  868B               	bsf	3979,3,c	;volatile
 14326  000322                     
 14327                           ; BSR set to: 0
 14328                           ;libraries/lcd_highlevel.c: 892:           }
 14329  000322  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14330  000324  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14331  000326                     l8222:
 14332                           
 14333                           ; BSR set to: 0
 14334  000326  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14335  000328  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14336  00032A  6E2D               	movwf	??_LCD_Bitmap^0,c
 14337  00032C  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14338  00032E  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14339  000330  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14340  000332  502D               	movf	??_LCD_Bitmap^0,w,c
 14341  000334  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14342  000336  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14343  000338  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14344  00033A  A0D8               	btfss	status,0,c
 14345  00033C  EFA2  F001         	goto	u4871
 14346  000340  EFA4  F001         	goto	u4870
 14347  000344                     u4871:
 14348  000344  EF89  F001         	goto	l8208
 14349  000348                     u4870:
 14350  000348                     
 14351                           ; BSR set to: 0
 14352                           ;libraries/lcd_highlevel.c: 893:           curXPos = 0;
 14353  000348  0E00               	movlw	0
 14354  00034A  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14355  00034C  0E00               	movlw	0
 14356  00034E  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14357  000350                     
 14358                           ; BSR set to: 0
 14359                           ;libraries/lcd_highlevel.c: 894:           curYPos++;
 14360  000350  4B67               	infsnz	LCD_Bitmap@curYPos& (0+255),f,b
 14361  000352  2B68               	incf	(LCD_Bitmap@curYPos+1)& (0+255),f,b
 14362                           
 14363                           ;libraries/lcd_highlevel.c: 895:         break;
 14364  000354  EF41  F003         	goto	l8352
 14365  000358                     l8228:
 14366                           
 14367                           ; BSR set to: 0
 14368                           ;libraries/lcd_highlevel.c: 897:           for(i=0;i<biWidth - curXPos;i++)
 14369  000358  0E00               	movlw	0
 14370  00035A  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14371  00035C  0E00               	movlw	0
 14372  00035E  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14373  000360  EFBC  F001         	goto	l8244
 14374  000364                     l8230:
 14375                           
 14376                           ; BSR set to: 0
 14377                           ;libraries/lcd_highlevel.c: 898:           {;libraries/lcd_highlevel.c: 899:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14378  000364  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14379  000366  6E80               	movwf	128,c	;volatile
 14380  000368                     
 14381                           ; BSR set to: 0
 14382  000368  968B               	bcf	3979,3,c	;volatile
 14383  00036A                     
 14384                           ; BSR set to: 0
 14385  00036A  868B               	bsf	3979,3,c	;volatile
 14386  00036C                     
 14387                           ; BSR set to: 0
 14388                           ;libraries/lcd_highlevel.c: 900:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14389  00036C  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14390  000370                     
 14391                           ; BSR set to: 0
 14392  000370  968B               	bcf	3979,3,c	;volatile
 14393  000372                     
 14394                           ; BSR set to: 0
 14395  000372  868B               	bsf	3979,3,c	;volatile
 14396  000374                     
 14397                           ; BSR set to: 0
 14398                           ;libraries/lcd_highlevel.c: 901:           }
 14399  000374  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14400  000376  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14401  000378                     l8244:
 14402                           
 14403                           ; BSR set to: 0
 14404  000378  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14405  00037A  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14406  00037C  6E2D               	movwf	??_LCD_Bitmap^0,c
 14407  00037E  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14408  000380  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14409  000382  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14410  000384  502D               	movf	??_LCD_Bitmap^0,w,c
 14411  000386  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14412  000388  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14413  00038A  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14414  00038C  A0D8               	btfss	status,0,c
 14415  00038E  EFCB  F001         	goto	u4881
 14416  000392  EFCD  F001         	goto	u4880
 14417  000396                     u4881:
 14418  000396  EFB2  F001         	goto	l8230
 14419  00039A                     u4880:
 14420  00039A                     
 14421                           ; BSR set to: 0
 14422                           ;libraries/lcd_highlevel.c: 902:           for(i=0;i<(biHeight - curYPos -1)*biWidth;i++
      +                          )
 14423  00039A  0E00               	movlw	0
 14424  00039C  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14425  00039E  0E00               	movlw	0
 14426  0003A0  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14427  0003A2  EFDD  F001         	goto	l8262
 14428  0003A6                     l8248:
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;libraries/lcd_highlevel.c: 903:           {;libraries/lcd_highlevel.c: 904:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14432  0003A6  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14433  0003A8  6E80               	movwf	128,c	;volatile
 14434  0003AA                     
 14435                           ; BSR set to: 0
 14436  0003AA  968B               	bcf	3979,3,c	;volatile
 14437  0003AC                     
 14438                           ; BSR set to: 0
 14439  0003AC  868B               	bsf	3979,3,c	;volatile
 14440  0003AE                     
 14441                           ; BSR set to: 0
 14442                           ;libraries/lcd_highlevel.c: 905:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14443  0003AE  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14444  0003B2                     
 14445                           ; BSR set to: 0
 14446  0003B2  968B               	bcf	3979,3,c	;volatile
 14447  0003B4                     
 14448                           ; BSR set to: 0
 14449  0003B4  868B               	bsf	3979,3,c	;volatile
 14450  0003B6                     
 14451                           ; BSR set to: 0
 14452                           ;libraries/lcd_highlevel.c: 906:           }
 14453  0003B6  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14454  0003B8  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14455  0003BA                     l8262:
 14456                           
 14457                           ; BSR set to: 0
 14458  0003BA  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14459  0003BC  5D6B               	subwf	LCD_Bitmap@biHeight& (0+255),w,b
 14460  0003BE  6E2D               	movwf	??_LCD_Bitmap^0,c
 14461  0003C0  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14462  0003C2  596C               	subwfb	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14463  0003C4  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14464  0003C6  0EFF               	movlw	255
 14465  0003C8  242D               	addwf	??_LCD_Bitmap^0,w,c
 14466  0003CA  6E1A               	movwf	___wmul@multiplier^0,c
 14467  0003CC  0EFF               	movlw	255
 14468  0003CE  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14469  0003D0  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 14470  0003D2  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14471  0003D6  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14472  0003DA  EC94  F027         	call	___wmul	;wreg free
 14473  0003DE  501A               	movf	?___wmul^0,w,c
 14474  0003E0  0100               	movlb	0	; () banked
 14475  0003E2  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14476  0003E4  501B               	movf	(?___wmul+1)^0,w,c
 14477  0003E6  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14478  0003E8  A0D8               	btfss	status,0,c
 14479  0003EA  EFF9  F001         	goto	u4891
 14480  0003EE  EFFB  F001         	goto	u4890
 14481  0003F2                     u4891:
 14482  0003F2  EFD3  F001         	goto	l8248
 14483  0003F6                     u4890:
 14484  0003F6                     
 14485                           ; BSR set to: 0
 14486                           ;libraries/lcd_highlevel.c: 907:           endOfImage = 1;
 14487  0003F6  0E01               	movlw	1
 14488  0003F8  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 14489                           
 14490                           ;libraries/lcd_highlevel.c: 908:         break;
 14491  0003FA  EF41  F003         	goto	l8352
 14492  0003FE                     l8266:
 14493                           
 14494                           ; BSR set to: 0
 14495                           ;libraries/lcd_highlevel.c: 910:           jumpCount = bmpPtr[2] + (bmpPtr[3]*biWidth);
 14496  0003FE  0E03               	movlw	3
 14497  000400  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14498  000402  6E2D               	movwf	??_LCD_Bitmap^0,c
 14499  000404  0E00               	movlw	0
 14500  000406  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14501  000408  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14502  00040A  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14503  00040E  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14504  000412                     	if	0	;tblptru may be non-zero
 14505  000412                     	endif
 14506  000412                     	if	0	;tblptru may be non-zero
 14507  000412                     	endif
 14508  000412  0008               	tblrd		*
 14509  000414  50F5               	movf	tablat,w,c
 14510  000416  6E1A               	movwf	___wmul@multiplier^0,c
 14511  000418  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14512  00041A  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14513  00041E  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14514  000422  EC94  F027         	call	___wmul	;wreg free
 14515  000426  0E02               	movlw	2
 14516  000428  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14517  00042A  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14518  00042C  0E00               	movlw	0
 14519  00042E  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14520  000430  6E30               	movwf	(??_LCD_Bitmap+3)^0,c
 14521  000432  C02F  FFF6         	movff	??_LCD_Bitmap+2,tblptrl
 14522  000436  C030  FFF7         	movff	??_LCD_Bitmap+3,tblptrh
 14523  00043A                     	if	0	;tblptru may be non-zero
 14524  00043A                     	endif
 14525  00043A                     	if	0	;tblptru may be non-zero
 14526  00043A                     	endif
 14527  00043A  0008               	tblrd		*
 14528  00043C  50F5               	movf	tablat,w,c
 14529  00043E  241A               	addwf	?___wmul^0,w,c
 14530  000440  0100               	movlb	0	; () banked
 14531  000442  6F65               	movwf	LCD_Bitmap@jumpCount& (0+255),b
 14532  000444  0E00               	movlw	0
 14533  000446  201B               	addwfc	(?___wmul+1)^0,w,c
 14534  000448  6F66               	movwf	(LCD_Bitmap@jumpCount+1)& (0+255),b
 14535  00044A                     
 14536                           ; BSR set to: 0
 14537                           ;libraries/lcd_highlevel.c: 911:           for(i=0;i<jumpCount;i++)
 14538  00044A  0E00               	movlw	0
 14539  00044C  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14540  00044E  0E00               	movlw	0
 14541  000450  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14542  000452  EF37  F002         	goto	l8286
 14543  000456                     l8270:
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;libraries/lcd_highlevel.c: 912:           {;libraries/lcd_highlevel.c: 913:            
      +                           curXPos++;
 14547  000456  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14548  000458  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14549  00045A                     
 14550                           ; BSR set to: 0
 14551                           ;libraries/lcd_highlevel.c: 914:             PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 
      +                          1;;
 14552  00045A  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14553  00045C  6E80               	movwf	128,c	;volatile
 14554  00045E                     
 14555                           ; BSR set to: 0
 14556  00045E  968B               	bcf	3979,3,c	;volatile
 14557  000460                     
 14558                           ; BSR set to: 0
 14559  000460  868B               	bsf	3979,3,c	;volatile
 14560  000462                     
 14561                           ; BSR set to: 0
 14562                           ;libraries/lcd_highlevel.c: 915:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14563  000462  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14564  000466                     
 14565                           ; BSR set to: 0
 14566  000466  968B               	bcf	3979,3,c	;volatile
 14567  000468                     
 14568                           ; BSR set to: 0
 14569  000468  868B               	bsf	3979,3,c	;volatile
 14570  00046A                     
 14571                           ; BSR set to: 0
 14572                           ;libraries/lcd_highlevel.c: 916:           }
 14573  00046A  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14574  00046C  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14575  00046E                     l8286:
 14576                           
 14577                           ; BSR set to: 0
 14578  00046E  5165               	movf	LCD_Bitmap@jumpCount& (0+255),w,b
 14579  000470  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14580  000472  5166               	movf	(LCD_Bitmap@jumpCount+1)& (0+255),w,b
 14581  000474  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14582  000476  A0D8               	btfss	status,0,c
 14583  000478  EF40  F002         	goto	u4901
 14584  00047C  EF42  F002         	goto	u4900
 14585  000480                     u4901:
 14586  000480  EF2B  F002         	goto	l8270
 14587  000484                     u4900:
 14588  000484                     
 14589                           ; BSR set to: 0
 14590                           ;libraries/lcd_highlevel.c: 917:           curYPos = curYPos + (jumpCount / biWidth);
 14591  000484  C065  F020         	movff	LCD_Bitmap@jumpCount,___lwdiv@dividend
 14592  000488  C066  F021         	movff	LCD_Bitmap@jumpCount+1,___lwdiv@dividend+1
 14593  00048C  C076  F022         	movff	LCD_Bitmap@biWidth,___lwdiv@divisor
 14594  000490  C077  F023         	movff	LCD_Bitmap@biWidth+1,___lwdiv@divisor+1
 14595  000494  EC6D  F024         	call	___lwdiv	;wreg free
 14596  000498  0100               	movlb	0	; () banked
 14597  00049A  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14598  00049C  2420               	addwf	?___lwdiv^0,w,c
 14599  00049E  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14600  0004A0  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14601  0004A2  2021               	addwfc	(?___lwdiv+1)^0,w,c
 14602  0004A4  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14603                           
 14604                           ;libraries/lcd_highlevel.c: 918:           curXPos = curXPos % biWidth;
 14605  0004A6  C06F  F012         	movff	LCD_Bitmap@curXPos,___lwmod@dividend
 14606  0004AA  C070  F013         	movff	LCD_Bitmap@curXPos+1,___lwmod@dividend+1
 14607  0004AE  C076  F014         	movff	LCD_Bitmap@biWidth,___lwmod@divisor
 14608  0004B2  C077  F015         	movff	LCD_Bitmap@biWidth+1,___lwmod@divisor+1
 14609  0004B6  EC0E  F025         	call	___lwmod	;wreg free
 14610  0004BA  C012  F06F         	movff	?___lwmod,LCD_Bitmap@curXPos
 14611  0004BE  C013  F070         	movff	?___lwmod+1,LCD_Bitmap@curXPos+1
 14612  0004C2                     
 14613                           ;libraries/lcd_highlevel.c: 919:           bmpPtr += 4;
 14614  0004C2  0E04               	movlw	4
 14615  0004C4  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14616  0004C6  0E00               	movlw	0
 14617  0004C8  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14618                           
 14619                           ;libraries/lcd_highlevel.c: 920:         break;
 14620  0004CA  EF41  F003         	goto	l8352
 14621  0004CE                     l8292:
 14622                           
 14623                           ; BSR set to: 0
 14624                           ;libraries/lcd_highlevel.c: 922:           pixelCount = bmpPtr[1];
 14625  0004CE  0E01               	movlw	1
 14626  0004D0  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14627  0004D2  6E2D               	movwf	??_LCD_Bitmap^0,c
 14628  0004D4  0E00               	movlw	0
 14629  0004D6  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14630  0004D8  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14631  0004DA  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14632  0004DE  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14633  0004E2                     	if	0	;tblptru may be non-zero
 14634  0004E2                     	endif
 14635  0004E2                     	if	0	;tblptru may be non-zero
 14636  0004E2                     	endif
 14637  0004E2  0008               	tblrd		*
 14638  0004E4  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14639  0004E8                     
 14640                           ; BSR set to: 0
 14641                           ;libraries/lcd_highlevel.c: 923:           for(i=0;i < pixelCount;i++)
 14642  0004E8  0E00               	movlw	0
 14643  0004EA  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14644  0004EC  0E00               	movlw	0
 14645  0004EE  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14646  0004F0  EFA8  F002         	goto	l8314
 14647  0004F4                     l8296:
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;libraries/lcd_highlevel.c: 924:           {;libraries/lcd_highlevel.c: 925:            
      +                           color = RGB2LCD(colorTablePtr+(bmpPtr[2+i]*4));
 14651  0004F4  517A               	movf	LCD_Bitmap@i& (0+255),w,b
 14652  0004F6  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14653  0004F8  6E2D               	movwf	??_LCD_Bitmap^0,c
 14654  0004FA  517B               	movf	(LCD_Bitmap@i+1)& (0+255),w,b
 14655  0004FC  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14656  0004FE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14657  000500  0E02               	movlw	2
 14658  000502  262D               	addwf	??_LCD_Bitmap^0,f,c
 14659  000504  0E00               	movlw	0
 14660  000506  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14661  000508  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14662  00050C  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14663  000510                     	if	0	;tblptru may be non-zero
 14664  000510                     	endif
 14665  000510                     	if	0	;tblptru may be non-zero
 14666  000510                     	endif
 14667  000510  0008               	tblrd		*
 14668  000512  50F5               	movf	tablat,w,c
 14669  000514  0D04               	mullw	4
 14670  000516  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14671  00051A  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14672  00051E  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14673  000520  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14674  000522  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14675  000524  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14676  000526  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14677  000528  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14678  00052A  EC65  F020         	call	_RGB2LCD	;wreg free
 14679  00052E  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14680  000532  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14681  000536                     
 14682                           ;libraries/lcd_highlevel.c: 926:             curXPos++;
 14683  000536  0100               	movlb	0	; () banked
 14684  000538  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14685  00053A  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14686  00053C                     
 14687                           ; BSR set to: 0
 14688                           ;libraries/lcd_highlevel.c: 927:             PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14689  00053C  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14690  00053E  6E80               	movwf	128,c	;volatile
 14691  000540                     
 14692                           ; BSR set to: 0
 14693  000540  968B               	bcf	3979,3,c	;volatile
 14694  000542                     
 14695                           ; BSR set to: 0
 14696  000542  868B               	bsf	3979,3,c	;volatile
 14697  000544                     
 14698                           ; BSR set to: 0
 14699                           ;libraries/lcd_highlevel.c: 928:             PORTA = color; LATC3 = 0; LATC3 = 1;;
 14700  000544  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14701  000548                     
 14702                           ; BSR set to: 0
 14703  000548  968B               	bcf	3979,3,c	;volatile
 14704  00054A                     
 14705                           ; BSR set to: 0
 14706  00054A  868B               	bsf	3979,3,c	;volatile
 14707  00054C                     
 14708                           ; BSR set to: 0
 14709                           ;libraries/lcd_highlevel.c: 929:           }
 14710  00054C  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14711  00054E  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14712  000550                     l8314:
 14713                           
 14714                           ; BSR set to: 0
 14715  000550  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14716  000552  6E2D               	movwf	??_LCD_Bitmap^0,c
 14717  000554  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14718  000556  502D               	movf	??_LCD_Bitmap^0,w,c
 14719  000558  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14720  00055A  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14721  00055C  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14722  00055E  A0D8               	btfss	status,0,c
 14723  000560  EFB4  F002         	goto	u4911
 14724  000564  EFB6  F002         	goto	u4910
 14725  000568                     u4911:
 14726  000568  EF7A  F002         	goto	l8296
 14727  00056C                     u4910:
 14728  00056C                     
 14729                           ; BSR set to: 0
 14730                           ;libraries/lcd_highlevel.c: 930:           if(pixelCount < 255)
 14731  00056C  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14732  00056E  B4D8               	btfsc	status,2,c
 14733  000570  EFBC  F002         	goto	u4921
 14734  000574  EFBE  F002         	goto	u4920
 14735  000578                     u4921:
 14736  000578  EFCE  F002         	goto	l8320
 14737  00057C                     u4920:
 14738  00057C                     
 14739                           ; BSR set to: 0
 14740                           ;libraries/lcd_highlevel.c: 931:           {;libraries/lcd_highlevel.c: 932:            
      +                           pixelCount = (pixelCount+1) & 0xFE;
 14741  00057C  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14742  00057E  0BFE               	andlw	254
 14743  000580  6F75               	movwf	LCD_Bitmap@pixelCount& (0+255),b
 14744                           
 14745                           ;libraries/lcd_highlevel.c: 933:             bmpPtr+=pixelCount+2;
 14746  000582  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14747  000584  6E2D               	movwf	??_LCD_Bitmap^0,c
 14748  000586  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14749  000588  0E02               	movlw	2
 14750  00058A  262D               	addwf	??_LCD_Bitmap^0,f,c
 14751  00058C  0E00               	movlw	0
 14752  00058E  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14753  000590  502D               	movf	??_LCD_Bitmap^0,w,c
 14754  000592  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14755  000594  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14756  000596  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14757                           
 14758                           ;libraries/lcd_highlevel.c: 934:           }
 14759  000598  EF41  F003         	goto	l8352
 14760  00059C                     l8320:
 14761                           
 14762                           ; BSR set to: 0
 14763                           ;libraries/lcd_highlevel.c: 936:           {;libraries/lcd_highlevel.c: 937:            
      +                             bmpPtr += 258;
 14764  00059C  0E02               	movlw	2
 14765  00059E  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14766  0005A0  0E01               	movlw	1
 14767  0005A2  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14768  0005A4  EF41  F003         	goto	l8352
 14769  0005A8                     l8324:
 14770                           
 14771                           ; BSR set to: 0
 14772  0005A8  0E01               	movlw	1
 14773  0005AA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14774  0005AC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14775  0005AE  0E00               	movlw	0
 14776  0005B0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14777  0005B2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14778  0005B4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14779  0005B8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14780  0005BC                     	if	0	;tblptru may be non-zero
 14781  0005BC                     	endif
 14782  0005BC                     	if	0	;tblptru may be non-zero
 14783  0005BC                     	endif
 14784  0005BC  0008               	tblrd		*
 14785  0005BE  50F5               	movf	tablat,w,c
 14786  0005C0  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14787  0005C2  6A30               	clrf	(??_LCD_Bitmap+3)^0,c
 14788                           
 14789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14790                           ; Switch size 1, requested type "simple"
 14791                           ; Number of cases is 1, Range of values is 0 to 0
 14792                           ; switch strategies available:
 14793                           ; Name         Instructions Cycles
 14794                           ; simple_byte            4     3 (average)
 14795                           ;	Chosen strategy is simple_byte
 14796  0005C4  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14797  0005C6  0A00               	xorlw	0	; case 0
 14798  0005C8  B4D8               	btfsc	status,2,c
 14799  0005CA  EFE9  F002         	goto	l9572
 14800  0005CE  EF67  F002         	goto	l8292
 14801  0005D2                     l9572:
 14802                           
 14803                           ; BSR set to: 0
 14804                           ; Switch size 1, requested type "simple"
 14805                           ; Number of cases is 3, Range of values is 0 to 2
 14806                           ; switch strategies available:
 14807                           ; Name         Instructions Cycles
 14808                           ; simple_byte           10     6 (average)
 14809                           ;	Chosen strategy is simple_byte
 14810  0005D2  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14811  0005D4  0A00               	xorlw	0	; case 0
 14812  0005D6  B4D8               	btfsc	status,2,c
 14813  0005D8  EF7F  F001         	goto	l8204
 14814  0005DC  0A01               	xorlw	1	; case 1
 14815  0005DE  B4D8               	btfsc	status,2,c
 14816  0005E0  EFAC  F001         	goto	l8228
 14817  0005E4  0A03               	xorlw	3	; case 2
 14818  0005E6  B4D8               	btfsc	status,2,c
 14819  0005E8  EFFF  F001         	goto	l8266
 14820  0005EC  EF67  F002         	goto	l8292
 14821  0005F0                     l8326:
 14822                           
 14823                           ; BSR set to: 0
 14824                           ;libraries/lcd_highlevel.c: 943:     {;libraries/lcd_highlevel.c: 944:       pixelCount 
      +                          = bmpPtr[0];
 14825  0005F0  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14826  0005F4  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14827  0005F8                     	if	0	;tblptru may be non-zero
 14828  0005F8                     	endif
 14829  0005F8                     	if	0	;tblptru may be non-zero
 14830  0005F8                     	endif
 14831  0005F8  0008               	tblrd		*
 14832  0005FA  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14833  0005FE                     
 14834                           ; BSR set to: 0
 14835                           ;libraries/lcd_highlevel.c: 945:       color = RGB2LCD(colorTablePtr+(bmpPtr[1]*4));
 14836  0005FE  0E01               	movlw	1
 14837  000600  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14838  000602  6E2D               	movwf	??_LCD_Bitmap^0,c
 14839  000604  0E00               	movlw	0
 14840  000606  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14841  000608  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14842  00060A  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14843  00060E  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14844  000612                     	if	0	;tblptru may be non-zero
 14845  000612                     	endif
 14846  000612                     	if	0	;tblptru may be non-zero
 14847  000612                     	endif
 14848  000612  0008               	tblrd		*
 14849  000614  50F5               	movf	tablat,w,c
 14850  000616  0D04               	mullw	4
 14851  000618  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14852  00061C  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14853  000620  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14854  000622  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14855  000624  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14856  000626  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14857  000628  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14858  00062A  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14859  00062C  EC65  F020         	call	_RGB2LCD	;wreg free
 14860  000630  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14861  000634  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14862  000638                     
 14863                           ;libraries/lcd_highlevel.c: 946:       for(i=0;i < pixelCount;i++)
 14864  000638  0E00               	movlw	0
 14865  00063A  0100               	movlb	0	; () banked
 14866  00063C  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14867  00063E  0E00               	movlw	0
 14868  000640  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14869  000642  EF2F  F003         	goto	l8348
 14870  000646                     l8332:
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;libraries/lcd_highlevel.c: 947:       {;libraries/lcd_highlevel.c: 948:         curXPos
      +                          ++;
 14874  000646  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14875  000648  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14876  00064A                     
 14877                           ; BSR set to: 0
 14878                           ;libraries/lcd_highlevel.c: 949:         PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14879  00064A  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14880  00064C  6E80               	movwf	128,c	;volatile
 14881  00064E                     
 14882                           ; BSR set to: 0
 14883  00064E  968B               	bcf	3979,3,c	;volatile
 14884  000650                     
 14885                           ; BSR set to: 0
 14886  000650  868B               	bsf	3979,3,c	;volatile
 14887  000652                     
 14888                           ; BSR set to: 0
 14889                           ;libraries/lcd_highlevel.c: 950:         PORTA = color; LATC3 = 0; LATC3 = 1;;
 14890  000652  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14891  000656                     
 14892                           ; BSR set to: 0
 14893  000656  968B               	bcf	3979,3,c	;volatile
 14894  000658                     
 14895                           ; BSR set to: 0
 14896  000658  868B               	bsf	3979,3,c	;volatile
 14897  00065A                     
 14898                           ; BSR set to: 0
 14899                           ;libraries/lcd_highlevel.c: 951:       }
 14900  00065A  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14901  00065C  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14902  00065E                     l8348:
 14903                           
 14904                           ; BSR set to: 0
 14905  00065E  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14906  000660  6E2D               	movwf	??_LCD_Bitmap^0,c
 14907  000662  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14908  000664  502D               	movf	??_LCD_Bitmap^0,w,c
 14909  000666  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14910  000668  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14911  00066A  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14912  00066C  A0D8               	btfss	status,0,c
 14913  00066E  EF3B  F003         	goto	u4931
 14914  000672  EF3D  F003         	goto	u4930
 14915  000676                     u4931:
 14916  000676  EF23  F003         	goto	l8332
 14917  00067A                     u4930:
 14918  00067A                     
 14919                           ; BSR set to: 0
 14920                           ;libraries/lcd_highlevel.c: 952:       bmpPtr+=2;
 14921  00067A  0E02               	movlw	2
 14922  00067C  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14923  00067E  0E00               	movlw	0
 14924  000680  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14925  000682                     l8352:
 14926                           
 14927                           ;libraries/lcd_highlevel.c: 954:   }while(endOfImage == 0);
 14928  000682  0100               	movlb	0	; () banked
 14929  000684  5164               	movf	LCD_Bitmap@endOfImage& (0+255),w,b
 14930  000686  B4D8               	btfsc	status,2,c
 14931  000688  EF48  F003         	goto	u4941
 14932  00068C  EF4A  F003         	goto	u4940
 14933  000690                     u4941:
 14934  000690  EF6F  F001         	goto	l8200
 14935  000694                     u4940:
 14936  000694                     
 14937                           ; BSR set to: 0
 14938                           ;libraries/lcd_highlevel.c: 955:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14939  000694  0E36               	movlw	54
 14940  000696  6E80               	movwf	128,c	;volatile
 14941  000698                     
 14942                           ; BSR set to: 0
 14943  000698  988B               	bcf	3979,4,c	;volatile
 14944  00069A                     
 14945                           ; BSR set to: 0
 14946  00069A  968B               	bcf	3979,3,c	;volatile
 14947  00069C                     
 14948                           ; BSR set to: 0
 14949  00069C  868B               	bsf	3979,3,c	;volatile
 14950  00069E                     
 14951                           ; BSR set to: 0
 14952  00069E  888B               	bsf	3979,4,c	;volatile
 14953                           
 14954                           ;libraries/lcd_highlevel.c: 957:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
 14955  0006A0  0E00               	movlw	0
 14956  0006A2  6E80               	movwf	128,c	;volatile
 14957  0006A4                     
 14958                           ; BSR set to: 0
 14959  0006A4  968B               	bcf	3979,3,c	;volatile
 14960  0006A6                     
 14961                           ; BSR set to: 0
 14962  0006A6  868B               	bsf	3979,3,c	;volatile
 14963  0006A8                     l312:
 14964                           
 14965                           ; BSR set to: 0
 14966  0006A8  0012               	return		;funcret
 14967  0006AA                     __end_of_LCD_Bitmap:
 14968                           	callstack 0
 14969                           
 14970 ;; *************** function ___lwmod *****************
 14971 ;; Defined at:
 14972 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 14973 ;; Parameters:    Size  Location     Type
 14974 ;;  dividend        2   17[COMRAM] unsigned int 
 14975 ;;  divisor         2   19[COMRAM] unsigned int 
 14976 ;; Auto vars:     Size  Location     Type
 14977 ;;  counter         1   21[COMRAM] unsigned char 
 14978 ;; Return value:  Size  Location     Type
 14979 ;;                  2   17[COMRAM] unsigned int 
 14980 ;; Registers used:
 14981 ;;		wreg, status,2, status,0
 14982 ;; Tracked objects:
 14983 ;;		On entry : 0/0
 14984 ;;		On exit  : 0/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14987 ;;      Params:         4       0       0       0       0       0       0
 14988 ;;      Locals:         1       0       0       0       0       0       0
 14989 ;;      Temps:          0       0       0       0       0       0       0
 14990 ;;      Totals:         5       0       0       0       0       0       0
 14991 ;;Total ram usage:        5 bytes
 14992 ;; Hardware stack levels used: 1
 14993 ;; Hardware stack levels required when called: 4
 14994 ;; This function calls:
 14995 ;;		Nothing
 14996 ;; This function is called by:
 14997 ;;		_LCD_Bitmap
 14998 ;; This function uses a non-reentrant model
 14999 ;;
 15000                           
 15001                           	psect	text57
 15002  004A1C                     __ptext57:
 15003                           	callstack 0
 15004  004A1C                     ___lwmod:
 15005                           	callstack 19
 15006  004A1C  5014               	movf	___lwmod@divisor^0,w,c
 15007  004A1E  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
 15008  004A20  B4D8               	btfsc	status,2,c
 15009  004A22  EF15  F025         	goto	u4581
 15010  004A26  EF17  F025         	goto	u4580
 15011  004A2A                     u4581:
 15012  004A2A  EF3B  F025         	goto	l1235
 15013  004A2E                     u4580:
 15014  004A2E  0E01               	movlw	1
 15015  004A30  6E16               	movwf	___lwmod@counter^0,c
 15016  004A32  EF1F  F025         	goto	l7800
 15017  004A36                     l7798:
 15018  004A36  90D8               	bcf	status,0,c
 15019  004A38  3614               	rlcf	___lwmod@divisor^0,f,c
 15020  004A3A  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
 15021  004A3C  2A16               	incf	___lwmod@counter^0,f,c
 15022  004A3E                     l7800:
 15023  004A3E  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
 15024  004A40  EF24  F025         	goto	u4591
 15025  004A44  EF26  F025         	goto	u4590
 15026  004A48                     u4591:
 15027  004A48  EF1B  F025         	goto	l7798
 15028  004A4C                     u4590:
 15029  004A4C                     l7802:
 15030  004A4C  5014               	movf	___lwmod@divisor^0,w,c
 15031  004A4E  5C12               	subwf	___lwmod@dividend^0,w,c
 15032  004A50  5015               	movf	(___lwmod@divisor+1)^0,w,c
 15033  004A52  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
 15034  004A54  A0D8               	btfss	status,0,c
 15035  004A56  EF2F  F025         	goto	u4601
 15036  004A5A  EF31  F025         	goto	u4600
 15037  004A5E                     u4601:
 15038  004A5E  EF35  F025         	goto	l7806
 15039  004A62                     u4600:
 15040  004A62  5014               	movf	___lwmod@divisor^0,w,c
 15041  004A64  5E12               	subwf	___lwmod@dividend^0,f,c
 15042  004A66  5015               	movf	(___lwmod@divisor+1)^0,w,c
 15043  004A68  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
 15044  004A6A                     l7806:
 15045  004A6A  90D8               	bcf	status,0,c
 15046  004A6C  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
 15047  004A6E  3214               	rrcf	___lwmod@divisor^0,f,c
 15048  004A70  2E16               	decfsz	___lwmod@counter^0,f,c
 15049  004A72  EF26  F025         	goto	l7802
 15050  004A76                     l1235:
 15051  004A76  C012  F012         	movff	___lwmod@dividend,?___lwmod
 15052  004A7A  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
 15053  004A7E  0012               	return		;funcret
 15054  004A80                     __end_of___lwmod:
 15055                           	callstack 0
 15056                           
 15057 ;; *************** function ___lwdiv *****************
 15058 ;; Defined at:
 15059 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 15060 ;; Parameters:    Size  Location     Type
 15061 ;;  dividend        2   31[COMRAM] unsigned int 
 15062 ;;  divisor         2   33[COMRAM] unsigned int 
 15063 ;; Auto vars:     Size  Location     Type
 15064 ;;  quotient        2   36[COMRAM] unsigned int 
 15065 ;;  counter         1   35[COMRAM] unsigned char 
 15066 ;; Return value:  Size  Location     Type
 15067 ;;                  2   31[COMRAM] unsigned int 
 15068 ;; Registers used:
 15069 ;;		wreg, status,2, status,0
 15070 ;; Tracked objects:
 15071 ;;		On entry : 0/0
 15072 ;;		On exit  : 0/0
 15073 ;;		Unchanged: 0/0
 15074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15075 ;;      Params:         4       0       0       0       0       0       0
 15076 ;;      Locals:         3       0       0       0       0       0       0
 15077 ;;      Temps:          0       0       0       0       0       0       0
 15078 ;;      Totals:         7       0       0       0       0       0       0
 15079 ;;Total ram usage:        7 bytes
 15080 ;; Hardware stack levels used: 1
 15081 ;; Hardware stack levels required when called: 4
 15082 ;; This function calls:
 15083 ;;		Nothing
 15084 ;; This function is called by:
 15085 ;;		_LCD_SliderUpdate
 15086 ;;		_LCD_Bitmap
 15087 ;; This function uses a non-reentrant model
 15088 ;;
 15089                           
 15090                           	psect	text58
 15091  0048DA                     __ptext58:
 15092                           	callstack 0
 15093  0048DA                     ___lwdiv:
 15094                           	callstack 21
 15095  0048DA  0E00               	movlw	0
 15096  0048DC  6E26               	movwf	(___lwdiv@quotient+1)^0,c
 15097  0048DE  0E00               	movlw	0
 15098  0048E0  6E25               	movwf	___lwdiv@quotient^0,c
 15099  0048E2  5022               	movf	___lwdiv@divisor^0,w,c
 15100  0048E4  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
 15101  0048E6  B4D8               	btfsc	status,2,c
 15102  0048E8  EF78  F024         	goto	u4551
 15103  0048EC  EF7A  F024         	goto	u4550
 15104  0048F0                     u4551:
 15105  0048F0  EFA2  F024         	goto	l1225
 15106  0048F4                     u4550:
 15107  0048F4  0E01               	movlw	1
 15108  0048F6  6E24               	movwf	___lwdiv@counter^0,c
 15109  0048F8  EF82  F024         	goto	l7780
 15110  0048FC                     l7778:
 15111  0048FC  90D8               	bcf	status,0,c
 15112  0048FE  3622               	rlcf	___lwdiv@divisor^0,f,c
 15113  004900  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
 15114  004902  2A24               	incf	___lwdiv@counter^0,f,c
 15115  004904                     l7780:
 15116  004904  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
 15117  004906  EF87  F024         	goto	u4561
 15118  00490A  EF89  F024         	goto	u4560
 15119  00490E                     u4561:
 15120  00490E  EF7E  F024         	goto	l7778
 15121  004912                     u4560:
 15122  004912                     l7782:
 15123  004912  90D8               	bcf	status,0,c
 15124  004914  3625               	rlcf	___lwdiv@quotient^0,f,c
 15125  004916  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
 15126  004918  5022               	movf	___lwdiv@divisor^0,w,c
 15127  00491A  5C20               	subwf	___lwdiv@dividend^0,w,c
 15128  00491C  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 15129  00491E  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
 15130  004920  A0D8               	btfss	status,0,c
 15131  004922  EF95  F024         	goto	u4571
 15132  004926  EF97  F024         	goto	u4570
 15133  00492A                     u4571:
 15134  00492A  EF9C  F024         	goto	l7790
 15135  00492E                     u4570:
 15136  00492E  5022               	movf	___lwdiv@divisor^0,w,c
 15137  004930  5E20               	subwf	___lwdiv@dividend^0,f,c
 15138  004932  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 15139  004934  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
 15140  004936  8025               	bsf	___lwdiv@quotient^0,0,c
 15141  004938                     l7790:
 15142  004938  90D8               	bcf	status,0,c
 15143  00493A  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
 15144  00493C  3222               	rrcf	___lwdiv@divisor^0,f,c
 15145  00493E  2E24               	decfsz	___lwdiv@counter^0,f,c
 15146  004940  EF89  F024         	goto	l7782
 15147  004944                     l1225:
 15148  004944  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 15149  004948  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15150  00494C  0012               	return		;funcret
 15151  00494E                     __end_of___lwdiv:
 15152                           	callstack 0
 15153                           
 15154 ;; *************** function _RGB2LCD *****************
 15155 ;; Defined at:
 15156 ;;		line 799 in file "libraries/lcd_highlevel.c"
 15157 ;; Parameters:    Size  Location     Type
 15158 ;;  colorTableEn    2   17[COMRAM] PTR unsigned char 
 15159 ;;		 -> STR_8(4), STR_7(4), STR_6(8), STR_5(9), 
 15160 ;;		 -> STR_4(9), STR_3(11), 
 15161 ;; Auto vars:     Size  Location     Type
 15162 ;;  color           2   29[COMRAM] unsigned short 
 15163 ;;  blue            2   27[COMRAM] unsigned short 
 15164 ;;  green           2   25[COMRAM] unsigned short 
 15165 ;;  red             2   23[COMRAM] unsigned short 
 15166 ;; Return value:  Size  Location     Type
 15167 ;;                  2   17[COMRAM] unsigned short 
 15168 ;; Registers used:
 15169 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 15170 ;; Tracked objects:
 15171 ;;		On entry : 0/0
 15172 ;;		On exit  : 0/0
 15173 ;;		Unchanged: 0/0
 15174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15175 ;;      Params:         2       0       0       0       0       0       0
 15176 ;;      Locals:         8       0       0       0       0       0       0
 15177 ;;      Temps:          4       0       0       0       0       0       0
 15178 ;;      Totals:        14       0       0       0       0       0       0
 15179 ;;Total ram usage:       14 bytes
 15180 ;; Hardware stack levels used: 1
 15181 ;; Hardware stack levels required when called: 4
 15182 ;; This function calls:
 15183 ;;		Nothing
 15184 ;; This function is called by:
 15185 ;;		_LCD_Bitmap
 15186 ;; This function uses a non-reentrant model
 15187 ;;
 15188                           
 15189                           	psect	text59
 15190  0040CA                     __ptext59:
 15191                           	callstack 0
 15192  0040CA                     _RGB2LCD:
 15193                           	callstack 19
 15194  0040CA                     
 15195                           ;libraries/lcd_highlevel.c: 799: uint16_t RGB2LCD(uint8_t * colorTableEntry);libraries/l
      +                          cd_highlevel.c: 800: {;libraries/lcd_highlevel.c: 801:     uint16_t red,green,blue;;libr
      +                          aries/lcd_highlevel.c: 802:     uint16_t color;;libraries/lcd_highlevel.c: 804:     red 
      +                          = colorTableEntry[2] >> 3;
 15196  0040CA  0E02               	movlw	2
 15197  0040CC  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15198  0040CE  6E14               	movwf	??_RGB2LCD^0,c
 15199  0040D0  0E00               	movlw	0
 15200  0040D2  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15201  0040D4  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15202  0040D6  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15203  0040DA  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15204  0040DE                     	if	0	;tblptru may be non-zero
 15205  0040DE                     	endif
 15206  0040DE                     	if	0	;tblptru may be non-zero
 15207  0040DE                     	endif
 15208  0040DE  0008               	tblrd		*
 15209  0040E0  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15210  0040E4  90D8               	bcf	status,0,c
 15211  0040E6  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15212  0040E8  90D8               	bcf	status,0,c
 15213  0040EA  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15214  0040EC  90D8               	bcf	status,0,c
 15215  0040EE  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15216  0040F0  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15217  0040F2  6E18               	movwf	RGB2LCD@red^0,c
 15218  0040F4  6A19               	clrf	(RGB2LCD@red+1)^0,c
 15219                           
 15220                           ;libraries/lcd_highlevel.c: 805:     green = colorTableEntry[1] >> 2;
 15221  0040F6  0E01               	movlw	1
 15222  0040F8  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15223  0040FA  6E14               	movwf	??_RGB2LCD^0,c
 15224  0040FC  0E00               	movlw	0
 15225  0040FE  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15226  004100  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15227  004102  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15228  004106  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15229  00410A                     	if	0	;tblptru may be non-zero
 15230  00410A                     	endif
 15231  00410A                     	if	0	;tblptru may be non-zero
 15232  00410A                     	endif
 15233  00410A  0008               	tblrd		*
 15234  00410C  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15235  004110  90D8               	bcf	status,0,c
 15236  004112  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15237  004114  90D8               	bcf	status,0,c
 15238  004116  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15239  004118  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15240  00411A  6E1A               	movwf	RGB2LCD@green^0,c
 15241  00411C  6A1B               	clrf	(RGB2LCD@green+1)^0,c
 15242                           
 15243                           ;libraries/lcd_highlevel.c: 806:     blue = colorTableEntry[0] >> 3;
 15244  00411E  C012  FFF6         	movff	RGB2LCD@colorTableEntry,tblptrl
 15245  004122  C013  FFF7         	movff	RGB2LCD@colorTableEntry+1,tblptrh
 15246  004126                     	if	0	;tblptru may be non-zero
 15247  004126                     	endif
 15248  004126                     	if	0	;tblptru may be non-zero
 15249  004126                     	endif
 15250  004126  0008               	tblrd		*
 15251  004128  CFF5 F014          	movff	tablat,??_RGB2LCD
 15252  00412C  90D8               	bcf	status,0,c
 15253  00412E  3214               	rrcf	??_RGB2LCD^0,f,c
 15254  004130  90D8               	bcf	status,0,c
 15255  004132  3214               	rrcf	??_RGB2LCD^0,f,c
 15256  004134  90D8               	bcf	status,0,c
 15257  004136  3214               	rrcf	??_RGB2LCD^0,f,c
 15258  004138  5014               	movf	??_RGB2LCD^0,w,c
 15259  00413A  6E1C               	movwf	RGB2LCD@blue^0,c
 15260  00413C  6A1D               	clrf	(RGB2LCD@blue+1)^0,c
 15261  00413E                     
 15262                           ;libraries/lcd_highlevel.c: 807:     color = (red << 11) | (green << 5) | (blue << 0);
 15263  00413E  C01A  F014         	movff	RGB2LCD@green,??_RGB2LCD
 15264  004142  C01B  F015         	movff	RGB2LCD@green+1,??_RGB2LCD+1
 15265  004146  0E05               	movlw	5
 15266  004148                     u4345:
 15267  004148  90D8               	bcf	status,0,c
 15268  00414A  3614               	rlcf	??_RGB2LCD^0,f,c
 15269  00414C  3615               	rlcf	(??_RGB2LCD+1)^0,f,c
 15270  00414E  2EE8               	decfsz	wreg,f,c
 15271  004150  EFA4  F020         	goto	u4345
 15272  004154  C018  F016         	movff	RGB2LCD@red,??_RGB2LCD+2
 15273  004158  C019  F017         	movff	RGB2LCD@red+1,??_RGB2LCD+3
 15274  00415C  0E0B               	movlw	11
 15275  00415E                     u4355:
 15276  00415E  90D8               	bcf	status,0,c
 15277  004160  3616               	rlcf	(??_RGB2LCD+2)^0,f,c
 15278  004162  3617               	rlcf	(??_RGB2LCD+3)^0,f,c
 15279  004164  2EE8               	decfsz	wreg,f,c
 15280  004166  EFAF  F020         	goto	u4355
 15281  00416A  5014               	movf	??_RGB2LCD^0,w,c
 15282  00416C  1216               	iorwf	(??_RGB2LCD+2)^0,f,c
 15283  00416E  5015               	movf	(??_RGB2LCD+1)^0,w,c
 15284  004170  1217               	iorwf	(??_RGB2LCD+3)^0,f,c
 15285  004172  501C               	movf	RGB2LCD@blue^0,w,c
 15286  004174  1016               	iorwf	(??_RGB2LCD+2)^0,w,c
 15287  004176  6E1E               	movwf	RGB2LCD@color^0,c
 15288  004178  501D               	movf	(RGB2LCD@blue+1)^0,w,c
 15289  00417A  1017               	iorwf	(??_RGB2LCD+3)^0,w,c
 15290  00417C  6E1F               	movwf	(RGB2LCD@color+1)^0,c
 15291  00417E                     
 15292                           ;libraries/lcd_highlevel.c: 808:     return color;
 15293  00417E  C01E  F012         	movff	RGB2LCD@color,?_RGB2LCD
 15294  004182  C01F  F013         	movff	RGB2LCD@color+1,?_RGB2LCD+1
 15295  004186  0012               	return		;funcret
 15296  004188                     __end_of_RGB2LCD:
 15297                           	callstack 0
 15298                           
 15299 ;; *************** function _Ball_draw *****************
 15300 ;; Defined at:
 15301 ;;		line 18 in file "class/ball.c"
 15302 ;; Parameters:    Size  Location     Type
 15303 ;;  b               2   65[COMRAM] PTR struct Ball
 15304 ;;		 -> g1(209), 
 15305 ;; Auto vars:     Size  Location     Type
 15306 ;;		None
 15307 ;; Return value:  Size  Location     Type
 15308 ;;                  1    wreg      void 
 15309 ;; Registers used:
 15310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15311 ;; Tracked objects:
 15312 ;;		On entry : 0/0
 15313 ;;		On exit  : 0/0
 15314 ;;		Unchanged: 0/0
 15315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15316 ;;      Params:         2       0       0       0       0       0       0
 15317 ;;      Locals:         0       0       0       0       0       0       0
 15318 ;;      Temps:          0       0       0       0       0       0       0
 15319 ;;      Totals:         2       0       0       0       0       0       0
 15320 ;;Total ram usage:        2 bytes
 15321 ;; Hardware stack levels used: 1
 15322 ;; Hardware stack levels required when called: 6
 15323 ;; This function calls:
 15324 ;;		_LCD_DrawText
 15325 ;; This function is called by:
 15326 ;;		_Menu_inGameDraw
 15327 ;; This function uses a non-reentrant model
 15328 ;;
 15329                           
 15330                           	psect	text60
 15331  004BA6                     __ptext60:
 15332                           	callstack 0
 15333  004BA6                     _Ball_draw:
 15334                           	callstack 19
 15335  004BA6                     
 15336                           ;class/ball.c: 18: void Ball_draw(struct Ball* b);class/ball.c: 19: {;class/ball.c: 20: 
      +                              LCD_DrawText("O",&arialNarrow_12ptFontInfo, A_LEFT, b->x, b->y,b->color, 0b111111111
      +                          1111111);
 15337  004BA6  0EFD               	movlw	low STR_1
 15338  004BA8  6E20               	movwf	LCD_DrawText@msg^0,c
 15339  004BAA  0E7F               	movlw	high STR_1
 15340  004BAC  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15341  004BAE  0E99               	movlw	low _arialNarrow_12ptFontInfo
 15342  004BB0  6E22               	movwf	LCD_DrawText@font^0,c
 15343  004BB2  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15344  004BB4  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15345  004BB6  0E00               	movlw	0
 15346  004BB8  6E24               	movwf	LCD_DrawText@align^0,c
 15347  004BBA  C042  FFD9         	movff	Ball_draw@b,fsr2l
 15348  004BBE  C043  FFDA         	movff	Ball_draw@b+1,fsr2h
 15349  004BC2  CFDE F025          	movff	postinc2,LCD_DrawText@posX
 15350  004BC6  CFDD F026          	movff	postdec2,LCD_DrawText@posX+1
 15351  004BCA  EE20 F002          	lfsr	2,2
 15352  004BCE  5042               	movf	Ball_draw@b^0,w,c
 15353  004BD0  26D9               	addwf	fsr2l,f,c
 15354  004BD2  5043               	movf	(Ball_draw@b+1)^0,w,c
 15355  004BD4  22DA               	addwfc	fsr2h,f,c
 15356  004BD6  CFDE F027          	movff	postinc2,LCD_DrawText@posY
 15357  004BDA  CFDD F028          	movff	postdec2,LCD_DrawText@posY+1
 15358  004BDE  EE20 F006          	lfsr	2,6
 15359  004BE2  5042               	movf	Ball_draw@b^0,w,c
 15360  004BE4  26D9               	addwf	fsr2l,f,c
 15361  004BE6  5043               	movf	(Ball_draw@b+1)^0,w,c
 15362  004BE8  22DA               	addwfc	fsr2h,f,c
 15363  004BEA  CFDE F029          	movff	postinc2,LCD_DrawText@color
 15364  004BEE  CFDD F02A          	movff	postdec2,LCD_DrawText@color+1
 15365  004BF2  0EFF               	movlw	255
 15366  004BF4  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15367  004BF6  682B               	setf	LCD_DrawText@bg_color^0,c
 15368  004BF8  EC86  F00A         	call	_LCD_DrawText	;wreg free
 15369  004BFC  0012               	return		;funcret
 15370  004BFE                     __end_of_Ball_draw:
 15371                           	callstack 0
 15372                           
 15373 ;; *************** function _LCD_DrawText *****************
 15374 ;; Defined at:
 15375 ;;		line 713 in file "libraries/lcd_highlevel.c"
 15376 ;; Parameters:    Size  Location     Type
 15377 ;;  msg             2   31[COMRAM] PTR const unsigned char 
 15378 ;;		 -> touchScreenController@s(20), STR_11(7), STR_10(11), STR_9(8), 
 15379 ;;		 -> STR_8(4), STR_7(4), STR_6(8), STR_5(9), 
 15380 ;;		 -> STR_4(9), STR_3(11), STR_2(10), STR_1(2), 
 15381 ;;  font            2   33[COMRAM] PTR const struct .
 15382 ;;		 -> arialNarrow_12ptFontInfo(7), 
 15383 ;;  align           1   35[COMRAM] enum E355
 15384 ;;  posX            2   36[COMRAM] unsigned short 
 15385 ;;  posY            2   38[COMRAM] unsigned short 
 15386 ;;  color           2   40[COMRAM] unsigned short 
 15387 ;;  bg_color        2   42[COMRAM] unsigned short 
 15388 ;; Auto vars:     Size  Location     Type
 15389 ;;  posXEnd         2   58[COMRAM] unsigned short 
 15390 ;;  posYEnd         2   56[COMRAM] unsigned short 
 15391 ;;  yOffset         2   52[COMRAM] unsigned short 
 15392 ;;  offset          2   50[COMRAM] unsigned short 
 15393 ;;  width           1   64[COMRAM] unsigned char 
 15394 ;;  x               1   63[COMRAM] unsigned char 
 15395 ;;  tempChar        1   62[COMRAM] char 
 15396 ;;  i               1   61[COMRAM] unsigned char 
 15397 ;;  y               1   60[COMRAM] unsigned char 
 15398 ;;  fontPixel       1   55[COMRAM] unsigned char 
 15399 ;;  fontByte        1   54[COMRAM] unsigned char 
 15400 ;; Return value:  Size  Location     Type
 15401 ;;                  1    wreg      void 
 15402 ;; Registers used:
 15403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15404 ;; Tracked objects:
 15405 ;;		On entry : 0/0
 15406 ;;		On exit  : 0/0
 15407 ;;		Unchanged: 0/0
 15408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15409 ;;      Params:        13       0       0       0       0       0       0
 15410 ;;      Locals:        15       0       0       0       0       0       0
 15411 ;;      Temps:          6       0       0       0       0       0       0
 15412 ;;      Totals:        34       0       0       0       0       0       0
 15413 ;;Total ram usage:       34 bytes
 15414 ;; Hardware stack levels used: 1
 15415 ;; Hardware stack levels required when called: 5
 15416 ;; This function calls:
 15417 ;;		___awdiv
 15418 ;;		___wmul
 15419 ;;		_strlen
 15420 ;; This function is called by:
 15421 ;;		_Ball_draw
 15422 ;;		_Factory_init
 15423 ;;		_Menu_welcomeDraw
 15424 ;;		_Menu_parametersDraw
 15425 ;;		_Menu_inGameDraw
 15426 ;;		_LCD_ButtonDraw
 15427 ;;		_touchScreenController
 15428 ;; This function uses a non-reentrant model
 15429 ;;
 15430                           
 15431                           	psect	text61
 15432  00150C                     __ptext61:
 15433                           	callstack 0
 15434  00150C                     _LCD_DrawText:
 15435                           	callstack 20
 15436  00150C                     
 15437                           ;libraries/lcd_highlevel.c: 713: void LCD_DrawText(const uint8_t * msg,const FONT_INFO *
      +                           font, ALIGN align,;libraries/lcd_highlevel.c: 714:         uint16_t posX, uint16_t posY
      +                          , uint16_t color, uint16_t bg_color);libraries/lcd_highlevel.c: 715: {;libraries/lcd_hig
      +                          hlevel.c: 716:   uint8_t x,y,i;;libraries/lcd_highlevel.c: 717:   int8_t tempChar;;libra
      +                          ries/lcd_highlevel.c: 718:   uint16_t offset;;libraries/lcd_highlevel.c: 719:   uint8_t 
      +                          width=0;
 15438  00150C  0E00               	movlw	0
 15439  00150E  6E41               	movwf	LCD_DrawText@width^0,c
 15440                           
 15441                           ;libraries/lcd_highlevel.c: 720:   uint8_t fontByte,fontPixel;;libraries/lcd_highlevel.c
      +                          : 721:   uint16_t posYEnd, posXEnd, yOffset;;libraries/lcd_highlevel.c: 725:   for(i=0;i
      +                          <strlen(msg);i++)
 15442  001510  0E00               	movlw	0
 15443  001512  6E3E               	movwf	LCD_DrawText@i^0,c
 15444  001514  EFDB  F00A         	goto	l7844
 15445  001518                     l7838:
 15446                           
 15447                           ;libraries/lcd_highlevel.c: 726:   {;libraries/lcd_highlevel.c: 727:     tempChar = (msg
      +                          [i]) - font->start_char;
 15448  001518  0E01               	movlw	1
 15449  00151A  2422               	addwf	LCD_DrawText@font^0,w,c
 15450  00151C  6E2D               	movwf	??_LCD_DrawText^0,c
 15451  00151E  0E00               	movlw	0
 15452  001520  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 15453  001522  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15454  001524  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 15455  001528  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 15456  00152C                     	if	0	;tblptru may be non-zero
 15457  00152C                     	endif
 15458  00152C                     	if	0	;tblptru may be non-zero
 15459  00152C                     	endif
 15460  00152C  0008               	tblrd		*
 15461  00152E  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 15462  001532  503E               	movf	LCD_DrawText@i^0,w,c
 15463  001534  2420               	addwf	LCD_DrawText@msg^0,w,c
 15464  001536  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 15465  001538  0E00               	movlw	0
 15466  00153A  2021               	addwfc	(LCD_DrawText@msg+1)^0,w,c
 15467  00153C  6E31               	movwf	(??_LCD_DrawText+4)^0,c
 15468  00153E  C030  FFF6         	movff	??_LCD_DrawText+3,tblptrl
 15469  001542  C031  FFF7         	movff	??_LCD_DrawText+4,tblptrh
 15470  001546  6AF8               	clrf	tblptru,c
 15471  001548  0E05               	movlw	(high __ramtop+-1)
 15472  00154A  64F7               	cpfsgt	tblptrh,c
 15473  00154C  D003               	bra	u4667
 15474  00154E  0008               	tblrd		*
 15475  001550  50F5               	movf	tablat,w,c
 15476  001552  D005               	bra	u4660
 15477  001554                     u4667:
 15478  001554  CFF6 FFE1          	movff	tblptrl,fsr1l
 15479  001558  CFF7 FFE2          	movff	tblptrh,fsr1h
 15480  00155C  50E7               	movf	indf1,w,c
 15481  00155E                     u4660:
 15482  00155E  6E32               	movwf	(??_LCD_DrawText+5)^0,c
 15483  001560  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 15484  001562  5C32               	subwf	(??_LCD_DrawText+5)^0,w,c
 15485  001564  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 15486  001566                     
 15487                           ;libraries/lcd_highlevel.c: 728:     width += font->descriptor[tempChar].width+2;
 15488  001566  503F               	movf	LCD_DrawText@tempChar^0,w,c
 15489  001568  6E1A               	movwf	___wmul@multiplier^0,c
 15490  00156A  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 15491  00156C  BE1A               	btfsc	___wmul@multiplier^0,7,c
 15492  00156E  061B               	decf	(___wmul@multiplier+1)^0,f,c
 15493  001570  0E00               	movlw	0
 15494  001572  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 15495  001574  0E03               	movlw	3
 15496  001576  6E1C               	movwf	___wmul@multiplicand^0,c
 15497  001578  EC94  F027         	call	___wmul	;wreg free
 15498  00157C  0E03               	movlw	3
 15499  00157E  2422               	addwf	LCD_DrawText@font^0,w,c
 15500  001580  6E2D               	movwf	??_LCD_DrawText^0,c
 15501  001582  0E00               	movlw	0
 15502  001584  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 15503  001586  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15504  001588  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 15505  00158C  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 15506  001590                     	if	0	;tblptru may be non-zero
 15507  001590                     	endif
 15508  001590                     	if	0	;tblptru may be non-zero
 15509  001590                     	endif
 15510  001590  0009               	tblrd		*+
 15511  001592  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 15512  001596  0009               	tblrd		*+
 15513  001598  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 15514  00159C  501A               	movf	?___wmul^0,w,c
 15515  00159E  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15516  0015A0  501B               	movf	(?___wmul+1)^0,w,c
 15517  0015A2  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15518  0015A4  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 15519  0015A8  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 15520  0015AC                     	if	0	;tblptru may be non-zero
 15521  0015AC                     	endif
 15522  0015AC                     	if	0	;tblptru may be non-zero
 15523  0015AC                     	endif
 15524  0015AC  0008               	tblrd		*
 15525  0015AE  50F5               	movf	tablat,w,c
 15526  0015B0  0F02               	addlw	2
 15527  0015B2  2641               	addwf	LCD_DrawText@width^0,f,c
 15528  0015B4                     
 15529                           ;libraries/lcd_highlevel.c: 729:   }
 15530  0015B4  2A3E               	incf	LCD_DrawText@i^0,f,c
 15531  0015B6                     l7844:
 15532  0015B6  C020  F012         	movff	LCD_DrawText@msg,strlen@s
 15533  0015BA  C021  F013         	movff	LCD_DrawText@msg+1,strlen@s+1
 15534  0015BE  ECA3  F026         	call	_strlen	;wreg free
 15535  0015C2  503E               	movf	LCD_DrawText@i^0,w,c
 15536  0015C4  6E2D               	movwf	??_LCD_DrawText^0,c
 15537  0015C6  6A2E               	clrf	(??_LCD_DrawText+1)^0,c
 15538  0015C8  5012               	movf	?_strlen^0,w,c
 15539  0015CA  5C2D               	subwf	??_LCD_DrawText^0,w,c
 15540  0015CC  5013               	movf	(?_strlen+1)^0,w,c
 15541  0015CE  582E               	subwfb	(??_LCD_DrawText+1)^0,w,c
 15542  0015D0  A0D8               	btfss	status,0,c
 15543  0015D2  EFED  F00A         	goto	u4671
 15544  0015D6  EFEF  F00A         	goto	u4670
 15545  0015DA                     u4671:
 15546  0015DA  EF8C  F00A         	goto	l7838
 15547  0015DE                     u4670:
 15548  0015DE                     
 15549                           ;libraries/lcd_highlevel.c: 730:   if(align == A_RIGHT)
 15550  0015DE  0424               	decf	LCD_DrawText@align^0,w,c
 15551  0015E0  A4D8               	btfss	status,2,c
 15552  0015E2  EFF5  F00A         	goto	u4681
 15553  0015E6  EFF7  F00A         	goto	u4680
 15554  0015EA                     u4681:
 15555  0015EA  EF00  F00B         	goto	l7850
 15556  0015EE                     u4680:
 15557  0015EE                     
 15558                           ;libraries/lcd_highlevel.c: 731:   {;libraries/lcd_highlevel.c: 732:     posX = posX - w
      +                          idth;
 15559  0015EE  5041               	movf	LCD_DrawText@width^0,w,c
 15560  0015F0  5C25               	subwf	LCD_DrawText@posX^0,w,c
 15561  0015F2  6E25               	movwf	LCD_DrawText@posX^0,c
 15562  0015F4  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 15563  0015F6  A0D8               	btfss	status,0,c
 15564  0015F8  0426               	decf	(LCD_DrawText@posX+1)^0,w,c
 15565  0015FA  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15566                           
 15567                           ;libraries/lcd_highlevel.c: 733:   }
 15568  0015FC  EF18  F00B         	goto	l7854
 15569  001600                     l7850:
 15570  001600  0E02               	movlw	2
 15571  001602  1824               	xorwf	LCD_DrawText@align^0,w,c
 15572  001604  A4D8               	btfss	status,2,c
 15573  001606  EF07  F00B         	goto	u4691
 15574  00160A  EF09  F00B         	goto	u4690
 15575  00160E                     u4691:
 15576  00160E  EF18  F00B         	goto	l7854
 15577  001612                     u4690:
 15578  001612                     
 15579                           ;libraries/lcd_highlevel.c: 735:   {;libraries/lcd_highlevel.c: 736:     posX = posX - w
      +                          idth / 2;
 15580  001612  C041  F012         	movff	LCD_DrawText@width,___awdiv@dividend
 15581  001616  6A13               	clrf	(___awdiv@dividend+1)^0,c
 15582  001618  0E00               	movlw	0
 15583  00161A  6E15               	movwf	(___awdiv@divisor+1)^0,c
 15584  00161C  0E02               	movlw	2
 15585  00161E  6E14               	movwf	___awdiv@divisor^0,c
 15586  001620  EC41  F01F         	call	___awdiv	;wreg free
 15587  001624  5012               	movf	?___awdiv^0,w,c
 15588  001626  5C25               	subwf	LCD_DrawText@posX^0,w,c
 15589  001628  6E25               	movwf	LCD_DrawText@posX^0,c
 15590  00162A  5013               	movf	(?___awdiv+1)^0,w,c
 15591  00162C  5826               	subwfb	(LCD_DrawText@posX+1)^0,w,c
 15592  00162E  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15593  001630                     l7854:
 15594                           
 15595                           ;libraries/lcd_highlevel.c: 740:   {;libraries/lcd_highlevel.c: 741:     tempChar = (*ms
      +                          g) - font->start_char;
 15596  001630  0E01               	movlw	1
 15597  001632  2422               	addwf	LCD_DrawText@font^0,w,c
 15598  001634  6E2D               	movwf	??_LCD_DrawText^0,c
 15599  001636  0E00               	movlw	0
 15600  001638  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 15601  00163A  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15602  00163C  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 15603  001640  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 15604  001644                     	if	0	;tblptru may be non-zero
 15605  001644                     	endif
 15606  001644                     	if	0	;tblptru may be non-zero
 15607  001644                     	endif
 15608  001644  0008               	tblrd		*
 15609  001646  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 15610  00164A  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 15611  00164E  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 15612  001652  6AF8               	clrf	tblptru,c
 15613  001654  0E05               	movlw	(high __ramtop+-1)
 15614  001656  64F7               	cpfsgt	tblptrh,c
 15615  001658  D003               	bra	u4707
 15616  00165A  0008               	tblrd		*
 15617  00165C  50F5               	movf	tablat,w,c
 15618  00165E  D005               	bra	u4700
 15619  001660                     u4707:
 15620  001660  CFF6 FFE1          	movff	tblptrl,fsr1l
 15621  001664  CFF7 FFE2          	movff	tblptrh,fsr1h
 15622  001668  50E7               	movf	indf1,w,c
 15623  00166A                     u4700:
 15624  00166A  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 15625  00166C  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 15626  00166E  5C30               	subwf	(??_LCD_DrawText+3)^0,w,c
 15627  001670  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 15628  001672                     
 15629                           ;libraries/lcd_highlevel.c: 742:     offset = font->descriptor[tempChar].offset;
 15630  001672  503F               	movf	LCD_DrawText@tempChar^0,w,c
 15631  001674  6E1A               	movwf	___wmul@multiplier^0,c
 15632  001676  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 15633  001678  BE1A               	btfsc	___wmul@multiplier^0,7,c
 15634  00167A  061B               	decf	(___wmul@multiplier+1)^0,f,c
 15635  00167C  0E00               	movlw	0
 15636  00167E  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 15637  001680  0E03               	movlw	3
 15638  001682  6E1C               	movwf	___wmul@multiplicand^0,c
 15639  001684  EC94  F027         	call	___wmul	;wreg free
 15640  001688  0E03               	movlw	3
 15641  00168A  2422               	addwf	LCD_DrawText@font^0,w,c
 15642  00168C  6E2D               	movwf	??_LCD_DrawText^0,c
 15643  00168E  0E00               	movlw	0
 15644  001690  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 15645  001692  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15646  001694  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 15647  001698  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 15648  00169C                     	if	0	;tblptru may be non-zero
 15649  00169C                     	endif
 15650  00169C                     	if	0	;tblptru may be non-zero
 15651  00169C                     	endif
 15652  00169C  0009               	tblrd		*+
 15653  00169E  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 15654  0016A2  0009               	tblrd		*+
 15655  0016A4  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 15656  0016A8  501A               	movf	?___wmul^0,w,c
 15657  0016AA  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15658  0016AC  501B               	movf	(?___wmul+1)^0,w,c
 15659  0016AE  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15660  0016B0  0E01               	movlw	1
 15661  0016B2  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15662  0016B4  0E00               	movlw	0
 15663  0016B6  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15664  0016B8  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 15665  0016BC  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 15666  0016C0                     	if	0	;tblptru may be non-zero
 15667  0016C0                     	endif
 15668  0016C0                     	if	0	;tblptru may be non-zero
 15669  0016C0                     	endif
 15670  0016C0  0009               	tblrd		*+
 15671  0016C2  CFF5 F033          	movff	tablat,LCD_DrawText@offset
 15672  0016C6  000A               	tblrd		*-
 15673  0016C8  CFF5 F034          	movff	tablat,LCD_DrawText@offset+1
 15674  0016CC                     
 15675                           ;libraries/lcd_highlevel.c: 743:     width = font->descriptor[tempChar].width;
 15676  0016CC  503F               	movf	LCD_DrawText@tempChar^0,w,c
 15677  0016CE  6E1A               	movwf	___wmul@multiplier^0,c
 15678  0016D0  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 15679  0016D2  BE1A               	btfsc	___wmul@multiplier^0,7,c
 15680  0016D4  061B               	decf	(___wmul@multiplier+1)^0,f,c
 15681  0016D6  0E00               	movlw	0
 15682  0016D8  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 15683  0016DA  0E03               	movlw	3
 15684  0016DC  6E1C               	movwf	___wmul@multiplicand^0,c
 15685  0016DE  EC94  F027         	call	___wmul	;wreg free
 15686  0016E2  0E03               	movlw	3
 15687  0016E4  2422               	addwf	LCD_DrawText@font^0,w,c
 15688  0016E6  6E2D               	movwf	??_LCD_DrawText^0,c
 15689  0016E8  0E00               	movlw	0
 15690  0016EA  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 15691  0016EC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15692  0016EE  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 15693  0016F2  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 15694  0016F6                     	if	0	;tblptru may be non-zero
 15695  0016F6                     	endif
 15696  0016F6                     	if	0	;tblptru may be non-zero
 15697  0016F6                     	endif
 15698  0016F6  0009               	tblrd		*+
 15699  0016F8  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 15700  0016FC  0009               	tblrd		*+
 15701  0016FE  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 15702  001702  501A               	movf	?___wmul^0,w,c
 15703  001704  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15704  001706  501B               	movf	(?___wmul+1)^0,w,c
 15705  001708  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15706  00170A  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 15707  00170E  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 15708  001712                     	if	0	;tblptru may be non-zero
 15709  001712                     	endif
 15710  001712                     	if	0	;tblptru may be non-zero
 15711  001712                     	endif
 15712  001712  0008               	tblrd		*
 15713  001714  CFF5 F041          	movff	tablat,LCD_DrawText@width
 15714  001718                     
 15715                           ;libraries/lcd_highlevel.c: 748:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 15716  001718  0E2A               	movlw	42
 15717  00171A  6E80               	movwf	128,c	;volatile
 15718  00171C  988B               	bcf	3979,4,c	;volatile
 15719  00171E  968B               	bcf	3979,3,c	;volatile
 15720  001720  868B               	bsf	3979,3,c	;volatile
 15721  001722  888B               	bsf	3979,4,c	;volatile
 15722  001724                     
 15723                           ;libraries/lcd_highlevel.c: 749:     PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 15724  001724  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 15725  001726  6E80               	movwf	128,c	;volatile
 15726  001728  968B               	bcf	3979,3,c	;volatile
 15727  00172A  868B               	bsf	3979,3,c	;volatile
 15728  00172C                     
 15729                           ;libraries/lcd_highlevel.c: 750:     PORTA = posX; LATC3 = 0; LATC3 = 1;;
 15730  00172C  C025  FF80         	movff	LCD_DrawText@posX,3968	;volatile
 15731  001730  968B               	bcf	3979,3,c	;volatile
 15732  001732  868B               	bsf	3979,3,c	;volatile
 15733  001734                     
 15734                           ;libraries/lcd_highlevel.c: 751:     posXEnd = posX+width-1+2;
 15735  001734  5041               	movf	LCD_DrawText@width^0,w,c
 15736  001736  2425               	addwf	LCD_DrawText@posX^0,w,c
 15737  001738  6E2D               	movwf	??_LCD_DrawText^0,c
 15738  00173A  0E00               	movlw	0
 15739  00173C  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 15740  00173E  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15741  001740  0E01               	movlw	1
 15742  001742  242D               	addwf	??_LCD_DrawText^0,w,c
 15743  001744  6E3B               	movwf	LCD_DrawText@posXEnd^0,c
 15744  001746  0E00               	movlw	0
 15745  001748  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 15746  00174A  6E3C               	movwf	(LCD_DrawText@posXEnd+1)^0,c
 15747  00174C                     
 15748                           ;libraries/lcd_highlevel.c: 752:     PORTA = posXEnd>>8; LATC3 = 0; LATC3 = 1;;
 15749  00174C  503C               	movf	(LCD_DrawText@posXEnd+1)^0,w,c
 15750  00174E  6E80               	movwf	128,c	;volatile
 15751  001750  968B               	bcf	3979,3,c	;volatile
 15752  001752  868B               	bsf	3979,3,c	;volatile
 15753  001754                     
 15754                           ;libraries/lcd_highlevel.c: 753:     PORTA = posXEnd; LATC3 = 0; LATC3 = 1;;
 15755  001754  C03B  FF80         	movff	LCD_DrawText@posXEnd,3968	;volatile
 15756  001758  968B               	bcf	3979,3,c	;volatile
 15757  00175A  868B               	bsf	3979,3,c	;volatile
 15758  00175C                     
 15759                           ;libraries/lcd_highlevel.c: 755:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 15760  00175C  0E2B               	movlw	43
 15761  00175E  6E80               	movwf	128,c	;volatile
 15762  001760  988B               	bcf	3979,4,c	;volatile
 15763  001762  968B               	bcf	3979,3,c	;volatile
 15764  001764  868B               	bsf	3979,3,c	;volatile
 15765  001766  888B               	bsf	3979,4,c	;volatile
 15766  001768                     
 15767                           ;libraries/lcd_highlevel.c: 756:     PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 15768  001768  5028               	movf	(LCD_DrawText@posY+1)^0,w,c
 15769  00176A  6E80               	movwf	128,c	;volatile
 15770  00176C  968B               	bcf	3979,3,c	;volatile
 15771  00176E  868B               	bsf	3979,3,c	;volatile
 15772  001770                     
 15773                           ;libraries/lcd_highlevel.c: 757:     PORTA = posY; LATC3 = 0; LATC3 = 1;;
 15774  001770  C027  FF80         	movff	LCD_DrawText@posY,3968	;volatile
 15775  001774  968B               	bcf	3979,3,c	;volatile
 15776  001776  868B               	bsf	3979,3,c	;volatile
 15777  001778                     
 15778                           ;libraries/lcd_highlevel.c: 758:     posYEnd = posY + font->height-1;
 15779  001778  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 15780  00177C  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 15781  001780                     	if	0	;tblptru may be non-zero
 15782  001780                     	endif
 15783  001780                     	if	0	;tblptru may be non-zero
 15784  001780                     	endif
 15785  001780  0008               	tblrd		*
 15786  001782  50F5               	movf	tablat,w,c
 15787  001784  2427               	addwf	LCD_DrawText@posY^0,w,c
 15788  001786  6E2D               	movwf	??_LCD_DrawText^0,c
 15789  001788  0E00               	movlw	0
 15790  00178A  2028               	addwfc	(LCD_DrawText@posY+1)^0,w,c
 15791  00178C  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15792  00178E  0EFF               	movlw	255
 15793  001790  242D               	addwf	??_LCD_DrawText^0,w,c
 15794  001792  6E39               	movwf	LCD_DrawText@posYEnd^0,c
 15795  001794  0EFF               	movlw	255
 15796  001796  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 15797  001798  6E3A               	movwf	(LCD_DrawText@posYEnd+1)^0,c
 15798  00179A                     
 15799                           ;libraries/lcd_highlevel.c: 759:     PORTA = posYEnd>>8; LATC3 = 0; LATC3 = 1;;
 15800  00179A  503A               	movf	(LCD_DrawText@posYEnd+1)^0,w,c
 15801  00179C  6E80               	movwf	128,c	;volatile
 15802  00179E  968B               	bcf	3979,3,c	;volatile
 15803  0017A0  868B               	bsf	3979,3,c	;volatile
 15804  0017A2                     
 15805                           ;libraries/lcd_highlevel.c: 760:     PORTA = posYEnd; LATC3 = 0; LATC3 = 1;;
 15806  0017A2  C039  FF80         	movff	LCD_DrawText@posYEnd,3968	;volatile
 15807  0017A6  968B               	bcf	3979,3,c	;volatile
 15808  0017A8  868B               	bsf	3979,3,c	;volatile
 15809  0017AA                     
 15810                           ;libraries/lcd_highlevel.c: 761:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 15811  0017AA  0E2C               	movlw	44
 15812  0017AC  6E80               	movwf	128,c	;volatile
 15813  0017AE  988B               	bcf	3979,4,c	;volatile
 15814  0017B0  968B               	bcf	3979,3,c	;volatile
 15815  0017B2  868B               	bsf	3979,3,c	;volatile
 15816  0017B4  888B               	bsf	3979,4,c	;volatile
 15817  0017B6                     
 15818                           ;libraries/lcd_highlevel.c: 763:     for(y=0;y<font->height;y++)
 15819  0017B6  0E00               	movlw	0
 15820  0017B8  6E3D               	movwf	LCD_DrawText@y^0,c
 15821  0017BA  EF76  F00C         	goto	l8006
 15822  0017BE                     l7944:
 15823                           
 15824                           ;libraries/lcd_highlevel.c: 764:     {;libraries/lcd_highlevel.c: 765:       yOffset = o
      +                          ffset + (y * ((width+7)/8));
 15825  0017BE  C03D  F01A         	movff	LCD_DrawText@y,___wmul@multiplier
 15826  0017C2  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 15827  0017C4  0E00               	movlw	0
 15828  0017C6  6E15               	movwf	(___awdiv@divisor+1)^0,c
 15829  0017C8  0E08               	movlw	8
 15830  0017CA  6E14               	movwf	___awdiv@divisor^0,c
 15831  0017CC  0E07               	movlw	7
 15832  0017CE  2441               	addwf	LCD_DrawText@width^0,w,c
 15833  0017D0  6E12               	movwf	___awdiv@dividend^0,c
 15834  0017D2  6A13               	clrf	(___awdiv@dividend+1)^0,c
 15835  0017D4  0E00               	movlw	0
 15836  0017D6  2213               	addwfc	(___awdiv@dividend+1)^0,f,c
 15837  0017D8  EC41  F01F         	call	___awdiv	;wreg free
 15838  0017DC  C012  F01C         	movff	?___awdiv,___wmul@multiplicand
 15839  0017E0  C013  F01D         	movff	?___awdiv+1,___wmul@multiplicand+1
 15840  0017E4  EC94  F027         	call	___wmul	;wreg free
 15841  0017E8  5033               	movf	LCD_DrawText@offset^0,w,c
 15842  0017EA  241A               	addwf	?___wmul^0,w,c
 15843  0017EC  6E35               	movwf	LCD_DrawText@yOffset^0,c
 15844  0017EE  5034               	movf	(LCD_DrawText@offset+1)^0,w,c
 15845  0017F0  201B               	addwfc	(?___wmul+1)^0,w,c
 15846  0017F2  6E36               	movwf	(LCD_DrawText@yOffset+1)^0,c
 15847  0017F4                     
 15848                           ;libraries/lcd_highlevel.c: 766:       for(x=0;x<width;x++)
 15849  0017F4  0E00               	movlw	0
 15850  0017F6  6E40               	movwf	LCD_DrawText@x^0,c
 15851  0017F8  EF55  F00C         	goto	l7980
 15852  0017FC                     l7948:
 15853                           
 15854                           ;libraries/lcd_highlevel.c: 767:       {;libraries/lcd_highlevel.c: 768:         fontByt
      +                          e = font->bitmap[yOffset + (x/8)];
 15855  0017FC  C040  F012         	movff	LCD_DrawText@x,___awdiv@dividend
 15856  001800  6A13               	clrf	(___awdiv@dividend+1)^0,c
 15857  001802  0E00               	movlw	0
 15858  001804  6E15               	movwf	(___awdiv@divisor+1)^0,c
 15859  001806  0E08               	movlw	8
 15860  001808  6E14               	movwf	___awdiv@divisor^0,c
 15861  00180A  EC41  F01F         	call	___awdiv	;wreg free
 15862  00180E  0E05               	movlw	5
 15863  001810  2422               	addwf	LCD_DrawText@font^0,w,c
 15864  001812  6E2D               	movwf	??_LCD_DrawText^0,c
 15865  001814  0E00               	movlw	0
 15866  001816  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 15867  001818  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15868  00181A  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 15869  00181E  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 15870  001822                     	if	0	;tblptru may be non-zero
 15871  001822                     	endif
 15872  001822                     	if	0	;tblptru may be non-zero
 15873  001822                     	endif
 15874  001822  0009               	tblrd		*+
 15875  001824  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 15876  001828  0009               	tblrd		*+
 15877  00182A  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 15878  00182E  5012               	movf	?___awdiv^0,w,c
 15879  001830  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15880  001832  5013               	movf	(?___awdiv+1)^0,w,c
 15881  001834  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15882  001836  5035               	movf	LCD_DrawText@yOffset^0,w,c
 15883  001838  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15884  00183A  5036               	movf	(LCD_DrawText@yOffset+1)^0,w,c
 15885  00183C  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15886  00183E  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 15887  001842  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 15888  001846                     	if	0	;tblptru may be non-zero
 15889  001846                     	endif
 15890  001846                     	if	0	;tblptru may be non-zero
 15891  001846                     	endif
 15892  001846  0008               	tblrd		*
 15893  001848  CFF5 F037          	movff	tablat,LCD_DrawText@fontByte
 15894  00184C                     
 15895                           ;libraries/lcd_highlevel.c: 769:         fontPixel = fontByte & (0x80 >> (x%8));
 15896  00184C  C040  F02D         	movff	LCD_DrawText@x,??_LCD_DrawText
 15897  001850  0E07               	movlw	7
 15898  001852  162D               	andwf	??_LCD_DrawText^0,f,c
 15899  001854  0E80               	movlw	128
 15900  001856  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15901  001858  0E00               	movlw	0
 15902  00185A  6E2F               	movwf	(??_LCD_DrawText+2)^0,c
 15903  00185C  2A2D               	incf	??_LCD_DrawText^0,f,c
 15904  00185E  EF34  F00C         	goto	u4714
 15905  001862                     u4715:
 15906  001862  342F               	rlcf	(??_LCD_DrawText+2)^0,w,c
 15907  001864  322F               	rrcf	(??_LCD_DrawText+2)^0,f,c
 15908  001866  322E               	rrcf	(??_LCD_DrawText+1)^0,f,c
 15909  001868                     u4714:
 15910  001868  2E2D               	decfsz	??_LCD_DrawText^0,f,c
 15911  00186A  EF31  F00C         	goto	u4715
 15912  00186E  502E               	movf	(??_LCD_DrawText+1)^0,w,c
 15913  001870  1437               	andwf	LCD_DrawText@fontByte^0,w,c
 15914  001872  6E38               	movwf	LCD_DrawText@fontPixel^0,c
 15915  001874                     
 15916                           ;libraries/lcd_highlevel.c: 770:         if(fontPixel != 0)
 15917  001874  5038               	movf	LCD_DrawText@fontPixel^0,w,c
 15918  001876  B4D8               	btfsc	status,2,c
 15919  001878  EF40  F00C         	goto	u4721
 15920  00187C  EF42  F00C         	goto	u4720
 15921  001880                     u4721:
 15922  001880  EF4C  F00C         	goto	l7966
 15923  001884                     u4720:
 15924  001884                     
 15925                           ;libraries/lcd_highlevel.c: 771:         {;libraries/lcd_highlevel.c: 772:           POR
      +                          TA = color>>8; LATC3 = 0; LATC3 = 1;;
 15926  001884  502A               	movf	(LCD_DrawText@color+1)^0,w,c
 15927  001886  6E80               	movwf	128,c	;volatile
 15928  001888  968B               	bcf	3979,3,c	;volatile
 15929  00188A  868B               	bsf	3979,3,c	;volatile
 15930  00188C                     
 15931                           ;libraries/lcd_highlevel.c: 773:           PORTA = color; LATC3 = 0; LATC3 = 1;;
 15932  00188C  C029  FF80         	movff	LCD_DrawText@color,3968	;volatile
 15933  001890                     l7962:
 15934  001890  968B               	bcf	3979,3,c	;volatile
 15935  001892  868B               	bsf	3979,3,c	;volatile
 15936                           
 15937                           ;libraries/lcd_highlevel.c: 774:         }
 15938  001894  EF54  F00C         	goto	l7978
 15939  001898                     l7966:
 15940                           
 15941                           ;libraries/lcd_highlevel.c: 776:         {;libraries/lcd_highlevel.c: 777:           POR
      +                          TA = bg_color>>8; LATC3 = 0; LATC3 = 1;;
 15942  001898  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 15943  00189A  6E80               	movwf	128,c	;volatile
 15944  00189C  968B               	bcf	3979,3,c	;volatile
 15945  00189E  868B               	bsf	3979,3,c	;volatile
 15946  0018A0                     
 15947                           ;libraries/lcd_highlevel.c: 778:           PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 15948  0018A0  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 15949  0018A4  EF48  F00C         	goto	l7962
 15950  0018A8                     l7978:
 15951                           
 15952                           ;libraries/lcd_highlevel.c: 780:       }
 15953  0018A8  2A40               	incf	LCD_DrawText@x^0,f,c
 15954  0018AA                     l7980:
 15955  0018AA  5041               	movf	LCD_DrawText@width^0,w,c
 15956  0018AC  5C40               	subwf	LCD_DrawText@x^0,w,c
 15957  0018AE  A0D8               	btfss	status,0,c
 15958  0018B0  EF5C  F00C         	goto	u4731
 15959  0018B4  EF5E  F00C         	goto	u4730
 15960  0018B8                     u4731:
 15961  0018B8  EFFE  F00B         	goto	l7948
 15962  0018BC                     u4730:
 15963  0018BC                     
 15964                           ;libraries/lcd_highlevel.c: 781:       for(x=0;x<2;x++)
 15965  0018BC  0E00               	movlw	0
 15966  0018BE  6E40               	movwf	LCD_DrawText@x^0,c
 15967  0018C0                     l7984:
 15968  0018C0  0E01               	movlw	1
 15969  0018C2  6440               	cpfsgt	LCD_DrawText@x^0,c
 15970  0018C4  EF66  F00C         	goto	u4741
 15971  0018C8  EF68  F00C         	goto	u4740
 15972  0018CC                     u4741:
 15973  0018CC  EF6A  F00C         	goto	l7988
 15974  0018D0                     u4740:
 15975  0018D0  EF75  F00C         	goto	l8004
 15976  0018D4                     l7988:
 15977                           
 15978                           ;libraries/lcd_highlevel.c: 782:       {;libraries/lcd_highlevel.c: 783:         PORTA =
      +                           bg_color>>8; LATC3 = 0; LATC3 = 1;;
 15979  0018D4  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 15980  0018D6  6E80               	movwf	128,c	;volatile
 15981  0018D8  968B               	bcf	3979,3,c	;volatile
 15982  0018DA  868B               	bsf	3979,3,c	;volatile
 15983  0018DC                     
 15984                           ;libraries/lcd_highlevel.c: 784:         PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 15985  0018DC  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 15986  0018E0  968B               	bcf	3979,3,c	;volatile
 15987  0018E2  868B               	bsf	3979,3,c	;volatile
 15988  0018E4                     
 15989                           ;libraries/lcd_highlevel.c: 785:       }
 15990  0018E4  2A40               	incf	LCD_DrawText@x^0,f,c
 15991  0018E6  EF60  F00C         	goto	l7984
 15992  0018EA                     l8004:
 15993                           
 15994                           ;libraries/lcd_highlevel.c: 786:     }
 15995  0018EA  2A3D               	incf	LCD_DrawText@y^0,f,c
 15996  0018EC                     l8006:
 15997  0018EC  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 15998  0018F0  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 15999  0018F4                     	if	0	;tblptru may be non-zero
 16000  0018F4                     	endif
 16001  0018F4                     	if	0	;tblptru may be non-zero
 16002  0018F4                     	endif
 16003  0018F4  0009               	tblrd		*+
 16004  0018F6  50F5               	movf	tablat,w,c
 16005  0018F8  5C3D               	subwf	LCD_DrawText@y^0,w,c
 16006  0018FA  A0D8               	btfss	status,0,c
 16007  0018FC  EF82  F00C         	goto	u4751
 16008  001900  EF84  F00C         	goto	u4750
 16009  001904                     u4751:
 16010  001904  EFDF  F00B         	goto	l7944
 16011  001908                     u4750:
 16012  001908                     
 16013                           ;libraries/lcd_highlevel.c: 787:     posX = posX + 2 + width;
 16014  001908  5041               	movf	LCD_DrawText@width^0,w,c
 16015  00190A  2425               	addwf	LCD_DrawText@posX^0,w,c
 16016  00190C  6E2D               	movwf	??_LCD_DrawText^0,c
 16017  00190E  0E00               	movlw	0
 16018  001910  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 16019  001912  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 16020  001914  0E02               	movlw	2
 16021  001916  242D               	addwf	??_LCD_DrawText^0,w,c
 16022  001918  6E25               	movwf	LCD_DrawText@posX^0,c
 16023  00191A  0E00               	movlw	0
 16024  00191C  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 16025  00191E  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 16026  001920                     
 16027                           ;libraries/lcd_highlevel.c: 788:     msg++;
 16028  001920  4A20               	infsnz	LCD_DrawText@msg^0,f,c
 16029  001922  2A21               	incf	(LCD_DrawText@msg+1)^0,f,c
 16030  001924                     
 16031                           ;libraries/lcd_highlevel.c: 789:  }while(*msg != 0);
 16032  001924  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 16033  001928  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 16034  00192C  6AF8               	clrf	tblptru,c
 16035  00192E  0E05               	movlw	(high __ramtop+-1)
 16036  001930  64F7               	cpfsgt	tblptrh,c
 16037  001932  D003               	bra	u4767
 16038  001934  0008               	tblrd		*
 16039  001936  50F5               	movf	tablat,w,c
 16040  001938  D005               	bra	u4760
 16041  00193A                     u4767:
 16042  00193A  CFF6 FFE1          	movff	tblptrl,fsr1l
 16043  00193E  CFF7 FFE2          	movff	tblptrh,fsr1h
 16044  001942  50E7               	movf	indf1,w,c
 16045  001944                     u4760:
 16046  001944  0900               	iorlw	0
 16047  001946  A4D8               	btfss	status,2,c
 16048  001948  EFA8  F00C         	goto	u4771
 16049  00194C  EFAA  F00C         	goto	u4770
 16050  001950                     u4771:
 16051  001950  EF18  F00B         	goto	l7854
 16052  001954                     u4770:
 16053  001954  0012               	return		;funcret
 16054  001956                     __end_of_LCD_DrawText:
 16055                           	callstack 0
 16056                           
 16057 ;; *************** function _strlen *****************
 16058 ;; Defined at:
 16059 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;  s               2   17[COMRAM] PTR const unsigned char 
 16062 ;;		 -> dbuf(32), touchScreenController@s(20), STR_11(7), STR_10(11), 
 16063 ;;		 -> STR_9(8), STR_8(4), STR_7(4), STR_6(8), 
 16064 ;;		 -> STR_5(9), STR_4(9), STR_3(11), STR_2(10), 
 16065 ;;		 -> STR_1(2), 
 16066 ;; Auto vars:     Size  Location     Type
 16067 ;;  a               2   19[COMRAM] PTR const unsigned char 
 16068 ;;		 -> dbuf(32), touchScreenController@s(20), STR_11(7), STR_10(11), 
 16069 ;;		 -> STR_9(8), STR_8(4), STR_7(4), STR_6(8), 
 16070 ;;		 -> STR_5(9), STR_4(9), STR_3(11), STR_2(10), 
 16071 ;;		 -> STR_1(2), 
 16072 ;; Return value:  Size  Location     Type
 16073 ;;                  2   17[COMRAM] unsigned int 
 16074 ;; Registers used:
 16075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 16076 ;; Tracked objects:
 16077 ;;		On entry : 0/0
 16078 ;;		On exit  : 0/0
 16079 ;;		Unchanged: 0/0
 16080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16081 ;;      Params:         2       0       0       0       0       0       0
 16082 ;;      Locals:         2       0       0       0       0       0       0
 16083 ;;      Temps:          0       0       0       0       0       0       0
 16084 ;;      Totals:         4       0       0       0       0       0       0
 16085 ;;Total ram usage:        4 bytes
 16086 ;; Hardware stack levels used: 1
 16087 ;; Hardware stack levels required when called: 4
 16088 ;; This function calls:
 16089 ;;		Nothing
 16090 ;; This function is called by:
 16091 ;;		_LCD_ButtonDraw
 16092 ;;		_LCD_DrawText
 16093 ;;		_pad
 16094 ;; This function uses a non-reentrant model
 16095 ;;
 16096                           
 16097                           	psect	text62
 16098  004D46                     __ptext62:
 16099                           	callstack 0
 16100  004D46                     _strlen:
 16101                           	callstack 20
 16102  004D46  C012  F014         	movff	strlen@s,strlen@a
 16103  004D4A  C013  F015         	movff	strlen@s+1,strlen@a+1
 16104  004D4E  EFAB  F026         	goto	l7200
 16105  004D52                     l7198:
 16106  004D52  4A12               	infsnz	strlen@s^0,f,c
 16107  004D54  2A13               	incf	(strlen@s+1)^0,f,c
 16108  004D56                     l7200:
 16109  004D56  C012  FFF6         	movff	strlen@s,tblptrl
 16110  004D5A  C013  FFF7         	movff	strlen@s+1,tblptrh
 16111  004D5E  6AF8               	clrf	tblptru,c
 16112  004D60  0E05               	movlw	(high __ramtop+-1)
 16113  004D62  64F7               	cpfsgt	tblptrh,c
 16114  004D64  D003               	bra	u4207
 16115  004D66  0008               	tblrd		*
 16116  004D68  50F5               	movf	tablat,w,c
 16117  004D6A  D005               	bra	u4200
 16118  004D6C                     u4207:
 16119  004D6C  CFF6 FFE1          	movff	tblptrl,fsr1l
 16120  004D70  CFF7 FFE2          	movff	tblptrh,fsr1h
 16121  004D74  50E7               	movf	indf1,w,c
 16122  004D76                     u4200:
 16123  004D76  0900               	iorlw	0
 16124  004D78  A4D8               	btfss	status,2,c
 16125  004D7A  EFC1  F026         	goto	u4211
 16126  004D7E  EFC3  F026         	goto	u4210
 16127  004D82                     u4211:
 16128  004D82  EFA9  F026         	goto	l7198
 16129  004D86                     u4210:
 16130  004D86  5014               	movf	strlen@a^0,w,c
 16131  004D88  5C12               	subwf	strlen@s^0,w,c
 16132  004D8A  6E12               	movwf	?_strlen^0,c
 16133  004D8C  5015               	movf	(strlen@a+1)^0,w,c
 16134  004D8E  5813               	subwfb	(strlen@s+1)^0,w,c
 16135  004D90  6E13               	movwf	(?_strlen+1)^0,c
 16136  004D92  0012               	return		;funcret
 16137  004D94                     __end_of_strlen:
 16138                           	callstack 0
 16139                           
 16140 ;; *************** function ___wmul *****************
 16141 ;; Defined at:
 16142 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 16143 ;; Parameters:    Size  Location     Type
 16144 ;;  multiplier      2   25[COMRAM] unsigned int 
 16145 ;;  multiplicand    2   27[COMRAM] unsigned int 
 16146 ;; Auto vars:     Size  Location     Type
 16147 ;;  product         2   29[COMRAM] unsigned int 
 16148 ;; Return value:  Size  Location     Type
 16149 ;;                  2   25[COMRAM] unsigned int 
 16150 ;; Registers used:
 16151 ;;		wreg, status,2, status,0, prodl, prodh
 16152 ;; Tracked objects:
 16153 ;;		On entry : 0/0
 16154 ;;		On exit  : 0/0
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16157 ;;      Params:         4       0       0       0       0       0       0
 16158 ;;      Locals:         2       0       0       0       0       0       0
 16159 ;;      Temps:          0       0       0       0       0       0       0
 16160 ;;      Totals:         6       0       0       0       0       0       0
 16161 ;;Total ram usage:        6 bytes
 16162 ;; Hardware stack levels used: 1
 16163 ;; Hardware stack levels required when called: 4
 16164 ;; This function calls:
 16165 ;;		Nothing
 16166 ;; This function is called by:
 16167 ;;		_LCD_SliderUpdate
 16168 ;;		_LCD_DrawText
 16169 ;;		_LCD_Bitmap
 16170 ;;		_XF_init
 16171 ;; This function uses a non-reentrant model
 16172 ;;
 16173                           
 16174                           	psect	text63
 16175  004F28                     __ptext63:
 16176                           	callstack 0
 16177  004F28                     ___wmul:
 16178                           	callstack 21
 16179  004F28  501A               	movf	___wmul@multiplier^0,w,c
 16180  004F2A  021C               	mulwf	___wmul@multiplicand^0,c
 16181  004F2C  CFF3 F01E          	movff	prodl,___wmul@product
 16182  004F30  CFF4 F01F          	movff	prodh,___wmul@product+1
 16183  004F34  501A               	movf	___wmul@multiplier^0,w,c
 16184  004F36  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 16185  004F38  50F3               	movf	243,w,c
 16186  004F3A  261F               	addwf	(___wmul@product+1)^0,f,c
 16187  004F3C  501B               	movf	(___wmul@multiplier+1)^0,w,c
 16188  004F3E  021C               	mulwf	___wmul@multiplicand^0,c
 16189  004F40  50F3               	movf	243,w,c
 16190  004F42  261F               	addwf	(___wmul@product+1)^0,f,c
 16191  004F44  C01E  F01A         	movff	___wmul@product,?___wmul
 16192  004F48  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 16193  004F4C  0012               	return		;funcret
 16194  004F4E                     __end_of___wmul:
 16195                           	callstack 0
 16196                           
 16197 ;; *************** function ___awdiv *****************
 16198 ;; Defined at:
 16199 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 16200 ;; Parameters:    Size  Location     Type
 16201 ;;  dividend        2   17[COMRAM] int 
 16202 ;;  divisor         2   19[COMRAM] int 
 16203 ;; Auto vars:     Size  Location     Type
 16204 ;;  quotient        2   23[COMRAM] int 
 16205 ;;  sign            1   22[COMRAM] unsigned char 
 16206 ;;  counter         1   21[COMRAM] unsigned char 
 16207 ;; Return value:  Size  Location     Type
 16208 ;;                  2   17[COMRAM] int 
 16209 ;; Registers used:
 16210 ;;		wreg, status,2, status,0
 16211 ;; Tracked objects:
 16212 ;;		On entry : 0/0
 16213 ;;		On exit  : 0/0
 16214 ;;		Unchanged: 0/0
 16215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16216 ;;      Params:         4       0       0       0       0       0       0
 16217 ;;      Locals:         4       0       0       0       0       0       0
 16218 ;;      Temps:          0       0       0       0       0       0       0
 16219 ;;      Totals:         8       0       0       0       0       0       0
 16220 ;;Total ram usage:        8 bytes
 16221 ;; Hardware stack levels used: 1
 16222 ;; Hardware stack levels required when called: 4
 16223 ;; This function calls:
 16224 ;;		Nothing
 16225 ;; This function is called by:
 16226 ;;		_LCD_ButtonDraw
 16227 ;;		_LCD_DrawText
 16228 ;; This function uses a non-reentrant model
 16229 ;;
 16230                           
 16231                           	psect	text64
 16232  003E82                     __ptext64:
 16233                           	callstack 0
 16234  003E82                     ___awdiv:
 16235                           	callstack 20
 16236  003E82  0E00               	movlw	0
 16237  003E84  6E17               	movwf	___awdiv@sign^0,c
 16238  003E86  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
 16239  003E88  EF4A  F01F         	goto	u4490
 16240  003E8C  EF48  F01F         	goto	u4491
 16241  003E90                     u4491:
 16242  003E90  EF50  F01F         	goto	l7736
 16243  003E94                     u4490:
 16244  003E94  6C14               	negf	___awdiv@divisor^0,c
 16245  003E96  1E15               	comf	(___awdiv@divisor+1)^0,f,c
 16246  003E98  B0D8               	btfsc	status,0,c
 16247  003E9A  2A15               	incf	(___awdiv@divisor+1)^0,f,c
 16248  003E9C  0E01               	movlw	1
 16249  003E9E  6E17               	movwf	___awdiv@sign^0,c
 16250  003EA0                     l7736:
 16251  003EA0  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
 16252  003EA2  EF57  F01F         	goto	u4500
 16253  003EA6  EF55  F01F         	goto	u4501
 16254  003EAA                     u4501:
 16255  003EAA  EF5D  F01F         	goto	l7742
 16256  003EAE                     u4500:
 16257  003EAE  6C12               	negf	___awdiv@dividend^0,c
 16258  003EB0  1E13               	comf	(___awdiv@dividend+1)^0,f,c
 16259  003EB2  B0D8               	btfsc	status,0,c
 16260  003EB4  2A13               	incf	(___awdiv@dividend+1)^0,f,c
 16261  003EB6  0E01               	movlw	1
 16262  003EB8  1A17               	xorwf	___awdiv@sign^0,f,c
 16263  003EBA                     l7742:
 16264  003EBA  0E00               	movlw	0
 16265  003EBC  6E19               	movwf	(___awdiv@quotient+1)^0,c
 16266  003EBE  0E00               	movlw	0
 16267  003EC0  6E18               	movwf	___awdiv@quotient^0,c
 16268  003EC2  5014               	movf	___awdiv@divisor^0,w,c
 16269  003EC4  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
 16270  003EC6  B4D8               	btfsc	status,2,c
 16271  003EC8  EF68  F01F         	goto	u4511
 16272  003ECC  EF6A  F01F         	goto	u4510
 16273  003ED0                     u4511:
 16274  003ED0  EF92  F01F         	goto	l7764
 16275  003ED4                     u4510:
 16276  003ED4  0E01               	movlw	1
 16277  003ED6  6E16               	movwf	___awdiv@counter^0,c
 16278  003ED8  EF72  F01F         	goto	l7750
 16279  003EDC                     l7748:
 16280  003EDC  90D8               	bcf	status,0,c
 16281  003EDE  3614               	rlcf	___awdiv@divisor^0,f,c
 16282  003EE0  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
 16283  003EE2  2A16               	incf	___awdiv@counter^0,f,c
 16284  003EE4                     l7750:
 16285  003EE4  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
 16286  003EE6  EF77  F01F         	goto	u4521
 16287  003EEA  EF79  F01F         	goto	u4520
 16288  003EEE                     u4521:
 16289  003EEE  EF6E  F01F         	goto	l7748
 16290  003EF2                     u4520:
 16291  003EF2                     l7752:
 16292  003EF2  90D8               	bcf	status,0,c
 16293  003EF4  3618               	rlcf	___awdiv@quotient^0,f,c
 16294  003EF6  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
 16295  003EF8  5014               	movf	___awdiv@divisor^0,w,c
 16296  003EFA  5C12               	subwf	___awdiv@dividend^0,w,c
 16297  003EFC  5015               	movf	(___awdiv@divisor+1)^0,w,c
 16298  003EFE  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
 16299  003F00  A0D8               	btfss	status,0,c
 16300  003F02  EF85  F01F         	goto	u4531
 16301  003F06  EF87  F01F         	goto	u4530
 16302  003F0A                     u4531:
 16303  003F0A  EF8C  F01F         	goto	l7760
 16304  003F0E                     u4530:
 16305  003F0E  5014               	movf	___awdiv@divisor^0,w,c
 16306  003F10  5E12               	subwf	___awdiv@dividend^0,f,c
 16307  003F12  5015               	movf	(___awdiv@divisor+1)^0,w,c
 16308  003F14  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
 16309  003F16  8018               	bsf	___awdiv@quotient^0,0,c
 16310  003F18                     l7760:
 16311  003F18  90D8               	bcf	status,0,c
 16312  003F1A  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
 16313  003F1C  3214               	rrcf	___awdiv@divisor^0,f,c
 16314  003F1E  2E16               	decfsz	___awdiv@counter^0,f,c
 16315  003F20  EF79  F01F         	goto	l7752
 16316  003F24                     l7764:
 16317  003F24  5017               	movf	___awdiv@sign^0,w,c
 16318  003F26  B4D8               	btfsc	status,2,c
 16319  003F28  EF98  F01F         	goto	u4541
 16320  003F2C  EF9A  F01F         	goto	u4540
 16321  003F30                     u4541:
 16322  003F30  EF9E  F01F         	goto	l7768
 16323  003F34                     u4540:
 16324  003F34  6C18               	negf	___awdiv@quotient^0,c
 16325  003F36  1E19               	comf	(___awdiv@quotient+1)^0,f,c
 16326  003F38  B0D8               	btfsc	status,0,c
 16327  003F3A  2A19               	incf	(___awdiv@quotient+1)^0,f,c
 16328  003F3C                     l7768:
 16329  003F3C  C018  F012         	movff	___awdiv@quotient,?___awdiv
 16330  003F40  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
 16331  003F44  0012               	return		;funcret
 16332  003F46                     __end_of___awdiv:
 16333                           	callstack 0
 16334                           
 16335 ;; *************** function _XF_popEvent *****************
 16336 ;; Defined at:
 16337 ;;		line 72 in file "xf/xf.c"
 16338 ;; Parameters:    Size  Location     Type
 16339 ;;  inISR           1    wreg     _Bool 
 16340 ;; Auto vars:     Size  Location     Type
 16341 ;;  inISR           1   24[COMRAM] _Bool 
 16342 ;;  ev              1   23[COMRAM] unsigned char 
 16343 ;; Return value:  Size  Location     Type
 16344 ;;                  1    wreg      unsigned char 
 16345 ;; Registers used:
 16346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16347 ;; Tracked objects:
 16348 ;;		On entry : 0/0
 16349 ;;		On exit  : 0/0
 16350 ;;		Unchanged: 0/0
 16351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16352 ;;      Params:         0       0       0       0       0       0       0
 16353 ;;      Locals:         2       0       0       0       0       0       0
 16354 ;;      Temps:          0       0       0       0       0       0       0
 16355 ;;      Totals:         2       0       0       0       0       0       0
 16356 ;;Total ram usage:        2 bytes
 16357 ;; Hardware stack levels used: 1
 16358 ;; Hardware stack levels required when called: 5
 16359 ;; This function calls:
 16360 ;;		_ENTERCRITICAL
 16361 ;;		_LEAVECRITICAL
 16362 ;;		___awmod
 16363 ;; This function is called by:
 16364 ;;		_Factory_exec
 16365 ;; This function uses a non-reentrant model
 16366 ;;
 16367                           
 16368                           	psect	text65
 16369  004B46                     __ptext65:
 16370                           	callstack 0
 16371  004B46                     _XF_popEvent:
 16372                           	callstack 24
 16373                           
 16374                           ;incstack = 0
 16375                           ;XF_popEvent@inISR stored from wreg
 16376  004B46  6E19               	movwf	XF_popEvent@inISR^0,c
 16377  004B48                     
 16378                           ;xf/xf.c: 76:     ENTERCRITICAL(inISR);
 16379  004B48  5019               	movf	XF_popEvent@inISR^0,w,c
 16380  004B4A  ECE9  F027         	call	_ENTERCRITICAL
 16381  004B4E                     
 16382                           ;xf/xf.c: 77:     if(theXF.in == theXF.out)
 16383  004B4E  0100               	movlb	0	; () banked
 16384  004B50  51DA               	movf	(_theXF+37)& (0+255),w,b
 16385  004B52  19D9               	xorwf	(_theXF+36)& (0+255),w,b
 16386  004B54  A4D8               	btfss	status,2,c
 16387  004B56  EFAF  F025         	goto	u5841
 16388  004B5A  EFB1  F025         	goto	u5840
 16389  004B5E                     u5841:
 16390  004B5E  EFB7  F025         	goto	l9140
 16391  004B62                     u5840:
 16392  004B62                     
 16393                           ; BSR set to: 0
 16394                           ;xf/xf.c: 78:     {;xf/xf.c: 79:       LEAVECRITICAL(inISR);
 16395  004B62  5019               	movf	XF_popEvent@inISR^0,w,c
 16396  004B64  ECDE  F027         	call	_LEAVECRITICAL
 16397  004B68                     
 16398                           ;xf/xf.c: 80:       return ev;
 16399  004B68  0E00               	movlw	0
 16400  004B6A  EFD2  F025         	goto	l659
 16401  004B6E                     l9140:
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;xf/xf.c: 82:     ev = theXF.eventQueue[theXF.out];
 16405  004B6E  0ECD               	movlw	low (_theXF+24)
 16406  004B70  25DA               	addwf	(_theXF+37)& (0+255),w,b
 16407  004B72  6ED9               	movwf	fsr2l,c
 16408  004B74  6ADA               	clrf	fsr2h,c
 16409  004B76  0E00               	movlw	high (_theXF+24)
 16410  004B78  22DA               	addwfc	fsr2h,f,c
 16411  004B7A  50DF               	movf	indf2,w,c
 16412  004B7C  6E18               	movwf	XF_popEvent@ev^0,c
 16413  004B7E                     
 16414                           ; BSR set to: 0
 16415                           ;xf/xf.c: 83:     theXF.out = (theXF.out + 1)%(uint8_t)sizeof(theXF.eventQueue);
 16416  004B7E  0E01               	movlw	1
 16417  004B80  25DA               	addwf	(_theXF+37)& (0+255),w,b
 16418  004B82  6E12               	movwf	___awmod@dividend^0,c
 16419  004B84  6A13               	clrf	(___awmod@dividend+1)^0,c
 16420  004B86  0E00               	movlw	0
 16421  004B88  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 16422  004B8A  0E00               	movlw	0
 16423  004B8C  6E15               	movwf	(___awmod@divisor+1)^0,c
 16424  004B8E  0E0C               	movlw	12
 16425  004B90  6E14               	movwf	___awmod@divisor^0,c
 16426  004B92  EC7B  F021         	call	___awmod	;wreg free
 16427  004B96  5012               	movf	?___awmod^0,w,c
 16428  004B98  0100               	movlb	0	; () banked
 16429  004B9A  6FDA               	movwf	(_theXF+37)& (0+255),b
 16430  004B9C                     
 16431                           ; BSR set to: 0
 16432                           ;xf/xf.c: 84:     LEAVECRITICAL(inISR);
 16433  004B9C  5019               	movf	XF_popEvent@inISR^0,w,c
 16434  004B9E  ECDE  F027         	call	_LEAVECRITICAL
 16435  004BA2                     
 16436                           ;xf/xf.c: 85:     return ev;
 16437  004BA2  5018               	movf	XF_popEvent@ev^0,w,c
 16438  004BA4                     l659:
 16439  004BA4  0012               	return		;funcret
 16440  004BA6                     __end_of_XF_popEvent:
 16441                           	callstack 0
 16442                           
 16443 ;; *************** function ___awmod *****************
 16444 ;; Defined at:
 16445 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 16446 ;; Parameters:    Size  Location     Type
 16447 ;;  dividend        2   17[COMRAM] int 
 16448 ;;  divisor         2   19[COMRAM] int 
 16449 ;; Auto vars:     Size  Location     Type
 16450 ;;  sign            1   22[COMRAM] unsigned char 
 16451 ;;  counter         1   21[COMRAM] unsigned char 
 16452 ;; Return value:  Size  Location     Type
 16453 ;;                  2   17[COMRAM] int 
 16454 ;; Registers used:
 16455 ;;		wreg, status,2, status,0
 16456 ;; Tracked objects:
 16457 ;;		On entry : 0/0
 16458 ;;		On exit  : 0/0
 16459 ;;		Unchanged: 0/0
 16460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16461 ;;      Params:         4       0       0       0       0       0       0
 16462 ;;      Locals:         2       0       0       0       0       0       0
 16463 ;;      Temps:          0       0       0       0       0       0       0
 16464 ;;      Totals:         6       0       0       0       0       0       0
 16465 ;;Total ram usage:        6 bytes
 16466 ;; Hardware stack levels used: 1
 16467 ;; Hardware stack levels required when called: 4
 16468 ;; This function calls:
 16469 ;;		Nothing
 16470 ;; This function is called by:
 16471 ;;		_XF_pushEvent
 16472 ;;		_XF_popEvent
 16473 ;; This function uses a non-reentrant model
 16474 ;;
 16475                           
 16476                           	psect	text66
 16477  0042F6                     __ptext66:
 16478                           	callstack 0
 16479  0042F6                     ___awmod:
 16480                           	callstack 21
 16481  0042F6  0E00               	movlw	0
 16482  0042F8  6E17               	movwf	___awmod@sign^0,c
 16483  0042FA  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
 16484  0042FC  EF84  F021         	goto	u5190
 16485  004300  EF82  F021         	goto	u5191
 16486  004304                     u5191:
 16487  004304  EF8A  F021         	goto	l8604
 16488  004308                     u5190:
 16489  004308  6C12               	negf	___awmod@dividend^0,c
 16490  00430A  1E13               	comf	(___awmod@dividend+1)^0,f,c
 16491  00430C  B0D8               	btfsc	status,0,c
 16492  00430E  2A13               	incf	(___awmod@dividend+1)^0,f,c
 16493  004310  0E01               	movlw	1
 16494  004312  6E17               	movwf	___awmod@sign^0,c
 16495  004314                     l8604:
 16496  004314  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
 16497  004316  EF91  F021         	goto	u5200
 16498  00431A  EF8F  F021         	goto	u5201
 16499  00431E                     u5201:
 16500  00431E  EF95  F021         	goto	l8608
 16501  004322                     u5200:
 16502  004322  6C14               	negf	___awmod@divisor^0,c
 16503  004324  1E15               	comf	(___awmod@divisor+1)^0,f,c
 16504  004326  B0D8               	btfsc	status,0,c
 16505  004328  2A15               	incf	(___awmod@divisor+1)^0,f,c
 16506  00432A                     l8608:
 16507  00432A  5014               	movf	___awmod@divisor^0,w,c
 16508  00432C  1015               	iorwf	(___awmod@divisor+1)^0,w,c
 16509  00432E  B4D8               	btfsc	status,2,c
 16510  004330  EF9C  F021         	goto	u5211
 16511  004334  EF9E  F021         	goto	u5210
 16512  004338                     u5211:
 16513  004338  EFC2  F021         	goto	l8624
 16514  00433C                     u5210:
 16515  00433C  0E01               	movlw	1
 16516  00433E  6E16               	movwf	___awmod@counter^0,c
 16517  004340  EFA6  F021         	goto	l8614
 16518  004344                     l8612:
 16519  004344  90D8               	bcf	status,0,c
 16520  004346  3614               	rlcf	___awmod@divisor^0,f,c
 16521  004348  3615               	rlcf	(___awmod@divisor+1)^0,f,c
 16522  00434A  2A16               	incf	___awmod@counter^0,f,c
 16523  00434C                     l8614:
 16524  00434C  AE15               	btfss	(___awmod@divisor+1)^0,7,c
 16525  00434E  EFAB  F021         	goto	u5221
 16526  004352  EFAD  F021         	goto	u5220
 16527  004356                     u5221:
 16528  004356  EFA2  F021         	goto	l8612
 16529  00435A                     u5220:
 16530  00435A                     l8616:
 16531  00435A  5014               	movf	___awmod@divisor^0,w,c
 16532  00435C  5C12               	subwf	___awmod@dividend^0,w,c
 16533  00435E  5015               	movf	(___awmod@divisor+1)^0,w,c
 16534  004360  5813               	subwfb	(___awmod@dividend+1)^0,w,c
 16535  004362  A0D8               	btfss	status,0,c
 16536  004364  EFB6  F021         	goto	u5231
 16537  004368  EFB8  F021         	goto	u5230
 16538  00436C                     u5231:
 16539  00436C  EFBC  F021         	goto	l8620
 16540  004370                     u5230:
 16541  004370  5014               	movf	___awmod@divisor^0,w,c
 16542  004372  5E12               	subwf	___awmod@dividend^0,f,c
 16543  004374  5015               	movf	(___awmod@divisor+1)^0,w,c
 16544  004376  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
 16545  004378                     l8620:
 16546  004378  90D8               	bcf	status,0,c
 16547  00437A  3215               	rrcf	(___awmod@divisor+1)^0,f,c
 16548  00437C  3214               	rrcf	___awmod@divisor^0,f,c
 16549  00437E  2E16               	decfsz	___awmod@counter^0,f,c
 16550  004380  EFAD  F021         	goto	l8616
 16551  004384                     l8624:
 16552  004384  5017               	movf	___awmod@sign^0,w,c
 16553  004386  B4D8               	btfsc	status,2,c
 16554  004388  EFC8  F021         	goto	u5241
 16555  00438C  EFCA  F021         	goto	u5240
 16556  004390                     u5241:
 16557  004390  EFCE  F021         	goto	l8628
 16558  004394                     u5240:
 16559  004394  6C12               	negf	___awmod@dividend^0,c
 16560  004396  1E13               	comf	(___awmod@dividend+1)^0,f,c
 16561  004398  B0D8               	btfsc	status,0,c
 16562  00439A  2A13               	incf	(___awmod@dividend+1)^0,f,c
 16563  00439C                     l8628:
 16564  00439C  C012  F012         	movff	___awmod@dividend,?___awmod
 16565  0043A0  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
 16566  0043A4  0012               	return		;funcret
 16567  0043A6                     __end_of___awmod:
 16568                           	callstack 0
 16569                           
 16570 ;; *************** function _LEAVECRITICAL *****************
 16571 ;; Defined at:
 16572 ;;		line 186 in file "xf/xf.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;  inISR           1    wreg     _Bool 
 16575 ;; Auto vars:     Size  Location     Type
 16576 ;;  inISR           1   17[COMRAM] _Bool 
 16577 ;; Return value:  Size  Location     Type
 16578 ;;                  1    wreg      void 
 16579 ;; Registers used:
 16580 ;;		wreg, status,2
 16581 ;; Tracked objects:
 16582 ;;		On entry : 0/0
 16583 ;;		On exit  : 0/0
 16584 ;;		Unchanged: 0/0
 16585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16586 ;;      Params:         0       0       0       0       0       0       0
 16587 ;;      Locals:         1       0       0       0       0       0       0
 16588 ;;      Temps:          0       0       0       0       0       0       0
 16589 ;;      Totals:         1       0       0       0       0       0       0
 16590 ;;Total ram usage:        1 bytes
 16591 ;; Hardware stack levels used: 1
 16592 ;; Hardware stack levels required when called: 4
 16593 ;; This function calls:
 16594 ;;		Nothing
 16595 ;; This function is called by:
 16596 ;;		_XF_pushEvent
 16597 ;;		_XF_popEvent
 16598 ;;		_XF_scheduleTimer
 16599 ;; This function uses a non-reentrant model
 16600 ;;
 16601                           
 16602                           	psect	text67
 16603  004FBC                     __ptext67:
 16604                           	callstack 0
 16605  004FBC                     _LEAVECRITICAL:
 16606                           	callstack 21
 16607                           
 16608                           ;incstack = 0
 16609                           ;LEAVECRITICAL@inISR stored from wreg
 16610  004FBC  6E12               	movwf	LEAVECRITICAL@inISR^0,c
 16611  004FBE                     
 16612                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 16613  004FBE  5012               	movf	LEAVECRITICAL@inISR^0,w,c
 16614  004FC0  A4D8               	btfss	status,2,c
 16615  004FC2  EFE5  F027         	goto	u5181
 16616  004FC6  EFE7  F027         	goto	u5180
 16617  004FCA                     u5181:
 16618  004FCA  EFE8  F027         	goto	l685
 16619  004FCE                     u5180:
 16620  004FCE                     
 16621                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 16622  004FCE  8EF2               	bsf	4082,7,c	;volatile
 16623  004FD0                     l685:
 16624  004FD0  0012               	return		;funcret
 16625  004FD2                     __end_of_LEAVECRITICAL:
 16626                           	callstack 0
 16627                           
 16628 ;; *************** function _ENTERCRITICAL *****************
 16629 ;; Defined at:
 16630 ;;		line 172 in file "xf/xf.c"
 16631 ;; Parameters:    Size  Location     Type
 16632 ;;  inISR           1    wreg     _Bool 
 16633 ;; Auto vars:     Size  Location     Type
 16634 ;;  inISR           1   17[COMRAM] _Bool 
 16635 ;; Return value:  Size  Location     Type
 16636 ;;                  1    wreg      void 
 16637 ;; Registers used:
 16638 ;;		wreg, status,2
 16639 ;; Tracked objects:
 16640 ;;		On entry : 0/0
 16641 ;;		On exit  : 0/0
 16642 ;;		Unchanged: 0/0
 16643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16644 ;;      Params:         0       0       0       0       0       0       0
 16645 ;;      Locals:         1       0       0       0       0       0       0
 16646 ;;      Temps:          0       0       0       0       0       0       0
 16647 ;;      Totals:         1       0       0       0       0       0       0
 16648 ;;Total ram usage:        1 bytes
 16649 ;; Hardware stack levels used: 1
 16650 ;; Hardware stack levels required when called: 4
 16651 ;; This function calls:
 16652 ;;		Nothing
 16653 ;; This function is called by:
 16654 ;;		_XF_pushEvent
 16655 ;;		_XF_popEvent
 16656 ;;		_XF_scheduleTimer
 16657 ;; This function uses a non-reentrant model
 16658 ;;
 16659                           
 16660                           	psect	text68
 16661  004FD2                     __ptext68:
 16662                           	callstack 0
 16663  004FD2                     _ENTERCRITICAL:
 16664                           	callstack 21
 16665                           
 16666                           ;incstack = 0
 16667                           ;ENTERCRITICAL@inISR stored from wreg
 16668  004FD2  6E12               	movwf	ENTERCRITICAL@inISR^0,c
 16669  004FD4                     
 16670                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 16671  004FD4  5012               	movf	ENTERCRITICAL@inISR^0,w,c
 16672  004FD6  A4D8               	btfss	status,2,c
 16673  004FD8  EFF0  F027         	goto	u5171
 16674  004FDC  EFF2  F027         	goto	u5170
 16675  004FE0                     u5171:
 16676  004FE0  EFF3  F027         	goto	l681
 16677  004FE4                     u5170:
 16678  004FE4                     
 16679                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 16680  004FE4  9EF2               	bcf	4082,7,c	;volatile
 16681  004FE6                     l681:
 16682  004FE6  0012               	return		;funcret
 16683  004FE8                     __end_of_ENTERCRITICAL:
 16684                           	callstack 0
 16685                           
 16686 ;; *************** function _isr *****************
 16687 ;; Defined at:
 16688 ;;		line 19 in file "main.c"
 16689 ;; Parameters:    Size  Location     Type
 16690 ;;		None
 16691 ;; Auto vars:     Size  Location     Type
 16692 ;;		None
 16693 ;; Return value:  Size  Location     Type
 16694 ;;                  1    wreg      void 
 16695 ;; Registers used:
 16696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/0
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16702 ;;      Params:         0       0       0       0       0       0       0
 16703 ;;      Locals:         0       0       0       0       0       0       0
 16704 ;;      Temps:          4       0       0       0       0       0       0
 16705 ;;      Totals:         4       0       0       0       0       0       0
 16706 ;;Total ram usage:        4 bytes
 16707 ;; Hardware stack levels used: 1
 16708 ;; Hardware stack levels required when called: 3
 16709 ;; This function calls:
 16710 ;;		_XF_decrementAndQueueTimers
 16711 ;;		i2_XF_pushEvent
 16712 ;; This function is called by:
 16713 ;;		Interrupt level 2
 16714 ;; This function uses a non-reentrant model
 16715 ;;
 16716                           
 16717                           	psect	intcode
 16718  000008                     __pintcode:
 16719                           	callstack 0
 16720  000008                     _isr:
 16721                           	callstack 16
 16722                           
 16723                           ;incstack = 0
 16724  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16725  00000A  CFD9 F00E          	movff	fsr2l,??_isr
 16726  00000E  CFDA F00F          	movff	fsr2h,??_isr+1
 16727  000012  CFF3 F010          	movff	prodl,??_isr+2
 16728  000016  CFF4 F011          	movff	prodh,??_isr+3
 16729  00001A                     
 16730                           ;main.c: 21:     if((INT1IF==1)&&(INT1IE==1))
 16731  00001A  A0F0               	btfss	4080,0,c	;volatile
 16732  00001C  EF12  F000         	goto	i2u410_41
 16733  000020  EF14  F000         	goto	i2u410_40
 16734  000024                     i2u410_41:
 16735  000024  EF39  F000         	goto	i2l6958
 16736  000028                     i2u410_40:
 16737  000028  A6F0               	btfss	4080,3,c	;volatile
 16738  00002A  EF19  F000         	goto	i2u411_41
 16739  00002E  EF1B  F000         	goto	i2u411_40
 16740  000032                     i2u411_41:
 16741  000032  EF39  F000         	goto	i2l6958
 16742  000036                     i2u411_40:
 16743  000036                     
 16744                           ;main.c: 22:     {;main.c: 23:         if(INTEDG1==0)
 16745  000036  BAF1               	btfsc	4081,5,c	;volatile
 16746  000038  EF20  F000         	goto	i2u412_41
 16747  00003C  EF22  F000         	goto	i2u412_40
 16748  000040                     i2u412_41:
 16749  000040  EF2B  F000         	goto	i2l719
 16750  000044                     i2u412_40:
 16751  000044                     
 16752                           ;main.c: 24:         {;main.c: 25:             INTEDG1=1;
 16753  000044  8AF1               	bsf	4081,5,c	;volatile
 16754                           
 16755                           ;main.c: 26:             INT1IF=0;
 16756  000046  90F0               	bcf	4080,0,c	;volatile
 16757  000048                     
 16758                           ;main.c: 27:             XF_pushEvent(evPress,1);
 16759  000048  0E01               	movlw	1
 16760  00004A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 16761  00004C  0E01               	movlw	1
 16762  00004E  EC40  F025         	call	i2_XF_pushEvent
 16763                           
 16764                           ;main.c: 29:         }
 16765  000052  EF39  F000         	goto	i2l6958
 16766  000056                     i2l719:
 16767  000056  AAF1               	btfss	4081,5,c	;volatile
 16768  000058  EF30  F000         	goto	i2u413_41
 16769  00005C  EF32  F000         	goto	i2u413_40
 16770  000060                     i2u413_41:
 16771  000060  EF39  F000         	goto	i2l6958
 16772  000064                     i2u413_40:
 16773  000064                     
 16774                           ;main.c: 31:         {;main.c: 32:             INTEDG1=0;
 16775  000064  9AF1               	bcf	4081,5,c	;volatile
 16776                           
 16777                           ;main.c: 33:             INT1IF=0;
 16778  000066  90F0               	bcf	4080,0,c	;volatile
 16779  000068                     
 16780                           ;main.c: 34:             XF_pushEvent(evRelease,1);
 16781  000068  0E01               	movlw	1
 16782  00006A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 16783  00006C  0E02               	movlw	2
 16784  00006E  EC40  F025         	call	i2_XF_pushEvent
 16785  000072                     i2l6958:
 16786                           
 16787                           ;main.c: 40:     if((TMR0IF==1)&&(TMR0IE==1))
 16788  000072  A4F2               	btfss	4082,2,c	;volatile
 16789  000074  EF3E  F000         	goto	i2u414_41
 16790  000078  EF40  F000         	goto	i2u414_40
 16791  00007C                     i2u414_41:
 16792  00007C  EF4E  F000         	goto	i2l723
 16793  000080                     i2u414_40:
 16794  000080  AAF2               	btfss	4082,5,c	;volatile
 16795  000082  EF45  F000         	goto	i2u415_41
 16796  000086  EF47  F000         	goto	i2u415_40
 16797  00008A                     i2u415_41:
 16798  00008A  EF4E  F000         	goto	i2l723
 16799  00008E                     i2u415_40:
 16800  00008E                     
 16801                           ;main.c: 41:     {;main.c: 42:         XF_decrementAndQueueTimers();
 16802  00008E  ECBE  F01A         	call	_XF_decrementAndQueueTimers	;wreg free
 16803  000092                     
 16804                           ;main.c: 44:         TMR0H=0xE7;
 16805  000092  0EE7               	movlw	231
 16806  000094  6ED7               	movwf	215,c	;volatile
 16807  000096                     
 16808                           ;main.c: 45:         TMR0L=0x95;
 16809  000096  0E95               	movlw	149
 16810  000098  6ED6               	movwf	214,c	;volatile
 16811  00009A                     
 16812                           ;main.c: 46:         TMR0IF=0;
 16813  00009A  94F2               	bcf	4082,2,c	;volatile
 16814  00009C                     i2l723:
 16815  00009C  C011  FFF4         	movff	??_isr+3,prodh
 16816  0000A0  C010  FFF3         	movff	??_isr+2,prodl
 16817  0000A4  C00F  FFDA         	movff	??_isr+1,fsr2h
 16818  0000A8  C00E  FFD9         	movff	??_isr,fsr2l
 16819  0000AC  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16820  0000AE  0011               	retfie		f
 16821  0000B0                     __end_of_isr:
 16822                           	callstack 0
 16823                           
 16824 ;; *************** function _XF_decrementAndQueueTimers *****************
 16825 ;; Defined at:
 16826 ;;		line 139 in file "xf/xf.c"
 16827 ;; Parameters:    Size  Location     Type
 16828 ;;		None
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;  i               2   11[COMRAM] int 
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  1    wreg      void 
 16833 ;; Registers used:
 16834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16835 ;; Tracked objects:
 16836 ;;		On entry : 0/0
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16840 ;;      Params:         0       0       0       0       0       0       0
 16841 ;;      Locals:         2       0       0       0       0       0       0
 16842 ;;      Temps:          2       0       0       0       0       0       0
 16843 ;;      Totals:         4       0       0       0       0       0       0
 16844 ;;Total ram usage:        4 bytes
 16845 ;; Hardware stack levels used: 1
 16846 ;; Hardware stack levels required when called: 2
 16847 ;; This function calls:
 16848 ;;		_XF_unscheduleTimer
 16849 ;;		i2_XF_pushEvent
 16850 ;;		i2___wmul
 16851 ;; This function is called by:
 16852 ;;		_isr
 16853 ;; This function uses a non-reentrant model
 16854 ;;
 16855                           
 16856                           	psect	text70
 16857  00357C                     __ptext70:
 16858                           	callstack 0
 16859  00357C                     _XF_decrementAndQueueTimers:
 16860                           	callstack 16
 16861  00357C                     
 16862                           ;xf/xf.c: 141:     int i;;xf/xf.c: 142:     for (i=0; i<8; i++)
 16863  00357C  0E00               	movlw	0
 16864  00357E  6E0D               	movwf	(XF_decrementAndQueueTimers@i+1)^0,c
 16865  003580  0E00               	movlw	0
 16866  003582  6E0C               	movwf	XF_decrementAndQueueTimers@i^0,c
 16867  003584                     i2l6930:
 16868                           
 16869                           ;xf/xf.c: 143:     {;xf/xf.c: 144:         if (theXF.timerList[i].ev != NULLEVENT)
 16870  003584  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 16871  003588  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 16872  00358C  0E00               	movlw	0
 16873  00358E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 16874  003590  0E03               	movlw	3
 16875  003592  6E03               	movwf	i2___wmul@multiplicand^0,c
 16876  003594  ECA7  F027         	call	i2___wmul	;wreg free
 16877  003598  0EB7               	movlw	low (_theXF+2)
 16878  00359A  2401               	addwf	?i2___wmul^0,w,c
 16879  00359C  6ED9               	movwf	fsr2l,c
 16880  00359E  0E00               	movlw	high (_theXF+2)
 16881  0035A0  2002               	addwfc	(?i2___wmul+1)^0,w,c
 16882  0035A2  6EDA               	movwf	fsr2h,c
 16883  0035A4  50DF               	movf	indf2,w,c
 16884  0035A6  B4D8               	btfsc	status,2,c
 16885  0035A8  EFD8  F01A         	goto	i2u406_41
 16886  0035AC  EFDA  F01A         	goto	i2u406_40
 16887  0035B0                     i2u406_41:
 16888  0035B0  EF3E  F01B         	goto	i2l6940
 16889  0035B4                     i2u406_40:
 16890  0035B4                     
 16891                           ;xf/xf.c: 145:         {;xf/xf.c: 147:             theXF.timerList[i].tm-=1;
 16892  0035B4  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 16893  0035B8  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 16894  0035BC  0E00               	movlw	0
 16895  0035BE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 16896  0035C0  0E03               	movlw	3
 16897  0035C2  6E03               	movwf	i2___wmul@multiplicand^0,c
 16898  0035C4  ECA7  F027         	call	i2___wmul	;wreg free
 16899  0035C8  0EB5               	movlw	low _theXF
 16900  0035CA  2401               	addwf	?i2___wmul^0,w,c
 16901  0035CC  6ED9               	movwf	fsr2l,c
 16902  0035CE  0E00               	movlw	high _theXF
 16903  0035D0  2002               	addwfc	(?i2___wmul+1)^0,w,c
 16904  0035D2  6EDA               	movwf	fsr2h,c
 16905  0035D4  06DE               	decf	postinc2,f,c
 16906  0035D6  0E00               	movlw	0
 16907  0035D8  5ADD               	subwfb	postdec2,f,c
 16908                           
 16909                           ;xf/xf.c: 148:             if (theXF.timerList[i].tm ==0)
 16910  0035DA  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 16911  0035DE  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 16912  0035E2  0E00               	movlw	0
 16913  0035E4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 16914  0035E6  0E03               	movlw	3
 16915  0035E8  6E03               	movwf	i2___wmul@multiplicand^0,c
 16916  0035EA  ECA7  F027         	call	i2___wmul	;wreg free
 16917  0035EE  0EB5               	movlw	low _theXF
 16918  0035F0  2401               	addwf	?i2___wmul^0,w,c
 16919  0035F2  6ED9               	movwf	fsr2l,c
 16920  0035F4  0E00               	movlw	high _theXF
 16921  0035F6  2002               	addwfc	(?i2___wmul+1)^0,w,c
 16922  0035F8  6EDA               	movwf	fsr2h,c
 16923  0035FA  50DE               	movf	postinc2,w,c
 16924  0035FC  10DE               	iorwf	postinc2,w,c
 16925  0035FE  A4D8               	btfss	status,2,c
 16926  003600  EF04  F01B         	goto	i2u407_41
 16927  003604  EF06  F01B         	goto	i2u407_40
 16928  003608                     i2u407_41:
 16929  003608  EF3E  F01B         	goto	i2l6940
 16930  00360C                     i2u407_40:
 16931  00360C                     
 16932                           ;xf/xf.c: 149:             {;xf/xf.c: 150:                 if(XF_pushEvent(theXF.timerLi
      +                          st[i].ev, 1) == 1)
 16933  00360C  0E01               	movlw	1
 16934  00360E  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 16935  003610  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 16936  003614  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 16937  003618  0E00               	movlw	0
 16938  00361A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 16939  00361C  0E03               	movlw	3
 16940  00361E  6E03               	movwf	i2___wmul@multiplicand^0,c
 16941  003620  ECA7  F027         	call	i2___wmul	;wreg free
 16942  003624  0EB7               	movlw	low (_theXF+2)
 16943  003626  2401               	addwf	?i2___wmul^0,w,c
 16944  003628  6ED9               	movwf	fsr2l,c
 16945  00362A  0E00               	movlw	high (_theXF+2)
 16946  00362C  2002               	addwfc	(?i2___wmul+1)^0,w,c
 16947  00362E  6EDA               	movwf	fsr2h,c
 16948  003630  50DF               	movf	indf2,w,c
 16949  003632  EC40  F025         	call	i2_XF_pushEvent
 16950  003636  06E8               	decf	wreg,f,c
 16951  003638  A4D8               	btfss	status,2,c
 16952  00363A  EF21  F01B         	goto	i2u408_41
 16953  00363E  EF23  F01B         	goto	i2u408_40
 16954  003642                     i2u408_41:
 16955  003642  EF2A  F01B         	goto	i2l6938
 16956  003646                     i2u408_40:
 16957  003646                     
 16958                           ;xf/xf.c: 151:                 {;xf/xf.c: 152:                   XF_unscheduleTimer(i, 1
      +                          );
 16959  003646  0E01               	movlw	1
 16960  003648  6E02               	movwf	XF_unscheduleTimer@inISR^0,c
 16961  00364A  500C               	movf	XF_decrementAndQueueTimers@i^0,w,c
 16962  00364C  EC2E  F027         	call	_XF_unscheduleTimer
 16963                           
 16964                           ;xf/xf.c: 153:                 }
 16965  003650  EF3E  F01B         	goto	i2l6940
 16966  003654                     i2l6938:
 16967                           
 16968                           ;xf/xf.c: 155:                 {;xf/xf.c: 156:                   theXF.timerList[i].tm=1
      +                          ;
 16969  003654  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 16970  003658  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 16971  00365C  0E00               	movlw	0
 16972  00365E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 16973  003660  0E03               	movlw	3
 16974  003662  6E03               	movwf	i2___wmul@multiplicand^0,c
 16975  003664  ECA7  F027         	call	i2___wmul	;wreg free
 16976  003668  0EB5               	movlw	low _theXF
 16977  00366A  2401               	addwf	?i2___wmul^0,w,c
 16978  00366C  6ED9               	movwf	fsr2l,c
 16979  00366E  0E00               	movlw	high _theXF
 16980  003670  2002               	addwfc	(?i2___wmul+1)^0,w,c
 16981  003672  6EDA               	movwf	fsr2h,c
 16982  003674  0E01               	movlw	1
 16983  003676  6EDE               	movwf	postinc2,c
 16984  003678  0E00               	movlw	0
 16985  00367A  6EDD               	movwf	postdec2,c
 16986  00367C                     i2l6940:
 16987                           
 16988                           ;xf/xf.c: 160:     }
 16989  00367C  4A0C               	infsnz	XF_decrementAndQueueTimers@i^0,f,c
 16990  00367E  2A0D               	incf	(XF_decrementAndQueueTimers@i+1)^0,f,c
 16991  003680  BE0D               	btfsc	(XF_decrementAndQueueTimers@i+1)^0,7,c
 16992  003682  EF4C  F01B         	goto	i2u409_41
 16993  003686  500D               	movf	(XF_decrementAndQueueTimers@i+1)^0,w,c
 16994  003688  E109               	bnz	i2u409_40
 16995  00368A  0E08               	movlw	8
 16996  00368C  5C0C               	subwf	XF_decrementAndQueueTimers@i^0,w,c
 16997  00368E  A0D8               	btfss	status,0,c
 16998  003690  EF4C  F01B         	goto	i2u409_41
 16999  003694  EF4E  F01B         	goto	i2u409_40
 17000  003698                     i2u409_41:
 17001  003698  EFC2  F01A         	goto	i2l6930
 17002  00369C                     i2u409_40:
 17003  00369C  0012               	return		;funcret
 17004  00369E                     __end_of_XF_decrementAndQueueTimers:
 17005                           	callstack 0
 17006                           
 17007 ;; *************** function i2___wmul *****************
 17008 ;; Defined at:
 17009 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 17010 ;; Parameters:    Size  Location     Type
 17011 ;;  multiplier      2    0[COMRAM] unsigned int 
 17012 ;;  multiplicand    2    2[COMRAM] unsigned int 
 17013 ;; Auto vars:     Size  Location     Type
 17014 ;;  product         2    4[COMRAM] unsigned int 
 17015 ;; Return value:  Size  Location     Type
 17016 ;;                  2    0[COMRAM] unsigned int 
 17017 ;; Registers used:
 17018 ;;		wreg, status,2, status,0, prodl, prodh
 17019 ;; Tracked objects:
 17020 ;;		On entry : 0/0
 17021 ;;		On exit  : 0/0
 17022 ;;		Unchanged: 0/0
 17023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17024 ;;      Params:         4       0       0       0       0       0       0
 17025 ;;      Locals:         2       0       0       0       0       0       0
 17026 ;;      Temps:          0       0       0       0       0       0       0
 17027 ;;      Totals:         6       0       0       0       0       0       0
 17028 ;;Total ram usage:        6 bytes
 17029 ;; Hardware stack levels used: 1
 17030 ;; This function calls:
 17031 ;;		Nothing
 17032 ;; This function is called by:
 17033 ;;		_XF_decrementAndQueueTimers
 17034 ;; This function uses a non-reentrant model
 17035 ;;
 17036                           
 17037                           	psect	text71
 17038  004F4E                     __ptext71:
 17039                           	callstack 0
 17040  004F4E                     i2___wmul:
 17041                           	callstack 17
 17042  004F4E  5001               	movf	i2___wmul@multiplier^0,w,c
 17043  004F50  0203               	mulwf	i2___wmul@multiplicand^0,c
 17044  004F52  CFF3 F005          	movff	prodl,i2___wmul@product
 17045  004F56  CFF4 F006          	movff	prodh,i2___wmul@product+1
 17046  004F5A  5001               	movf	i2___wmul@multiplier^0,w,c
 17047  004F5C  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 17048  004F5E  50F3               	movf	243,w,c
 17049  004F60  2606               	addwf	(i2___wmul@product+1)^0,f,c
 17050  004F62  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 17051  004F64  0203               	mulwf	i2___wmul@multiplicand^0,c
 17052  004F66  50F3               	movf	243,w,c
 17053  004F68  2606               	addwf	(i2___wmul@product+1)^0,f,c
 17054  004F6A  C005  F001         	movff	i2___wmul@product,?i2___wmul
 17055  004F6E  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 17056  004F72  0012               	return		;funcret
 17057  004F74                     __end_ofi2___wmul:
 17058                           	callstack 0
 17059                           
 17060 ;; *************** function i2_XF_pushEvent *****************
 17061 ;; Defined at:
 17062 ;;		line 49 in file "xf/xf.c"
 17063 ;; Parameters:    Size  Location     Type
 17064 ;;  ev              1    wreg     unsigned char 
 17065 ;;  inISR           1    6[COMRAM] _Bool 
 17066 ;; Auto vars:     Size  Location     Type
 17067 ;;  ev              1    7[COMRAM] unsigned char 
 17068 ;;  temp            1    8[COMRAM] unsigned char 
 17069 ;; Return value:  Size  Location     Type
 17070 ;;                  1    wreg      _Bool 
 17071 ;; Registers used:
 17072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17073 ;; Tracked objects:
 17074 ;;		On entry : 0/0
 17075 ;;		On exit  : 0/0
 17076 ;;		Unchanged: 0/0
 17077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17078 ;;      Params:         1       0       0       0       0       0       0
 17079 ;;      Locals:         2       0       0       0       0       0       0
 17080 ;;      Temps:          0       0       0       0       0       0       0
 17081 ;;      Totals:         3       0       0       0       0       0       0
 17082 ;;Total ram usage:        3 bytes
 17083 ;; Hardware stack levels used: 1
 17084 ;; Hardware stack levels required when called: 1
 17085 ;; This function calls:
 17086 ;;		i2_ENTERCRITICAL
 17087 ;;		i2_LEAVECRITICAL
 17088 ;;		i2___awmod
 17089 ;; This function is called by:
 17090 ;;		_XF_decrementAndQueueTimers
 17091 ;;		_isr
 17092 ;; This function uses a non-reentrant model
 17093 ;;
 17094                           
 17095                           	psect	text72
 17096  004A80                     __ptext72:
 17097                           	callstack 0
 17098  004A80                     i2_XF_pushEvent:
 17099                           	callstack 17
 17100                           
 17101                           ;incstack = 0
 17102                           ;i2XF_pushEvent@ev stored from wreg
 17103  004A80  6E08               	movwf	i2XF_pushEvent@ev^0,c
 17104  004A82                     
 17105                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 17106  004A82  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 17107  004A84  ECFF  F027         	call	i2_ENTERCRITICAL
 17108  004A88                     
 17109                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 17110  004A88  0E01               	movlw	1
 17111  004A8A  0100               	movlb	0	; () banked
 17112  004A8C  25D9               	addwf	(_theXF+36)& (0+255),w,b
 17113  004A8E  6E01               	movwf	i2___awmod@dividend^0,c
 17114  004A90  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 17115  004A92  0E00               	movlw	0
 17116  004A94  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
 17117  004A96  0E00               	movlw	0
 17118  004A98  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 17119  004A9A  0E0C               	movlw	12
 17120  004A9C  6E03               	movwf	i2___awmod@divisor^0,c
 17121  004A9E  ECD3  F021         	call	i2___awmod	;wreg free
 17122  004AA2  5001               	movf	?i2___awmod^0,w,c
 17123  004AA4  6E09               	movwf	i2XF_pushEvent@temp^0,c
 17124  004AA6                     
 17125                           ;xf/xf.c: 55:     if(temp == theXF.out)
 17126  004AA6  5009               	movf	i2XF_pushEvent@temp^0,w,c
 17127  004AA8  0100               	movlb	0	; () banked
 17128  004AAA  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 17129  004AAC  A4D8               	btfss	status,2,c
 17130  004AAE  EF5B  F025         	goto	i2u404_41
 17131  004AB2  EF5D  F025         	goto	i2u404_40
 17132  004AB6                     i2u404_41:
 17133  004AB6  EF63  F025         	goto	i2l6846
 17134  004ABA                     i2u404_40:
 17135  004ABA                     
 17136                           ; BSR set to: 0
 17137                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 17138  004ABA  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 17139  004ABC  ECF4  F027         	call	i2_LEAVECRITICAL
 17140  004AC0                     
 17141                           ;xf/xf.c: 58:       return 0;
 17142  004AC0  0E00               	movlw	0
 17143  004AC2  EF71  F025         	goto	i2l655
 17144  004AC6                     i2l6846:
 17145                           
 17146                           ; BSR set to: 0
 17147                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 17148  004AC6  0ECD               	movlw	low (_theXF+24)
 17149  004AC8  25D9               	addwf	(_theXF+36)& (0+255),w,b
 17150  004ACA  6ED9               	movwf	fsr2l,c
 17151  004ACC  6ADA               	clrf	fsr2h,c
 17152  004ACE  0E00               	movlw	high (_theXF+24)
 17153  004AD0  22DA               	addwfc	fsr2h,f,c
 17154  004AD2  C008  FFDF         	movff	i2XF_pushEvent@ev,indf2
 17155  004AD6                     
 17156                           ; BSR set to: 0
 17157                           ;xf/xf.c: 61:     theXF.in = temp;
 17158  004AD6  C009  F0D9         	movff	i2XF_pushEvent@temp,_theXF+36
 17159  004ADA                     
 17160                           ; BSR set to: 0
 17161                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 17162  004ADA  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 17163  004ADC  ECF4  F027         	call	i2_LEAVECRITICAL
 17164  004AE0                     
 17165                           ;xf/xf.c: 63:     return 1;
 17166  004AE0  0E01               	movlw	1
 17167  004AE2                     i2l655:
 17168  004AE2  0012               	return		;funcret
 17169  004AE4                     __end_ofi2_XF_pushEvent:
 17170                           	callstack 0
 17171                           
 17172 ;; *************** function i2___awmod *****************
 17173 ;; Defined at:
 17174 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;  dividend        2    0[COMRAM] int 
 17177 ;;  divisor         2    2[COMRAM] int 
 17178 ;; Auto vars:     Size  Location     Type
 17179 ;;  sign            1    5[COMRAM] unsigned char 
 17180 ;;  counter         1    4[COMRAM] unsigned char 
 17181 ;; Return value:  Size  Location     Type
 17182 ;;                  2    0[COMRAM] int 
 17183 ;; Registers used:
 17184 ;;		wreg, status,2, status,0
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17190 ;;      Params:         4       0       0       0       0       0       0
 17191 ;;      Locals:         2       0       0       0       0       0       0
 17192 ;;      Temps:          0       0       0       0       0       0       0
 17193 ;;      Totals:         6       0       0       0       0       0       0
 17194 ;;Total ram usage:        6 bytes
 17195 ;; Hardware stack levels used: 1
 17196 ;; This function calls:
 17197 ;;		Nothing
 17198 ;; This function is called by:
 17199 ;;		i2_XF_pushEvent
 17200 ;; This function uses a non-reentrant model
 17201 ;;
 17202                           
 17203                           	psect	text73
 17204  0043A6                     __ptext73:
 17205                           	callstack 0
 17206  0043A6                     i2___awmod:
 17207                           	callstack 17
 17208  0043A6  0E00               	movlw	0
 17209  0043A8  6E06               	movwf	i2___awmod@sign^0,c
 17210  0043AA  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 17211  0043AC  EFDC  F021         	goto	i2u379_40
 17212  0043B0  EFDA  F021         	goto	i2u379_41
 17213  0043B4                     i2u379_41:
 17214  0043B4  EFE2  F021         	goto	i2l6576
 17215  0043B8                     i2u379_40:
 17216  0043B8  6C01               	negf	i2___awmod@dividend^0,c
 17217  0043BA  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 17218  0043BC  B0D8               	btfsc	status,0,c
 17219  0043BE  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 17220  0043C0  0E01               	movlw	1
 17221  0043C2  6E06               	movwf	i2___awmod@sign^0,c
 17222  0043C4                     i2l6576:
 17223  0043C4  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 17224  0043C6  EFE9  F021         	goto	i2u380_40
 17225  0043CA  EFE7  F021         	goto	i2u380_41
 17226  0043CE                     i2u380_41:
 17227  0043CE  EFED  F021         	goto	i2l6580
 17228  0043D2                     i2u380_40:
 17229  0043D2  6C03               	negf	i2___awmod@divisor^0,c
 17230  0043D4  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 17231  0043D6  B0D8               	btfsc	status,0,c
 17232  0043D8  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 17233  0043DA                     i2l6580:
 17234  0043DA  5003               	movf	i2___awmod@divisor^0,w,c
 17235  0043DC  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 17236  0043DE  B4D8               	btfsc	status,2,c
 17237  0043E0  EFF4  F021         	goto	i2u381_41
 17238  0043E4  EFF6  F021         	goto	i2u381_40
 17239  0043E8                     i2u381_41:
 17240  0043E8  EF1A  F022         	goto	i2l6596
 17241  0043EC                     i2u381_40:
 17242  0043EC  0E01               	movlw	1
 17243  0043EE  6E05               	movwf	i2___awmod@counter^0,c
 17244  0043F0  EFFE  F021         	goto	i2l6586
 17245  0043F4                     i2l6584:
 17246  0043F4  90D8               	bcf	status,0,c
 17247  0043F6  3603               	rlcf	i2___awmod@divisor^0,f,c
 17248  0043F8  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 17249  0043FA  2A05               	incf	i2___awmod@counter^0,f,c
 17250  0043FC                     i2l6586:
 17251  0043FC  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 17252  0043FE  EF03  F022         	goto	i2u382_41
 17253  004402  EF05  F022         	goto	i2u382_40
 17254  004406                     i2u382_41:
 17255  004406  EFFA  F021         	goto	i2l6584
 17256  00440A                     i2u382_40:
 17257  00440A                     i2l6588:
 17258  00440A  5003               	movf	i2___awmod@divisor^0,w,c
 17259  00440C  5C01               	subwf	i2___awmod@dividend^0,w,c
 17260  00440E  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 17261  004410  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 17262  004412  A0D8               	btfss	status,0,c
 17263  004414  EF0E  F022         	goto	i2u383_41
 17264  004418  EF10  F022         	goto	i2u383_40
 17265  00441C                     i2u383_41:
 17266  00441C  EF14  F022         	goto	i2l6592
 17267  004420                     i2u383_40:
 17268  004420  5003               	movf	i2___awmod@divisor^0,w,c
 17269  004422  5E01               	subwf	i2___awmod@dividend^0,f,c
 17270  004424  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 17271  004426  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 17272  004428                     i2l6592:
 17273  004428  90D8               	bcf	status,0,c
 17274  00442A  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 17275  00442C  3203               	rrcf	i2___awmod@divisor^0,f,c
 17276  00442E  2E05               	decfsz	i2___awmod@counter^0,f,c
 17277  004430  EF05  F022         	goto	i2l6588
 17278  004434                     i2l6596:
 17279  004434  5006               	movf	i2___awmod@sign^0,w,c
 17280  004436  B4D8               	btfsc	status,2,c
 17281  004438  EF20  F022         	goto	i2u384_41
 17282  00443C  EF22  F022         	goto	i2u384_40
 17283  004440                     i2u384_41:
 17284  004440  EF26  F022         	goto	i2l6600
 17285  004444                     i2u384_40:
 17286  004444  6C01               	negf	i2___awmod@dividend^0,c
 17287  004446  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 17288  004448  B0D8               	btfsc	status,0,c
 17289  00444A  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 17290  00444C                     i2l6600:
 17291  00444C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 17292  004450  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 17293  004454  0012               	return		;funcret
 17294  004456                     __end_ofi2___awmod:
 17295                           	callstack 0
 17296                           
 17297 ;; *************** function _XF_unscheduleTimer *****************
 17298 ;; Defined at:
 17299 ;;		line 125 in file "xf/xf.c"
 17300 ;; Parameters:    Size  Location     Type
 17301 ;;  id              1    wreg     unsigned char 
 17302 ;;  inISR           1    1[COMRAM] _Bool 
 17303 ;; Auto vars:     Size  Location     Type
 17304 ;;  id              1    2[COMRAM] unsigned char 
 17305 ;; Return value:  Size  Location     Type
 17306 ;;                  1    wreg      void 
 17307 ;; Registers used:
 17308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17309 ;; Tracked objects:
 17310 ;;		On entry : 0/0
 17311 ;;		On exit  : 0/0
 17312 ;;		Unchanged: 0/0
 17313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17314 ;;      Params:         1       0       0       0       0       0       0
 17315 ;;      Locals:         1       0       0       0       0       0       0
 17316 ;;      Temps:          0       0       0       0       0       0       0
 17317 ;;      Totals:         2       0       0       0       0       0       0
 17318 ;;Total ram usage:        2 bytes
 17319 ;; Hardware stack levels used: 1
 17320 ;; Hardware stack levels required when called: 1
 17321 ;; This function calls:
 17322 ;;		i2_ENTERCRITICAL
 17323 ;;		i2_LEAVECRITICAL
 17324 ;; This function is called by:
 17325 ;;		_XF_decrementAndQueueTimers
 17326 ;; This function uses a non-reentrant model
 17327 ;;
 17328                           
 17329                           	psect	text74
 17330  004E5C                     __ptext74:
 17331                           	callstack 0
 17332  004E5C                     _XF_unscheduleTimer:
 17333                           	callstack 16
 17334                           
 17335                           ;incstack = 0
 17336                           ;XF_unscheduleTimer@id stored from wreg
 17337  004E5C  6E03               	movwf	XF_unscheduleTimer@id^0,c
 17338  004E5E                     
 17339                           ;xf/xf.c: 125: void XF_unscheduleTimer(TimerID id, _Bool inISR);xf/xf.c: 126: {;xf/xf.c:
      +                           127:     ENTERCRITICAL(inISR);
 17340  004E5E  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 17341  004E60  ECFF  F027         	call	i2_ENTERCRITICAL
 17342  004E64                     
 17343                           ;xf/xf.c: 128:     theXF.timerList[id].tm = 0;
 17344  004E64  5003               	movf	XF_unscheduleTimer@id^0,w,c
 17345  004E66  0D03               	mullw	3
 17346  004E68  0EB5               	movlw	low _theXF
 17347  004E6A  24F3               	addwf	243,w,c
 17348  004E6C  6ED9               	movwf	fsr2l,c
 17349  004E6E  0E00               	movlw	high _theXF
 17350  004E70  20F4               	addwfc	prodh,w,c
 17351  004E72  6EDA               	movwf	fsr2h,c
 17352  004E74  0E00               	movlw	0
 17353  004E76  6EDE               	movwf	postinc2,c
 17354  004E78  0E00               	movlw	0
 17355  004E7A  6EDD               	movwf	postdec2,c
 17356  004E7C                     
 17357                           ;xf/xf.c: 129:     theXF.timerList[id].ev = NULLEVENT;
 17358  004E7C  5003               	movf	XF_unscheduleTimer@id^0,w,c
 17359  004E7E  0D03               	mullw	3
 17360  004E80  0EB7               	movlw	low (_theXF+2)
 17361  004E82  24F3               	addwf	243,w,c
 17362  004E84  6ED9               	movwf	fsr2l,c
 17363  004E86  0E00               	movlw	high (_theXF+2)
 17364  004E88  20F4               	addwfc	prodh,w,c
 17365  004E8A  6EDA               	movwf	fsr2h,c
 17366  004E8C  0E00               	movlw	0
 17367  004E8E  6EDF               	movwf	indf2,c
 17368                           
 17369                           ;xf/xf.c: 130:     LEAVECRITICAL(inISR);
 17370  004E90  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 17371  004E92  ECF4  F027         	call	i2_LEAVECRITICAL
 17372  004E96  0012               	return		;funcret
 17373  004E98                     __end_of_XF_unscheduleTimer:
 17374                           	callstack 0
 17375                           
 17376 ;; *************** function i2_LEAVECRITICAL *****************
 17377 ;; Defined at:
 17378 ;;		line 186 in file "xf/xf.c"
 17379 ;; Parameters:    Size  Location     Type
 17380 ;;  inISR           1    wreg     _Bool 
 17381 ;; Auto vars:     Size  Location     Type
 17382 ;;  inISR           1    0[COMRAM] _Bool 
 17383 ;; Return value:  Size  Location     Type
 17384 ;;                  1    wreg      void 
 17385 ;; Registers used:
 17386 ;;		wreg, status,2
 17387 ;; Tracked objects:
 17388 ;;		On entry : 0/0
 17389 ;;		On exit  : 0/0
 17390 ;;		Unchanged: 0/0
 17391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17392 ;;      Params:         0       0       0       0       0       0       0
 17393 ;;      Locals:         1       0       0       0       0       0       0
 17394 ;;      Temps:          0       0       0       0       0       0       0
 17395 ;;      Totals:         1       0       0       0       0       0       0
 17396 ;;Total ram usage:        1 bytes
 17397 ;; Hardware stack levels used: 1
 17398 ;; This function calls:
 17399 ;;		Nothing
 17400 ;; This function is called by:
 17401 ;;		_XF_unscheduleTimer
 17402 ;;		i2_XF_pushEvent
 17403 ;; This function uses a non-reentrant model
 17404 ;;
 17405                           
 17406                           	psect	text75
 17407  004FE8                     __ptext75:
 17408                           	callstack 0
 17409  004FE8                     i2_LEAVECRITICAL:
 17410                           	callstack 17
 17411                           
 17412                           ;incstack = 0
 17413                           ;i2LEAVECRITICAL@inISR stored from wreg
 17414  004FE8  6E01               	movwf	i2LEAVECRITICAL@inISR^0,c
 17415  004FEA                     
 17416                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 17417  004FEA  5001               	movf	i2LEAVECRITICAL@inISR^0,w,c
 17418  004FEC  A4D8               	btfss	status,2,c
 17419  004FEE  EFFB  F027         	goto	i2u378_41
 17420  004FF2  EFFD  F027         	goto	i2u378_40
 17421  004FF6                     i2u378_41:
 17422  004FF6  EFFE  F027         	goto	i2l685
 17423  004FFA                     i2u378_40:
 17424  004FFA                     
 17425                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 17426  004FFA  8EF2               	bsf	4082,7,c	;volatile
 17427  004FFC                     i2l685:
 17428  004FFC  0012               	return		;funcret
 17429  004FFE                     __end_ofi2_LEAVECRITICAL:
 17430                           	callstack 0
 17431                           
 17432 ;; *************** function i2_ENTERCRITICAL *****************
 17433 ;; Defined at:
 17434 ;;		line 172 in file "xf/xf.c"
 17435 ;; Parameters:    Size  Location     Type
 17436 ;;  inISR           1    wreg     _Bool 
 17437 ;; Auto vars:     Size  Location     Type
 17438 ;;  inISR           1    0[COMRAM] _Bool 
 17439 ;; Return value:  Size  Location     Type
 17440 ;;                  1    wreg      void 
 17441 ;; Registers used:
 17442 ;;		wreg, status,2
 17443 ;; Tracked objects:
 17444 ;;		On entry : 0/0
 17445 ;;		On exit  : 0/0
 17446 ;;		Unchanged: 0/0
 17447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17448 ;;      Params:         0       0       0       0       0       0       0
 17449 ;;      Locals:         1       0       0       0       0       0       0
 17450 ;;      Temps:          0       0       0       0       0       0       0
 17451 ;;      Totals:         1       0       0       0       0       0       0
 17452 ;;Total ram usage:        1 bytes
 17453 ;; Hardware stack levels used: 1
 17454 ;; This function calls:
 17455 ;;		Nothing
 17456 ;; This function is called by:
 17457 ;;		_XF_unscheduleTimer
 17458 ;;		i2_XF_pushEvent
 17459 ;; This function uses a non-reentrant model
 17460 ;;
 17461                           
 17462                           	psect	text76
 17463  004FFE                     __ptext76:
 17464                           	callstack 0
 17465  004FFE                     i2_ENTERCRITICAL:
 17466                           	callstack 17
 17467                           
 17468                           ;incstack = 0
 17469                           ;i2ENTERCRITICAL@inISR stored from wreg
 17470  004FFE  6E01               	movwf	i2ENTERCRITICAL@inISR^0,c
 17471  005000                     
 17472                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 17473  005000  5001               	movf	i2ENTERCRITICAL@inISR^0,w,c
 17474  005002  A4D8               	btfss	status,2,c
 17475  005004  EF06  F028         	goto	i2u377_41
 17476  005008  EF08  F028         	goto	i2u377_40
 17477  00500C                     i2u377_41:
 17478  00500C  EF09  F028         	goto	i2l681
 17479  005010                     i2u377_40:
 17480  005010                     
 17481                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 17482  005010  9EF2               	bcf	4082,7,c	;volatile
 17483  005012                     i2l681:
 17484  005012  0012               	return		;funcret
 17485  005014                     __end_ofi2_ENTERCRITICAL:
 17486                           	callstack 0
 17487                           
 17488                           	psect	rparam
 17489  0000                     
 17490                           	psect	temp
 17491  00004E                     btemp:
 17492                           	callstack 0
 17493  00004E                     	ds	1
 17494  0000                     int$flags	set	btemp
 17495  0000                     wtemp8	set	btemp+1
 17496  0000                     ttemp5	set	btemp+1
 17497  0000                     ttemp6	set	btemp+4
 17498  0000                     ttemp7	set	btemp+8
 17499                           
 17500                           	psect	idloc
 17501                           
 17502                           ;Config register IDLOC0 @ 0x200000
 17503                           ;	unspecified, using default values
 17504  200000                     	org	2097152
 17505  200000  FF                 	db	255
 17506                           
 17507                           ;Config register IDLOC1 @ 0x200001
 17508                           ;	unspecified, using default values
 17509  200001                     	org	2097153
 17510  200001  FF                 	db	255
 17511                           
 17512                           ;Config register IDLOC2 @ 0x200002
 17513                           ;	unspecified, using default values
 17514  200002                     	org	2097154
 17515  200002  FF                 	db	255
 17516                           
 17517                           ;Config register IDLOC3 @ 0x200003
 17518                           ;	unspecified, using default values
 17519  200003                     	org	2097155
 17520  200003  FF                 	db	255
 17521                           
 17522                           ;Config register IDLOC4 @ 0x200004
 17523                           ;	unspecified, using default values
 17524  200004                     	org	2097156
 17525  200004  FF                 	db	255
 17526                           
 17527                           ;Config register IDLOC5 @ 0x200005
 17528                           ;	unspecified, using default values
 17529  200005                     	org	2097157
 17530  200005  FF                 	db	255
 17531                           
 17532                           ;Config register IDLOC6 @ 0x200006
 17533                           ;	unspecified, using default values
 17534  200006                     	org	2097158
 17535  200006  FF                 	db	255
 17536                           
 17537                           ;Config register IDLOC7 @ 0x200007
 17538                           ;	unspecified, using default values
 17539  200007                     	org	2097159
 17540  200007  FF                 	db	255
 17541                           
 17542                           	psect	config
 17543                           
 17544                           ; Padding undefined space
 17545  300000                     	org	3145728
 17546  300000  FF                 	db	255
 17547                           
 17548                           ;Config register CONFIG1H @ 0x300001
 17549                           ;	Oscillator Selection bits
 17550                           ;	FOSC = INTIO67, Internal oscillator block
 17551                           ;	4X PLL Enable
 17552                           ;	PLLCFG = ON, Oscillator multiplied by 4
 17553                           ;	Primary clock enable bit
 17554                           ;	PRICLKEN = ON, Primary clock is always enabled
 17555                           ;	Fail-Safe Clock Monitor Enable bit
 17556                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 17557                           ;	Internal/External Oscillator Switchover bit
 17558                           ;	IESO = OFF, Oscillator Switchover mode disabled
 17559  300001                     	org	3145729
 17560  300001  38                 	db	56
 17561                           
 17562                           ;Config register CONFIG2L @ 0x300002
 17563                           ;	Power-up Timer Enable bit
 17564                           ;	PWRTEN = OFF, Power up timer disabled
 17565                           ;	Brown-out Reset Enable bits
 17566                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 17567                           ;	Brown Out Reset Voltage bits
 17568                           ;	BORV = 190, VBOR set to 1.90 V nominal
 17569  300002                     	org	3145730
 17570  300002  1F                 	db	31
 17571                           
 17572                           ;Config register CONFIG2H @ 0x300003
 17573                           ;	Watchdog Timer Enable bits
 17574                           ;	WDTEN = SWON, WDT is controlled by SWDTEN bit of the WDTCON register
 17575                           ;	Watchdog Timer Postscale Select bits
 17576                           ;	WDTPS = 32768, 1:32768
 17577  300003                     	org	3145731
 17578  300003  3E                 	db	62
 17579                           
 17580                           ; Padding undefined space
 17581  300004                     	org	3145732
 17582  300004  FF                 	db	255
 17583                           
 17584                           ;Config register CONFIG3H @ 0x300005
 17585                           ;	CCP2 MUX bit
 17586                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 17587                           ;	PORTB A/D Enable bit
 17588                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 17589                           ;	P3A/CCP3 Mux bit
 17590                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 17591                           ;	HFINTOSC Fast Start-up
 17592                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 17593                           ;	Timer3 Clock input mux bit
 17594                           ;	T3CMX = PORTC0, T3CKI is on RC0
 17595                           ;	ECCP2 B output mux bit
 17596                           ;	P2BMX = PORTB5, P2B is on RB5
 17597                           ;	MCLR Pin Enable bit
 17598                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 17599  300005                     	org	3145733
 17600  300005  BD                 	db	189
 17601                           
 17602                           ;Config register CONFIG4L @ 0x300006
 17603                           ;	Stack Full/Underflow Reset Enable bit
 17604                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17605                           ;	Single-Supply ICSP Enable bit
 17606                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 17607                           ;	Extended Instruction Set Enable bit
 17608                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17609                           ;	Background Debug
 17610                           ;	DEBUG = 0x1, unprogrammed default
 17611  300006                     	org	3145734
 17612  300006  85                 	db	133
 17613                           
 17614                           ; Padding undefined space
 17615  300007                     	org	3145735
 17616  300007  FF                 	db	255
 17617                           
 17618                           ;Config register CONFIG5L @ 0x300008
 17619                           ;	Code Protection Block 0
 17620                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 17621                           ;	Code Protection Block 1
 17622                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 17623                           ;	Code Protection Block 2
 17624                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 17625                           ;	Code Protection Block 3
 17626                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 17627  300008                     	org	3145736
 17628  300008  0F                 	db	15
 17629                           
 17630                           ;Config register CONFIG5H @ 0x300009
 17631                           ;	Boot Block Code Protection bit
 17632                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 17633                           ;	Data EEPROM Code Protection bit
 17634                           ;	CPD = OFF, Data EEPROM not code-protected
 17635  300009                     	org	3145737
 17636  300009  C0                 	db	192
 17637                           
 17638                           ;Config register CONFIG6L @ 0x30000A
 17639                           ;	Write Protection Block 0
 17640                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 17641                           ;	Write Protection Block 1
 17642                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 17643                           ;	Write Protection Block 2
 17644                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 17645                           ;	Write Protection Block 3
 17646                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 17647  30000A                     	org	3145738
 17648  30000A  0F                 	db	15
 17649                           
 17650                           ;Config register CONFIG6H @ 0x30000B
 17651                           ;	Configuration Register Write Protection bit
 17652                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 17653                           ;	Boot Block Write Protection bit
 17654                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 17655                           ;	Data EEPROM Write Protection bit
 17656                           ;	WRTD = OFF, Data EEPROM not write-protected
 17657  30000B                     	org	3145739
 17658  30000B  E0                 	db	224
 17659                           
 17660                           ;Config register CONFIG7L @ 0x30000C
 17661                           ;	Table Read Protection Block 0
 17662                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 17663                           ;	Table Read Protection Block 1
 17664                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 17665                           ;	Table Read Protection Block 2
 17666                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 17667                           ;	Table Read Protection Block 3
 17668                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 17669  30000C                     	org	3145740
 17670  30000C  0F                 	db	15
 17671                           
 17672                           ;Config register CONFIG7H @ 0x30000D
 17673                           ;	Boot Block Table Read Protection bit
 17674                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 17675  30000D                     	org	3145741
 17676  30000D  40                 	db	64
 17677                           tosu	equ	0xFFF
 17678                           tosh	equ	0xFFE
 17679                           tosl	equ	0xFFD
 17680                           stkptr	equ	0xFFC
 17681                           pclatu	equ	0xFFB
 17682                           pclath	equ	0xFFA
 17683                           pcl	equ	0xFF9
 17684                           tblptru	equ	0xFF8
 17685                           tblptrh	equ	0xFF7
 17686                           tblptrl	equ	0xFF6
 17687                           tablat	equ	0xFF5
 17688                           prodh	equ	0xFF4
 17689                           prodl	equ	0xFF3
 17690                           indf0	equ	0xFEF
 17691                           postinc0	equ	0xFEE
 17692                           postdec0	equ	0xFED
 17693                           preinc0	equ	0xFEC
 17694                           plusw0	equ	0xFEB
 17695                           fsr0h	equ	0xFEA
 17696                           fsr0l	equ	0xFE9
 17697                           wreg	equ	0xFE8
 17698                           indf1	equ	0xFE7
 17699                           postinc1	equ	0xFE6
 17700                           postdec1	equ	0xFE5
 17701                           preinc1	equ	0xFE4
 17702                           plusw1	equ	0xFE3
 17703                           fsr1h	equ	0xFE2
 17704                           fsr1l	equ	0xFE1
 17705                           bsr	equ	0xFE0
 17706                           indf2	equ	0xFDF
 17707                           postinc2	equ	0xFDE
 17708                           postdec2	equ	0xFDD
 17709                           preinc2	equ	0xFDC
 17710                           plusw2	equ	0xFDB
 17711                           fsr2h	equ	0xFDA
 17712                           fsr2l	equ	0xFD9
 17713                           status	equ	0xFD8

Data Sizes:
    Strings     95
    Constant    1867
    Data        0
    BSS         291
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      77
    BANK0           160     85     160
    BANK1           256      1     210
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    g1.font.bitmap	PTR const unsigned char  size(2) Largest target is 0
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    g1.font.descriptor	PTR const struct . size(2) Largest target is 0
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    g1.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.font	PTR struct . size(2) Largest target is 0
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.text	PTR const unsigned char  size(2) Largest target is 0
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    g1.fpPress	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_11(CODE[7]), STR_10(CODE[11]), 
		 -> STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), 
		 -> STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[11]), STR_2(CODE[10]), 
		 -> STR_1(CODE[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_11(CODE[7]), STR_10(CODE[11]), 
		 -> STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), 
		 -> STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[11]), STR_2(CODE[10]), 
		 -> STR_1(CODE[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_13(CODE[6]), STR_12(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_13(CODE[6]), STR_12(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_13(CODE[6]), STR_12(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S3719_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    backlightController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    backlightController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    backlightController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    backlightController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    backlightController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    backlightController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    backlightController@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    gameControllerController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    gameControllerController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    gameControllerController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    gameControllerController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    gameControllerController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    gameControllerController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    gameControllerController@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    gameControllerSM@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    gameControllerInit@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    displayController@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    displaySM@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    displayInit@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    touchScreenController@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    touchScreenSM@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    sleepInit@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    LCD_Bitmap@colorTablePtr	PTR unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    LCD_Bitmap@bmpPtr	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    LCD_Bitmap@strPtr	PTR struct . size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    RGB2LCD@colorTableEntry	PTR unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    LCD_DrawText@font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_DrawText@font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_DrawText@font	PTR const struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_DrawText@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), STR_11(CODE[7]), STR_10(CODE[11]), STR_9(CODE[8]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), STR_2(CODE[10]), STR_1(CODE[2]), 

    LCD_InSlider@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InSlider@slider	PTR struct . size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    LCD_InButton@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_InButton@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    LCD_InButton@button	PTR struct . size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    LCD_ButtonDraw@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonDraw@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonDraw@bmpPtr	PTR struct . size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    LCD_ButtonDraw@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonDraw@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    LCD_ButtonDraw@button	PTR struct . size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    LCD_ButtonUpdate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonUpdate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    LCD_ButtonUpdate@button	PTR struct . size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    LCD_ButtonCreate@fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonCreate@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonCreate@font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@textOrBmp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    LCD_ButtonCreate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    LCD_ButtonCreate@button	PTR struct . size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    LCD_SliderDraw@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderDraw@slider	PTR struct . size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    LCD_SliderUpdate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderUpdate@slider	PTR struct . size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    LCD_SliderCreate@fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider	PTR struct . size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    Menu_inGameDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_inGameDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_inGameDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_inGameDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_inGameDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_inGameDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_inGameDraw@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    Menu_parametersDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_parametersDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_parametersDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_parametersDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_parametersDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_parametersDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_parametersDraw@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    Menu_welcomeDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_welcomeDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_welcomeDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_welcomeDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_welcomeDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Menu_welcomeDraw@g	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    GameParameters_setY@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setY@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setY@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setY@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setY@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setY@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setY@s	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    GameParameters_setX@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setX@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setX@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setX@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setX@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setX@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setX@s	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    GameParameters_setPlayer@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setPlayer@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setPlayer@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setPlayer@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setPlayer@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setBackLight@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setBackLight@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setBackLight@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setBackLight@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setBackLight@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_setBackLight@s	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    GameParameters_init@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_init@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_init@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_init@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_init@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_init@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    GameParameters_init@s	PTR struct GameParameters size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    S165$fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    g1.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    g1.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    g1.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    g1.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    S138$fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S138$fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S138$fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S138$font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    S138$text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    g1.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_3(CODE[11]), 

    Paddle_draw@p	PTR struct Paddle size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    Paddle_addX@p	PTR struct Paddle size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    Paddle_init@p	PTR struct Paddle size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    Ball_draw@b	PTR struct Ball size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    Ball_init@b	PTR struct Ball size(2) Largest target is 221
		 -> g1(BANK1[209]), 

    S32$bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    arialNarrow_12ptFontInfo.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    S32$descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    arialNarrow_12ptFontInfo.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 


Critical Paths under _main in COMRAM

    _gameControllerInit->_gameControllerController
    _displayInit->_displayController
    _XF_init->___wmul
    _LCD_Init->_LCD_Lowlevel_Init
    _GameParameters_init->_LCD_ButtonCreate
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _XF_scheduleTimer->_ENTERCRITICAL
    _XF_scheduleTimer->_LEAVECRITICAL
    _sleepSM->_sleepController
    _gameControllerSM->_gameControllerController
    _gameControllerController->_LCD_ButtonUpdate
    _gameControllerController->_LCD_SliderUpdate
    _backlightController->_GameParameters_setBackLight
    _XF_pushEvent->___awmod
    _Paddle_addX->_LCD_DrawRect
    _displaySM->_displayController
    _Menu_welcomeDraw->_LCD_DrawText
    _Menu_parametersDraw->_LCD_SliderDraw
    _LCD_SliderDraw->_LCD_SliderUpdate
    _LCD_SliderUpdate->___lwdiv
    _Menu_inGameDraw->_Ball_draw
    _Paddle_draw->_LCD_DrawRect
    _LCD_ButtonDraw->_LCD_DrawText
    _LCD_ButtonUpdate->_LCD_DrawRect
    _LCD_Bitmap->___lwdiv
    ___lwdiv->___wmul
    _Ball_draw->_LCD_DrawText
    _LCD_DrawText->___wmul
    ___wmul->___awdiv
    _XF_popEvent->___awmod

Critical Paths under _isr in COMRAM

    _isr->_XF_decrementAndQueueTimers
    _XF_decrementAndQueueTimers->i2_XF_pushEvent
    i2_XF_pushEvent->i2___awmod
    i2_XF_pushEvent->i2___wmul
    _XF_unscheduleTimer->i2_ENTERCRITICAL
    _XF_unscheduleTimer->i2_LEAVECRITICAL

Critical Paths under _main in BANK0

    _Factory_init->_sleepInit
    _sleepInit->_displayInit
    _displayInit->_displayController
    _Factory_exec->_touchScreenSM
    _touchScreenSM->_touchScreenController
    _touchScreenController->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _displaySM->_displayController
    _displayController->_Menu_inGameDraw
    _displayController->_Menu_parametersDraw
    _displayController->_Menu_welcomeDraw
    _Menu_welcomeDraw->_LCD_ButtonDraw
    _Menu_parametersDraw->_LCD_ButtonDraw
    _Menu_inGameDraw->_LCD_ButtonDraw
    _LCD_ButtonDraw->_LCD_Bitmap

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Factory_exec

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  560095
                       _Factory_exec
                       _Factory_init
 ---------------------------------------------------------------------------------
 (1) _Factory_init                                         2     2      0  280060
                                             68 BANK0      2     2      0
                _GameParameters_init
                       _LCD_DrawText
                           _LCD_Fill
                           _LCD_Init
                            _XF_init
                          _sleepInit
 ---------------------------------------------------------------------------------
 (2) _sleepInit                                            2     0      2  256300
                                             66 BANK0      2     0      2
                        _displayInit
                 _gameControllerInit
                    _sleepController
                    _touchScreenInit
 ---------------------------------------------------------------------------------
 (3) _touchScreenInit                                      0     0      0       0
                        _configTouch
 ---------------------------------------------------------------------------------
 (3) _gameControllerInit                                   2     0      2   52627
                                             58 COMRAM     2     0      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (3) _displayInit                                          2     0      2  203521
                                             64 BANK0      2     0      2
                  _displayController
 ---------------------------------------------------------------------------------
 (2) _XF_init                                              2     2      0    3031
                                             31 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      90
                                             22 COMRAM     2     2      0
                  _LCD_Lowlevel_Init
 ---------------------------------------------------------------------------------
 (3) _LCD_Lowlevel_Init                                    5     5      0      60
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GameParameters_init                                  2     0      2    8892
                                             42 COMRAM     2     0      2
                          _Ball_init
                   _LCD_ButtonCreate
                   _LCD_SliderCreate
                        _Paddle_init
 ---------------------------------------------------------------------------------
 (3) _Paddle_init                                          4     0      4     546
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _LCD_SliderCreate                                    22     0     22    1320
                                             17 COMRAM    22     0     22
 ---------------------------------------------------------------------------------
 (3) _LCD_ButtonCreate                                    25     0     25    6478
                                             17 COMRAM    25     0     25
 ---------------------------------------------------------------------------------
 (3) _Ball_init                                            2     0      2     164
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Factory_exec                                         1     1      0  280035
                                              0 BANK1      1     1      0
                        _XF_popEvent
                          _displaySM
                   _gameControllerSM
                            _sleepSM
                      _touchScreenSM
 ---------------------------------------------------------------------------------
 (2) _touchScreenSM                                        5     3      2   22124
                                             80 BANK0      5     3      2
              _touchScreenController
 ---------------------------------------------------------------------------------
 (3) _touchScreenController                               32    30      2   21848
                                             48 BANK0     32    30      2
                _GameParameters_setX
                _GameParameters_setY
                       _LCD_DrawText
                   _XF_scheduleTimer
                      _configMeasure
                        _configTouch
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             16    10      6    8777
                                             34 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6    8111
                                             26 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           42    36      6    7638
                                             62 COMRAM     8     2      6
                                             18 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5863
                                             44 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3597
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1537
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     183
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     613
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     625
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _configTouch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _configMeasure                                        1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _XF_scheduleTimer                                     5     1      4     624
                                             18 COMRAM     5     1      4
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setY                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setX                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sleepSM                                              3     3      0     124
                                             19 COMRAM     3     3      0
                    _sleepController
 ---------------------------------------------------------------------------------
 (3) _sleepController                                      2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _gameControllerSM                                     5     3      2   52844
                                             58 COMRAM     5     3      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (4) _gameControllerController                             4     2      2   52506
                                             54 COMRAM     4     2      2
                   _LCD_ButtonUpdate
                       _LCD_InButton
                       _LCD_InSlider
                   _LCD_SliderUpdate
                        _Paddle_addX
                        _Paddle_draw
                       _XF_pushEvent
                _backlightController
 ---------------------------------------------------------------------------------
 (5) _backlightController                                  4     2      2    3552
                                             23 COMRAM     4     2      2
        _GameParameters_setBackLight
 ---------------------------------------------------------------------------------
 (6) _GameParameters_setBackLight                          6     2      4    2284
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _XF_pushEvent                                         3     2      1    1569
                                             23 COMRAM     3     2      1
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) _Paddle_addX                                         14     8      6    9684
                                             36 COMRAM    14     8      6
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (5) _LCD_InSlider                                        10     4      6     580
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _LCD_InButton                                        10     4      6    1930
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _displaySM                                            5     3      2  203769
                                             64 BANK0      5     3      2
                  _displayController
 ---------------------------------------------------------------------------------
 (4) _displayController                                    4     2      2  203400
                                             68 COMRAM     2     2      0
                                             62 BANK0      2     0      2
                    _Menu_inGameDraw
                _Menu_parametersDraw
                   _Menu_welcomeDraw
 ---------------------------------------------------------------------------------
 (5) _Menu_welcomeDraw                                     2     0      2   53066
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (5) _Menu_parametersDraw                                  2     0      2   76317
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
                     _LCD_SliderDraw
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderDraw                                      14    12      2   23220
                                             54 COMRAM    14    12      2
                       _LCD_DrawRect
                   _LCD_SliderUpdate
 ---------------------------------------------------------------------------------
 (5) _LCD_SliderUpdate                                    16    14      2   14036
                                             38 COMRAM    16    14      2
                       _LCD_DrawRect
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _Menu_inGameDraw                                      2     0      2   73474
                                             60 BANK0      2     0      2
                          _Ball_draw
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
                        _Paddle_draw
 ---------------------------------------------------------------------------------
 (5) _Paddle_draw                                         10     8      2    9042
                                             36 COMRAM    10     8      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_Fill                                             8     6      2     626
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonDraw                                      32    30      2   41136
                                             28 BANK0     32    30      2
                         _LCD_Bitmap
                   _LCD_ButtonUpdate
                       _LCD_DrawRect
                       _LCD_DrawText
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _LCD_ButtonUpdate                                    18    16      2   10451
                                             36 COMRAM    18    16      2
                       _LCD_DrawRect
                           _LCD_Read
 ---------------------------------------------------------------------------------
 (6) _LCD_Read                                            10     6      4     548
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawRect                                        19     8     11    8555
                                             17 COMRAM    19     8     11
 ---------------------------------------------------------------------------------
 (7) _LCD_Bitmap                                          38    32      6    7372
                                             38 COMRAM    10     4      6
                                              0 BANK0     28    28      0
                            _RGB2LCD
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     901
                                             31 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _RGB2LCD                                             14    12      2     499
                                             17 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (6) _Ball_draw                                            2     0      2   11304
                                             65 COMRAM     2     0      2
                       _LCD_DrawText
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawText                                        34    21     13   11121
                                             31 COMRAM    34    21     13
                            ___awdiv
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     400
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2802
                                             25 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1105
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                          2     2      0    1016
                                             23 COMRAM     2     2      0
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     793
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _LEAVECRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ENTERCRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 4     4      0    2011
                                             13 COMRAM     4     4      0
         _XF_decrementAndQueueTimers
                     i2_XF_pushEvent
 ---------------------------------------------------------------------------------
 (13) _XF_decrementAndQueueTimers                          4     4      0    1408
                                              9 COMRAM     4     4      0
                 _XF_unscheduleTimer
                     i2_XF_pushEvent
                           i2___wmul
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4     419
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) i2_XF_pushEvent                                      3     2      1     603
                                              6 COMRAM     3     2      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
                          i2___awmod
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) _XF_unscheduleTimer                                  2     1      1     208
                                              1 COMRAM     2     1      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (14) i2_LEAVECRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_ENTERCRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Factory_exec
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _displaySM
       _displayController
         _Menu_inGameDraw
           _Ball_draw
             _LCD_DrawText
               ___awdiv
               ___wmul
                 ___awdiv (ARG)
               _strlen
           _LCD_ButtonDraw
             _LCD_Bitmap
               _RGB2LCD
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
               ___wmul
             _LCD_ButtonUpdate
               _LCD_DrawRect
               _LCD_Read
             _LCD_DrawRect
             _LCD_DrawText
             ___awdiv
             _strlen
           _LCD_DrawText
           _LCD_Fill
           _Paddle_draw
             _LCD_DrawRect
         _Menu_parametersDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
           _LCD_SliderDraw
             _LCD_DrawRect
             _LCD_SliderUpdate
               _LCD_DrawRect
               ___lwdiv
               ___wmul
         _Menu_welcomeDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
     _gameControllerSM
       _gameControllerController
         _LCD_ButtonUpdate
         _LCD_InButton
         _LCD_InSlider
         _LCD_SliderUpdate
         _Paddle_addX
           _LCD_DrawRect
         _Paddle_draw
         _XF_pushEvent
           _ENTERCRITICAL
           _LEAVECRITICAL
           ___awmod
         _backlightController
           _GameParameters_setBackLight
     _sleepSM
       _sleepController
     _touchScreenSM
       _touchScreenController
         _GameParameters_setX
         _GameParameters_setY
         _LCD_DrawText
         _XF_scheduleTimer
           _ENTERCRITICAL
           _LEAVECRITICAL
         _configMeasure
         _configTouch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
   _Factory_init
     _GameParameters_init
       _Ball_init
       _LCD_ButtonCreate
       _LCD_SliderCreate
       _Paddle_init
     _LCD_DrawText
     _LCD_Fill
     _LCD_Init
       _LCD_Lowlevel_Init
     _XF_init
       ___wmul
     _sleepInit
       _displayInit
         _displayController
       _gameControllerInit
         _gameControllerController
       _sleepController
       _touchScreenInit
         _configTouch

 _isr (ROOT)
   _XF_decrementAndQueueTimers
     _XF_unscheduleTimer
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
     i2_XF_pushEvent
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
       i2___awmod
       i2___wmul (ARG)
     i2___wmul
   i2_XF_pushEvent

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      1      D2       6       82.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     55      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4D       1       81.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BF       9        0.0%
DATA                 0      0     1BF      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 02 16:06:47 2021

                      _LCD_ButtonDraw 06AA                           ?_LCD_Bitmap 0027  
                                   l7 4D44                      _LCD_ButtonCreate 37AC  
                        ?_displayInit 00A0                  __end_of_Factory_exec 4C54  
                __end_of_Factory_init 42F6                                    l30 314C  
                                  l23 3C26                                    l16 4BFC  
                                  l33 44FA                                    _g1 0100  
                        ___awdiv@sign 0017               __end_of_sleepController 4ECE  
                   ??i2_ENTERCRITICAL 0001              __end_of_Menu_welcomeDraw 4866  
                 ___wmul@multiplicand 001C                  backlightController@g 0018  
                    _LCD_ButtonUpdate 2994                         ?_LCD_InButton 0012  
                       ?_LCD_InSlider 0012                         ?_LCD_DrawRect 0012  
                       ?_LCD_DrawText 0020                                   l100 42F4  
                                 l104 4C52                                   l202 2992  
                                 l131 20CE                                   l222 106C  
                                 l303 1954                                   l207 4084  
                                 l215 3992                                   l312 06A8  
                                 l136 4E1A                                   l209 40C8  
                                 l225 37AA                                   l145 4FBA  
                                 l306 4186                                   l234 2BC8  
                                 l243 0B96                                   l171 46D6  
                                 l148 4FA4                                   l228 38A4  
                                 l165 4864                                   l501 2C5C  
                                 l254 3A70                                   l271 2278  
                                 l247 3B4E                                   l511 4F8E  
                                 l280 23DE                                   l264 21B4  
                                 l168 47EC                                   l408 459C  
                                 l417 4ECC                                   l274 22D6  
                                 l282 2408                                   l266 21C0  
                                 l610 1D64                                   l516 4CF6  
                                 l508 2DF4                                   l277 2370  
                                 l382 357A                                   l630 14EE  
                                 l544 3DBA                                   l376 463A  
                                 l553 49B6                                   l529 5026  
                                 l651 423E                                   l395 4F26  
                                 l636 150A                                   l734 4F4C  
                                 l478 5054                                   l655 4A1A  
                                 l496 2BDC                                   l728 503E  
                                 l681 4FE6                                   l593 3E80  
                                 l665 48D8                                   l489 476A  
                                 l578 5038                                   l659 4BA4  
                                 l685 4FD0                                   l861 3438  
                                 l598 19D4                                   l599 1A4E  
                                 l848 32D4                                   l965 3F44  
                                 l978 43A4                                   _GIE 007F97  
                                 _PR2 000FBB                                   _abs 4E1C  
                                 _pad 3F46                                   _isr 0008  
                configMeasure@channel 0012                       ??_ENTERCRITICAL 0012  
                        ___awmod@sign 0017                                   prod 000FF3  
                                 wreg 000FE8                __size_of_touchScreenSM 0094  
                     __end_of_RGB2LCD 4188                      _touchScreenState 00DE  
                       ??_Paddle_addX 002B                                  ?_abs 0024  
                                l1232 494C                                  l1225 4944  
                                l1242 4A7E                                  l1235 4A76  
                                l1412 4CA4                                  l1503 3CF0  
                                l1511 4DD6                                  l1520 4D92  
                                l1514 5056                                  l1442 3FCC  
                                l1450 24AA                                  l1444 4006  
                                l1452 24B2                                  l1470 26EA  
                                l1439 3F8A                                  l1491 4E5A  
                                l1483 4B3C                                  l1484 4B44  
                                l1477 2FA8                                  l1488 4E52  
                                l3440 45AA                                  l3442 45AC  
                                l3610 2724                                  l3452 45C2  
                                l3444 45AE                                  l3436 459E  
                                l3700 27BA                                  l3620 2732  
                                l3612 2726                                  l3604 2700  
                                l3454 45D0                                  l3446 45B0  
                                l3438 45A6                                  l3710 27C8  
                                l3702 27C0                                  l3630 2744  
                                l3622 2738                                  l3614 2728  
                                l3606 270E                                  l3464 4606  
                                l3456 45DC                                  l3800 286A  
                                l3720 27DA                                  l3712 27CE  
                                l3704 27C2                                  l3640 2752  
                                l3632 2746                                  l3624 273A  
                                l3616 272A                                  l3608 2720  
                                l3466 4614                                  l3458 45F6  
                                l3810 287C                                  l3802 286C  
                                l3730 27E8                                  l3722 27DC  
                                l3714 27D0                                  l3706 27C4  
                                l3650 2768                                  l3642 2758  
                                l3634 274C                                  l3626 273C  
                                l3618 2730                                  l3468 4620  
                                l3900 292A                                  l3820 2892  
                                l3812 2882                                  l3804 2872  
                                l3740 27FA                                  l3732 27EE  
                                l3724 27E2                                  l3716 27D2  
                                l3708 27C6                                  l3660 277A  
                                l3652 276A                                  l3644 275A  
                                l3636 274E                                  l3628 273E  
                                l3910 293C                                  l3902 292C  
                                l3830 28A4                                  l3822 2894  
                                l3814 2884                                  l3806 2874  
                                l3750 280C                                  l3742 27FC  
                                l3734 27F0                                  l3726 27E4  
                                l3718 27D4                                  l3670 278C  
                                l3662 277C                                  l3654 2770  
                                l3646 2760                                  l3638 2750  
                                l3590 26F4                                  ?_pad 0022  
                                l7200 4D56                                  l8000 18E4  
                                l3920 294E                                  l3912 2942  
                                l3904 2932                                  l3840 28B6  
                                l3832 28A6                                  l3824 289A  
                                l3816 288A                                  l3808 287A  
                                l3760 281E                                  l3752 280E  
                                l3744 2802                                  l3736 27F6  
                                l3728 27E6                                  l3680 279A  
                                l3672 278E                                  l3664 277E  
                                l3656 2772                                  l3648 2762  
                                l3592 26F6                                  l7202 4D86  
                                l8010 1920                                  l7210 4DB2  
                                l6410 4D08                                  l3930 2960  
                                l3922 2950                                  l3914 2944  
                                l3906 2934                                  l3850 28C8  
                                l3842 28B8                                  l3834 28A8  
                                l3826 289C                                  l3818 288C  
                                l3770 282C                                  l3762 2820  
                                l3754 2810                                  l3746 2804  
                                l3738 27F8                                  l3690 27AC  
                                l3682 27A0                                  l3674 2790  
                                l3666 2784                                  l3658 2778  
                                l3594 26F8                                  l3586 26EC  
                                l8012 1924                                  l8004 18EA  
                                l8100 01DE                                  l7300 21EE  
                                l7220 20EE                                  l8020 0C6E  
                                l7212 4DB6                                  l6412 4D1C  
                                l6420 3B72                                  l3940 2976  
                                l3932 2966                                  l3924 2956  
                                l3916 294A                                  l3908 293A  
                                l3860 28DE                                  l3852 28CE  
                                l3844 28BE                                  l3836 28AE  
                                l3828 28A2                                  l3780 2842  
                                l3772 2832                                  l3764 2826  
                                l3756 2816                                  l3748 280A  
                                l3692 27AE                                  l3684 27A2  
                                l3676 2792                                  l3668 2786  
                                l3596 26FA                                  l3588 26F0  
                                l8006 18EC                                  l8110 0200  
                                l8102 01E4                                  l7310 2212  
                                l7230 2148                                  l7302 2208  
                                l7222 2106                                  l7214 20D0  
                                l8030 0D7A                                  l8022 0C8E  
                                l8014 0B98                                  l7206 4D94  
                                l6414 4D30                                  l6430 3BD6  
                                l6422 3B86                                  l3950 2984  
                                l3942 2978                                  l3934 2968  
                                l3926 2958                                  l3918 294C  
                                l3870 28F0                                  l3862 28E0  
                                l3854 28D0                                  l3846 28C0  
                                l3838 28B0                                  l3790 2854  
                                l3782 2844                                  l3774 2834  
                                l3766 2828                                  l3758 2818  
                                l3694 27B4                                  l3686 27A4  
                                l3678 2798                                  l3598 26FC  
                                l8008 1908                                  l8200 02DE  
                                l8120 021E                                  l8112 0214  
                                l8104 01E6                                  l7400 22CA  
                                l7320 2222                                  l7312 2218  
                                l7304 220C                                  l7240 2156  
                                l7232 214A                                  l7224 211C  
                                l7216 20D4                                  l8040 0E4C  
                                l8032 0DB6                                  l8016 0BB6  
                                l8024 0CCE                                  l9000 1C66  
                                l7208 4DA0                                  l6408 4CF8  
                                l6440 37BC                                  l6432 3BEA  
                                l6424 3B9A                                  l6416 3B50  
                                l3952 298A                                  l3944 297A  
                                l3936 296E                                  l3928 295E  
                                l3880 2906                                  l3872 28F6  
                                l3864 28E6                                  l3856 28D6  
                                l3848 28C6                                  l3792 285A  
                                l3784 284A                                  l3776 283A  
                                l3768 282A                                  l3696 27B6  
                                l3688 27A6                                  l8210 0316  
                                l8130 022C                                  l8122 0220  
                                l8114 0218                                  l8106 01E8  
                                l7410 2306                                  l7402 22E6  
                                l7330 2232                                  l7322 2228  
                                l7314 221A                                  l7306 220E  
                                l7250 2166                                  l7242 2158  
                                l7234 214C                                  l7226 2134  
                                l7218 20D8                                  l8050 0FD4  
                                l8042 0EBC                                  l8034 0DF2  
                                l8026 0CEA                                  l8018 0C46  
                                l9010 1D16                                  l9002 1CAE  
                                l6450 3820                                  l6442 37D0  
                                l6434 3BFE                                  l6426 3BAE  
                                l6418 3B62                                  l3954 298C  
                                l3946 297C                                  l3938 2970  
                                l3890 2918                                  l3882 2908  
                                l3874 28F8                                  l3866 28E8  
                                l3858 28D8                                  l3794 285C  
                                l3786 284C                                  l3778 283C  
                                l3698 27B8                                  l8300 053C  
                                l8220 0322                                  l8212 0318  
                                l8204 02FE                                  l8140 0250  
                                l8132 022E                                  l8124 0224  
                                l8116 021A                                  l8108 01F4  
                                l7500 23BE                                  l7420 2314  
                                l7412 2308                                  l7404 22EA  
                                l7340 2244                                  l7332 2238  
                                l7324 222A                                  l7316 221C  
                                l7308 2210                                  l7260 2176  
                                l7252 2168                                  l7244 215C  
                                l7236 214E                                  l7228 2144  
                                l8060 29D4                                  l8052 0FF4  
                                l8044 0EDC                                  l8036 0E12  
                                l8028 0D5A                                  l9004 1CD6  
                                l6460 3884                                  l6452 3834  
                                l6444 37E4                                  l6436 3C12  
                                l6428 3BC6                                  l3956 298E  
                                l3948 2982                                  l3892 291E  
                                l3884 290E                                  l3876 28FE  
                                l3868 28EE                                  l3796 2862  
                                l3788 2852                                  l9100 41A0  
                                l9020 5014                                  l8310 054A  
                                l8302 0540                                  l8230 0364  
                                l8214 031A                                  l8222 0326  
                                l8206 0306                                  l8150 025E  
                                l8142 0252                                  l8134 0230  
                                l8126 0226                                  l8118 021C  
                                l7510 23CE                                  l7502 23C2  
                                l7430 2324                                  l7422 2318  
                                l7414 230A                                  l7406 2300  
                                l7350 2254                                  l7342 2246  
                                l7334 223A                                  l7326 222C  
                                l7318 2220                                  l7270 2184  
                                l7262 2178                                  l7254 216C  
                                l7246 215E                                  l7238 2154  
                                l8070 2A84                                  l8062 29E8  
                                l8054 1030                                  l8038 0E30  
                                l8046 0F1C                                  l9006 1CF6  
                                l9014 1D2A                                  l7190 3C74  
                                l7182 3C28                                  l6462 3894  
                                l6454 3848                                  l6446 37F8  
                                l6438 37AC                                  l6470 38DE  
                                l6630 1D66                                  l3958 2990  
                                l3894 2920                                  l3886 2910  
                                l3878 2900                                  l3798 2864  
                                l9110 41C8                                  l9102 41A4  
                                l9022 501A                                  l9030 5050  
                                l8320 059C                                  l8312 054C  
                                l8304 0542                                  l8240 0372  
                                l8232 0368                                  l8224 0348  
                                l8216 031E                                  l8208 0312  
                                l8160 028A                                  l8152 0260  
                                l8144 0256                                  l8136 024A  
                                l8128 0228                                  l8080 00EA  
                                l7512 23D0                                  l7504 23C4  
                                l7440 2334                                  l7432 2328  
                                l7424 231A                                  l7416 2310  
                                l7408 2304                                  l7360 2266  
                                l7352 2256                                  l7344 2248  
                                l7336 223C                                  l7328 2230  
                                l7280 2198                                  l7272 2188  
                                l7264 217A                                  l7256 216E  
                                l7248 2164                                  l7600 34B4  
                                l7520 343A                                  l8072 2A98  
                                l8064 2A1C                                  l8056 2994  
                                l8048 0FAC                                  l9008 1D06  
                                l9032 4E98                                  l7192 3CAA  
                                l7184 3C3A                                  l8400 24E8  
                                l9200 4726                                  l6456 385C  
                                l6448 380C                                  l6480 3942  
                                l6472 38F2                                  l6464 38A6  
                                l6640 1DB4                                  l6632 1D76  
                                l3896 2922                                  l3888 2916  
                                l9112 4214                                  l9104 41C0  
                                l9024 5028                                  l9120 4F06  
                                l9130 4B48                                  l8330 0638  
                                l8306 0544                                  l8314 0550  
                                l8250 03AA                                  l8242 0374  
                                l8234 036A                                  l8226 0350  
                                l8218 0320                                  l8170 0298  
                                l8162 028E                                  l8154 0262  
                                l8146 0258                                  l8138 024E  
                                l8090 01AE                                  l8082 010A  
                                l7514 23D2                                  l7506 23CA  
                                l7450 2344                                  l7442 2336  
                                l7434 232A                                  l7426 2320  
                                l7418 2312                                  l7370 228C  
                                l7362 2268                                  l7354 225C  
                                l7346 224C                                  l7338 223E  
                                l7290 21A6                                  l7282 219A  
                                l7274 218A                                  l7266 2180  
                                l7258 2174                                  l7610 34FE  
                                l7602 34D6                                  l7530 344A  
                                l7522 343E                                  l8074 2AC8  
                                l8066 2A38                                  l8058 29A4  
                                l7186 3C4C                                  l8410 2586  
                                l8402 24F0                                  l9050 2C24  
                                l9042 2BCA                                  l6458 3870  
                                l6482 3956                                  l6474 3906  
                                l6466 38B6                                  l6650 1EC8  
                                l6642 1DC4                                  l6634 1D78  
                                l3898 2924                                  l9114 4218  
                                l9026 502C                                  l9122 4F12  
                                l9140 4B6E                                  l9132 4B4E  
                                l7196 4D46                                  l8340 0652  
                                l8332 0646                                  l8316 056C  
                                l8308 0548                                  l8260 03B6  
                                l8252 03AC                                  l8236 036C  
                                l8244 0378                                  l8228 0358  
                                l8324 05A8                                  l8180 02BA  
                                l8172 029A                                  l8164 0290  
                                l8156 0264                                  l8148 025A  
                                l8092 01D4                                  l8084 012A  
                                l8076 00B4                                  l7516 23EE  
                                l7508 23CC                                  l7460 2356  
                                l7452 2346                                  l7444 233C  
                                l7436 2330                                  l7428 2322  
                                l7380 22AC                                  l7372 22A2  
                                l7364 226A                                  l7356 225E  
                                l7348 224E                                  l7292 21A8  
                                l7284 21A0                                  l7276 2190  
                                l7268 2182                                  l7620 353E  
                                l7612 3500                                  l7604 34F4  
                                l7540 345A                                  l7532 344C  
                                l7524 3440                                  l8068 2A64  
                                l8500 4070                                  l9220 3D22  
                                l9212 3CF6                                  l9036 4E98  
                                l7700 330C                                  l7188 3C56  
                                l8420 2658                                  l8404 24F6  
                                l8412 25EA                                  l9060 2CBE  
                                l9052 2C4E                                  l9044 2BCE  
                                l6484 396A                                  l6476 391A  
                                l6468 38CA                                  l6652 1F32  
                                l6644 1DDC                                  l6636 1D8C  
                                l9116 4234                                  l9028 504A  
                                l9124 4F1E                                  l9300 42AE  
                                ?_isr 0001                                  l9142 4B7E  
                                l9134 4B62                                  l7198 4D52  
                                l8350 067A                                  l8342 0656  
                                l8334 064A                                  l8318 057C  
                                l8270 0456                                  l8254 03AE  
                                l8262 03BA                                  l8246 039A  
                                l8238 0370                                  l8326 05F0  
                                l8190 02C8                                  l8182 02BE  
                                l8174 02B2                                  l8166 0292  
                                l8158 0266                                  l8094 01D8  
                                l8086 0156                                  l8078 00BC  
                                l7518 23F2                                  l7470 2364  
                                l7462 235C                                  l7454 234C  
                                l7446 233E                                  l7438 2332  
                                l7390 22BC                                  l7382 22B2  
                                l7374 22A6                                  l7366 226C  
                                l7358 2264                                  l7294 21D0  
                                l7286 21A2                                  l7278 2192  
                                l7630 3572                                  l7622 3542  
                                l7614 351C                                  l7606 34F6  
                                l7550 346C                                  l7542 345C  
                                l7534 344E                                  l7526 3442  
                                l8502 4072                                  l9230 3D68  
                                l9222 3D2E                                  l9214 3CFA  
                                l9150 44FE                                  l7710 3374  
                                l7702 331A                                  l8430 269E  
                                l8414 2606                                  l8422 2666  
                                l8406 2578                                  l9070 2CE4  
                                l9062 2CC6                                  l9054 2C56  
                                l9046 2BD6                                  l9206 473E  
                                l6486 397E                                  l6478 392E  
                                l6654 1F9C                                  l6646 1DF4  
                                l6638 1DA0                                  l9126 4F22  
                                l9118 4F00                                  l9310 42BC  
                                l9302 42B2                                  l8600 4308  
                                l9144 4B9C                                  l9136 4B68  
                                l9128 4B48                                  l8440 4BA6  
                                l7800 4A3E                                  l8360 069C  
                                l8344 0658                                  l8336 064E  
                                l8328 05FE                                  l8280 0466  
                                l8272 045A                                  l8264 03F6  
                                l8256 03B2                                  l8248 03A6  
                                l8352 0682                                  l8192 02CA  
                                l8184 02C0                                  l8176 02B6  
                                l8168 0296                                  l8096 01DA  
                                l8088 018C                                  l7480 23A0  
                                l7472 2380                                  l7464 235E  
                                l7456 234E                                  l7448 2340  
                                l7392 22C2                                  l7384 22B4  
                                l7376 22A8                                  l7368 2288  
                                l7296 21D4                                  l7288 21A4  
                                l7624 3544                                  l7616 353A  
                                l7608 34F8                                  l7560 347A  
                                l7552 346E                                  l7544 3462  
                                l7536 3452                                  l7528 3444  
                                l8520 40B2                                  l9224 3D42  
                                l9216 3D0C                                  l9160 4532  
                                l9152 4502                                  l7712 3382  
                                l7720 33E8                                  l7704 333A  
                                l8432 26AA                                  l8424 2678  
                                l8416 2624                                  l8408 2580  
                                l9080 2D5C                                  l9072 2CE6  
                                l9064 2CDA                                  l9056 2C6A  
                                l9048 2BEA                                  l6656 2006  
                                l6648 1E5E                                  l9320 42CE  
                                l9312 42C4                                  l9304 42B6  
                                l8610 433C                                  l8602 4310  
                                l9146 4BA2                                  l7730 3E86  
                                l7642 4F28                                  l7634 40CA  
                                l7802 4A4C                                  l8362 069E  
                                l8354 0694                                  l8346 065A  
                                l8338 0650                                  l8290 04C2  
                                l8282 0468                                  l8274 045E  
                                l8266 03FE                                  l8258 03B4  
                                l8194 02CC                                  l8186 02C2  
                                l8178 02B8                                  l8098 01DC  
                                l7490 23AE                                  l7482 23A2  
                                l7474 2384                                  l7466 2360  
                                l7458 2354                                  l7394 22C4  
                                l7386 22B6                                  l7378 22AA  
                                l7298 21EA                                  l7626 3566  
                                l7618 353C                                  l7570 348E  
                                l7562 347E                                  l7554 3470  
                                l7546 3464                                  l7538 3454  
                                l8530 06AA                                  l8514 4094  
                                l8450 4016                                  l8442 4456  
                                l9234 3D70                                  l9226 3D46  
                                l9218 3D1E                                  l9242 3D86  
                                l8522 4DD8                                  l9250 3DC2  
                                l9170 4554                                  l9162 4536  
                                l9154 4514                                  l7650 3152  
                                l7722 33F8                                  l7714 33B0  
                                l7706 3358                                  l7810 3F46  
                                l8434 26B2                                  l8426 2686  
                                l8418 263E                                  l9082 2D7A  
                                l9074 2CF4                                  l9066 2CDE  
                                l9058 2C94                                  l6658 2070  
                                l9330 42E6                                  l9322 42D0  
                                l9314 42C6                                  l9306 42B8  
                                l8620 4378                                  l8612 4344  
                                l8604 4314                                  l7740 3EB6  
                                l7732 3E94                                  l7644 4F44  
                                l7900 1762                                  l7636 413E  
                                l7804 4A62                                  l8364 06A4  
                                l8356 0698                                  l8348 065E  
                                l8292 04CE                                  l8284 046A  
                                l8276 0460                                  l8268 044A  
                                l8196 02CE                                  l8188 02C6  
                                l7492 23B2                                  l7484 23A4  
                                l7476 239A                                  l7468 2362  
                                l7396 22C6                                  l7388 22BA  
                                l7628 356E                                  l7580 349C  
                                l7572 3490                                  l7564 3480  
                                l7556 3476                                  l7548 346A  
                                l8540 073C                                  l8532 06B4  
                                l8516 4098                                  l8508 407C  
                                l8460 4028                                  l8452 4018  
                                l8444 4008                                  l8700 47AC  
                                l9228 3D56                                  l8524 4DE8  
                                l9252 3DCE                                  l9164 453A  
                                l9156 4518                                  l7660 31B2  
                                l7652 3160                                  l7724 3418  
                                l7716 33D0                                  l7708 3360  
                                l7820 3F96                                  l7812 3F54  
                                l8428 268C                                  l8436 26C2  
                                l8380 242A                                  l9076 2D12  
                                l9068 2CE2                                  l9340 4C30  
                                l9332 4BFE                                  l9092 4188  
                                l9324 42D2                                  l9316 42CA  
                                l9308 42BA                                  l8622 437E  
                                l8614 434C                                  l8606 4322  
                                l7750 3EE4                                  l7742 3EBA  
                                l7734 3E9C                                  l7910 176E  
                                l7902 1764                                  l7638 417E  
                                l7806 4A6A                                  l8366 06A6  
                                l8358 069A                                  l8294 04E8  
                                l8278 0462                                  l8286 046E  
                                l8198 02D6                                  l7494 23B4  
                                l7486 23AA                                  l7478 239E  
                                l7398 22C8                                  l7590 34A6  
                                l7582 349E                                  l7574 3496  
                                l7566 3486                                  l7558 3478  
                                l8550 085C                                  l8542 076C  
                                l8534 06C4                                  l8518 40AE  
                                l8470 403A                                  l8462 402A  
                                l8454 401A                                  l8446 400C  
                                l8710 467C                                  l8702 47BE  
                                l8526 4E04                                  l9270 3E24  
                                l9254 3DE0                                  l9166 454A  
                                l9158 4520                                  l7670 31FC  
                                l7662 31B6                                  l7654 3180  
                                l7718 33E2                                  l7822 3FAA  
                                l7814 3F68                                  l8390 249E  
                                l8382 2454                                  l9078 2D48  
                                l9086 2DC8                                  l9190 46F0  
                                l9342 4C42                                  l9334 4C08  
                                l9326 42D6                                  l9318 42CC  
                                l8616 435A                                  l8624 4384  
                                l8608 432A                                  l7760 3F18  
                                l7752 3EF2                                  l7744 3EC2  
                                l7736 3EA0                                  l7728 3E82  
                                l7920 179A                                  l7912 1770  
                                l7904 1766                                  l7840 1566  
                                l7808 4A70                                  l8296 04F4  
                                l8288 0484                                  l7496 23BA  
                                l7488 23AC                                  l7592 34A8  
                                l7584 34A0                                  l7576 3498  
                                l7568 3488                                  l8560 09E8  
                                l8552 08D8                                  l8544 07E6  
                                l8536 06F4                                  l8480 404C  
                                l8472 4040                                  l8464 4030  
                                l8456 4020                                  l8448 4014  
                                l8712 468E                                  l8704 47DC  
                                l8720 3A72                                  l8528 4E0A  
                                l8800 1092                                  l9272 3E36  
                                l9264 3DFE                                  l9256 3DE4  
                                l9248 3DBE                                  l7680 326C  
                                l7672 320A                                  l7664 31C2  
                                l7656 3184                                  l7648 314E  
                                l7832 4E1C                                  l7824 3FAE  
                                l7816 3F76                                  l8392 24BA  
                                l8384 2474                                  l8640 2E3C  
                                l8632 2DF6                                  l9192 46F4  
                                l9336 4C18                                  l9328 42DA  
                                l9344 503A                                  l8626 4394  
                                l8618 4370                                  l7762 3F1E  
                                l7754 3EF8                                  l7746 3ED4  
                                l7738 3EAE                                  l7930 17A8  
                                l7922 179E                                  l7914 1774  
                                l7906 1768                                  l7850 1600  
                                l7842 15B4                                  l8298 0536  
                                l7498 23BC                                  l7594 34AA  
                                l7586 34A2                                  l7578 349A  
                                l8570 0B22                                  l8562 0A42  
                                l8554 0950                                  l8546 0810  
                                l8538 0708                                  l8490 405E  
                                l8482 404E                                  l8474 4042  
                                l8466 4032                                  l8458 4022  
                                l8714 46A0                                  l8706 463C  
                                l8722 3A90                                  l8810 112E  
                                l8802 10B6                                  l9266 3E0A  
                                l9258 3DF6                                  l9178 4568  
                                l7682 327E                                  l7674 321C  
                                l7666 31E0                                  l7658 3192  
                                l7834 4E36                                  l7826 3FDA  
                                l7818 3F82                                  l8394 24CC  
                                l8386 2482                                  l8378 240A  
                                l8650 2F06                                  l8642 2E60  
                                l8634 2E1A                                  l9194 4704  
                                l9186 46DC                                  l9338 4C1E  
                                l9098 4190                                  l9290 4264  
                                l9282 4240                                  l8628 439C  
                                l7756 3F0E                                  l7748 3EDC  
                                l7764 3F24                                  l7940 17B4  
                                l7932 17AA                                  l7924 17A0  
                                l7916 1776                                  l7908 176C  
                                l7860 1718                                  l7852 1612  
                                l7844 15B6                                  l7836 150C  
                                l7780 4904                                  l7772 48DA  
                                l7596 34AC                                  l7588 34A4  
                                l8564 0A9E                                  l8572 0B8A  
                                l8548 0848                                  l8556 0970  
                                l8492 4064                                  l8484 4054  
                                l8476 4044                                  l8468 4038  
                                l8716 46B2                                  l8708 4646  
                                l8580 36F2                                  l8732 3ADC  
                                l8820 11D6                                  l8812 1152  
                                l8804 10CE                                  l9268 3E1C  
                                l9276 3E46                                  l8900 4CCC  
                                l7676 324A                                  l7668 31E8  
                                l7684 3284                                  l7692 32D6  
                                l7828 3FEE                                  l8396 24DA  
                                l8388 2484                                  l8652 2F2A  
                                l8660 2F58                                  l8644 2E84  
                                l8636 2E28                                  l9196 4716  
                                l9188 46E0                                  l9292 4270  
                                l9284 4242                                  l8590 4FE4  
                                l7766 3F34                                  l7758 3F16  
                                l7950 184C                                  l7942 17B6  
                                l7934 17AE                                  l7926 17A2  
                                l7918 1778                                  l7870 1724  
                                l7862 171C                                  l7854 1630  
                                l7846 15DE                                  l7838 1518  
                                l7790 4938                                  l7782 4912  
                                l7774 48E2                                  l7598 34B2  
                                l8566 0AA0                                  l8558 09E0  
                                l8494 4066                                  l8486 4056  
                                l8478 4046                                  l8718 46C4  
                                l8582 3726                                  l8574 369E  
                                l8726 3A96                                  l8750 39B2  
                                l8830 1272                                  l8822 11EE  
                                l8814 1176                                  l8806 10F2  
                                l8910 486C                                  l8902 4CD0  
                                l7686 3294                                  l7678 326A  
                                l7694 32DA                                  l8398 24E0  
                                l8662 2F66                                  l8654 2F38  
                                l8646 2ECE                                  l8638 2E38  
                                l9198 471A                                  l9294 42A6  
                                l9286 4246                                  l8592 4FBE  
                                l7768 3F3C                                  l7960 188C  
                                l7952 1874                                  l7944 17BE  
                                l7936 17B0                                  l7928 17A6  
                                l7880 1732                                  l7872 1728  
                                l7864 171E                                  l7856 1672  
                                l7848 15EE                                  l7792 493E  
                                l7784 4918                                  l7776 48F4  
                                l8568 0AD6                                  l8496 406C  
                                l8488 405C                                  l8584 3762  
                                l8576 36AE                                  l8744 3B4C  
                                l8760 39FE                                  l8680 30BC  
                                l8840 130E                                  l8832 1296  
                                l8824 1212                                  l8816 118E  
                                l8808 1116                                  l9560 457E  
                                l8920 48C0                                  l8904 4CE0  
                                l7688 32B4                                  l7696 32E8  
                                l8656 2F4C                                  l9296 42A8  
                                l9288 4260                                  l8594 4FCE  
                                l7970 189E                                  l7962 1890  
                                l7954 1884                                  l7946 17F4  
                                l7938 17B2                                  l7890 1754  
                                l7882 1734                                  l7874 172A  
                                l7866 1720                                  l7858 16CC  
                                l7786 492E                                  l7778 48FC  
                                l7794 4A1C                                  l8498 406E  
                                l8586 379E                                  l8578 36DE  
                                l8690 482E                                  l9570 4998  
                                l8738 3B02                                  l8754 39B8  
                                l8682 30F4                                  l8674 2FAA  
                                l8850 13B6                                  l8842 1332  
                                l8834 12AE                                  l8826 1236  
                                l8818 11B2                                  l9562 4EAE  
                                l8922 48C2                                  l8906 4CF2  
                                l7698 3308                                  l8666 2F72  
                                l8930 4C66                                  l9298 42AA  
                       ??_Paddle_draw 0027                                  l8588 4FD4  
                                l8596 42F6                                  l7972 18A0  
                                l7964 1892                                  l7956 1888  
                                l7948 17FC                                  l7980 18AA  
                                l7892 1758                                  l7884 174C  
                                l7876 172C                                  l7868 1722  
                                l7788 4936                                  l7796 4A2E  
                                l9572 05D2                                  l8692 4840  
                                l8940 494E                                  l8772 3A6E  
                                l8748 3994                                  l8684 313C  
                                l8676 3040                                  l8780 49DE  
                                l8860 1452                                  l8852 13CE  
                                l8844 1356                                  l8836 12D2  
                                l8828 124E                                  l9564 3E5A  
                                l8924 48D2                                  l8916 4870  
                                l8908 4866                                  l8668 2F96  
                                l8932 4C6E                                  l9556 4754  
                                l8598 42FA                                  l7990 18D8  
                                l7982 18BC                                  l7958 188A  
                                l7966 1898                                  l7894 175A  
                                l7886 1750                                  l7878 1730  
                                l7798 4A36                                  l8694 4852  
                                l8686 47EE                                  l8942 4952  
                                l8950 4982                                  l8766 3A24  
                                l8678 3052                                  l8790 4A0E  
                                l8782 49F2                                  l8862 1476  
                                l8854 13F2                                  l8846 136E  
                                l8838 12F6                                  l8870 14EE  
                                l9566 1D3E                                  l8918 4890  
                                l8934 4C76                                  l9558 2DDE  
                                l7992 18DA                                  l7984 18C0  
                                l7968 189C                                  l7896 175C  
                                l7888 1752                                  l8696 476C  
                                l8688 47F8                                  l8944 4962  
                                l9568 3D9C                                  l8792 4A12  
                                l8784 49F8                                  l8776 49BA  
                                l8864 148E                                  l8856 1416  
                                l8848 1392                                  l8960 19A2  
                                l8880 4FA6                                  l8872 4AE4  
                                l8936 4C92                                  l8928 4C54  
                                l7994 18DC                                  l7978 18A8  
                                l7898 1760                                  l8698 4776  
                                l8946 4972                                  l8794 4A18  
                                l8778 49C0                                  l8866 14B2  
                                l8858 142E                                  l8970 1A3A  
                                l8962 19AC                                  l8882 4F90  
                                l8890 4F88                                  l8874 4AEC  
                                l7996 18E0                                  l7988 18D4  
                                l8788 49FE                                  l8868 14D6  
                                l8980 1B14                                  l8972 1A96  
                                l8964 19C0                                  l8956 1956  
                                l8892 4F8A                                  l8884 4F74  
                                l8876 4AFA                                  l7998 18E2  
                                l8798 106E                                  l8990 1BAA  
                                l8982 1B30                                  l8974 1AA0  
                                l8966 1A1C                                  l8958 195A  
                                l8894 4F8C                                  l8886 4F82  
                                l8878 4B20                   __end_of_XF_popEvent 4BA6  
                                STR_1 7FFD                                  l8992 1BBE  
                                l8984 1B44                                  l8976 1AB4  
                                l8968 1A26                                  l8896 4CA8  
                                l8888 4F86                                  STR_2 7FB6  
                                STR_3 7FAB                                  l8994 1BD6  
                                l8986 1B58                                  l8978 1ACC  
                                l8898 4CB8                                  STR_4 7FC0  
                                STR_5 7FC9                                  l8996 1C1E  
                                l8988 1BA0                                  STR_6 7FDA  
                                STR_7 7FF5                                  l8998 1C46  
                                STR_8 7FF9                                  STR_9 7FD2  
                       ??_Paddle_init 0016                                  u1630 45F6  
                                u1631 45F2                                  u4200 4D76  
                                u5000 24CC                                  u1640 463A  
                                u5001 24C8                                  u1641 4636  
                                u4210 4D86                                  u5010 24DA  
                                u4211 4D82                                  u5011 24D6  
                                u4300 239A                                  u5100 40AE  
                                u4220 4DD6                                  u5020 2606  
                                u4301 2396                                  u5101 40AA  
                                u4221 4DD2                                  u5021 2602  
                                u4310 2408                                  u4230 20EE  
                                u5110 40C8                                  u5030 2624  
                                u4207 4D6C                                  u4311 2404  
                                u4231 20EA                                  u5111 40C4  
                                u5031 2620                                  u5200 4322  
                                u4240 211C                                  u5120 4E04  
                                u6000 3E36                                  u4400 320A  
                                u4160 3C3A                                  u5040 263E  
                                u5201 431E                                  u4241 2118  
                                u5121 4E00                                  u6001 3E32  
                                u4401 3206                                  u4161 3C36  
                                u5041 263A                                  u5210 433C  
                                u4250 2144                                  u5130 076C  
                                u4410 324A                                  u4170 3C4C  
                                u5050 2658                                  u6010 4C18  
                                u5211 4338                                  u4251 2140  
                                u5131 0768                                  u4411 3246  
                                u4171 3C48                                  u5051 2654  
                                u6011 4C14                                  u5220 435A  
                                u4500 3EAE                                  u4260 21EA  
                                u5140 0810                                  u5300 30BC  
                                u4420 3294                                  u4180 3C74  
                                u5060 2666                                  u1780 2720  
                                u5221 4356                                  u4501 3EAA  
                                u4261 21E6                                  u4325 34E0  
                                u5141 080C                                  u5301 30B8  
                                u4421 3290                                  u4181 3C70  
                                u5061 2662                                  u1781 271C  
                                u5230 4370                                  u4510 3ED4  
                                u4270 2204                                  u5150 0848  
                                u5310 313C                                  u4430 32E8  
                                u4190 3CAA                                  u5070 2678  
                                u3710 3B62                                  u5231 436C  
                                u4511 3ED0                                  u4271 2200  
                                u4335 3526                                  u5151 0844  
                                u5311 3138                                  u4431 32E4  
                                u4191 3CA6                                  u5071 2674  
                                u3711 3B5E                                  u5240 4394  
                                u4520 3EF2                                  u4600 4A62  
                                u4280 22A2                                  u5160 0AD6  
                                u5320 3A90                                  u5400 49F2  
                                u4360 3160                                  u4440 331A  
                                u5080 2686                                  u5241 4390  
                                u4521 3EEE                                  u4345 4148  
                                u4601 4A5E                                  u4281 229E  
                                u5161 0AD2                                  u5321 3A8C  
                                u5401 49EE                                  u4361 315C  
                                u4441 3316                                  u5081 2682  
                                u5170 4FE4                                  u4530 3F0E  
                                u4290 2300                                  u5330 3AD8  
                                u5410 1092                                  u4370 3192  
                                u4450 3358                                  u4610 3F54  
                                u5090 269E                                  u5250 2E1A  
                                u5171 4FE0                                  u4531 3F0A  
                                u4355 415E                                  u4291 22FC  
                                u5331 3AD4                                  u5411 108E  
                                u4371 318E                                  u4451 3354  
                                u4611 3F50                                  u5091 269A  
                                u5251 2E16                                  u6027 4252  
                                u5180 4FCE                                  u4540 3F34  
                                u4700 166A                                  u5340 3AFE  
                                u5500 1236                                  u5420 10B6  
                                u4460 3382                                  u4620 3F76  
                                u5260 2E60                                  u5181 4FCA  
                                u4541 3F30                                  u5341 3AFA  
                                u5501 1232                                  u5421 10B2  
                                u4381 31BC                                  u4461 337E  
                                u4621 3F72                                  u5261 2E5C  
                                u6037 2706                                  u5190 4308  
                                u4550 48F4                                  u5350 3B48  
                                u5510 1272                                  u5430 10F2  
                                u4390 31E0                                  u4470 33B0  
                                u4630 3FCC                                  u5270 2E84  
                                u5191 4304                                  u4551 48F0  
                                u5351 3B44                                  u5511 126E  
                                u5431 10EE                                  u4391 31DC  
                                u4471 33AC                                  u4631 3FC8  
                                u5271 2E80                                  u6047 45C8  
                                u4720 1884                                  u4560 4912  
                                u4800 2A38                                  u5360 39B2  
                                u5600 1416                                  u5520 1296  
                                u5440 1116                                  u4480 33F8  
                                u4640 3FDA                                  u5280 2F2A  
                                u4721 1880                                  u4561 490E  
                                u4801 2A34                                  u5361 39AE  
                                u5601 1412                                  u5521 1292  
                                u5441 1112                                  u4481 33F4  
                                u4641 3FD6                                  u5281 2F26  
                                u6057 460C                                  u4490 3E94  
                                u4730 18BC                                  u4714 1868  
                                u4570 492E                                  u4810 2AC8  
                                u5370 39FA                                  u5290 3052  
                                u5610 1452                                  u5530 12D2  
                                u5450 1152                                  u4650 4E36  
                                u4491 3E90                                  u4731 18B8  
                                u4715 1862                                  u4707 1660  
                                u4571 492A                                  u4811 2AC4  
                                u5371 39F6                                  u5291 304E  
                                u5611 144E                                  u5531 12CE  
                                u5451 114E                                  u4651 4E32  
                                u4740 18D0                                  u4660 155E  
                                u4580 4A2E                                  u4900 0484  
                                u4820 0156                                  u5380 3A20  
                                u5620 1476                                  u5540 12F6  
                                u5460 1176                                  u5700 19A2  
                                u4741 18CC                                  u4581 4A2A  
                                u4901 0480                                  u4821 0152  
                                u5381 3A1C                                  u5621 1472  
                                u5541 12F2                                  u5461 1172  
                                u5701 199E                                  u4750 1908  
                                u4670 15DE                                  u4590 4A4C  
                                u4910 056C                                  u4830 0188  
                                u5390 3A6A                                  u5630 14B2  
                                u5550 1332                                  u5470 11B2  
                                u5710 1A1C                                  u4751 1904  
                                u4671 15DA                                  u4591 4A48  
                                u4911 0568                                  u4831 0184  
                                u5391 3A66                                  u5631 14AE  
                                u5551 132E                                  u5471 11AE  
                                u5711 1A18                                  u4760 1944  
                                u4680 15EE                                  u4920 057C  
                                u4840 01AE                                  u5640 14D6  
                                u5560 1356                                  u5480 11D6  
                                u5720 1A96                                  u5800 2C94  
                                u4681 15EA                                  u4921 0578  
                                u4841 01AA                                  u5641 14D2  
                                u5561 1352                                  u5481 11D2  
                                u5721 1A92                                  u5801 2C90  
                                u4770 1954                                  u4690 1612  
                                u4930 067A                                  u4850 01D0  
                                u5570 1392                                  u5490 1212  
                                u5730 1B14                                  u5650 4B3C  
                                u5810 2CF4                                  u4771 1950  
                                u4691 160E                                  u4667 1554  
                                u4931 0676                                  u4851 01CC  
                                u5571 138E                                  u5491 120E  
                                u5731 1B10                                  u5651 4B38  
                                u5811 2CF0                                  u4940 0694  
                                u4860 02FA                                  u4780 0BB6  
                                u5580 13B6                                  u5740 1BA0  
                                u5660 4CB8                                  u5900 4716  
                                u5820 41C0                                  u4941 0690  
                                u4861 02F6                                  u4781 0BB2  
                                u5581 13B2                                  u5741 1B9C  
                                u5661 4CB4                                  u5901 4712  
                                u5821 41BC                                  u4870 0348  
                                u4790 0E30                                  u5590 13F2  
                                u5750 1C1E                                  u5670 4CE0  
                                u4950 243C                                  u5910 473A  
                                u5830 4234                                  u4767 193A  
                                u4871 0344                                  u4791 0E2C  
                                u5591 13EE                                  u5751 1C1A  
                                u5671 4CDC                                  u4951 2436  
                                u5911 4736                                  u5831 4230  
                                u5840 4B62                                  u4880 039A  
                                u5920 3D0C                                  u5760 1CAE  
                                u5680 4890                                  u4960 243E  
                                u5841 4B5E                                  u4881 0396  
                                u5921 3D08                                  u5761 1CAA  
                                u5681 488C                                  u4890 03F6  
                                u5930 3D1E                                  u5850 4514  
                                u5690 48D2                                  u4970 2454  
                                u5770 2BEA                                  u4891 03F2  
                                u5931 3D1A                                  u5851 4510  
                                u5691 48CE                                  u4971 2450  
                                u5771 2BE6                                  u5940 3D42  
                                u5860 4532                                  u4980 2482  
                                u5780 2C24                                  u5941 3D3E  
                                u5861 452E                                  u4981 247E  
                                u5781 2C20                                  u5950 3D68  
                                u5870 454A                                  u4990 249E  
                                u5790 2C6A                                  u5951 3D64  
                                u5871 4546                                  u4991 249A  
                                u5791 2C66                                  u5960 3D82  
                                u5880 4564                                  u5961 3D7E  
                                u5881 4560                                  u5970 3DE0  
                                u5890 46F0                                  u5971 3DDC  
                                u5891 46EC                                  u5980 3DF6  
                                u5981 3DF2                                  _RBPU 007F8F  
                                u5990 3E1C                                  u5991 3E18  
                                _WPUB 000F61                           displaySM@ev 00A4  
                         LCD_Bitmap@i 007A                                  abs@a 0024  
                                _dbuf 00E0             __size_of_LCD_SliderCreate 00EE  
                                _main 503A                                  _dtoa 240A  
                    _XF_scheduleTimer 4866                                  _prec 0049  
                                _nout 00DB                                  pad@i 0029  
                                pad@p 0026                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf1 000FE7  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 002B                                  fsr2l 000FD9  
                                btemp 004E                      Menu_inGameDraw@g 009C  
                      touchScreenSM@g 00B0                                  prodh 000FF4  
                                prodl 000FF3      __end_of_arialNarrow_12ptFontInfo 7FA0  
                                start 00B0                           RGB2LCD@blue 001C  
              __end_of_LCD_ButtonDraw 0B98             __size_of_LCD_SliderUpdate 04D6  
                      _LCD_SliderDraw 369E                    LCD_InSlider@slider 0012  
                     __end_of_XF_init 4240                          ___param_bank 000000  
              LCD_ButtonCreate@height 0018                    XF_scheduleTimer@ev 0015  
                  XF_scheduleTimer@tm 0013                LCD_ButtonCreate@button 0028  
                               ??_abs 0026                                 ??_pad 0028  
                               ??_isr 000E                      __end_of_LCD_Fill 40CA  
                      ??_LCD_InButton 0018                      __end_of_LCD_Init 2994  
                    __end_of_LCD_Read 357C                        ??_LCD_InSlider 0018  
                      ??_LCD_DrawRect 001D           LCD_SliderCreate@cursorWidth 0020  
                      ??_LCD_DrawText 002D                       __end_of___aodiv 32D6  
                               ?_main 0001                                 ?_dtoa 002D  
                     __end_of___aomod 343A                       LCD_ButtonDraw@i 0099  
                     __end_of___awdiv 3F46                                 STR_10 7FA0  
                               STR_11 7FE2                                 STR_12 7FE9  
                               STR_13 7FEF                       __end_of___awmod 43A6  
                               _ANSB1 0079C9                                 _ANSB2 0079CA  
                               _T0CON 000FD5                       ___awdiv@divisor 0014  
                               _LATB1 007C51                                 _LATB2 007C52  
                               _LATB3 007C53                                 _LATC2 007C5A  
                               _LATB4 007C54                                 _LATC3 007C5B  
                               _LATC4 007C5C                                 _LATC5 007C5D  
                     __end_of___lwdiv 494E                       __end_of___lwmod 4A80  
                               i2l723 009C                                 i2l734 4F72  
                               i2l655 4AE2                                 i2l719 0056  
                               i2l681 5012                                 i2l668 4E96  
                               i2l685 4FFC                                 i2l677 369C  
                     ___awdiv@counter 0016                                 i2l978 4454  
                               _PLLEN 007CDE                          vfpfcnvrt@fmt 0041  
                               _TMR0H 000FD7                                 _TMR0L 000FD6  
                               _PORTA 000F80                       ??_configMeasure 0012  
                               _TRISA 000F92                   LCD_Bitmap@bfOffBits 0060  
                        LCD_Fill@page 0018                                 _flags 004B  
                        displayInit@g 00A0                                 _fputc 3C28  
                               _theXF 00B5                                 _fputs 4D94  
              LCD_ButtonDraw@tempChar 008A                   __size_of_LCD_Bitmap 05F6  
                               pad@fp 0022                                 _width 0047  
                               _putch 5056                                 dtoa@d 002F  
                               dtoa@i 0070                                 dtoa@n 0068  
                               dtoa@p 0062                                 dtoa@s 0066  
                               dtoa@w 0064                  __end_of_XF_pushEvent 4A1C  
                     __end_of_sleepSM 459E                          Paddle_addX@p 0025  
                               tablat 000FF5            ??_gameControllerController 0039  
                     touchScreenSM@ev 00B4                      __end_ofi2___wmul 4F74  
                               plusw2 000FDB           ?_XF_decrementAndQueueTimers 0001  
                               ttemp5 004F                                 ttemp6 0052  
                               ttemp7 0056                                 status 000FD8  
                               wtemp8 004F                          Paddle_draw@p 0025  
                     __end_of_sprintf 4CA6                          RGB2LCD@color 001E  
                        RGB2LCD@green 001A                __end_of_LCD_SliderDraw 37AC  
                        Paddle_init@p 0012              __size_of_touchScreenInit 000C  
             LCD_ButtonCreate@bgColor 001C                    __size_ofi2___awmod 00B0  
                 __end_of_Paddle_addX 314E                       ?_LCD_ButtonDraw 007C  
                   ?_gameControllerSM 003B                   __end_of_Paddle_draw 44FC  
                       _touchScreenSM 46D8                   __end_of_Paddle_init 3C28  
                  __size_of_Ball_draw 0058                          LCD_Read@posX 0012  
                        LCD_Read@posY 0014                    __size_of_Ball_init 004E  
                     __initialization 4ECE                    ??_gameControllerSM 003D  
                        __end_of_main 504A                          __end_of_dtoa 26EC  
             LCD_ButtonCreate@fpPress 0022                touchScreenController@g 0090  
              touchScreenController@s 0098                      ?_sleepController 0001  
                    i2XF_pushEvent@ev 0008                                ??_main 0047  
                              ??_dtoa 0037                         __activetblptr 000002  
                           ??_RGB2LCD 0014                           _XF_popEvent 4B46  
                              _ADCON0 000FC2                                _ADCON2 000FC0  
                    LCD_ButtonDraw@x1 008D                      LCD_ButtonDraw@x2 008F  
                    LCD_ButtonDraw@y1 0091                      LCD_ButtonDraw@y2 0093  
                              ?_fputc 0012                                ?_fputs 001B  
                              _ADRESH 000FC4                                _ADRESL 000FC3  
                              _CCPR2L 000F67                      ___awdiv@dividend 0012  
                              ?_putch 0001                                _INT1IE 007F83  
                              _INT1IF 007F80                    LCD_DrawRect@colorH 0021  
                  LCD_DrawRect@colorL 0022                                i2l6600 444C  
                              i2l6560 5000                                i2l6562 5010  
                              i2l6570 43AA                                i2l6564 4FEA  
                              i2l6580 43DA                                i2l6572 43B8  
                              i2l6566 4FFA                                i2l6830 4E64  
                              i2l6590 4420                                i2l6582 43EC  
                              i2l6574 43C0                                i2l6832 4E7C  
                              i2l6592 4428                                i2l6584 43F4  
                              i2l6576 43C4                                i2l6568 43A6  
                              i2l6840 4ABA                                i2l6594 442E  
                              i2l6586 43FC                                i2l6578 43D2  
                              i2l6850 4ADA                                i2l6842 4AC0  
                              i2l6834 4A82                                i2l6930 3584  
                              i2l6828 4E5E                                i2l6588 440A  
                              i2l6596 4434                                i2l6852 4AE0  
                              i2l6836 4A88                                i2l6932 35B4  
                              i2l6940 367C                                i2l6924 357C  
                              i2l6598 4444                                i2l6846 4AC6  
                              i2l6838 4AA6                                i2l6942 3680  
                              i2l6934 360C                                i2l6950 0044  
                              i2l6848 4AD6                                i2l6856 4F4E  
                              i2l6936 3646                                i2l6960 0080  
                              i2l6952 0048                                i2l6944 001A  
                              i2l6858 4F6A                                i2l6938 3654  
                              i2l6962 008E                                i2l6954 0064  
                              i2l6946 0028                                i2l6964 0092  
                              i2l6956 0068                                i2l6948 0036  
                              i2l6966 0096                                i2l6958 0072  
                              i2l6968 009A                                _OSCCON 000FD3  
                           ??_XF_init 0020                                _TMR0IE 007F95  
                              _TMR0IF 007F92                                _TMR2IF 007CF1  
                              _TRISB1 007C99                                _TRISB2 007C9A  
                              _TRISC1 007CA1                                _TRISB3 007C9B  
                              _TRISC2 007CA2                                _TRISB4 007C9C  
                              _TRISC3 007CA3                                _TRISC4 007CA4  
                              _TRISC5 007CA5                       ?_LCD_SliderDraw 0037  
                 i2XF_pushEvent@inISR 0007                  LCD_DrawText@bg_color 002B  
                      ?_touchScreenSM 00B0                       i2_LEAVECRITICAL 4FE8  
               __size_of_Factory_exec 0056                 __size_of_Factory_init 00B6  
                        vfprintf@cfmt 0080                   LCD_Bitmap@jumpColor 0078  
                 LCD_Bitmap@jumpCount 0065                   _Menu_parametersDraw 476C  
                __size_of_configTouch 001C            __end_of_gameControllerInit 503A  
                           ??___aodiv 0022                             ??___aomod 0022  
                              ___wmul 4F28                             ??___awdiv 0016  
                           ??___awmod 0016                         LCD_Fill@color 0012  
              LCD_ButtonUpdate@button 0025                             ??___lwdiv 0024  
                           ??___lwmod 0016                  LCD_DrawText@fontByte 0037  
        __size_of_GameParameters_init 036A                                clear_0 4ED4  
                              clear_1 4EE0                                clear_2 4EEC  
        __size_of_GameParameters_setX 0016          __size_of_GameParameters_setY 0016  
                    ___awdiv@quotient 0018             LCD_ButtonCreate@textOrBmp 001E  
               _touchScreenController 2BCA                       ___awmod@divisor 0014  
                              isa$std 000001                       ___awmod@counter 0016  
                __size_of_displayInit 0014                                pad@buf 0024  
                              dtoa@fp 002D                                _strlen 4D46  
                       LCD_DrawRect@i 0023                         LCD_DrawRect@j 001D  
                              fputc@c 0012                                fputs@c 001F  
                              fputs@i 0020                                fputs@s 001B  
        ?_GameParameters_setBackLight 0012                         LCD_DrawText@i 003E  
                   __end_ofi2___awmod 4456                         LCD_DrawText@x 0040  
                       LCD_DrawText@y 003D                  LCD_DrawText@tempChar 003F  
                        __mediumconst 7854                                tblptrh 000FF7  
                           ??_sleepSM 0014                                tblptrl 000FF6  
                              tblptru 000FF8                     __end_of_Ball_draw 4BFE  
                   __end_of_Ball_init 4D46                  ?_Menu_parametersDraw 009C  
                              putch@c 0001                      __end_of_vfprintf 4B46  
                      i2___awmod@sign 0006                             ??_sprintf 0047  
            __end_of_LCD_ButtonCreate 38A6                           _Paddle_addX 2FAA  
                        _Factory_exec 4BFE                          _Factory_init 4240  
                         _Paddle_draw 4456                           _Paddle_init 3B50  
                    XF_pushEvent@temp 001A                 LCD_SliderCreate@width 0016  
                __end_of_LCD_InButton 3B50                 LCD_SliderCreate@steps 0022  
            __end_of_LCD_ButtonUpdate 2BCA                            __accesstop 0060  
             __end_of__initialization 4EF2                             ?_LCD_Fill 0012  
                    _LCD_SliderCreate 38A6                             ?_LCD_Init 0001  
                           ?_LCD_Read 0012                  __end_of_LCD_InSlider 3A72  
                __end_of_LCD_DrawRect 240A                  __end_of_LCD_DrawText 1956  
         __size_of_XF_unscheduleTimer 003C                       i2_ENTERCRITICAL 4FFE  
                       ___rparam_used 000001                         LCD_Read@color 0018  
                    _LCD_SliderUpdate 0B98                    LEAVECRITICAL@inISR 0012  
                           LCD_Init@i 0018                        __pcstackCOMRAM 0001  
                        ??_LCD_Bitmap 002D                     ??_touchScreenInit 0012  
         __end_of_backlightController 150C                         __end_of_fputc 3CF2  
                       __end_of_fputs 4DD8                   gameControllerInit@g 003B  
          LCD_ButtonCreate@fpReleased 0024                         __end_of_putch 5058  
                   LCD_Bitmap@biWidth 0076                     ?_Menu_welcomeDraw 009C  
                LCD_Bitmap@endOfImage 0064              __end_of_XF_scheduleTimer 48DA  
                           ?i2___wmul 0001                    ??_Menu_welcomeDraw 0042  
                   LCD_Bitmap@curXPos 006F   __size_of_XF_decrementAndQueueTimers 0122  
                   LCD_Bitmap@curYPos 0067                 __size_of_XF_pushEvent 0064  
               ??_Menu_parametersDraw 0045         ??_GameParameters_setBackLight 0016  
             _arialNarrow_12ptBitmaps 7855                    __size_of_displaySM 00CA  
               __end_of_LEAVECRITICAL 4FD2                    LCD_DrawText@offset 0033  
                             ??_fputc 0016                               ??_fputs 001F  
                             ??_putch 0012      __end_of_gameControllerController 1D66  
           gameControllerController@g 0037               __end_ofi2_LEAVECRITICAL 4FFE  
                      XF_pushEvent@ev 0019                            __pbssBANK0 00B5  
                          __pbssBANK1 0100                    __end_of_LCD_Bitmap 06AA  
                          ??_LCD_Fill 0014                            ??_LCD_Init 0017  
                          ??_LCD_Read 0016                       ??_touchScreenSM 00B2  
            LCD_ButtonCreate@txtColor 001A                    ENTERCRITICAL@inISR 0012  
            __size_of_Menu_inGameDraw 009C                               ?___wmul 001A  
              ?_touchScreenController 0090                          _XF_pushEvent 49B8  
                  __size_of_sleepInit 0028                               ?_strlen 0012  
                          ??i2___wmul 0005               __size_ofi2_XF_pushEvent 0064  
                             _RGB2LCD 40CA                               _INTEDG1 007F8D  
                GameParameters_init@s 002B                  GameParameters_setX@s 0012  
                GameParameters_setY@s 0012                    __size_of_vfpfcnvrt 01B4  
               __end_of_ENTERCRITICAL 4FE8               __end_ofi2_ENTERCRITICAL 5014  
                    ??_LCD_ButtonDraw 007E                  Menu_parametersDraw@g 009C  
 __end_of_arialNarrow_12ptDescriptors 7F99           _arialNarrow_12ptDescriptors 7E7C  
                             _XF_init 4188                   LCD_ButtonDraw@xText 0095  
                 LCD_ButtonDraw@yText 0097                   LCD_ButtonDraw@width 008B  
                             __Hparam 0000                               __Lparam 0000  
                             ___aodiv 314E                     __end_of_displaySM 3DBC  
                             ___aomod 32D6                               ___awdiv 3E82  
                             ___awmod 42F6                       __size_of___wmul 0026  
             LCD_ButtonUpdate@colorIn 002D                               ___lwdiv 48DA  
                             ___lwmod 4A1C                             ?_vfprintf 007A  
                      LCD_Bitmap@newY 0073                        LCD_Bitmap@posX 0029  
                      LCD_Bitmap@posY 002B                        LCD_Fill@colorH 0014  
                      LCD_Fill@colorL 0015                               __pcinit 4ECE  
                      LCD_Fill@column 0016                               __ramtop 0600  
                             __ptext0 503A                               __ptext1 4240  
                             __ptext2 4F00                               __ptext3 504A  
                             __ptext4 5028                               __ptext5 5014  
                             __ptext6 4188                               __ptext7 26EC  
                             __ptext8 459E                               __ptext9 1D66  
                     __size_of_strlen 004E             __size_of_gameControllerSM 00C6  
                           _T2CONbits 000FBA                          __size_of_abs 0040  
                        __size_of_pad 00C2                          __size_of_isr 00A8  
                        ?_XF_popEvent 0001                  LCD_Bitmap@pixelCount 0075  
                    ___awmod@dividend 0012                 LCD_DrawText@fontPixel 0038  
                             _sleepSM 44FC                 __end_of_configMeasure 4CF8  
               __size_of_LCD_InButton 00DE               XF_unscheduleTimer@inISR 0002  
               __size_of_LCD_InSlider 00DE                     Menu_welcomeDraw@g 009C  
               __size_of_LCD_DrawRect 033A                               _sprintf 4C54  
               __size_of_LCD_DrawText 044A                      ??_LCD_SliderDraw 0039  
                end_of_initialization 4EF2                      ?i2_LEAVECRITICAL 0001  
                 _GameParameters_init 1D66                   _GameParameters_setX 4FA6  
                 _GameParameters_setY 4F90                               fputc@fp 0014  
                       __Lmediumconst 7854                               fputs@fp 001D  
                      Paddle_addX@add 0029                   i2___wmul@multiplier 0001  
                   __end_of_sleepInit 4F28                     __end_of_vfpfcnvrt 2FAA  
                          _sleepState 00DF                               postdec1 000FE5  
                             postdec2 000FDD                     _LCD_Lowlevel_Init 459E  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE                            ??_vfprintf 0047  
   __size_of_gameControllerController 0410                  ?_GameParameters_init 002B  
           ?_gameControllerController 0037                     ??_Menu_inGameDraw 0044  
                ?_GameParameters_setX 0012                    ?_LCD_Lowlevel_Init 0001  
                ?_GameParameters_setY 0012                               strlen@a 0014  
                             strlen@s 0012                          _LCD_InButton 3A72  
                           _PORTBbits 000F81              __end_of_LCD_SliderCreate 3994  
              LCD_SliderCreate@height 0018                          _LCD_InSlider 3994  
                        _displayState 00DD                          _LCD_DrawRect 20D0  
                        _LCD_DrawText 150C                     XF_pushEvent@inISR 0018  
            __end_of_LCD_SliderUpdate 106E                      XF_popEvent@inISR 0019  
              LCD_SliderCreate@slider 0026                   ??_LCD_Lowlevel_Init 0012  
                  _gameControllerInit 5028              __size_of_sleepController 0036  
                      Factory_exec@ev 01D1                             i2___awmod 43A6  
                    ?i2_ENTERCRITICAL 0001                     ?_LCD_ButtonCreate 0012  
                        ?_Paddle_addX 0025                          ?_Paddle_draw 0025  
                           _Ball_draw 4BA6                          ?_Paddle_init 0012  
                           _Ball_init 4CF8                   ?_gameControllerInit 003B  
                  ??_LCD_ButtonCreate 002B                     ?_LCD_ButtonUpdate 0025  
                     _touchScreenInit 504A                     _displayController 494E  
                         _CCP2CONbits 000F66                            displaySM@g 00A0  
                      LCD_Read@temp16 001A       __end_of_arialNarrow_12ptBitmaps 7E7C  
              RGB2LCD@colorTableEntry 0012                         ??_configTouch 0012  
                  ??_LCD_ButtonUpdate 0027                     __size_of_LCD_Fill 00C2  
                   __size_of_LCD_Init 02A8                     __size_of_LCD_Read 0142  
                  ?_displayController 009E                            RGB2LCD@red 0018  
           __end_of_LCD_Lowlevel_Init 463C                    LCD_Lowlevel_Init@i 0013  
               LCD_ButtonCreate@fpOut 0026                     XF_scheduleTimer@i 0017  
               LCD_ButtonCreate@index 002A                 LCD_ButtonCreate@width 0016  
                       ??_displayInit 0047                 ??_GameParameters_init 002D  
               ??_GameParameters_setX 0016                 ??_GameParameters_setY 0016  
                 ??_displayController 0045                           vfpfcnvrt@ap 0043  
                         vfpfcnvrt@fp 003F                           vfpfcnvrt@ll 0072  
                      __end_of___wmul 4F4E                  ??_gameControllerInit 003D  
                  LCD_Bitmap@biHeight 006B                  XF_unscheduleTimer@id 0003  
                      i2_XF_pushEvent 4A80                      i2___wmul@product 0005  
                   ?_XF_scheduleTimer 0013                        __end_of_strlen 4D94  
                       XF_popEvent@ev 0018                   start_initialization 4ECE  
                   __size_ofi2___wmul 0026                    ??_XF_scheduleTimer 0017  
                         __end_of_abs 4E5C                    LCD_InButton@button 0012  
                         __end_of_pad 4008                           __end_of_isr 00B0  
               XF_scheduleTimer@inISR 0016                            ?i2___awmod 0001  
                          ?_Ball_draw 0042                            ?_Ball_init 0012  
           __end_of_displayController 49B8             __size_of_Menu_welcomeDraw 0078  
          __end_of_XF_unscheduleTimer 4E98                     LCD_DrawRect@color 001B  
                   LCD_DrawRect@posX1 0012                     LCD_DrawRect@posX2 0016  
                   LCD_DrawRect@posY1 0014                     LCD_DrawRect@posY2 0018  
                  i2XF_pushEvent@temp 0009               ??_touchScreenController 0092  
                         vfprintf@fmt 007C                              ??___wmul 001E  
                 LCD_DrawText@yOffset 0035                   __end_of_configTouch 4F90  
              __end_ofi2_XF_pushEvent 4AE4                   LCD_DrawText@posXEnd 003B  
                 LCD_DrawText@posYEnd 0039              _arialNarrow_12ptFontInfo 7F99  
         __end_of_Menu_parametersDraw 47EE                              ??_strlen 0014  
                LCD_SliderCreate@posX 0012                  LCD_SliderCreate@posY 0014  
                    _gameControllerSM 3DBC                   __end_of_displayInit 5028  
                            ?_RGB2LCD 0012          __size_of_backlightController 049E  
                         __pbssCOMRAM 0047                LCD_SliderUpdate@slider 0027  
         XF_decrementAndQueueTimers@i 000C                         __pcstackBANK0 0060  
                       __pcstackBANK1 01D1                  LCD_SliderDraw@slider 0037  
                    ___aodiv@dividend 0012                    gameControllerSM@ev 003F  
             __end_of_touchScreenInit 5056                  __size_of_XF_popEvent 0060  
                    LCD_InButton@posX 0014                      LCD_InButton@posY 0016  
                    LCD_Bitmap@bmpPtr 0027                     LCD_DrawText@align 0024  
                            ?_XF_init 0001                     LCD_DrawText@color 0029  
                   ??_sleepController 0012                      LCD_Bitmap@strPtr 0071  
        ??_XF_decrementAndQueueTimers 000A                     LCD_DrawText@width 0041  
               __end_of_touchScreenSM 476C               LCD_Bitmap@colorTablePtr 0069  
                i2LEAVECRITICAL@inISR 0001                      LCD_SliderDraw@x1 003D  
                    LCD_SliderDraw@x2 003F                      LCD_SliderDraw@y1 0041  
                    LCD_SliderDraw@y2 0043            __size_of_LCD_Lowlevel_Init 009E  
                    ___lwdiv@dividend 0020                             _dtoa$3788 0060  
                           __pintcode 0008                         __pmediumconst 7854  
                            ?___aodiv 0012                              ?___aomod 0012  
                            ?___awdiv 0012                      ___aodiv@quotient 0024  
                            ?___awmod 0012                              ?___lwdiv 0020  
                            ?___lwmod 0012                __size_of_LEAVECRITICAL 0016  
                     ?i2_XF_pushEvent 0007                             _displaySM 3CF2  
                   __size_of_vfprintf 0062   __end_of_GameParameters_setBackLight 4E1C  
         _GameParameters_setBackLight 4DD8                              ?_sleepSM 0001  
                    ___lwdiv@quotient 0025           touchScreenController@valueX 00AE  
         touchScreenController@valueY 00AC                           ??i2___awmod 0005  
                            ?_sprintf 0082                        __size_of_fputc 00CA  
                      __size_of_fputs 0044                        __size_of_putch 0002  
                         ??_Ball_draw 0044                           ??_Ball_init 0014  
          __size_of_displayController 006A                            sleepInit@g 00A2  
                            _LCD_Fill 4008                              _LCD_Init 26EC  
                            _LCD_Read 343A                        ___wmul@product 001E  
                __size_of_Paddle_addX 01A4                  __size_of_Paddle_draw 00A6  
                __size_of_Paddle_init 00D8                       _Menu_inGameDraw 463C  
                i2ENTERCRITICAL@inISR 0001                    LCD_SliderUpdate@x1 0035  
                  LCD_SliderUpdate@x2 002F                    LCD_SliderUpdate@y1 0031  
                  LCD_SliderUpdate@y2 0033                    displayController@g 009E  
                         _configTouch 4F74                              i2u410_40 0028  
                            i2u410_41 0024                              i2u411_40 0036  
                            i2u411_41 0032                              i2u404_40 4ABA  
                            i2u412_40 0044                              i2u404_41 4AB6  
                            i2u412_41 0040                              i2u413_40 0064  
                            i2u413_41 0060                              i2u406_40 35B4  
                            i2u414_40 0080                              i2u406_41 35B0  
                            i2u414_41 007C                              i2u407_40 360C  
                            i2u415_40 008E                              i2u407_41 3608  
                            i2u415_41 008A                              i2u408_40 3646  
                            i2u408_41 3642                              i2u409_40 369C  
                            i2u409_41 3698                              i2u380_40 43D2  
                            i2u380_41 43CE                              i2u381_40 43EC  
                            i2u381_41 43E8                              XF_init@i 0020  
                            i2u382_40 440A                              i2u382_41 4406  
                            i2u383_40 4420                              i2u383_41 441C  
                            i2u384_40 4444                              i2u384_41 4440  
                           _sleepInit 4F00                              i2u377_40 5010  
                            i2u377_41 500C                              i2u378_40 4FFA  
                            i2u378_41 4FF6                              i2u379_40 43B8  
                            i2u379_41 43B4                __size_of_ENTERCRITICAL 0016  
                         _displayInit 5014                             _vfpfcnvrt 2DF6  
                          ?_displaySM 00A0                     ___wmul@multiplier 001A  
                   ?_LCD_SliderCreate 0012                              i2___wmul 4F4E  
    GameParameters_setBackLight@value 0014                    LCD_ButtonUpdate@x1 0033  
                  LCD_ButtonUpdate@x2 002F                    LCD_ButtonUpdate@y1 0031  
                  LCD_ButtonUpdate@y2 0035                    ??_LCD_SliderCreate 0028  
                    __size_of_RGB2LCD 00BE                     ?_LCD_SliderUpdate 0027  
                    LCD_InSlider@posX 0014                      LCD_InSlider@posY 0016  
                LCD_ButtonCreate@font 0020                  LCD_ButtonCreate@posX 0012  
                LCD_ButtonCreate@posY 0014                  LCD_ButtonDraw@bmpPtr 009A  
                    ?_touchScreenInit 0001                    ??_LCD_SliderUpdate 0029  
                LCD_ButtonDraw@button 007C                         _LEAVECRITICAL 4FBC  
                       ?_Factory_exec 0001                         ?_Factory_init 0001  
                  i2___awmod@dividend 0001                      _Menu_welcomeDraw 47EE  
                    __size_of_XF_init 00B8                      LCD_DrawRect@fill 001A  
                            __Hrparam 0000                      LCD_DrawRect@temp 001F  
                          ?_sleepInit 00A2              __size_ofi2_LEAVECRITICAL 0016  
                          vfprintf@ap 007E                              __Lrparam 0000  
                          vfprintf@fp 007A               __size_of_LCD_ButtonDraw 04EE  
              __size_of_configMeasure 0052             __size_of_LCD_ButtonCreate 00FA  
                    __size_of___aodiv 0188                      __size_of___aomod 0164  
                    __size_of___awdiv 00C4                      __size_of___awmod 00B0  
               i2___wmul@multiplicand 0003                            ?_vfpfcnvrt 003F  
                    __size_of___lwdiv 0074                      __size_of___lwmod 0064  
           __size_of_LCD_ButtonUpdate 0236                     gameControllerSM@g 003B  
                     ___aodiv@divisor 001A                      Paddle_addX@value 0027  
            LCD_ButtonUpdate@colorOut 002B                       ___aodiv@counter 0022  
            GameParameters_setX@value 0014                       LCD_Bitmap@color 006D  
            GameParameters_setY@value 0014                      LCD_DrawText@font 0022  
                          sprintf@fmt 0084                      LCD_DrawText@posX 0025  
                    LCD_DrawText@posY 0027                            Ball_draw@b 0042  
                     ___lwdiv@divisor 0022                            Ball_init@b 0012  
                     ___lwdiv@counter 0024                              __ptext10 3B50  
                            __ptext11 38A6                              __ptext20 240A  
                            __ptext12 37AC                              __ptext21 3F46  
                            __ptext13 4CF8                              __ptext30 4866  
                            __ptext22 4D94                              __ptext14 4BFE  
                            __ptext31 4F90                              __ptext23 3C28  
                            __ptext15 46D8                              __ptext40 2FAA  
                            __ptext32 4FA6                              __ptext24 5056  
                            __ptext16 2BCA                              __ptext41 3994  
                            __ptext33 44FC                              __ptext25 4E1C  
                            __ptext17 4C54                              __ptext50 4456  
                            __ptext42 3A72                              __ptext34 4E98  
                            __ptext26 32D6                              __ptext18 4AE4  
                            __ptext51 4008                              __ptext43 3CF2  
                            __ptext35 3DBC                              __ptext27 314E  
                            __ptext19 2DF6                              __ptext60 4BA6  
                            __ptext52 06AA                              __ptext44 494E  
                            __ptext36 1956                              __ptext28 4F74  
                            __ptext61 150C                              __ptext53 2994  
                            __ptext45 47EE                              __ptext37 106E  
                            __ptext29 4CA6                              __ptext70 357C  
                            __ptext62 4D46                              __ptext54 343A  
                            __ptext46 476C                              __ptext38 4DD8  
                            __ptext71 4F4E                              __ptext63 4F28  
                            __ptext55 20D0                              __ptext47 369E  
                            __ptext39 49B8                              __ptext72 4A80  
                            __ptext64 3E82                              __ptext56 00B4  
                            __ptext48 0B98                              __ptext73 43A6  
                            __ptext65 4B46                              __ptext57 4A1C  
                            __ptext49 463C                              __ptext74 4E5C  
                            __ptext66 42F6                              __ptext58 48DA  
                            __ptext75 4FE8                              __ptext67 4FBC  
                            __ptext59 40CA                              __ptext76 4FFE  
                            __ptext68 4FD2                      __size_of_sleepSM 00A2  
                      ?_LEAVECRITICAL 0001                         _ENTERCRITICAL 4FD2  
                      ??_Factory_exec 0047                        ??_Factory_init 00A4  
             __end_of_Menu_inGameDraw 46D8                      __size_of_sprintf 0052  
  __end_of_XF_decrementAndQueueTimers 369E            _XF_decrementAndQueueTimers 357C  
                       __size_of_main 0010                             sleepSM@ev 0016  
                       __size_of_dtoa 02E2             __size_of_XF_scheduleTimer 0074  
            __end_of_gameControllerSM 3E82                   _backlightController 106E  
         __end_of_GameParameters_init 20D0           __end_of_GameParameters_setX 4FBC  
         __end_of_GameParameters_setY 4FA6              __size_ofi2_ENTERCRITICAL 0016  
             __size_of_LCD_SliderDraw 010E          GameParameters_setBackLight@s 0012  
            _gameControllerController 1956                              isa$xinst 000000  
                          _LCD_Bitmap 00B4        __size_of_touchScreenController 022C  
                  _XF_unscheduleTimer 4E5C         __end_of_touchScreenController 2DF6  
                            int$flags 004E                              _vfprintf 4AE4  
                       ?_XF_pushEvent 0018           __size_of_gameControllerInit 0012  
                         ??_displaySM 00A2                      ___aomod@dividend 0012  
                 ?_XF_unscheduleTimer 0002                     i2___awmod@divisor 0003  
                   i2___awmod@counter 0005                  ?_backlightController 0018  
                     _sleepController 4E98                        ?_ENTERCRITICAL 0001  
                       _configMeasure 4CA6                              intlevel2 0000  
                           sprintf@ap 0088                       LCD_DrawText@msg 0020  
                    ___lwmod@dividend 0012                  ??_XF_unscheduleTimer 0003  
                         ??_sleepInit 0047                      ??i2_XF_pushEvent 0008  
                      ??_XF_pushEvent 0019                       ___aomod@divisor 001A  
                         ??_vfpfcnvrt 0045                       ___aomod@counter 0022  
                   ??i2_LEAVECRITICAL 0001                              sprintf@f 008A  
                            sprintf@s 0082                 ??_backlightController 001A  
                       ??_XF_popEvent 0018                       ___lwmod@divisor 0014  
             LCD_SliderCreate@bgColor 001C                       ___lwmod@counter 0016  
                     ??_LEAVECRITICAL 0012                        ?_configMeasure 0001  
         LCD_SliderCreate@borderColor 001E          __size_of_Menu_parametersDraw 0082  
            LCD_SliderCreate@sldColor 001A               LCD_SliderCreate@fpPress 0024  
                    ?_Menu_inGameDraw 009C                          ___aodiv@sign 0023  
                     Paddle_init@team 0014  __size_of_GameParameters_setBackLight 0044  
                        ___aomod@sign 0023                          ?_configTouch 0001  
                 _gameControllerState 004D  
