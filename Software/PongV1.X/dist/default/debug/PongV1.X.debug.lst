

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 06 16:12:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	text83,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	text86,global,reloc=2,class=CODE,delta=1
   100                           	psect	text87,global,reloc=2,class=CODE,delta=1
   101                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   105                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   106  0000                     
   107                           ; Version 2.32
   108                           ; Generated 02/02/2021 GMT
   109                           ; 
   110                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   111                           ; All rights reserved.
   112                           ; 
   113                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   114                           ; 
   115                           ; Redistribution and use in source and binary forms, with or without modification, are
   116                           ; permitted provided that the following conditions are met:
   117                           ; 
   118                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   119                           ;        conditions and the following disclaimer.
   120                           ; 
   121                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   122                           ;        of conditions and the following disclaimer in the documentation and/or other
   123                           ;        materials provided with the distribution. Publication is not required when
   124                           ;        this file is used in an embedded application.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18LF25K22 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     
   143                           	psect	mediumconst
   144  00783A                     __pmediumconst:
   145                           	callstack 0
   146  00783A  00                 	db	0
   147  00783B                     _arialNarrow_12ptBitmaps:
   148                           	callstack 0
   149  00783B  00                 	db	0
   150  00783C  00                 	db	0
   151  00783D  00                 	db	0
   152  00783E  00                 	db	0
   153  00783F  00                 	db	0
   154  007840  00                 	db	0
   155  007841  00                 	db	0
   156  007842  00                 	db	0
   157  007843  00                 	db	0
   158  007844  00                 	db	0
   159  007845  00                 	db	0
   160  007846  00                 	db	0
   161  007847  00                 	db	0
   162  007848  00                 	db	0
   163  007849  00                 	db	0
   164  00784A  00                 	db	0
   165  00784B  C0                 	db	192
   166  00784C  C0                 	db	192
   167  00784D  C0                 	db	192
   168  00784E  C0                 	db	192
   169  00784F  C0                 	db	192
   170  007850  C0                 	db	192
   171  007851  C0                 	db	192
   172  007852  C0                 	db	192
   173  007853  00                 	db	0
   174  007854  C0                 	db	192
   175  007855  C0                 	db	192
   176  007856  00                 	db	0
   177  007857  00                 	db	0
   178  007858  00                 	db	0
   179  007859  00                 	db	0
   180  00785A  D8                 	db	216
   181  00785B  D8                 	db	216
   182  00785C  D8                 	db	216
   183  00785D  D8                 	db	216
   184  00785E  00                 	db	0
   185  00785F  00                 	db	0
   186  007860  00                 	db	0
   187  007861  00                 	db	0
   188  007862  00                 	db	0
   189  007863  00                 	db	0
   190  007864  00                 	db	0
   191  007865  00                 	db	0
   192  007866  00                 	db	0
   193  007867  00                 	db	0
   194  007868  00                 	db	0
   195  007869  12                 	db	18
   196  00786A  12                 	db	18
   197  00786B  24                 	db	36
   198  00786C  FE                 	db	254
   199  00786D  FE                 	db	254
   200  00786E  48                 	db	72
   201  00786F  FE                 	db	254
   202  007870  FE                 	db	254
   203  007871  48                 	db	72
   204  007872  90                 	db	144
   205  007873  90                 	db	144
   206  007874  00                 	db	0
   207  007875  00                 	db	0
   208  007876  00                 	db	0
   209  007877  10                 	db	16
   210  007878  7C                 	db	124
   211  007879  FC                 	db	252
   212  00787A  D6                 	db	214
   213  00787B  D0                 	db	208
   214  00787C  F0                 	db	240
   215  00787D  7C                 	db	124
   216  00787E  1E                 	db	30
   217  00787F  16                 	db	22
   218  007880  D6                 	db	214
   219  007881  7E                 	db	126
   220  007882  7C                 	db	124
   221  007883  10                 	db	16
   222  007884  00                 	db	0
   223  007885  00                 	db	0
   224  007886  00                 	db	0
   225  007887  00                 	db	0
   226  007888  61                 	db	97
   227  007889  00                 	db	0
   228  00788A  91                 	db	145
   229  00788B  00                 	db	0
   230  00788C  92                 	db	146
   231  00788D  00                 	db	0
   232  00788E  92                 	db	146
   233  00788F  00                 	db	0
   234  007890  94                 	db	148
   235  007891  00                 	db	0
   236  007892  65                 	db	101
   237  007893  80                 	db	128
   238  007894  06                 	db	6
   239  007895  40                 	db	64
   240  007896  0A                 	db	10
   241  007897  40                 	db	64
   242  007898  0A                 	db	10
   243  007899  40                 	db	64
   244  00789A  12                 	db	18
   245  00789B  40                 	db	64
   246  00789C  11                 	db	17
   247  00789D  80                 	db	128
   248  00789E  00                 	db	0
   249  00789F  00                 	db	0
   250  0078A0  00                 	db	0
   251  0078A1  00                 	db	0
   252  0078A2  00                 	db	0
   253  0078A3  00                 	db	0
   254  0078A4  00                 	db	0
   255  0078A5  38                 	db	56
   256  0078A6  7C                 	db	124
   257  0078A7  6C                 	db	108
   258  0078A8  7C                 	db	124
   259  0078A9  30                 	db	48
   260  0078AA  78                 	db	120
   261  0078AB  DA                 	db	218
   262  0078AC  CE                 	db	206
   263  0078AD  CE                 	db	206
   264  0078AE  FF                 	db	255
   265  0078AF  7A                 	db	122
   266  0078B0  00                 	db	0
   267  0078B1  00                 	db	0
   268  0078B2  00                 	db	0
   269  0078B3  00                 	db	0
   270  0078B4  C0                 	db	192
   271  0078B5  C0                 	db	192
   272  0078B6  C0                 	db	192
   273  0078B7  C0                 	db	192
   274  0078B8  00                 	db	0
   275  0078B9  00                 	db	0
   276  0078BA  00                 	db	0
   277  0078BB  00                 	db	0
   278  0078BC  00                 	db	0
   279  0078BD  00                 	db	0
   280  0078BE  00                 	db	0
   281  0078BF  00                 	db	0
   282  0078C0  00                 	db	0
   283  0078C1  00                 	db	0
   284  0078C2  00                 	db	0
   285  0078C3  10                 	db	16
   286  0078C4  20                 	db	32
   287  0078C5  60                 	db	96
   288  0078C6  60                 	db	96
   289  0078C7  C0                 	db	192
   290  0078C8  C0                 	db	192
   291  0078C9  C0                 	db	192
   292  0078CA  C0                 	db	192
   293  0078CB  C0                 	db	192
   294  0078CC  C0                 	db	192
   295  0078CD  60                 	db	96
   296  0078CE  60                 	db	96
   297  0078CF  20                 	db	32
   298  0078D0  10                 	db	16
   299  0078D1  00                 	db	0
   300  0078D2  80                 	db	128
   301  0078D3  40                 	db	64
   302  0078D4  60                 	db	96
   303  0078D5  20                 	db	32
   304  0078D6  30                 	db	48
   305  0078D7  30                 	db	48
   306  0078D8  30                 	db	48
   307  0078D9  30                 	db	48
   308  0078DA  30                 	db	48
   309  0078DB  30                 	db	48
   310  0078DC  60                 	db	96
   311  0078DD  60                 	db	96
   312  0078DE  40                 	db	64
   313  0078DF  80                 	db	128
   314  0078E0  00                 	db	0
   315  0078E1  20                 	db	32
   316  0078E2  A8                 	db	168
   317  0078E3  F8                 	db	248
   318  0078E4  20                 	db	32
   319  0078E5  50                 	db	80
   320  0078E6  50                 	db	80
   321  0078E7  00                 	db	0
   322  0078E8  00                 	db	0
   323  0078E9  00                 	db	0
   324  0078EA  00                 	db	0
   325  0078EB  00                 	db	0
   326  0078EC  00                 	db	0
   327  0078ED  00                 	db	0
   328  0078EE  00                 	db	0
   329  0078EF  00                 	db	0
   330  0078F0  00                 	db	0
   331  0078F1  00                 	db	0
   332  0078F2  00                 	db	0
   333  0078F3  30                 	db	48
   334  0078F4  30                 	db	48
   335  0078F5  30                 	db	48
   336  0078F6  FC                 	db	252
   337  0078F7  FC                 	db	252
   338  0078F8  30                 	db	48
   339  0078F9  30                 	db	48
   340  0078FA  30                 	db	48
   341  0078FB  00                 	db	0
   342  0078FC  00                 	db	0
   343  0078FD  00                 	db	0
   344  0078FE  00                 	db	0
   345  0078FF  00                 	db	0
   346  007900  00                 	db	0
   347  007901  00                 	db	0
   348  007902  00                 	db	0
   349  007903  00                 	db	0
   350  007904  00                 	db	0
   351  007905  00                 	db	0
   352  007906  00                 	db	0
   353  007907  00                 	db	0
   354  007908  C0                 	db	192
   355  007909  C0                 	db	192
   356  00790A  40                 	db	64
   357  00790B  40                 	db	64
   358  00790C  80                 	db	128
   359  00790D  00                 	db	0
   360  00790E  00                 	db	0
   361  00790F  00                 	db	0
   362  007910  00                 	db	0
   363  007911  00                 	db	0
   364  007912  00                 	db	0
   365  007913  00                 	db	0
   366  007914  F0                 	db	240
   367  007915  F0                 	db	240
   368  007916  00                 	db	0
   369  007917  00                 	db	0
   370  007918  00                 	db	0
   371  007919  00                 	db	0
   372  00791A  00                 	db	0
   373  00791B  00                 	db	0
   374  00791C  00                 	db	0
   375  00791D  00                 	db	0
   376  00791E  00                 	db	0
   377  00791F  00                 	db	0
   378  007920  00                 	db	0
   379  007921  00                 	db	0
   380  007922  00                 	db	0
   381  007923  00                 	db	0
   382  007924  00                 	db	0
   383  007925  00                 	db	0
   384  007926  C0                 	db	192
   385  007927  C0                 	db	192
   386  007928  00                 	db	0
   387  007929  00                 	db	0
   388  00792A  00                 	db	0
   389  00792B  00                 	db	0
   390  00792C  30                 	db	48
   391  00792D  30                 	db	48
   392  00792E  30                 	db	48
   393  00792F  60                 	db	96
   394  007930  60                 	db	96
   395  007931  60                 	db	96
   396  007932  60                 	db	96
   397  007933  60                 	db	96
   398  007934  C0                 	db	192
   399  007935  C0                 	db	192
   400  007936  C0                 	db	192
   401  007937  00                 	db	0
   402  007938  00                 	db	0
   403  007939  00                 	db	0
   404  00793A  00                 	db	0
   405  00793B  78                 	db	120
   406  00793C  78                 	db	120
   407  00793D  CC                 	db	204
   408  00793E  CC                 	db	204
   409  00793F  CC                 	db	204
   410  007940  CC                 	db	204
   411  007941  CC                 	db	204
   412  007942  CC                 	db	204
   413  007943  CC                 	db	204
   414  007944  78                 	db	120
   415  007945  78                 	db	120
   416  007946  00                 	db	0
   417  007947  00                 	db	0
   418  007948  00                 	db	0
   419  007949  00                 	db	0
   420  00794A  30                 	db	48
   421  00794B  30                 	db	48
   422  00794C  70                 	db	112
   423  00794D  F0                 	db	240
   424  00794E  B0                 	db	176
   425  00794F  30                 	db	48
   426  007950  30                 	db	48
   427  007951  30                 	db	48
   428  007952  30                 	db	48
   429  007953  30                 	db	48
   430  007954  30                 	db	48
   431  007955  00                 	db	0
   432  007956  00                 	db	0
   433  007957  00                 	db	0
   434  007958  00                 	db	0
   435  007959  38                 	db	56
   436  00795A  7C                 	db	124
   437  00795B  CC                 	db	204
   438  00795C  CC                 	db	204
   439  00795D  0C                 	db	12
   440  00795E  18                 	db	24
   441  00795F  38                 	db	56
   442  007960  70                 	db	112
   443  007961  60                 	db	96
   444  007962  FC                 	db	252
   445  007963  FC                 	db	252
   446  007964  00                 	db	0
   447  007965  00                 	db	0
   448  007966  00                 	db	0
   449  007967  00                 	db	0
   450  007968  78                 	db	120
   451  007969  FC                 	db	252
   452  00796A  CC                 	db	204
   453  00796B  0C                 	db	12
   454  00796C  38                 	db	56
   455  00796D  38                 	db	56
   456  00796E  0C                 	db	12
   457  00796F  0C                 	db	12
   458  007970  CC                 	db	204
   459  007971  F8                 	db	248
   460  007972  78                 	db	120
   461  007973  00                 	db	0
   462  007974  00                 	db	0
   463  007975  00                 	db	0
   464  007976  00                 	db	0
   465  007977  0C                 	db	12
   466  007978  1C                 	db	28
   467  007979  1C                 	db	28
   468  00797A  3C                 	db	60
   469  00797B  2C                 	db	44
   470  00797C  6C                 	db	108
   471  00797D  CC                 	db	204
   472  00797E  FE                 	db	254
   473  00797F  FE                 	db	254
   474  007980  0C                 	db	12
   475  007981  0C                 	db	12
   476  007982  00                 	db	0
   477  007983  00                 	db	0
   478  007984  00                 	db	0
   479  007985  00                 	db	0
   480  007986  7C                 	db	124
   481  007987  7C                 	db	124
   482  007988  60                 	db	96
   483  007989  D8                 	db	216
   484  00798A  FC                 	db	252
   485  00798B  CC                 	db	204
   486  00798C  0C                 	db	12
   487  00798D  CC                 	db	204
   488  00798E  CC                 	db	204
   489  00798F  78                 	db	120
   490  007990  78                 	db	120
   491  007991  00                 	db	0
   492  007992  00                 	db	0
   493  007993  00                 	db	0
   494  007994  00                 	db	0
   495  007995  70                 	db	112
   496  007996  78                 	db	120
   497  007997  D8                 	db	216
   498  007998  C0                 	db	192
   499  007999  F0                 	db	240
   500  00799A  F8                 	db	248
   501  00799B  D8                 	db	216
   502  00799C  D8                 	db	216
   503  00799D  D8                 	db	216
   504  00799E  78                 	db	120
   505  00799F  70                 	db	112
   506  0079A0  00                 	db	0
   507  0079A1  00                 	db	0
   508  0079A2  00                 	db	0
   509  0079A3  00                 	db	0
   510  0079A4  F8                 	db	248
   511  0079A5  F8                 	db	248
   512  0079A6  18                 	db	24
   513  0079A7  10                 	db	16
   514  0079A8  30                 	db	48
   515  0079A9  30                 	db	48
   516  0079AA  20                 	db	32
   517  0079AB  60                 	db	96
   518  0079AC  60                 	db	96
   519  0079AD  60                 	db	96
   520  0079AE  60                 	db	96
   521  0079AF  00                 	db	0
   522  0079B0  00                 	db	0
   523  0079B1  00                 	db	0
   524  0079B2  00                 	db	0
   525  0079B3  78                 	db	120
   526  0079B4  FC                 	db	252
   527  0079B5  CC                 	db	204
   528  0079B6  CC                 	db	204
   529  0079B7  78                 	db	120
   530  0079B8  78                 	db	120
   531  0079B9  CC                 	db	204
   532  0079BA  CC                 	db	204
   533  0079BB  CC                 	db	204
   534  0079BC  FC                 	db	252
   535  0079BD  78                 	db	120
   536  0079BE  00                 	db	0
   537  0079BF  00                 	db	0
   538  0079C0  00                 	db	0
   539  0079C1  00                 	db	0
   540  0079C2  70                 	db	112
   541  0079C3  F8                 	db	248
   542  0079C4  CC                 	db	204
   543  0079C5  CC                 	db	204
   544  0079C6  CC                 	db	204
   545  0079C7  FC                 	db	252
   546  0079C8  7C                 	db	124
   547  0079C9  0C                 	db	12
   548  0079CA  CC                 	db	204
   549  0079CB  F8                 	db	248
   550  0079CC  70                 	db	112
   551  0079CD  00                 	db	0
   552  0079CE  00                 	db	0
   553  0079CF  00                 	db	0
   554  0079D0  00                 	db	0
   555  0079D1  00                 	db	0
   556  0079D2  00                 	db	0
   557  0079D3  00                 	db	0
   558  0079D4  C0                 	db	192
   559  0079D5  C0                 	db	192
   560  0079D6  00                 	db	0
   561  0079D7  00                 	db	0
   562  0079D8  00                 	db	0
   563  0079D9  00                 	db	0
   564  0079DA  C0                 	db	192
   565  0079DB  C0                 	db	192
   566  0079DC  00                 	db	0
   567  0079DD  00                 	db	0
   568  0079DE  00                 	db	0
   569  0079DF  00                 	db	0
   570  0079E0  00                 	db	0
   571  0079E1  00                 	db	0
   572  0079E2  00                 	db	0
   573  0079E3  C0                 	db	192
   574  0079E4  C0                 	db	192
   575  0079E5  00                 	db	0
   576  0079E6  00                 	db	0
   577  0079E7  00                 	db	0
   578  0079E8  00                 	db	0
   579  0079E9  C0                 	db	192
   580  0079EA  C0                 	db	192
   581  0079EB  40                 	db	64
   582  0079EC  40                 	db	64
   583  0079ED  80                 	db	128
   584  0079EE  00                 	db	0
   585  0079EF  00                 	db	0
   586  0079F0  04                 	db	4
   587  0079F1  1C                 	db	28
   588  0079F2  38                 	db	56
   589  0079F3  F0                 	db	240
   590  0079F4  C0                 	db	192
   591  0079F5  F0                 	db	240
   592  0079F6  38                 	db	56
   593  0079F7  1C                 	db	28
   594  0079F8  04                 	db	4
   595  0079F9  00                 	db	0
   596  0079FA  00                 	db	0
   597  0079FB  00                 	db	0
   598  0079FC  00                 	db	0
   599  0079FD  00                 	db	0
   600  0079FE  00                 	db	0
   601  0079FF  00                 	db	0
   602  007A00  00                 	db	0
   603  007A01  FC                 	db	252
   604  007A02  FC                 	db	252
   605  007A03  00                 	db	0
   606  007A04  FC                 	db	252
   607  007A05  FC                 	db	252
   608  007A06  00                 	db	0
   609  007A07  00                 	db	0
   610  007A08  00                 	db	0
   611  007A09  00                 	db	0
   612  007A0A  00                 	db	0
   613  007A0B  00                 	db	0
   614  007A0C  00                 	db	0
   615  007A0D  00                 	db	0
   616  007A0E  80                 	db	128
   617  007A0F  E0                 	db	224
   618  007A10  70                 	db	112
   619  007A11  3C                 	db	60
   620  007A12  0C                 	db	12
   621  007A13  1C                 	db	28
   622  007A14  70                 	db	112
   623  007A15  E0                 	db	224
   624  007A16  80                 	db	128
   625  007A17  00                 	db	0
   626  007A18  00                 	db	0
   627  007A19  00                 	db	0
   628  007A1A  00                 	db	0
   629  007A1B  00                 	db	0
   630  007A1C  78                 	db	120
   631  007A1D  FC                 	db	252
   632  007A1E  CC                 	db	204
   633  007A1F  CC                 	db	204
   634  007A20  1C                 	db	28
   635  007A21  18                 	db	24
   636  007A22  30                 	db	48
   637  007A23  30                 	db	48
   638  007A24  00                 	db	0
   639  007A25  30                 	db	48
   640  007A26  30                 	db	48
   641  007A27  00                 	db	0
   642  007A28  00                 	db	0
   643  007A29  00                 	db	0
   644  007A2A  00                 	db	0
   645  007A2B  00                 	db	0
   646  007A2C  0F                 	db	15
   647  007A2D  C0                 	db	192
   648  007A2E  1F                 	db	31
   649  007A2F  E0                 	db	224
   650  007A30  30                 	db	48
   651  007A31  30                 	db	48
   652  007A32  66                 	db	102
   653  007A33  D8                 	db	216
   654  007A34  EF                 	db	239
   655  007A35  D8                 	db	216
   656  007A36  DD                 	db	221
   657  007A37  D8                 	db	216
   658  007A38  D8                 	db	216
   659  007A39  98                 	db	152
   660  007A3A  D9                 	db	217
   661  007A3B  98                 	db	152
   662  007A3C  D9                 	db	217
   663  007A3D  B0                 	db	176
   664  007A3E  DF                 	db	223
   665  007A3F  F0                 	db	240
   666  007A40  6E                 	db	110
   667  007A41  C8                 	db	200
   668  007A42  70                 	db	112
   669  007A43  10                 	db	16
   670  007A44  3F                 	db	63
   671  007A45  E0                 	db	224
   672  007A46  0F                 	db	15
   673  007A47  C0                 	db	192
   674  007A48  00                 	db	0
   675  007A49  00                 	db	0
   676  007A4A  1C                 	db	28
   677  007A4B  00                 	db	0
   678  007A4C  1C                 	db	28
   679  007A4D  00                 	db	0
   680  007A4E  1C                 	db	28
   681  007A4F  00                 	db	0
   682  007A50  36                 	db	54
   683  007A51  00                 	db	0
   684  007A52  36                 	db	54
   685  007A53  00                 	db	0
   686  007A54  36                 	db	54
   687  007A55  00                 	db	0
   688  007A56  63                 	db	99
   689  007A57  00                 	db	0
   690  007A58  7F                 	db	127
   691  007A59  00                 	db	0
   692  007A5A  7F                 	db	127
   693  007A5B  00                 	db	0
   694  007A5C  C1                 	db	193
   695  007A5D  80                 	db	128
   696  007A5E  C1                 	db	193
   697  007A5F  80                 	db	128
   698  007A60  00                 	db	0
   699  007A61  00                 	db	0
   700  007A62  00                 	db	0
   701  007A63  00                 	db	0
   702  007A64  00                 	db	0
   703  007A65  00                 	db	0
   704  007A66  00                 	db	0
   705  007A67  FC                 	db	252
   706  007A68  FE                 	db	254
   707  007A69  C6                 	db	198
   708  007A6A  C6                 	db	198
   709  007A6B  FC                 	db	252
   710  007A6C  FC                 	db	252
   711  007A6D  C6                 	db	198
   712  007A6E  C6                 	db	198
   713  007A6F  C6                 	db	198
   714  007A70  FE                 	db	254
   715  007A71  FC                 	db	252
   716  007A72  00                 	db	0
   717  007A73  00                 	db	0
   718  007A74  00                 	db	0
   719  007A75  00                 	db	0
   720  007A76  3C                 	db	60
   721  007A77  7E                 	db	126
   722  007A78  67                 	db	103
   723  007A79  C2                 	db	194
   724  007A7A  C0                 	db	192
   725  007A7B  C0                 	db	192
   726  007A7C  C0                 	db	192
   727  007A7D  C2                 	db	194
   728  007A7E  67                 	db	103
   729  007A7F  7E                 	db	126
   730  007A80  3C                 	db	60
   731  007A81  00                 	db	0
   732  007A82  00                 	db	0
   733  007A83  00                 	db	0
   734  007A84  00                 	db	0
   735  007A85  F8                 	db	248
   736  007A86  FC                 	db	252
   737  007A87  CE                 	db	206
   738  007A88  C6                 	db	198
   739  007A89  C6                 	db	198
   740  007A8A  C6                 	db	198
   741  007A8B  C6                 	db	198
   742  007A8C  C6                 	db	198
   743  007A8D  CE                 	db	206
   744  007A8E  FC                 	db	252
   745  007A8F  F8                 	db	248
   746  007A90  00                 	db	0
   747  007A91  00                 	db	0
   748  007A92  00                 	db	0
   749  007A93  00                 	db	0
   750  007A94  FE                 	db	254
   751  007A95  FE                 	db	254
   752  007A96  C0                 	db	192
   753  007A97  C0                 	db	192
   754  007A98  FE                 	db	254
   755  007A99  FE                 	db	254
   756  007A9A  C0                 	db	192
   757  007A9B  C0                 	db	192
   758  007A9C  C0                 	db	192
   759  007A9D  FE                 	db	254
   760  007A9E  FE                 	db	254
   761  007A9F  00                 	db	0
   762  007AA0  00                 	db	0
   763  007AA1  00                 	db	0
   764  007AA2  00                 	db	0
   765  007AA3  FC                 	db	252
   766  007AA4  FC                 	db	252
   767  007AA5  C0                 	db	192
   768  007AA6  C0                 	db	192
   769  007AA7  F8                 	db	248
   770  007AA8  F8                 	db	248
   771  007AA9  C0                 	db	192
   772  007AAA  C0                 	db	192
   773  007AAB  C0                 	db	192
   774  007AAC  C0                 	db	192
   775  007AAD  C0                 	db	192
   776  007AAE  00                 	db	0
   777  007AAF  00                 	db	0
   778  007AB0  00                 	db	0
   779  007AB1  00                 	db	0
   780  007AB2  3C                 	db	60
   781  007AB3  7E                 	db	126
   782  007AB4  67                 	db	103
   783  007AB5  C3                 	db	195
   784  007AB6  C0                 	db	192
   785  007AB7  CF                 	db	207
   786  007AB8  CF                 	db	207
   787  007AB9  C3                 	db	195
   788  007ABA  63                 	db	99
   789  007ABB  7F                 	db	127
   790  007ABC  3C                 	db	60
   791  007ABD  00                 	db	0
   792  007ABE  00                 	db	0
   793  007ABF  00                 	db	0
   794  007AC0  00                 	db	0
   795  007AC1  C6                 	db	198
   796  007AC2  C6                 	db	198
   797  007AC3  C6                 	db	198
   798  007AC4  C6                 	db	198
   799  007AC5  FE                 	db	254
   800  007AC6  FE                 	db	254
   801  007AC7  C6                 	db	198
   802  007AC8  C6                 	db	198
   803  007AC9  C6                 	db	198
   804  007ACA  C6                 	db	198
   805  007ACB  C6                 	db	198
   806  007ACC  00                 	db	0
   807  007ACD  00                 	db	0
   808  007ACE  00                 	db	0
   809  007ACF  00                 	db	0
   810  007AD0  C0                 	db	192
   811  007AD1  C0                 	db	192
   812  007AD2  C0                 	db	192
   813  007AD3  C0                 	db	192
   814  007AD4  C0                 	db	192
   815  007AD5  C0                 	db	192
   816  007AD6  C0                 	db	192
   817  007AD7  C0                 	db	192
   818  007AD8  C0                 	db	192
   819  007AD9  C0                 	db	192
   820  007ADA  C0                 	db	192
   821  007ADB  00                 	db	0
   822  007ADC  00                 	db	0
   823  007ADD  00                 	db	0
   824  007ADE  00                 	db	0
   825  007ADF  0C                 	db	12
   826  007AE0  0C                 	db	12
   827  007AE1  0C                 	db	12
   828  007AE2  0C                 	db	12
   829  007AE3  0C                 	db	12
   830  007AE4  0C                 	db	12
   831  007AE5  0C                 	db	12
   832  007AE6  CC                 	db	204
   833  007AE7  CC                 	db	204
   834  007AE8  FC                 	db	252
   835  007AE9  78                 	db	120
   836  007AEA  00                 	db	0
   837  007AEB  00                 	db	0
   838  007AEC  00                 	db	0
   839  007AED  00                 	db	0
   840  007AEE  C3                 	db	195
   841  007AEF  C6                 	db	198
   842  007AF0  CC                 	db	204
   843  007AF1  CC                 	db	204
   844  007AF2  D8                 	db	216
   845  007AF3  FC                 	db	252
   846  007AF4  EC                 	db	236
   847  007AF5  C6                 	db	198
   848  007AF6  C6                 	db	198
   849  007AF7  C3                 	db	195
   850  007AF8  C3                 	db	195
   851  007AF9  00                 	db	0
   852  007AFA  00                 	db	0
   853  007AFB  00                 	db	0
   854  007AFC  00                 	db	0
   855  007AFD  C0                 	db	192
   856  007AFE  C0                 	db	192
   857  007AFF  C0                 	db	192
   858  007B00  C0                 	db	192
   859  007B01  C0                 	db	192
   860  007B02  C0                 	db	192
   861  007B03  C0                 	db	192
   862  007B04  C0                 	db	192
   863  007B05  C0                 	db	192
   864  007B06  FE                 	db	254
   865  007B07  FE                 	db	254
   866  007B08  00                 	db	0
   867  007B09  00                 	db	0
   868  007B0A  00                 	db	0
   869  007B0B  00                 	db	0
   870  007B0C  00                 	db	0
   871  007B0D  E3                 	db	227
   872  007B0E  80                 	db	128
   873  007B0F  E3                 	db	227
   874  007B10  80                 	db	128
   875  007B11  E3                 	db	227
   876  007B12  80                 	db	128
   877  007B13  F7                 	db	247
   878  007B14  80                 	db	128
   879  007B15  D5                 	db	213
   880  007B16  80                 	db	128
   881  007B17  D5                 	db	213
   882  007B18  80                 	db	128
   883  007B19  D5                 	db	213
   884  007B1A  80                 	db	128
   885  007B1B  D5                 	db	213
   886  007B1C  80                 	db	128
   887  007B1D  DD                 	db	221
   888  007B1E  80                 	db	128
   889  007B1F  D9                 	db	217
   890  007B20  80                 	db	128
   891  007B21  C9                 	db	201
   892  007B22  80                 	db	128
   893  007B23  00                 	db	0
   894  007B24  00                 	db	0
   895  007B25  00                 	db	0
   896  007B26  00                 	db	0
   897  007B27  00                 	db	0
   898  007B28  00                 	db	0
   899  007B29  00                 	db	0
   900  007B2A  C6                 	db	198
   901  007B2B  E6                 	db	230
   902  007B2C  E6                 	db	230
   903  007B2D  E6                 	db	230
   904  007B2E  F6                 	db	246
   905  007B2F  D6                 	db	214
   906  007B30  DE                 	db	222
   907  007B31  DE                 	db	222
   908  007B32  CE                 	db	206
   909  007B33  CE                 	db	206
   910  007B34  C6                 	db	198
   911  007B35  00                 	db	0
   912  007B36  00                 	db	0
   913  007B37  00                 	db	0
   914  007B38  00                 	db	0
   915  007B39  3C                 	db	60
   916  007B3A  7E                 	db	126
   917  007B3B  67                 	db	103
   918  007B3C  C3                 	db	195
   919  007B3D  C3                 	db	195
   920  007B3E  C3                 	db	195
   921  007B3F  C3                 	db	195
   922  007B40  C3                 	db	195
   923  007B41  66                 	db	102
   924  007B42  7E                 	db	126
   925  007B43  3C                 	db	60
   926  007B44  00                 	db	0
   927  007B45  00                 	db	0
   928  007B46  00                 	db	0
   929  007B47  00                 	db	0
   930  007B48  FC                 	db	252
   931  007B49  FE                 	db	254
   932  007B4A  C6                 	db	198
   933  007B4B  C6                 	db	198
   934  007B4C  C6                 	db	198
   935  007B4D  FE                 	db	254
   936  007B4E  FC                 	db	252
   937  007B4F  C0                 	db	192
   938  007B50  C0                 	db	192
   939  007B51  C0                 	db	192
   940  007B52  C0                 	db	192
   941  007B53  00                 	db	0
   942  007B54  00                 	db	0
   943  007B55  00                 	db	0
   944  007B56  00                 	db	0
   945  007B57  00                 	db	0
   946  007B58  3C                 	db	60
   947  007B59  00                 	db	0
   948  007B5A  7E                 	db	126
   949  007B5B  00                 	db	0
   950  007B5C  E7                 	db	231
   951  007B5D  00                 	db	0
   952  007B5E  C3                 	db	195
   953  007B5F  00                 	db	0
   954  007B60  C3                 	db	195
   955  007B61  00                 	db	0
   956  007B62  C3                 	db	195
   957  007B63  00                 	db	0
   958  007B64  C3                 	db	195
   959  007B65  00                 	db	0
   960  007B66  CB                 	db	203
   961  007B67  00                 	db	0
   962  007B68  66                 	db	102
   963  007B69  00                 	db	0
   964  007B6A  7F                 	db	127
   965  007B6B  00                 	db	0
   966  007B6C  3D                 	db	61
   967  007B6D  80                 	db	128
   968  007B6E  00                 	db	0
   969  007B6F  80                 	db	128
   970  007B70  00                 	db	0
   971  007B71  00                 	db	0
   972  007B72  00                 	db	0
   973  007B73  00                 	db	0
   974  007B74  00                 	db	0
   975  007B75  FC                 	db	252
   976  007B76  FE                 	db	254
   977  007B77  C6                 	db	198
   978  007B78  C6                 	db	198
   979  007B79  FE                 	db	254
   980  007B7A  FC                 	db	252
   981  007B7B  CC                 	db	204
   982  007B7C  C6                 	db	198
   983  007B7D  C6                 	db	198
   984  007B7E  C6                 	db	198
   985  007B7F  C3                 	db	195
   986  007B80  00                 	db	0
   987  007B81  00                 	db	0
   988  007B82  00                 	db	0
   989  007B83  00                 	db	0
   990  007B84  7C                 	db	124
   991  007B85  FE                 	db	254
   992  007B86  C6                 	db	198
   993  007B87  C6                 	db	198
   994  007B88  F0                 	db	240
   995  007B89  7C                 	db	124
   996  007B8A  0E                 	db	14
   997  007B8B  C6                 	db	198
   998  007B8C  C6                 	db	198
   999  007B8D  FE                 	db	254
  1000  007B8E  7C                 	db	124
  1001  007B8F  00                 	db	0
  1002  007B90  00                 	db	0
  1003  007B91  00                 	db	0
  1004  007B92  00                 	db	0
  1005  007B93  FF                 	db	255
  1006  007B94  FF                 	db	255
  1007  007B95  18                 	db	24
  1008  007B96  18                 	db	24
  1009  007B97  18                 	db	24
  1010  007B98  18                 	db	24
  1011  007B99  18                 	db	24
  1012  007B9A  18                 	db	24
  1013  007B9B  18                 	db	24
  1014  007B9C  18                 	db	24
  1015  007B9D  18                 	db	24
  1016  007B9E  00                 	db	0
  1017  007B9F  00                 	db	0
  1018  007BA0  00                 	db	0
  1019  007BA1  00                 	db	0
  1020  007BA2  C6                 	db	198
  1021  007BA3  C6                 	db	198
  1022  007BA4  C6                 	db	198
  1023  007BA5  C6                 	db	198
  1024  007BA6  C6                 	db	198
  1025  007BA7  C6                 	db	198
  1026  007BA8  C6                 	db	198
  1027  007BA9  C6                 	db	198
  1028  007BAA  C6                 	db	198
  1029  007BAB  7E                 	db	126
  1030  007BAC  38                 	db	56
  1031  007BAD  00                 	db	0
  1032  007BAE  00                 	db	0
  1033  007BAF  00                 	db	0
  1034  007BB0  00                 	db	0
  1035  007BB1  00                 	db	0
  1036  007BB2  C1                 	db	193
  1037  007BB3  80                 	db	128
  1038  007BB4  C1                 	db	193
  1039  007BB5  80                 	db	128
  1040  007BB6  63                 	db	99
  1041  007BB7  00                 	db	0
  1042  007BB8  63                 	db	99
  1043  007BB9  00                 	db	0
  1044  007BBA  63                 	db	99
  1045  007BBB  00                 	db	0
  1046  007BBC  36                 	db	54
  1047  007BBD  00                 	db	0
  1048  007BBE  36                 	db	54
  1049  007BBF  00                 	db	0
  1050  007BC0  36                 	db	54
  1051  007BC1  00                 	db	0
  1052  007BC2  1C                 	db	28
  1053  007BC3  00                 	db	0
  1054  007BC4  1C                 	db	28
  1055  007BC5  00                 	db	0
  1056  007BC6  1C                 	db	28
  1057  007BC7  00                 	db	0
  1058  007BC8  00                 	db	0
  1059  007BC9  00                 	db	0
  1060  007BCA  00                 	db	0
  1061  007BCB  00                 	db	0
  1062  007BCC  00                 	db	0
  1063  007BCD  00                 	db	0
  1064  007BCE  00                 	db	0
  1065  007BCF  00                 	db	0
  1066  007BD0  C4                 	db	196
  1067  007BD1  60                 	db	96
  1068  007BD2  C4                 	db	196
  1069  007BD3  60                 	db	96
  1070  007BD4  CA                 	db	202
  1071  007BD5  60                 	db	96
  1072  007BD6  6A                 	db	106
  1073  007BD7  C0                 	db	192
  1074  007BD8  6A                 	db	106
  1075  007BD9  C0                 	db	192
  1076  007BDA  6A                 	db	106
  1077  007BDB  C0                 	db	192
  1078  007BDC  6A                 	db	106
  1079  007BDD  C0                 	db	192
  1080  007BDE  6A                 	db	106
  1081  007BDF  C0                 	db	192
  1082  007BE0  31                 	db	49
  1083  007BE1  80                 	db	128
  1084  007BE2  31                 	db	49
  1085  007BE3  80                 	db	128
  1086  007BE4  31                 	db	49
  1087  007BE5  80                 	db	128
  1088  007BE6  00                 	db	0
  1089  007BE7  00                 	db	0
  1090  007BE8  00                 	db	0
  1091  007BE9  00                 	db	0
  1092  007BEA  00                 	db	0
  1093  007BEB  00                 	db	0
  1094  007BEC  00                 	db	0
  1095  007BED  00                 	db	0
  1096  007BEE  C1                 	db	193
  1097  007BEF  80                 	db	128
  1098  007BF0  63                 	db	99
  1099  007BF1  00                 	db	0
  1100  007BF2  36                 	db	54
  1101  007BF3  00                 	db	0
  1102  007BF4  36                 	db	54
  1103  007BF5  00                 	db	0
  1104  007BF6  1C                 	db	28
  1105  007BF7  00                 	db	0
  1106  007BF8  1C                 	db	28
  1107  007BF9  00                 	db	0
  1108  007BFA  1C                 	db	28
  1109  007BFB  00                 	db	0
  1110  007BFC  36                 	db	54
  1111  007BFD  00                 	db	0
  1112  007BFE  36                 	db	54
  1113  007BFF  00                 	db	0
  1114  007C00  63                 	db	99
  1115  007C01  00                 	db	0
  1116  007C02  C1                 	db	193
  1117  007C03  80                 	db	128
  1118  007C04  00                 	db	0
  1119  007C05  00                 	db	0
  1120  007C06  00                 	db	0
  1121  007C07  00                 	db	0
  1122  007C08  00                 	db	0
  1123  007C09  00                 	db	0
  1124  007C0A  00                 	db	0
  1125  007C0B  C3                 	db	195
  1126  007C0C  66                 	db	102
  1127  007C0D  66                 	db	102
  1128  007C0E  3C                 	db	60
  1129  007C0F  3C                 	db	60
  1130  007C10  18                 	db	24
  1131  007C11  18                 	db	24
  1132  007C12  18                 	db	24
  1133  007C13  18                 	db	24
  1134  007C14  18                 	db	24
  1135  007C15  18                 	db	24
  1136  007C16  00                 	db	0
  1137  007C17  00                 	db	0
  1138  007C18  00                 	db	0
  1139  007C19  00                 	db	0
  1140  007C1A  FE                 	db	254
  1141  007C1B  FE                 	db	254
  1142  007C1C  06                 	db	6
  1143  007C1D  0C                 	db	12
  1144  007C1E  18                 	db	24
  1145  007C1F  30                 	db	48
  1146  007C20  30                 	db	48
  1147  007C21  60                 	db	96
  1148  007C22  C0                 	db	192
  1149  007C23  FE                 	db	254
  1150  007C24  FE                 	db	254
  1151  007C25  00                 	db	0
  1152  007C26  00                 	db	0
  1153  007C27  00                 	db	0
  1154  007C28  00                 	db	0
  1155  007C29  E0                 	db	224
  1156  007C2A  E0                 	db	224
  1157  007C2B  C0                 	db	192
  1158  007C2C  C0                 	db	192
  1159  007C2D  C0                 	db	192
  1160  007C2E  C0                 	db	192
  1161  007C2F  C0                 	db	192
  1162  007C30  C0                 	db	192
  1163  007C31  C0                 	db	192
  1164  007C32  C0                 	db	192
  1165  007C33  C0                 	db	192
  1166  007C34  C0                 	db	192
  1167  007C35  E0                 	db	224
  1168  007C36  E0                 	db	224
  1169  007C37  00                 	db	0
  1170  007C38  C0                 	db	192
  1171  007C39  C0                 	db	192
  1172  007C3A  C0                 	db	192
  1173  007C3B  60                 	db	96
  1174  007C3C  60                 	db	96
  1175  007C3D  60                 	db	96
  1176  007C3E  60                 	db	96
  1177  007C3F  60                 	db	96
  1178  007C40  30                 	db	48
  1179  007C41  30                 	db	48
  1180  007C42  30                 	db	48
  1181  007C43  00                 	db	0
  1182  007C44  00                 	db	0
  1183  007C45  00                 	db	0
  1184  007C46  00                 	db	0
  1185  007C47  E0                 	db	224
  1186  007C48  E0                 	db	224
  1187  007C49  60                 	db	96
  1188  007C4A  60                 	db	96
  1189  007C4B  60                 	db	96
  1190  007C4C  60                 	db	96
  1191  007C4D  60                 	db	96
  1192  007C4E  60                 	db	96
  1193  007C4F  60                 	db	96
  1194  007C50  60                 	db	96
  1195  007C51  60                 	db	96
  1196  007C52  60                 	db	96
  1197  007C53  E0                 	db	224
  1198  007C54  E0                 	db	224
  1199  007C55  00                 	db	0
  1200  007C56  38                 	db	56
  1201  007C57  38                 	db	56
  1202  007C58  6C                 	db	108
  1203  007C59  6C                 	db	108
  1204  007C5A  6C                 	db	108
  1205  007C5B  C6                 	db	198
  1206  007C5C  00                 	db	0
  1207  007C5D  00                 	db	0
  1208  007C5E  00                 	db	0
  1209  007C5F  00                 	db	0
  1210  007C60  00                 	db	0
  1211  007C61  00                 	db	0
  1212  007C62  00                 	db	0
  1213  007C63  00                 	db	0
  1214  007C64  00                 	db	0
  1215  007C65  00                 	db	0
  1216  007C66  00                 	db	0
  1217  007C67  00                 	db	0
  1218  007C68  00                 	db	0
  1219  007C69  00                 	db	0
  1220  007C6A  00                 	db	0
  1221  007C6B  00                 	db	0
  1222  007C6C  00                 	db	0
  1223  007C6D  00                 	db	0
  1224  007C6E  00                 	db	0
  1225  007C6F  00                 	db	0
  1226  007C70  00                 	db	0
  1227  007C71  FE                 	db	254
  1228  007C72  00                 	db	0
  1229  007C73  00                 	db	0
  1230  007C74  C0                 	db	192
  1231  007C75  60                 	db	96
  1232  007C76  00                 	db	0
  1233  007C77  00                 	db	0
  1234  007C78  00                 	db	0
  1235  007C79  00                 	db	0
  1236  007C7A  00                 	db	0
  1237  007C7B  00                 	db	0
  1238  007C7C  00                 	db	0
  1239  007C7D  00                 	db	0
  1240  007C7E  00                 	db	0
  1241  007C7F  00                 	db	0
  1242  007C80  00                 	db	0
  1243  007C81  00                 	db	0
  1244  007C82  00                 	db	0
  1245  007C83  00                 	db	0
  1246  007C84  00                 	db	0
  1247  007C85  00                 	db	0
  1248  007C86  78                 	db	120
  1249  007C87  FC                 	db	252
  1250  007C88  CC                 	db	204
  1251  007C89  3C                 	db	60
  1252  007C8A  FC                 	db	252
  1253  007C8B  CC                 	db	204
  1254  007C8C  FC                 	db	252
  1255  007C8D  6C                 	db	108
  1256  007C8E  00                 	db	0
  1257  007C8F  00                 	db	0
  1258  007C90  00                 	db	0
  1259  007C91  00                 	db	0
  1260  007C92  C0                 	db	192
  1261  007C93  C0                 	db	192
  1262  007C94  C0                 	db	192
  1263  007C95  F8                 	db	248
  1264  007C96  FC                 	db	252
  1265  007C97  CC                 	db	204
  1266  007C98  CC                 	db	204
  1267  007C99  CC                 	db	204
  1268  007C9A  CC                 	db	204
  1269  007C9B  F8                 	db	248
  1270  007C9C  F8                 	db	248
  1271  007C9D  00                 	db	0
  1272  007C9E  00                 	db	0
  1273  007C9F  00                 	db	0
  1274  007CA0  00                 	db	0
  1275  007CA1  00                 	db	0
  1276  007CA2  00                 	db	0
  1277  007CA3  00                 	db	0
  1278  007CA4  70                 	db	112
  1279  007CA5  78                 	db	120
  1280  007CA6  D8                 	db	216
  1281  007CA7  C0                 	db	192
  1282  007CA8  C0                 	db	192
  1283  007CA9  D8                 	db	216
  1284  007CAA  78                 	db	120
  1285  007CAB  70                 	db	112
  1286  007CAC  00                 	db	0
  1287  007CAD  00                 	db	0
  1288  007CAE  00                 	db	0
  1289  007CAF  00                 	db	0
  1290  007CB0  0C                 	db	12
  1291  007CB1  0C                 	db	12
  1292  007CB2  0C                 	db	12
  1293  007CB3  7C                 	db	124
  1294  007CB4  FC                 	db	252
  1295  007CB5  CC                 	db	204
  1296  007CB6  CC                 	db	204
  1297  007CB7  CC                 	db	204
  1298  007CB8  CC                 	db	204
  1299  007CB9  FC                 	db	252
  1300  007CBA  7C                 	db	124
  1301  007CBB  00                 	db	0
  1302  007CBC  00                 	db	0
  1303  007CBD  00                 	db	0
  1304  007CBE  00                 	db	0
  1305  007CBF  00                 	db	0
  1306  007CC0  00                 	db	0
  1307  007CC1  00                 	db	0
  1308  007CC2  70                 	db	112
  1309  007CC3  F8                 	db	248
  1310  007CC4  D8                 	db	216
  1311  007CC5  F8                 	db	248
  1312  007CC6  C0                 	db	192
  1313  007CC7  D8                 	db	216
  1314  007CC8  F8                 	db	248
  1315  007CC9  70                 	db	112
  1316  007CCA  00                 	db	0
  1317  007CCB  00                 	db	0
  1318  007CCC  00                 	db	0
  1319  007CCD  00                 	db	0
  1320  007CCE  30                 	db	48
  1321  007CCF  70                 	db	112
  1322  007CD0  60                 	db	96
  1323  007CD1  F0                 	db	240
  1324  007CD2  F0                 	db	240
  1325  007CD3  60                 	db	96
  1326  007CD4  60                 	db	96
  1327  007CD5  60                 	db	96
  1328  007CD6  60                 	db	96
  1329  007CD7  60                 	db	96
  1330  007CD8  60                 	db	96
  1331  007CD9  00                 	db	0
  1332  007CDA  00                 	db	0
  1333  007CDB  00                 	db	0
  1334  007CDC  00                 	db	0
  1335  007CDD  00                 	db	0
  1336  007CDE  00                 	db	0
  1337  007CDF  00                 	db	0
  1338  007CE0  6C                 	db	108
  1339  007CE1  FC                 	db	252
  1340  007CE2  CC                 	db	204
  1341  007CE3  CC                 	db	204
  1342  007CE4  CC                 	db	204
  1343  007CE5  CC                 	db	204
  1344  007CE6  FC                 	db	252
  1345  007CE7  6C                 	db	108
  1346  007CE8  0C                 	db	12
  1347  007CE9  CC                 	db	204
  1348  007CEA  78                 	db	120
  1349  007CEB  00                 	db	0
  1350  007CEC  C0                 	db	192
  1351  007CED  C0                 	db	192
  1352  007CEE  C0                 	db	192
  1353  007CEF  D8                 	db	216
  1354  007CF0  FC                 	db	252
  1355  007CF1  CC                 	db	204
  1356  007CF2  CC                 	db	204
  1357  007CF3  CC                 	db	204
  1358  007CF4  CC                 	db	204
  1359  007CF5  CC                 	db	204
  1360  007CF6  CC                 	db	204
  1361  007CF7  00                 	db	0
  1362  007CF8  00                 	db	0
  1363  007CF9  00                 	db	0
  1364  007CFA  00                 	db	0
  1365  007CFB  C0                 	db	192
  1366  007CFC  C0                 	db	192
  1367  007CFD  00                 	db	0
  1368  007CFE  C0                 	db	192
  1369  007CFF  C0                 	db	192
  1370  007D00  C0                 	db	192
  1371  007D01  C0                 	db	192
  1372  007D02  C0                 	db	192
  1373  007D03  C0                 	db	192
  1374  007D04  C0                 	db	192
  1375  007D05  C0                 	db	192
  1376  007D06  00                 	db	0
  1377  007D07  00                 	db	0
  1378  007D08  00                 	db	0
  1379  007D09  00                 	db	0
  1380  007D0A  30                 	db	48
  1381  007D0B  30                 	db	48
  1382  007D0C  00                 	db	0
  1383  007D0D  30                 	db	48
  1384  007D0E  30                 	db	48
  1385  007D0F  30                 	db	48
  1386  007D10  30                 	db	48
  1387  007D11  30                 	db	48
  1388  007D12  30                 	db	48
  1389  007D13  30                 	db	48
  1390  007D14  30                 	db	48
  1391  007D15  30                 	db	48
  1392  007D16  F0                 	db	240
  1393  007D17  E0                 	db	224
  1394  007D18  00                 	db	0
  1395  007D19  C0                 	db	192
  1396  007D1A  C0                 	db	192
  1397  007D1B  C0                 	db	192
  1398  007D1C  CC                 	db	204
  1399  007D1D  D8                 	db	216
  1400  007D1E  F0                 	db	240
  1401  007D1F  F8                 	db	248
  1402  007D20  D8                 	db	216
  1403  007D21  D8                 	db	216
  1404  007D22  CC                 	db	204
  1405  007D23  CC                 	db	204
  1406  007D24  00                 	db	0
  1407  007D25  00                 	db	0
  1408  007D26  00                 	db	0
  1409  007D27  00                 	db	0
  1410  007D28  C0                 	db	192
  1411  007D29  C0                 	db	192
  1412  007D2A  C0                 	db	192
  1413  007D2B  C0                 	db	192
  1414  007D2C  C0                 	db	192
  1415  007D2D  C0                 	db	192
  1416  007D2E  C0                 	db	192
  1417  007D2F  C0                 	db	192
  1418  007D30  C0                 	db	192
  1419  007D31  C0                 	db	192
  1420  007D32  C0                 	db	192
  1421  007D33  00                 	db	0
  1422  007D34  00                 	db	0
  1423  007D35  00                 	db	0
  1424  007D36  00                 	db	0
  1425  007D37  00                 	db	0
  1426  007D38  00                 	db	0
  1427  007D39  00                 	db	0
  1428  007D3A  00                 	db	0
  1429  007D3B  00                 	db	0
  1430  007D3C  00                 	db	0
  1431  007D3D  00                 	db	0
  1432  007D3E  D9                 	db	217
  1433  007D3F  80                 	db	128
  1434  007D40  FF                 	db	255
  1435  007D41  C0                 	db	192
  1436  007D42  CC                 	db	204
  1437  007D43  C0                 	db	192
  1438  007D44  CC                 	db	204
  1439  007D45  C0                 	db	192
  1440  007D46  CC                 	db	204
  1441  007D47  C0                 	db	192
  1442  007D48  CC                 	db	204
  1443  007D49  C0                 	db	192
  1444  007D4A  CC                 	db	204
  1445  007D4B  C0                 	db	192
  1446  007D4C  CC                 	db	204
  1447  007D4D  C0                 	db	192
  1448  007D4E  00                 	db	0
  1449  007D4F  00                 	db	0
  1450  007D50  00                 	db	0
  1451  007D51  00                 	db	0
  1452  007D52  00                 	db	0
  1453  007D53  00                 	db	0
  1454  007D54  00                 	db	0
  1455  007D55  00                 	db	0
  1456  007D56  00                 	db	0
  1457  007D57  00                 	db	0
  1458  007D58  D8                 	db	216
  1459  007D59  FC                 	db	252
  1460  007D5A  CC                 	db	204
  1461  007D5B  CC                 	db	204
  1462  007D5C  CC                 	db	204
  1463  007D5D  CC                 	db	204
  1464  007D5E  CC                 	db	204
  1465  007D5F  CC                 	db	204
  1466  007D60  00                 	db	0
  1467  007D61  00                 	db	0
  1468  007D62  00                 	db	0
  1469  007D63  00                 	db	0
  1470  007D64  00                 	db	0
  1471  007D65  00                 	db	0
  1472  007D66  00                 	db	0
  1473  007D67  78                 	db	120
  1474  007D68  78                 	db	120
  1475  007D69  CC                 	db	204
  1476  007D6A  CC                 	db	204
  1477  007D6B  CC                 	db	204
  1478  007D6C  CC                 	db	204
  1479  007D6D  78                 	db	120
  1480  007D6E  78                 	db	120
  1481  007D6F  00                 	db	0
  1482  007D70  00                 	db	0
  1483  007D71  00                 	db	0
  1484  007D72  00                 	db	0
  1485  007D73  00                 	db	0
  1486  007D74  00                 	db	0
  1487  007D75  00                 	db	0
  1488  007D76  D8                 	db	216
  1489  007D77  FC                 	db	252
  1490  007D78  CC                 	db	204
  1491  007D79  CC                 	db	204
  1492  007D7A  CC                 	db	204
  1493  007D7B  CC                 	db	204
  1494  007D7C  F8                 	db	248
  1495  007D7D  D8                 	db	216
  1496  007D7E  C0                 	db	192
  1497  007D7F  C0                 	db	192
  1498  007D80  C0                 	db	192
  1499  007D81  00                 	db	0
  1500  007D82  00                 	db	0
  1501  007D83  00                 	db	0
  1502  007D84  00                 	db	0
  1503  007D85  6C                 	db	108
  1504  007D86  FC                 	db	252
  1505  007D87  CC                 	db	204
  1506  007D88  CC                 	db	204
  1507  007D89  CC                 	db	204
  1508  007D8A  CC                 	db	204
  1509  007D8B  FC                 	db	252
  1510  007D8C  6C                 	db	108
  1511  007D8D  0C                 	db	12
  1512  007D8E  0C                 	db	12
  1513  007D8F  0C                 	db	12
  1514  007D90  00                 	db	0
  1515  007D91  00                 	db	0
  1516  007D92  00                 	db	0
  1517  007D93  00                 	db	0
  1518  007D94  D0                 	db	208
  1519  007D95  F0                 	db	240
  1520  007D96  C0                 	db	192
  1521  007D97  C0                 	db	192
  1522  007D98  C0                 	db	192
  1523  007D99  C0                 	db	192
  1524  007D9A  C0                 	db	192
  1525  007D9B  C0                 	db	192
  1526  007D9C  00                 	db	0
  1527  007D9D  00                 	db	0
  1528  007D9E  00                 	db	0
  1529  007D9F  00                 	db	0
  1530  007DA0  00                 	db	0
  1531  007DA1  00                 	db	0
  1532  007DA2  00                 	db	0
  1533  007DA3  70                 	db	112
  1534  007DA4  F8                 	db	248
  1535  007DA5  C8                 	db	200
  1536  007DA6  E0                 	db	224
  1537  007DA7  38                 	db	56
  1538  007DA8  98                 	db	152
  1539  007DA9  F8                 	db	248
  1540  007DAA  70                 	db	112
  1541  007DAB  00                 	db	0
  1542  007DAC  00                 	db	0
  1543  007DAD  00                 	db	0
  1544  007DAE  00                 	db	0
  1545  007DAF  20                 	db	32
  1546  007DB0  60                 	db	96
  1547  007DB1  60                 	db	96
  1548  007DB2  F0                 	db	240
  1549  007DB3  F0                 	db	240
  1550  007DB4  60                 	db	96
  1551  007DB5  60                 	db	96
  1552  007DB6  60                 	db	96
  1553  007DB7  60                 	db	96
  1554  007DB8  70                 	db	112
  1555  007DB9  70                 	db	112
  1556  007DBA  00                 	db	0
  1557  007DBB  00                 	db	0
  1558  007DBC  00                 	db	0
  1559  007DBD  00                 	db	0
  1560  007DBE  00                 	db	0
  1561  007DBF  00                 	db	0
  1562  007DC0  00                 	db	0
  1563  007DC1  CC                 	db	204
  1564  007DC2  CC                 	db	204
  1565  007DC3  CC                 	db	204
  1566  007DC4  CC                 	db	204
  1567  007DC5  CC                 	db	204
  1568  007DC6  CC                 	db	204
  1569  007DC7  FC                 	db	252
  1570  007DC8  6C                 	db	108
  1571  007DC9  00                 	db	0
  1572  007DCA  00                 	db	0
  1573  007DCB  00                 	db	0
  1574  007DCC  00                 	db	0
  1575  007DCD  00                 	db	0
  1576  007DCE  00                 	db	0
  1577  007DCF  00                 	db	0
  1578  007DD0  C6                 	db	198
  1579  007DD1  C6                 	db	198
  1580  007DD2  6C                 	db	108
  1581  007DD3  6C                 	db	108
  1582  007DD4  6C                 	db	108
  1583  007DD5  38                 	db	56
  1584  007DD6  38                 	db	56
  1585  007DD7  38                 	db	56
  1586  007DD8  00                 	db	0
  1587  007DD9  00                 	db	0
  1588  007DDA  00                 	db	0
  1589  007DDB  00                 	db	0
  1590  007DDC  00                 	db	0
  1591  007DDD  00                 	db	0
  1592  007DDE  00                 	db	0
  1593  007DDF  00                 	db	0
  1594  007DE0  00                 	db	0
  1595  007DE1  00                 	db	0
  1596  007DE2  00                 	db	0
  1597  007DE3  DD                 	db	221
  1598  007DE4  80                 	db	128
  1599  007DE5  DD                 	db	221
  1600  007DE6  80                 	db	128
  1601  007DE7  DD                 	db	221
  1602  007DE8  80                 	db	128
  1603  007DE9  D5                 	db	213
  1604  007DEA  80                 	db	128
  1605  007DEB  55                 	db	85
  1606  007DEC  00                 	db	0
  1607  007DED  77                 	db	119
  1608  007DEE  00                 	db	0
  1609  007DEF  77                 	db	119
  1610  007DF0  00                 	db	0
  1611  007DF1  77                 	db	119
  1612  007DF2  00                 	db	0
  1613  007DF3  00                 	db	0
  1614  007DF4  00                 	db	0
  1615  007DF5  00                 	db	0
  1616  007DF6  00                 	db	0
  1617  007DF7  00                 	db	0
  1618  007DF8  00                 	db	0
  1619  007DF9  00                 	db	0
  1620  007DFA  00                 	db	0
  1621  007DFB  00                 	db	0
  1622  007DFC  00                 	db	0
  1623  007DFD  CC                 	db	204
  1624  007DFE  78                 	db	120
  1625  007DFF  78                 	db	120
  1626  007E00  30                 	db	48
  1627  007E01  30                 	db	48
  1628  007E02  78                 	db	120
  1629  007E03  78                 	db	120
  1630  007E04  CC                 	db	204
  1631  007E05  00                 	db	0
  1632  007E06  00                 	db	0
  1633  007E07  00                 	db	0
  1634  007E08  00                 	db	0
  1635  007E09  00                 	db	0
  1636  007E0A  00                 	db	0
  1637  007E0B  00                 	db	0
  1638  007E0C  C6                 	db	198
  1639  007E0D  C6                 	db	198
  1640  007E0E  6C                 	db	108
  1641  007E0F  6C                 	db	108
  1642  007E10  6C                 	db	108
  1643  007E11  38                 	db	56
  1644  007E12  38                 	db	56
  1645  007E13  38                 	db	56
  1646  007E14  30                 	db	48
  1647  007E15  F0                 	db	240
  1648  007E16  E0                 	db	224
  1649  007E17  00                 	db	0
  1650  007E18  00                 	db	0
  1651  007E19  00                 	db	0
  1652  007E1A  00                 	db	0
  1653  007E1B  FC                 	db	252
  1654  007E1C  FC                 	db	252
  1655  007E1D  18                 	db	24
  1656  007E1E  30                 	db	48
  1657  007E1F  30                 	db	48
  1658  007E20  60                 	db	96
  1659  007E21  FC                 	db	252
  1660  007E22  FC                 	db	252
  1661  007E23  00                 	db	0
  1662  007E24  00                 	db	0
  1663  007E25  00                 	db	0
  1664  007E26  00                 	db	0
  1665  007E27  30                 	db	48
  1666  007E28  70                 	db	112
  1667  007E29  60                 	db	96
  1668  007E2A  60                 	db	96
  1669  007E2B  60                 	db	96
  1670  007E2C  60                 	db	96
  1671  007E2D  C0                 	db	192
  1672  007E2E  C0                 	db	192
  1673  007E2F  60                 	db	96
  1674  007E30  60                 	db	96
  1675  007E31  60                 	db	96
  1676  007E32  60                 	db	96
  1677  007E33  70                 	db	112
  1678  007E34  30                 	db	48
  1679  007E35  00                 	db	0
  1680  007E36  C0                 	db	192
  1681  007E37  C0                 	db	192
  1682  007E38  C0                 	db	192
  1683  007E39  C0                 	db	192
  1684  007E3A  C0                 	db	192
  1685  007E3B  C0                 	db	192
  1686  007E3C  C0                 	db	192
  1687  007E3D  C0                 	db	192
  1688  007E3E  C0                 	db	192
  1689  007E3F  C0                 	db	192
  1690  007E40  C0                 	db	192
  1691  007E41  C0                 	db	192
  1692  007E42  C0                 	db	192
  1693  007E43  C0                 	db	192
  1694  007E44  00                 	db	0
  1695  007E45  C0                 	db	192
  1696  007E46  E0                 	db	224
  1697  007E47  60                 	db	96
  1698  007E48  60                 	db	96
  1699  007E49  60                 	db	96
  1700  007E4A  60                 	db	96
  1701  007E4B  30                 	db	48
  1702  007E4C  30                 	db	48
  1703  007E4D  60                 	db	96
  1704  007E4E  60                 	db	96
  1705  007E4F  60                 	db	96
  1706  007E50  60                 	db	96
  1707  007E51  E0                 	db	224
  1708  007E52  C0                 	db	192
  1709  007E53  00                 	db	0
  1710  007E54  00                 	db	0
  1711  007E55  00                 	db	0
  1712  007E56  00                 	db	0
  1713  007E57  00                 	db	0
  1714  007E58  E4                 	db	228
  1715  007E59  FC                 	db	252
  1716  007E5A  9C                 	db	156
  1717  007E5B  00                 	db	0
  1718  007E5C  00                 	db	0
  1719  007E5D  00                 	db	0
  1720  007E5E  00                 	db	0
  1721  007E5F  00                 	db	0
  1722  007E60  00                 	db	0
  1723  007E61  00                 	db	0
  1724  007E62                     __end_of_arialNarrow_12ptBitmaps:
  1725                           	callstack 0
  1726  007E62                     _arialNarrow_12ptDescriptors:
  1727                           	callstack 0
  1728  007E62  08                 	db	8
  1729  007E63  0000               	dw	0
  1730  007E65  02                 	db	2
  1731  007E66  000F               	dw	15
  1732  007E68  05                 	db	5
  1733  007E69  001E               	dw	30
  1734  007E6B  07                 	db	7
  1735  007E6C  002D               	dw	45
  1736  007E6E  07                 	db	7
  1737  007E6F  003C               	dw	60
  1738  007E71  0A                 	db	10
  1739  007E72  004B               	dw	75
  1740  007E74  08                 	db	8
  1741  007E75  0069               	dw	105
  1742  007E77  02                 	db	2
  1743  007E78  0078               	dw	120
  1744  007E7A  04                 	db	4
  1745  007E7B  0087               	dw	135
  1746  007E7D  04                 	db	4
  1747  007E7E  0096               	dw	150
  1748  007E80  05                 	db	5
  1749  007E81  00A5               	dw	165
  1750  007E83  06                 	db	6
  1751  007E84  00B4               	dw	180
  1752  007E86  02                 	db	2
  1753  007E87  00C3               	dw	195
  1754  007E89  04                 	db	4
  1755  007E8A  00D2               	dw	210
  1756  007E8C  02                 	db	2
  1757  007E8D  00E1               	dw	225
  1758  007E8F  04                 	db	4
  1759  007E90  00F0               	dw	240
  1760  007E92  06                 	db	6
  1761  007E93  00FF               	dw	255
  1762  007E95  04                 	db	4
  1763  007E96  010E               	dw	270
  1764  007E98  06                 	db	6
  1765  007E99  011D               	dw	285
  1766  007E9B  06                 	db	6
  1767  007E9C  012C               	dw	300
  1768  007E9E  07                 	db	7
  1769  007E9F  013B               	dw	315
  1770  007EA1  06                 	db	6
  1771  007EA2  014A               	dw	330
  1772  007EA4  05                 	db	5
  1773  007EA5  0159               	dw	345
  1774  007EA7  05                 	db	5
  1775  007EA8  0168               	dw	360
  1776  007EAA  06                 	db	6
  1777  007EAB  0177               	dw	375
  1778  007EAD  06                 	db	6
  1779  007EAE  0186               	dw	390
  1780  007EB0  02                 	db	2
  1781  007EB1  0195               	dw	405
  1782  007EB3  02                 	db	2
  1783  007EB4  01A4               	dw	420
  1784  007EB6  06                 	db	6
  1785  007EB7  01B3               	dw	435
  1786  007EB9  06                 	db	6
  1787  007EBA  01C2               	dw	450
  1788  007EBC  06                 	db	6
  1789  007EBD  01D1               	dw	465
  1790  007EBF  06                 	db	6
  1791  007EC0  01E0               	dw	480
  1792  007EC2  0D                 	db	13
  1793  007EC3  01EF               	dw	495
  1794  007EC5  09                 	db	9
  1795  007EC6  020D               	dw	525
  1796  007EC8  07                 	db	7
  1797  007EC9  022B               	dw	555
  1798  007ECB  08                 	db	8
  1799  007ECC  023A               	dw	570
  1800  007ECE  07                 	db	7
  1801  007ECF  0249               	dw	585
  1802  007ED1  07                 	db	7
  1803  007ED2  0258               	dw	600
  1804  007ED4  06                 	db	6
  1805  007ED5  0267               	dw	615
  1806  007ED7  08                 	db	8
  1807  007ED8  0276               	dw	630
  1808  007EDA  07                 	db	7
  1809  007EDB  0285               	dw	645
  1810  007EDD  02                 	db	2
  1811  007EDE  0294               	dw	660
  1812  007EE0  06                 	db	6
  1813  007EE1  02A3               	dw	675
  1814  007EE3  08                 	db	8
  1815  007EE4  02B2               	dw	690
  1816  007EE6  07                 	db	7
  1817  007EE7  02C1               	dw	705
  1818  007EE9  09                 	db	9
  1819  007EEA  02D0               	dw	720
  1820  007EEC  07                 	db	7
  1821  007EED  02EE               	dw	750
  1822  007EEF  08                 	db	8
  1823  007EF0  02FD               	dw	765
  1824  007EF2  07                 	db	7
  1825  007EF3  030C               	dw	780
  1826  007EF5  09                 	db	9
  1827  007EF6  031B               	dw	795
  1828  007EF8  08                 	db	8
  1829  007EF9  0339               	dw	825
  1830  007EFB  07                 	db	7
  1831  007EFC  0348               	dw	840
  1832  007EFE  08                 	db	8
  1833  007EFF  0357               	dw	855
  1834  007F01  07                 	db	7
  1835  007F02  0366               	dw	870
  1836  007F04  09                 	db	9
  1837  007F05  0375               	dw	885
  1838  007F07  0B                 	db	11
  1839  007F08  0393               	dw	915
  1840  007F0A  09                 	db	9
  1841  007F0B  03B1               	dw	945
  1842  007F0D  08                 	db	8
  1843  007F0E  03CF               	dw	975
  1844  007F10  07                 	db	7
  1845  007F11  03DE               	dw	990
  1846  007F13  03                 	db	3
  1847  007F14  03ED               	dw	1005
  1848  007F16  04                 	db	4
  1849  007F17  03FC               	dw	1020
  1850  007F19  03                 	db	3
  1851  007F1A  040B               	dw	1035
  1852  007F1C  07                 	db	7
  1853  007F1D  041A               	dw	1050
  1854  007F1F  07                 	db	7
  1855  007F20  0429               	dw	1065
  1856  007F22  03                 	db	3
  1857  007F23  0438               	dw	1080
  1858  007F25  06                 	db	6
  1859  007F26  0447               	dw	1095
  1860  007F28  06                 	db	6
  1861  007F29  0456               	dw	1110
  1862  007F2B  05                 	db	5
  1863  007F2C  0465               	dw	1125
  1864  007F2E  06                 	db	6
  1865  007F2F  0474               	dw	1140
  1866  007F31  05                 	db	5
  1867  007F32  0483               	dw	1155
  1868  007F34  04                 	db	4
  1869  007F35  0492               	dw	1170
  1870  007F37  06                 	db	6
  1871  007F38  04A1               	dw	1185
  1872  007F3A  06                 	db	6
  1873  007F3B  04B0               	dw	1200
  1874  007F3D  02                 	db	2
  1875  007F3E  04BF               	dw	1215
  1876  007F40  04                 	db	4
  1877  007F41  04CE               	dw	1230
  1878  007F43  06                 	db	6
  1879  007F44  04DD               	dw	1245
  1880  007F46  02                 	db	2
  1881  007F47  04EC               	dw	1260
  1882  007F49  0A                 	db	10
  1883  007F4A  04FB               	dw	1275
  1884  007F4C  06                 	db	6
  1885  007F4D  0519               	dw	1305
  1886  007F4F  06                 	db	6
  1887  007F50  0528               	dw	1320
  1888  007F52  06                 	db	6
  1889  007F53  0537               	dw	1335
  1890  007F55  06                 	db	6
  1891  007F56  0546               	dw	1350
  1892  007F58  04                 	db	4
  1893  007F59  0555               	dw	1365
  1894  007F5B  05                 	db	5
  1895  007F5C  0564               	dw	1380
  1896  007F5E  04                 	db	4
  1897  007F5F  0573               	dw	1395
  1898  007F61  06                 	db	6
  1899  007F62  0582               	dw	1410
  1900  007F64  07                 	db	7
  1901  007F65  0591               	dw	1425
  1902  007F67  09                 	db	9
  1903  007F68  05A0               	dw	1440
  1904  007F6A  06                 	db	6
  1905  007F6B  05BE               	dw	1470
  1906  007F6D  07                 	db	7
  1907  007F6E  05CD               	dw	1485
  1908  007F70  06                 	db	6
  1909  007F71  05DC               	dw	1500
  1910  007F73  04                 	db	4
  1911  007F74  05EB               	dw	1515
  1912  007F76  02                 	db	2
  1913  007F77  05FA               	dw	1530
  1914  007F79  04                 	db	4
  1915  007F7A  0609               	dw	1545
  1916  007F7C  06                 	db	6
  1917  007F7D  0618               	dw	1560
  1918  007F7F                     __end_of_arialNarrow_12ptDescriptors:
  1919                           	callstack 0
  1920  007F7F                     _arialNarrow_12ptFontInfo:
  1921                           	callstack 0
  1922  007F7F  0F                 	db	15
  1923  007F80  20                 	db	32
  1924  007F81  7E                 	db	126
  1925  007F82  62                 	db	low _arialNarrow_12ptDescriptors
  1926  007F83  7E                 	db	high _arialNarrow_12ptDescriptors
  1927  007F84  3B                 	db	low _arialNarrow_12ptBitmaps
  1928  007F85  78                 	db	high _arialNarrow_12ptBitmaps
  1929  007F86                     __end_of_arialNarrow_12ptFontInfo:
  1930                           	callstack 0
  1931  0000                     _ANSB2	set	31178
  1932  0000                     _ANSB1	set	31177
  1933  0000                     _WPUB	set	3937
  1934  0000                     _PORTBbits	set	3969
  1935  0000                     _ADRESL	set	4035
  1936  0000                     _ADRESH	set	4036
  1937  0000                     _ADCON0	set	4034
  1938  0000                     _TRISA	set	3986
  1939  0000                     _PORTA	set	3968
  1940  0000                     _ADCON2	set	4032
  1941  0000                     _T2CONbits	set	4026
  1942  0000                     _CCPR2L	set	3943
  1943  0000                     _CCP2CONbits	set	3942
  1944  0000                     _PR2	set	4027
  1945  0000                     _TMR0L	set	4054
  1946  0000                     _TMR0H	set	4055
  1947  0000                     _T0CON	set	4053
  1948  0000                     _OSCCON	set	4051
  1949  0000                     _TMR0IF	set	32658
  1950  0000                     _LATB4	set	31828
  1951  0000                     _LATB3	set	31827
  1952  0000                     _LATB1	set	31825
  1953  0000                     _TRISB4	set	31900
  1954  0000                     _TRISB3	set	31899
  1955  0000                     _RBPU	set	32655
  1956  0000                     _TRISB1	set	31897
  1957  0000                     _LATB2	set	31826
  1958  0000                     _TRISB2	set	31898
  1959  0000                     _INT1IF	set	32640
  1960  0000                     _LATC2	set	31834
  1961  0000                     _LATC5	set	31837
  1962  0000                     _TRISC4	set	31908
  1963  0000                     _TRISC3	set	31907
  1964  0000                     _TRISC2	set	31906
  1965  0000                     _TRISC5	set	31909
  1966  0000                     _LATC3	set	31835
  1967  0000                     _LATC4	set	31836
  1968  0000                     _TMR2IF	set	31985
  1969  0000                     _TRISC1	set	31905
  1970  0000                     _TMR0IE	set	32661
  1971  0000                     _LATC0	set	31832
  1972  0000                     _TRISC0	set	31904
  1973  0000                     _INTEDG1	set	32653
  1974  0000                     _INT1IE	set	32643
  1975  0000                     _GIE	set	32663
  1976  0000                     _PLLEN	set	31966
  1977  007F86                     STR_14:
  1978  007F86  50                 	db	80	;'P'
  1979  007F87  4C                 	db	76	;'L'
  1980  007F88  41                 	db	65	;'A'
  1981  007F89  59                 	db	89	;'Y'
  1982  007F8A  45                 	db	69	;'E'
  1983  007F8B  52                 	db	82	;'R'
  1984  007F8C  20                 	db	32
  1985  007F8D  31                 	db	49	;'1'
  1986  007F8E  20                 	db	32
  1987  007F8F  57                 	db	87	;'W'
  1988  007F90  49                 	db	73	;'I'
  1989  007F91  4E                 	db	78	;'N'
  1990  007F92  00                 	db	0
  1991  007F93                     STR_13:
  1992  007F93  50                 	db	80	;'P'
  1993  007F94  4C                 	db	76	;'L'
  1994  007F95  41                 	db	65	;'A'
  1995  007F96  59                 	db	89	;'Y'
  1996  007F97  45                 	db	69	;'E'
  1997  007F98  52                 	db	82	;'R'
  1998  007F99  20                 	db	32
  1999  007F9A  32                 	db	50	;'2'
  2000  007F9B  20                 	db	32
  2001  007F9C  57                 	db	87	;'W'
  2002  007F9D  49                 	db	73	;'I'
  2003  007F9E  4E                 	db	78	;'N'
  2004  007F9F  00                 	db	0
  2005  007FA0                     STR_12:
  2006  007FA0  50                 	db	80	;'P'
  2007  007FA1  41                 	db	65	;'A'
  2008  007FA2  52                 	db	82	;'R'
  2009  007FA3  41                 	db	65	;'A'
  2010  007FA4  4D                 	db	77	;'M'
  2011  007FA5  45                 	db	69	;'E'
  2012  007FA6  54                 	db	84	;'T'
  2013  007FA7  45                 	db	69	;'E'
  2014  007FA8  52                 	db	82	;'R'
  2015  007FA9  53                 	db	83	;'S'
  2016  007FAA  00                 	db	0
  2017  007FAB                     STR_4:
  2018  007FAB  50                 	db	80	;'P'
  2019  007FAC  61                 	db	97	;'a'
  2020  007FAD  72                 	db	114	;'r'
  2021  007FAE  61                 	db	97	;'a'
  2022  007FAF  6D                 	db	109	;'m'
  2023  007FB0  65                 	db	101	;'e'
  2024  007FB1  74                 	db	116	;'t'
  2025  007FB2  72                 	db	114	;'r'
  2026  007FB3  65                 	db	101	;'e'
  2027  007FB4  73                 	db	115	;'s'
  2028  007FB5  00                 	db	0
  2029  007FB6                     STR_1:
  2030  007FB6  4D                 	db	77	;'M'
  2031  007FB7  65                 	db	101	;'e'
  2032  007FB8  6E                 	db	110	;'n'
  2033  007FB9  75                 	db	117	;'u'
  2034  007FBA  53                 	db	83	;'S'
  2035  007FBB  74                 	db	116	;'t'
  2036  007FBC  61                 	db	97	;'a'
  2037  007FBD  72                 	db	114	;'r'
  2038  007FBE  74                 	db	116	;'t'
  2039  007FBF  00                 	db	0
  2040  007FC0                     STR_10:
  2041  007FC0  4E                 	db	78	;'N'
  2042  007FC1  65                 	db	101	;'e'
  2043  007FC2  77                 	db	119	;'w'
  2044  007FC3  20                 	db	32
  2045  007FC4  47                 	db	71	;'G'
  2046  007FC5  61                 	db	97	;'a'
  2047  007FC6  6D                 	db	109	;'m'
  2048  007FC7  65                 	db	101	;'e'
  2049  007FC8  00                 	db	0
  2050  007FC9                     STR_5:
  2051  007FC9  31                 	db	49	;'1'
  2052  007FCA  20                 	db	32
  2053  007FCB  50                 	db	80	;'P'
  2054  007FCC  6C                 	db	108	;'l'
  2055  007FCD  61                 	db	97	;'a'
  2056  007FCE  79                 	db	121	;'y'
  2057  007FCF  65                 	db	101	;'e'
  2058  007FD0  72                 	db	114	;'r'
  2059  007FD1  00                 	db	0
  2060  007FD2                     STR_6:
  2061  007FD2  32                 	db	50	;'2'
  2062  007FD3  20                 	db	32
  2063  007FD4  50                 	db	80	;'P'
  2064  007FD5  6C                 	db	108	;'l'
  2065  007FD6  61                 	db	97	;'a'
  2066  007FD7  79                 	db	121	;'y'
  2067  007FD8  65                 	db	101	;'e'
  2068  007FD9  72                 	db	114	;'r'
  2069  007FDA  00                 	db	0
  2070  007FDB                     STR_11:
  2071  007FDB  57                 	db	87	;'W'
  2072  007FDC  45                 	db	69	;'E'
  2073  007FDD  4C                 	db	76	;'L'
  2074  007FDE  43                 	db	67	;'C'
  2075  007FDF  4F                 	db	79	;'O'
  2076  007FE0  4D                 	db	77	;'M'
  2077  007FE1  45                 	db	69	;'E'
  2078  007FE2  00                 	db	0
  2079  007FE3                     STR_7:
  2080  007FE3  51                 	db	81	;'Q'
  2081  007FE4  55                 	db	85	;'U'
  2082  007FE5  49                 	db	73	;'I'
  2083  007FE6  54                 	db	84	;'T'
  2084  007FE7  54                 	db	84	;'T'
  2085  007FE8  45                 	db	69	;'E'
  2086  007FE9  52                 	db	82	;'R'
  2087  007FEA  00                 	db	0
  2088  007FEB                     STR_15:
  2089  007FEB  58                 	db	88	;'X'
  2090  007FEC  3A                 	db	58	;':'
  2091  007FED  20                 	db	32
  2092  007FEE  25                 	db	37
  2093  007FEF  64                 	db	100	;'d'
  2094  007FF0  00                 	db	0
  2095  007FF1                     STR_16:
  2096  007FF1  59                 	db	89	;'Y'
  2097  007FF2  3A                 	db	58	;':'
  2098  007FF3  20                 	db	32
  2099  007FF4  25                 	db	37
  2100  007FF5  64                 	db	100	;'d'
  2101  007FF6  00                 	db	0
  2102  007FF7                     STR_8:
  2103  007FF7  3C                 	db	60	;'<'
  2104  007FF8  2D                 	db	45
  2105  007FF9  2D                 	db	45
  2106  007FFA  00                 	db	0
  2107  007FFB                     STR_9:
  2108  007FFB  2D                 	db	45
  2109  007FFC  2D                 	db	45
  2110  007FFD  3E                 	db	62	;'>'
  2111  007FFE  00                 	db	0
  2112  007FFF  00                 	db	0	; dummy byte at the end
  2113  0000                     
  2114                           ; #config settings
  2115                           
  2116                           	psect	cinit
  2117  0061BC                     __pcinit:
  2118                           	callstack 0
  2119  0061BC                     start_initialization:
  2120                           	callstack 0
  2121  0061BC                     __initialization:
  2122                           	callstack 0
  2123                           
  2124                           ; Clear objects allocated to BANK1 (239 bytes)
  2125  0061BC  EE01  F000         	lfsr	0,__pbssBANK1
  2126  0061C0  0EEF               	movlw	239
  2127  0061C2                     clear_0:
  2128  0061C2  6AEE               	clrf	postinc0,c
  2129  0061C4  06E8               	decf	wreg,f,c
  2130  0061C6  E1FD               	bnz	clear_0
  2131                           
  2132                           ; Clear objects allocated to BANK0 (75 bytes)
  2133  0061C8  EE00  F0B5         	lfsr	0,__pbssBANK0
  2134  0061CC  0E4B               	movlw	75
  2135  0061CE                     clear_1:
  2136  0061CE  6AEE               	clrf	postinc0,c
  2137  0061D0  06E8               	decf	wreg,f,c
  2138  0061D2  E1FD               	bnz	clear_1
  2139                           
  2140                           ; Clear objects allocated to COMRAM (7 bytes)
  2141  0061D4  EE00  F047         	lfsr	0,__pbssCOMRAM
  2142  0061D8  0E07               	movlw	7
  2143  0061DA                     clear_2:
  2144  0061DA  6AEE               	clrf	postinc0,c
  2145  0061DC  06E8               	decf	wreg,f,c
  2146  0061DE  E1FD               	bnz	clear_2
  2147  0061E0                     end_of_initialization:
  2148                           	callstack 0
  2149  0061E0                     __end_of__initialization:
  2150                           	callstack 0
  2151  0061E0  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2152  0061E2  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2153  0061E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2154  0061E6  6EF8               	movwf	tblptru,c
  2155  0061E8  0100               	movlb	0
  2156  0061EA  EFD3  F031         	goto	_main	;jump to C main() function
  2157                           
  2158                           	psect	bssCOMRAM
  2159  000047                     __pbssCOMRAM:
  2160                           	callstack 0
  2161  000047                     _width:
  2162                           	callstack 0
  2163  000047                     	ds	2
  2164  000049                     _prec:
  2165                           	callstack 0
  2166  000049                     	ds	2
  2167  00004B                     _flags:
  2168                           	callstack 0
  2169  00004B                     	ds	2
  2170  00004D                     _gameStateMachine:
  2171                           	callstack 0
  2172  00004D                     	ds	1
  2173                           
  2174                           	psect	bssBANK0
  2175  0000B5                     __pbssBANK0:
  2176                           	callstack 0
  2177  0000B5                     _theXF:
  2178                           	callstack 0
  2179  0000B5                     	ds	38
  2180  0000DB                     _nout:
  2181                           	callstack 0
  2182  0000DB                     	ds	2
  2183  0000DD                     _displayState:
  2184                           	callstack 0
  2185  0000DD                     	ds	1
  2186  0000DE                     _touchScreenState:
  2187                           	callstack 0
  2188  0000DE                     	ds	1
  2189  0000DF                     _sleepState:
  2190                           	callstack 0
  2191  0000DF                     	ds	1
  2192  0000E0                     _dbuf:
  2193                           	callstack 0
  2194  0000E0                     	ds	32
  2195                           
  2196                           	psect	bssBANK1
  2197  000100                     __pbssBANK1:
  2198                           	callstack 0
  2199  000100                     _g1:
  2200                           	callstack 0
  2201  000100                     	ds	239
  2202                           
  2203                           	psect	cstackBANK1
  2204  0001EF                     __pcstackBANK1:
  2205                           	callstack 0
  2206  0001EF                     Factory_exec@ev:
  2207                           	callstack 0
  2208                           
  2209                           ; 1 bytes @ 0x0
  2210  0001EF                     	ds	1
  2211                           
  2212                           	psect	cstackBANK0
  2213  000060                     __pcstackBANK0:
  2214                           	callstack 0
  2215  000060                     _dtoa$4923:
  2216                           	callstack 0
  2217  000060                     LCD_Bitmap@bfOffBits:
  2218                           	callstack 0
  2219                           
  2220                           ; 4 bytes @ 0x0
  2221  000060                     	ds	2
  2222  000062                     dtoa@p:
  2223                           	callstack 0
  2224                           
  2225                           ; 2 bytes @ 0x2
  2226  000062                     	ds	2
  2227  000064                     LCD_Bitmap@endOfImage:
  2228                           	callstack 0
  2229  000064                     dtoa@w:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x4
  2233  000064                     	ds	1
  2234  000065                     LCD_Bitmap@jumpCount:
  2235                           	callstack 0
  2236                           
  2237                           ; 2 bytes @ 0x5
  2238  000065                     	ds	1
  2239  000066                     dtoa@s:
  2240                           	callstack 0
  2241                           
  2242                           ; 2 bytes @ 0x6
  2243  000066                     	ds	1
  2244  000067                     LCD_Bitmap@curYPos:
  2245                           	callstack 0
  2246                           
  2247                           ; 2 bytes @ 0x7
  2248  000067                     	ds	1
  2249  000068                     dtoa@n:
  2250                           	callstack 0
  2251                           
  2252                           ; 8 bytes @ 0x8
  2253  000068                     	ds	1
  2254  000069                     LCD_Bitmap@colorTablePtr:
  2255                           	callstack 0
  2256                           
  2257                           ; 2 bytes @ 0x9
  2258  000069                     	ds	2
  2259  00006B                     LCD_Bitmap@biHeight:
  2260                           	callstack 0
  2261                           
  2262                           ; 2 bytes @ 0xB
  2263  00006B                     	ds	2
  2264  00006D                     LCD_Bitmap@color:
  2265                           	callstack 0
  2266                           
  2267                           ; 2 bytes @ 0xD
  2268  00006D                     	ds	2
  2269  00006F                     LCD_Bitmap@curXPos:
  2270                           	callstack 0
  2271                           
  2272                           ; 2 bytes @ 0xF
  2273  00006F                     	ds	1
  2274  000070                     dtoa@i:
  2275                           	callstack 0
  2276                           
  2277                           ; 2 bytes @ 0x10
  2278  000070                     	ds	1
  2279  000071                     LCD_Bitmap@strPtr:
  2280                           	callstack 0
  2281                           
  2282                           ; 2 bytes @ 0x11
  2283  000071                     	ds	1
  2284  000072                     vfpfcnvrt@ll:
  2285                           	callstack 0
  2286                           
  2287                           ; 8 bytes @ 0x12
  2288  000072                     	ds	1
  2289  000073                     LCD_Bitmap@newY:
  2290                           	callstack 0
  2291                           
  2292                           ; 2 bytes @ 0x13
  2293  000073                     	ds	2
  2294  000075                     LCD_Bitmap@pixelCount:
  2295                           	callstack 0
  2296                           
  2297                           ; 1 bytes @ 0x15
  2298  000075                     	ds	1
  2299  000076                     LCD_Bitmap@biWidth:
  2300                           	callstack 0
  2301                           
  2302                           ; 2 bytes @ 0x16
  2303  000076                     	ds	2
  2304  000078                     LCD_Bitmap@jumpColor:
  2305                           	callstack 0
  2306                           
  2307                           ; 2 bytes @ 0x18
  2308  000078                     	ds	2
  2309  00007A                     ?_vfprintf:
  2310                           	callstack 0
  2311  00007A                     LCD_Bitmap@i:
  2312                           	callstack 0
  2313  00007A                     vfprintf@fp:
  2314                           	callstack 0
  2315                           
  2316                           ; 2 bytes @ 0x1A
  2317  00007A                     	ds	2
  2318  00007C                     LCD_ButtonDraw@button:
  2319                           	callstack 0
  2320  00007C                     vfprintf@fmt:
  2321                           	callstack 0
  2322                           
  2323                           ; 2 bytes @ 0x1C
  2324  00007C                     	ds	2
  2325  00007E                     ??_LCD_ButtonDraw:
  2326  00007E                     vfprintf@ap:
  2327                           	callstack 0
  2328                           
  2329                           ; 2 bytes @ 0x1E
  2330  00007E                     	ds	2
  2331  000080                     vfprintf@cfmt:
  2332                           	callstack 0
  2333                           
  2334                           ; 2 bytes @ 0x20
  2335  000080                     	ds	2
  2336  000082                     ?_sprintf:
  2337                           	callstack 0
  2338  000082                     sprintf@s:
  2339                           	callstack 0
  2340                           
  2341                           ; 2 bytes @ 0x22
  2342  000082                     	ds	2
  2343  000084                     sprintf@fmt:
  2344                           	callstack 0
  2345                           
  2346                           ; 2 bytes @ 0x24
  2347  000084                     	ds	4
  2348  000088                     sprintf@ap:
  2349                           	callstack 0
  2350                           
  2351                           ; 2 bytes @ 0x28
  2352  000088                     	ds	2
  2353  00008A                     LCD_ButtonDraw@tempChar:
  2354                           	callstack 0
  2355  00008A                     sprintf@f:
  2356                           	callstack 0
  2357                           
  2358                           ; 6 bytes @ 0x2A
  2359  00008A                     	ds	1
  2360  00008B                     LCD_ButtonDraw@width:
  2361                           	callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x2B
  2364  00008B                     	ds	2
  2365  00008D                     LCD_ButtonDraw@x1:
  2366                           	callstack 0
  2367                           
  2368                           ; 2 bytes @ 0x2D
  2369  00008D                     	ds	2
  2370  00008F                     LCD_ButtonDraw@x2:
  2371                           	callstack 0
  2372                           
  2373                           ; 2 bytes @ 0x2F
  2374  00008F                     	ds	1
  2375  000090                     Score_draw@s:
  2376                           	callstack 0
  2377  000090                     touchScreenController@g:
  2378                           	callstack 0
  2379                           
  2380                           ; 2 bytes @ 0x30
  2381  000090                     	ds	1
  2382  000091                     LCD_ButtonDraw@y1:
  2383                           	callstack 0
  2384                           
  2385                           ; 2 bytes @ 0x31
  2386  000091                     	ds	1
  2387  000092                     ??_touchScreenController:
  2388  000092                     Menu_inGameDraw@g:
  2389                           	callstack 0
  2390                           
  2391                           ; 2 bytes @ 0x32
  2392  000092                     	ds	1
  2393  000093                     LCD_ButtonDraw@y2:
  2394                           	callstack 0
  2395                           
  2396                           ; 2 bytes @ 0x33
  2397  000093                     	ds	2
  2398  000095                     LCD_ButtonDraw@xText:
  2399                           	callstack 0
  2400                           
  2401                           ; 2 bytes @ 0x35
  2402  000095                     	ds	2
  2403  000097                     LCD_ButtonDraw@yText:
  2404                           	callstack 0
  2405                           
  2406                           ; 2 bytes @ 0x37
  2407  000097                     	ds	1
  2408  000098                     touchScreenController@s:
  2409                           	callstack 0
  2410                           
  2411                           ; 20 bytes @ 0x38
  2412  000098                     	ds	1
  2413  000099                     LCD_ButtonDraw@i:
  2414                           	callstack 0
  2415                           
  2416                           ; 1 bytes @ 0x39
  2417  000099                     	ds	1
  2418  00009A                     LCD_ButtonDraw@bmpPtr:
  2419                           	callstack 0
  2420                           
  2421                           ; 2 bytes @ 0x3A
  2422  00009A                     	ds	2
  2423  00009C                     Menu_welcomeDraw@g:
  2424                           	callstack 0
  2425  00009C                     Menu_parametersDraw@g:
  2426                           	callstack 0
  2427  00009C                     Menu_endGame@g:
  2428                           	callstack 0
  2429                           
  2430                           ; 2 bytes @ 0x3C
  2431  00009C                     	ds	2
  2432  00009E                     displayController@g:
  2433                           	callstack 0
  2434                           
  2435                           ; 2 bytes @ 0x3E
  2436  00009E                     	ds	2
  2437  0000A0                     displayController@ev:
  2438                           	callstack 0
  2439                           
  2440                           ; 1 bytes @ 0x40
  2441  0000A0                     	ds	1
  2442  0000A1                     ??_displayController:
  2443                           
  2444                           ; 1 bytes @ 0x41
  2445  0000A1                     	ds	2
  2446  0000A3                     displayInit@g:
  2447                           	callstack 0
  2448  0000A3                     displaySM@g:
  2449                           	callstack 0
  2450                           
  2451                           ; 2 bytes @ 0x43
  2452  0000A3                     	ds	2
  2453  0000A5                     ??_displaySM:
  2454  0000A5                     sleepInit@g:
  2455                           	callstack 0
  2456                           
  2457                           ; 2 bytes @ 0x45
  2458  0000A5                     	ds	2
  2459  0000A7                     ??_Factory_init:
  2460  0000A7                     displaySM@ev:
  2461                           	callstack 0
  2462                           
  2463                           ; 1 bytes @ 0x47
  2464  0000A7                     	ds	5
  2465  0000AC                     touchScreenController@valueY:
  2466                           	callstack 0
  2467                           
  2468                           ; 2 bytes @ 0x4C
  2469  0000AC                     	ds	2
  2470  0000AE                     touchScreenController@valueX:
  2471                           	callstack 0
  2472                           
  2473                           ; 2 bytes @ 0x4E
  2474  0000AE                     	ds	2
  2475  0000B0                     touchScreenSM@g:
  2476                           	callstack 0
  2477                           
  2478                           ; 2 bytes @ 0x50
  2479  0000B0                     	ds	2
  2480  0000B2                     ??_touchScreenSM:
  2481                           
  2482                           ; 1 bytes @ 0x52
  2483  0000B2                     	ds	2
  2484  0000B4                     touchScreenSM@ev:
  2485                           	callstack 0
  2486                           
  2487                           ; 1 bytes @ 0x54
  2488  0000B4                     	ds	1
  2489                           
  2490                           	psect	cstackCOMRAM
  2491  000001                     __pcstackCOMRAM:
  2492                           	callstack 0
  2493  000001                     ?i2___wmul:
  2494                           	callstack 0
  2495  000001                     ?i2___awmod:
  2496                           	callstack 0
  2497  000001                     i2ENTERCRITICAL@inISR:
  2498                           	callstack 0
  2499  000001                     i2LEAVECRITICAL@inISR:
  2500                           	callstack 0
  2501  000001                     i2___wmul@multiplier:
  2502                           	callstack 0
  2503  000001                     i2___awmod@dividend:
  2504                           	callstack 0
  2505                           
  2506                           ; 2 bytes @ 0x0
  2507  000001                     	ds	1
  2508  000002                     XF_unscheduleTimer@inISR:
  2509                           	callstack 0
  2510                           
  2511                           ; 1 bytes @ 0x1
  2512  000002                     	ds	1
  2513  000003                     XF_unscheduleTimer@id:
  2514                           	callstack 0
  2515  000003                     i2___wmul@multiplicand:
  2516                           	callstack 0
  2517  000003                     i2___awmod@divisor:
  2518                           	callstack 0
  2519                           
  2520                           ; 2 bytes @ 0x2
  2521  000003                     	ds	2
  2522  000005                     i2___awmod@counter:
  2523                           	callstack 0
  2524  000005                     i2___wmul@product:
  2525                           	callstack 0
  2526                           
  2527                           ; 2 bytes @ 0x4
  2528  000005                     	ds	1
  2529  000006                     i2___awmod@sign:
  2530                           	callstack 0
  2531                           
  2532                           ; 1 bytes @ 0x5
  2533  000006                     	ds	1
  2534  000007                     i2XF_pushEvent@inISR:
  2535                           	callstack 0
  2536                           
  2537                           ; 1 bytes @ 0x6
  2538  000007                     	ds	1
  2539  000008                     i2XF_pushEvent@ev:
  2540                           	callstack 0
  2541                           
  2542                           ; 1 bytes @ 0x7
  2543  000008                     	ds	1
  2544  000009                     i2XF_pushEvent@temp:
  2545                           	callstack 0
  2546                           
  2547                           ; 1 bytes @ 0x8
  2548  000009                     	ds	1
  2549  00000A                     
  2550                           ; 1 bytes @ 0x9
  2551  00000A                     	ds	2
  2552  00000C                     XF_decrementAndQueueTimers@i:
  2553                           	callstack 0
  2554                           
  2555                           ; 2 bytes @ 0xB
  2556  00000C                     	ds	2
  2557  00000E                     ??_isr:
  2558                           
  2559                           ; 1 bytes @ 0xD
  2560  00000E                     	ds	4
  2561  000012                     ??_LCD_Lowlevel_Init:
  2562  000012                     ??_sleepController:
  2563  000012                     ?_LCD_Read:
  2564                           	callstack 0
  2565  000012                     ?_strlen:
  2566                           	callstack 0
  2567  000012                     ?_RGB2LCD:
  2568                           	callstack 0
  2569  000012                     ?___awdiv:
  2570                           	callstack 0
  2571  000012                     ?___awmod:
  2572                           	callstack 0
  2573  000012                     ?___lwmod:
  2574                           	callstack 0
  2575  000012                     ?___xxtofl:
  2576                           	callstack 0
  2577  000012                     ?___aodiv:
  2578                           	callstack 0
  2579  000012                     ?___aomod:
  2580                           	callstack 0
  2581  000012                     configMeasure@channel:
  2582                           	callstack 0
  2583  000012                     ENTERCRITICAL@inISR:
  2584                           	callstack 0
  2585  000012                     LEAVECRITICAL@inISR:
  2586                           	callstack 0
  2587  000012                     Ball_init@b:
  2588                           	callstack 0
  2589  000012                     Ball_Update@b:
  2590                           	callstack 0
  2591  000012                     Paddle_init@p:
  2592                           	callstack 0
  2593  000012                     Paddle_addX@p:
  2594                           	callstack 0
  2595  000012                     Score_init@s:
  2596                           	callstack 0
  2597  000012                     GameParameters_setBackLight@s:
  2598                           	callstack 0
  2599  000012                     GameParameters_resetPos@s:
  2600                           	callstack 0
  2601  000012                     GameParameters_setX@s:
  2602                           	callstack 0
  2603  000012                     GameParameters_setY@s:
  2604                           	callstack 0
  2605  000012                     LCD_Fill@color:
  2606                           	callstack 0
  2607  000012                     LCD_SliderCreate@posX:
  2608                           	callstack 0
  2609  000012                     LCD_ButtonCreate@posX:
  2610                           	callstack 0
  2611  000012                     LCD_InButton@button:
  2612                           	callstack 0
  2613  000012                     LCD_InSlider@slider:
  2614                           	callstack 0
  2615  000012                     LCD_DrawRect@posX1:
  2616                           	callstack 0
  2617  000012                     RGB2LCD@colorTableEntry:
  2618                           	callstack 0
  2619  000012                     LCD_Read@posX:
  2620                           	callstack 0
  2621  000012                     ___awdiv@dividend:
  2622                           	callstack 0
  2623  000012                     ___awmod@dividend:
  2624                           	callstack 0
  2625  000012                     ___lwmod@dividend:
  2626                           	callstack 0
  2627  000012                     fputc@c:
  2628                           	callstack 0
  2629  000012                     strlen@s:
  2630                           	callstack 0
  2631  000012                     ___xxtofl@val:
  2632                           	callstack 0
  2633  000012                     ___aodiv@dividend:
  2634                           	callstack 0
  2635  000012                     ___aomod@dividend:
  2636                           	callstack 0
  2637                           
  2638                           ; 8 bytes @ 0x11
  2639  000012                     	ds	1
  2640  000013                     XF_scheduleTimer@tm:
  2641                           	callstack 0
  2642  000013                     LCD_Lowlevel_Init@i:
  2643                           	callstack 0
  2644                           
  2645                           ; 4 bytes @ 0x12
  2646  000013                     	ds	1
  2647  000014                     ??_Ball_Update:
  2648  000014                     ??_RGB2LCD:
  2649  000014                     LCD_Fill@colorH:
  2650                           	callstack 0
  2651  000014                     Paddle_init@team:
  2652                           	callstack 0
  2653  000014                     Paddle_addX@value:
  2654                           	callstack 0
  2655  000014                     GameParameters_setBackLight@value:
  2656                           	callstack 0
  2657  000014                     GameParameters_setX@value:
  2658                           	callstack 0
  2659  000014                     GameParameters_setY@value:
  2660                           	callstack 0
  2661  000014                     LCD_SliderCreate@posY:
  2662                           	callstack 0
  2663  000014                     LCD_ButtonCreate@posY:
  2664                           	callstack 0
  2665  000014                     LCD_InButton@posX:
  2666                           	callstack 0
  2667  000014                     LCD_InSlider@posX:
  2668                           	callstack 0
  2669  000014                     LCD_DrawRect@posY1:
  2670                           	callstack 0
  2671  000014                     LCD_Read@posY:
  2672                           	callstack 0
  2673  000014                     ___awdiv@divisor:
  2674                           	callstack 0
  2675  000014                     ___awmod@divisor:
  2676                           	callstack 0
  2677  000014                     ___lwmod@divisor:
  2678                           	callstack 0
  2679  000014                     fputc@fp:
  2680                           	callstack 0
  2681  000014                     strlen@a:
  2682                           	callstack 0
  2683                           
  2684                           ; 2 bytes @ 0x13
  2685  000014                     	ds	1
  2686  000015                     LCD_Fill@colorL:
  2687                           	callstack 0
  2688  000015                     XF_scheduleTimer@ev:
  2689                           	callstack 0
  2690                           
  2691                           ; 1 bytes @ 0x14
  2692  000015                     	ds	1
  2693  000016                     ??_LCD_Read:
  2694  000016                     ??_fputc:
  2695  000016                     ??___xxtofl:
  2696  000016                     XF_scheduleTimer@inISR:
  2697                           	callstack 0
  2698  000016                     ___awdiv@counter:
  2699                           	callstack 0
  2700  000016                     ___awmod@counter:
  2701                           	callstack 0
  2702  000016                     ___lwmod@counter:
  2703                           	callstack 0
  2704  000016                     Paddle_addX@add:
  2705                           	callstack 0
  2706  000016                     LCD_Fill@column:
  2707                           	callstack 0
  2708  000016                     LCD_SliderCreate@width:
  2709                           	callstack 0
  2710  000016                     LCD_ButtonCreate@width:
  2711                           	callstack 0
  2712  000016                     LCD_InButton@posY:
  2713                           	callstack 0
  2714  000016                     LCD_InSlider@posY:
  2715                           	callstack 0
  2716  000016                     LCD_DrawRect@posX2:
  2717                           	callstack 0
  2718                           
  2719                           ; 2 bytes @ 0x15
  2720  000016                     	ds	1
  2721  000017                     ??_LCD_Init:
  2722  000017                     XF_scheduleTimer@i:
  2723                           	callstack 0
  2724  000017                     ___awdiv@sign:
  2725                           	callstack 0
  2726  000017                     ___awmod@sign:
  2727                           	callstack 0
  2728                           
  2729                           ; 1 bytes @ 0x16
  2730  000017                     	ds	1
  2731  000018                     ??_Paddle_addX:
  2732  000018                     ??_LCD_InButton:
  2733  000018                     ??_LCD_InSlider:
  2734  000018                     LCD_Init@i:
  2735                           	callstack 0
  2736  000018                     XF_pushEvent@inISR:
  2737                           	callstack 0
  2738  000018                     XF_popEvent@ev:
  2739                           	callstack 0
  2740  000018                     LCD_Fill@page:
  2741                           	callstack 0
  2742  000018                     LCD_SliderCreate@height:
  2743                           	callstack 0
  2744  000018                     LCD_ButtonCreate@height:
  2745                           	callstack 0
  2746  000018                     LCD_DrawRect@posY2:
  2747                           	callstack 0
  2748  000018                     RGB2LCD@red:
  2749                           	callstack 0
  2750  000018                     LCD_Read@color:
  2751                           	callstack 0
  2752  000018                     backlightController@g:
  2753                           	callstack 0
  2754  000018                     ___awdiv@quotient:
  2755                           	callstack 0
  2756                           
  2757                           ; 2 bytes @ 0x17
  2758  000018                     	ds	1
  2759  000019                     XF_pushEvent@ev:
  2760                           	callstack 0
  2761  000019                     XF_popEvent@inISR:
  2762                           	callstack 0
  2763                           
  2764                           ; 1 bytes @ 0x18
  2765  000019                     	ds	1
  2766  00001A                     ?___wmul:
  2767                           	callstack 0
  2768  00001A                     LCD_DrawRect@fill:
  2769                           	callstack 0
  2770  00001A                     XF_pushEvent@temp:
  2771                           	callstack 0
  2772  00001A                     ___xxtofl@sign:
  2773                           	callstack 0
  2774  00001A                     LCD_SliderCreate@sldColor:
  2775                           	callstack 0
  2776  00001A                     LCD_ButtonCreate@txtColor:
  2777                           	callstack 0
  2778  00001A                     RGB2LCD@green:
  2779                           	callstack 0
  2780  00001A                     LCD_Read@temp16:
  2781                           	callstack 0
  2782  00001A                     ___wmul@multiplier:
  2783                           	callstack 0
  2784  00001A                     ___aodiv@divisor:
  2785                           	callstack 0
  2786  00001A                     ___aomod@divisor:
  2787                           	callstack 0
  2788                           
  2789                           ; 8 bytes @ 0x19
  2790  00001A                     	ds	1
  2791  00001B                     ___xxtofl@exp:
  2792                           	callstack 0
  2793  00001B                     LCD_DrawRect@color:
  2794                           	callstack 0
  2795  00001B                     checkCollision@g:
  2796                           	callstack 0
  2797  00001B                     fputs@s:
  2798                           	callstack 0
  2799                           
  2800                           ; 2 bytes @ 0x1A
  2801  00001B                     	ds	1
  2802  00001C                     LCD_SliderCreate@bgColor:
  2803                           	callstack 0
  2804  00001C                     LCD_ButtonCreate@bgColor:
  2805                           	callstack 0
  2806  00001C                     RGB2LCD@blue:
  2807                           	callstack 0
  2808  00001C                     moovePaddle@g:
  2809                           	callstack 0
  2810  00001C                     ___wmul@multiplicand:
  2811                           	callstack 0
  2812  00001C                     ___xxtofl@arg:
  2813                           	callstack 0
  2814                           
  2815                           ; 4 bytes @ 0x1B
  2816  00001C                     	ds	1
  2817  00001D                     ??_checkCollision:
  2818  00001D                     LCD_DrawRect@j:
  2819                           	callstack 0
  2820  00001D                     fputs@fp:
  2821                           	callstack 0
  2822                           
  2823                           ; 2 bytes @ 0x1C
  2824  00001D                     	ds	1
  2825  00001E                     LCD_SliderCreate@borderColor:
  2826                           	callstack 0
  2827  00001E                     LCD_ButtonCreate@textOrBmp:
  2828                           	callstack 0
  2829  00001E                     RGB2LCD@color:
  2830                           	callstack 0
  2831  00001E                     ___wmul@product:
  2832                           	callstack 0
  2833                           
  2834                           ; 2 bytes @ 0x1D
  2835  00001E                     	ds	1
  2836  00001F                     fputs@c:
  2837                           	callstack 0
  2838  00001F                     LCD_DrawRect@temp:
  2839                           	callstack 0
  2840                           
  2841                           ; 2 bytes @ 0x1E
  2842  00001F                     	ds	1
  2843  000020                     ?___lwdiv:
  2844                           	callstack 0
  2845  000020                     ?___fldiv:
  2846                           	callstack 0
  2847  000020                     LCD_SliderCreate@cursorWidth:
  2848                           	callstack 0
  2849  000020                     LCD_ButtonCreate@font:
  2850                           	callstack 0
  2851  000020                     LCD_DrawText@msg:
  2852                           	callstack 0
  2853  000020                     XF_init@i:
  2854                           	callstack 0
  2855  000020                     ___lwdiv@dividend:
  2856                           	callstack 0
  2857  000020                     fputs@i:
  2858                           	callstack 0
  2859  000020                     ___fldiv@b:
  2860                           	callstack 0
  2861                           
  2862                           ; 4 bytes @ 0x1F
  2863  000020                     	ds	1
  2864  000021                     LCD_DrawRect@colorH:
  2865                           	callstack 0
  2866                           
  2867                           ; 1 bytes @ 0x20
  2868  000021                     	ds	1
  2869  000022                     ?_pad:
  2870                           	callstack 0
  2871  000022                     LCD_DrawRect@colorL:
  2872                           	callstack 0
  2873  000022                     ___aodiv@counter:
  2874                           	callstack 0
  2875  000022                     ___aomod@counter:
  2876                           	callstack 0
  2877  000022                     LCD_SliderCreate@steps:
  2878                           	callstack 0
  2879  000022                     LCD_ButtonCreate@fpPress:
  2880                           	callstack 0
  2881  000022                     LCD_DrawText@font:
  2882                           	callstack 0
  2883  000022                     ___lwdiv@divisor:
  2884                           	callstack 0
  2885  000022                     pad@fp:
  2886                           	callstack 0
  2887                           
  2888                           ; 2 bytes @ 0x21
  2889  000022                     	ds	1
  2890  000023                     ___aodiv@sign:
  2891                           	callstack 0
  2892  000023                     ___aomod@sign:
  2893                           	callstack 0
  2894  000023                     LCD_DrawRect@i:
  2895                           	callstack 0
  2896                           
  2897                           ; 2 bytes @ 0x22
  2898  000023                     	ds	1
  2899  000024                     ?_abs:
  2900                           	callstack 0
  2901  000024                     LCD_DrawText@align:
  2902                           	callstack 0
  2903  000024                     ___lwdiv@counter:
  2904                           	callstack 0
  2905  000024                     LCD_SliderCreate@fpPress:
  2906                           	callstack 0
  2907  000024                     LCD_ButtonCreate@fpReleased:
  2908                           	callstack 0
  2909  000024                     pad@buf:
  2910                           	callstack 0
  2911  000024                     abs@a:
  2912                           	callstack 0
  2913  000024                     ___fldiv@a:
  2914                           	callstack 0
  2915  000024                     ___aodiv@quotient:
  2916                           	callstack 0
  2917                           
  2918                           ; 8 bytes @ 0x23
  2919  000024                     	ds	1
  2920  000025                     Ball_draw@b:
  2921                           	callstack 0
  2922  000025                     Paddle_draw@p:
  2923                           	callstack 0
  2924  000025                     LCD_ButtonUpdate@button:
  2925                           	callstack 0
  2926  000025                     LCD_DrawText@posX:
  2927                           	callstack 0
  2928  000025                     mooveBall@g:
  2929                           	callstack 0
  2930  000025                     ___lwdiv@quotient:
  2931                           	callstack 0
  2932                           
  2933                           ; 2 bytes @ 0x24
  2934  000025                     	ds	1
  2935  000026                     ??_abs:
  2936  000026                     LCD_SliderCreate@slider:
  2937                           	callstack 0
  2938  000026                     LCD_ButtonCreate@fpOut:
  2939                           	callstack 0
  2940  000026                     pad@p:
  2941                           	callstack 0
  2942                           
  2943                           ; 2 bytes @ 0x25
  2944  000026                     	ds	1
  2945  000027                     ??_Ball_draw:
  2946  000027                     ??_Paddle_draw:
  2947  000027                     ??_LCD_ButtonUpdate:
  2948  000027                     LCD_SliderUpdate@slider:
  2949                           	callstack 0
  2950  000027                     LCD_DrawText@posY:
  2951                           	callstack 0
  2952  000027                     LCD_Bitmap@bmpPtr:
  2953                           	callstack 0
  2954                           
  2955                           ; 2 bytes @ 0x26
  2956  000027                     	ds	1
  2957  000028                     ??___fldiv:
  2958  000028                     ??_pad:
  2959  000028                     LCD_ButtonCreate@button:
  2960                           	callstack 0
  2961                           
  2962                           ; 2 bytes @ 0x27
  2963  000028                     	ds	1
  2964  000029                     ??_LCD_SliderUpdate:
  2965  000029                     LCD_DrawText@color:
  2966                           	callstack 0
  2967  000029                     LCD_Bitmap@posX:
  2968                           	callstack 0
  2969  000029                     pad@i:
  2970                           	callstack 0
  2971                           
  2972                           ; 2 bytes @ 0x28
  2973  000029                     	ds	1
  2974  00002A                     LCD_ButtonCreate@index:
  2975                           	callstack 0
  2976                           
  2977                           ; 1 bytes @ 0x29
  2978  00002A                     	ds	1
  2979  00002B                     GameParameters_init@s:
  2980                           	callstack 0
  2981  00002B                     LCD_ButtonUpdate@colorOut:
  2982                           	callstack 0
  2983  00002B                     LCD_DrawText@bg_color:
  2984                           	callstack 0
  2985  00002B                     LCD_Bitmap@posY:
  2986                           	callstack 0
  2987  00002B                     pad@w:
  2988                           	callstack 0
  2989                           
  2990                           ; 2 bytes @ 0x2A
  2991  00002B                     	ds	1
  2992  00002C                     ___fldiv@rem:
  2993                           	callstack 0
  2994                           
  2995                           ; 4 bytes @ 0x2B
  2996  00002C                     	ds	1
  2997  00002D                     ??_LCD_DrawText:
  2998  00002D                     ??_LCD_Bitmap:
  2999  00002D                     ?_dtoa:
  3000                           	callstack 0
  3001  00002D                     LCD_ButtonUpdate@colorIn:
  3002                           	callstack 0
  3003  00002D                     dtoa@fp:
  3004                           	callstack 0
  3005                           
  3006                           ; 2 bytes @ 0x2C
  3007  00002D                     	ds	2
  3008  00002F                     LCD_SliderUpdate@x2:
  3009                           	callstack 0
  3010  00002F                     LCD_ButtonUpdate@x2:
  3011                           	callstack 0
  3012  00002F                     dtoa@d:
  3013                           	callstack 0
  3014                           
  3015                           ; 8 bytes @ 0x2E
  3016  00002F                     	ds	1
  3017  000030                     ___fldiv@sign:
  3018                           	callstack 0
  3019                           
  3020                           ; 1 bytes @ 0x2F
  3021  000030                     	ds	1
  3022  000031                     LCD_SliderUpdate@y1:
  3023                           	callstack 0
  3024  000031                     LCD_ButtonUpdate@y1:
  3025                           	callstack 0
  3026  000031                     ___fldiv@new_exp:
  3027                           	callstack 0
  3028                           
  3029                           ; 2 bytes @ 0x30
  3030  000031                     	ds	2
  3031  000033                     LCD_SliderUpdate@y2:
  3032                           	callstack 0
  3033  000033                     LCD_ButtonUpdate@x1:
  3034                           	callstack 0
  3035  000033                     LCD_DrawText@offset:
  3036                           	callstack 0
  3037  000033                     ___fldiv@grs:
  3038                           	callstack 0
  3039                           
  3040                           ; 4 bytes @ 0x32
  3041  000033                     	ds	2
  3042  000035                     LCD_SliderUpdate@x1:
  3043                           	callstack 0
  3044  000035                     LCD_ButtonUpdate@y2:
  3045                           	callstack 0
  3046  000035                     LCD_DrawText@yOffset:
  3047                           	callstack 0
  3048                           
  3049                           ; 2 bytes @ 0x34
  3050  000035                     	ds	2
  3051  000037                     ??_dtoa:
  3052  000037                     LCD_DrawText@fontByte:
  3053                           	callstack 0
  3054  000037                     ___fldiv@bexp:
  3055                           	callstack 0
  3056  000037                     LCD_SliderDraw@slider:
  3057                           	callstack 0
  3058  000037                     gameControllerController@g:
  3059                           	callstack 0
  3060                           
  3061                           ; 2 bytes @ 0x36
  3062  000037                     	ds	1
  3063  000038                     LCD_DrawText@fontPixel:
  3064                           	callstack 0
  3065  000038                     ___fldiv@aexp:
  3066                           	callstack 0
  3067                           
  3068                           ; 1 bytes @ 0x37
  3069  000038                     	ds	1
  3070  000039                     ??_LCD_SliderDraw:
  3071  000039                     ?___fltol:
  3072                           	callstack 0
  3073  000039                     gameControllerController@ev:
  3074                           	callstack 0
  3075  000039                     LCD_DrawText@posYEnd:
  3076                           	callstack 0
  3077  000039                     ___fltol@f1:
  3078                           	callstack 0
  3079                           
  3080                           ; 4 bytes @ 0x38
  3081  000039                     	ds	1
  3082  00003A                     ??_gameControllerController:
  3083                           
  3084                           ; 1 bytes @ 0x39
  3085  00003A                     	ds	1
  3086  00003B                     LCD_DrawText@posXEnd:
  3087                           	callstack 0
  3088                           
  3089                           ; 2 bytes @ 0x3A
  3090  00003B                     	ds	1
  3091  00003C                     gameControllerInit@g:
  3092                           	callstack 0
  3093  00003C                     gameControllerSM@g:
  3094                           	callstack 0
  3095                           
  3096                           ; 2 bytes @ 0x3B
  3097  00003C                     	ds	1
  3098  00003D                     ??___fltol:
  3099  00003D                     LCD_DrawText@y:
  3100                           	callstack 0
  3101  00003D                     LCD_SliderDraw@x1:
  3102                           	callstack 0
  3103                           
  3104                           ; 2 bytes @ 0x3C
  3105  00003D                     	ds	1
  3106  00003E                     ??_gameControllerSM:
  3107  00003E                     LCD_DrawText@i:
  3108                           	callstack 0
  3109                           
  3110                           ; 1 bytes @ 0x3D
  3111  00003E                     	ds	1
  3112  00003F                     ?_vfpfcnvrt:
  3113                           	callstack 0
  3114  00003F                     LCD_DrawText@tempChar:
  3115                           	callstack 0
  3116  00003F                     LCD_SliderDraw@x2:
  3117                           	callstack 0
  3118  00003F                     vfpfcnvrt@fp:
  3119                           	callstack 0
  3120                           
  3121                           ; 2 bytes @ 0x3E
  3122  00003F                     	ds	1
  3123  000040                     LCD_DrawText@x:
  3124                           	callstack 0
  3125  000040                     gameControllerSM@ev:
  3126                           	callstack 0
  3127                           
  3128                           ; 1 bytes @ 0x3F
  3129  000040                     	ds	1
  3130  000041                     LCD_DrawText@width:
  3131                           	callstack 0
  3132  000041                     ___fltol@sign1:
  3133                           	callstack 0
  3134  000041                     LCD_SliderDraw@y1:
  3135                           	callstack 0
  3136  000041                     vfpfcnvrt@fmt:
  3137                           	callstack 0
  3138                           
  3139                           ; 2 bytes @ 0x40
  3140  000041                     	ds	1
  3141  000042                     ___fltol@exp1:
  3142                           	callstack 0
  3143                           
  3144                           ; 1 bytes @ 0x41
  3145  000042                     	ds	1
  3146  000043                     LCD_SliderDraw@y2:
  3147                           	callstack 0
  3148  000043                     vfpfcnvrt@ap:
  3149                           	callstack 0
  3150                           
  3151                           ; 2 bytes @ 0x42
  3152  000043                     	ds	2
  3153  000045                     ??_vfpfcnvrt:
  3154                           
  3155                           ; 1 bytes @ 0x44
  3156  000045                     	ds	2
  3157  000047                     
  3158                           ; 1 bytes @ 0x46
  3159 ;;
  3160 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3161 ;;
  3162 ;; *************** function _main *****************
  3163 ;; Defined at:
  3164 ;;		line 47 in file "main.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3178 ;;      Params:         0       0       0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels required when called: 17
  3184 ;; This function calls:
  3185 ;;		_Factory_exec
  3186 ;;		_Factory_init
  3187 ;; This function is called by:
  3188 ;;		Startup code after reset
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text0
  3193  0063A6                     __ptext0:
  3194                           	callstack 0
  3195  0063A6                     _main:
  3196                           	callstack 14
  3197  0063A6                     
  3198                           ;main.c: 49:     Factory_init();
  3199  0063A6  EC5C  F02A         	call	_Factory_init	;wreg free
  3200  0063AA                     l801:
  3201                           
  3202                           ;main.c: 51:     {;main.c: 52:         Factory_exec();
  3203  0063AA  EC73  F02F         	call	_Factory_exec	;wreg free
  3204  0063AE  EFD5  F031         	goto	l801
  3205  0063B2  EF58  F000         	goto	start
  3206  0063B6                     __end_of_main:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _Factory_init *****************
  3210 ;; Defined at:
  3211 ;;		line 11 in file "class/factory.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3225 ;;      Params:         0       0       0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0
  3227 ;;      Temps:          0       2       0       0       0       0       0
  3228 ;;      Totals:         0       2       0       0       0       0       0
  3229 ;;Total ram usage:        2 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 16
  3232 ;; This function calls:
  3233 ;;		_GameParameters_init
  3234 ;;		_LCD_DrawText
  3235 ;;		_LCD_Fill
  3236 ;;		_LCD_Init
  3237 ;;		_XF_init
  3238 ;;		_sleepInit
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text1
  3245  0054B8                     __ptext1:
  3246                           	callstack 0
  3247  0054B8                     _Factory_init:
  3248                           	callstack 14
  3249  0054B8                     
  3250                           ;class/factory.c: 14:     PLLEN = 1;
  3251  0054B8  8C9B               	bsf	3995,6,c	;volatile
  3252  0054BA                     
  3253                           ;class/factory.c: 15:     OSCCON = 0b01110000;
  3254  0054BA  0E70               	movlw	112
  3255  0054BC  6ED3               	movwf	211,c	;volatile
  3256  0054BE                     
  3257                           ;class/factory.c: 16:     _delay((unsigned long)((100)*(64000000L/4000.0)));
  3258  0054BE  0E09               	movlw	9
  3259  0054C0  0100               	movlb	0	; () banked
  3260  0054C2  6FA8               	movwf	(??_Factory_init+1)& (0+255),b
  3261  0054C4  0E1E               	movlw	30
  3262  0054C6  6FA7               	movwf	??_Factory_init& (0+255),b
  3263  0054C8  0EE4               	movlw	228
  3264  0054CA                     u7927:
  3265  0054CA  2EE8               	decfsz	wreg,f,c
  3266  0054CC  D7FE               	bra	u7927
  3267  0054CE  2FA7               	decfsz	??_Factory_init& (0+255),f,b
  3268  0054D0  D7FC               	bra	u7927
  3269  0054D2  2FA8               	decfsz	(??_Factory_init+1)& (0+255),f,b
  3270  0054D4  D7FA               	bra	u7927
  3271  0054D6  F000               	nop	
  3272  0054D8                     
  3273                           ;class/factory.c: 18:     LCD_Init();
  3274  0054D8  EC92  F019         	call	_LCD_Init	;wreg free
  3275  0054DC                     
  3276                           ;class/factory.c: 19:     LCD_Fill(0b0000000000011111);
  3277  0054DC  0E00               	movlw	0
  3278  0054DE  6E13               	movwf	(LCD_Fill@color+1)^0,c
  3279  0054E0  0E1F               	movlw	31
  3280  0054E2  6E12               	movwf	LCD_Fill@color^0,c
  3281  0054E4  EC9C  F029         	call	_LCD_Fill	;wreg free
  3282  0054E8                     
  3283                           ;class/factory.c: 20:     LCD_DrawText("MenuStart",&arialNarrow_12ptFontInfo,A_CENTER,50
      +                          ,50,0b0000000000000000,0b1111111111111111);
  3284  0054E8  0EB6               	movlw	low STR_1
  3285  0054EA  6E20               	movwf	LCD_DrawText@msg^0,c
  3286  0054EC  0E7F               	movlw	high STR_1
  3287  0054EE  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  3288  0054F0  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  3289  0054F2  6E22               	movwf	LCD_DrawText@font^0,c
  3290  0054F4  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  3291  0054F6  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  3292  0054F8  0E02               	movlw	2
  3293  0054FA  6E24               	movwf	LCD_DrawText@align^0,c
  3294  0054FC  0E00               	movlw	0
  3295  0054FE  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  3296  005500  0E32               	movlw	50
  3297  005502  6E25               	movwf	LCD_DrawText@posX^0,c
  3298  005504  0E00               	movlw	0
  3299  005506  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  3300  005508  0E32               	movlw	50
  3301  00550A  6E27               	movwf	LCD_DrawText@posY^0,c
  3302  00550C  0E00               	movlw	0
  3303  00550E  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  3304  005510  0E00               	movlw	0
  3305  005512  6E29               	movwf	LCD_DrawText@color^0,c
  3306  005514  0EFF               	movlw	255
  3307  005516  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  3308  005518  682B               	setf	LCD_DrawText@bg_color^0,c
  3309  00551A  ECEB  F00E         	call	_LCD_DrawText	;wreg free
  3310  00551E                     
  3311                           ;class/factory.c: 25:     GIE=1;
  3312  00551E  8EF2               	bsf	4082,7,c	;volatile
  3313  005520                     
  3314                           ;class/factory.c: 26:     INT1IE=0;
  3315  005520  96F0               	bcf	4080,3,c	;volatile
  3316  005522                     
  3317                           ;class/factory.c: 27:     INTEDG1=0;
  3318  005522  9AF1               	bcf	4081,5,c	;volatile
  3319  005524                     
  3320                           ;class/factory.c: 28:     TRISC0=0;
  3321  005524  9094               	bcf	3988,0,c	;volatile
  3322  005526                     
  3323                           ;class/factory.c: 29:     LATC0=1;
  3324  005526  808B               	bsf	3979,0,c	;volatile
  3325  005528                     
  3326                           ;class/factory.c: 32:     T0CON=0b10000110;
  3327  005528  0E86               	movlw	134
  3328  00552A  6ED5               	movwf	213,c	;volatile
  3329  00552C                     
  3330                           ;class/factory.c: 33:     TMR0H=0xFB;
  3331  00552C  0EFB               	movlw	251
  3332  00552E  6ED7               	movwf	215,c	;volatile
  3333  005530                     
  3334                           ;class/factory.c: 34:     TMR0L=0x1D;
  3335  005530  0E1D               	movlw	29
  3336  005532  6ED6               	movwf	214,c	;volatile
  3337  005534                     
  3338                           ;class/factory.c: 35:     TMR0IE=1;
  3339  005534  8AF2               	bsf	4082,5,c	;volatile
  3340  005536                     
  3341                           ;class/factory.c: 38:     TRISC1=0;
  3342  005536  9294               	bcf	3988,1,c	;volatile
  3343  005538                     
  3344                           ;class/factory.c: 39:     PR2=255;
  3345  005538  68BB               	setf	187,c	;volatile
  3346  00553A                     
  3347                           ;class/factory.c: 40:     CCP2CONbits.CCP2M = 0xC;
  3348  00553A  5066               	movf	102,w,c	;volatile
  3349  00553C  0BF0               	andlw	-16
  3350  00553E  090C               	iorlw	12
  3351  005540  6E66               	movwf	102,c	;volatile
  3352  005542                     
  3353                           ;class/factory.c: 41:     CCPR2L = 255;
  3354  005542  6867               	setf	103,c	;volatile
  3355  005544                     
  3356                           ;class/factory.c: 42:     CCP2CONbits.DC2B = 0;
  3357  005544  0ECF               	movlw	-49
  3358  005546  1666               	andwf	102,f,c	;volatile
  3359  005548                     
  3360                           ;class/factory.c: 43:     TMR2IF=0;
  3361  005548  929E               	bcf	3998,1,c	;volatile
  3362  00554A                     
  3363                           ;class/factory.c: 44:     T2CONbits.T2CKPS0 = 1;
  3364  00554A  80BA               	bsf	186,0,c	;volatile
  3365  00554C                     
  3366                           ;class/factory.c: 45:     T2CONbits.T2CKPS1 = 0;
  3367  00554C  92BA               	bcf	186,1,c	;volatile
  3368  00554E                     
  3369                           ;class/factory.c: 46:     T2CONbits.TMR2ON = 1;
  3370  00554E  84BA               	bsf	186,2,c	;volatile
  3371  005550                     
  3372                           ;class/factory.c: 48:     ADCON2=0b10100110;
  3373  005550  0EA6               	movlw	166
  3374  005552  6EC0               	movwf	192,c	;volatile
  3375  005554                     
  3376                           ;class/factory.c: 51:     XF_init();
  3377  005554  ECBA  F02A         	call	_XF_init	;wreg free
  3378  005558                     
  3379                           ;class/factory.c: 52:     GameParameters_init(&g1);
  3380  005558  0E00               	movlw	low _g1
  3381  00555A  6E2B               	movwf	GameParameters_init@s^0,c
  3382  00555C  0E01               	movlw	high _g1
  3383  00555E  6E2C               	movwf	(GameParameters_init@s+1)^0,c
  3384  005560  EC10  F011         	call	_GameParameters_init	;wreg free
  3385  005564                     
  3386                           ;class/factory.c: 53:     sleepInit(&g1);
  3387  005564  0E00               	movlw	low _g1
  3388  005566  0100               	movlb	0	; () banked
  3389  005568  6FA5               	movwf	sleepInit@g& (0+255),b
  3390  00556A  0E01               	movlw	high _g1
  3391  00556C  6FA6               	movwf	(sleepInit@g+1)& (0+255),b
  3392  00556E  EC0C  F031         	call	_sleepInit	;wreg free
  3393  005572  0012               	return		;funcret
  3394  005574                     __end_of_Factory_init:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _sleepInit *****************
  3398 ;; Defined at:
  3399 ;;		line 11 in file "stateMachine/sleepSM.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  g               2   69[BANK0 ] PTR struct GameParameter
  3402 ;;		 -> g1(239), 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3414 ;;      Params:         0       2       0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0       0       0
  3417 ;;      Totals:         0       2       0       0       0       0       0
  3418 ;;Total ram usage:        2 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 15
  3421 ;; This function calls:
  3422 ;;		_displayInit
  3423 ;;		_gameControllerInit
  3424 ;;		_sleepController
  3425 ;;		_touchScreenInit
  3426 ;; This function is called by:
  3427 ;;		_Factory_init
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text2
  3432  006218                     __ptext2:
  3433                           	callstack 0
  3434  006218                     _sleepInit:
  3435                           	callstack 14
  3436  006218                     
  3437                           ;stateMachine/sleepSM.c: 11: void sleepInit(GameParameters* g);stateMachine/sleepSM.c: 1
      +                          2: {;stateMachine/sleepSM.c: 13:     sleepState=WAKEUP;
  3438  006218  0E00               	movlw	0
  3439  00621A  0100               	movlb	0	; () banked
  3440  00621C  6FDF               	movwf	_sleepState& (0+255),b
  3441  00621E                     
  3442                           ; BSR set to: 0
  3443                           ;stateMachine/sleepSM.c: 14:     displayInit(g);
  3444  00621E  C0A5  F0A3         	movff	sleepInit@g,displayInit@g
  3445  006222  C0A6  F0A4         	movff	sleepInit@g+1,displayInit@g+1
  3446  006226  EC7A  F031         	call	_displayInit	;wreg free
  3447  00622A                     
  3448                           ;stateMachine/sleepSM.c: 15:     gameControllerInit(g);
  3449  00622A  C0A5  F03C         	movff	sleepInit@g,gameControllerInit@g
  3450  00622E  C0A6  F03D         	movff	sleepInit@g+1,gameControllerInit@g+1
  3451  006232  EC86  F031         	call	_gameControllerInit	;wreg free
  3452  006236                     
  3453                           ;stateMachine/sleepSM.c: 16:     touchScreenInit();
  3454  006236  ECDB  F031         	call	_touchScreenInit	;wreg free
  3455  00623A                     
  3456                           ;stateMachine/sleepSM.c: 17:     sleepController();
  3457  00623A  ECC3  F030         	call	_sleepController	;wreg free
  3458  00623E  0012               	return		;funcret
  3459  006240                     __end_of_sleepInit:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _touchScreenInit *****************
  3463 ;; Defined at:
  3464 ;;		line 17 in file "stateMachine/touchScreenSM.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3478 ;;      Params:         0       0       0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0
  3481 ;;      Totals:         0       0       0       0       0       0       0
  3482 ;;Total ram usage:        0 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 5
  3485 ;; This function calls:
  3486 ;;		_configTouch
  3487 ;; This function is called by:
  3488 ;;		_sleepInit
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text3
  3493  0063B6                     __ptext3:
  3494                           	callstack 0
  3495  0063B6                     _touchScreenInit:
  3496                           	callstack 23
  3497  0063B6                     
  3498                           ;stateMachine/touchScreenSM.c: 19:     touchScreenState=WAITING;
  3499  0063B6  0E00               	movlw	0
  3500  0063B8  0100               	movlb	0	; () banked
  3501  0063BA  6FDE               	movwf	_touchScreenState& (0+255),b
  3502  0063BC                     
  3503                           ; BSR set to: 0
  3504                           ;stateMachine/touchScreenSM.c: 20:     configTouch();
  3505  0063BC  EC6D  F031         	call	_configTouch	;wreg free
  3506  0063C0  0012               	return		;funcret
  3507  0063C2                     __end_of_touchScreenInit:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _sleepController *****************
  3511 ;; Defined at:
  3512 ;;		line 53 in file "stateMachine/sleepSM.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3526 ;;      Params:         0       0       0       0       0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0       0
  3528 ;;      Temps:          2       0       0       0       0       0       0
  3529 ;;      Totals:         2       0       0       0       0       0       0
  3530 ;;Total ram usage:        2 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 4
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_sleepInit
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text4
  3541  006186                     __ptext4:
  3542                           	callstack 0
  3543  006186                     _sleepController:
  3544                           	callstack 24
  3545  006186  0100               	movlb	0	; () banked
  3546  006188  51DF               	movf	_sleepState& (0+255),w,b
  3547  00618A  6E12               	movwf	??_sleepController^0,c
  3548  00618C  6A13               	clrf	(??_sleepController+1)^0,c
  3549                           
  3550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3551                           ; Switch size 1, requested type "simple"
  3552                           ; Number of cases is 1, Range of values is 0 to 0
  3553                           ; switch strategies available:
  3554                           ; Name         Instructions Cycles
  3555                           ; simple_byte            4     3 (average)
  3556                           ;	Chosen strategy is simple_byte
  3557  00618E  5013               	movf	(??_sleepController+1)^0,w,c
  3558  006190  0A00               	xorlw	0	; case 0
  3559  006192  B4D8               	btfsc	status,2,c
  3560  006194  EFCE  F030         	goto	l10665
  3561  006198  EFDD  F030         	goto	l424
  3562  00619C                     l10665:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ; Switch size 1, requested type "simple"
  3566                           ; Number of cases is 3, Range of values is 0 to 2
  3567                           ; switch strategies available:
  3568                           ; Name         Instructions Cycles
  3569                           ; simple_byte           10     6 (average)
  3570                           ;	Chosen strategy is simple_byte
  3571  00619C  5012               	movf	??_sleepController^0,w,c
  3572  00619E  0A00               	xorlw	0	; case 0
  3573  0061A0  B4D8               	btfsc	status,2,c
  3574  0061A2  EFDD  F030         	goto	l424
  3575  0061A6  0A01               	xorlw	1	; case 1
  3576  0061A8  B4D8               	btfsc	status,2,c
  3577  0061AA  EFDD  F030         	goto	l424
  3578  0061AE  0A03               	xorlw	3	; case 2
  3579  0061B0  B4D8               	btfsc	status,2,c
  3580  0061B2  EFDD  F030         	goto	l424
  3581  0061B6  EFDD  F030         	goto	l424
  3582  0061BA                     l424:
  3583                           
  3584                           ; BSR set to: 0
  3585  0061BA  0012               	return		;funcret
  3586  0061BC                     __end_of_sleepController:
  3587                           	callstack 0
  3588                           
  3589 ;; *************** function _gameControllerInit *****************
  3590 ;; Defined at:
  3591 ;;		line 13 in file "stateMachine/gameController.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  g               2   59[COMRAM] PTR struct GameParameter
  3594 ;;		 -> g1(239), 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3606 ;;      Params:         2       0       0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0
  3609 ;;      Totals:         2       0       0       0       0       0       0
  3610 ;;Total ram usage:        2 bytes
  3611 ;; Hardware stack levels used: 1
  3612 ;; Hardware stack levels required when called: 9
  3613 ;; This function calls:
  3614 ;;		_gameControllerController
  3615 ;; This function is called by:
  3616 ;;		_sleepInit
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text5
  3621  00630C                     __ptext5:
  3622                           	callstack 0
  3623  00630C                     _gameControllerInit:
  3624                           	callstack 19
  3625  00630C                     
  3626                           ;stateMachine/gameController.c: 13: void gameControllerInit(GameParameters* g);stateMach
      +                          ine/gameController.c: 14: {;stateMachine/gameController.c: 15:     gameStateMachine=NOGA
      +                          ME;
  3627  00630C  0E00               	movlw	0
  3628  00630E  6E4D               	movwf	_gameStateMachine^0,c
  3629  006310                     
  3630                           ;stateMachine/gameController.c: 16:     gameControllerController(g,NULLEVENT);
  3631  006310  C03C  F037         	movff	gameControllerInit@g,gameControllerController@g
  3632  006314  C03D  F038         	movff	gameControllerInit@g+1,gameControllerController@g+1
  3633  006318  0E00               	movlw	0
  3634  00631A  6E39               	movwf	gameControllerController@ev^0,c
  3635  00631C  ECCF  F014         	call	_gameControllerController	;wreg free
  3636  006320  0012               	return		;funcret
  3637  006322                     __end_of_gameControllerInit:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _displayInit *****************
  3641 ;; Defined at:
  3642 ;;		line 16 in file "stateMachine/display.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  g               2   67[BANK0 ] PTR struct GameParameter
  3645 ;;		 -> g1(239), 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3657 ;;      Params:         0       2       0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0
  3660 ;;      Totals:         0       2       0       0       0       0       0
  3661 ;;Total ram usage:        2 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 14
  3664 ;; This function calls:
  3665 ;;		_displayController
  3666 ;; This function is called by:
  3667 ;;		_sleepInit
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text6
  3672  0062F4                     __ptext6:
  3673                           	callstack 0
  3674  0062F4                     _displayInit:
  3675                           	callstack 14
  3676  0062F4                     
  3677                           ;stateMachine/display.c: 16: void displayInit(GameParameters* g);stateMachine/display.c:
      +                           17: {;stateMachine/display.c: 19:     displayState=WELCOME;
  3678  0062F4  0E00               	movlw	0
  3679  0062F6  0100               	movlb	0	; () banked
  3680  0062F8  6FDD               	movwf	_displayState& (0+255),b
  3681  0062FA                     
  3682                           ; BSR set to: 0
  3683                           ;stateMachine/display.c: 20:     displayController(g,NULLEVENT);
  3684  0062FA  C0A3  F09E         	movff	displayInit@g,displayController@g
  3685  0062FE  C0A4  F09F         	movff	displayInit@g+1,displayController@g+1
  3686  006302  0E00               	movlw	0
  3687  006304  6FA0               	movwf	displayController@ev& (0+255),b
  3688  006306  ECE2  F023         	call	_displayController	;wreg free
  3689  00630A  0012               	return		;funcret
  3690  00630C                     __end_of_displayInit:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _XF_init *****************
  3694 ;; Defined at:
  3695 ;;		line 25 in file "xf/xf.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  i               2   31[COMRAM] int 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3709 ;;      Params:         0       0       0       0       0       0       0
  3710 ;;      Locals:         2       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0
  3712 ;;      Totals:         2       0       0       0       0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 5
  3716 ;; This function calls:
  3717 ;;		___wmul
  3718 ;; This function is called by:
  3719 ;;		_Factory_init
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text7
  3724  005574                     __ptext7:
  3725                           	callstack 0
  3726  005574                     _XF_init:
  3727                           	callstack 24
  3728  005574                     
  3729                           ;xf/xf.c: 27:     int i;;xf/xf.c: 28:     for (i=0; i<12; i++)
  3730  005574  0E00               	movlw	0
  3731  005576  6E21               	movwf	(XF_init@i+1)^0,c
  3732  005578  0E00               	movlw	0
  3733  00557A  6E20               	movwf	XF_init@i^0,c
  3734  00557C                     l10243:
  3735                           
  3736                           ;xf/xf.c: 29:     {;xf/xf.c: 30:         theXF.eventQueue[i] = NULLEVENT;
  3737  00557C  0ECD               	movlw	low (_theXF+24)
  3738  00557E  2420               	addwf	XF_init@i^0,w,c
  3739  005580  6ED9               	movwf	fsr2l,c
  3740  005582  0E00               	movlw	high (_theXF+24)
  3741  005584  2021               	addwfc	(XF_init@i+1)^0,w,c
  3742  005586  6EDA               	movwf	fsr2h,c
  3743  005588  0E00               	movlw	0
  3744  00558A  6EDF               	movwf	indf2,c
  3745  00558C                     
  3746                           ;xf/xf.c: 31:     }
  3747  00558C  4A20               	infsnz	XF_init@i^0,f,c
  3748  00558E  2A21               	incf	(XF_init@i+1)^0,f,c
  3749  005590  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3750  005592  EFD4  F02A         	goto	u7761
  3751  005596  5021               	movf	(XF_init@i+1)^0,w,c
  3752  005598  E109               	bnz	u7760
  3753  00559A  0E0C               	movlw	12
  3754  00559C  5C20               	subwf	XF_init@i^0,w,c
  3755  00559E  A0D8               	btfss	status,0,c
  3756  0055A0  EFD4  F02A         	goto	u7761
  3757  0055A4  EFD6  F02A         	goto	u7760
  3758  0055A8                     u7761:
  3759  0055A8  EFBE  F02A         	goto	l10243
  3760  0055AC                     u7760:
  3761  0055AC                     
  3762                           ;xf/xf.c: 33:     for (i=0; i<8; i++)
  3763  0055AC  0E00               	movlw	0
  3764  0055AE  6E21               	movwf	(XF_init@i+1)^0,c
  3765  0055B0  0E00               	movlw	0
  3766  0055B2  6E20               	movwf	XF_init@i^0,c
  3767  0055B4                     l10255:
  3768                           
  3769                           ;xf/xf.c: 34:     {;xf/xf.c: 35:         theXF.timerList[i].tm = 0;
  3770  0055B4  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3771  0055B8  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3772  0055BC  0E00               	movlw	0
  3773  0055BE  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3774  0055C0  0E03               	movlw	3
  3775  0055C2  6E1C               	movwf	___wmul@multiplicand^0,c
  3776  0055C4  EC47  F031         	call	___wmul	;wreg free
  3777  0055C8  0EB5               	movlw	low _theXF
  3778  0055CA  241A               	addwf	?___wmul^0,w,c
  3779  0055CC  6ED9               	movwf	fsr2l,c
  3780  0055CE  0E00               	movlw	high _theXF
  3781  0055D0  201B               	addwfc	(?___wmul+1)^0,w,c
  3782  0055D2  6EDA               	movwf	fsr2h,c
  3783  0055D4  0E00               	movlw	0
  3784  0055D6  6EDE               	movwf	postinc2,c
  3785  0055D8  0E00               	movlw	0
  3786  0055DA  6EDD               	movwf	postdec2,c
  3787                           
  3788                           ;xf/xf.c: 36:         theXF.timerList[i].ev = NULLEVENT;
  3789  0055DC  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3790  0055E0  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3791  0055E4  0E00               	movlw	0
  3792  0055E6  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3793  0055E8  0E03               	movlw	3
  3794  0055EA  6E1C               	movwf	___wmul@multiplicand^0,c
  3795  0055EC  EC47  F031         	call	___wmul	;wreg free
  3796  0055F0  0EB7               	movlw	low (_theXF+2)
  3797  0055F2  241A               	addwf	?___wmul^0,w,c
  3798  0055F4  6ED9               	movwf	fsr2l,c
  3799  0055F6  0E00               	movlw	high (_theXF+2)
  3800  0055F8  201B               	addwfc	(?___wmul+1)^0,w,c
  3801  0055FA  6EDA               	movwf	fsr2h,c
  3802  0055FC  0E00               	movlw	0
  3803  0055FE  6EDF               	movwf	indf2,c
  3804  005600                     
  3805                           ;xf/xf.c: 37:     }
  3806  005600  4A20               	infsnz	XF_init@i^0,f,c
  3807  005602  2A21               	incf	(XF_init@i+1)^0,f,c
  3808  005604  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3809  005606  EF0E  F02B         	goto	u7771
  3810  00560A  5021               	movf	(XF_init@i+1)^0,w,c
  3811  00560C  E109               	bnz	u7770
  3812  00560E  0E08               	movlw	8
  3813  005610  5C20               	subwf	XF_init@i^0,w,c
  3814  005612  A0D8               	btfss	status,0,c
  3815  005614  EF0E  F02B         	goto	u7771
  3816  005618  EF10  F02B         	goto	u7770
  3817  00561C                     u7771:
  3818  00561C  EFDA  F02A         	goto	l10255
  3819  005620                     u7770:
  3820  005620                     
  3821                           ;xf/xf.c: 38:     theXF.in = 0;
  3822  005620  0E00               	movlw	0
  3823  005622  0100               	movlb	0	; () banked
  3824  005624  6FD9               	movwf	(_theXF+36)& (0+255),b
  3825                           
  3826                           ;xf/xf.c: 39:     theXF.out = 0;
  3827  005626  0E00               	movlw	0
  3828  005628  6FDA               	movwf	(_theXF+37)& (0+255),b
  3829  00562A                     
  3830                           ; BSR set to: 0
  3831  00562A  0012               	return		;funcret
  3832  00562C                     __end_of_XF_init:
  3833                           	callstack 0
  3834                           
  3835 ;; *************** function _LCD_Init *****************
  3836 ;; Defined at:
  3837 ;;		line 20 in file "libraries/lcd_highlevel.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  i               1   23[COMRAM] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3851 ;;      Params:         0       0       0       0       0       0       0
  3852 ;;      Locals:         1       0       0       0       0       0       0
  3853 ;;      Temps:          1       0       0       0       0       0       0
  3854 ;;      Totals:         2       0       0       0       0       0       0
  3855 ;;Total ram usage:        2 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; Hardware stack levels required when called: 5
  3858 ;; This function calls:
  3859 ;;		_LCD_Lowlevel_Init
  3860 ;; This function is called by:
  3861 ;;		_Factory_init
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text8
  3866  003324                     __ptext8:
  3867                           	callstack 0
  3868  003324                     _LCD_Init:
  3869                           	callstack 24
  3870  003324                     
  3871                           ;libraries/lcd_highlevel.c: 22:   uint8_t i;;libraries/lcd_highlevel.c: 86:   LCD_Lowlev
      +                          el_Init();
  3872  003324  EC76  F02C         	call	_LCD_Lowlevel_Init	;wreg free
  3873  003328                     
  3874                           ;libraries/lcd_highlevel.c: 87:   PORTA = 0x11; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3875  003328  0E11               	movlw	17
  3876  00332A  6E80               	movwf	128,c	;volatile
  3877  00332C  988B               	bcf	3979,4,c	;volatile
  3878  00332E  968B               	bcf	3979,3,c	;volatile
  3879  003330  868B               	bsf	3979,3,c	;volatile
  3880  003332  888B               	bsf	3979,4,c	;volatile
  3881  003334                     
  3882                           ;libraries/lcd_highlevel.c: 88:   for(i=0;i<10;i++)
  3883  003334  0E00               	movlw	0
  3884  003336  6E18               	movwf	LCD_Init@i^0,c
  3885  003338                     l4049:
  3886                           
  3887                           ;libraries/lcd_highlevel.c: 89:   {;libraries/lcd_highlevel.c: 90:     _delay((unsigned 
      +                          long)((10)*(64000000L/4000.0)));
  3888  003338  0ED0               	movlw	208
  3889  00333A  6E17               	movwf	??_LCD_Init^0,c
  3890  00333C  0ECA               	movlw	202
  3891  00333E                     u7937:
  3892  00333E  2EE8               	decfsz	wreg,f,c
  3893  003340  D7FE               	bra	u7937
  3894  003342  2E17               	decfsz	??_LCD_Init^0,f,c
  3895  003344  D7FC               	bra	u7937
  3896  003346                     
  3897                           ;libraries/lcd_highlevel.c: 91:   }
  3898  003346  2A18               	incf	LCD_Init@i^0,f,c
  3899  003348  0E09               	movlw	9
  3900  00334A  6418               	cpfsgt	LCD_Init@i^0,c
  3901  00334C  EFAA  F019         	goto	u2451
  3902  003350  EFAC  F019         	goto	u2450
  3903  003354                     u2451:
  3904  003354  EF9C  F019         	goto	l4049
  3905  003358                     u2450:
  3906  003358                     
  3907                           ;libraries/lcd_highlevel.c: 92:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3908  003358  0E36               	movlw	54
  3909  00335A  6E80               	movwf	128,c	;volatile
  3910  00335C  988B               	bcf	3979,4,c	;volatile
  3911  00335E  968B               	bcf	3979,3,c	;volatile
  3912  003360  868B               	bsf	3979,3,c	;volatile
  3913  003362  888B               	bsf	3979,4,c	;volatile
  3914                           
  3915                           ;libraries/lcd_highlevel.c: 93:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
  3916  003364  0E00               	movlw	0
  3917  003366  6E80               	movwf	128,c	;volatile
  3918  003368  968B               	bcf	3979,3,c	;volatile
  3919  00336A  868B               	bsf	3979,3,c	;volatile
  3920                           
  3921                           ;libraries/lcd_highlevel.c: 94:   PORTA = 0x3A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3922  00336C  0E3A               	movlw	58
  3923  00336E  6E80               	movwf	128,c	;volatile
  3924  003370  988B               	bcf	3979,4,c	;volatile
  3925  003372  968B               	bcf	3979,3,c	;volatile
  3926  003374  868B               	bsf	3979,3,c	;volatile
  3927  003376  888B               	bsf	3979,4,c	;volatile
  3928                           
  3929                           ;libraries/lcd_highlevel.c: 95:   PORTA = 0x55; LATC3 = 0; LATC3 = 1;;
  3930  003378  0E55               	movlw	85
  3931  00337A  6E80               	movwf	128,c	;volatile
  3932  00337C  968B               	bcf	3979,3,c	;volatile
  3933  00337E  868B               	bsf	3979,3,c	;volatile
  3934                           
  3935                           ;libraries/lcd_highlevel.c: 96:   PORTA = 0xB2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3936  003380  0EB2               	movlw	178
  3937  003382  6E80               	movwf	128,c	;volatile
  3938  003384  988B               	bcf	3979,4,c	;volatile
  3939  003386  968B               	bcf	3979,3,c	;volatile
  3940  003388  868B               	bsf	3979,3,c	;volatile
  3941  00338A  888B               	bsf	3979,4,c	;volatile
  3942                           
  3943                           ;libraries/lcd_highlevel.c: 97:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3944  00338C  0E0C               	movlw	12
  3945  00338E  6E80               	movwf	128,c	;volatile
  3946  003390  968B               	bcf	3979,3,c	;volatile
  3947  003392  868B               	bsf	3979,3,c	;volatile
  3948                           
  3949                           ;libraries/lcd_highlevel.c: 98:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3950  003394  0E0C               	movlw	12
  3951  003396  6E80               	movwf	128,c	;volatile
  3952  003398  968B               	bcf	3979,3,c	;volatile
  3953  00339A  868B               	bsf	3979,3,c	;volatile
  3954                           
  3955                           ;libraries/lcd_highlevel.c: 99:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3956  00339C  0E33               	movlw	51
  3957  00339E  6E80               	movwf	128,c	;volatile
  3958  0033A0  968B               	bcf	3979,3,c	;volatile
  3959  0033A2  868B               	bsf	3979,3,c	;volatile
  3960                           
  3961                           ;libraries/lcd_highlevel.c: 100:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3962  0033A4  0E33               	movlw	51
  3963  0033A6  6E80               	movwf	128,c	;volatile
  3964  0033A8  968B               	bcf	3979,3,c	;volatile
  3965  0033AA  868B               	bsf	3979,3,c	;volatile
  3966                           
  3967                           ;libraries/lcd_highlevel.c: 101:   PORTA = 0xB7; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3968  0033AC  0EB7               	movlw	183
  3969  0033AE  6E80               	movwf	128,c	;volatile
  3970  0033B0  988B               	bcf	3979,4,c	;volatile
  3971  0033B2  968B               	bcf	3979,3,c	;volatile
  3972  0033B4  868B               	bsf	3979,3,c	;volatile
  3973  0033B6  888B               	bsf	3979,4,c	;volatile
  3974                           
  3975                           ;libraries/lcd_highlevel.c: 102:   PORTA = 0x35; LATC3 = 0; LATC3 = 1;;
  3976  0033B8  0E35               	movlw	53
  3977  0033BA  6E80               	movwf	128,c	;volatile
  3978  0033BC  968B               	bcf	3979,3,c	;volatile
  3979  0033BE  868B               	bsf	3979,3,c	;volatile
  3980                           
  3981                           ;libraries/lcd_highlevel.c: 103:   PORTA = 0xBB; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3982  0033C0  0EBB               	movlw	187
  3983  0033C2  6E80               	movwf	128,c	;volatile
  3984  0033C4  988B               	bcf	3979,4,c	;volatile
  3985  0033C6  968B               	bcf	3979,3,c	;volatile
  3986  0033C8  868B               	bsf	3979,3,c	;volatile
  3987  0033CA  888B               	bsf	3979,4,c	;volatile
  3988                           
  3989                           ;libraries/lcd_highlevel.c: 104:   PORTA = 0x2B; LATC3 = 0; LATC3 = 1;;
  3990  0033CC  0E2B               	movlw	43
  3991  0033CE  6E80               	movwf	128,c	;volatile
  3992  0033D0  968B               	bcf	3979,3,c	;volatile
  3993  0033D2  868B               	bsf	3979,3,c	;volatile
  3994                           
  3995                           ;libraries/lcd_highlevel.c: 105:   PORTA = 0xC0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3996  0033D4  0EC0               	movlw	192
  3997  0033D6  6E80               	movwf	128,c	;volatile
  3998  0033D8  988B               	bcf	3979,4,c	;volatile
  3999  0033DA  968B               	bcf	3979,3,c	;volatile
  4000  0033DC  868B               	bsf	3979,3,c	;volatile
  4001  0033DE  888B               	bsf	3979,4,c	;volatile
  4002                           
  4003                           ;libraries/lcd_highlevel.c: 106:   PORTA = 0x2C; LATC3 = 0; LATC3 = 1;;
  4004  0033E0  0E2C               	movlw	44
  4005  0033E2  6E80               	movwf	128,c	;volatile
  4006  0033E4  968B               	bcf	3979,3,c	;volatile
  4007  0033E6  868B               	bsf	3979,3,c	;volatile
  4008                           
  4009                           ;libraries/lcd_highlevel.c: 107:   PORTA = 0xC2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4010  0033E8  0EC2               	movlw	194
  4011  0033EA  6E80               	movwf	128,c	;volatile
  4012  0033EC  988B               	bcf	3979,4,c	;volatile
  4013  0033EE  968B               	bcf	3979,3,c	;volatile
  4014  0033F0  868B               	bsf	3979,3,c	;volatile
  4015  0033F2  888B               	bsf	3979,4,c	;volatile
  4016                           
  4017                           ;libraries/lcd_highlevel.c: 108:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4018  0033F4  0E01               	movlw	1
  4019  0033F6  6E80               	movwf	128,c	;volatile
  4020  0033F8  968B               	bcf	3979,3,c	;volatile
  4021  0033FA  868B               	bsf	3979,3,c	;volatile
  4022  0033FC                     
  4023                           ;libraries/lcd_highlevel.c: 109:   PORTA = 0xFF; LATC3 = 0; LATC3 = 1;;
  4024  0033FC  6880               	setf	128,c	;volatile
  4025  0033FE  968B               	bcf	3979,3,c	;volatile
  4026  003400  868B               	bsf	3979,3,c	;volatile
  4027                           
  4028                           ;libraries/lcd_highlevel.c: 110:   PORTA = 0XC3; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4029  003402  0EC3               	movlw	195
  4030  003404  6E80               	movwf	128,c	;volatile
  4031  003406  988B               	bcf	3979,4,c	;volatile
  4032  003408  968B               	bcf	3979,3,c	;volatile
  4033  00340A  868B               	bsf	3979,3,c	;volatile
  4034  00340C  888B               	bsf	3979,4,c	;volatile
  4035                           
  4036                           ;libraries/lcd_highlevel.c: 111:   PORTA = 0x11; LATC3 = 0; LATC3 = 1;;
  4037  00340E  0E11               	movlw	17
  4038  003410  6E80               	movwf	128,c	;volatile
  4039  003412  968B               	bcf	3979,3,c	;volatile
  4040  003414  868B               	bsf	3979,3,c	;volatile
  4041                           
  4042                           ;libraries/lcd_highlevel.c: 112:   PORTA = 0xC4; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4043  003416  0EC4               	movlw	196
  4044  003418  6E80               	movwf	128,c	;volatile
  4045  00341A  988B               	bcf	3979,4,c	;volatile
  4046  00341C  968B               	bcf	3979,3,c	;volatile
  4047  00341E  868B               	bsf	3979,3,c	;volatile
  4048  003420  888B               	bsf	3979,4,c	;volatile
  4049                           
  4050                           ;libraries/lcd_highlevel.c: 113:   PORTA = 0x20; LATC3 = 0; LATC3 = 1;;
  4051  003422  0E20               	movlw	32
  4052  003424  6E80               	movwf	128,c	;volatile
  4053  003426  968B               	bcf	3979,3,c	;volatile
  4054  003428  868B               	bsf	3979,3,c	;volatile
  4055                           
  4056                           ;libraries/lcd_highlevel.c: 114:   PORTA = 0xC6; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4057  00342A  0EC6               	movlw	198
  4058  00342C  6E80               	movwf	128,c	;volatile
  4059  00342E  988B               	bcf	3979,4,c	;volatile
  4060  003430  968B               	bcf	3979,3,c	;volatile
  4061  003432  868B               	bsf	3979,3,c	;volatile
  4062  003434  888B               	bsf	3979,4,c	;volatile
  4063                           
  4064                           ;libraries/lcd_highlevel.c: 115:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4065  003436  0E09               	movlw	9
  4066  003438  6E80               	movwf	128,c	;volatile
  4067  00343A  968B               	bcf	3979,3,c	;volatile
  4068  00343C  868B               	bsf	3979,3,c	;volatile
  4069                           
  4070                           ;libraries/lcd_highlevel.c: 116:   PORTA = 0xD0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4071  00343E  0ED0               	movlw	208
  4072  003440  6E80               	movwf	128,c	;volatile
  4073  003442  988B               	bcf	3979,4,c	;volatile
  4074  003444  968B               	bcf	3979,3,c	;volatile
  4075  003446  868B               	bsf	3979,3,c	;volatile
  4076  003448  888B               	bsf	3979,4,c	;volatile
  4077                           
  4078                           ;libraries/lcd_highlevel.c: 117:   PORTA = 0xA4; LATC3 = 0; LATC3 = 1;;
  4079  00344A  0EA4               	movlw	164
  4080  00344C  6E80               	movwf	128,c	;volatile
  4081  00344E  968B               	bcf	3979,3,c	;volatile
  4082  003450  868B               	bsf	3979,3,c	;volatile
  4083                           
  4084                           ;libraries/lcd_highlevel.c: 118:   PORTA = 0xA1; LATC3 = 0; LATC3 = 1;;
  4085  003452  0EA1               	movlw	161
  4086  003454  6E80               	movwf	128,c	;volatile
  4087  003456  968B               	bcf	3979,3,c	;volatile
  4088  003458  868B               	bsf	3979,3,c	;volatile
  4089                           
  4090                           ;libraries/lcd_highlevel.c: 119:   PORTA = 0xE0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4091  00345A  0EE0               	movlw	224
  4092  00345C  6E80               	movwf	128,c	;volatile
  4093  00345E  988B               	bcf	3979,4,c	;volatile
  4094  003460  968B               	bcf	3979,3,c	;volatile
  4095  003462  868B               	bsf	3979,3,c	;volatile
  4096  003464  888B               	bsf	3979,4,c	;volatile
  4097                           
  4098                           ;libraries/lcd_highlevel.c: 120:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4099  003466  0ED0               	movlw	208
  4100  003468  6E80               	movwf	128,c	;volatile
  4101  00346A  968B               	bcf	3979,3,c	;volatile
  4102  00346C  868B               	bsf	3979,3,c	;volatile
  4103                           
  4104                           ;libraries/lcd_highlevel.c: 121:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4105  00346E  0E00               	movlw	0
  4106  003470  6E80               	movwf	128,c	;volatile
  4107  003472  968B               	bcf	3979,3,c	;volatile
  4108  003474  868B               	bsf	3979,3,c	;volatile
  4109                           
  4110                           ;libraries/lcd_highlevel.c: 122:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4111  003476  0E05               	movlw	5
  4112  003478  6E80               	movwf	128,c	;volatile
  4113  00347A  968B               	bcf	3979,3,c	;volatile
  4114  00347C  868B               	bsf	3979,3,c	;volatile
  4115                           
  4116                           ;libraries/lcd_highlevel.c: 123:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4117  00347E  0E0E               	movlw	14
  4118  003480  6E80               	movwf	128,c	;volatile
  4119  003482  968B               	bcf	3979,3,c	;volatile
  4120  003484  868B               	bsf	3979,3,c	;volatile
  4121                           
  4122                           ;libraries/lcd_highlevel.c: 124:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4123  003486  0E15               	movlw	21
  4124  003488  6E80               	movwf	128,c	;volatile
  4125  00348A  968B               	bcf	3979,3,c	;volatile
  4126  00348C  868B               	bsf	3979,3,c	;volatile
  4127                           
  4128                           ;libraries/lcd_highlevel.c: 125:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4129  00348E  0E0D               	movlw	13
  4130  003490  6E80               	movwf	128,c	;volatile
  4131  003492  968B               	bcf	3979,3,c	;volatile
  4132  003494  868B               	bsf	3979,3,c	;volatile
  4133                           
  4134                           ;libraries/lcd_highlevel.c: 126:   PORTA = 0x37; LATC3 = 0; LATC3 = 1;;
  4135  003496  0E37               	movlw	55
  4136  003498  6E80               	movwf	128,c	;volatile
  4137  00349A  968B               	bcf	3979,3,c	;volatile
  4138  00349C  868B               	bsf	3979,3,c	;volatile
  4139                           
  4140                           ;libraries/lcd_highlevel.c: 127:   PORTA = 0x43; LATC3 = 0; LATC3 = 1;;
  4141  00349E  0E43               	movlw	67
  4142  0034A0  6E80               	movwf	128,c	;volatile
  4143  0034A2  968B               	bcf	3979,3,c	;volatile
  4144  0034A4  868B               	bsf	3979,3,c	;volatile
  4145                           
  4146                           ;libraries/lcd_highlevel.c: 128:   PORTA = 0x47; LATC3 = 0; LATC3 = 1;;
  4147  0034A6  0E47               	movlw	71
  4148  0034A8  6E80               	movwf	128,c	;volatile
  4149  0034AA  968B               	bcf	3979,3,c	;volatile
  4150  0034AC  868B               	bsf	3979,3,c	;volatile
  4151                           
  4152                           ;libraries/lcd_highlevel.c: 129:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4153  0034AE  0E09               	movlw	9
  4154  0034B0  6E80               	movwf	128,c	;volatile
  4155  0034B2  968B               	bcf	3979,3,c	;volatile
  4156  0034B4  868B               	bsf	3979,3,c	;volatile
  4157                           
  4158                           ;libraries/lcd_highlevel.c: 130:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4159  0034B6  0E15               	movlw	21
  4160  0034B8  6E80               	movwf	128,c	;volatile
  4161  0034BA  968B               	bcf	3979,3,c	;volatile
  4162  0034BC  868B               	bsf	3979,3,c	;volatile
  4163                           
  4164                           ;libraries/lcd_highlevel.c: 131:   PORTA = 0x12; LATC3 = 0; LATC3 = 1;;
  4165  0034BE  0E12               	movlw	18
  4166  0034C0  6E80               	movwf	128,c	;volatile
  4167  0034C2  968B               	bcf	3979,3,c	;volatile
  4168  0034C4  868B               	bsf	3979,3,c	;volatile
  4169                           
  4170                           ;libraries/lcd_highlevel.c: 132:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4171  0034C6  0E16               	movlw	22
  4172  0034C8  6E80               	movwf	128,c	;volatile
  4173  0034CA  968B               	bcf	3979,3,c	;volatile
  4174  0034CC  868B               	bsf	3979,3,c	;volatile
  4175                           
  4176                           ;libraries/lcd_highlevel.c: 133:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4177  0034CE  0E19               	movlw	25
  4178  0034D0  6E80               	movwf	128,c	;volatile
  4179  0034D2  968B               	bcf	3979,3,c	;volatile
  4180  0034D4  868B               	bsf	3979,3,c	;volatile
  4181                           
  4182                           ;libraries/lcd_highlevel.c: 134:   PORTA = 0xE1; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4183  0034D6  0EE1               	movlw	225
  4184  0034D8  6E80               	movwf	128,c	;volatile
  4185  0034DA  988B               	bcf	3979,4,c	;volatile
  4186  0034DC  968B               	bcf	3979,3,c	;volatile
  4187  0034DE  868B               	bsf	3979,3,c	;volatile
  4188  0034E0  888B               	bsf	3979,4,c	;volatile
  4189                           
  4190                           ;libraries/lcd_highlevel.c: 135:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4191  0034E2  0ED0               	movlw	208
  4192  0034E4  6E80               	movwf	128,c	;volatile
  4193  0034E6  968B               	bcf	3979,3,c	;volatile
  4194  0034E8  868B               	bsf	3979,3,c	;volatile
  4195                           
  4196                           ;libraries/lcd_highlevel.c: 136:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4197  0034EA  0E00               	movlw	0
  4198  0034EC  6E80               	movwf	128,c	;volatile
  4199  0034EE  968B               	bcf	3979,3,c	;volatile
  4200  0034F0  868B               	bsf	3979,3,c	;volatile
  4201                           
  4202                           ;libraries/lcd_highlevel.c: 137:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4203  0034F2  0E05               	movlw	5
  4204  0034F4  6E80               	movwf	128,c	;volatile
  4205  0034F6  968B               	bcf	3979,3,c	;volatile
  4206  0034F8  868B               	bsf	3979,3,c	;volatile
  4207                           
  4208                           ;libraries/lcd_highlevel.c: 138:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4209  0034FA  0E0D               	movlw	13
  4210  0034FC  6E80               	movwf	128,c	;volatile
  4211  0034FE  968B               	bcf	3979,3,c	;volatile
  4212  003500  868B               	bsf	3979,3,c	;volatile
  4213                           
  4214                           ;libraries/lcd_highlevel.c: 139:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  4215  003502  0E0C               	movlw	12
  4216  003504  6E80               	movwf	128,c	;volatile
  4217  003506  968B               	bcf	3979,3,c	;volatile
  4218  003508  868B               	bsf	3979,3,c	;volatile
  4219                           
  4220                           ;libraries/lcd_highlevel.c: 140:   PORTA = 0x06; LATC3 = 0; LATC3 = 1;;
  4221  00350A  0E06               	movlw	6
  4222  00350C  6E80               	movwf	128,c	;volatile
  4223  00350E  968B               	bcf	3979,3,c	;volatile
  4224  003510  868B               	bsf	3979,3,c	;volatile
  4225                           
  4226                           ;libraries/lcd_highlevel.c: 141:   PORTA = 0x2D; LATC3 = 0; LATC3 = 1;;
  4227  003512  0E2D               	movlw	45
  4228  003514  6E80               	movwf	128,c	;volatile
  4229  003516  968B               	bcf	3979,3,c	;volatile
  4230  003518  868B               	bsf	3979,3,c	;volatile
  4231                           
  4232                           ;libraries/lcd_highlevel.c: 142:   PORTA = 0x44; LATC3 = 0; LATC3 = 1;;
  4233  00351A  0E44               	movlw	68
  4234  00351C  6E80               	movwf	128,c	;volatile
  4235  00351E  968B               	bcf	3979,3,c	;volatile
  4236  003520  868B               	bsf	3979,3,c	;volatile
  4237                           
  4238                           ;libraries/lcd_highlevel.c: 143:   PORTA = 0x40; LATC3 = 0; LATC3 = 1;;
  4239  003522  0E40               	movlw	64
  4240  003524  6E80               	movwf	128,c	;volatile
  4241  003526  968B               	bcf	3979,3,c	;volatile
  4242  003528  868B               	bsf	3979,3,c	;volatile
  4243                           
  4244                           ;libraries/lcd_highlevel.c: 144:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4245  00352A  0E0E               	movlw	14
  4246  00352C  6E80               	movwf	128,c	;volatile
  4247  00352E  968B               	bcf	3979,3,c	;volatile
  4248  003530  868B               	bsf	3979,3,c	;volatile
  4249                           
  4250                           ;libraries/lcd_highlevel.c: 145:   PORTA = 0x1C; LATC3 = 0; LATC3 = 1;;
  4251  003532  0E1C               	movlw	28
  4252  003534  6E80               	movwf	128,c	;volatile
  4253  003536  968B               	bcf	3979,3,c	;volatile
  4254  003538  868B               	bsf	3979,3,c	;volatile
  4255                           
  4256                           ;libraries/lcd_highlevel.c: 146:   PORTA = 0x18; LATC3 = 0; LATC3 = 1;;
  4257  00353A  0E18               	movlw	24
  4258  00353C  6E80               	movwf	128,c	;volatile
  4259  00353E  968B               	bcf	3979,3,c	;volatile
  4260  003540  868B               	bsf	3979,3,c	;volatile
  4261                           
  4262                           ;libraries/lcd_highlevel.c: 147:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4263  003542  0E16               	movlw	22
  4264  003544  6E80               	movwf	128,c	;volatile
  4265  003546  968B               	bcf	3979,3,c	;volatile
  4266  003548  868B               	bsf	3979,3,c	;volatile
  4267                           
  4268                           ;libraries/lcd_highlevel.c: 148:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4269  00354A  0E19               	movlw	25
  4270  00354C  6E80               	movwf	128,c	;volatile
  4271  00354E  968B               	bcf	3979,3,c	;volatile
  4272  003550  868B               	bsf	3979,3,c	;volatile
  4273                           
  4274                           ;libraries/lcd_highlevel.c: 149:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4275  003552  0E2A               	movlw	42
  4276  003554  6E80               	movwf	128,c	;volatile
  4277  003556  988B               	bcf	3979,4,c	;volatile
  4278  003558  968B               	bcf	3979,3,c	;volatile
  4279  00355A  868B               	bsf	3979,3,c	;volatile
  4280  00355C  888B               	bsf	3979,4,c	;volatile
  4281                           
  4282                           ;libraries/lcd_highlevel.c: 150:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4283  00355E  0E00               	movlw	0
  4284  003560  6E80               	movwf	128,c	;volatile
  4285  003562  968B               	bcf	3979,3,c	;volatile
  4286  003564  868B               	bsf	3979,3,c	;volatile
  4287                           
  4288                           ;libraries/lcd_highlevel.c: 151:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4289  003566  0E00               	movlw	0
  4290  003568  6E80               	movwf	128,c	;volatile
  4291  00356A  968B               	bcf	3979,3,c	;volatile
  4292  00356C  868B               	bsf	3979,3,c	;volatile
  4293                           
  4294                           ;libraries/lcd_highlevel.c: 152:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4295  00356E  0E00               	movlw	0
  4296  003570  6E80               	movwf	128,c	;volatile
  4297  003572  968B               	bcf	3979,3,c	;volatile
  4298  003574  868B               	bsf	3979,3,c	;volatile
  4299                           
  4300                           ;libraries/lcd_highlevel.c: 153:   PORTA = 0xEF; LATC3 = 0; LATC3 = 1;;
  4301  003576  0EEF               	movlw	239
  4302  003578  6E80               	movwf	128,c	;volatile
  4303  00357A  968B               	bcf	3979,3,c	;volatile
  4304  00357C  868B               	bsf	3979,3,c	;volatile
  4305                           
  4306                           ;libraries/lcd_highlevel.c: 154:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4307  00357E  0E2B               	movlw	43
  4308  003580  6E80               	movwf	128,c	;volatile
  4309  003582  988B               	bcf	3979,4,c	;volatile
  4310  003584  968B               	bcf	3979,3,c	;volatile
  4311  003586  868B               	bsf	3979,3,c	;volatile
  4312  003588  888B               	bsf	3979,4,c	;volatile
  4313                           
  4314                           ;libraries/lcd_highlevel.c: 155:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4315  00358A  0E00               	movlw	0
  4316  00358C  6E80               	movwf	128,c	;volatile
  4317  00358E  968B               	bcf	3979,3,c	;volatile
  4318  003590  868B               	bsf	3979,3,c	;volatile
  4319                           
  4320                           ;libraries/lcd_highlevel.c: 156:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4321  003592  0E00               	movlw	0
  4322  003594  6E80               	movwf	128,c	;volatile
  4323  003596  968B               	bcf	3979,3,c	;volatile
  4324  003598  868B               	bsf	3979,3,c	;volatile
  4325                           
  4326                           ;libraries/lcd_highlevel.c: 157:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4327  00359A  0E01               	movlw	1
  4328  00359C  6E80               	movwf	128,c	;volatile
  4329  00359E  968B               	bcf	3979,3,c	;volatile
  4330  0035A0  868B               	bsf	3979,3,c	;volatile
  4331                           
  4332                           ;libraries/lcd_highlevel.c: 158:   PORTA = 0x3F; LATC3 = 0; LATC3 = 1;;
  4333  0035A2  0E3F               	movlw	63
  4334  0035A4  6E80               	movwf	128,c	;volatile
  4335  0035A6  968B               	bcf	3979,3,c	;volatile
  4336  0035A8  868B               	bsf	3979,3,c	;volatile
  4337                           
  4338                           ;libraries/lcd_highlevel.c: 159:   PORTA = 0x26; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4339  0035AA  0E26               	movlw	38
  4340  0035AC  6E80               	movwf	128,c	;volatile
  4341  0035AE  988B               	bcf	3979,4,c	;volatile
  4342  0035B0  968B               	bcf	3979,3,c	;volatile
  4343  0035B2  868B               	bsf	3979,3,c	;volatile
  4344  0035B4  888B               	bsf	3979,4,c	;volatile
  4345                           
  4346                           ;libraries/lcd_highlevel.c: 160:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4347  0035B6  0E01               	movlw	1
  4348  0035B8  6E80               	movwf	128,c	;volatile
  4349  0035BA  968B               	bcf	3979,3,c	;volatile
  4350  0035BC  868B               	bsf	3979,3,c	;volatile
  4351                           
  4352                           ;libraries/lcd_highlevel.c: 161:   PORTA = 0x29; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4353  0035BE  0E29               	movlw	41
  4354  0035C0  6E80               	movwf	128,c	;volatile
  4355  0035C2  988B               	bcf	3979,4,c	;volatile
  4356  0035C4  968B               	bcf	3979,3,c	;volatile
  4357  0035C6  868B               	bsf	3979,3,c	;volatile
  4358  0035C8  888B               	bsf	3979,4,c	;volatile
  4359  0035CA  0012               	return		;funcret
  4360  0035CC                     __end_of_LCD_Init:
  4361                           	callstack 0
  4362                           
  4363 ;; *************** function _LCD_Lowlevel_Init *****************
  4364 ;; Defined at:
  4365 ;;		line 17 in file "libraries/lcd_lowlevel.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  i               4   18[COMRAM] unsigned long 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4379 ;;      Params:         0       0       0       0       0       0       0
  4380 ;;      Locals:         4       0       0       0       0       0       0
  4381 ;;      Temps:          1       0       0       0       0       0       0
  4382 ;;      Totals:         5       0       0       0       0       0       0
  4383 ;;Total ram usage:        5 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 4
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_LCD_Init
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text9
  4394  0058EC                     __ptext9:
  4395                           	callstack 0
  4396  0058EC                     _LCD_Lowlevel_Init:
  4397                           	callstack 24
  4398  0058EC                     
  4399                           ;libraries/lcd_lowlevel.c: 19:   uint32_t i;;libraries/lcd_lowlevel.c: 20:   TRISC5 = 0;
  4400  0058EC  9A94               	bcf	3988,5,c	;volatile
  4401                           
  4402                           ;libraries/lcd_lowlevel.c: 21:   TRISC2 = 0;
  4403  0058EE  9494               	bcf	3988,2,c	;volatile
  4404                           
  4405                           ;libraries/lcd_lowlevel.c: 22:   TRISC3 = 0;
  4406  0058F0  9694               	bcf	3988,3,c	;volatile
  4407                           
  4408                           ;libraries/lcd_lowlevel.c: 23:   TRISC4 = 0;
  4409  0058F2  9894               	bcf	3988,4,c	;volatile
  4410  0058F4                     
  4411                           ;libraries/lcd_lowlevel.c: 25:   TRISA = 0x00;
  4412  0058F4  0E00               	movlw	0
  4413  0058F6  6E92               	movwf	146,c	;volatile
  4414  0058F8                     
  4415                           ;libraries/lcd_lowlevel.c: 28:  LATC5 = 0;
  4416  0058F8  9A8B               	bcf	3979,5,c	;volatile
  4417  0058FA                     
  4418                           ;libraries/lcd_lowlevel.c: 29:  LATC2 = 1;
  4419  0058FA  848B               	bsf	3979,2,c	;volatile
  4420  0058FC                     
  4421                           ;libraries/lcd_lowlevel.c: 30:  LATC3 = 1;
  4422  0058FC  868B               	bsf	3979,3,c	;volatile
  4423  0058FE                     
  4424                           ;libraries/lcd_lowlevel.c: 31:  LATC4 = 1;
  4425  0058FE  888B               	bsf	3979,4,c	;volatile
  4426                           
  4427                           ;libraries/lcd_lowlevel.c: 33:   for(i=0;i<12;i++)
  4428  005900  0E00               	movlw	0
  4429  005902  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4430  005904  0E00               	movlw	0
  4431  005906  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4432  005908  0E00               	movlw	0
  4433  00590A  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4434  00590C  0E00               	movlw	0
  4435  00590E  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4436  005910                     l3895:
  4437                           
  4438                           ;libraries/lcd_lowlevel.c: 34:   {;libraries/lcd_lowlevel.c: 35:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4439  005910  0ED0               	movlw	208
  4440  005912  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4441  005914  0ECA               	movlw	202
  4442  005916                     u7947:
  4443  005916  2EE8               	decfsz	wreg,f,c
  4444  005918  D7FE               	bra	u7947
  4445  00591A  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4446  00591C  D7FC               	bra	u7947
  4447  00591E                     
  4448                           ;libraries/lcd_lowlevel.c: 36:   }
  4449  00591E  0E01               	movlw	1
  4450  005920  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4451  005922  0E00               	movlw	0
  4452  005924  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4453  005926  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4454  005928  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4455  00592A  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4456  00592C  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4457  00592E  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4458  005930  E109               	bnz	u2300
  4459  005932  0E0C               	movlw	12
  4460  005934  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4461  005936  A0D8               	btfss	status,0,c
  4462  005938  EFA0  F02C         	goto	u2301
  4463  00593C  EFA2  F02C         	goto	u2300
  4464  005940                     u2301:
  4465  005940  EF88  F02C         	goto	l3895
  4466  005944                     u2300:
  4467  005944                     
  4468                           ;libraries/lcd_lowlevel.c: 38:   for(i=0;i<12;i++)
  4469  005944  0E00               	movlw	0
  4470  005946  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4471  005948  0E00               	movlw	0
  4472  00594A  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4473  00594C  0E00               	movlw	0
  4474  00594E  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4475  005950  0E00               	movlw	0
  4476  005952  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4477  005954                     l3907:
  4478                           
  4479                           ;libraries/lcd_lowlevel.c: 39:   {;libraries/lcd_lowlevel.c: 40:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4480  005954  0ED0               	movlw	208
  4481  005956  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4482  005958  0ECA               	movlw	202
  4483  00595A                     u7957:
  4484  00595A  2EE8               	decfsz	wreg,f,c
  4485  00595C  D7FE               	bra	u7957
  4486  00595E  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4487  005960  D7FC               	bra	u7957
  4488  005962                     
  4489                           ;libraries/lcd_lowlevel.c: 41:   }
  4490  005962  0E01               	movlw	1
  4491  005964  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4492  005966  0E00               	movlw	0
  4493  005968  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4494  00596A  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4495  00596C  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4496  00596E  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4497  005970  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4498  005972  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4499  005974  E109               	bnz	u2310
  4500  005976  0E0C               	movlw	12
  4501  005978  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4502  00597A  A0D8               	btfss	status,0,c
  4503  00597C  EFC2  F02C         	goto	u2311
  4504  005980  EFC4  F02C         	goto	u2310
  4505  005984                     u2311:
  4506  005984  EFAA  F02C         	goto	l3907
  4507  005988                     u2310:
  4508  005988  0012               	return		;funcret
  4509  00598A                     __end_of_LCD_Lowlevel_Init:
  4510                           	callstack 0
  4511                           
  4512 ;; *************** function _Factory_exec *****************
  4513 ;; Defined at:
  4514 ;;		line 56 in file "class/factory.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  ev              1    0[BANK1 ] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4528 ;;      Params:         0       0       0       0       0       0       0
  4529 ;;      Locals:         0       0       1       0       0       0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0
  4531 ;;      Totals:         0       0       1       0       0       0       0
  4532 ;;Total ram usage:        1 bytes
  4533 ;; Hardware stack levels used: 1
  4534 ;; Hardware stack levels required when called: 15
  4535 ;; This function calls:
  4536 ;;		_XF_popEvent
  4537 ;;		_displaySM
  4538 ;;		_gameControllerSM
  4539 ;;		_sleepSM
  4540 ;;		_touchScreenSM
  4541 ;; This function is called by:
  4542 ;;		_main
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text10
  4547  005EE6                     __ptext10:
  4548                           	callstack 0
  4549  005EE6                     _Factory_exec:
  4550                           	callstack 15
  4551  005EE6                     
  4552                           ;class/factory.c: 59:     Event ev;;class/factory.c: 60:     ev = XF_popEvent(0);
  4553  005EE6  0E00               	movlw	0
  4554  005EE8  EC43  F02F         	call	_XF_popEvent
  4555  005EEC  0101               	movlb	1	; () banked
  4556  005EEE  6FEF               	movwf	Factory_exec@ev& (0+255),b
  4557  005EF0                     
  4558                           ; BSR set to: 1
  4559                           ;class/factory.c: 61:     if (ev != NULLEVENT)
  4560  005EF0  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4561  005EF2  B4D8               	btfsc	status,2,c
  4562  005EF4  EF7E  F02F         	goto	u7911
  4563  005EF8  EF80  F02F         	goto	u7910
  4564  005EFC                     u7911:
  4565  005EFC  EF9D  F02F         	goto	l106
  4566  005F00                     u7910:
  4567  005F00                     
  4568                           ; BSR set to: 1
  4569                           ;class/factory.c: 62:     {;class/factory.c: 63:         sleepSM(ev);
  4570  005F00  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4571  005F02  ECE1  F031         	call	_sleepSM
  4572  005F06                     
  4573                           ;class/factory.c: 64:         touchScreenSM(ev,&g1);
  4574  005F06  0E00               	movlw	low _g1
  4575  005F08  0100               	movlb	0	; () banked
  4576  005F0A  6FB0               	movwf	touchScreenSM@g& (0+255),b
  4577  005F0C  0E01               	movlw	high _g1
  4578  005F0E  6FB1               	movwf	(touchScreenSM@g+1)& (0+255),b
  4579  005F10  0101               	movlb	1	; () banked
  4580  005F12  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4581  005F14  ECC5  F02C         	call	_touchScreenSM
  4582  005F18                     
  4583                           ;class/factory.c: 65:         displaySM(ev,&g1);
  4584  005F18  0E00               	movlw	low _g1
  4585  005F1A  0100               	movlb	0	; () banked
  4586  005F1C  6FA3               	movwf	displaySM@g& (0+255),b
  4587  005F1E  0E01               	movlw	high _g1
  4588  005F20  6FA4               	movwf	(displaySM@g+1)& (0+255),b
  4589  005F22  0101               	movlb	1	; () banked
  4590  005F24  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4591  005F26  EC64  F024         	call	_displaySM
  4592  005F2A                     
  4593                           ;class/factory.c: 66:         gameControllerSM(ev,&g1);
  4594  005F2A  0E00               	movlw	low _g1
  4595  005F2C  6E3C               	movwf	gameControllerSM@g^0,c
  4596  005F2E  0E01               	movlw	high _g1
  4597  005F30  6E3D               	movwf	(gameControllerSM@g+1)^0,c
  4598  005F32  0101               	movlb	1	; () banked
  4599  005F34  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4600  005F36  EC30  F027         	call	_gameControllerSM
  4601  005F3A                     l106:
  4602  005F3A  0012               	return		;funcret
  4603  005F3C                     __end_of_Factory_exec:
  4604                           	callstack 0
  4605                           
  4606 ;; *************** function _touchScreenSM *****************
  4607 ;; Defined at:
  4608 ;;		line 25 in file "stateMachine/touchScreenSM.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  ev              1    wreg     unsigned char 
  4611 ;;  g               2   80[BANK0 ] PTR struct GameParameter
  4612 ;;		 -> g1(239), 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  ev              1   84[BANK0 ] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4624 ;;      Params:         0       2       0       0       0       0       0
  4625 ;;      Locals:         0       1       0       0       0       0       0
  4626 ;;      Temps:          0       2       0       0       0       0       0
  4627 ;;      Totals:         0       5       0       0       0       0       0
  4628 ;;Total ram usage:        5 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 13
  4631 ;; This function calls:
  4632 ;;		_touchScreenController
  4633 ;; This function is called by:
  4634 ;;		_Factory_exec
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text11
  4639  00598A                     __ptext11:
  4640                           	callstack 0
  4641  00598A                     _touchScreenSM:
  4642                           	callstack 16
  4643                           
  4644                           ;incstack = 0
  4645                           ;touchScreenSM@ev stored from wreg
  4646  00598A  0100               	movlb	0	; () banked
  4647  00598C  6FB4               	movwf	touchScreenSM@ev& (0+255),b
  4648  00598E                     
  4649                           ;stateMachine/touchScreenSM.c: 25: void touchScreenSM(Event ev, GameParameters* g);state
      +                          Machine/touchScreenSM.c: 26: {;stateMachine/touchScreenSM.c: 27:     switch(touchScreenS
      +                          tate)
  4650  00598E  EFF8  F02C         	goto	l10315
  4651  005992                     l10297:
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;stateMachine/touchScreenSM.c: 30:             if(ev==evPress)
  4655  005992  05B4               	decf	touchScreenSM@ev& (0+255),w,b
  4656  005994  A4D8               	btfss	status,2,c
  4657  005996  EFCF  F02C         	goto	u7791
  4658  00599A  EFD1  F02C         	goto	u7790
  4659  00599E                     u7791:
  4660  00599E  EF0E  F02D         	goto	l496
  4661  0059A2                     u7790:
  4662  0059A2                     
  4663                           ; BSR set to: 0
  4664                           ;stateMachine/touchScreenSM.c: 31:             {;stateMachine/touchScreenSM.c: 32:      
      +                                     touchScreenState=CALCULATEPOSITION;
  4665  0059A2  0E01               	movlw	1
  4666  0059A4  6FDE               	movwf	_touchScreenState& (0+255),b
  4667  0059A6                     l10301:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;stateMachine/touchScreenSM.c: 33:                 touchScreenController(g);
  4671  0059A6  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  4672  0059AA  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  4673  0059AE  ECE6  F01A         	call	_touchScreenController	;wreg free
  4674  0059B2  EF0E  F02D         	goto	l496
  4675  0059B6                     l10303:
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;stateMachine/touchScreenSM.c: 37:             if(ev==evRelease)
  4679  0059B6  0E02               	movlw	2
  4680  0059B8  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  4681  0059BA  A4D8               	btfss	status,2,c
  4682  0059BC  EFE2  F02C         	goto	u7801
  4683  0059C0  EFE4  F02C         	goto	u7800
  4684  0059C4                     u7801:
  4685  0059C4  EFEC  F02C         	goto	l10309
  4686  0059C8                     u7800:
  4687  0059C8                     
  4688                           ; BSR set to: 0
  4689                           ;stateMachine/touchScreenSM.c: 38:             {;stateMachine/touchScreenSM.c: 39:      
      +                                     touchScreenState=WAITING;
  4690  0059C8  0E00               	movlw	0
  4691  0059CA  6FDE               	movwf	_touchScreenState& (0+255),b
  4692  0059CC                     
  4693                           ; BSR set to: 0
  4694                           ;stateMachine/touchScreenSM.c: 40:                 touchScreenController(g);
  4695  0059CC  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  4696  0059D0  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  4697  0059D4  ECE6  F01A         	call	_touchScreenController	;wreg free
  4698  0059D8                     l10309:
  4699                           
  4700                           ;stateMachine/touchScreenSM.c: 42:             if(ev==evTimerPos)
  4701  0059D8  0E04               	movlw	4
  4702  0059DA  0100               	movlb	0	; () banked
  4703  0059DC  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  4704  0059DE  A4D8               	btfss	status,2,c
  4705  0059E0  EFF4  F02C         	goto	u7811
  4706  0059E4  EFF6  F02C         	goto	u7810
  4707  0059E8                     u7811:
  4708  0059E8  EF0E  F02D         	goto	l496
  4709  0059EC                     u7810:
  4710  0059EC  EFD3  F02C         	goto	l10301
  4711  0059F0                     l10315:
  4712  0059F0  0100               	movlb	0	; () banked
  4713  0059F2  51DE               	movf	_touchScreenState& (0+255),w,b
  4714  0059F4  6FB2               	movwf	??_touchScreenSM& (0+255),b
  4715  0059F6  6BB3               	clrf	(??_touchScreenSM+1)& (0+255),b
  4716                           
  4717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4718                           ; Switch size 1, requested type "simple"
  4719                           ; Number of cases is 1, Range of values is 0 to 0
  4720                           ; switch strategies available:
  4721                           ; Name         Instructions Cycles
  4722                           ; simple_byte            4     3 (average)
  4723                           ;	Chosen strategy is simple_byte
  4724  0059F8  51B3               	movf	(??_touchScreenSM+1)& (0+255),w,b
  4725  0059FA  0A00               	xorlw	0	; case 0
  4726  0059FC  B4D8               	btfsc	status,2,c
  4727  0059FE  EF03  F02D         	goto	l10667
  4728  005A02  EF0E  F02D         	goto	l496
  4729  005A06                     l10667:
  4730                           
  4731                           ; BSR set to: 0
  4732                           ; Switch size 1, requested type "simple"
  4733                           ; Number of cases is 2, Range of values is 0 to 1
  4734                           ; switch strategies available:
  4735                           ; Name         Instructions Cycles
  4736                           ; simple_byte            7     4 (average)
  4737                           ;	Chosen strategy is simple_byte
  4738  005A06  51B2               	movf	??_touchScreenSM& (0+255),w,b
  4739  005A08  0A00               	xorlw	0	; case 0
  4740  005A0A  B4D8               	btfsc	status,2,c
  4741  005A0C  EFC9  F02C         	goto	l10297
  4742  005A10  0A01               	xorlw	1	; case 1
  4743  005A12  B4D8               	btfsc	status,2,c
  4744  005A14  EFDB  F02C         	goto	l10303
  4745  005A18  EF0E  F02D         	goto	l496
  4746  005A1C                     l496:
  4747  005A1C  0012               	return		;funcret
  4748  005A1E                     __end_of_touchScreenSM:
  4749                           	callstack 0
  4750                           
  4751 ;; *************** function _touchScreenController *****************
  4752 ;; Defined at:
  4753 ;;		line 54 in file "stateMachine/touchScreenSM.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  g               2   48[BANK0 ] PTR struct GameParameter
  4756 ;;		 -> g1(239), 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  valueX          2   78[BANK0 ] unsigned short 
  4759 ;;  valueY          2   76[BANK0 ] unsigned short 
  4760 ;;  s              20   56[BANK0 ] unsigned char [20]
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4770 ;;      Params:         0       2       0       0       0       0       0
  4771 ;;      Locals:         0      24       0       0       0       0       0
  4772 ;;      Temps:          0       6       0       0       0       0       0
  4773 ;;      Totals:         0      32       0       0       0       0       0
  4774 ;;Total ram usage:       32 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 12
  4777 ;; This function calls:
  4778 ;;		_GameParameters_setX
  4779 ;;		_GameParameters_setY
  4780 ;;		_LCD_DrawText
  4781 ;;		_XF_scheduleTimer
  4782 ;;		___fldiv
  4783 ;;		___fltol
  4784 ;;		___xxtofl
  4785 ;;		_configMeasure
  4786 ;;		_configTouch
  4787 ;;		_sprintf
  4788 ;; This function is called by:
  4789 ;;		_touchScreenSM
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text12
  4794  0035CC                     __ptext12:
  4795                           	callstack 0
  4796  0035CC                     _touchScreenController:
  4797                           	callstack 16
  4798  0035CC                     
  4799                           ;stateMachine/touchScreenSM.c: 54: void touchScreenController(GameParameters* g);stateMa
      +                          chine/touchScreenSM.c: 55: {;stateMachine/touchScreenSM.c: 56:     char s[20];;stateMach
      +                          ine/touchScreenSM.c: 58:     switch(touchScreenState)
  4800  0035CC  EF06  F01C         	goto	l10229
  4801  0035D0                     l500:
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;stateMachine/touchScreenSM.c: 63:             INTEDG1=0;
  4805  0035D0  9AF1               	bcf	4081,5,c	;volatile
  4806  0035D2                     
  4807                           ; BSR set to: 0
  4808                           ;stateMachine/touchScreenSM.c: 64:             configTouch();
  4809  0035D2  EC6D  F031         	call	_configTouch	;wreg free
  4810                           
  4811                           ;stateMachine/touchScreenSM.c: 67:             break;
  4812  0035D6  EF1C  F01C         	goto	l513
  4813  0035DA                     l502:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;stateMachine/touchScreenSM.c: 72:             INT1IE=0;
  4817  0035DA  96F0               	bcf	4080,3,c	;volatile
  4818  0035DC                     
  4819                           ; BSR set to: 0
  4820                           ;stateMachine/touchScreenSM.c: 73:             configMeasure(0);
  4821  0035DC  0E00               	movlw	0
  4822  0035DE  ECF2  F02F         	call	_configMeasure
  4823  0035E2                     l503:
  4824  0035E2  B2C2               	btfsc	194,1,c	;volatile
  4825  0035E4  EFF6  F01A         	goto	u7711
  4826  0035E8  EFF8  F01A         	goto	u7710
  4827  0035EC                     u7711:
  4828  0035EC  EFF1  F01A         	goto	l503
  4829  0035F0                     u7710:
  4830  0035F0                     
  4831                           ;stateMachine/touchScreenSM.c: 75:             uint16_t valueX;;stateMachine/touchScreen
      +                          SM.c: 76:             valueX=(ADRESH<<8)+ADRESL;
  4832  0035F0  50C4               	movf	196,w,c	;volatile
  4833  0035F2  0100               	movlb	0	; () banked
  4834  0035F4  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4835  0035F6  6B92               	clrf	??_touchScreenController& (0+255),b
  4836  0035F8  50C3               	movf	195,w,c	;volatile
  4837  0035FA  2592               	addwf	??_touchScreenController& (0+255),w,b
  4838  0035FC  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4839  0035FE  0E00               	movlw	0
  4840  003600  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  4841  003602  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4842                           
  4843                           ;stateMachine/touchScreenSM.c: 77:             if(valueX<=120)
  4844  003604  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  4845  003606  E107               	bnz	u7721
  4846  003608  0E79               	movlw	121
  4847  00360A  5DAE               	subwf	touchScreenController@valueX& (0+255),w,b
  4848  00360C  B0D8               	btfsc	status,0,c
  4849  00360E  EF0B  F01B         	goto	u7721
  4850  003612  EF0D  F01B         	goto	u7720
  4851  003616                     u7721:
  4852  003616  EF11  F01B         	goto	l10193
  4853  00361A                     u7720:
  4854  00361A                     
  4855                           ; BSR set to: 0
  4856                           ;stateMachine/touchScreenSM.c: 78:             {;stateMachine/touchScreenSM.c: 79:      
      +                                     valueX=120;
  4857  00361A  0E00               	movlw	0
  4858  00361C  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4859  00361E  0E78               	movlw	120
  4860  003620  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4861  003622                     l10193:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;stateMachine/touchScreenSM.c: 81:             valueX=(valueX-120)/2.35;
  4865  003622  0E66               	movlw	102
  4866  003624  6E24               	movwf	___fldiv@a^0,c
  4867  003626  0E66               	movlw	102
  4868  003628  6E25               	movwf	(___fldiv@a+1)^0,c
  4869  00362A  0E16               	movlw	22
  4870  00362C  6E26               	movwf	(___fldiv@a+2)^0,c
  4871  00362E  0E40               	movlw	64
  4872  003630  6E27               	movwf	(___fldiv@a+3)^0,c
  4873  003632  0E88               	movlw	136
  4874  003634  6F92               	movwf	??_touchScreenController& (0+255),b
  4875  003636  0EFF               	movlw	255
  4876  003638  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4877  00363A  C0AE  F094         	movff	touchScreenController@valueX,??_touchScreenController+2
  4878  00363E  C0AF  F095         	movff	touchScreenController@valueX+1,??_touchScreenController+3
  4879  003642  5192               	movf	??_touchScreenController& (0+255),w,b
  4880  003644  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  4881  003646  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  4882  003648  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  4883  00364A  C094  F012         	movff	??_touchScreenController+2,___xxtofl@val
  4884  00364E  C095  F013         	movff	??_touchScreenController+3,___xxtofl@val+1
  4885  003652  6A14               	clrf	(___xxtofl@val+2)^0,c
  4886  003654  6A15               	clrf	(___xxtofl@val+3)^0,c
  4887  003656  0E00               	movlw	0
  4888  003658  EC38  F01D         	call	___xxtofl
  4889  00365C  C012  F020         	movff	?___xxtofl,___fldiv@b
  4890  003660  C013  F021         	movff	?___xxtofl+1,___fldiv@b+1
  4891  003664  C014  F022         	movff	?___xxtofl+2,___fldiv@b+2
  4892  003668  C015  F023         	movff	?___xxtofl+3,___fldiv@b+3
  4893  00366C  EC02  F013         	call	___fldiv	;wreg free
  4894  003670  C020  F039         	movff	?___fldiv,___fltol@f1
  4895  003674  C021  F03A         	movff	?___fldiv+1,___fltol@f1+1
  4896  003678  C022  F03B         	movff	?___fldiv+2,___fltol@f1+2
  4897  00367C  C023  F03C         	movff	?___fldiv+3,___fltol@f1+3
  4898  003680  EC5F  F023         	call	___fltol	;wreg free
  4899  003684  C039  F0AE         	movff	?___fltol,touchScreenController@valueX
  4900  003688  C03A  F0AF         	movff	?___fltol+1,touchScreenController@valueX+1
  4901  00368C                     
  4902                           ;stateMachine/touchScreenSM.c: 82:             valueX=240 -valueX;
  4903  00368C  0100               	movlb	0	; () banked
  4904  00368E  51AE               	movf	touchScreenController@valueX& (0+255),w,b
  4905  003690  08F0               	sublw	240
  4906  003692  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4907  003694  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  4908  003696  A0D8               	btfss	status,0,c
  4909  003698  2AE8               	incf	wreg,f,c
  4910  00369A  0800               	sublw	0
  4911  00369C  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4912  00369E                     
  4913                           ; BSR set to: 0
  4914                           ;stateMachine/touchScreenSM.c: 84:             configMeasure(1);
  4915  00369E  0E01               	movlw	1
  4916  0036A0  ECF2  F02F         	call	_configMeasure
  4917  0036A4                     l507:
  4918  0036A4  B2C2               	btfsc	194,1,c	;volatile
  4919  0036A6  EF57  F01B         	goto	u7731
  4920  0036AA  EF59  F01B         	goto	u7730
  4921  0036AE                     u7731:
  4922  0036AE  EF52  F01B         	goto	l507
  4923  0036B2                     u7730:
  4924  0036B2                     
  4925                           ;stateMachine/touchScreenSM.c: 86:             uint16_t valueY;;stateMachine/touchScreen
      +                          SM.c: 87:             valueY=(ADRESH<<8)+ADRESL;
  4926  0036B2  50C4               	movf	196,w,c	;volatile
  4927  0036B4  0100               	movlb	0	; () banked
  4928  0036B6  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4929  0036B8  6B92               	clrf	??_touchScreenController& (0+255),b
  4930  0036BA  50C3               	movf	195,w,c	;volatile
  4931  0036BC  2592               	addwf	??_touchScreenController& (0+255),w,b
  4932  0036BE  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4933  0036C0  0E00               	movlw	0
  4934  0036C2  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  4935  0036C4  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  4936                           
  4937                           ;stateMachine/touchScreenSM.c: 88:             if(valueY<=105)
  4938  0036C6  51AD               	movf	(touchScreenController@valueY+1)& (0+255),w,b
  4939  0036C8  E107               	bnz	u7741
  4940  0036CA  0E6A               	movlw	106
  4941  0036CC  5DAC               	subwf	touchScreenController@valueY& (0+255),w,b
  4942  0036CE  B0D8               	btfsc	status,0,c
  4943  0036D0  EF6C  F01B         	goto	u7741
  4944  0036D4  EF6E  F01B         	goto	u7740
  4945  0036D8                     u7741:
  4946  0036D8  EF72  F01B         	goto	l10203
  4947  0036DC                     u7740:
  4948  0036DC                     
  4949                           ; BSR set to: 0
  4950                           ;stateMachine/touchScreenSM.c: 89:             {;stateMachine/touchScreenSM.c: 90:      
      +                                     valueY=105;
  4951  0036DC  0E00               	movlw	0
  4952  0036DE  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  4953  0036E0  0E69               	movlw	105
  4954  0036E2  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4955  0036E4                     l10203:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;stateMachine/touchScreenSM.c: 92:             valueY=(valueY-105)/2;
  4959  0036E4  0E97               	movlw	151
  4960  0036E6  6F92               	movwf	??_touchScreenController& (0+255),b
  4961  0036E8  0EFF               	movlw	255
  4962  0036EA  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4963  0036EC  C0AC  F094         	movff	touchScreenController@valueY,??_touchScreenController+2
  4964  0036F0  C0AD  F095         	movff	touchScreenController@valueY+1,??_touchScreenController+3
  4965  0036F4  5192               	movf	??_touchScreenController& (0+255),w,b
  4966  0036F6  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  4967  0036F8  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  4968  0036FA  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  4969  0036FC  90D8               	bcf	status,0,c
  4970  0036FE  3195               	rrcf	(??_touchScreenController+3)& (0+255),w,b
  4971  003700  6F96               	movwf	(??_touchScreenController+4)& (0+255),b
  4972  003702  3194               	rrcf	(??_touchScreenController+2)& (0+255),w,b
  4973  003704  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4974  003706  C096  F0AD         	movff	??_touchScreenController+4,touchScreenController@valueY+1
  4975  00370A                     
  4976                           ; BSR set to: 0
  4977                           ;stateMachine/touchScreenSM.c: 93:             XF_scheduleTimer(9,evTimerPos,0);
  4978  00370A  0E00               	movlw	0
  4979  00370C  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  4980  00370E  0E09               	movlw	9
  4981  003710  6E13               	movwf	XF_scheduleTimer@tm^0,c
  4982  003712  0E04               	movlw	4
  4983  003714  6E15               	movwf	XF_scheduleTimer@ev^0,c
  4984  003716  0E00               	movlw	0
  4985  003718  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  4986  00371A  EC08  F02E         	call	_XF_scheduleTimer	;wreg free
  4987  00371E                     
  4988                           ;stateMachine/touchScreenSM.c: 96:             ADCON0=0b00101000;
  4989  00371E  0E28               	movlw	40
  4990  003720  6EC2               	movwf	194,c	;volatile
  4991  003722                     
  4992                           ;stateMachine/touchScreenSM.c: 97:             configTouch();
  4993  003722  EC6D  F031         	call	_configTouch	;wreg free
  4994  003726                     
  4995                           ;stateMachine/touchScreenSM.c: 98:             INT1IF=0;
  4996  003726  90F0               	bcf	4080,0,c	;volatile
  4997  003728                     
  4998                           ;stateMachine/touchScreenSM.c: 99:             INT1IE=1;
  4999  003728  86F0               	bsf	4080,3,c	;volatile
  5000  00372A                     
  5001                           ;stateMachine/touchScreenSM.c: 102:             if(PORTBbits.RB1 == 0)
  5002  00372A  B281               	btfsc	129,1,c	;volatile
  5003  00372C  EF9A  F01B         	goto	u7751
  5004  003730  EF9C  F01B         	goto	u7750
  5005  003734                     u7751:
  5006  003734  EF1C  F01C         	goto	l513
  5007  003738                     u7750:
  5008  003738                     
  5009                           ;stateMachine/touchScreenSM.c: 103:             {;stateMachine/touchScreenSM.c: 104:    
      +                                       sprintf(s,"X: %d",valueX);
  5010  003738  0E98               	movlw	low touchScreenController@s
  5011  00373A  0100               	movlb	0	; () banked
  5012  00373C  6F82               	movwf	sprintf@s& (0+255),b
  5013  00373E  0E00               	movlw	high touchScreenController@s
  5014  003740  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5015  003742  0EEB               	movlw	low STR_15
  5016  003744  6F84               	movwf	sprintf@fmt& (0+255),b
  5017  003746  0E7F               	movlw	high STR_15
  5018  003748  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5019  00374A  C0AE  F086         	movff	touchScreenController@valueX,?_sprintf+4
  5020  00374E  C0AF  F087         	movff	touchScreenController@valueX+1,?_sprintf+5
  5021  003752  ECC9  F02F         	call	_sprintf	;wreg free
  5022  003756                     
  5023                           ;stateMachine/touchScreenSM.c: 105:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,200,0b0000000000000000,0b1111111111111111);
  5024  003756  0E98               	movlw	low touchScreenController@s
  5025  003758  6E20               	movwf	LCD_DrawText@msg^0,c
  5026  00375A  0E00               	movlw	high touchScreenController@s
  5027  00375C  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5028  00375E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  5029  003760  6E22               	movwf	LCD_DrawText@font^0,c
  5030  003762  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5031  003764  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5032  003766  0E01               	movlw	1
  5033  003768  6E24               	movwf	LCD_DrawText@align^0,c
  5034  00376A  0E00               	movlw	0
  5035  00376C  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5036  00376E  0EC8               	movlw	200
  5037  003770  6E25               	movwf	LCD_DrawText@posX^0,c
  5038  003772  0E00               	movlw	0
  5039  003774  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5040  003776  0EC8               	movlw	200
  5041  003778  6E27               	movwf	LCD_DrawText@posY^0,c
  5042  00377A  0E00               	movlw	0
  5043  00377C  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5044  00377E  0E00               	movlw	0
  5045  003780  6E29               	movwf	LCD_DrawText@color^0,c
  5046  003782  0EFF               	movlw	255
  5047  003784  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5048  003786  682B               	setf	LCD_DrawText@bg_color^0,c
  5049  003788  ECEB  F00E         	call	_LCD_DrawText	;wreg free
  5050  00378C                     
  5051                           ;stateMachine/touchScreenSM.c: 106:                 GameParameters_setX(g,valueX);
  5052  00378C  C090  F012         	movff	touchScreenController@g,GameParameters_setX@s
  5053  003790  C091  F013         	movff	touchScreenController@g+1,GameParameters_setX@s+1
  5054  003794  C0AE  F014         	movff	touchScreenController@valueX,GameParameters_setX@value
  5055  003798  C0AF  F015         	movff	touchScreenController@valueX+1,GameParameters_setX@value+1
  5056  00379C  EC9C  F031         	call	_GameParameters_setX	;wreg free
  5057  0037A0                     
  5058                           ;stateMachine/touchScreenSM.c: 107:                 sprintf(s,"Y: %d",valueY);
  5059  0037A0  0E98               	movlw	low touchScreenController@s
  5060  0037A2  0100               	movlb	0	; () banked
  5061  0037A4  6F82               	movwf	sprintf@s& (0+255),b
  5062  0037A6  0E00               	movlw	high touchScreenController@s
  5063  0037A8  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5064  0037AA  0EF1               	movlw	low STR_16
  5065  0037AC  6F84               	movwf	sprintf@fmt& (0+255),b
  5066  0037AE  0E7F               	movlw	high STR_16
  5067  0037B0  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5068  0037B2  C0AC  F086         	movff	touchScreenController@valueY,?_sprintf+4
  5069  0037B6  C0AD  F087         	movff	touchScreenController@valueY+1,?_sprintf+5
  5070  0037BA  ECC9  F02F         	call	_sprintf	;wreg free
  5071  0037BE                     
  5072                           ;stateMachine/touchScreenSM.c: 108:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,250,0b0000000000000000,0b1111111111111111);
  5073  0037BE  0E98               	movlw	low touchScreenController@s
  5074  0037C0  6E20               	movwf	LCD_DrawText@msg^0,c
  5075  0037C2  0E00               	movlw	high touchScreenController@s
  5076  0037C4  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5077  0037C6  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  5078  0037C8  6E22               	movwf	LCD_DrawText@font^0,c
  5079  0037CA  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5080  0037CC  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5081  0037CE  0E01               	movlw	1
  5082  0037D0  6E24               	movwf	LCD_DrawText@align^0,c
  5083  0037D2  0E00               	movlw	0
  5084  0037D4  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5085  0037D6  0EC8               	movlw	200
  5086  0037D8  6E25               	movwf	LCD_DrawText@posX^0,c
  5087  0037DA  0E00               	movlw	0
  5088  0037DC  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5089  0037DE  0EFA               	movlw	250
  5090  0037E0  6E27               	movwf	LCD_DrawText@posY^0,c
  5091  0037E2  0E00               	movlw	0
  5092  0037E4  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5093  0037E6  0E00               	movlw	0
  5094  0037E8  6E29               	movwf	LCD_DrawText@color^0,c
  5095  0037EA  0EFF               	movlw	255
  5096  0037EC  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5097  0037EE  682B               	setf	LCD_DrawText@bg_color^0,c
  5098  0037F0  ECEB  F00E         	call	_LCD_DrawText	;wreg free
  5099                           
  5100                           ;stateMachine/touchScreenSM.c: 109:                 GameParameters_setY(g,valueY);
  5101  0037F4  C090  F012         	movff	touchScreenController@g,GameParameters_setY@s
  5102  0037F8  C091  F013         	movff	touchScreenController@g+1,GameParameters_setY@s+1
  5103  0037FC  C0AC  F014         	movff	touchScreenController@valueY,GameParameters_setY@value
  5104  003800  C0AD  F015         	movff	touchScreenController@valueY+1,GameParameters_setY@value+1
  5105  003804  EC91  F031         	call	_GameParameters_setY	;wreg free
  5106  003808  EF1C  F01C         	goto	l513
  5107  00380C                     l10229:
  5108  00380C  0100               	movlb	0	; () banked
  5109  00380E  51DE               	movf	_touchScreenState& (0+255),w,b
  5110  003810  6F92               	movwf	??_touchScreenController& (0+255),b
  5111  003812  6B93               	clrf	(??_touchScreenController+1)& (0+255),b
  5112                           
  5113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5114                           ; Switch size 1, requested type "simple"
  5115                           ; Number of cases is 1, Range of values is 0 to 0
  5116                           ; switch strategies available:
  5117                           ; Name         Instructions Cycles
  5118                           ; simple_byte            4     3 (average)
  5119                           ;	Chosen strategy is simple_byte
  5120  003814  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5121  003816  0A00               	xorlw	0	; case 0
  5122  003818  B4D8               	btfsc	status,2,c
  5123  00381A  EF11  F01C         	goto	l10669
  5124  00381E  EF1C  F01C         	goto	l513
  5125  003822                     l10669:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ; Switch size 1, requested type "simple"
  5129                           ; Number of cases is 2, Range of values is 0 to 1
  5130                           ; switch strategies available:
  5131                           ; Name         Instructions Cycles
  5132                           ; simple_byte            7     4 (average)
  5133                           ;	Chosen strategy is simple_byte
  5134  003822  5192               	movf	??_touchScreenController& (0+255),w,b
  5135  003824  0A00               	xorlw	0	; case 0
  5136  003826  B4D8               	btfsc	status,2,c
  5137  003828  EFE8  F01A         	goto	l500
  5138  00382C  0A01               	xorlw	1	; case 1
  5139  00382E  B4D8               	btfsc	status,2,c
  5140  003830  EFED  F01A         	goto	l502
  5141  003834  EF1C  F01C         	goto	l513
  5142  003838                     l513:
  5143  003838  0012               	return		;funcret
  5144  00383A                     __end_of_touchScreenController:
  5145                           	callstack 0
  5146                           
  5147 ;; *************** function _configTouch *****************
  5148 ;; Defined at:
  5149 ;;		line 120 in file "stateMachine/touchScreenSM.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      void 
  5156 ;; Registers used:
  5157 ;;		wreg, status,2
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5163 ;;      Params:         0       0       0       0       0       0       0
  5164 ;;      Locals:         0       0       0       0       0       0       0
  5165 ;;      Temps:          0       0       0       0       0       0       0
  5166 ;;      Totals:         0       0       0       0       0       0       0
  5167 ;;Total ram usage:        0 bytes
  5168 ;; Hardware stack levels used: 1
  5169 ;; Hardware stack levels required when called: 4
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_touchScreenInit
  5174 ;;		_touchScreenController
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text13
  5179  0062DA                     __ptext13:
  5180                           	callstack 0
  5181  0062DA                     _configTouch:
  5182                           	callstack 23
  5183  0062DA                     
  5184                           ;stateMachine/touchScreenSM.c: 122:     ANSB1=0;
  5185  0062DA  010F               	movlb	15	; () banked
  5186  0062DC  9339               	bcf	57,1,b	;volatile
  5187                           
  5188                           ;stateMachine/touchScreenSM.c: 123:     ANSB2=0;
  5189  0062DE  9539               	bcf	57,2,b	;volatile
  5190                           
  5191                           ;stateMachine/touchScreenSM.c: 124:     TRISB2=0;
  5192  0062E0  9493               	bcf	3987,2,c	;volatile
  5193                           
  5194                           ;stateMachine/touchScreenSM.c: 125:     LATB2=0;
  5195  0062E2  948A               	bcf	3978,2,c	;volatile
  5196                           
  5197                           ;stateMachine/touchScreenSM.c: 126:     TRISB1=1;
  5198  0062E4  8293               	bsf	3987,1,c	;volatile
  5199                           
  5200                           ;stateMachine/touchScreenSM.c: 127:     RBPU=0;
  5201  0062E6  9EF1               	bcf	4081,7,c	;volatile
  5202  0062E8                     
  5203                           ; BSR set to: 15
  5204                           ;stateMachine/touchScreenSM.c: 128:     WPUB=0b00000010;
  5205  0062E8  0E02               	movlw	2
  5206  0062EA  6E61               	movwf	97,c	;volatile
  5207  0062EC                     
  5208                           ; BSR set to: 15
  5209                           ;stateMachine/touchScreenSM.c: 129:     TRISB3=1;
  5210  0062EC  8693               	bsf	3987,3,c	;volatile
  5211  0062EE                     
  5212                           ; BSR set to: 15
  5213                           ;stateMachine/touchScreenSM.c: 130:     TRISB4=1;
  5214  0062EE  8893               	bsf	3987,4,c	;volatile
  5215  0062F0                     
  5216                           ; BSR set to: 15
  5217                           ;stateMachine/touchScreenSM.c: 131:     INT1IE=1;
  5218  0062F0  86F0               	bsf	4080,3,c	;volatile
  5219  0062F2                     
  5220                           ; BSR set to: 15
  5221  0062F2  0012               	return		;funcret
  5222  0062F4                     __end_of_configTouch:
  5223                           	callstack 0
  5224                           
  5225 ;; *************** function _configMeasure *****************
  5226 ;; Defined at:
  5227 ;;		line 133 in file "stateMachine/touchScreenSM.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  channel         1    wreg     _Bool 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  channel         1   17[COMRAM] _Bool 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      void 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5241 ;;      Params:         0       0       0       0       0       0       0
  5242 ;;      Locals:         1       0       0       0       0       0       0
  5243 ;;      Temps:          0       0       0       0       0       0       0
  5244 ;;      Totals:         1       0       0       0       0       0       0
  5245 ;;Total ram usage:        1 bytes
  5246 ;; Hardware stack levels used: 1
  5247 ;; Hardware stack levels required when called: 4
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_touchScreenController
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text14
  5256  005FE4                     __ptext14:
  5257                           	callstack 0
  5258  005FE4                     _configMeasure:
  5259                           	callstack 23
  5260                           
  5261                           ; BSR set to: 15
  5262                           ;incstack = 0
  5263                           ;configMeasure@channel stored from wreg
  5264  005FE4  6E12               	movwf	configMeasure@channel^0,c
  5265  005FE6                     
  5266                           ;stateMachine/touchScreenSM.c: 133: void configMeasure(_Bool channel);stateMachine/touch
      +                          ScreenSM.c: 134: {;stateMachine/touchScreenSM.c: 135:     if(channel==0)
  5267  005FE6  5012               	movf	configMeasure@channel^0,w,c
  5268  005FE8  A4D8               	btfss	status,2,c
  5269  005FEA  EFF9  F02F         	goto	u7161
  5270  005FEE  EFFB  F02F         	goto	u7160
  5271  005FF2                     u7161:
  5272  005FF2  EF06  F030         	goto	l9843
  5273  005FF6                     u7160:
  5274  005FF6                     
  5275                           ;stateMachine/touchScreenSM.c: 136:     {;stateMachine/touchScreenSM.c: 137:         ANS
      +                          B1=0;
  5276  005FF6  010F               	movlb	15	; () banked
  5277  005FF8  9339               	bcf	57,1,b	;volatile
  5278                           
  5279                           ;stateMachine/touchScreenSM.c: 138:         TRISB1=0;
  5280  005FFA  9293               	bcf	3987,1,c	;volatile
  5281                           
  5282                           ;stateMachine/touchScreenSM.c: 139:         LATB1=0;
  5283  005FFC  928A               	bcf	3978,1,c	;volatile
  5284                           
  5285                           ;stateMachine/touchScreenSM.c: 140:         TRISB3=0;
  5286  005FFE  9693               	bcf	3987,3,c	;volatile
  5287                           
  5288                           ;stateMachine/touchScreenSM.c: 141:         LATB3=1;
  5289  006000  868A               	bsf	3978,3,c	;volatile
  5290                           
  5291                           ;stateMachine/touchScreenSM.c: 142:         TRISB4=1;
  5292  006002  8893               	bsf	3987,4,c	;volatile
  5293                           
  5294                           ;stateMachine/touchScreenSM.c: 143:         TRISB2=1;
  5295  006004  8493               	bsf	3987,2,c	;volatile
  5296                           
  5297                           ;stateMachine/touchScreenSM.c: 144:         ANSB2=1;
  5298  006006  8539               	bsf	57,2,b	;volatile
  5299  006008                     
  5300                           ; BSR set to: 15
  5301                           ;stateMachine/touchScreenSM.c: 145:         ADCON0=0b00100011;
  5302  006008  0E23               	movlw	35
  5303  00600A  6EC2               	movwf	194,c	;volatile
  5304  00600C                     l9843:
  5305                           
  5306                           ;stateMachine/touchScreenSM.c: 147:     if(channel==1)
  5307  00600C  0412               	decf	configMeasure@channel^0,w,c
  5308  00600E  A4D8               	btfss	status,2,c
  5309  006010  EF0C  F030         	goto	u7171
  5310  006014  EF0E  F030         	goto	u7170
  5311  006018                     u7171:
  5312  006018  EF19  F030         	goto	l521
  5313  00601C                     u7170:
  5314  00601C                     
  5315                           ;stateMachine/touchScreenSM.c: 148:     {;stateMachine/touchScreenSM.c: 149:         ANS
      +                          B2=0;
  5316  00601C  010F               	movlb	15	; () banked
  5317  00601E  9539               	bcf	57,2,b	;volatile
  5318                           
  5319                           ;stateMachine/touchScreenSM.c: 150:         TRISB2=0;
  5320  006020  9493               	bcf	3987,2,c	;volatile
  5321                           
  5322                           ;stateMachine/touchScreenSM.c: 151:         LATB2=0;
  5323  006022  948A               	bcf	3978,2,c	;volatile
  5324                           
  5325                           ;stateMachine/touchScreenSM.c: 152:         TRISB4=0;
  5326  006024  9893               	bcf	3987,4,c	;volatile
  5327                           
  5328                           ;stateMachine/touchScreenSM.c: 153:         LATB4=1;
  5329  006026  888A               	bsf	3978,4,c	;volatile
  5330                           
  5331                           ;stateMachine/touchScreenSM.c: 154:         TRISB3=1;
  5332  006028  8693               	bsf	3987,3,c	;volatile
  5333                           
  5334                           ;stateMachine/touchScreenSM.c: 155:         TRISB1=1;
  5335  00602A  8293               	bsf	3987,1,c	;volatile
  5336                           
  5337                           ;stateMachine/touchScreenSM.c: 156:         ANSB1=1;
  5338  00602C  8339               	bsf	57,1,b	;volatile
  5339  00602E                     
  5340                           ; BSR set to: 15
  5341                           ;stateMachine/touchScreenSM.c: 157:         ADCON0=0b00101011;
  5342  00602E  0E2B               	movlw	43
  5343  006030  6EC2               	movwf	194,c	;volatile
  5344  006032                     l521:
  5345  006032  0012               	return		;funcret
  5346  006034                     __end_of_configMeasure:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function ___xxtofl *****************
  5350 ;; Defined at:
  5351 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  sign            1    wreg     unsigned char 
  5354 ;;  val             4   17[COMRAM] long 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  sign            1   25[COMRAM] unsigned char 
  5357 ;;  arg             4   27[COMRAM] unsigned long 
  5358 ;;  exp             1   26[COMRAM] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  4   17[COMRAM] unsigned char 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5368 ;;      Params:         4       0       0       0       0       0       0
  5369 ;;      Locals:         6       0       0       0       0       0       0
  5370 ;;      Temps:          4       0       0       0       0       0       0
  5371 ;;      Totals:        14       0       0       0       0       0       0
  5372 ;;Total ram usage:       14 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 4
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_touchScreenController
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text15
  5383  003A70                     __ptext15:
  5384                           	callstack 0
  5385  003A70                     ___xxtofl:
  5386                           	callstack 23
  5387                           
  5388                           ;incstack = 0
  5389                           ;___xxtofl@sign stored from wreg
  5390  003A70  6E1A               	movwf	___xxtofl@sign^0,c
  5391  003A72  501A               	movf	___xxtofl@sign^0,w,c
  5392  003A74  B4D8               	btfsc	status,2,c
  5393  003A76  EF3F  F01D         	goto	u7611
  5394  003A7A  EF41  F01D         	goto	u7610
  5395  003A7E                     u7611:
  5396  003A7E  EF63  F01D         	goto	l1462
  5397  003A82                     u7610:
  5398  003A82  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5399  003A84  EF48  F01D         	goto	u7620
  5400  003A88  EF46  F01D         	goto	u7621
  5401  003A8C                     u7621:
  5402  003A8C  EF63  F01D         	goto	l1462
  5403  003A90                     u7620:
  5404  003A90  C012  F016         	movff	___xxtofl@val,??___xxtofl
  5405  003A94  C013  F017         	movff	___xxtofl@val+1,??___xxtofl+1
  5406  003A98  C014  F018         	movff	___xxtofl@val+2,??___xxtofl+2
  5407  003A9C  C015  F019         	movff	___xxtofl@val+3,??___xxtofl+3
  5408  003AA0  1E16               	comf	??___xxtofl^0,f,c
  5409  003AA2  1E17               	comf	(??___xxtofl+1)^0,f,c
  5410  003AA4  1E18               	comf	(??___xxtofl+2)^0,f,c
  5411  003AA6  1E19               	comf	(??___xxtofl+3)^0,f,c
  5412  003AA8  2A16               	incf	??___xxtofl^0,f,c
  5413  003AAA  0E00               	movlw	0
  5414  003AAC  2217               	addwfc	(??___xxtofl+1)^0,f,c
  5415  003AAE  2218               	addwfc	(??___xxtofl+2)^0,f,c
  5416  003AB0  2219               	addwfc	(??___xxtofl+3)^0,f,c
  5417  003AB2  C016  F01C         	movff	??___xxtofl,___xxtofl@arg
  5418  003AB6  C017  F01D         	movff	??___xxtofl+1,___xxtofl@arg+1
  5419  003ABA  C018  F01E         	movff	??___xxtofl+2,___xxtofl@arg+2
  5420  003ABE  C019  F01F         	movff	??___xxtofl+3,___xxtofl@arg+3
  5421  003AC2  EF6B  F01D         	goto	l10121
  5422  003AC6                     l1462:
  5423  003AC6  C012  F01C         	movff	___xxtofl@val,___xxtofl@arg
  5424  003ACA  C013  F01D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5425  003ACE  C014  F01E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5426  003AD2  C015  F01F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5427  003AD6                     l10121:
  5428  003AD6  5012               	movf	___xxtofl@val^0,w,c
  5429  003AD8  1013               	iorwf	(___xxtofl@val+1)^0,w,c
  5430  003ADA  1014               	iorwf	(___xxtofl@val+2)^0,w,c
  5431  003ADC  1015               	iorwf	(___xxtofl@val+3)^0,w,c
  5432  003ADE  A4D8               	btfss	status,2,c
  5433  003AE0  EF74  F01D         	goto	u7631
  5434  003AE4  EF76  F01D         	goto	u7630
  5435  003AE8                     u7631:
  5436  003AE8  EF80  F01D         	goto	l10127
  5437  003AEC                     u7630:
  5438  003AEC  0E00               	movlw	0
  5439  003AEE  6E12               	movwf	?___xxtofl^0,c
  5440  003AF0  0E00               	movlw	0
  5441  003AF2  6E13               	movwf	(?___xxtofl+1)^0,c
  5442  003AF4  0E00               	movlw	0
  5443  003AF6  6E14               	movwf	(?___xxtofl+2)^0,c
  5444  003AF8  0E00               	movlw	0
  5445  003AFA  6E15               	movwf	(?___xxtofl+3)^0,c
  5446  003AFC  EF11  F01E         	goto	l1465
  5447  003B00                     l10127:
  5448  003B00  0E96               	movlw	150
  5449  003B02  6E1B               	movwf	___xxtofl@exp^0,c
  5450  003B04  EF8A  F01D         	goto	l10131
  5451  003B08                     l10129:
  5452  003B08  2A1B               	incf	___xxtofl@exp^0,f,c
  5453  003B0A  90D8               	bcf	status,0,c
  5454  003B0C  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5455  003B0E  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5456  003B10  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5457  003B12  321C               	rrcf	___xxtofl@arg^0,f,c
  5458  003B14                     l10131:
  5459  003B14  0E00               	movlw	0
  5460  003B16  141C               	andwf	___xxtofl@arg^0,w,c
  5461  003B18  6E16               	movwf	??___xxtofl^0,c
  5462  003B1A  0E00               	movlw	0
  5463  003B1C  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  5464  003B1E  6E17               	movwf	(??___xxtofl+1)^0,c
  5465  003B20  0E00               	movlw	0
  5466  003B22  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  5467  003B24  6E18               	movwf	(??___xxtofl+2)^0,c
  5468  003B26  0EFE               	movlw	254
  5469  003B28  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  5470  003B2A  6E19               	movwf	(??___xxtofl+3)^0,c
  5471  003B2C  5016               	movf	??___xxtofl^0,w,c
  5472  003B2E  1017               	iorwf	(??___xxtofl+1)^0,w,c
  5473  003B30  1018               	iorwf	(??___xxtofl+2)^0,w,c
  5474  003B32  1019               	iorwf	(??___xxtofl+3)^0,w,c
  5475  003B34  A4D8               	btfss	status,2,c
  5476  003B36  EF9F  F01D         	goto	u7641
  5477  003B3A  EFA1  F01D         	goto	u7640
  5478  003B3E                     u7641:
  5479  003B3E  EF84  F01D         	goto	l10129
  5480  003B42                     u7640:
  5481  003B42  EFAF  F01D         	goto	l1469
  5482  003B46                     l10133:
  5483  003B46  2A1B               	incf	___xxtofl@exp^0,f,c
  5484  003B48  0E01               	movlw	1
  5485  003B4A  261C               	addwf	___xxtofl@arg^0,f,c
  5486  003B4C  0E00               	movlw	0
  5487  003B4E  221D               	addwfc	(___xxtofl@arg+1)^0,f,c
  5488  003B50  221E               	addwfc	(___xxtofl@arg+2)^0,f,c
  5489  003B52  221F               	addwfc	(___xxtofl@arg+3)^0,f,c
  5490  003B54  90D8               	bcf	status,0,c
  5491  003B56  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5492  003B58  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5493  003B5A  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5494  003B5C  321C               	rrcf	___xxtofl@arg^0,f,c
  5495  003B5E                     l1469:
  5496  003B5E  0E00               	movlw	0
  5497  003B60  141C               	andwf	___xxtofl@arg^0,w,c
  5498  003B62  6E16               	movwf	??___xxtofl^0,c
  5499  003B64  0E00               	movlw	0
  5500  003B66  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  5501  003B68  6E17               	movwf	(??___xxtofl+1)^0,c
  5502  003B6A  0E00               	movlw	0
  5503  003B6C  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  5504  003B6E  6E18               	movwf	(??___xxtofl+2)^0,c
  5505  003B70  0EFF               	movlw	255
  5506  003B72  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  5507  003B74  6E19               	movwf	(??___xxtofl+3)^0,c
  5508  003B76  5016               	movf	??___xxtofl^0,w,c
  5509  003B78  1017               	iorwf	(??___xxtofl+1)^0,w,c
  5510  003B7A  1018               	iorwf	(??___xxtofl+2)^0,w,c
  5511  003B7C  1019               	iorwf	(??___xxtofl+3)^0,w,c
  5512  003B7E  A4D8               	btfss	status,2,c
  5513  003B80  EFC4  F01D         	goto	u7651
  5514  003B84  EFC6  F01D         	goto	u7650
  5515  003B88                     u7651:
  5516  003B88  EFA3  F01D         	goto	l10133
  5517  003B8C                     u7650:
  5518  003B8C  EFCE  F01D         	goto	l10141
  5519  003B90                     l10139:
  5520  003B90  061B               	decf	___xxtofl@exp^0,f,c
  5521  003B92  90D8               	bcf	status,0,c
  5522  003B94  361C               	rlcf	___xxtofl@arg^0,f,c
  5523  003B96  361D               	rlcf	(___xxtofl@arg+1)^0,f,c
  5524  003B98  361E               	rlcf	(___xxtofl@arg+2)^0,f,c
  5525  003B9A  361F               	rlcf	(___xxtofl@arg+3)^0,f,c
  5526  003B9C                     l10141:
  5527  003B9C  BE1E               	btfsc	(___xxtofl@arg+2)^0,7,c
  5528  003B9E  EFD3  F01D         	goto	u7661
  5529  003BA2  EFD5  F01D         	goto	u7660
  5530  003BA6                     u7661:
  5531  003BA6  EFDD  F01D         	goto	l1476
  5532  003BAA                     u7660:
  5533  003BAA  0E02               	movlw	2
  5534  003BAC  601B               	cpfslt	___xxtofl@exp^0,c
  5535  003BAE  EFDB  F01D         	goto	u7671
  5536  003BB2  EFDD  F01D         	goto	u7670
  5537  003BB6                     u7671:
  5538  003BB6  EFC8  F01D         	goto	l10139
  5539  003BBA                     u7670:
  5540  003BBA                     l1476:
  5541  003BBA  B01B               	btfsc	___xxtofl@exp^0,0,c
  5542  003BBC  EFE2  F01D         	goto	u7681
  5543  003BC0  EFE4  F01D         	goto	u7680
  5544  003BC4                     u7681:
  5545  003BC4  EFE5  F01D         	goto	l10147
  5546  003BC8                     u7680:
  5547  003BC8  9E1E               	bcf	(___xxtofl@arg+2)^0,7,c
  5548  003BCA                     l10147:
  5549  003BCA  90D8               	bcf	status,0,c
  5550  003BCC  321B               	rrcf	___xxtofl@exp^0,f,c
  5551  003BCE  C01B  F016         	movff	___xxtofl@exp,??___xxtofl
  5552  003BD2  6A17               	clrf	(??___xxtofl+1)^0,c
  5553  003BD4  6A18               	clrf	(??___xxtofl+2)^0,c
  5554  003BD6  6A19               	clrf	(??___xxtofl+3)^0,c
  5555  003BD8  C016  F019         	movff	??___xxtofl,??___xxtofl+3
  5556  003BDC  6A18               	clrf	(??___xxtofl+2)^0,c
  5557  003BDE  6A17               	clrf	(??___xxtofl+1)^0,c
  5558  003BE0  6A16               	clrf	??___xxtofl^0,c
  5559  003BE2  5016               	movf	??___xxtofl^0,w,c
  5560  003BE4  121C               	iorwf	___xxtofl@arg^0,f,c
  5561  003BE6  5017               	movf	(??___xxtofl+1)^0,w,c
  5562  003BE8  121D               	iorwf	(___xxtofl@arg+1)^0,f,c
  5563  003BEA  5018               	movf	(??___xxtofl+2)^0,w,c
  5564  003BEC  121E               	iorwf	(___xxtofl@arg+2)^0,f,c
  5565  003BEE  5019               	movf	(??___xxtofl+3)^0,w,c
  5566  003BF0  121F               	iorwf	(___xxtofl@arg+3)^0,f,c
  5567  003BF2  501A               	movf	___xxtofl@sign^0,w,c
  5568  003BF4  B4D8               	btfsc	status,2,c
  5569  003BF6  EFFF  F01D         	goto	u7691
  5570  003BFA  EF01  F01E         	goto	u7690
  5571  003BFE                     u7691:
  5572  003BFE  EF09  F01E         	goto	l10157
  5573  003C02                     u7690:
  5574  003C02  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5575  003C04  EF08  F01E         	goto	u7700
  5576  003C08  EF06  F01E         	goto	u7701
  5577  003C0C                     u7701:
  5578  003C0C  EF09  F01E         	goto	l10157
  5579  003C10                     u7700:
  5580  003C10  8E1F               	bsf	(___xxtofl@arg+3)^0,7,c
  5581  003C12                     l10157:
  5582  003C12  C01C  F012         	movff	___xxtofl@arg,?___xxtofl
  5583  003C16  C01D  F013         	movff	___xxtofl@arg+1,?___xxtofl+1
  5584  003C1A  C01E  F014         	movff	___xxtofl@arg+2,?___xxtofl+2
  5585  003C1E  C01F  F015         	movff	___xxtofl@arg+3,?___xxtofl+3
  5586  003C22                     l1465:
  5587  003C22  0012               	return		;funcret
  5588  003C24                     __end_of___xxtofl:
  5589                           	callstack 0
  5590                           
  5591 ;; *************** function ___fltol *****************
  5592 ;; Defined at:
  5593 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  f1              4   56[COMRAM] unsigned char 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  exp1            1   65[COMRAM] unsigned char 
  5598 ;;  sign1           1   64[COMRAM] unsigned char 
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  4   56[COMRAM] long 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2, status,0
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5608 ;;      Params:         4       0       0       0       0       0       0
  5609 ;;      Locals:         2       0       0       0       0       0       0
  5610 ;;      Temps:          4       0       0       0       0       0       0
  5611 ;;      Totals:        10       0       0       0       0       0       0
  5612 ;;Total ram usage:       10 bytes
  5613 ;; Hardware stack levels used: 1
  5614 ;; Hardware stack levels required when called: 4
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_touchScreenController
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text16
  5623  0046BE                     __ptext16:
  5624                           	callstack 0
  5625  0046BE                     ___fltol:
  5626                           	callstack 23
  5627  0046BE  343B               	rlcf	(___fltol@f1+2)^0,w,c
  5628  0046C0  343C               	rlcf	(___fltol@f1+3)^0,w,c
  5629  0046C2  6E42               	movwf	___fltol@exp1^0,c
  5630  0046C4  5042               	movf	___fltol@exp1^0,w,c
  5631  0046C6  A4D8               	btfss	status,2,c
  5632  0046C8  EF68  F023         	goto	u7541
  5633  0046CC  EF6A  F023         	goto	u7540
  5634  0046D0                     u7541:
  5635  0046D0  EF74  F023         	goto	l10077
  5636  0046D4                     u7540:
  5637  0046D4                     l10073:
  5638  0046D4  0E00               	movlw	0
  5639  0046D6  6E39               	movwf	?___fltol^0,c
  5640  0046D8  0E00               	movlw	0
  5641  0046DA  6E3A               	movwf	(?___fltol+1)^0,c
  5642  0046DC  0E00               	movlw	0
  5643  0046DE  6E3B               	movwf	(?___fltol+2)^0,c
  5644  0046E0  0E00               	movlw	0
  5645  0046E2  6E3C               	movwf	(?___fltol+3)^0,c
  5646  0046E4  EFE1  F023         	goto	l1104
  5647  0046E8                     l10077:
  5648  0046E8  C039  F03D         	movff	___fltol@f1,??___fltol
  5649  0046EC  C03A  F03E         	movff	___fltol@f1+1,??___fltol+1
  5650  0046F0  C03B  F03F         	movff	___fltol@f1+2,??___fltol+2
  5651  0046F4  C03C  F040         	movff	___fltol@f1+3,??___fltol+3
  5652  0046F8  0E20               	movlw	32
  5653  0046FA  EF84  F023         	goto	u7550
  5654  0046FE                     u7555:
  5655  0046FE  90D8               	bcf	status,0,c
  5656  004700  3240               	rrcf	(??___fltol+3)^0,f,c
  5657  004702  323F               	rrcf	(??___fltol+2)^0,f,c
  5658  004704  323E               	rrcf	(??___fltol+1)^0,f,c
  5659  004706  323D               	rrcf	??___fltol^0,f,c
  5660  004708                     u7550:
  5661  004708  2EE8               	decfsz	wreg,f,c
  5662  00470A  EF7F  F023         	goto	u7555
  5663  00470E  503D               	movf	??___fltol^0,w,c
  5664  004710  6E41               	movwf	___fltol@sign1^0,c
  5665  004712  8E3B               	bsf	(___fltol@f1+2)^0,7,c
  5666  004714  0EFF               	movlw	255
  5667  004716  1639               	andwf	___fltol@f1^0,f,c
  5668  004718  0EFF               	movlw	255
  5669  00471A  163A               	andwf	(___fltol@f1+1)^0,f,c
  5670  00471C  0EFF               	movlw	255
  5671  00471E  163B               	andwf	(___fltol@f1+2)^0,f,c
  5672  004720  0E00               	movlw	0
  5673  004722  163C               	andwf	(___fltol@f1+3)^0,f,c
  5674  004724  0E96               	movlw	150
  5675  004726  5E42               	subwf	___fltol@exp1^0,f,c
  5676  004728  BE42               	btfsc	___fltol@exp1^0,7,c
  5677  00472A  EF9B  F023         	goto	u7560
  5678  00472E  EF99  F023         	goto	u7561
  5679  004732                     u7561:
  5680  004732  EFB1  F023         	goto	l10097
  5681  004736                     u7560:
  5682  004736  5042               	movf	___fltol@exp1^0,w,c
  5683  004738  0A80               	xorlw	128
  5684  00473A  0F97               	addlw	151
  5685  00473C  B0D8               	btfsc	status,0,c
  5686  00473E  EFA3  F023         	goto	u7571
  5687  004742  EFA5  F023         	goto	u7570
  5688  004746                     u7571:
  5689  004746  EFA7  F023         	goto	l10093
  5690  00474A                     u7570:
  5691  00474A  EF6A  F023         	goto	l10073
  5692  00474E                     l10093:
  5693  00474E  90D8               	bcf	status,0,c
  5694  004750  323C               	rrcf	(___fltol@f1+3)^0,f,c
  5695  004752  323B               	rrcf	(___fltol@f1+2)^0,f,c
  5696  004754  323A               	rrcf	(___fltol@f1+1)^0,f,c
  5697  004756  3239               	rrcf	___fltol@f1^0,f,c
  5698  004758  3E42               	incfsz	___fltol@exp1^0,f,c
  5699  00475A  EFA7  F023         	goto	l10093
  5700  00475E  EFC9  F023         	goto	l10107
  5701  004762                     l10097:
  5702  004762  0E1F               	movlw	31
  5703  004764  6442               	cpfsgt	___fltol@exp1^0,c
  5704  004766  EFB7  F023         	goto	u7581
  5705  00476A  EFB9  F023         	goto	u7580
  5706  00476E                     u7581:
  5707  00476E  EFC1  F023         	goto	l10105
  5708  004772                     u7580:
  5709  004772  EF6A  F023         	goto	l10073
  5710  004776                     l10103:
  5711  004776  90D8               	bcf	status,0,c
  5712  004778  3639               	rlcf	___fltol@f1^0,f,c
  5713  00477A  363A               	rlcf	(___fltol@f1+1)^0,f,c
  5714  00477C  363B               	rlcf	(___fltol@f1+2)^0,f,c
  5715  00477E  363C               	rlcf	(___fltol@f1+3)^0,f,c
  5716  004780  0642               	decf	___fltol@exp1^0,f,c
  5717  004782                     l10105:
  5718  004782  5042               	movf	___fltol@exp1^0,w,c
  5719  004784  A4D8               	btfss	status,2,c
  5720  004786  EFC7  F023         	goto	u7591
  5721  00478A  EFC9  F023         	goto	u7590
  5722  00478E                     u7591:
  5723  00478E  EFBB  F023         	goto	l10103
  5724  004792                     u7590:
  5725  004792                     l10107:
  5726  004792  5041               	movf	___fltol@sign1^0,w,c
  5727  004794  B4D8               	btfsc	status,2,c
  5728  004796  EFCF  F023         	goto	u7601
  5729  00479A  EFD1  F023         	goto	u7600
  5730  00479E                     u7601:
  5731  00479E  EFD9  F023         	goto	l10111
  5732  0047A2                     u7600:
  5733  0047A2  1E3C               	comf	(___fltol@f1+3)^0,f,c
  5734  0047A4  1E3B               	comf	(___fltol@f1+2)^0,f,c
  5735  0047A6  1E3A               	comf	(___fltol@f1+1)^0,f,c
  5736  0047A8  6C39               	negf	___fltol@f1^0,c
  5737  0047AA  0E00               	movlw	0
  5738  0047AC  223A               	addwfc	(___fltol@f1+1)^0,f,c
  5739  0047AE  223B               	addwfc	(___fltol@f1+2)^0,f,c
  5740  0047B0  223C               	addwfc	(___fltol@f1+3)^0,f,c
  5741  0047B2                     l10111:
  5742  0047B2  C039  F039         	movff	___fltol@f1,?___fltol
  5743  0047B6  C03A  F03A         	movff	___fltol@f1+1,?___fltol+1
  5744  0047BA  C03B  F03B         	movff	___fltol@f1+2,?___fltol+2
  5745  0047BE  C03C  F03C         	movff	___fltol@f1+3,?___fltol+3
  5746  0047C2                     l1104:
  5747  0047C2  0012               	return		;funcret
  5748  0047C4                     __end_of___fltol:
  5749                           	callstack 0
  5750                           
  5751 ;; *************** function ___fldiv *****************
  5752 ;; Defined at:
  5753 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  b               4   31[COMRAM] long 
  5756 ;;  a               4   35[COMRAM] long 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  grs             4   50[COMRAM] unsigned long 
  5759 ;;  rem             4   43[COMRAM] unsigned long 
  5760 ;;  new_exp         2   48[COMRAM] short 
  5761 ;;  aexp            1   55[COMRAM] unsigned char 
  5762 ;;  bexp            1   54[COMRAM] unsigned char 
  5763 ;;  sign            1   47[COMRAM] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  4   31[COMRAM] unsigned char 
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5773 ;;      Params:         8       0       0       0       0       0       0
  5774 ;;      Locals:        13       0       0       0       0       0       0
  5775 ;;      Temps:          4       0       0       0       0       0       0
  5776 ;;      Totals:        25       0       0       0       0       0       0
  5777 ;;Total ram usage:       25 bytes
  5778 ;; Hardware stack levels used: 1
  5779 ;; Hardware stack levels required when called: 4
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		_touchScreenController
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           	psect	text17
  5788  002604                     __ptext17:
  5789                           	callstack 0
  5790  002604                     ___fldiv:
  5791                           	callstack 23
  5792  002604  5023               	movf	(___fldiv@b+3)^0,w,c
  5793  002606  0B80               	andlw	128
  5794  002608  6E30               	movwf	___fldiv@sign^0,c
  5795  00260A  5023               	movf	(___fldiv@b+3)^0,w,c
  5796  00260C  2423               	addwf	(___fldiv@b+3)^0,w,c
  5797  00260E  6E37               	movwf	___fldiv@bexp^0,c
  5798  002610  AE22               	btfss	(___fldiv@b+2)^0,7,c
  5799  002612  EF0D  F013         	goto	u7311
  5800  002616  EF0F  F013         	goto	u7310
  5801  00261A                     u7311:
  5802  00261A  EF10  F013         	goto	l9939
  5803  00261E                     u7310:
  5804  00261E  8037               	bsf	___fldiv@bexp^0,0,c
  5805  002620                     l9939:
  5806  002620  5037               	movf	___fldiv@bexp^0,w,c
  5807  002622  B4D8               	btfsc	status,2,c
  5808  002624  EF16  F013         	goto	u7321
  5809  002628  EF18  F013         	goto	u7320
  5810  00262C                     u7321:
  5811  00262C  EF2D  F013         	goto	l9949
  5812  002630                     u7320:
  5813  002630  2837               	incf	___fldiv@bexp^0,w,c
  5814  002632  A4D8               	btfss	status,2,c
  5815  002634  EF1E  F013         	goto	u7331
  5816  002638  EF20  F013         	goto	u7330
  5817  00263C                     u7331:
  5818  00263C  EF28  F013         	goto	l9945
  5819  002640                     u7330:
  5820  002640  0E00               	movlw	0
  5821  002642  6E20               	movwf	___fldiv@b^0,c
  5822  002644  0E00               	movlw	0
  5823  002646  6E21               	movwf	(___fldiv@b+1)^0,c
  5824  002648  0E00               	movlw	0
  5825  00264A  6E22               	movwf	(___fldiv@b+2)^0,c
  5826  00264C  0E00               	movlw	0
  5827  00264E  6E23               	movwf	(___fldiv@b+3)^0,c
  5828  002650                     l9945:
  5829  002650  8E22               	bsf	(___fldiv@b+2)^0,7,c
  5830  002652  0E00               	movlw	0
  5831  002654  6E23               	movwf	(___fldiv@b+3)^0,c
  5832  002656  EF35  F013         	goto	l9951
  5833  00265A                     l9949:
  5834  00265A  0E00               	movlw	0
  5835  00265C  6E20               	movwf	___fldiv@b^0,c
  5836  00265E  0E00               	movlw	0
  5837  002660  6E21               	movwf	(___fldiv@b+1)^0,c
  5838  002662  0E00               	movlw	0
  5839  002664  6E22               	movwf	(___fldiv@b+2)^0,c
  5840  002666  0E00               	movlw	0
  5841  002668  6E23               	movwf	(___fldiv@b+3)^0,c
  5842  00266A                     l9951:
  5843  00266A  5027               	movf	(___fldiv@a+3)^0,w,c
  5844  00266C  0B80               	andlw	128
  5845  00266E  1A30               	xorwf	___fldiv@sign^0,f,c
  5846  002670  5027               	movf	(___fldiv@a+3)^0,w,c
  5847  002672  2427               	addwf	(___fldiv@a+3)^0,w,c
  5848  002674  6E38               	movwf	___fldiv@aexp^0,c
  5849  002676  AE26               	btfss	(___fldiv@a+2)^0,7,c
  5850  002678  EF40  F013         	goto	u7341
  5851  00267C  EF42  F013         	goto	u7340
  5852  002680                     u7341:
  5853  002680  EF43  F013         	goto	l9959
  5854  002684                     u7340:
  5855  002684  8038               	bsf	___fldiv@aexp^0,0,c
  5856  002686                     l9959:
  5857  002686  5038               	movf	___fldiv@aexp^0,w,c
  5858  002688  B4D8               	btfsc	status,2,c
  5859  00268A  EF49  F013         	goto	u7351
  5860  00268E  EF4B  F013         	goto	u7350
  5861  002692                     u7351:
  5862  002692  EF60  F013         	goto	l9969
  5863  002696                     u7350:
  5864  002696  2838               	incf	___fldiv@aexp^0,w,c
  5865  002698  A4D8               	btfss	status,2,c
  5866  00269A  EF51  F013         	goto	u7361
  5867  00269E  EF53  F013         	goto	u7360
  5868  0026A2                     u7361:
  5869  0026A2  EF5B  F013         	goto	l9965
  5870  0026A6                     u7360:
  5871  0026A6  0E00               	movlw	0
  5872  0026A8  6E24               	movwf	___fldiv@a^0,c
  5873  0026AA  0E00               	movlw	0
  5874  0026AC  6E25               	movwf	(___fldiv@a+1)^0,c
  5875  0026AE  0E00               	movlw	0
  5876  0026B0  6E26               	movwf	(___fldiv@a+2)^0,c
  5877  0026B2  0E00               	movlw	0
  5878  0026B4  6E27               	movwf	(___fldiv@a+3)^0,c
  5879  0026B6                     l9965:
  5880  0026B6  8E26               	bsf	(___fldiv@a+2)^0,7,c
  5881  0026B8  0E00               	movlw	0
  5882  0026BA  6E27               	movwf	(___fldiv@a+3)^0,c
  5883  0026BC  EF68  F013         	goto	l9971
  5884  0026C0                     l9969:
  5885  0026C0  0E00               	movlw	0
  5886  0026C2  6E24               	movwf	___fldiv@a^0,c
  5887  0026C4  0E00               	movlw	0
  5888  0026C6  6E25               	movwf	(___fldiv@a+1)^0,c
  5889  0026C8  0E00               	movlw	0
  5890  0026CA  6E26               	movwf	(___fldiv@a+2)^0,c
  5891  0026CC  0E00               	movlw	0
  5892  0026CE  6E27               	movwf	(___fldiv@a+3)^0,c
  5893  0026D0                     l9971:
  5894  0026D0  5024               	movf	___fldiv@a^0,w,c
  5895  0026D2  1025               	iorwf	(___fldiv@a+1)^0,w,c
  5896  0026D4  1026               	iorwf	(___fldiv@a+2)^0,w,c
  5897  0026D6  1027               	iorwf	(___fldiv@a+3)^0,w,c
  5898  0026D8  A4D8               	btfss	status,2,c
  5899  0026DA  EF71  F013         	goto	u7371
  5900  0026DE  EF73  F013         	goto	u7370
  5901  0026E2                     u7371:
  5902  0026E2  EF8B  F013         	goto	l9983
  5903  0026E6                     u7370:
  5904  0026E6  0E00               	movlw	0
  5905  0026E8  6E20               	movwf	___fldiv@b^0,c
  5906  0026EA  0E00               	movlw	0
  5907  0026EC  6E21               	movwf	(___fldiv@b+1)^0,c
  5908  0026EE  0E00               	movlw	0
  5909  0026F0  6E22               	movwf	(___fldiv@b+2)^0,c
  5910  0026F2  0E00               	movlw	0
  5911  0026F4  6E23               	movwf	(___fldiv@b+3)^0,c
  5912  0026F6  0E80               	movlw	128
  5913  0026F8  1222               	iorwf	(___fldiv@b+2)^0,f,c
  5914  0026FA  0E7F               	movlw	127
  5915  0026FC  1223               	iorwf	(___fldiv@b+3)^0,f,c
  5916  0026FE                     l9977:
  5917  0026FE  5030               	movf	___fldiv@sign^0,w,c
  5918  002700  1223               	iorwf	(___fldiv@b+3)^0,f,c
  5919  002702  C020  F020         	movff	___fldiv@b,?___fldiv
  5920  002706  C021  F021         	movff	___fldiv@b+1,?___fldiv+1
  5921  00270A  C022  F022         	movff	___fldiv@b+2,?___fldiv+2
  5922  00270E  C023  F023         	movff	___fldiv@b+3,?___fldiv+3
  5923  002712  EFCE  F014         	goto	l1389
  5924  002716                     l9983:
  5925  002716  5037               	movf	___fldiv@bexp^0,w,c
  5926  002718  A4D8               	btfss	status,2,c
  5927  00271A  EF91  F013         	goto	u7381
  5928  00271E  EF93  F013         	goto	u7380
  5929  002722                     u7381:
  5930  002722  EF9D  F013         	goto	l9991
  5931  002726                     u7380:
  5932  002726  0E00               	movlw	0
  5933  002728  6E20               	movwf	?___fldiv^0,c
  5934  00272A  0E00               	movlw	0
  5935  00272C  6E21               	movwf	(?___fldiv+1)^0,c
  5936  00272E  0E00               	movlw	0
  5937  002730  6E22               	movwf	(?___fldiv+2)^0,c
  5938  002732  0E00               	movlw	0
  5939  002734  6E23               	movwf	(?___fldiv+3)^0,c
  5940  002736  EFCE  F014         	goto	l1389
  5941  00273A                     l9991:
  5942  00273A  5038               	movf	___fldiv@aexp^0,w,c
  5943  00273C  C037  F028         	movff	___fldiv@bexp,??___fldiv
  5944  002740  6A29               	clrf	(??___fldiv+1)^0,c
  5945  002742  5E28               	subwf	??___fldiv^0,f,c
  5946  002744  0E00               	movlw	0
  5947  002746  5A29               	subwfb	(??___fldiv+1)^0,f,c
  5948  002748  0E7F               	movlw	127
  5949  00274A  2428               	addwf	??___fldiv^0,w,c
  5950  00274C  6E31               	movwf	___fldiv@new_exp^0,c
  5951  00274E  0E00               	movlw	0
  5952  002750  2029               	addwfc	(??___fldiv+1)^0,w,c
  5953  002752  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  5954  002754  C020  F02C         	movff	___fldiv@b,___fldiv@rem
  5955  002758  C021  F02D         	movff	___fldiv@b+1,___fldiv@rem+1
  5956  00275C  C022  F02E         	movff	___fldiv@b+2,___fldiv@rem+2
  5957  002760  C023  F02F         	movff	___fldiv@b+3,___fldiv@rem+3
  5958  002764  0E00               	movlw	0
  5959  002766  6E20               	movwf	___fldiv@b^0,c
  5960  002768  0E00               	movlw	0
  5961  00276A  6E21               	movwf	(___fldiv@b+1)^0,c
  5962  00276C  0E00               	movlw	0
  5963  00276E  6E22               	movwf	(___fldiv@b+2)^0,c
  5964  002770  0E00               	movlw	0
  5965  002772  6E23               	movwf	(___fldiv@b+3)^0,c
  5966  002774  0E00               	movlw	0
  5967  002776  6E33               	movwf	___fldiv@grs^0,c
  5968  002778  0E00               	movlw	0
  5969  00277A  6E34               	movwf	(___fldiv@grs+1)^0,c
  5970  00277C  0E00               	movlw	0
  5971  00277E  6E35               	movwf	(___fldiv@grs+2)^0,c
  5972  002780  0E00               	movlw	0
  5973  002782  6E36               	movwf	(___fldiv@grs+3)^0,c
  5974  002784  0E00               	movlw	0
  5975  002786  6E38               	movwf	___fldiv@aexp^0,c
  5976  002788  EFFE  F013         	goto	l1391
  5977  00278C                     l10001:
  5978  00278C  5038               	movf	___fldiv@aexp^0,w,c
  5979  00278E  B4D8               	btfsc	status,2,c
  5980  002790  EFCC  F013         	goto	u7391
  5981  002794  EFCE  F013         	goto	u7390
  5982  002798                     u7391:
  5983  002798  EFE5  F013         	goto	l10009
  5984  00279C                     u7390:
  5985  00279C  90D8               	bcf	status,0,c
  5986  00279E  362C               	rlcf	___fldiv@rem^0,f,c
  5987  0027A0  362D               	rlcf	(___fldiv@rem+1)^0,f,c
  5988  0027A2  362E               	rlcf	(___fldiv@rem+2)^0,f,c
  5989  0027A4  362F               	rlcf	(___fldiv@rem+3)^0,f,c
  5990  0027A6  90D8               	bcf	status,0,c
  5991  0027A8  3620               	rlcf	___fldiv@b^0,f,c
  5992  0027AA  3621               	rlcf	(___fldiv@b+1)^0,f,c
  5993  0027AC  3622               	rlcf	(___fldiv@b+2)^0,f,c
  5994  0027AE  3623               	rlcf	(___fldiv@b+3)^0,f,c
  5995  0027B0  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  5996  0027B2  EFDD  F013         	goto	u7401
  5997  0027B6  EFDF  F013         	goto	u7400
  5998  0027BA                     u7401:
  5999  0027BA  EFE0  F013         	goto	l1394
  6000  0027BE                     u7400:
  6001  0027BE  8020               	bsf	___fldiv@b^0,0,c
  6002  0027C0                     l1394:
  6003  0027C0  90D8               	bcf	status,0,c
  6004  0027C2  3633               	rlcf	___fldiv@grs^0,f,c
  6005  0027C4  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  6006  0027C6  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  6007  0027C8  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  6008  0027CA                     l10009:
  6009  0027CA  5024               	movf	___fldiv@a^0,w,c
  6010  0027CC  5C2C               	subwf	___fldiv@rem^0,w,c
  6011  0027CE  5025               	movf	(___fldiv@a+1)^0,w,c
  6012  0027D0  582D               	subwfb	(___fldiv@rem+1)^0,w,c
  6013  0027D2  5026               	movf	(___fldiv@a+2)^0,w,c
  6014  0027D4  582E               	subwfb	(___fldiv@rem+2)^0,w,c
  6015  0027D6  5027               	movf	(___fldiv@a+3)^0,w,c
  6016  0027D8  582F               	subwfb	(___fldiv@rem+3)^0,w,c
  6017  0027DA  A0D8               	btfss	status,0,c
  6018  0027DC  EFF2  F013         	goto	u7411
  6019  0027E0  EFF4  F013         	goto	u7410
  6020  0027E4                     u7411:
  6021  0027E4  EFFD  F013         	goto	l10015
  6022  0027E8                     u7410:
  6023  0027E8  8C36               	bsf	(___fldiv@grs+3)^0,6,c
  6024  0027EA  5024               	movf	___fldiv@a^0,w,c
  6025  0027EC  5E2C               	subwf	___fldiv@rem^0,f,c
  6026  0027EE  5025               	movf	(___fldiv@a+1)^0,w,c
  6027  0027F0  5A2D               	subwfb	(___fldiv@rem+1)^0,f,c
  6028  0027F2  5026               	movf	(___fldiv@a+2)^0,w,c
  6029  0027F4  5A2E               	subwfb	(___fldiv@rem+2)^0,f,c
  6030  0027F6  5027               	movf	(___fldiv@a+3)^0,w,c
  6031  0027F8  5A2F               	subwfb	(___fldiv@rem+3)^0,f,c
  6032  0027FA                     l10015:
  6033  0027FA  2A38               	incf	___fldiv@aexp^0,f,c
  6034  0027FC                     l1391:
  6035  0027FC  0E19               	movlw	25
  6036  0027FE  6438               	cpfsgt	___fldiv@aexp^0,c
  6037  002800  EF04  F014         	goto	u7421
  6038  002804  EF06  F014         	goto	u7420
  6039  002808                     u7421:
  6040  002808  EFC6  F013         	goto	l10001
  6041  00280C                     u7420:
  6042  00280C  502C               	movf	___fldiv@rem^0,w,c
  6043  00280E  102D               	iorwf	(___fldiv@rem+1)^0,w,c
  6044  002810  102E               	iorwf	(___fldiv@rem+2)^0,w,c
  6045  002812  102F               	iorwf	(___fldiv@rem+3)^0,w,c
  6046  002814  B4D8               	btfsc	status,2,c
  6047  002816  EF0F  F014         	goto	u7431
  6048  00281A  EF11  F014         	goto	u7430
  6049  00281E                     u7431:
  6050  00281E  EF29  F014         	goto	l10027
  6051  002822                     u7430:
  6052  002822  8033               	bsf	___fldiv@grs^0,0,c
  6053  002824  EF29  F014         	goto	l10027
  6054  002828                     l10021:
  6055  002828  90D8               	bcf	status,0,c
  6056  00282A  3620               	rlcf	___fldiv@b^0,f,c
  6057  00282C  3621               	rlcf	(___fldiv@b+1)^0,f,c
  6058  00282E  3622               	rlcf	(___fldiv@b+2)^0,f,c
  6059  002830  3623               	rlcf	(___fldiv@b+3)^0,f,c
  6060  002832  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6061  002834  EF1E  F014         	goto	u7441
  6062  002838  EF20  F014         	goto	u7440
  6063  00283C                     u7441:
  6064  00283C  EF21  F014         	goto	l1400
  6065  002840                     u7440:
  6066  002840  8020               	bsf	___fldiv@b^0,0,c
  6067  002842                     l1400:
  6068  002842  90D8               	bcf	status,0,c
  6069  002844  3633               	rlcf	___fldiv@grs^0,f,c
  6070  002846  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  6071  002848  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  6072  00284A  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  6073  00284C  0631               	decf	___fldiv@new_exp^0,f,c
  6074  00284E  A0D8               	btfss	status,0,c
  6075  002850  0632               	decf	(___fldiv@new_exp+1)^0,f,c
  6076  002852                     l10027:
  6077  002852  AE22               	btfss	(___fldiv@b+2)^0,7,c
  6078  002854  EF2E  F014         	goto	u7451
  6079  002858  EF30  F014         	goto	u7450
  6080  00285C                     u7451:
  6081  00285C  EF14  F014         	goto	l10021
  6082  002860                     u7450:
  6083  002860  0E00               	movlw	0
  6084  002862  6E38               	movwf	___fldiv@aexp^0,c
  6085  002864  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6086  002866  EF37  F014         	goto	u7461
  6087  00286A  EF39  F014         	goto	u7460
  6088  00286E                     u7461:
  6089  00286E  EF5D  F014         	goto	l1402
  6090  002872                     u7460:
  6091  002872  0EFF               	movlw	255
  6092  002874  1433               	andwf	___fldiv@grs^0,w,c
  6093  002876  6E28               	movwf	??___fldiv^0,c
  6094  002878  0EFF               	movlw	255
  6095  00287A  1434               	andwf	(___fldiv@grs+1)^0,w,c
  6096  00287C  6E29               	movwf	(??___fldiv+1)^0,c
  6097  00287E  0EFF               	movlw	255
  6098  002880  1435               	andwf	(___fldiv@grs+2)^0,w,c
  6099  002882  6E2A               	movwf	(??___fldiv+2)^0,c
  6100  002884  0E7F               	movlw	127
  6101  002886  1436               	andwf	(___fldiv@grs+3)^0,w,c
  6102  002888  6E2B               	movwf	(??___fldiv+3)^0,c
  6103  00288A  5028               	movf	??___fldiv^0,w,c
  6104  00288C  1029               	iorwf	(??___fldiv+1)^0,w,c
  6105  00288E  102A               	iorwf	(??___fldiv+2)^0,w,c
  6106  002890  102B               	iorwf	(??___fldiv+3)^0,w,c
  6107  002892  B4D8               	btfsc	status,2,c
  6108  002894  EF4E  F014         	goto	u7471
  6109  002898  EF50  F014         	goto	u7470
  6110  00289C                     u7471:
  6111  00289C  EF54  F014         	goto	l1403
  6112  0028A0                     u7470:
  6113  0028A0                     l10035:
  6114  0028A0  0E01               	movlw	1
  6115  0028A2  6E38               	movwf	___fldiv@aexp^0,c
  6116  0028A4  EF5D  F014         	goto	l1402
  6117  0028A8                     l1403:
  6118  0028A8  A020               	btfss	___fldiv@b^0,0,c
  6119  0028AA  EF59  F014         	goto	u7481
  6120  0028AE  EF5B  F014         	goto	u7480
  6121  0028B2                     u7481:
  6122  0028B2  EF5D  F014         	goto	l1402
  6123  0028B6                     u7480:
  6124  0028B6  EF50  F014         	goto	l10035
  6125  0028BA                     l1402:
  6126  0028BA  5038               	movf	___fldiv@aexp^0,w,c
  6127  0028BC  B4D8               	btfsc	status,2,c
  6128  0028BE  EF63  F014         	goto	u7491
  6129  0028C2  EF65  F014         	goto	u7490
  6130  0028C6                     u7491:
  6131  0028C6  EF89  F014         	goto	l10047
  6132  0028CA                     u7490:
  6133  0028CA  0E01               	movlw	1
  6134  0028CC  2620               	addwf	___fldiv@b^0,f,c
  6135  0028CE  0E00               	movlw	0
  6136  0028D0  2221               	addwfc	(___fldiv@b+1)^0,f,c
  6137  0028D2  2222               	addwfc	(___fldiv@b+2)^0,f,c
  6138  0028D4  2223               	addwfc	(___fldiv@b+3)^0,f,c
  6139  0028D6  A023               	btfss	(___fldiv@b+3)^0,0,c
  6140  0028D8  EF70  F014         	goto	u7501
  6141  0028DC  EF72  F014         	goto	u7500
  6142  0028E0                     u7501:
  6143  0028E0  EF89  F014         	goto	l10047
  6144  0028E4                     u7500:
  6145  0028E4  C020  F028         	movff	___fldiv@b,??___fldiv
  6146  0028E8  C021  F029         	movff	___fldiv@b+1,??___fldiv+1
  6147  0028EC  C022  F02A         	movff	___fldiv@b+2,??___fldiv+2
  6148  0028F0  C023  F02B         	movff	___fldiv@b+3,??___fldiv+3
  6149  0028F4  342B               	rlcf	(??___fldiv+3)^0,w,c
  6150  0028F6  322B               	rrcf	(??___fldiv+3)^0,f,c
  6151  0028F8  322A               	rrcf	(??___fldiv+2)^0,f,c
  6152  0028FA  3229               	rrcf	(??___fldiv+1)^0,f,c
  6153  0028FC  3228               	rrcf	??___fldiv^0,f,c
  6154  0028FE  C028  F020         	movff	??___fldiv,___fldiv@b
  6155  002902  C029  F021         	movff	??___fldiv+1,___fldiv@b+1
  6156  002906  C02A  F022         	movff	??___fldiv+2,___fldiv@b+2
  6157  00290A  C02B  F023         	movff	??___fldiv+3,___fldiv@b+3
  6158  00290E  4A31               	infsnz	___fldiv@new_exp^0,f,c
  6159  002910  2A32               	incf	(___fldiv@new_exp+1)^0,f,c
  6160  002912                     l10047:
  6161  002912  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6162  002914  EF94  F014         	goto	u7511
  6163  002918  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  6164  00291A  E108               	bnz	u7510
  6165  00291C  2831               	incf	___fldiv@new_exp^0,w,c
  6166  00291E  A0D8               	btfss	status,0,c
  6167  002920  EF94  F014         	goto	u7511
  6168  002924  EF96  F014         	goto	u7510
  6169  002928                     u7511:
  6170  002928  EFA1  F014         	goto	l10051
  6171  00292C                     u7510:
  6172  00292C  0E00               	movlw	0
  6173  00292E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  6174  002930  6831               	setf	___fldiv@new_exp^0,c
  6175  002932  0E00               	movlw	0
  6176  002934  6E20               	movwf	___fldiv@b^0,c
  6177  002936  0E00               	movlw	0
  6178  002938  6E21               	movwf	(___fldiv@b+1)^0,c
  6179  00293A  0E00               	movlw	0
  6180  00293C  6E22               	movwf	(___fldiv@b+2)^0,c
  6181  00293E  0E00               	movlw	0
  6182  002940  6E23               	movwf	(___fldiv@b+3)^0,c
  6183  002942                     l10051:
  6184  002942  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6185  002944  EFAE  F014         	goto	u7520
  6186  002948  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  6187  00294A  E106               	bnz	u7521
  6188  00294C  0431               	decf	___fldiv@new_exp^0,w,c
  6189  00294E  B0D8               	btfsc	status,0,c
  6190  002950  EFAC  F014         	goto	u7521
  6191  002954  EFAE  F014         	goto	u7520
  6192  002958                     u7521:
  6193  002958  EFBC  F014         	goto	l10055
  6194  00295C                     u7520:
  6195  00295C  0E00               	movlw	0
  6196  00295E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  6197  002960  0E00               	movlw	0
  6198  002962  6E31               	movwf	___fldiv@new_exp^0,c
  6199  002964  0E00               	movlw	0
  6200  002966  6E20               	movwf	___fldiv@b^0,c
  6201  002968  0E00               	movlw	0
  6202  00296A  6E21               	movwf	(___fldiv@b+1)^0,c
  6203  00296C  0E00               	movlw	0
  6204  00296E  6E22               	movwf	(___fldiv@b+2)^0,c
  6205  002970  0E00               	movlw	0
  6206  002972  6E23               	movwf	(___fldiv@b+3)^0,c
  6207  002974  0E00               	movlw	0
  6208  002976  6E30               	movwf	___fldiv@sign^0,c
  6209  002978                     l10055:
  6210  002978  C031  F037         	movff	___fldiv@new_exp,___fldiv@bexp
  6211  00297C  A037               	btfss	___fldiv@bexp^0,0,c
  6212  00297E  EFC3  F014         	goto	u7531
  6213  002982  EFC5  F014         	goto	u7530
  6214  002986                     u7531:
  6215  002986  EFC8  F014         	goto	l10061
  6216  00298A                     u7530:
  6217  00298A  8E22               	bsf	(___fldiv@b+2)^0,7,c
  6218  00298C  EFC9  F014         	goto	l10063
  6219  002990                     l10061:
  6220  002990  9E22               	bcf	(___fldiv@b+2)^0,7,c
  6221  002992                     l10063:
  6222  002992  90D8               	bcf	status,0,c
  6223  002994  3037               	rrcf	___fldiv@bexp^0,w,c
  6224  002996  6E23               	movwf	(___fldiv@b+3)^0,c
  6225  002998  EF7F  F013         	goto	l9977
  6226  00299C                     l1389:
  6227  00299C  0012               	return		;funcret
  6228  00299E                     __end_of___fldiv:
  6229                           	callstack 0
  6230                           
  6231 ;; *************** function _GameParameters_setY *****************
  6232 ;; Defined at:
  6233 ;;		line 48 in file "class/gameParameters.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  s               2   17[COMRAM] PTR struct GameParameter
  6236 ;;		 -> g1(239), 
  6237 ;;  value           2   19[COMRAM] unsigned short 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6249 ;;      Params:         4       0       0       0       0       0       0
  6250 ;;      Locals:         0       0       0       0       0       0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0
  6252 ;;      Totals:         4       0       0       0       0       0       0
  6253 ;;Total ram usage:        4 bytes
  6254 ;; Hardware stack levels used: 1
  6255 ;; Hardware stack levels required when called: 4
  6256 ;; This function calls:
  6257 ;;		Nothing
  6258 ;; This function is called by:
  6259 ;;		_touchScreenController
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text18
  6264  006322                     __ptext18:
  6265                           	callstack 0
  6266  006322                     _GameParameters_setY:
  6267                           	callstack 23
  6268  006322                     
  6269                           ;class/gameParameters.c: 48: void GameParameters_setY(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 49: {;class/gameParameters.c: 50:     s->y=value;
  6270  006322  EE20 F006          	lfsr	2,6
  6271  006326  5012               	movf	GameParameters_setY@s^0,w,c
  6272  006328  26D9               	addwf	fsr2l,f,c
  6273  00632A  5013               	movf	(GameParameters_setY@s+1)^0,w,c
  6274  00632C  22DA               	addwfc	fsr2h,f,c
  6275  00632E  C014  FFDE         	movff	GameParameters_setY@value,postinc2
  6276  006332  C015  FFDD         	movff	GameParameters_setY@value+1,postdec2
  6277  006336  0012               	return		;funcret
  6278  006338                     __end_of_GameParameters_setY:
  6279                           	callstack 0
  6280                           
  6281 ;; *************** function _GameParameters_setX *****************
  6282 ;; Defined at:
  6283 ;;		line 44 in file "class/gameParameters.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  s               2   17[COMRAM] PTR struct GameParameter
  6286 ;;		 -> g1(239), 
  6287 ;;  value           2   19[COMRAM] unsigned short 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6299 ;;      Params:         4       0       0       0       0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0
  6302 ;;      Totals:         4       0       0       0       0       0       0
  6303 ;;Total ram usage:        4 bytes
  6304 ;; Hardware stack levels used: 1
  6305 ;; Hardware stack levels required when called: 4
  6306 ;; This function calls:
  6307 ;;		Nothing
  6308 ;; This function is called by:
  6309 ;;		_touchScreenController
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           	psect	text19
  6314  006338                     __ptext19:
  6315                           	callstack 0
  6316  006338                     _GameParameters_setX:
  6317                           	callstack 23
  6318  006338                     
  6319                           ;class/gameParameters.c: 44: void GameParameters_setX(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 45: {;class/gameParameters.c: 46:     s->x=value;
  6320  006338  EE20 F004          	lfsr	2,4
  6321  00633C  5012               	movf	GameParameters_setX@s^0,w,c
  6322  00633E  26D9               	addwf	fsr2l,f,c
  6323  006340  5013               	movf	(GameParameters_setX@s+1)^0,w,c
  6324  006342  22DA               	addwfc	fsr2h,f,c
  6325  006344  C014  FFDE         	movff	GameParameters_setX@value,postinc2
  6326  006348  C015  FFDD         	movff	GameParameters_setX@value+1,postdec2
  6327  00634C  0012               	return		;funcret
  6328  00634E                     __end_of_GameParameters_setX:
  6329                           	callstack 0
  6330                           
  6331 ;; *************** function _sleepSM *****************
  6332 ;; Defined at:
  6333 ;;		line 19 in file "stateMachine/sleepSM.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  ev              1    wreg     unsigned char 
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;  ev              1    0[COMRAM] unsigned char 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      void 
  6340 ;; Registers used:
  6341 ;;		wreg
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6347 ;;      Params:         0       0       0       0       0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0
  6349 ;;      Temps:          0       0       0       0       0       0       0
  6350 ;;      Totals:         0       0       0       0       0       0       0
  6351 ;;Total ram usage:        0 bytes
  6352 ;; Hardware stack levels used: 1
  6353 ;; Hardware stack levels required when called: 4
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_Factory_exec
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text20
  6362  0063C2                     __ptext20:
  6363                           	callstack 0
  6364  0063C2                     _sleepSM:
  6365                           	callstack 25
  6366  0063C2  0012               	return		;funcret
  6367  0063C4                     __end_of_sleepSM:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function _gameControllerSM *****************
  6371 ;; Defined at:
  6372 ;;		line 22 in file "stateMachine/gameController.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  ev              1    wreg     unsigned char 
  6375 ;;  g               2   59[COMRAM] PTR struct GameParameter
  6376 ;;		 -> g1(239), 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  ev              1   63[COMRAM] unsigned char 
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  1    wreg      void 
  6381 ;; Registers used:
  6382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6388 ;;      Params:         2       0       0       0       0       0       0
  6389 ;;      Locals:         1       0       0       0       0       0       0
  6390 ;;      Temps:          2       0       0       0       0       0       0
  6391 ;;      Totals:         5       0       0       0       0       0       0
  6392 ;;Total ram usage:        5 bytes
  6393 ;; Hardware stack levels used: 1
  6394 ;; Hardware stack levels required when called: 9
  6395 ;; This function calls:
  6396 ;;		_XF_scheduleTimer
  6397 ;;		_gameControllerController
  6398 ;; This function is called by:
  6399 ;;		_Factory_exec
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           	psect	text21
  6404  004E60                     __ptext21:
  6405                           	callstack 0
  6406  004E60                     _gameControllerSM:
  6407                           	callstack 20
  6408                           
  6409                           ;incstack = 0
  6410                           ;gameControllerSM@ev stored from wreg
  6411  004E60  6E40               	movwf	gameControllerSM@ev^0,c
  6412  004E62                     
  6413                           ;stateMachine/gameController.c: 22: void gameControllerSM(Event ev,GameParameters* g);st
      +                          ateMachine/gameController.c: 23: {;stateMachine/gameController.c: 24:    switch(gameStat
      +                          eMachine)
  6414  004E62  EF7C  F027         	goto	l10399
  6415  004E66                     l10369:
  6416                           
  6417                           ;stateMachine/gameController.c: 28:             gameControllerController(g,NULLEVENT);
  6418  004E66  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6419  004E6A  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6420  004E6E  0E00               	movlw	0
  6421  004E70  6E39               	movwf	gameControllerController@ev^0,c
  6422  004E72  ECCF  F014         	call	_gameControllerController	;wreg free
  6423  004E76                     
  6424                           ;stateMachine/gameController.c: 29:             if(ev==evParameters)
  6425  004E76  0E07               	movlw	7
  6426  004E78  1840               	xorwf	gameControllerSM@ev^0,w,c
  6427  004E7A  A4D8               	btfss	status,2,c
  6428  004E7C  EF42  F027         	goto	u7881
  6429  004E80  EF44  F027         	goto	u7880
  6430  004E84                     u7881:
  6431  004E84  EF46  F027         	goto	l10375
  6432  004E88                     u7880:
  6433  004E88                     
  6434                           ;stateMachine/gameController.c: 30:             {;stateMachine/gameController.c: 31:    
      +                                       gameStateMachine=PARAMETERS;
  6435  004E88  0E01               	movlw	1
  6436  004E8A  6E4D               	movwf	_gameStateMachine^0,c
  6437  004E8C                     l10375:
  6438                           
  6439                           ;stateMachine/gameController.c: 33:             if(ev==evOnePlayer)
  6440  004E8C  0E05               	movlw	5
  6441  004E8E  1840               	xorwf	gameControllerSM@ev^0,w,c
  6442  004E90  A4D8               	btfss	status,2,c
  6443  004E92  EF4D  F027         	goto	u7891
  6444  004E96  EF4F  F027         	goto	u7890
  6445  004E9A                     u7891:
  6446  004E9A  EF9D  F027         	goto	l624
  6447  004E9E                     u7890:
  6448  004E9E                     
  6449                           ;stateMachine/gameController.c: 34:             {;stateMachine/gameController.c: 35:    
      +                                       gameStateMachine=LOCAL;
  6450  004E9E  0E02               	movlw	2
  6451  004EA0  6E4D               	movwf	_gameStateMachine^0,c
  6452  004EA2                     
  6453                           ;stateMachine/gameController.c: 36:                 XF_scheduleTimer(5,evGameUpdate,1);
  6454  004EA2  0E00               	movlw	0
  6455  004EA4  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  6456  004EA6  0E05               	movlw	5
  6457  004EA8  6E13               	movwf	XF_scheduleTimer@tm^0,c
  6458  004EAA  0E0A               	movlw	10
  6459  004EAC  6E15               	movwf	XF_scheduleTimer@ev^0,c
  6460  004EAE  0E01               	movlw	1
  6461  004EB0  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  6462  004EB2  EC08  F02E         	call	_XF_scheduleTimer	;wreg free
  6463  004EB6  EF9D  F027         	goto	l624
  6464  004EBA                     l10387:
  6465                           
  6466                           ;stateMachine/gameController.c: 45:             gameControllerController(g,NULLEVENT);
  6467  004EBA  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6468  004EBE  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6469  004EC2  0E00               	movlw	0
  6470  004EC4  6E39               	movwf	gameControllerController@ev^0,c
  6471  004EC6  ECCF  F014         	call	_gameControllerController	;wreg free
  6472  004ECA                     
  6473                           ;stateMachine/gameController.c: 46:             if(ev==evLeaveParam)
  6474  004ECA  0E08               	movlw	8
  6475  004ECC  1840               	xorwf	gameControllerSM@ev^0,w,c
  6476  004ECE  A4D8               	btfss	status,2,c
  6477  004ED0  EF6C  F027         	goto	u7901
  6478  004ED4  EF6E  F027         	goto	u7900
  6479  004ED8                     u7901:
  6480  004ED8  EF9D  F027         	goto	l624
  6481  004EDC                     u7900:
  6482  004EDC                     
  6483                           ;stateMachine/gameController.c: 47:             {;stateMachine/gameController.c: 48:    
      +                                       gameStateMachine=NOGAME;
  6484  004EDC  0E00               	movlw	0
  6485  004EDE  6E4D               	movwf	_gameStateMachine^0,c
  6486  004EE0  EF9D  F027         	goto	l624
  6487  004EE4                     l10393:
  6488                           
  6489                           ;stateMachine/gameController.c: 52:             gameControllerController(g,ev);
  6490  004EE4  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6491  004EE8  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6492  004EEC  C040  F039         	movff	gameControllerSM@ev,gameControllerController@ev
  6493  004EF0  ECCF  F014         	call	_gameControllerController	;wreg free
  6494                           
  6495                           ;stateMachine/gameController.c: 53:             break;
  6496  004EF4  EF9D  F027         	goto	l624
  6497  004EF8                     l10399:
  6498  004EF8  504D               	movf	_gameStateMachine^0,w,c
  6499  004EFA  6E3E               	movwf	??_gameControllerSM^0,c
  6500  004EFC  6A3F               	clrf	(??_gameControllerSM+1)^0,c
  6501                           
  6502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6503                           ; Switch size 1, requested type "simple"
  6504                           ; Number of cases is 1, Range of values is 0 to 0
  6505                           ; switch strategies available:
  6506                           ; Name         Instructions Cycles
  6507                           ; simple_byte            4     3 (average)
  6508                           ;	Chosen strategy is simple_byte
  6509  004EFE  503F               	movf	(??_gameControllerSM+1)^0,w,c
  6510  004F00  0A00               	xorlw	0	; case 0
  6511  004F02  B4D8               	btfsc	status,2,c
  6512  004F04  EF86  F027         	goto	l10671
  6513  004F08  EF9D  F027         	goto	l624
  6514  004F0C                     l10671:
  6515                           
  6516                           ; Switch size 1, requested type "simple"
  6517                           ; Number of cases is 5, Range of values is 0 to 4
  6518                           ; switch strategies available:
  6519                           ; Name         Instructions Cycles
  6520                           ; simple_byte           16     9 (average)
  6521                           ;	Chosen strategy is simple_byte
  6522  004F0C  503E               	movf	??_gameControllerSM^0,w,c
  6523  004F0E  0A00               	xorlw	0	; case 0
  6524  004F10  B4D8               	btfsc	status,2,c
  6525  004F12  EF33  F027         	goto	l10369
  6526  004F16  0A01               	xorlw	1	; case 1
  6527  004F18  B4D8               	btfsc	status,2,c
  6528  004F1A  EF5D  F027         	goto	l10387
  6529  004F1E  0A03               	xorlw	3	; case 2
  6530  004F20  B4D8               	btfsc	status,2,c
  6531  004F22  EF72  F027         	goto	l10393
  6532  004F26  0A01               	xorlw	1	; case 3
  6533  004F28  B4D8               	btfsc	status,2,c
  6534  004F2A  EF9D  F027         	goto	l624
  6535  004F2E  0A07               	xorlw	7	; case 4
  6536  004F30  B4D8               	btfsc	status,2,c
  6537  004F32  EF72  F027         	goto	l10393
  6538  004F36  EF9D  F027         	goto	l624
  6539  004F3A                     l624:
  6540  004F3A  0012               	return		;funcret
  6541  004F3C                     __end_of_gameControllerSM:
  6542                           	callstack 0
  6543                           
  6544 ;; *************** function _gameControllerController *****************
  6545 ;; Defined at:
  6546 ;;		line 68 in file "stateMachine/gameController.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  g               2   54[COMRAM] PTR struct GameParameter
  6549 ;;		 -> g1(239), 
  6550 ;;  ev              1   56[COMRAM] unsigned char 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;		None
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  1    wreg      void 
  6555 ;; Registers used:
  6556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6562 ;;      Params:         3       0       0       0       0       0       0
  6563 ;;      Locals:         0       0       0       0       0       0       0
  6564 ;;      Temps:          2       0       0       0       0       0       0
  6565 ;;      Totals:         5       0       0       0       0       0       0
  6566 ;;Total ram usage:        5 bytes
  6567 ;; Hardware stack levels used: 1
  6568 ;; Hardware stack levels required when called: 8
  6569 ;; This function calls:
  6570 ;;		_GameParameters_init
  6571 ;;		_GameParameters_resetPos
  6572 ;;		_LCD_InButton
  6573 ;;		_LCD_InSlider
  6574 ;;		_LCD_SliderUpdate
  6575 ;;		_XF_pushEvent
  6576 ;;		_XF_scheduleTimer
  6577 ;;		_backlightController
  6578 ;;		_mooveBall
  6579 ;;		_moovePaddle
  6580 ;; This function is called by:
  6581 ;;		_gameControllerInit
  6582 ;;		_gameControllerSM
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text22
  6587  00299E                     __ptext22:
  6588                           	callstack 0
  6589  00299E                     _gameControllerController:
  6590                           	callstack 19
  6591  00299E                     
  6592                           ;stateMachine/gameController.c: 68: void gameControllerController(GameParameters* g,Even
      +                          t ev);stateMachine/gameController.c: 69: {;stateMachine/gameController.c: 70:     switch
      +                          (gameStateMachine)
  6593  00299E  EF62  F016         	goto	l9927
  6594  0029A2                     l9883:
  6595                           
  6596                           ;stateMachine/gameController.c: 74:             if(LCD_InButton(&(g->btnParam),g->x,g->y
      +                          ))
  6597  0029A2  0E08               	movlw	8
  6598  0029A4  2437               	addwf	gameControllerController@g^0,w,c
  6599  0029A6  6E12               	movwf	LCD_InButton@button^0,c
  6600  0029A8  0E00               	movlw	0
  6601  0029AA  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6602  0029AC  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6603  0029AE  EE20 F004          	lfsr	2,4
  6604  0029B2  5037               	movf	gameControllerController@g^0,w,c
  6605  0029B4  26D9               	addwf	fsr2l,f,c
  6606  0029B6  5038               	movf	(gameControllerController@g+1)^0,w,c
  6607  0029B8  22DA               	addwfc	fsr2h,f,c
  6608  0029BA  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6609  0029BE  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6610  0029C2  EE20 F006          	lfsr	2,6
  6611  0029C6  5037               	movf	gameControllerController@g^0,w,c
  6612  0029C8  26D9               	addwf	fsr2l,f,c
  6613  0029CA  5038               	movf	(gameControllerController@g+1)^0,w,c
  6614  0029CC  22DA               	addwfc	fsr2h,f,c
  6615  0029CE  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6616  0029D2  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6617  0029D6  EC52  F026         	call	_LCD_InButton	;wreg free
  6618  0029DA  0900               	iorlw	0
  6619  0029DC  B4D8               	btfsc	status,2,c
  6620  0029DE  EFF3  F014         	goto	u7221
  6621  0029E2  EFF5  F014         	goto	u7220
  6622  0029E6                     u7221:
  6623  0029E6  EF00  F015         	goto	l629
  6624  0029EA                     u7220:
  6625  0029EA                     
  6626                           ;stateMachine/gameController.c: 75:             {;stateMachine/gameController.c: 76:    
      +                                       XF_pushEvent(evParameters,0);
  6627  0029EA  0E00               	movlw	0
  6628  0029EC  6E18               	movwf	XF_pushEvent@inISR^0,c
  6629  0029EE  0E07               	movlw	7
  6630  0029F0  EC7C  F02E         	call	_XF_pushEvent
  6631                           
  6632                           ;stateMachine/gameController.c: 77:                 GameParameters_resetPos(g);
  6633  0029F4  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6634  0029F8  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6635  0029FC  ECF7  F030         	call	_GameParameters_resetPos	;wreg free
  6636  002A00                     l629:
  6637                           
  6638                           ;stateMachine/gameController.c: 79:             if(LCD_InButton(&(g->btnOnePlayer),g->x,
      +                          g->y))
  6639  002A00  0E20               	movlw	32
  6640  002A02  2437               	addwf	gameControllerController@g^0,w,c
  6641  002A04  6E12               	movwf	LCD_InButton@button^0,c
  6642  002A06  0E00               	movlw	0
  6643  002A08  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6644  002A0A  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6645  002A0C  EE20 F004          	lfsr	2,4
  6646  002A10  5037               	movf	gameControllerController@g^0,w,c
  6647  002A12  26D9               	addwf	fsr2l,f,c
  6648  002A14  5038               	movf	(gameControllerController@g+1)^0,w,c
  6649  002A16  22DA               	addwfc	fsr2h,f,c
  6650  002A18  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6651  002A1C  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6652  002A20  EE20 F006          	lfsr	2,6
  6653  002A24  5037               	movf	gameControllerController@g^0,w,c
  6654  002A26  26D9               	addwf	fsr2l,f,c
  6655  002A28  5038               	movf	(gameControllerController@g+1)^0,w,c
  6656  002A2A  22DA               	addwfc	fsr2h,f,c
  6657  002A2C  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6658  002A30  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6659  002A34  EC52  F026         	call	_LCD_InButton	;wreg free
  6660  002A38  0900               	iorlw	0
  6661  002A3A  B4D8               	btfsc	status,2,c
  6662  002A3C  EF22  F015         	goto	u7231
  6663  002A40  EF24  F015         	goto	u7230
  6664  002A44                     u7231:
  6665  002A44  EF2F  F015         	goto	l630
  6666  002A48                     u7230:
  6667  002A48                     
  6668                           ;stateMachine/gameController.c: 80:             {;stateMachine/gameController.c: 81:    
      +                                       XF_pushEvent(evOnePlayer,0);
  6669  002A48  0E00               	movlw	0
  6670  002A4A  6E18               	movwf	XF_pushEvent@inISR^0,c
  6671  002A4C  0E05               	movlw	5
  6672  002A4E  EC7C  F02E         	call	_XF_pushEvent
  6673                           
  6674                           ;stateMachine/gameController.c: 82:                 GameParameters_resetPos(g);
  6675  002A52  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6676  002A56  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6677  002A5A  ECF7  F030         	call	_GameParameters_resetPos	;wreg free
  6678  002A5E                     l630:
  6679                           
  6680                           ;stateMachine/gameController.c: 84:             if(LCD_InButton(&(g->btnTwoPlayer),g->x,
      +                          g->y))
  6681  002A5E  0E38               	movlw	56
  6682  002A60  2437               	addwf	gameControllerController@g^0,w,c
  6683  002A62  6E12               	movwf	LCD_InButton@button^0,c
  6684  002A64  0E00               	movlw	0
  6685  002A66  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6686  002A68  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6687  002A6A  EE20 F004          	lfsr	2,4
  6688  002A6E  5037               	movf	gameControllerController@g^0,w,c
  6689  002A70  26D9               	addwf	fsr2l,f,c
  6690  002A72  5038               	movf	(gameControllerController@g+1)^0,w,c
  6691  002A74  22DA               	addwfc	fsr2h,f,c
  6692  002A76  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6693  002A7A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6694  002A7E  EE20 F006          	lfsr	2,6
  6695  002A82  5037               	movf	gameControllerController@g^0,w,c
  6696  002A84  26D9               	addwf	fsr2l,f,c
  6697  002A86  5038               	movf	(gameControllerController@g+1)^0,w,c
  6698  002A88  22DA               	addwfc	fsr2h,f,c
  6699  002A8A  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6700  002A8E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6701  002A92  EC52  F026         	call	_LCD_InButton	;wreg free
  6702  002A96  0900               	iorlw	0
  6703  002A98  B4D8               	btfsc	status,2,c
  6704  002A9A  EF51  F015         	goto	u7241
  6705  002A9E  EF53  F015         	goto	u7240
  6706  002AA2                     u7241:
  6707  002AA2  EF83  F016         	goto	l646
  6708  002AA6                     u7240:
  6709  002AA6                     
  6710                           ;stateMachine/gameController.c: 85:             {;stateMachine/gameController.c: 86:    
      +                                       XF_pushEvent(evTwoPlayer,0);
  6711  002AA6  0E00               	movlw	0
  6712  002AA8  6E18               	movwf	XF_pushEvent@inISR^0,c
  6713  002AAA  0E06               	movlw	6
  6714  002AAC  EC7C  F02E         	call	_XF_pushEvent
  6715                           
  6716                           ;stateMachine/gameController.c: 87:                 GameParameters_resetPos(g);
  6717  002AB0  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6718  002AB4  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6719  002AB8  ECF7  F030         	call	_GameParameters_resetPos	;wreg free
  6720  002ABC  EF83  F016         	goto	l646
  6721  002AC0                     l9891:
  6722                           
  6723                           ;stateMachine/gameController.c: 92:             if(LCD_InSlider(&(g->sldParam),g->x,g->y
      +                          ))
  6724  002AC0  0EB0               	movlw	176
  6725  002AC2  2437               	addwf	gameControllerController@g^0,w,c
  6726  002AC4  6E12               	movwf	LCD_InSlider@slider^0,c
  6727  002AC6  0E00               	movlw	0
  6728  002AC8  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6729  002ACA  6E13               	movwf	(LCD_InSlider@slider+1)^0,c
  6730  002ACC  EE20 F004          	lfsr	2,4
  6731  002AD0  5037               	movf	gameControllerController@g^0,w,c
  6732  002AD2  26D9               	addwf	fsr2l,f,c
  6733  002AD4  5038               	movf	(gameControllerController@g+1)^0,w,c
  6734  002AD6  22DA               	addwfc	fsr2h,f,c
  6735  002AD8  CFDE F014          	movff	postinc2,LCD_InSlider@posX
  6736  002ADC  CFDD F015          	movff	postdec2,LCD_InSlider@posX+1
  6737  002AE0  EE20 F006          	lfsr	2,6
  6738  002AE4  5037               	movf	gameControllerController@g^0,w,c
  6739  002AE6  26D9               	addwf	fsr2l,f,c
  6740  002AE8  5038               	movf	(gameControllerController@g+1)^0,w,c
  6741  002AEA  22DA               	addwfc	fsr2h,f,c
  6742  002AEC  CFDE F016          	movff	postinc2,LCD_InSlider@posY
  6743  002AF0  CFDD F017          	movff	postdec2,LCD_InSlider@posY+1
  6744  002AF4  ECC1  F026         	call	_LCD_InSlider	;wreg free
  6745  002AF8  0900               	iorlw	0
  6746  002AFA  B4D8               	btfsc	status,2,c
  6747  002AFC  EF82  F015         	goto	u7251
  6748  002B00  EF84  F015         	goto	u7250
  6749  002B04                     u7251:
  6750  002B04  EF98  F015         	goto	l9897
  6751  002B08                     u7250:
  6752  002B08                     
  6753                           ;stateMachine/gameController.c: 93:             {;stateMachine/gameController.c: 94:    
      +                                       backlightController(g);
  6754  002B08  C037  F018         	movff	gameControllerController@g,backlightController@g
  6755  002B0C  C038  F019         	movff	gameControllerController@g+1,backlightController@g+1
  6756  002B10  EC9C  F00C         	call	_backlightController	;wreg free
  6757                           
  6758                           ;stateMachine/gameController.c: 95:                 LCD_SliderUpdate(&(g->sldParam));
  6759  002B14  0EB0               	movlw	176
  6760  002B16  2437               	addwf	gameControllerController@g^0,w,c
  6761  002B18  6E27               	movwf	LCD_SliderUpdate@slider^0,c
  6762  002B1A  0E00               	movlw	0
  6763  002B1C  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6764  002B1E  6E28               	movwf	(LCD_SliderUpdate@slider+1)^0,c
  6765  002B20  EC31  F00A         	call	_LCD_SliderUpdate	;wreg free
  6766  002B24                     
  6767                           ;stateMachine/gameController.c: 96:                 GameParameters_resetPos(g);
  6768  002B24  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6769  002B28  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6770  002B2C  ECF7  F030         	call	_GameParameters_resetPos	;wreg free
  6771  002B30                     l9897:
  6772                           
  6773                           ;stateMachine/gameController.c: 99:             if(LCD_InButton(&(g->btnLeaveParam),g->x
      +                          ,g->y))
  6774  002B30  0E50               	movlw	80
  6775  002B32  2437               	addwf	gameControllerController@g^0,w,c
  6776  002B34  6E12               	movwf	LCD_InButton@button^0,c
  6777  002B36  0E00               	movlw	0
  6778  002B38  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6779  002B3A  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6780  002B3C  EE20 F004          	lfsr	2,4
  6781  002B40  5037               	movf	gameControllerController@g^0,w,c
  6782  002B42  26D9               	addwf	fsr2l,f,c
  6783  002B44  5038               	movf	(gameControllerController@g+1)^0,w,c
  6784  002B46  22DA               	addwfc	fsr2h,f,c
  6785  002B48  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6786  002B4C  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6787  002B50  EE20 F006          	lfsr	2,6
  6788  002B54  5037               	movf	gameControllerController@g^0,w,c
  6789  002B56  26D9               	addwf	fsr2l,f,c
  6790  002B58  5038               	movf	(gameControllerController@g+1)^0,w,c
  6791  002B5A  22DA               	addwfc	fsr2h,f,c
  6792  002B5C  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6793  002B60  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6794  002B64  EC52  F026         	call	_LCD_InButton	;wreg free
  6795  002B68  0900               	iorlw	0
  6796  002B6A  B4D8               	btfsc	status,2,c
  6797  002B6C  EFBA  F015         	goto	u7261
  6798  002B70  EFBC  F015         	goto	u7260
  6799  002B74                     u7261:
  6800  002B74  EF83  F016         	goto	l646
  6801  002B78                     u7260:
  6802  002B78                     
  6803                           ;stateMachine/gameController.c: 100:             {;stateMachine/gameController.c: 101:  
      +                                         XF_pushEvent(evLeaveParam,0);
  6804  002B78  0E00               	movlw	0
  6805  002B7A  6E18               	movwf	XF_pushEvent@inISR^0,c
  6806  002B7C  0E08               	movlw	8
  6807  002B7E  EC7C  F02E         	call	_XF_pushEvent
  6808                           
  6809                           ;stateMachine/gameController.c: 102:                 GameParameters_resetPos(g);
  6810  002B82  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6811  002B86  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6812  002B8A  ECF7  F030         	call	_GameParameters_resetPos	;wreg free
  6813  002B8E  EF83  F016         	goto	l646
  6814  002B92                     l9901:
  6815                           
  6816                           ;stateMachine/gameController.c: 106:             if (ev==evTimerPos)
  6817  002B92  0E04               	movlw	4
  6818  002B94  1839               	xorwf	gameControllerController@ev^0,w,c
  6819  002B96  A4D8               	btfss	status,2,c
  6820  002B98  EFD0  F015         	goto	u7271
  6821  002B9C  EFD2  F015         	goto	u7270
  6822  002BA0                     u7271:
  6823  002BA0  EFDA  F015         	goto	l9905
  6824  002BA4                     u7270:
  6825  002BA4                     
  6826                           ;stateMachine/gameController.c: 107:             {;stateMachine/gameController.c: 109:  
      +                                         moovePaddle(g);
  6827  002BA4  C037  F01C         	movff	gameControllerController@g,moovePaddle@g
  6828  002BA8  C038  F01D         	movff	gameControllerController@g+1,moovePaddle@g+1
  6829  002BAC  EC61  F025         	call	_moovePaddle	;wreg free
  6830                           
  6831                           ;stateMachine/gameController.c: 111:             }
  6832  002BB0  EF83  F016         	goto	l646
  6833  002BB4                     l9905:
  6834  002BB4  0E0A               	movlw	10
  6835  002BB6  1839               	xorwf	gameControllerController@ev^0,w,c
  6836  002BB8  A4D8               	btfss	status,2,c
  6837  002BBA  EFE1  F015         	goto	u7281
  6838  002BBE  EFE3  F015         	goto	u7280
  6839  002BC2                     u7281:
  6840  002BC2  EF83  F016         	goto	l646
  6841  002BC6                     u7280:
  6842  002BC6                     
  6843                           ;stateMachine/gameController.c: 113:             {;stateMachine/gameController.c: 115:  
      +                                         mooveBall(g);
  6844  002BC6  C037  F025         	movff	gameControllerController@g,mooveBall@g
  6845  002BCA  C038  F026         	movff	gameControllerController@g+1,mooveBall@g+1
  6846  002BCE  EC20  F031         	call	_mooveBall	;wreg free
  6847  002BD2                     
  6848                           ;stateMachine/gameController.c: 118:                 if(g->b.x+50>=239)
  6849  002BD2  EE20 F0C9          	lfsr	2,201
  6850  002BD6  5037               	movf	gameControllerController@g^0,w,c
  6851  002BD8  26D9               	addwf	fsr2l,f,c
  6852  002BDA  5038               	movf	(gameControllerController@g+1)^0,w,c
  6853  002BDC  22DA               	addwfc	fsr2h,f,c
  6854  002BDE  CFDE F03A          	movff	postinc2,??_gameControllerController
  6855  002BE2  CFDD F03B          	movff	postdec2,??_gameControllerController+1
  6856  002BE6  0E32               	movlw	50
  6857  002BE8  263A               	addwf	??_gameControllerController^0,f,c
  6858  002BEA  0E00               	movlw	0
  6859  002BEC  223B               	addwfc	(??_gameControllerController+1)^0,f,c
  6860  002BEE  503B               	movf	(??_gameControllerController+1)^0,w,c
  6861  002BF0  E109               	bnz	u7290
  6862  002BF2  0EEF               	movlw	239
  6863  002BF4  5C3A               	subwf	??_gameControllerController^0,w,c
  6864  002BF6  A0D8               	btfss	status,0,c
  6865  002BF8  EF00  F016         	goto	u7291
  6866  002BFC  EF02  F016         	goto	u7290
  6867  002C00                     u7291:
  6868  002C00  EF0E  F016         	goto	l9913
  6869  002C04                     u7290:
  6870  002C04                     
  6871                           ;stateMachine/gameController.c: 119:                 {;stateMachine/gameController.c: 12
      +                          0:                     g->p2.x=239-50;
  6872  002C04  EE20 F0DF          	lfsr	2,223
  6873  002C08  5037               	movf	gameControllerController@g^0,w,c
  6874  002C0A  26D9               	addwf	fsr2l,f,c
  6875  002C0C  5038               	movf	(gameControllerController@g+1)^0,w,c
  6876  002C0E  22DA               	addwfc	fsr2h,f,c
  6877  002C10  0EBD               	movlw	189
  6878  002C12  6EDE               	movwf	postinc2,c
  6879  002C14  0E00               	movlw	0
  6880  002C16  6EDD               	movwf	postdec2,c
  6881                           
  6882                           ;stateMachine/gameController.c: 121:                 }
  6883  002C18  EF1E  F016         	goto	l9915
  6884  002C1C                     l9913:
  6885                           
  6886                           ;stateMachine/gameController.c: 123:                 {;stateMachine/gameController.c: 12
      +                          4:                     g->p2.x=g->b.x;
  6887  002C1C  EE20 F0C9          	lfsr	2,201
  6888  002C20  5037               	movf	gameControllerController@g^0,w,c
  6889  002C22  26D9               	addwf	fsr2l,f,c
  6890  002C24  5038               	movf	(gameControllerController@g+1)^0,w,c
  6891  002C26  22DA               	addwfc	fsr2h,f,c
  6892  002C28  EE10 F0DF          	lfsr	1,223
  6893  002C2C  5037               	movf	gameControllerController@g^0,w,c
  6894  002C2E  26E1               	addwf	fsr1l,f,c
  6895  002C30  5038               	movf	(gameControllerController@g+1)^0,w,c
  6896  002C32  22E2               	addwfc	fsr1h,f,c
  6897  002C34  CFDE FFE6          	movff	postinc2,postinc1
  6898  002C38  CFDD FFE5          	movff	postdec2,postdec1
  6899  002C3C                     l9915:
  6900                           
  6901                           ;stateMachine/gameController.c: 126:                 XF_pushEvent(evRedrawPaddle2,0);
  6902  002C3C  0E00               	movlw	0
  6903  002C3E  6E18               	movwf	XF_pushEvent@inISR^0,c
  6904  002C40  0E0C               	movlw	12
  6905  002C42  EC7C  F02E         	call	_XF_pushEvent
  6906  002C46                     
  6907                           ;stateMachine/gameController.c: 127:                 XF_scheduleTimer(5,evGameUpdate,1);
  6908  002C46  0E00               	movlw	0
  6909  002C48  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  6910  002C4A  0E05               	movlw	5
  6911  002C4C  6E13               	movwf	XF_scheduleTimer@tm^0,c
  6912  002C4E  0E0A               	movlw	10
  6913  002C50  6E15               	movwf	XF_scheduleTimer@ev^0,c
  6914  002C52  0E01               	movlw	1
  6915  002C54  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  6916  002C56  EC08  F02E         	call	_XF_scheduleTimer	;wreg free
  6917  002C5A  EF83  F016         	goto	l646
  6918  002C5E                     l9919:
  6919                           
  6920                           ;stateMachine/gameController.c: 133:             if(LCD_InButton(&(g->btnNewGame),g->x,g
      +                          ->y))
  6921  002C5E  0E80               	movlw	128
  6922  002C60  2437               	addwf	gameControllerController@g^0,w,c
  6923  002C62  6E12               	movwf	LCD_InButton@button^0,c
  6924  002C64  0E00               	movlw	0
  6925  002C66  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6926  002C68  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6927  002C6A  EE20 F004          	lfsr	2,4
  6928  002C6E  5037               	movf	gameControllerController@g^0,w,c
  6929  002C70  26D9               	addwf	fsr2l,f,c
  6930  002C72  5038               	movf	(gameControllerController@g+1)^0,w,c
  6931  002C74  22DA               	addwfc	fsr2h,f,c
  6932  002C76  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6933  002C7A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6934  002C7E  EE20 F006          	lfsr	2,6
  6935  002C82  5037               	movf	gameControllerController@g^0,w,c
  6936  002C84  26D9               	addwf	fsr2l,f,c
  6937  002C86  5038               	movf	(gameControllerController@g+1)^0,w,c
  6938  002C88  22DA               	addwfc	fsr2h,f,c
  6939  002C8A  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6940  002C8E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6941  002C92  EC52  F026         	call	_LCD_InButton	;wreg free
  6942  002C96  0900               	iorlw	0
  6943  002C98  B4D8               	btfsc	status,2,c
  6944  002C9A  EF51  F016         	goto	u7301
  6945  002C9E  EF53  F016         	goto	u7300
  6946  002CA2                     u7301:
  6947  002CA2  EF83  F016         	goto	l646
  6948  002CA6                     u7300:
  6949  002CA6                     
  6950                           ;stateMachine/gameController.c: 134:             {;stateMachine/gameController.c: 136:  
      +                                         GameParameters_init(g);
  6951  002CA6  C037  F02B         	movff	gameControllerController@g,GameParameters_init@s
  6952  002CAA  C038  F02C         	movff	gameControllerController@g+1,GameParameters_init@s+1
  6953  002CAE  EC10  F011         	call	_GameParameters_init	;wreg free
  6954                           
  6955                           ;stateMachine/gameController.c: 137:                 XF_pushEvent(evNewGame,0);
  6956  002CB2  0E00               	movlw	0
  6957  002CB4  6E18               	movwf	XF_pushEvent@inISR^0,c
  6958  002CB6  0E0F               	movlw	15
  6959  002CB8  EC7C  F02E         	call	_XF_pushEvent
  6960  002CBC                     
  6961                           ;stateMachine/gameController.c: 138:                 gameStateMachine=NOGAME;
  6962  002CBC  0E00               	movlw	0
  6963  002CBE  6E4D               	movwf	_gameStateMachine^0,c
  6964  002CC0  EF83  F016         	goto	l646
  6965  002CC4                     l9927:
  6966  002CC4  504D               	movf	_gameStateMachine^0,w,c
  6967  002CC6  6E3A               	movwf	??_gameControllerController^0,c
  6968  002CC8  6A3B               	clrf	(??_gameControllerController+1)^0,c
  6969                           
  6970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6971                           ; Switch size 1, requested type "simple"
  6972                           ; Number of cases is 1, Range of values is 0 to 0
  6973                           ; switch strategies available:
  6974                           ; Name         Instructions Cycles
  6975                           ; simple_byte            4     3 (average)
  6976                           ;	Chosen strategy is simple_byte
  6977  002CCA  503B               	movf	(??_gameControllerController+1)^0,w,c
  6978  002CCC  0A00               	xorlw	0	; case 0
  6979  002CCE  B4D8               	btfsc	status,2,c
  6980  002CD0  EF6C  F016         	goto	l10673
  6981  002CD4  EF83  F016         	goto	l646
  6982  002CD8                     l10673:
  6983                           
  6984                           ; Switch size 1, requested type "simple"
  6985                           ; Number of cases is 5, Range of values is 0 to 4
  6986                           ; switch strategies available:
  6987                           ; Name         Instructions Cycles
  6988                           ; simple_byte           16     9 (average)
  6989                           ;	Chosen strategy is simple_byte
  6990  002CD8  503A               	movf	??_gameControllerController^0,w,c
  6991  002CDA  0A00               	xorlw	0	; case 0
  6992  002CDC  B4D8               	btfsc	status,2,c
  6993  002CDE  EFD1  F014         	goto	l9883
  6994  002CE2  0A01               	xorlw	1	; case 1
  6995  002CE4  B4D8               	btfsc	status,2,c
  6996  002CE6  EF60  F015         	goto	l9891
  6997  002CEA  0A03               	xorlw	3	; case 2
  6998  002CEC  B4D8               	btfsc	status,2,c
  6999  002CEE  EFC9  F015         	goto	l9901
  7000  002CF2  0A01               	xorlw	1	; case 3
  7001  002CF4  B4D8               	btfsc	status,2,c
  7002  002CF6  EF83  F016         	goto	l646
  7003  002CFA  0A07               	xorlw	7	; case 4
  7004  002CFC  B4D8               	btfsc	status,2,c
  7005  002CFE  EF2F  F016         	goto	l9919
  7006  002D02  EF83  F016         	goto	l646
  7007  002D06                     l646:
  7008  002D06  0012               	return		;funcret
  7009  002D08                     __end_of_gameControllerController:
  7010                           	callstack 0
  7011                           
  7012 ;; *************** function _moovePaddle *****************
  7013 ;; Defined at:
  7014 ;;		line 145 in file "stateMachine/gameController.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  g               2   27[COMRAM] PTR struct GameParameter
  7017 ;;		 -> g1(239), 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;		None
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  1    wreg      void 
  7022 ;; Registers used:
  7023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7029 ;;      Params:         2       0       0       0       0       0       0
  7030 ;;      Locals:         0       0       0       0       0       0       0
  7031 ;;      Temps:          0       0       0       0       0       0       0
  7032 ;;      Totals:         2       0       0       0       0       0       0
  7033 ;;Total ram usage:        2 bytes
  7034 ;; Hardware stack levels used: 1
  7035 ;; Hardware stack levels required when called: 6
  7036 ;; This function calls:
  7037 ;;		_GameParameters_resetPos
  7038 ;;		_LCD_InButton
  7039 ;;		_Paddle_addX
  7040 ;;		_XF_pushEvent
  7041 ;; This function is called by:
  7042 ;;		_gameControllerController
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text23
  7047  004AC2                     __ptext23:
  7048                           	callstack 0
  7049  004AC2                     _moovePaddle:
  7050                           	callstack 20
  7051  004AC2                     
  7052                           ;stateMachine/gameController.c: 145: void moovePaddle(GameParameters* g);stateMachine/ga
      +                          meController.c: 146: {;stateMachine/gameController.c: 148:     if(LCD_InButton(&(g->btnL
      +                          eft),g->x,g->y))
  7053  004AC2  0E68               	movlw	104
  7054  004AC4  241C               	addwf	moovePaddle@g^0,w,c
  7055  004AC6  6E12               	movwf	LCD_InButton@button^0,c
  7056  004AC8  0E00               	movlw	0
  7057  004ACA  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7058  004ACC  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7059  004ACE  EE20 F004          	lfsr	2,4
  7060  004AD2  501C               	movf	moovePaddle@g^0,w,c
  7061  004AD4  26D9               	addwf	fsr2l,f,c
  7062  004AD6  501D               	movf	(moovePaddle@g+1)^0,w,c
  7063  004AD8  22DA               	addwfc	fsr2h,f,c
  7064  004ADA  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7065  004ADE  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7066  004AE2  EE20 F006          	lfsr	2,6
  7067  004AE6  501C               	movf	moovePaddle@g^0,w,c
  7068  004AE8  26D9               	addwf	fsr2l,f,c
  7069  004AEA  501D               	movf	(moovePaddle@g+1)^0,w,c
  7070  004AEC  22DA               	addwfc	fsr2h,f,c
  7071  004AEE  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7072  004AF2  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7073  004AF6  EC52  F026         	call	_LCD_InButton	;wreg free
  7074  004AFA  0900               	iorlw	0
  7075  004AFC  B4D8               	btfsc	status,2,c
  7076  004AFE  EF83  F025         	goto	u7141
  7077  004B02  EF85  F025         	goto	u7140
  7078  004B06                     u7141:
  7079  004B06  EF9B  F025         	goto	l649
  7080  004B0A                     u7140:
  7081  004B0A                     
  7082                           ;stateMachine/gameController.c: 149:     {;stateMachine/gameController.c: 150:         G
      +                          ameParameters_resetPos(g);
  7083  004B0A  C01C  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  7084  004B0E  C01D  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  7085  004B12  ECF7  F030         	call	_GameParameters_resetPos	;wreg free
  7086                           
  7087                           ;stateMachine/gameController.c: 151:         Paddle_addX(&g->p1,20,0);
  7088  004B16  0ED5               	movlw	213
  7089  004B18  241C               	addwf	moovePaddle@g^0,w,c
  7090  004B1A  6E12               	movwf	Paddle_addX@p^0,c
  7091  004B1C  0E00               	movlw	0
  7092  004B1E  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7093  004B20  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7094  004B22  0E00               	movlw	0
  7095  004B24  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7096  004B26  0E14               	movlw	20
  7097  004B28  6E14               	movwf	Paddle_addX@value^0,c
  7098  004B2A  0E00               	movlw	0
  7099  004B2C  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7100  004B2E  0E00               	movlw	0
  7101  004B30  6E16               	movwf	Paddle_addX@add^0,c
  7102  004B32  EC9E  F027         	call	_Paddle_addX	;wreg free
  7103  004B36                     l649:
  7104                           
  7105                           ;stateMachine/gameController.c: 154:     if(LCD_InButton(&(g->btnRight),g->x,g->y))
  7106  004B36  0E98               	movlw	152
  7107  004B38  241C               	addwf	moovePaddle@g^0,w,c
  7108  004B3A  6E12               	movwf	LCD_InButton@button^0,c
  7109  004B3C  0E00               	movlw	0
  7110  004B3E  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7111  004B40  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7112  004B42  EE20 F004          	lfsr	2,4
  7113  004B46  501C               	movf	moovePaddle@g^0,w,c
  7114  004B48  26D9               	addwf	fsr2l,f,c
  7115  004B4A  501D               	movf	(moovePaddle@g+1)^0,w,c
  7116  004B4C  22DA               	addwfc	fsr2h,f,c
  7117  004B4E  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7118  004B52  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7119  004B56  EE20 F006          	lfsr	2,6
  7120  004B5A  501C               	movf	moovePaddle@g^0,w,c
  7121  004B5C  26D9               	addwf	fsr2l,f,c
  7122  004B5E  501D               	movf	(moovePaddle@g+1)^0,w,c
  7123  004B60  22DA               	addwfc	fsr2h,f,c
  7124  004B62  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7125  004B66  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7126  004B6A  EC52  F026         	call	_LCD_InButton	;wreg free
  7127  004B6E  0900               	iorlw	0
  7128  004B70  B4D8               	btfsc	status,2,c
  7129  004B72  EFBD  F025         	goto	u7151
  7130  004B76  EFBF  F025         	goto	u7150
  7131  004B7A                     u7151:
  7132  004B7A  EFD5  F025         	goto	l650
  7133  004B7E                     u7150:
  7134  004B7E                     
  7135                           ;stateMachine/gameController.c: 155:     {;stateMachine/gameController.c: 156:         G
      +                          ameParameters_resetPos(g);
  7136  004B7E  C01C  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  7137  004B82  C01D  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  7138  004B86  ECF7  F030         	call	_GameParameters_resetPos	;wreg free
  7139                           
  7140                           ;stateMachine/gameController.c: 157:         Paddle_addX(&g->p1,20,1);
  7141  004B8A  0ED5               	movlw	213
  7142  004B8C  241C               	addwf	moovePaddle@g^0,w,c
  7143  004B8E  6E12               	movwf	Paddle_addX@p^0,c
  7144  004B90  0E00               	movlw	0
  7145  004B92  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7146  004B94  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7147  004B96  0E00               	movlw	0
  7148  004B98  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7149  004B9A  0E14               	movlw	20
  7150  004B9C  6E14               	movwf	Paddle_addX@value^0,c
  7151  004B9E  0E00               	movlw	0
  7152  004BA0  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7153  004BA2  0E01               	movlw	1
  7154  004BA4  6E16               	movwf	Paddle_addX@add^0,c
  7155  004BA6  EC9E  F027         	call	_Paddle_addX	;wreg free
  7156  004BAA                     l650:
  7157                           
  7158                           ;stateMachine/gameController.c: 159:     XF_pushEvent(evRedrawPaddle1,0);
  7159  004BAA  0E00               	movlw	0
  7160  004BAC  6E18               	movwf	XF_pushEvent@inISR^0,c
  7161  004BAE  0E0B               	movlw	11
  7162  004BB0  EC7C  F02E         	call	_XF_pushEvent
  7163  004BB4  0012               	return		;funcret
  7164  004BB6                     __end_of_moovePaddle:
  7165                           	callstack 0
  7166                           
  7167 ;; *************** function _Paddle_addX *****************
  7168 ;; Defined at:
  7169 ;;		line 28 in file "class/paddle.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;  p               2   17[COMRAM] PTR struct Paddle
  7172 ;;		 -> g1(239), 
  7173 ;;  value           2   19[COMRAM] unsigned short 
  7174 ;;  add             2   21[COMRAM] unsigned short 
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  1    wreg      void 
  7179 ;; Registers used:
  7180 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7186 ;;      Params:         6       0       0       0       0       0       0
  7187 ;;      Locals:         0       0       0       0       0       0       0
  7188 ;;      Temps:          2       0       0       0       0       0       0
  7189 ;;      Totals:         8       0       0       0       0       0       0
  7190 ;;Total ram usage:        8 bytes
  7191 ;; Hardware stack levels used: 1
  7192 ;; Hardware stack levels required when called: 4
  7193 ;; This function calls:
  7194 ;;		Nothing
  7195 ;; This function is called by:
  7196 ;;		_moovePaddle
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           	psect	text24
  7201  004F3C                     __ptext24:
  7202                           	callstack 0
  7203  004F3C                     _Paddle_addX:
  7204                           	callstack 21
  7205  004F3C                     
  7206                           ;class/paddle.c: 28: void Paddle_addX(struct Paddle* p,uint16_t value,uint16_t add);clas
      +                          s/paddle.c: 29: {;class/paddle.c: 30:     if(add==1)
  7207  004F3C  0416               	decf	Paddle_addX@add^0,w,c
  7208  004F3E  1017               	iorwf	(Paddle_addX@add+1)^0,w,c
  7209  004F40  A4D8               	btfss	status,2,c
  7210  004F42  EFA5  F027         	goto	u6511
  7211  004F46  EFA7  F027         	goto	u6510
  7212  004F4A                     u6511:
  7213  004F4A  EFDC  F027         	goto	l9293
  7214  004F4E                     u6510:
  7215  004F4E                     
  7216                           ;class/paddle.c: 31:     {;class/paddle.c: 32:         p->x=(p->x)+value;
  7217  004F4E  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7218  004F52  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7219  004F56  CFDE F018          	movff	postinc2,??_Paddle_addX
  7220  004F5A  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7221  004F5E  5014               	movf	Paddle_addX@value^0,w,c
  7222  004F60  2618               	addwf	??_Paddle_addX^0,f,c
  7223  004F62  5015               	movf	(Paddle_addX@value+1)^0,w,c
  7224  004F64  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  7225  004F66  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7226  004F6A  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7227  004F6E  C018  FFDE         	movff	??_Paddle_addX,postinc2
  7228  004F72  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  7229                           
  7230                           ;class/paddle.c: 33:         if((p->x+50)>239)
  7231  004F76  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7232  004F7A  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7233  004F7E  CFDE F018          	movff	postinc2,??_Paddle_addX
  7234  004F82  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7235  004F86  0E32               	movlw	50
  7236  004F88  2618               	addwf	??_Paddle_addX^0,f,c
  7237  004F8A  0E00               	movlw	0
  7238  004F8C  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  7239  004F8E  5019               	movf	(??_Paddle_addX+1)^0,w,c
  7240  004F90  E109               	bnz	u6520
  7241  004F92  0EF0               	movlw	240
  7242  004F94  5C18               	subwf	??_Paddle_addX^0,w,c
  7243  004F96  A0D8               	btfss	status,0,c
  7244  004F98  EFD0  F027         	goto	u6521
  7245  004F9C  EFD2  F027         	goto	u6520
  7246  004FA0                     u6521:
  7247  004FA0  EF0A  F028         	goto	l26
  7248  004FA4                     u6520:
  7249  004FA4                     
  7250                           ;class/paddle.c: 34:         {;class/paddle.c: 35:             p->x=239-(50);
  7251  004FA4  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7252  004FA8  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7253  004FAC  0EBD               	movlw	189
  7254  004FAE  6EDE               	movwf	postinc2,c
  7255  004FB0  0E00               	movlw	0
  7256  004FB2  6EDD               	movwf	postdec2,c
  7257  004FB4  EF0A  F028         	goto	l26
  7258  004FB8                     l9293:
  7259                           
  7260                           ;class/paddle.c: 39:     {;class/paddle.c: 40:         if((p->x)<21)
  7261  004FB8  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7262  004FBC  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7263  004FC0  0E01               	movlw	1
  7264  004FC2  50DB               	movf	plusw2,w,c
  7265  004FC4  E107               	bnz	u6531
  7266  004FC6  0E15               	movlw	21
  7267  004FC8  5CDE               	subwf	postinc2,w,c
  7268  004FCA  B0D8               	btfsc	status,0,c
  7269  004FCC  EFEA  F027         	goto	u6531
  7270  004FD0  EFEC  F027         	goto	u6530
  7271  004FD4                     u6531:
  7272  004FD4  EFF6  F027         	goto	l9297
  7273  004FD8                     u6530:
  7274  004FD8                     
  7275                           ;class/paddle.c: 41:         {;class/paddle.c: 42:             p->x=0;
  7276  004FD8  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7277  004FDC  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7278  004FE0  0E00               	movlw	0
  7279  004FE2  6EDE               	movwf	postinc2,c
  7280  004FE4  0E00               	movlw	0
  7281  004FE6  6EDD               	movwf	postdec2,c
  7282                           
  7283                           ;class/paddle.c: 43:         }
  7284  004FE8  EF0A  F028         	goto	l26
  7285  004FEC                     l9297:
  7286                           
  7287                           ;class/paddle.c: 45:         {;class/paddle.c: 46:             p->x=(p->x)-value;
  7288  004FEC  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7289  004FF0  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7290  004FF4  CFDE F018          	movff	postinc2,??_Paddle_addX
  7291  004FF8  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7292  004FFC  5014               	movf	Paddle_addX@value^0,w,c
  7293  004FFE  5E18               	subwf	??_Paddle_addX^0,f,c
  7294  005000  5015               	movf	(Paddle_addX@value+1)^0,w,c
  7295  005002  5A19               	subwfb	(??_Paddle_addX+1)^0,f,c
  7296  005004  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7297  005008  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7298  00500C  C018  FFDE         	movff	??_Paddle_addX,postinc2
  7299  005010  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  7300  005014                     l26:
  7301  005014  0012               	return		;funcret
  7302  005016                     __end_of_Paddle_addX:
  7303                           	callstack 0
  7304                           
  7305 ;; *************** function _LCD_InButton *****************
  7306 ;; Defined at:
  7307 ;;		line 514 in file "libraries/lcd_highlevel.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  button          2   17[COMRAM] PTR struct .
  7310 ;;		 -> g1(239), 
  7311 ;;  posX            2   19[COMRAM] unsigned short 
  7312 ;;  posY            2   21[COMRAM] unsigned short 
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;		None
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      unsigned char 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7324 ;;      Params:         6       0       0       0       0       0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0
  7326 ;;      Temps:          4       0       0       0       0       0       0
  7327 ;;      Totals:        10       0       0       0       0       0       0
  7328 ;;Total ram usage:       10 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 4
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_gameControllerController
  7335 ;;		_moovePaddle
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text25
  7340  004CA4                     __ptext25:
  7341                           	callstack 0
  7342  004CA4                     _LCD_InButton:
  7343                           	callstack 21
  7344  004CA4                     
  7345                           ;libraries/lcd_highlevel.c: 514: uint8_t LCD_InButton(btn_t * button, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 515: {;libraries/lcd_highlevel.c: 517:   if(posX 
      +                          < button->posX)
  7346  004CA4  C012  FFD9         	movff	LCD_InButton@button,fsr2l
  7347  004CA8  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
  7348  004CAC  50DE               	movf	postinc2,w,c
  7349  004CAE  5C14               	subwf	LCD_InButton@posX^0,w,c
  7350  004CB0  50DE               	movf	postinc2,w,c
  7351  004CB2  5815               	subwfb	(LCD_InButton@posX+1)^0,w,c
  7352  004CB4  B0D8               	btfsc	status,0,c
  7353  004CB6  EF5F  F026         	goto	u6611
  7354  004CBA  EF61  F026         	goto	u6610
  7355  004CBE                     u6611:
  7356  004CBE  EF64  F026         	goto	l9517
  7357  004CC2                     u6610:
  7358  004CC2                     l9513:
  7359                           
  7360                           ;libraries/lcd_highlevel.c: 518:   {;libraries/lcd_highlevel.c: 519:     return 0;
  7361  004CC2  0E00               	movlw	0
  7362  004CC4  EFC0  F026         	goto	l264
  7363  004CC8                     l9517:
  7364                           
  7365                           ;libraries/lcd_highlevel.c: 522:   if(posX > (button->posX + button->width))
  7366  004CC8  EE20 F004          	lfsr	2,4
  7367  004CCC  5012               	movf	LCD_InButton@button^0,w,c
  7368  004CCE  26D9               	addwf	fsr2l,f,c
  7369  004CD0  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7370  004CD2  22DA               	addwfc	fsr2h,f,c
  7371  004CD4  CFDE F018          	movff	postinc2,??_LCD_InButton
  7372  004CD8  CFDD F019          	movff	postdec2,??_LCD_InButton+1
  7373  004CDC  C012  FFD9         	movff	LCD_InButton@button,fsr2l
  7374  004CE0  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
  7375  004CE4  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
  7376  004CE8  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
  7377  004CEC  5018               	movf	??_LCD_InButton^0,w,c
  7378  004CEE  261A               	addwf	(??_LCD_InButton+2)^0,f,c
  7379  004CF0  5019               	movf	(??_LCD_InButton+1)^0,w,c
  7380  004CF2  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
  7381  004CF4  5014               	movf	LCD_InButton@posX^0,w,c
  7382  004CF6  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
  7383  004CF8  5015               	movf	(LCD_InButton@posX+1)^0,w,c
  7384  004CFA  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
  7385  004CFC  B0D8               	btfsc	status,0,c
  7386  004CFE  EF83  F026         	goto	u6621
  7387  004D02  EF85  F026         	goto	u6620
  7388  004D06                     u6621:
  7389  004D06  EF87  F026         	goto	l9523
  7390  004D0A                     u6620:
  7391  004D0A  EF61  F026         	goto	l9513
  7392  004D0E                     l9523:
  7393                           
  7394                           ;libraries/lcd_highlevel.c: 527:   if(posY < button->posY)
  7395  004D0E  EE20 F002          	lfsr	2,2
  7396  004D12  5012               	movf	LCD_InButton@button^0,w,c
  7397  004D14  26D9               	addwf	fsr2l,f,c
  7398  004D16  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7399  004D18  22DA               	addwfc	fsr2h,f,c
  7400  004D1A  50DE               	movf	postinc2,w,c
  7401  004D1C  5C16               	subwf	LCD_InButton@posY^0,w,c
  7402  004D1E  50DE               	movf	postinc2,w,c
  7403  004D20  5817               	subwfb	(LCD_InButton@posY+1)^0,w,c
  7404  004D22  B0D8               	btfsc	status,0,c
  7405  004D24  EF96  F026         	goto	u6631
  7406  004D28  EF98  F026         	goto	u6630
  7407  004D2C                     u6631:
  7408  004D2C  EF9A  F026         	goto	l9529
  7409  004D30                     u6630:
  7410  004D30  EF61  F026         	goto	l9513
  7411  004D34                     l9529:
  7412                           
  7413                           ;libraries/lcd_highlevel.c: 532:   if(posY > (button->posY + button->height))
  7414  004D34  EE20 F006          	lfsr	2,6
  7415  004D38  5012               	movf	LCD_InButton@button^0,w,c
  7416  004D3A  26D9               	addwf	fsr2l,f,c
  7417  004D3C  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7418  004D3E  22DA               	addwfc	fsr2h,f,c
  7419  004D40  CFDE F018          	movff	postinc2,??_LCD_InButton
  7420  004D44  CFDD F019          	movff	postdec2,??_LCD_InButton+1
  7421  004D48  EE20 F002          	lfsr	2,2
  7422  004D4C  5012               	movf	LCD_InButton@button^0,w,c
  7423  004D4E  26D9               	addwf	fsr2l,f,c
  7424  004D50  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7425  004D52  22DA               	addwfc	fsr2h,f,c
  7426  004D54  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
  7427  004D58  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
  7428  004D5C  5018               	movf	??_LCD_InButton^0,w,c
  7429  004D5E  261A               	addwf	(??_LCD_InButton+2)^0,f,c
  7430  004D60  5019               	movf	(??_LCD_InButton+1)^0,w,c
  7431  004D62  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
  7432  004D64  5016               	movf	LCD_InButton@posY^0,w,c
  7433  004D66  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
  7434  004D68  5017               	movf	(LCD_InButton@posY+1)^0,w,c
  7435  004D6A  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
  7436  004D6C  B0D8               	btfsc	status,0,c
  7437  004D6E  EFBB  F026         	goto	u6641
  7438  004D72  EFBD  F026         	goto	u6640
  7439  004D76                     u6641:
  7440  004D76  EFBF  F026         	goto	l9535
  7441  004D7A                     u6640:
  7442  004D7A  EF61  F026         	goto	l9513
  7443  004D7E                     l9535:
  7444                           
  7445                           ;libraries/lcd_highlevel.c: 536:   return 1;
  7446  004D7E  0E01               	movlw	1
  7447  004D80                     l264:
  7448  004D80  0012               	return		;funcret
  7449  004D82                     __end_of_LCD_InButton:
  7450                           	callstack 0
  7451                           
  7452 ;; *************** function _GameParameters_resetPos *****************
  7453 ;; Defined at:
  7454 ;;		line 39 in file "class/gameParameters.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  s               2   17[COMRAM] PTR struct GameParameter
  7457 ;;		 -> g1(239), 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7469 ;;      Params:         2       0       0       0       0       0       0
  7470 ;;      Locals:         0       0       0       0       0       0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0
  7472 ;;      Totals:         2       0       0       0       0       0       0
  7473 ;;Total ram usage:        2 bytes
  7474 ;; Hardware stack levels used: 1
  7475 ;; Hardware stack levels required when called: 4
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_gameControllerController
  7480 ;;		_moovePaddle
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text26
  7485  0061EE                     __ptext26:
  7486                           	callstack 0
  7487  0061EE                     _GameParameters_resetPos:
  7488                           	callstack 21
  7489  0061EE                     
  7490                           ;class/gameParameters.c: 39: void GameParameters_resetPos(struct GameParameters* s);clas
      +                          s/gameParameters.c: 40: {;class/gameParameters.c: 41:     s->x=0;
  7491  0061EE  EE20 F004          	lfsr	2,4
  7492  0061F2  5012               	movf	GameParameters_resetPos@s^0,w,c
  7493  0061F4  26D9               	addwf	fsr2l,f,c
  7494  0061F6  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  7495  0061F8  22DA               	addwfc	fsr2h,f,c
  7496  0061FA  0E00               	movlw	0
  7497  0061FC  6EDE               	movwf	postinc2,c
  7498  0061FE  0E00               	movlw	0
  7499  006200  6EDD               	movwf	postdec2,c
  7500                           
  7501                           ;class/gameParameters.c: 42:     s->y=0;
  7502  006202  EE20 F006          	lfsr	2,6
  7503  006206  5012               	movf	GameParameters_resetPos@s^0,w,c
  7504  006208  26D9               	addwf	fsr2l,f,c
  7505  00620A  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  7506  00620C  22DA               	addwfc	fsr2h,f,c
  7507  00620E  0E00               	movlw	0
  7508  006210  6EDE               	movwf	postinc2,c
  7509  006212  0E00               	movlw	0
  7510  006214  6EDD               	movwf	postdec2,c
  7511  006216  0012               	return		;funcret
  7512  006218                     __end_of_GameParameters_resetPos:
  7513                           	callstack 0
  7514                           
  7515 ;; *************** function _mooveBall *****************
  7516 ;; Defined at:
  7517 ;;		line 161 in file "stateMachine/gameController.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  g               2   36[COMRAM] PTR struct GameParameter
  7520 ;;		 -> g1(239), 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;		None
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  1    wreg      void 
  7525 ;; Registers used:
  7526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7532 ;;      Params:         2       0       0       0       0       0       0
  7533 ;;      Locals:         0       0       0       0       0       0       0
  7534 ;;      Temps:          0       0       0       0       0       0       0
  7535 ;;      Totals:         2       0       0       0       0       0       0
  7536 ;;Total ram usage:        2 bytes
  7537 ;; Hardware stack levels used: 1
  7538 ;; Hardware stack levels required when called: 7
  7539 ;; This function calls:
  7540 ;;		_Ball_Update
  7541 ;;		_XF_pushEvent
  7542 ;;		_checkCollision
  7543 ;; This function is called by:
  7544 ;;		_gameControllerController
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text27
  7549  006240                     __ptext27:
  7550                           	callstack 0
  7551  006240                     _mooveBall:
  7552                           	callstack 19
  7553  006240                     
  7554                           ;stateMachine/gameController.c: 161: void mooveBall(GameParameters* g);stateMachine/game
      +                          Controller.c: 162: {;stateMachine/gameController.c: 163:     checkCollision(g);
  7555  006240  C025  F01B         	movff	mooveBall@g,checkCollision@g
  7556  006244  C026  F01C         	movff	mooveBall@g+1,checkCollision@g+1
  7557  006248  EC5A  F000         	call	_checkCollision	;wreg free
  7558                           
  7559                           ;stateMachine/gameController.c: 164:     Ball_Update(&g->b);
  7560  00624C  0EC9               	movlw	201
  7561  00624E  2425               	addwf	mooveBall@g^0,w,c
  7562  006250  6E12               	movwf	Ball_Update@b^0,c
  7563  006252  0E00               	movlw	0
  7564  006254  2026               	addwfc	(mooveBall@g+1)^0,w,c
  7565  006256  6E13               	movwf	(Ball_Update@b+1)^0,c
  7566  006258  EC0F  F02D         	call	_Ball_Update	;wreg free
  7567                           
  7568                           ;stateMachine/gameController.c: 165:     XF_pushEvent(evRedrawBall,0);
  7569  00625C  0E00               	movlw	0
  7570  00625E  6E18               	movwf	XF_pushEvent@inISR^0,c
  7571  006260  0E0D               	movlw	13
  7572  006262  EC7C  F02E         	call	_XF_pushEvent
  7573  006266  0012               	return		;funcret
  7574  006268                     __end_of_mooveBall:
  7575                           	callstack 0
  7576                           
  7577 ;; *************** function _checkCollision *****************
  7578 ;; Defined at:
  7579 ;;		line 167 in file "stateMachine/gameController.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  g               2   26[COMRAM] PTR struct GameParameter
  7582 ;;		 -> g1(239), 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  s              20    0        unsigned char [20]
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7594 ;;      Params:         2       0       0       0       0       0       0
  7595 ;;      Locals:         0       0       0       0       0       0       0
  7596 ;;      Temps:          8       0       0       0       0       0       0
  7597 ;;      Totals:        10       0       0       0       0       0       0
  7598 ;;Total ram usage:       10 bytes
  7599 ;; Hardware stack levels used: 1
  7600 ;; Hardware stack levels required when called: 6
  7601 ;; This function calls:
  7602 ;;		_XF_pushEvent
  7603 ;; This function is called by:
  7604 ;;		_mooveBall
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text28
  7609  0000B4                     __ptext28:
  7610                           	callstack 0
  7611  0000B4                     _checkCollision:
  7612                           	callstack 19
  7613  0000B4                     
  7614                           ;stateMachine/gameController.c: 167: void checkCollision(GameParameters* g);stateMachine
      +                          /gameController.c: 168: {;stateMachine/gameController.c: 169:     char s[20];;stateMachi
      +                          ne/gameController.c: 171:     if(g->b.x+g->b.dx+8>=239)
  7615  0000B4  EE20 F0D1          	lfsr	2,209
  7616  0000B8  501B               	movf	checkCollision@g^0,w,c
  7617  0000BA  26D9               	addwf	fsr2l,f,c
  7618  0000BC  501C               	movf	(checkCollision@g+1)^0,w,c
  7619  0000BE  22DA               	addwfc	fsr2h,f,c
  7620  0000C0  CFDE F01D          	movff	postinc2,??_checkCollision
  7621  0000C4  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7622  0000C8  EE20 F0C9          	lfsr	2,201
  7623  0000CC  501B               	movf	checkCollision@g^0,w,c
  7624  0000CE  26D9               	addwf	fsr2l,f,c
  7625  0000D0  501C               	movf	(checkCollision@g+1)^0,w,c
  7626  0000D2  22DA               	addwfc	fsr2h,f,c
  7627  0000D4  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7628  0000D8  CFDD F020          	movff	postdec2,??_checkCollision+3
  7629  0000DC  501D               	movf	??_checkCollision^0,w,c
  7630  0000DE  261F               	addwf	(??_checkCollision+2)^0,f,c
  7631  0000E0  501E               	movf	(??_checkCollision+1)^0,w,c
  7632  0000E2  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7633  0000E4  0E08               	movlw	8
  7634  0000E6  261F               	addwf	(??_checkCollision+2)^0,f,c
  7635  0000E8  0E00               	movlw	0
  7636  0000EA  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7637  0000EC  5020               	movf	(??_checkCollision+3)^0,w,c
  7638  0000EE  E109               	bnz	u6650
  7639  0000F0  0EEF               	movlw	239
  7640  0000F2  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7641  0000F4  A0D8               	btfss	status,0,c
  7642  0000F6  EF7F  F000         	goto	u6651
  7643  0000FA  EF81  F000         	goto	u6650
  7644  0000FE                     u6651:
  7645  0000FE  EF99  F000         	goto	l657
  7646  000102                     u6650:
  7647  000102                     
  7648                           ;stateMachine/gameController.c: 172:     {;stateMachine/gameController.c: 173:         g
      +                          ->b.dx=-g->b.dx;
  7649  000102  EE20 F0D1          	lfsr	2,209
  7650  000106  501B               	movf	checkCollision@g^0,w,c
  7651  000108  26D9               	addwf	fsr2l,f,c
  7652  00010A  501C               	movf	(checkCollision@g+1)^0,w,c
  7653  00010C  22DA               	addwfc	fsr2h,f,c
  7654  00010E  CFDE F01D          	movff	postinc2,??_checkCollision
  7655  000112  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7656  000116  1E1D               	comf	??_checkCollision^0,f,c
  7657  000118  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7658  00011A  4A1D               	infsnz	??_checkCollision^0,f,c
  7659  00011C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7660  00011E  EE20 F0D1          	lfsr	2,209
  7661  000122  501B               	movf	checkCollision@g^0,w,c
  7662  000124  26D9               	addwf	fsr2l,f,c
  7663  000126  501C               	movf	(checkCollision@g+1)^0,w,c
  7664  000128  22DA               	addwfc	fsr2h,f,c
  7665  00012A  C01D  FFDE         	movff	??_checkCollision,postinc2
  7666  00012E  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7667  000132                     l657:
  7668                           
  7669                           ;stateMachine/gameController.c: 175:     if(g->b.x+g->b.dx-8<=3)
  7670  000132  0EF8               	movlw	248
  7671  000134  6E1D               	movwf	??_checkCollision^0,c
  7672  000136  0EFF               	movlw	255
  7673  000138  6E1E               	movwf	(??_checkCollision+1)^0,c
  7674  00013A  EE20 F0D1          	lfsr	2,209
  7675  00013E  501B               	movf	checkCollision@g^0,w,c
  7676  000140  26D9               	addwf	fsr2l,f,c
  7677  000142  501C               	movf	(checkCollision@g+1)^0,w,c
  7678  000144  22DA               	addwfc	fsr2h,f,c
  7679  000146  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7680  00014A  CFDD F020          	movff	postdec2,??_checkCollision+3
  7681  00014E  EE20 F0C9          	lfsr	2,201
  7682  000152  501B               	movf	checkCollision@g^0,w,c
  7683  000154  26D9               	addwf	fsr2l,f,c
  7684  000156  501C               	movf	(checkCollision@g+1)^0,w,c
  7685  000158  22DA               	addwfc	fsr2h,f,c
  7686  00015A  CFDE F021          	movff	postinc2,??_checkCollision+4
  7687  00015E  CFDD F022          	movff	postdec2,??_checkCollision+5
  7688  000162  501F               	movf	(??_checkCollision+2)^0,w,c
  7689  000164  2621               	addwf	(??_checkCollision+4)^0,f,c
  7690  000166  5020               	movf	(??_checkCollision+3)^0,w,c
  7691  000168  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7692  00016A  501D               	movf	??_checkCollision^0,w,c
  7693  00016C  2621               	addwf	(??_checkCollision+4)^0,f,c
  7694  00016E  501E               	movf	(??_checkCollision+1)^0,w,c
  7695  000170  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7696  000172  5022               	movf	(??_checkCollision+5)^0,w,c
  7697  000174  E107               	bnz	u6661
  7698  000176  0E04               	movlw	4
  7699  000178  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7700  00017A  B0D8               	btfsc	status,0,c
  7701  00017C  EFC2  F000         	goto	u6661
  7702  000180  EFC4  F000         	goto	u6660
  7703  000184                     u6661:
  7704  000184  EFDC  F000         	goto	l658
  7705  000188                     u6660:
  7706  000188                     
  7707                           ;stateMachine/gameController.c: 176:     {;stateMachine/gameController.c: 177:         g
      +                          ->b.dx=-g->b.dx;
  7708  000188  EE20 F0D1          	lfsr	2,209
  7709  00018C  501B               	movf	checkCollision@g^0,w,c
  7710  00018E  26D9               	addwf	fsr2l,f,c
  7711  000190  501C               	movf	(checkCollision@g+1)^0,w,c
  7712  000192  22DA               	addwfc	fsr2h,f,c
  7713  000194  CFDE F01D          	movff	postinc2,??_checkCollision
  7714  000198  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7715  00019C  1E1D               	comf	??_checkCollision^0,f,c
  7716  00019E  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7717  0001A0  4A1D               	infsnz	??_checkCollision^0,f,c
  7718  0001A2  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7719  0001A4  EE20 F0D1          	lfsr	2,209
  7720  0001A8  501B               	movf	checkCollision@g^0,w,c
  7721  0001AA  26D9               	addwf	fsr2l,f,c
  7722  0001AC  501C               	movf	(checkCollision@g+1)^0,w,c
  7723  0001AE  22DA               	addwfc	fsr2h,f,c
  7724  0001B0  C01D  FFDE         	movff	??_checkCollision,postinc2
  7725  0001B4  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7726  0001B8                     l658:
  7727                           
  7728                           ;stateMachine/gameController.c: 180:     if(g->b.y+8>=g->p1.y-1)
  7729  0001B8  0EFF               	movlw	255
  7730  0001BA  6E1D               	movwf	??_checkCollision^0,c
  7731  0001BC  0EFF               	movlw	255
  7732  0001BE  6E1E               	movwf	(??_checkCollision+1)^0,c
  7733  0001C0  EE20 F0D7          	lfsr	2,215
  7734  0001C4  501B               	movf	checkCollision@g^0,w,c
  7735  0001C6  26D9               	addwf	fsr2l,f,c
  7736  0001C8  501C               	movf	(checkCollision@g+1)^0,w,c
  7737  0001CA  22DA               	addwfc	fsr2h,f,c
  7738  0001CC  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7739  0001D0  CFDD F020          	movff	postdec2,??_checkCollision+3
  7740  0001D4  501D               	movf	??_checkCollision^0,w,c
  7741  0001D6  261F               	addwf	(??_checkCollision+2)^0,f,c
  7742  0001D8  501E               	movf	(??_checkCollision+1)^0,w,c
  7743  0001DA  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7744  0001DC  EE20 F0CB          	lfsr	2,203
  7745  0001E0  501B               	movf	checkCollision@g^0,w,c
  7746  0001E2  26D9               	addwf	fsr2l,f,c
  7747  0001E4  501C               	movf	(checkCollision@g+1)^0,w,c
  7748  0001E6  22DA               	addwfc	fsr2h,f,c
  7749  0001E8  CFDE F021          	movff	postinc2,??_checkCollision+4
  7750  0001EC  CFDD F022          	movff	postdec2,??_checkCollision+5
  7751  0001F0  0E08               	movlw	8
  7752  0001F2  2621               	addwf	(??_checkCollision+4)^0,f,c
  7753  0001F4  0E00               	movlw	0
  7754  0001F6  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7755  0001F8  501F               	movf	(??_checkCollision+2)^0,w,c
  7756  0001FA  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7757  0001FC  5020               	movf	(??_checkCollision+3)^0,w,c
  7758  0001FE  5822               	subwfb	(??_checkCollision+5)^0,w,c
  7759  000200  A0D8               	btfss	status,0,c
  7760  000202  EF05  F001         	goto	u6671
  7761  000206  EF07  F001         	goto	u6670
  7762  00020A                     u6671:
  7763  00020A  EF91  F002         	goto	l9569
  7764  00020E                     u6670:
  7765  00020E                     
  7766                           ;stateMachine/gameController.c: 181:     {;stateMachine/gameController.c: 182:         i
      +                          f(g->b.x+8>g->p1.x)
  7767  00020E  EE20 F0C9          	lfsr	2,201
  7768  000212  501B               	movf	checkCollision@g^0,w,c
  7769  000214  26D9               	addwf	fsr2l,f,c
  7770  000216  501C               	movf	(checkCollision@g+1)^0,w,c
  7771  000218  22DA               	addwfc	fsr2h,f,c
  7772  00021A  CFDE F01D          	movff	postinc2,??_checkCollision
  7773  00021E  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7774  000222  0E08               	movlw	8
  7775  000224  261D               	addwf	??_checkCollision^0,f,c
  7776  000226  0E00               	movlw	0
  7777  000228  221E               	addwfc	(??_checkCollision+1)^0,f,c
  7778  00022A  EE20 F0D5          	lfsr	2,213
  7779  00022E  501B               	movf	checkCollision@g^0,w,c
  7780  000230  26D9               	addwf	fsr2l,f,c
  7781  000232  501C               	movf	(checkCollision@g+1)^0,w,c
  7782  000234  22DA               	addwfc	fsr2h,f,c
  7783  000236  501D               	movf	??_checkCollision^0,w,c
  7784  000238  5CDE               	subwf	postinc2,w,c
  7785  00023A  501E               	movf	(??_checkCollision+1)^0,w,c
  7786  00023C  58DE               	subwfb	postinc2,w,c
  7787  00023E  B0D8               	btfsc	status,0,c
  7788  000240  EF24  F001         	goto	u6681
  7789  000244  EF26  F001         	goto	u6680
  7790  000248                     u6681:
  7791  000248  EF91  F002         	goto	l9569
  7792  00024C                     u6680:
  7793  00024C                     
  7794                           ;stateMachine/gameController.c: 183:         {;stateMachine/gameController.c: 184:      
      +                                 if(g->b.x-8<g->p1.x+50)
  7795  00024C  EE20 F0D5          	lfsr	2,213
  7796  000250  501B               	movf	checkCollision@g^0,w,c
  7797  000252  26D9               	addwf	fsr2l,f,c
  7798  000254  501C               	movf	(checkCollision@g+1)^0,w,c
  7799  000256  22DA               	addwfc	fsr2h,f,c
  7800  000258  CFDE F01D          	movff	postinc2,??_checkCollision
  7801  00025C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7802  000260  0E32               	movlw	50
  7803  000262  261D               	addwf	??_checkCollision^0,f,c
  7804  000264  0E00               	movlw	0
  7805  000266  221E               	addwfc	(??_checkCollision+1)^0,f,c
  7806  000268  0EF8               	movlw	248
  7807  00026A  6E1F               	movwf	(??_checkCollision+2)^0,c
  7808  00026C  0EFF               	movlw	255
  7809  00026E  6E20               	movwf	(??_checkCollision+3)^0,c
  7810  000270  EE20 F0C9          	lfsr	2,201
  7811  000274  501B               	movf	checkCollision@g^0,w,c
  7812  000276  26D9               	addwf	fsr2l,f,c
  7813  000278  501C               	movf	(checkCollision@g+1)^0,w,c
  7814  00027A  22DA               	addwfc	fsr2h,f,c
  7815  00027C  CFDE F021          	movff	postinc2,??_checkCollision+4
  7816  000280  CFDD F022          	movff	postdec2,??_checkCollision+5
  7817  000284  501F               	movf	(??_checkCollision+2)^0,w,c
  7818  000286  2621               	addwf	(??_checkCollision+4)^0,f,c
  7819  000288  5020               	movf	(??_checkCollision+3)^0,w,c
  7820  00028A  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7821  00028C  501D               	movf	??_checkCollision^0,w,c
  7822  00028E  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7823  000290  501E               	movf	(??_checkCollision+1)^0,w,c
  7824  000292  5822               	subwfb	(??_checkCollision+5)^0,w,c
  7825  000294  B0D8               	btfsc	status,0,c
  7826  000296  EF4F  F001         	goto	u6691
  7827  00029A  EF51  F001         	goto	u6690
  7828  00029E                     u6691:
  7829  00029E  EF91  F002         	goto	l9569
  7830  0002A2                     u6690:
  7831  0002A2                     
  7832                           ;stateMachine/gameController.c: 185:             {;stateMachine/gameController.c: 186:  
      +                                         if(g->b.x-g->p1.x<10)
  7833  0002A2  EE20 F0D5          	lfsr	2,213
  7834  0002A6  501B               	movf	checkCollision@g^0,w,c
  7835  0002A8  26D9               	addwf	fsr2l,f,c
  7836  0002AA  501C               	movf	(checkCollision@g+1)^0,w,c
  7837  0002AC  22DA               	addwfc	fsr2h,f,c
  7838  0002AE  CFDE F01D          	movff	postinc2,??_checkCollision
  7839  0002B2  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7840  0002B6  EE20 F0C9          	lfsr	2,201
  7841  0002BA  501B               	movf	checkCollision@g^0,w,c
  7842  0002BC  26D9               	addwf	fsr2l,f,c
  7843  0002BE  501C               	movf	(checkCollision@g+1)^0,w,c
  7844  0002C0  22DA               	addwfc	fsr2h,f,c
  7845  0002C2  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7846  0002C6  CFDD F020          	movff	postdec2,??_checkCollision+3
  7847  0002CA  501D               	movf	??_checkCollision^0,w,c
  7848  0002CC  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  7849  0002CE  501E               	movf	(??_checkCollision+1)^0,w,c
  7850  0002D0  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  7851  0002D2  5020               	movf	(??_checkCollision+3)^0,w,c
  7852  0002D4  E107               	bnz	u6701
  7853  0002D6  0E0A               	movlw	10
  7854  0002D8  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7855  0002DA  B0D8               	btfsc	status,0,c
  7856  0002DC  EF72  F001         	goto	u6701
  7857  0002E0  EF74  F001         	goto	u6700
  7858  0002E4                     u6701:
  7859  0002E4  EF98  F001         	goto	l9553
  7860  0002E8                     u6700:
  7861  0002E8                     
  7862                           ;stateMachine/gameController.c: 187:                 {;stateMachine/gameController.c: 18
      +                          9:                     g->b.dy=-g->b.dy;
  7863  0002E8  EE20 F0D3          	lfsr	2,211
  7864  0002EC  501B               	movf	checkCollision@g^0,w,c
  7865  0002EE  26D9               	addwf	fsr2l,f,c
  7866  0002F0  501C               	movf	(checkCollision@g+1)^0,w,c
  7867  0002F2  22DA               	addwfc	fsr2h,f,c
  7868  0002F4  CFDE F01D          	movff	postinc2,??_checkCollision
  7869  0002F8  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7870  0002FC  1E1D               	comf	??_checkCollision^0,f,c
  7871  0002FE  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7872  000300  4A1D               	infsnz	??_checkCollision^0,f,c
  7873  000302  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7874  000304  EE20 F0D3          	lfsr	2,211
  7875  000308  501B               	movf	checkCollision@g^0,w,c
  7876  00030A  26D9               	addwf	fsr2l,f,c
  7877  00030C  501C               	movf	(checkCollision@g+1)^0,w,c
  7878  00030E  22DA               	addwfc	fsr2h,f,c
  7879  000310  C01D  FFDE         	movff	??_checkCollision,postinc2
  7880  000314  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7881                           
  7882                           ;stateMachine/gameController.c: 190:                     g->b.dx-=2;
  7883  000318  EE20 F0D1          	lfsr	2,209
  7884  00031C  501B               	movf	checkCollision@g^0,w,c
  7885  00031E  26D9               	addwf	fsr2l,f,c
  7886  000320  501C               	movf	(checkCollision@g+1)^0,w,c
  7887  000322  22DA               	addwfc	fsr2h,f,c
  7888  000324  0EFE               	movlw	254
  7889  000326  26DE               	addwf	postinc2,f,c
  7890  000328  0EFF               	movlw	255
  7891  00032A  22DD               	addwfc	postdec2,f,c
  7892                           
  7893                           ;stateMachine/gameController.c: 191:                 }
  7894  00032C  EF83  F002         	goto	l663
  7895  000330                     l9553:
  7896  000330  EE20 F0D5          	lfsr	2,213
  7897  000334  501B               	movf	checkCollision@g^0,w,c
  7898  000336  26D9               	addwf	fsr2l,f,c
  7899  000338  501C               	movf	(checkCollision@g+1)^0,w,c
  7900  00033A  22DA               	addwfc	fsr2h,f,c
  7901  00033C  CFDE F01D          	movff	postinc2,??_checkCollision
  7902  000340  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7903  000344  EE20 F0C9          	lfsr	2,201
  7904  000348  501B               	movf	checkCollision@g^0,w,c
  7905  00034A  26D9               	addwf	fsr2l,f,c
  7906  00034C  501C               	movf	(checkCollision@g+1)^0,w,c
  7907  00034E  22DA               	addwfc	fsr2h,f,c
  7908  000350  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7909  000354  CFDD F020          	movff	postdec2,??_checkCollision+3
  7910  000358  501D               	movf	??_checkCollision^0,w,c
  7911  00035A  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  7912  00035C  501E               	movf	(??_checkCollision+1)^0,w,c
  7913  00035E  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  7914  000360  5020               	movf	(??_checkCollision+3)^0,w,c
  7915  000362  E107               	bnz	u6711
  7916  000364  0E14               	movlw	20
  7917  000366  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7918  000368  B0D8               	btfsc	status,0,c
  7919  00036A  EFB9  F001         	goto	u6711
  7920  00036E  EFBB  F001         	goto	u6710
  7921  000372                     u6711:
  7922  000372  EFDE  F001         	goto	l9557
  7923  000376                     u6710:
  7924  000376                     
  7925                           ;stateMachine/gameController.c: 193:                 {;stateMachine/gameController.c: 19
      +                          5:                     g->b.dy=-g->b.dy;
  7926  000376  EE20 F0D3          	lfsr	2,211
  7927  00037A  501B               	movf	checkCollision@g^0,w,c
  7928  00037C  26D9               	addwf	fsr2l,f,c
  7929  00037E  501C               	movf	(checkCollision@g+1)^0,w,c
  7930  000380  22DA               	addwfc	fsr2h,f,c
  7931  000382  CFDE F01D          	movff	postinc2,??_checkCollision
  7932  000386  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7933  00038A  1E1D               	comf	??_checkCollision^0,f,c
  7934  00038C  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7935  00038E  4A1D               	infsnz	??_checkCollision^0,f,c
  7936  000390  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7937  000392  EE20 F0D3          	lfsr	2,211
  7938  000396  501B               	movf	checkCollision@g^0,w,c
  7939  000398  26D9               	addwf	fsr2l,f,c
  7940  00039A  501C               	movf	(checkCollision@g+1)^0,w,c
  7941  00039C  22DA               	addwfc	fsr2h,f,c
  7942  00039E  C01D  FFDE         	movff	??_checkCollision,postinc2
  7943  0003A2  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7944                           
  7945                           ;stateMachine/gameController.c: 196:                     g->b.dx-=1;
  7946  0003A6  EE20 F0D1          	lfsr	2,209
  7947  0003AA  501B               	movf	checkCollision@g^0,w,c
  7948  0003AC  26D9               	addwf	fsr2l,f,c
  7949  0003AE  501C               	movf	(checkCollision@g+1)^0,w,c
  7950  0003B0  22DA               	addwfc	fsr2h,f,c
  7951  0003B2  06DE               	decf	postinc2,f,c
  7952  0003B4  0E00               	movlw	0
  7953  0003B6  5ADD               	subwfb	postdec2,f,c
  7954                           
  7955                           ;stateMachine/gameController.c: 197:                 }
  7956  0003B8  EF83  F002         	goto	l663
  7957  0003BC                     l9557:
  7958  0003BC  EE20 F0D5          	lfsr	2,213
  7959  0003C0  501B               	movf	checkCollision@g^0,w,c
  7960  0003C2  26D9               	addwf	fsr2l,f,c
  7961  0003C4  501C               	movf	(checkCollision@g+1)^0,w,c
  7962  0003C6  22DA               	addwfc	fsr2h,f,c
  7963  0003C8  CFDE F01D          	movff	postinc2,??_checkCollision
  7964  0003CC  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7965  0003D0  EE20 F0C9          	lfsr	2,201
  7966  0003D4  501B               	movf	checkCollision@g^0,w,c
  7967  0003D6  26D9               	addwf	fsr2l,f,c
  7968  0003D8  501C               	movf	(checkCollision@g+1)^0,w,c
  7969  0003DA  22DA               	addwfc	fsr2h,f,c
  7970  0003DC  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7971  0003E0  CFDD F020          	movff	postdec2,??_checkCollision+3
  7972  0003E4  501D               	movf	??_checkCollision^0,w,c
  7973  0003E6  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  7974  0003E8  501E               	movf	(??_checkCollision+1)^0,w,c
  7975  0003EA  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  7976  0003EC  5020               	movf	(??_checkCollision+3)^0,w,c
  7977  0003EE  E107               	bnz	u6721
  7978  0003F0  0E1E               	movlw	30
  7979  0003F2  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7980  0003F4  B0D8               	btfsc	status,0,c
  7981  0003F6  EFFF  F001         	goto	u6721
  7982  0003FA  EF01  F002         	goto	u6720
  7983  0003FE                     u6721:
  7984  0003FE  EF1B  F002         	goto	l9561
  7985  000402                     u6720:
  7986  000402                     
  7987                           ;stateMachine/gameController.c: 202:                     g->b.dy=-g->b.dy;
  7988  000402  EE20 F0D3          	lfsr	2,211
  7989  000406  501B               	movf	checkCollision@g^0,w,c
  7990  000408  26D9               	addwf	fsr2l,f,c
  7991  00040A  501C               	movf	(checkCollision@g+1)^0,w,c
  7992  00040C  22DA               	addwfc	fsr2h,f,c
  7993  00040E  CFDE F01D          	movff	postinc2,??_checkCollision
  7994  000412  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7995  000416  1E1D               	comf	??_checkCollision^0,f,c
  7996  000418  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7997  00041A  4A1D               	infsnz	??_checkCollision^0,f,c
  7998  00041C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7999  00041E  EE20 F0D3          	lfsr	2,211
  8000  000422  501B               	movf	checkCollision@g^0,w,c
  8001  000424  26D9               	addwf	fsr2l,f,c
  8002  000426  501C               	movf	(checkCollision@g+1)^0,w,c
  8003  000428  22DA               	addwfc	fsr2h,f,c
  8004  00042A  C01D  FFDE         	movff	??_checkCollision,postinc2
  8005  00042E  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8006                           
  8007                           ;stateMachine/gameController.c: 203:                 }
  8008  000432  EF83  F002         	goto	l663
  8009  000436                     l9561:
  8010  000436  EE20 F0D5          	lfsr	2,213
  8011  00043A  501B               	movf	checkCollision@g^0,w,c
  8012  00043C  26D9               	addwf	fsr2l,f,c
  8013  00043E  501C               	movf	(checkCollision@g+1)^0,w,c
  8014  000440  22DA               	addwfc	fsr2h,f,c
  8015  000442  CFDE F01D          	movff	postinc2,??_checkCollision
  8016  000446  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8017  00044A  EE20 F0C9          	lfsr	2,201
  8018  00044E  501B               	movf	checkCollision@g^0,w,c
  8019  000450  26D9               	addwf	fsr2l,f,c
  8020  000452  501C               	movf	(checkCollision@g+1)^0,w,c
  8021  000454  22DA               	addwfc	fsr2h,f,c
  8022  000456  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8023  00045A  CFDD F020          	movff	postdec2,??_checkCollision+3
  8024  00045E  501D               	movf	??_checkCollision^0,w,c
  8025  000460  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8026  000462  501E               	movf	(??_checkCollision+1)^0,w,c
  8027  000464  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8028  000466  5020               	movf	(??_checkCollision+3)^0,w,c
  8029  000468  E107               	bnz	u6731
  8030  00046A  0E28               	movlw	40
  8031  00046C  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8032  00046E  B0D8               	btfsc	status,0,c
  8033  000470  EF3C  F002         	goto	u6731
  8034  000474  EF3E  F002         	goto	u6730
  8035  000478                     u6731:
  8036  000478  EF61  F002         	goto	l9565
  8037  00047C                     u6730:
  8038  00047C                     
  8039                           ;stateMachine/gameController.c: 205:                 {;stateMachine/gameController.c: 20
      +                          7:                     g->b.dy=-g->b.dy;
  8040  00047C  EE20 F0D3          	lfsr	2,211
  8041  000480  501B               	movf	checkCollision@g^0,w,c
  8042  000482  26D9               	addwf	fsr2l,f,c
  8043  000484  501C               	movf	(checkCollision@g+1)^0,w,c
  8044  000486  22DA               	addwfc	fsr2h,f,c
  8045  000488  CFDE F01D          	movff	postinc2,??_checkCollision
  8046  00048C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8047  000490  1E1D               	comf	??_checkCollision^0,f,c
  8048  000492  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8049  000494  4A1D               	infsnz	??_checkCollision^0,f,c
  8050  000496  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8051  000498  EE20 F0D3          	lfsr	2,211
  8052  00049C  501B               	movf	checkCollision@g^0,w,c
  8053  00049E  26D9               	addwf	fsr2l,f,c
  8054  0004A0  501C               	movf	(checkCollision@g+1)^0,w,c
  8055  0004A2  22DA               	addwfc	fsr2h,f,c
  8056  0004A4  C01D  FFDE         	movff	??_checkCollision,postinc2
  8057  0004A8  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8058                           
  8059                           ;stateMachine/gameController.c: 208:                     g->b.dx+=1;
  8060  0004AC  EE20 F0D1          	lfsr	2,209
  8061  0004B0  501B               	movf	checkCollision@g^0,w,c
  8062  0004B2  26D9               	addwf	fsr2l,f,c
  8063  0004B4  501C               	movf	(checkCollision@g+1)^0,w,c
  8064  0004B6  22DA               	addwfc	fsr2h,f,c
  8065  0004B8  2ADE               	incf	postinc2,f,c
  8066  0004BA  0E00               	movlw	0
  8067  0004BC  22DD               	addwfc	postdec2,f,c
  8068                           
  8069                           ;stateMachine/gameController.c: 209:                 }
  8070  0004BE  EF83  F002         	goto	l663
  8071  0004C2                     l9565:
  8072                           
  8073                           ;stateMachine/gameController.c: 211:                 {;stateMachine/gameController.c: 21
      +                          3:                     g->b.dy=-g->b.dy;
  8074  0004C2  EE20 F0D3          	lfsr	2,211
  8075  0004C6  501B               	movf	checkCollision@g^0,w,c
  8076  0004C8  26D9               	addwf	fsr2l,f,c
  8077  0004CA  501C               	movf	(checkCollision@g+1)^0,w,c
  8078  0004CC  22DA               	addwfc	fsr2h,f,c
  8079  0004CE  CFDE F01D          	movff	postinc2,??_checkCollision
  8080  0004D2  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8081  0004D6  1E1D               	comf	??_checkCollision^0,f,c
  8082  0004D8  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8083  0004DA  4A1D               	infsnz	??_checkCollision^0,f,c
  8084  0004DC  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8085  0004DE  EE20 F0D3          	lfsr	2,211
  8086  0004E2  501B               	movf	checkCollision@g^0,w,c
  8087  0004E4  26D9               	addwf	fsr2l,f,c
  8088  0004E6  501C               	movf	(checkCollision@g+1)^0,w,c
  8089  0004E8  22DA               	addwfc	fsr2h,f,c
  8090  0004EA  C01D  FFDE         	movff	??_checkCollision,postinc2
  8091  0004EE  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8092                           
  8093                           ;stateMachine/gameController.c: 214:                     g->b.dx+=2;
  8094  0004F2  EE20 F0D1          	lfsr	2,209
  8095  0004F6  501B               	movf	checkCollision@g^0,w,c
  8096  0004F8  26D9               	addwf	fsr2l,f,c
  8097  0004FA  501C               	movf	(checkCollision@g+1)^0,w,c
  8098  0004FC  22DA               	addwfc	fsr2h,f,c
  8099  0004FE  0E02               	movlw	2
  8100  000500  26DE               	addwf	postinc2,f,c
  8101  000502  0E00               	movlw	0
  8102  000504  22DD               	addwfc	postdec2,f,c
  8103  000506                     l663:
  8104                           
  8105                           ;stateMachine/gameController.c: 218:                 g->s1.homeScore++;
  8106  000506  EE20 F0E9          	lfsr	2,233
  8107  00050A  501B               	movf	checkCollision@g^0,w,c
  8108  00050C  26D9               	addwf	fsr2l,f,c
  8109  00050E  501C               	movf	(checkCollision@g+1)^0,w,c
  8110  000510  22DA               	addwfc	fsr2h,f,c
  8111  000512  2ADE               	incf	postinc2,f,c
  8112  000514  0E00               	movlw	0
  8113  000516  22DD               	addwfc	postdec2,f,c
  8114  000518                     
  8115                           ;stateMachine/gameController.c: 219:                 XF_pushEvent(evRedrawScore,0);
  8116  000518  0E00               	movlw	0
  8117  00051A  6E18               	movwf	XF_pushEvent@inISR^0,c
  8118  00051C  0E0E               	movlw	14
  8119  00051E  EC7C  F02E         	call	_XF_pushEvent
  8120  000522                     l9569:
  8121                           
  8122                           ;stateMachine/gameController.c: 225:     if(g->b.y-8<=g->p2.y+10 +1)
  8123  000522  0EF8               	movlw	248
  8124  000524  6E1D               	movwf	??_checkCollision^0,c
  8125  000526  0EFF               	movlw	255
  8126  000528  6E1E               	movwf	(??_checkCollision+1)^0,c
  8127  00052A  EE20 F0CB          	lfsr	2,203
  8128  00052E  501B               	movf	checkCollision@g^0,w,c
  8129  000530  26D9               	addwf	fsr2l,f,c
  8130  000532  501C               	movf	(checkCollision@g+1)^0,w,c
  8131  000534  22DA               	addwfc	fsr2h,f,c
  8132  000536  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8133  00053A  CFDD F020          	movff	postdec2,??_checkCollision+3
  8134  00053E  501D               	movf	??_checkCollision^0,w,c
  8135  000540  261F               	addwf	(??_checkCollision+2)^0,f,c
  8136  000542  501E               	movf	(??_checkCollision+1)^0,w,c
  8137  000544  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8138  000546  EE20 F0E1          	lfsr	2,225
  8139  00054A  501B               	movf	checkCollision@g^0,w,c
  8140  00054C  26D9               	addwf	fsr2l,f,c
  8141  00054E  501C               	movf	(checkCollision@g+1)^0,w,c
  8142  000550  22DA               	addwfc	fsr2h,f,c
  8143  000552  CFDE F021          	movff	postinc2,??_checkCollision+4
  8144  000556  CFDD F022          	movff	postdec2,??_checkCollision+5
  8145  00055A  0E0B               	movlw	11
  8146  00055C  2621               	addwf	(??_checkCollision+4)^0,f,c
  8147  00055E  0E00               	movlw	0
  8148  000560  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8149  000562  501F               	movf	(??_checkCollision+2)^0,w,c
  8150  000564  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8151  000566  5020               	movf	(??_checkCollision+3)^0,w,c
  8152  000568  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8153  00056A  A0D8               	btfss	status,0,c
  8154  00056C  EFBA  F002         	goto	u6741
  8155  000570  EFBC  F002         	goto	u6740
  8156  000574                     u6741:
  8157  000574  EF46  F004         	goto	l9595
  8158  000578                     u6740:
  8159  000578                     
  8160                           ;stateMachine/gameController.c: 226:     {;stateMachine/gameController.c: 227:         i
      +                          f(g->b.x+8>g->p2.x)
  8161  000578  EE20 F0C9          	lfsr	2,201
  8162  00057C  501B               	movf	checkCollision@g^0,w,c
  8163  00057E  26D9               	addwf	fsr2l,f,c
  8164  000580  501C               	movf	(checkCollision@g+1)^0,w,c
  8165  000582  22DA               	addwfc	fsr2h,f,c
  8166  000584  CFDE F01D          	movff	postinc2,??_checkCollision
  8167  000588  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8168  00058C  0E08               	movlw	8
  8169  00058E  261D               	addwf	??_checkCollision^0,f,c
  8170  000590  0E00               	movlw	0
  8171  000592  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8172  000594  EE20 F0DF          	lfsr	2,223
  8173  000598  501B               	movf	checkCollision@g^0,w,c
  8174  00059A  26D9               	addwf	fsr2l,f,c
  8175  00059C  501C               	movf	(checkCollision@g+1)^0,w,c
  8176  00059E  22DA               	addwfc	fsr2h,f,c
  8177  0005A0  501D               	movf	??_checkCollision^0,w,c
  8178  0005A2  5CDE               	subwf	postinc2,w,c
  8179  0005A4  501E               	movf	(??_checkCollision+1)^0,w,c
  8180  0005A6  58DE               	subwfb	postinc2,w,c
  8181  0005A8  B0D8               	btfsc	status,0,c
  8182  0005AA  EFD9  F002         	goto	u6751
  8183  0005AE  EFDB  F002         	goto	u6750
  8184  0005B2                     u6751:
  8185  0005B2  EF46  F004         	goto	l9595
  8186  0005B6                     u6750:
  8187  0005B6                     
  8188                           ;stateMachine/gameController.c: 228:         {;stateMachine/gameController.c: 229:      
      +                                 if(g->b.x-8<g->p2.x+50)
  8189  0005B6  EE20 F0DF          	lfsr	2,223
  8190  0005BA  501B               	movf	checkCollision@g^0,w,c
  8191  0005BC  26D9               	addwf	fsr2l,f,c
  8192  0005BE  501C               	movf	(checkCollision@g+1)^0,w,c
  8193  0005C0  22DA               	addwfc	fsr2h,f,c
  8194  0005C2  CFDE F01D          	movff	postinc2,??_checkCollision
  8195  0005C6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8196  0005CA  0E32               	movlw	50
  8197  0005CC  261D               	addwf	??_checkCollision^0,f,c
  8198  0005CE  0E00               	movlw	0
  8199  0005D0  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8200  0005D2  0EF8               	movlw	248
  8201  0005D4  6E1F               	movwf	(??_checkCollision+2)^0,c
  8202  0005D6  0EFF               	movlw	255
  8203  0005D8  6E20               	movwf	(??_checkCollision+3)^0,c
  8204  0005DA  EE20 F0C9          	lfsr	2,201
  8205  0005DE  501B               	movf	checkCollision@g^0,w,c
  8206  0005E0  26D9               	addwf	fsr2l,f,c
  8207  0005E2  501C               	movf	(checkCollision@g+1)^0,w,c
  8208  0005E4  22DA               	addwfc	fsr2h,f,c
  8209  0005E6  CFDE F021          	movff	postinc2,??_checkCollision+4
  8210  0005EA  CFDD F022          	movff	postdec2,??_checkCollision+5
  8211  0005EE  501F               	movf	(??_checkCollision+2)^0,w,c
  8212  0005F0  2621               	addwf	(??_checkCollision+4)^0,f,c
  8213  0005F2  5020               	movf	(??_checkCollision+3)^0,w,c
  8214  0005F4  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8215  0005F6  501D               	movf	??_checkCollision^0,w,c
  8216  0005F8  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8217  0005FA  501E               	movf	(??_checkCollision+1)^0,w,c
  8218  0005FC  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8219  0005FE  B0D8               	btfsc	status,0,c
  8220  000600  EF04  F003         	goto	u6761
  8221  000604  EF06  F003         	goto	u6760
  8222  000608                     u6761:
  8223  000608  EF46  F004         	goto	l9595
  8224  00060C                     u6760:
  8225  00060C                     
  8226                           ;stateMachine/gameController.c: 230:             {;stateMachine/gameController.c: 231:  
      +                                         if(g->b.x-g->p2.x<10)
  8227  00060C  EE20 F0DF          	lfsr	2,223
  8228  000610  501B               	movf	checkCollision@g^0,w,c
  8229  000612  26D9               	addwf	fsr2l,f,c
  8230  000614  501C               	movf	(checkCollision@g+1)^0,w,c
  8231  000616  22DA               	addwfc	fsr2h,f,c
  8232  000618  CFDE F01D          	movff	postinc2,??_checkCollision
  8233  00061C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8234  000620  EE20 F0C9          	lfsr	2,201
  8235  000624  501B               	movf	checkCollision@g^0,w,c
  8236  000626  26D9               	addwf	fsr2l,f,c
  8237  000628  501C               	movf	(checkCollision@g+1)^0,w,c
  8238  00062A  22DA               	addwfc	fsr2h,f,c
  8239  00062C  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8240  000630  CFDD F020          	movff	postdec2,??_checkCollision+3
  8241  000634  501D               	movf	??_checkCollision^0,w,c
  8242  000636  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8243  000638  501E               	movf	(??_checkCollision+1)^0,w,c
  8244  00063A  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8245  00063C  5020               	movf	(??_checkCollision+3)^0,w,c
  8246  00063E  E107               	bnz	u6771
  8247  000640  0E0A               	movlw	10
  8248  000642  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8249  000644  B0D8               	btfsc	status,0,c
  8250  000646  EF27  F003         	goto	u6771
  8251  00064A  EF29  F003         	goto	u6770
  8252  00064E                     u6771:
  8253  00064E  EF4D  F003         	goto	l9579
  8254  000652                     u6770:
  8255  000652                     
  8256                           ;stateMachine/gameController.c: 232:                 {;stateMachine/gameController.c: 23
      +                          4:                     g->b.dy=-g->b.dy;
  8257  000652  EE20 F0D3          	lfsr	2,211
  8258  000656  501B               	movf	checkCollision@g^0,w,c
  8259  000658  26D9               	addwf	fsr2l,f,c
  8260  00065A  501C               	movf	(checkCollision@g+1)^0,w,c
  8261  00065C  22DA               	addwfc	fsr2h,f,c
  8262  00065E  CFDE F01D          	movff	postinc2,??_checkCollision
  8263  000662  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8264  000666  1E1D               	comf	??_checkCollision^0,f,c
  8265  000668  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8266  00066A  4A1D               	infsnz	??_checkCollision^0,f,c
  8267  00066C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8268  00066E  EE20 F0D3          	lfsr	2,211
  8269  000672  501B               	movf	checkCollision@g^0,w,c
  8270  000674  26D9               	addwf	fsr2l,f,c
  8271  000676  501C               	movf	(checkCollision@g+1)^0,w,c
  8272  000678  22DA               	addwfc	fsr2h,f,c
  8273  00067A  C01D  FFDE         	movff	??_checkCollision,postinc2
  8274  00067E  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8275                           
  8276                           ;stateMachine/gameController.c: 235:                     g->b.dx-=2;
  8277  000682  EE20 F0D1          	lfsr	2,209
  8278  000686  501B               	movf	checkCollision@g^0,w,c
  8279  000688  26D9               	addwf	fsr2l,f,c
  8280  00068A  501C               	movf	(checkCollision@g+1)^0,w,c
  8281  00068C  22DA               	addwfc	fsr2h,f,c
  8282  00068E  0EFE               	movlw	254
  8283  000690  26DE               	addwf	postinc2,f,c
  8284  000692  0EFF               	movlw	255
  8285  000694  22DD               	addwfc	postdec2,f,c
  8286                           
  8287                           ;stateMachine/gameController.c: 236:                 }
  8288  000696  EF38  F004         	goto	l674
  8289  00069A                     l9579:
  8290  00069A  EE20 F0DF          	lfsr	2,223
  8291  00069E  501B               	movf	checkCollision@g^0,w,c
  8292  0006A0  26D9               	addwf	fsr2l,f,c
  8293  0006A2  501C               	movf	(checkCollision@g+1)^0,w,c
  8294  0006A4  22DA               	addwfc	fsr2h,f,c
  8295  0006A6  CFDE F01D          	movff	postinc2,??_checkCollision
  8296  0006AA  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8297  0006AE  EE20 F0C9          	lfsr	2,201
  8298  0006B2  501B               	movf	checkCollision@g^0,w,c
  8299  0006B4  26D9               	addwf	fsr2l,f,c
  8300  0006B6  501C               	movf	(checkCollision@g+1)^0,w,c
  8301  0006B8  22DA               	addwfc	fsr2h,f,c
  8302  0006BA  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8303  0006BE  CFDD F020          	movff	postdec2,??_checkCollision+3
  8304  0006C2  501D               	movf	??_checkCollision^0,w,c
  8305  0006C4  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8306  0006C6  501E               	movf	(??_checkCollision+1)^0,w,c
  8307  0006C8  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8308  0006CA  5020               	movf	(??_checkCollision+3)^0,w,c
  8309  0006CC  E107               	bnz	u6781
  8310  0006CE  0E14               	movlw	20
  8311  0006D0  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8312  0006D2  B0D8               	btfsc	status,0,c
  8313  0006D4  EF6E  F003         	goto	u6781
  8314  0006D8  EF70  F003         	goto	u6780
  8315  0006DC                     u6781:
  8316  0006DC  EF93  F003         	goto	l9583
  8317  0006E0                     u6780:
  8318  0006E0                     
  8319                           ;stateMachine/gameController.c: 238:                 {;stateMachine/gameController.c: 24
      +                          0:                     g->b.dy=-g->b.dy;
  8320  0006E0  EE20 F0D3          	lfsr	2,211
  8321  0006E4  501B               	movf	checkCollision@g^0,w,c
  8322  0006E6  26D9               	addwf	fsr2l,f,c
  8323  0006E8  501C               	movf	(checkCollision@g+1)^0,w,c
  8324  0006EA  22DA               	addwfc	fsr2h,f,c
  8325  0006EC  CFDE F01D          	movff	postinc2,??_checkCollision
  8326  0006F0  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8327  0006F4  1E1D               	comf	??_checkCollision^0,f,c
  8328  0006F6  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8329  0006F8  4A1D               	infsnz	??_checkCollision^0,f,c
  8330  0006FA  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8331  0006FC  EE20 F0D3          	lfsr	2,211
  8332  000700  501B               	movf	checkCollision@g^0,w,c
  8333  000702  26D9               	addwf	fsr2l,f,c
  8334  000704  501C               	movf	(checkCollision@g+1)^0,w,c
  8335  000706  22DA               	addwfc	fsr2h,f,c
  8336  000708  C01D  FFDE         	movff	??_checkCollision,postinc2
  8337  00070C  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8338                           
  8339                           ;stateMachine/gameController.c: 241:                     g->b.dx-=1;
  8340  000710  EE20 F0D1          	lfsr	2,209
  8341  000714  501B               	movf	checkCollision@g^0,w,c
  8342  000716  26D9               	addwf	fsr2l,f,c
  8343  000718  501C               	movf	(checkCollision@g+1)^0,w,c
  8344  00071A  22DA               	addwfc	fsr2h,f,c
  8345  00071C  06DE               	decf	postinc2,f,c
  8346  00071E  0E00               	movlw	0
  8347  000720  5ADD               	subwfb	postdec2,f,c
  8348                           
  8349                           ;stateMachine/gameController.c: 242:                 }
  8350  000722  EF38  F004         	goto	l674
  8351  000726                     l9583:
  8352  000726  EE20 F0DF          	lfsr	2,223
  8353  00072A  501B               	movf	checkCollision@g^0,w,c
  8354  00072C  26D9               	addwf	fsr2l,f,c
  8355  00072E  501C               	movf	(checkCollision@g+1)^0,w,c
  8356  000730  22DA               	addwfc	fsr2h,f,c
  8357  000732  CFDE F01D          	movff	postinc2,??_checkCollision
  8358  000736  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8359  00073A  EE20 F0C9          	lfsr	2,201
  8360  00073E  501B               	movf	checkCollision@g^0,w,c
  8361  000740  26D9               	addwf	fsr2l,f,c
  8362  000742  501C               	movf	(checkCollision@g+1)^0,w,c
  8363  000744  22DA               	addwfc	fsr2h,f,c
  8364  000746  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8365  00074A  CFDD F020          	movff	postdec2,??_checkCollision+3
  8366  00074E  501D               	movf	??_checkCollision^0,w,c
  8367  000750  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8368  000752  501E               	movf	(??_checkCollision+1)^0,w,c
  8369  000754  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8370  000756  5020               	movf	(??_checkCollision+3)^0,w,c
  8371  000758  E107               	bnz	u6791
  8372  00075A  0E1E               	movlw	30
  8373  00075C  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8374  00075E  B0D8               	btfsc	status,0,c
  8375  000760  EFB4  F003         	goto	u6791
  8376  000764  EFB6  F003         	goto	u6790
  8377  000768                     u6791:
  8378  000768  EFD0  F003         	goto	l9587
  8379  00076C                     u6790:
  8380  00076C                     
  8381                           ;stateMachine/gameController.c: 247:                     g->b.dy=-g->b.dy;
  8382  00076C  EE20 F0D3          	lfsr	2,211
  8383  000770  501B               	movf	checkCollision@g^0,w,c
  8384  000772  26D9               	addwf	fsr2l,f,c
  8385  000774  501C               	movf	(checkCollision@g+1)^0,w,c
  8386  000776  22DA               	addwfc	fsr2h,f,c
  8387  000778  CFDE F01D          	movff	postinc2,??_checkCollision
  8388  00077C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8389  000780  1E1D               	comf	??_checkCollision^0,f,c
  8390  000782  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8391  000784  4A1D               	infsnz	??_checkCollision^0,f,c
  8392  000786  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8393  000788  EE20 F0D3          	lfsr	2,211
  8394  00078C  501B               	movf	checkCollision@g^0,w,c
  8395  00078E  26D9               	addwf	fsr2l,f,c
  8396  000790  501C               	movf	(checkCollision@g+1)^0,w,c
  8397  000792  22DA               	addwfc	fsr2h,f,c
  8398  000794  C01D  FFDE         	movff	??_checkCollision,postinc2
  8399  000798  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8400                           
  8401                           ;stateMachine/gameController.c: 248:                 }
  8402  00079C  EF38  F004         	goto	l674
  8403  0007A0                     l9587:
  8404  0007A0  EE20 F0DF          	lfsr	2,223
  8405  0007A4  501B               	movf	checkCollision@g^0,w,c
  8406  0007A6  26D9               	addwf	fsr2l,f,c
  8407  0007A8  501C               	movf	(checkCollision@g+1)^0,w,c
  8408  0007AA  22DA               	addwfc	fsr2h,f,c
  8409  0007AC  CFDE F01D          	movff	postinc2,??_checkCollision
  8410  0007B0  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8411  0007B4  EE20 F0C9          	lfsr	2,201
  8412  0007B8  501B               	movf	checkCollision@g^0,w,c
  8413  0007BA  26D9               	addwf	fsr2l,f,c
  8414  0007BC  501C               	movf	(checkCollision@g+1)^0,w,c
  8415  0007BE  22DA               	addwfc	fsr2h,f,c
  8416  0007C0  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8417  0007C4  CFDD F020          	movff	postdec2,??_checkCollision+3
  8418  0007C8  501D               	movf	??_checkCollision^0,w,c
  8419  0007CA  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8420  0007CC  501E               	movf	(??_checkCollision+1)^0,w,c
  8421  0007CE  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8422  0007D0  5020               	movf	(??_checkCollision+3)^0,w,c
  8423  0007D2  E107               	bnz	u6801
  8424  0007D4  0E28               	movlw	40
  8425  0007D6  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8426  0007D8  B0D8               	btfsc	status,0,c
  8427  0007DA  EFF1  F003         	goto	u6801
  8428  0007DE  EFF3  F003         	goto	u6800
  8429  0007E2                     u6801:
  8430  0007E2  EF16  F004         	goto	l9591
  8431  0007E6                     u6800:
  8432  0007E6                     
  8433                           ;stateMachine/gameController.c: 250:                 {;stateMachine/gameController.c: 25
      +                          2:                     g->b.dy=-g->b.dy;
  8434  0007E6  EE20 F0D3          	lfsr	2,211
  8435  0007EA  501B               	movf	checkCollision@g^0,w,c
  8436  0007EC  26D9               	addwf	fsr2l,f,c
  8437  0007EE  501C               	movf	(checkCollision@g+1)^0,w,c
  8438  0007F0  22DA               	addwfc	fsr2h,f,c
  8439  0007F2  CFDE F01D          	movff	postinc2,??_checkCollision
  8440  0007F6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8441  0007FA  1E1D               	comf	??_checkCollision^0,f,c
  8442  0007FC  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8443  0007FE  4A1D               	infsnz	??_checkCollision^0,f,c
  8444  000800  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8445  000802  EE20 F0D3          	lfsr	2,211
  8446  000806  501B               	movf	checkCollision@g^0,w,c
  8447  000808  26D9               	addwf	fsr2l,f,c
  8448  00080A  501C               	movf	(checkCollision@g+1)^0,w,c
  8449  00080C  22DA               	addwfc	fsr2h,f,c
  8450  00080E  C01D  FFDE         	movff	??_checkCollision,postinc2
  8451  000812  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8452                           
  8453                           ;stateMachine/gameController.c: 253:                     g->b.dx+=1;
  8454  000816  EE20 F0D1          	lfsr	2,209
  8455  00081A  501B               	movf	checkCollision@g^0,w,c
  8456  00081C  26D9               	addwf	fsr2l,f,c
  8457  00081E  501C               	movf	(checkCollision@g+1)^0,w,c
  8458  000820  22DA               	addwfc	fsr2h,f,c
  8459  000822  2ADE               	incf	postinc2,f,c
  8460  000824  0E00               	movlw	0
  8461  000826  22DD               	addwfc	postdec2,f,c
  8462                           
  8463                           ;stateMachine/gameController.c: 254:                 }
  8464  000828  EF38  F004         	goto	l674
  8465  00082C                     l9591:
  8466                           
  8467                           ;stateMachine/gameController.c: 256:                 {;stateMachine/gameController.c: 25
      +                          8:                     g->b.dy=-g->b.dy;
  8468  00082C  EE20 F0D3          	lfsr	2,211
  8469  000830  501B               	movf	checkCollision@g^0,w,c
  8470  000832  26D9               	addwf	fsr2l,f,c
  8471  000834  501C               	movf	(checkCollision@g+1)^0,w,c
  8472  000836  22DA               	addwfc	fsr2h,f,c
  8473  000838  CFDE F01D          	movff	postinc2,??_checkCollision
  8474  00083C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8475  000840  1E1D               	comf	??_checkCollision^0,f,c
  8476  000842  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8477  000844  4A1D               	infsnz	??_checkCollision^0,f,c
  8478  000846  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8479  000848  EE20 F0D3          	lfsr	2,211
  8480  00084C  501B               	movf	checkCollision@g^0,w,c
  8481  00084E  26D9               	addwf	fsr2l,f,c
  8482  000850  501C               	movf	(checkCollision@g+1)^0,w,c
  8483  000852  22DA               	addwfc	fsr2h,f,c
  8484  000854  C01D  FFDE         	movff	??_checkCollision,postinc2
  8485  000858  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8486                           
  8487                           ;stateMachine/gameController.c: 259:                     g->b.dx+=2;
  8488  00085C  EE20 F0D1          	lfsr	2,209
  8489  000860  501B               	movf	checkCollision@g^0,w,c
  8490  000862  26D9               	addwf	fsr2l,f,c
  8491  000864  501C               	movf	(checkCollision@g+1)^0,w,c
  8492  000866  22DA               	addwfc	fsr2h,f,c
  8493  000868  0E02               	movlw	2
  8494  00086A  26DE               	addwf	postinc2,f,c
  8495  00086C  0E00               	movlw	0
  8496  00086E  22DD               	addwfc	postdec2,f,c
  8497  000870                     l674:
  8498                           
  8499                           ;stateMachine/gameController.c: 262:                 g->s1.awayScore++;
  8500  000870  EE20 F0EB          	lfsr	2,235
  8501  000874  501B               	movf	checkCollision@g^0,w,c
  8502  000876  26D9               	addwf	fsr2l,f,c
  8503  000878  501C               	movf	(checkCollision@g+1)^0,w,c
  8504  00087A  22DA               	addwfc	fsr2h,f,c
  8505  00087C  2ADE               	incf	postinc2,f,c
  8506  00087E  0E00               	movlw	0
  8507  000880  22DD               	addwfc	postdec2,f,c
  8508  000882                     
  8509                           ;stateMachine/gameController.c: 263:                 XF_pushEvent(evRedrawScore,0);
  8510  000882  0E00               	movlw	0
  8511  000884  6E18               	movwf	XF_pushEvent@inISR^0,c
  8512  000886  0E0E               	movlw	14
  8513  000888  EC7C  F02E         	call	_XF_pushEvent
  8514  00088C                     l9595:
  8515                           
  8516                           ;stateMachine/gameController.c: 269:     if(g->b.y-8<=g->p2.y-5)
  8517  00088C  0EF8               	movlw	248
  8518  00088E  6E1D               	movwf	??_checkCollision^0,c
  8519  000890  0EFF               	movlw	255
  8520  000892  6E1E               	movwf	(??_checkCollision+1)^0,c
  8521  000894  EE20 F0CB          	lfsr	2,203
  8522  000898  501B               	movf	checkCollision@g^0,w,c
  8523  00089A  26D9               	addwf	fsr2l,f,c
  8524  00089C  501C               	movf	(checkCollision@g+1)^0,w,c
  8525  00089E  22DA               	addwfc	fsr2h,f,c
  8526  0008A0  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8527  0008A4  CFDD F020          	movff	postdec2,??_checkCollision+3
  8528  0008A8  501D               	movf	??_checkCollision^0,w,c
  8529  0008AA  261F               	addwf	(??_checkCollision+2)^0,f,c
  8530  0008AC  501E               	movf	(??_checkCollision+1)^0,w,c
  8531  0008AE  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8532  0008B0  0EFB               	movlw	251
  8533  0008B2  6E21               	movwf	(??_checkCollision+4)^0,c
  8534  0008B4  0EFF               	movlw	255
  8535  0008B6  6E22               	movwf	(??_checkCollision+5)^0,c
  8536  0008B8  EE20 F0E1          	lfsr	2,225
  8537  0008BC  501B               	movf	checkCollision@g^0,w,c
  8538  0008BE  26D9               	addwf	fsr2l,f,c
  8539  0008C0  501C               	movf	(checkCollision@g+1)^0,w,c
  8540  0008C2  22DA               	addwfc	fsr2h,f,c
  8541  0008C4  CFDE F023          	movff	postinc2,??_checkCollision+6
  8542  0008C8  CFDD F024          	movff	postdec2,??_checkCollision+7
  8543  0008CC  5021               	movf	(??_checkCollision+4)^0,w,c
  8544  0008CE  2623               	addwf	(??_checkCollision+6)^0,f,c
  8545  0008D0  5022               	movf	(??_checkCollision+5)^0,w,c
  8546  0008D2  2224               	addwfc	(??_checkCollision+7)^0,f,c
  8547  0008D4  501F               	movf	(??_checkCollision+2)^0,w,c
  8548  0008D6  5C23               	subwf	(??_checkCollision+6)^0,w,c
  8549  0008D8  5020               	movf	(??_checkCollision+3)^0,w,c
  8550  0008DA  5824               	subwfb	(??_checkCollision+7)^0,w,c
  8551  0008DC  A0D8               	btfss	status,0,c
  8552  0008DE  EF73  F004         	goto	u6811
  8553  0008E2  EF75  F004         	goto	u6810
  8554  0008E6                     u6811:
  8555  0008E6  EF86  F004         	goto	l9603
  8556  0008EA                     u6810:
  8557  0008EA                     
  8558                           ;stateMachine/gameController.c: 270:     {;stateMachine/gameController.c: 272:         X
      +                          F_pushEvent(evEndGame,0);
  8559  0008EA  0E00               	movlw	0
  8560  0008EC  6E18               	movwf	XF_pushEvent@inISR^0,c
  8561  0008EE  0E09               	movlw	9
  8562  0008F0  EC7C  F02E         	call	_XF_pushEvent
  8563  0008F4                     
  8564                           ;stateMachine/gameController.c: 273:         g->s1.awayScore=0;
  8565  0008F4  EE20 F0EB          	lfsr	2,235
  8566  0008F8  501B               	movf	checkCollision@g^0,w,c
  8567  0008FA  26D9               	addwf	fsr2l,f,c
  8568  0008FC  501C               	movf	(checkCollision@g+1)^0,w,c
  8569  0008FE  22DA               	addwfc	fsr2h,f,c
  8570  000900  0E00               	movlw	0
  8571  000902  6EDE               	movwf	postinc2,c
  8572  000904  0E00               	movlw	0
  8573  000906  6EDD               	movwf	postdec2,c
  8574  000908                     
  8575                           ;stateMachine/gameController.c: 274:         gameStateMachine=ENDGAME;
  8576  000908  0E04               	movlw	4
  8577  00090A  6E4D               	movwf	_gameStateMachine^0,c
  8578  00090C                     l9603:
  8579                           
  8580                           ;stateMachine/gameController.c: 276:     if(g->b.y+8>=g->p1.y+5)
  8581  00090C  EE20 F0D7          	lfsr	2,215
  8582  000910  501B               	movf	checkCollision@g^0,w,c
  8583  000912  26D9               	addwf	fsr2l,f,c
  8584  000914  501C               	movf	(checkCollision@g+1)^0,w,c
  8585  000916  22DA               	addwfc	fsr2h,f,c
  8586  000918  CFDE F01D          	movff	postinc2,??_checkCollision
  8587  00091C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8588  000920  0E05               	movlw	5
  8589  000922  261D               	addwf	??_checkCollision^0,f,c
  8590  000924  0E00               	movlw	0
  8591  000926  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8592  000928  EE20 F0CB          	lfsr	2,203
  8593  00092C  501B               	movf	checkCollision@g^0,w,c
  8594  00092E  26D9               	addwf	fsr2l,f,c
  8595  000930  501C               	movf	(checkCollision@g+1)^0,w,c
  8596  000932  22DA               	addwfc	fsr2h,f,c
  8597  000934  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8598  000938  CFDD F020          	movff	postdec2,??_checkCollision+3
  8599  00093C  0E08               	movlw	8
  8600  00093E  261F               	addwf	(??_checkCollision+2)^0,f,c
  8601  000940  0E00               	movlw	0
  8602  000942  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8603  000944  501D               	movf	??_checkCollision^0,w,c
  8604  000946  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8605  000948  501E               	movf	(??_checkCollision+1)^0,w,c
  8606  00094A  5820               	subwfb	(??_checkCollision+3)^0,w,c
  8607  00094C  A0D8               	btfss	status,0,c
  8608  00094E  EFAB  F004         	goto	u6821
  8609  000952  EFAD  F004         	goto	u6820
  8610  000956                     u6821:
  8611  000956  EFBE  F004         	goto	l683
  8612  00095A                     u6820:
  8613  00095A                     
  8614                           ;stateMachine/gameController.c: 277:     {;stateMachine/gameController.c: 279:         X
      +                          F_pushEvent(evEndGame,0);
  8615  00095A  0E00               	movlw	0
  8616  00095C  6E18               	movwf	XF_pushEvent@inISR^0,c
  8617  00095E  0E09               	movlw	9
  8618  000960  EC7C  F02E         	call	_XF_pushEvent
  8619  000964                     
  8620                           ;stateMachine/gameController.c: 280:         g->s1.homeScore=0;
  8621  000964  EE20 F0E9          	lfsr	2,233
  8622  000968  501B               	movf	checkCollision@g^0,w,c
  8623  00096A  26D9               	addwf	fsr2l,f,c
  8624  00096C  501C               	movf	(checkCollision@g+1)^0,w,c
  8625  00096E  22DA               	addwfc	fsr2h,f,c
  8626  000970  0E00               	movlw	0
  8627  000972  6EDE               	movwf	postinc2,c
  8628  000974  0E00               	movlw	0
  8629  000976  6EDD               	movwf	postdec2,c
  8630  000978                     
  8631                           ;stateMachine/gameController.c: 281:         gameStateMachine=ENDGAME;
  8632  000978  0E04               	movlw	4
  8633  00097A  6E4D               	movwf	_gameStateMachine^0,c
  8634  00097C                     l683:
  8635  00097C  0012               	return		;funcret
  8636  00097E                     __end_of_checkCollision:
  8637                           	callstack 0
  8638                           
  8639 ;; *************** function _XF_pushEvent *****************
  8640 ;; Defined at:
  8641 ;;		line 49 in file "xf/xf.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  ev              1    wreg     unsigned char 
  8644 ;;  inISR           1   23[COMRAM] _Bool 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  ev              1   24[COMRAM] unsigned char 
  8647 ;;  temp            1   25[COMRAM] unsigned char 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      _Bool 
  8650 ;; Registers used:
  8651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8657 ;;      Params:         1       0       0       0       0       0       0
  8658 ;;      Locals:         2       0       0       0       0       0       0
  8659 ;;      Temps:          0       0       0       0       0       0       0
  8660 ;;      Totals:         3       0       0       0       0       0       0
  8661 ;;Total ram usage:        3 bytes
  8662 ;; Hardware stack levels used: 1
  8663 ;; Hardware stack levels required when called: 5
  8664 ;; This function calls:
  8665 ;;		_ENTERCRITICAL
  8666 ;;		_LEAVECRITICAL
  8667 ;;		___awmod
  8668 ;; This function is called by:
  8669 ;;		_gameControllerController
  8670 ;;		_moovePaddle
  8671 ;;		_mooveBall
  8672 ;;		_checkCollision
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text29
  8677  005CF8                     __ptext29:
  8678                           	callstack 0
  8679  005CF8                     _XF_pushEvent:
  8680                           	callstack 20
  8681                           
  8682                           ;incstack = 0
  8683                           ;XF_pushEvent@ev stored from wreg
  8684  005CF8  6E19               	movwf	XF_pushEvent@ev^0,c
  8685  005CFA                     
  8686                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
  8687  005CFA  5018               	movf	XF_pushEvent@inISR^0,w,c
  8688  005CFC  ECB2  F031         	call	_ENTERCRITICAL
  8689  005D00                     
  8690                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
  8691  005D00  0E01               	movlw	1
  8692  005D02  0100               	movlb	0	; () banked
  8693  005D04  25D9               	addwf	(_theXF+36)& (0+255),w,b
  8694  005D06  6E12               	movwf	___awmod@dividend^0,c
  8695  005D08  6A13               	clrf	(___awmod@dividend+1)^0,c
  8696  005D0A  0E00               	movlw	0
  8697  005D0C  2213               	addwfc	(___awmod@dividend+1)^0,f,c
  8698  005D0E  0E00               	movlw	0
  8699  005D10  6E15               	movwf	(___awmod@divisor+1)^0,c
  8700  005D12  0E0C               	movlw	12
  8701  005D14  6E14               	movwf	___awmod@divisor^0,c
  8702  005D16  ECC6  F02B         	call	___awmod	;wreg free
  8703  005D1A  5012               	movf	?___awmod^0,w,c
  8704  005D1C  6E1A               	movwf	XF_pushEvent@temp^0,c
  8705  005D1E                     
  8706                           ;xf/xf.c: 55:     if(temp == theXF.out)
  8707  005D1E  501A               	movf	XF_pushEvent@temp^0,w,c
  8708  005D20  0100               	movlb	0	; () banked
  8709  005D22  19DA               	xorwf	(_theXF+37)& (0+255),w,b
  8710  005D24  A4D8               	btfss	status,2,c
  8711  005D26  EF97  F02E         	goto	u6481
  8712  005D2A  EF99  F02E         	goto	u6480
  8713  005D2E                     u6481:
  8714  005D2E  EF9F  F02E         	goto	l9239
  8715  005D32                     u6480:
  8716  005D32                     
  8717                           ; BSR set to: 0
  8718                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
  8719  005D32  5018               	movf	XF_pushEvent@inISR^0,w,c
  8720  005D34  ECA7  F031         	call	_LEAVECRITICAL
  8721  005D38                     
  8722                           ;xf/xf.c: 58:       return 0;
  8723  005D38  0E00               	movlw	0
  8724  005D3A  EFAD  F02E         	goto	l728
  8725  005D3E                     l9239:
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
  8729  005D3E  0ECD               	movlw	low (_theXF+24)
  8730  005D40  25D9               	addwf	(_theXF+36)& (0+255),w,b
  8731  005D42  6ED9               	movwf	fsr2l,c
  8732  005D44  6ADA               	clrf	fsr2h,c
  8733  005D46  0E00               	movlw	high (_theXF+24)
  8734  005D48  22DA               	addwfc	fsr2h,f,c
  8735  005D4A  C019  FFDF         	movff	XF_pushEvent@ev,indf2
  8736  005D4E                     
  8737                           ; BSR set to: 0
  8738                           ;xf/xf.c: 61:     theXF.in = temp;
  8739  005D4E  C01A  F0D9         	movff	XF_pushEvent@temp,_theXF+36
  8740  005D52                     
  8741                           ; BSR set to: 0
  8742                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
  8743  005D52  5018               	movf	XF_pushEvent@inISR^0,w,c
  8744  005D54  ECA7  F031         	call	_LEAVECRITICAL
  8745  005D58                     
  8746                           ;xf/xf.c: 63:     return 1;
  8747  005D58  0E01               	movlw	1
  8748  005D5A                     l728:
  8749  005D5A  0012               	return		;funcret
  8750  005D5C                     __end_of_XF_pushEvent:
  8751                           	callstack 0
  8752                           
  8753 ;; *************** function _Ball_Update *****************
  8754 ;; Defined at:
  8755 ;;		line 12 in file "class/ball.c"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;  b               2   17[COMRAM] PTR struct Ball
  8758 ;;		 -> g1(239), 
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;		None
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8770 ;;      Params:         2       0       0       0       0       0       0
  8771 ;;      Locals:         0       0       0       0       0       0       0
  8772 ;;      Temps:          4       0       0       0       0       0       0
  8773 ;;      Totals:         6       0       0       0       0       0       0
  8774 ;;Total ram usage:        6 bytes
  8775 ;; Hardware stack levels used: 1
  8776 ;; Hardware stack levels required when called: 4
  8777 ;; This function calls:
  8778 ;;		Nothing
  8779 ;; This function is called by:
  8780 ;;		_mooveBall
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text30
  8785  005A1E                     __ptext30:
  8786                           	callstack 0
  8787  005A1E                     _Ball_Update:
  8788                           	callstack 21
  8789  005A1E                     
  8790                           ;class/ball.c: 12: void Ball_Update(struct Ball* b);class/ball.c: 13: {;class/ball.c: 14
      +                          :     b->x=b->x+b->dx;
  8791  005A1E  EE20 F008          	lfsr	2,8
  8792  005A22  5012               	movf	Ball_Update@b^0,w,c
  8793  005A24  26D9               	addwf	fsr2l,f,c
  8794  005A26  5013               	movf	(Ball_Update@b+1)^0,w,c
  8795  005A28  22DA               	addwfc	fsr2h,f,c
  8796  005A2A  CFDE F014          	movff	postinc2,??_Ball_Update
  8797  005A2E  CFDD F015          	movff	postdec2,??_Ball_Update+1
  8798  005A32  C012  FFD9         	movff	Ball_Update@b,fsr2l
  8799  005A36  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
  8800  005A3A  CFDE F016          	movff	postinc2,??_Ball_Update+2
  8801  005A3E  CFDD F017          	movff	postdec2,??_Ball_Update+3
  8802  005A42  5014               	movf	??_Ball_Update^0,w,c
  8803  005A44  2616               	addwf	(??_Ball_Update+2)^0,f,c
  8804  005A46  5015               	movf	(??_Ball_Update+1)^0,w,c
  8805  005A48  2217               	addwfc	(??_Ball_Update+3)^0,f,c
  8806  005A4A  C012  FFD9         	movff	Ball_Update@b,fsr2l
  8807  005A4E  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
  8808  005A52  C016  FFDE         	movff	??_Ball_Update+2,postinc2
  8809  005A56  C017  FFDD         	movff	??_Ball_Update+3,postdec2
  8810                           
  8811                           ;class/ball.c: 15:     b->y=b->y+b->dy;
  8812  005A5A  EE20 F00A          	lfsr	2,10
  8813  005A5E  5012               	movf	Ball_Update@b^0,w,c
  8814  005A60  26D9               	addwf	fsr2l,f,c
  8815  005A62  5013               	movf	(Ball_Update@b+1)^0,w,c
  8816  005A64  22DA               	addwfc	fsr2h,f,c
  8817  005A66  CFDE F014          	movff	postinc2,??_Ball_Update
  8818  005A6A  CFDD F015          	movff	postdec2,??_Ball_Update+1
  8819  005A6E  EE20 F002          	lfsr	2,2
  8820  005A72  5012               	movf	Ball_Update@b^0,w,c
  8821  005A74  26D9               	addwf	fsr2l,f,c
  8822  005A76  5013               	movf	(Ball_Update@b+1)^0,w,c
  8823  005A78  22DA               	addwfc	fsr2h,f,c
  8824  005A7A  CFDE F016          	movff	postinc2,??_Ball_Update+2
  8825  005A7E  CFDD F017          	movff	postdec2,??_Ball_Update+3
  8826  005A82  5014               	movf	??_Ball_Update^0,w,c
  8827  005A84  2616               	addwf	(??_Ball_Update+2)^0,f,c
  8828  005A86  5015               	movf	(??_Ball_Update+1)^0,w,c
  8829  005A88  2217               	addwfc	(??_Ball_Update+3)^0,f,c
  8830  005A8A  EE20 F002          	lfsr	2,2
  8831  005A8E  5012               	movf	Ball_Update@b^0,w,c
  8832  005A90  26D9               	addwf	fsr2l,f,c
  8833  005A92  5013               	movf	(Ball_Update@b+1)^0,w,c
  8834  005A94  22DA               	addwfc	fsr2h,f,c
  8835  005A96  C016  FFDE         	movff	??_Ball_Update+2,postinc2
  8836  005A9A  C017  FFDD         	movff	??_Ball_Update+3,postdec2
  8837  005A9E  0012               	return		;funcret
  8838  005AA0                     __end_of_Ball_Update:
  8839                           	callstack 0
  8840                           
  8841 ;; *************** function _backlightController *****************
  8842 ;; Defined at:
  8843 ;;		line 286 in file "stateMachine/gameController.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  g               2   23[COMRAM] PTR struct GameParameter
  8846 ;;		 -> g1(239), 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8858 ;;      Params:         2       0       0       0       0       0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0
  8860 ;;      Temps:          2       0       0       0       0       0       0
  8861 ;;      Totals:         4       0       0       0       0       0       0
  8862 ;;Total ram usage:        4 bytes
  8863 ;; Hardware stack levels used: 1
  8864 ;; Hardware stack levels required when called: 5
  8865 ;; This function calls:
  8866 ;;		_GameParameters_setBackLight
  8867 ;; This function is called by:
  8868 ;;		_gameControllerController
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text31
  8873  001938                     __ptext31:
  8874                           	callstack 0
  8875  001938                     _backlightController:
  8876                           	callstack 21
  8877  001938                     
  8878                           ;stateMachine/gameController.c: 286: void backlightController(GameParameters* g);stateMa
      +                          chine/gameController.c: 287: {;stateMachine/gameController.c: 288:     if(((g->x)>=50)&&
      +                          ((g->x)<64))
  8879  001938  EE20 F004          	lfsr	2,4
  8880  00193C  5018               	movf	backlightController@g^0,w,c
  8881  00193E  26D9               	addwf	fsr2l,f,c
  8882  001940  5019               	movf	(backlightController@g+1)^0,w,c
  8883  001942  22DA               	addwfc	fsr2h,f,c
  8884  001944  0E01               	movlw	1
  8885  001946  50DB               	movf	plusw2,w,c
  8886  001948  E109               	bnz	u6900
  8887  00194A  0E32               	movlw	50
  8888  00194C  5CDE               	subwf	postinc2,w,c
  8889  00194E  A0D8               	btfss	status,0,c
  8890  001950  EFAC  F00C         	goto	u6901
  8891  001954  EFAE  F00C         	goto	u6900
  8892  001958                     u6901:
  8893  001958  EFCC  F00C         	goto	l9747
  8894  00195C                     u6900:
  8895  00195C  EE20 F004          	lfsr	2,4
  8896  001960  5018               	movf	backlightController@g^0,w,c
  8897  001962  26D9               	addwf	fsr2l,f,c
  8898  001964  5019               	movf	(backlightController@g+1)^0,w,c
  8899  001966  22DA               	addwfc	fsr2h,f,c
  8900  001968  0E01               	movlw	1
  8901  00196A  50DB               	movf	plusw2,w,c
  8902  00196C  E107               	bnz	u6911
  8903  00196E  0E40               	movlw	64
  8904  001970  5CDE               	subwf	postinc2,w,c
  8905  001972  B0D8               	btfsc	status,0,c
  8906  001974  EFBE  F00C         	goto	u6911
  8907  001978  EFC0  F00C         	goto	u6910
  8908  00197C                     u6911:
  8909  00197C  EFCC  F00C         	goto	l9747
  8910  001980                     u6910:
  8911  001980                     
  8912                           ;stateMachine/gameController.c: 289:     {;stateMachine/gameController.c: 290:         G
      +                          ameParameters_setBackLight(g,0);
  8913  001980  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  8914  001984  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  8915  001988  0E00               	movlw	0
  8916  00198A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  8917  00198C  0E00               	movlw	0
  8918  00198E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  8919  001990  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  8920                           
  8921                           ;stateMachine/gameController.c: 291:     }
  8922  001994  EFDC  F00E         	goto	l9813
  8923  001998                     l9747:
  8924  001998  EE20 F004          	lfsr	2,4
  8925  00199C  5018               	movf	backlightController@g^0,w,c
  8926  00199E  26D9               	addwf	fsr2l,f,c
  8927  0019A0  5019               	movf	(backlightController@g+1)^0,w,c
  8928  0019A2  22DA               	addwfc	fsr2h,f,c
  8929  0019A4  0E01               	movlw	1
  8930  0019A6  50DB               	movf	plusw2,w,c
  8931  0019A8  E109               	bnz	u6920
  8932  0019AA  0E40               	movlw	64
  8933  0019AC  5CDE               	subwf	postinc2,w,c
  8934  0019AE  A0D8               	btfss	status,0,c
  8935  0019B0  EFDC  F00C         	goto	u6921
  8936  0019B4  EFDE  F00C         	goto	u6920
  8937  0019B8                     u6921:
  8938  0019B8  EFFC  F00C         	goto	l9753
  8939  0019BC                     u6920:
  8940  0019BC  EE20 F004          	lfsr	2,4
  8941  0019C0  5018               	movf	backlightController@g^0,w,c
  8942  0019C2  26D9               	addwf	fsr2l,f,c
  8943  0019C4  5019               	movf	(backlightController@g+1)^0,w,c
  8944  0019C6  22DA               	addwfc	fsr2h,f,c
  8945  0019C8  0E01               	movlw	1
  8946  0019CA  50DB               	movf	plusw2,w,c
  8947  0019CC  E107               	bnz	u6931
  8948  0019CE  0E4E               	movlw	78
  8949  0019D0  5CDE               	subwf	postinc2,w,c
  8950  0019D2  B0D8               	btfsc	status,0,c
  8951  0019D4  EFEE  F00C         	goto	u6931
  8952  0019D8  EFF0  F00C         	goto	u6930
  8953  0019DC                     u6931:
  8954  0019DC  EFFC  F00C         	goto	l9753
  8955  0019E0                     u6930:
  8956  0019E0                     
  8957                           ;stateMachine/gameController.c: 293:     {;stateMachine/gameController.c: 294:         G
      +                          ameParameters_setBackLight(g,1);
  8958  0019E0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  8959  0019E4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  8960  0019E8  0E00               	movlw	0
  8961  0019EA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  8962  0019EC  0E01               	movlw	1
  8963  0019EE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  8964  0019F0  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  8965                           
  8966                           ;stateMachine/gameController.c: 295:     }
  8967  0019F4  EFDC  F00E         	goto	l9813
  8968  0019F8                     l9753:
  8969  0019F8  EE20 F004          	lfsr	2,4
  8970  0019FC  5018               	movf	backlightController@g^0,w,c
  8971  0019FE  26D9               	addwf	fsr2l,f,c
  8972  001A00  5019               	movf	(backlightController@g+1)^0,w,c
  8973  001A02  22DA               	addwfc	fsr2h,f,c
  8974  001A04  0E01               	movlw	1
  8975  001A06  50DB               	movf	plusw2,w,c
  8976  001A08  E109               	bnz	u6940
  8977  001A0A  0E4E               	movlw	78
  8978  001A0C  5CDE               	subwf	postinc2,w,c
  8979  001A0E  A0D8               	btfss	status,0,c
  8980  001A10  EF0C  F00D         	goto	u6941
  8981  001A14  EF0E  F00D         	goto	u6940
  8982  001A18                     u6941:
  8983  001A18  EF2C  F00D         	goto	l9759
  8984  001A1C                     u6940:
  8985  001A1C  EE20 F004          	lfsr	2,4
  8986  001A20  5018               	movf	backlightController@g^0,w,c
  8987  001A22  26D9               	addwf	fsr2l,f,c
  8988  001A24  5019               	movf	(backlightController@g+1)^0,w,c
  8989  001A26  22DA               	addwfc	fsr2h,f,c
  8990  001A28  0E01               	movlw	1
  8991  001A2A  50DB               	movf	plusw2,w,c
  8992  001A2C  E107               	bnz	u6951
  8993  001A2E  0E5C               	movlw	92
  8994  001A30  5CDE               	subwf	postinc2,w,c
  8995  001A32  B0D8               	btfsc	status,0,c
  8996  001A34  EF1E  F00D         	goto	u6951
  8997  001A38  EF20  F00D         	goto	u6950
  8998  001A3C                     u6951:
  8999  001A3C  EF2C  F00D         	goto	l9759
  9000  001A40                     u6950:
  9001  001A40                     
  9002                           ;stateMachine/gameController.c: 297:     {;stateMachine/gameController.c: 298:         G
      +                          ameParameters_setBackLight(g,2);
  9003  001A40  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9004  001A44  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9005  001A48  0E00               	movlw	0
  9006  001A4A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9007  001A4C  0E02               	movlw	2
  9008  001A4E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9009  001A50  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  9010                           
  9011                           ;stateMachine/gameController.c: 299:     }
  9012  001A54  EFDC  F00E         	goto	l9813
  9013  001A58                     l9759:
  9014  001A58  EE20 F004          	lfsr	2,4
  9015  001A5C  5018               	movf	backlightController@g^0,w,c
  9016  001A5E  26D9               	addwf	fsr2l,f,c
  9017  001A60  5019               	movf	(backlightController@g+1)^0,w,c
  9018  001A62  22DA               	addwfc	fsr2h,f,c
  9019  001A64  0E01               	movlw	1
  9020  001A66  50DB               	movf	plusw2,w,c
  9021  001A68  E109               	bnz	u6960
  9022  001A6A  0E5C               	movlw	92
  9023  001A6C  5CDE               	subwf	postinc2,w,c
  9024  001A6E  A0D8               	btfss	status,0,c
  9025  001A70  EF3C  F00D         	goto	u6961
  9026  001A74  EF3E  F00D         	goto	u6960
  9027  001A78                     u6961:
  9028  001A78  EF5C  F00D         	goto	l9765
  9029  001A7C                     u6960:
  9030  001A7C  EE20 F004          	lfsr	2,4
  9031  001A80  5018               	movf	backlightController@g^0,w,c
  9032  001A82  26D9               	addwf	fsr2l,f,c
  9033  001A84  5019               	movf	(backlightController@g+1)^0,w,c
  9034  001A86  22DA               	addwfc	fsr2h,f,c
  9035  001A88  0E01               	movlw	1
  9036  001A8A  50DB               	movf	plusw2,w,c
  9037  001A8C  E107               	bnz	u6971
  9038  001A8E  0E6A               	movlw	106
  9039  001A90  5CDE               	subwf	postinc2,w,c
  9040  001A92  B0D8               	btfsc	status,0,c
  9041  001A94  EF4E  F00D         	goto	u6971
  9042  001A98  EF50  F00D         	goto	u6970
  9043  001A9C                     u6971:
  9044  001A9C  EF5C  F00D         	goto	l9765
  9045  001AA0                     u6970:
  9046  001AA0                     
  9047                           ;stateMachine/gameController.c: 301:     {;stateMachine/gameController.c: 302:         G
      +                          ameParameters_setBackLight(g,3);
  9048  001AA0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9049  001AA4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9050  001AA8  0E00               	movlw	0
  9051  001AAA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9052  001AAC  0E03               	movlw	3
  9053  001AAE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9054  001AB0  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  9055                           
  9056                           ;stateMachine/gameController.c: 303:     }
  9057  001AB4  EFDC  F00E         	goto	l9813
  9058  001AB8                     l9765:
  9059  001AB8  EE20 F004          	lfsr	2,4
  9060  001ABC  5018               	movf	backlightController@g^0,w,c
  9061  001ABE  26D9               	addwf	fsr2l,f,c
  9062  001AC0  5019               	movf	(backlightController@g+1)^0,w,c
  9063  001AC2  22DA               	addwfc	fsr2h,f,c
  9064  001AC4  0E01               	movlw	1
  9065  001AC6  50DB               	movf	plusw2,w,c
  9066  001AC8  E109               	bnz	u6980
  9067  001ACA  0E6A               	movlw	106
  9068  001ACC  5CDE               	subwf	postinc2,w,c
  9069  001ACE  A0D8               	btfss	status,0,c
  9070  001AD0  EF6C  F00D         	goto	u6981
  9071  001AD4  EF6E  F00D         	goto	u6980
  9072  001AD8                     u6981:
  9073  001AD8  EF8C  F00D         	goto	l9771
  9074  001ADC                     u6980:
  9075  001ADC  EE20 F004          	lfsr	2,4
  9076  001AE0  5018               	movf	backlightController@g^0,w,c
  9077  001AE2  26D9               	addwf	fsr2l,f,c
  9078  001AE4  5019               	movf	(backlightController@g+1)^0,w,c
  9079  001AE6  22DA               	addwfc	fsr2h,f,c
  9080  001AE8  0E01               	movlw	1
  9081  001AEA  50DB               	movf	plusw2,w,c
  9082  001AEC  E107               	bnz	u6991
  9083  001AEE  0E78               	movlw	120
  9084  001AF0  5CDE               	subwf	postinc2,w,c
  9085  001AF2  B0D8               	btfsc	status,0,c
  9086  001AF4  EF7E  F00D         	goto	u6991
  9087  001AF8  EF80  F00D         	goto	u6990
  9088  001AFC                     u6991:
  9089  001AFC  EF8C  F00D         	goto	l9771
  9090  001B00                     u6990:
  9091  001B00                     
  9092                           ;stateMachine/gameController.c: 305:     {;stateMachine/gameController.c: 306:         G
      +                          ameParameters_setBackLight(g,4);
  9093  001B00  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9094  001B04  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9095  001B08  0E00               	movlw	0
  9096  001B0A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9097  001B0C  0E04               	movlw	4
  9098  001B0E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9099  001B10  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  9100                           
  9101                           ;stateMachine/gameController.c: 307:     }
  9102  001B14  EFDC  F00E         	goto	l9813
  9103  001B18                     l9771:
  9104  001B18  EE20 F004          	lfsr	2,4
  9105  001B1C  5018               	movf	backlightController@g^0,w,c
  9106  001B1E  26D9               	addwf	fsr2l,f,c
  9107  001B20  5019               	movf	(backlightController@g+1)^0,w,c
  9108  001B22  22DA               	addwfc	fsr2h,f,c
  9109  001B24  0E01               	movlw	1
  9110  001B26  50DB               	movf	plusw2,w,c
  9111  001B28  E109               	bnz	u7000
  9112  001B2A  0E78               	movlw	120
  9113  001B2C  5CDE               	subwf	postinc2,w,c
  9114  001B2E  A0D8               	btfss	status,0,c
  9115  001B30  EF9C  F00D         	goto	u7001
  9116  001B34  EF9E  F00D         	goto	u7000
  9117  001B38                     u7001:
  9118  001B38  EFBC  F00D         	goto	l9777
  9119  001B3C                     u7000:
  9120  001B3C  EE20 F004          	lfsr	2,4
  9121  001B40  5018               	movf	backlightController@g^0,w,c
  9122  001B42  26D9               	addwf	fsr2l,f,c
  9123  001B44  5019               	movf	(backlightController@g+1)^0,w,c
  9124  001B46  22DA               	addwfc	fsr2h,f,c
  9125  001B48  0E01               	movlw	1
  9126  001B4A  50DB               	movf	plusw2,w,c
  9127  001B4C  E107               	bnz	u7011
  9128  001B4E  0E86               	movlw	134
  9129  001B50  5CDE               	subwf	postinc2,w,c
  9130  001B52  B0D8               	btfsc	status,0,c
  9131  001B54  EFAE  F00D         	goto	u7011
  9132  001B58  EFB0  F00D         	goto	u7010
  9133  001B5C                     u7011:
  9134  001B5C  EFBC  F00D         	goto	l9777
  9135  001B60                     u7010:
  9136  001B60                     
  9137                           ;stateMachine/gameController.c: 309:     {;stateMachine/gameController.c: 310:         G
      +                          ameParameters_setBackLight(g,5);
  9138  001B60  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9139  001B64  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9140  001B68  0E00               	movlw	0
  9141  001B6A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9142  001B6C  0E05               	movlw	5
  9143  001B6E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9144  001B70  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  9145                           
  9146                           ;stateMachine/gameController.c: 311:     }
  9147  001B74  EFDC  F00E         	goto	l9813
  9148  001B78                     l9777:
  9149  001B78  EE20 F004          	lfsr	2,4
  9150  001B7C  5018               	movf	backlightController@g^0,w,c
  9151  001B7E  26D9               	addwf	fsr2l,f,c
  9152  001B80  5019               	movf	(backlightController@g+1)^0,w,c
  9153  001B82  22DA               	addwfc	fsr2h,f,c
  9154  001B84  0E01               	movlw	1
  9155  001B86  50DB               	movf	plusw2,w,c
  9156  001B88  E109               	bnz	u7020
  9157  001B8A  0E86               	movlw	134
  9158  001B8C  5CDE               	subwf	postinc2,w,c
  9159  001B8E  A0D8               	btfss	status,0,c
  9160  001B90  EFCC  F00D         	goto	u7021
  9161  001B94  EFCE  F00D         	goto	u7020
  9162  001B98                     u7021:
  9163  001B98  EFEC  F00D         	goto	l9783
  9164  001B9C                     u7020:
  9165  001B9C  EE20 F004          	lfsr	2,4
  9166  001BA0  5018               	movf	backlightController@g^0,w,c
  9167  001BA2  26D9               	addwf	fsr2l,f,c
  9168  001BA4  5019               	movf	(backlightController@g+1)^0,w,c
  9169  001BA6  22DA               	addwfc	fsr2h,f,c
  9170  001BA8  0E01               	movlw	1
  9171  001BAA  50DB               	movf	plusw2,w,c
  9172  001BAC  E107               	bnz	u7031
  9173  001BAE  0E96               	movlw	150
  9174  001BB0  5CDE               	subwf	postinc2,w,c
  9175  001BB2  B0D8               	btfsc	status,0,c
  9176  001BB4  EFDE  F00D         	goto	u7031
  9177  001BB8  EFE0  F00D         	goto	u7030
  9178  001BBC                     u7031:
  9179  001BBC  EFEC  F00D         	goto	l9783
  9180  001BC0                     u7030:
  9181  001BC0                     
  9182                           ;stateMachine/gameController.c: 313:     {;stateMachine/gameController.c: 314:         G
      +                          ameParameters_setBackLight(g,6);
  9183  001BC0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9184  001BC4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9185  001BC8  0E00               	movlw	0
  9186  001BCA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9187  001BCC  0E06               	movlw	6
  9188  001BCE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9189  001BD0  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  9190                           
  9191                           ;stateMachine/gameController.c: 315:     }
  9192  001BD4  EFDC  F00E         	goto	l9813
  9193  001BD8                     l9783:
  9194  001BD8  EE20 F004          	lfsr	2,4
  9195  001BDC  5018               	movf	backlightController@g^0,w,c
  9196  001BDE  26D9               	addwf	fsr2l,f,c
  9197  001BE0  5019               	movf	(backlightController@g+1)^0,w,c
  9198  001BE2  22DA               	addwfc	fsr2h,f,c
  9199  001BE4  0E01               	movlw	1
  9200  001BE6  50DB               	movf	plusw2,w,c
  9201  001BE8  E109               	bnz	u7040
  9202  001BEA  0E96               	movlw	150
  9203  001BEC  5CDE               	subwf	postinc2,w,c
  9204  001BEE  A0D8               	btfss	status,0,c
  9205  001BF0  EFFC  F00D         	goto	u7041
  9206  001BF4  EFFE  F00D         	goto	u7040
  9207  001BF8                     u7041:
  9208  001BF8  EF1C  F00E         	goto	l9789
  9209  001BFC                     u7040:
  9210  001BFC  EE20 F004          	lfsr	2,4
  9211  001C00  5018               	movf	backlightController@g^0,w,c
  9212  001C02  26D9               	addwf	fsr2l,f,c
  9213  001C04  5019               	movf	(backlightController@g+1)^0,w,c
  9214  001C06  22DA               	addwfc	fsr2h,f,c
  9215  001C08  0E01               	movlw	1
  9216  001C0A  50DB               	movf	plusw2,w,c
  9217  001C0C  E107               	bnz	u7051
  9218  001C0E  0EA4               	movlw	164
  9219  001C10  5CDE               	subwf	postinc2,w,c
  9220  001C12  B0D8               	btfsc	status,0,c
  9221  001C14  EF0E  F00E         	goto	u7051
  9222  001C18  EF10  F00E         	goto	u7050
  9223  001C1C                     u7051:
  9224  001C1C  EF1C  F00E         	goto	l9789
  9225  001C20                     u7050:
  9226  001C20                     
  9227                           ;stateMachine/gameController.c: 317:     {;stateMachine/gameController.c: 318:         G
      +                          ameParameters_setBackLight(g,7);
  9228  001C20  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9229  001C24  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9230  001C28  0E00               	movlw	0
  9231  001C2A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9232  001C2C  0E07               	movlw	7
  9233  001C2E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9234  001C30  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  9235                           
  9236                           ;stateMachine/gameController.c: 319:     }
  9237  001C34  EFDC  F00E         	goto	l9813
  9238  001C38                     l9789:
  9239  001C38  EE20 F004          	lfsr	2,4
  9240  001C3C  5018               	movf	backlightController@g^0,w,c
  9241  001C3E  26D9               	addwf	fsr2l,f,c
  9242  001C40  5019               	movf	(backlightController@g+1)^0,w,c
  9243  001C42  22DA               	addwfc	fsr2h,f,c
  9244  001C44  0E01               	movlw	1
  9245  001C46  50DB               	movf	plusw2,w,c
  9246  001C48  E109               	bnz	u7060
  9247  001C4A  0EA4               	movlw	164
  9248  001C4C  5CDE               	subwf	postinc2,w,c
  9249  001C4E  A0D8               	btfss	status,0,c
  9250  001C50  EF2C  F00E         	goto	u7061
  9251  001C54  EF2E  F00E         	goto	u7060
  9252  001C58                     u7061:
  9253  001C58  EF4C  F00E         	goto	l9795
  9254  001C5C                     u7060:
  9255  001C5C  EE20 F004          	lfsr	2,4
  9256  001C60  5018               	movf	backlightController@g^0,w,c
  9257  001C62  26D9               	addwf	fsr2l,f,c
  9258  001C64  5019               	movf	(backlightController@g+1)^0,w,c
  9259  001C66  22DA               	addwfc	fsr2h,f,c
  9260  001C68  0E01               	movlw	1
  9261  001C6A  50DB               	movf	plusw2,w,c
  9262  001C6C  E107               	bnz	u7071
  9263  001C6E  0EB2               	movlw	178
  9264  001C70  5CDE               	subwf	postinc2,w,c
  9265  001C72  B0D8               	btfsc	status,0,c
  9266  001C74  EF3E  F00E         	goto	u7071
  9267  001C78  EF40  F00E         	goto	u7070
  9268  001C7C                     u7071:
  9269  001C7C  EF4C  F00E         	goto	l9795
  9270  001C80                     u7070:
  9271  001C80                     
  9272                           ;stateMachine/gameController.c: 321:     {;stateMachine/gameController.c: 322:         G
      +                          ameParameters_setBackLight(g,8);
  9273  001C80  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9274  001C84  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9275  001C88  0E00               	movlw	0
  9276  001C8A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9277  001C8C  0E08               	movlw	8
  9278  001C8E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9279  001C90  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  9280                           
  9281                           ;stateMachine/gameController.c: 323:     }
  9282  001C94  EFDC  F00E         	goto	l9813
  9283  001C98                     l9795:
  9284  001C98  EE20 F004          	lfsr	2,4
  9285  001C9C  5018               	movf	backlightController@g^0,w,c
  9286  001C9E  26D9               	addwf	fsr2l,f,c
  9287  001CA0  5019               	movf	(backlightController@g+1)^0,w,c
  9288  001CA2  22DA               	addwfc	fsr2h,f,c
  9289  001CA4  0E01               	movlw	1
  9290  001CA6  50DB               	movf	plusw2,w,c
  9291  001CA8  E109               	bnz	u7080
  9292  001CAA  0EB2               	movlw	178
  9293  001CAC  5CDE               	subwf	postinc2,w,c
  9294  001CAE  A0D8               	btfss	status,0,c
  9295  001CB0  EF5C  F00E         	goto	u7081
  9296  001CB4  EF5E  F00E         	goto	u7080
  9297  001CB8                     u7081:
  9298  001CB8  EF7C  F00E         	goto	l9801
  9299  001CBC                     u7080:
  9300  001CBC  EE20 F004          	lfsr	2,4
  9301  001CC0  5018               	movf	backlightController@g^0,w,c
  9302  001CC2  26D9               	addwf	fsr2l,f,c
  9303  001CC4  5019               	movf	(backlightController@g+1)^0,w,c
  9304  001CC6  22DA               	addwfc	fsr2h,f,c
  9305  001CC8  0E01               	movlw	1
  9306  001CCA  50DB               	movf	plusw2,w,c
  9307  001CCC  E107               	bnz	u7091
  9308  001CCE  0EC0               	movlw	192
  9309  001CD0  5CDE               	subwf	postinc2,w,c
  9310  001CD2  B0D8               	btfsc	status,0,c
  9311  001CD4  EF6E  F00E         	goto	u7091
  9312  001CD8  EF70  F00E         	goto	u7090
  9313  001CDC                     u7091:
  9314  001CDC  EF7C  F00E         	goto	l9801
  9315  001CE0                     u7090:
  9316  001CE0                     
  9317                           ;stateMachine/gameController.c: 325:     {;stateMachine/gameController.c: 326:         G
      +                          ameParameters_setBackLight(g,9);
  9318  001CE0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9319  001CE4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9320  001CE8  0E00               	movlw	0
  9321  001CEA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9322  001CEC  0E09               	movlw	9
  9323  001CEE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9324  001CF0  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  9325                           
  9326                           ;stateMachine/gameController.c: 327:     }
  9327  001CF4  EFDC  F00E         	goto	l9813
  9328  001CF8                     l9801:
  9329  001CF8  EE20 F004          	lfsr	2,4
  9330  001CFC  5018               	movf	backlightController@g^0,w,c
  9331  001CFE  26D9               	addwf	fsr2l,f,c
  9332  001D00  5019               	movf	(backlightController@g+1)^0,w,c
  9333  001D02  22DA               	addwfc	fsr2h,f,c
  9334  001D04  0E01               	movlw	1
  9335  001D06  50DB               	movf	plusw2,w,c
  9336  001D08  E109               	bnz	u7100
  9337  001D0A  0EC0               	movlw	192
  9338  001D0C  5CDE               	subwf	postinc2,w,c
  9339  001D0E  A0D8               	btfss	status,0,c
  9340  001D10  EF8C  F00E         	goto	u7101
  9341  001D14  EF8E  F00E         	goto	u7100
  9342  001D18                     u7101:
  9343  001D18  EFAC  F00E         	goto	l9807
  9344  001D1C                     u7100:
  9345  001D1C  EE20 F004          	lfsr	2,4
  9346  001D20  5018               	movf	backlightController@g^0,w,c
  9347  001D22  26D9               	addwf	fsr2l,f,c
  9348  001D24  5019               	movf	(backlightController@g+1)^0,w,c
  9349  001D26  22DA               	addwfc	fsr2h,f,c
  9350  001D28  0E01               	movlw	1
  9351  001D2A  50DB               	movf	plusw2,w,c
  9352  001D2C  E107               	bnz	u7111
  9353  001D2E  0ECE               	movlw	206
  9354  001D30  5CDE               	subwf	postinc2,w,c
  9355  001D32  B0D8               	btfsc	status,0,c
  9356  001D34  EF9E  F00E         	goto	u7111
  9357  001D38  EFA0  F00E         	goto	u7110
  9358  001D3C                     u7111:
  9359  001D3C  EFAC  F00E         	goto	l9807
  9360  001D40                     u7110:
  9361  001D40                     
  9362                           ;stateMachine/gameController.c: 329:     {;stateMachine/gameController.c: 330:         G
      +                          ameParameters_setBackLight(g,10);
  9363  001D40  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9364  001D44  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9365  001D48  0E00               	movlw	0
  9366  001D4A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9367  001D4C  0E0A               	movlw	10
  9368  001D4E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9369  001D50  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  9370                           
  9371                           ;stateMachine/gameController.c: 331:     }
  9372  001D54  EFDC  F00E         	goto	l9813
  9373  001D58                     l9807:
  9374  001D58  EE20 F004          	lfsr	2,4
  9375  001D5C  5018               	movf	backlightController@g^0,w,c
  9376  001D5E  26D9               	addwf	fsr2l,f,c
  9377  001D60  5019               	movf	(backlightController@g+1)^0,w,c
  9378  001D62  22DA               	addwfc	fsr2h,f,c
  9379  001D64  0E01               	movlw	1
  9380  001D66  50DB               	movf	plusw2,w,c
  9381  001D68  E109               	bnz	u7120
  9382  001D6A  0ECE               	movlw	206
  9383  001D6C  5CDE               	subwf	postinc2,w,c
  9384  001D6E  A0D8               	btfss	status,0,c
  9385  001D70  EFBC  F00E         	goto	u7121
  9386  001D74  EFBE  F00E         	goto	u7120
  9387  001D78                     u7121:
  9388  001D78  EFDC  F00E         	goto	l703
  9389  001D7C                     u7120:
  9390  001D7C  EE20 F004          	lfsr	2,4
  9391  001D80  5018               	movf	backlightController@g^0,w,c
  9392  001D82  26D9               	addwf	fsr2l,f,c
  9393  001D84  5019               	movf	(backlightController@g+1)^0,w,c
  9394  001D86  22DA               	addwfc	fsr2h,f,c
  9395  001D88  0E01               	movlw	1
  9396  001D8A  50DB               	movf	plusw2,w,c
  9397  001D8C  E107               	bnz	u7131
  9398  001D8E  0ED7               	movlw	215
  9399  001D90  5CDE               	subwf	postinc2,w,c
  9400  001D92  B0D8               	btfsc	status,0,c
  9401  001D94  EFCE  F00E         	goto	u7131
  9402  001D98  EFD0  F00E         	goto	u7130
  9403  001D9C                     u7131:
  9404  001D9C  EFDC  F00E         	goto	l703
  9405  001DA0                     u7130:
  9406  001DA0                     
  9407                           ;stateMachine/gameController.c: 333:     {;stateMachine/gameController.c: 334:         G
      +                          ameParameters_setBackLight(g,11);
  9408  001DA0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9409  001DA4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9410  001DA8  0E00               	movlw	0
  9411  001DAA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9412  001DAC  0E0B               	movlw	11
  9413  001DAE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9414  001DB0  EC41  F030         	call	_GameParameters_setBackLight	;wreg free
  9415  001DB4  EFDC  F00E         	goto	l9813
  9416  001DB8                     l703:
  9417  001DB8                     l9813:
  9418                           
  9419                           ;stateMachine/gameController.c: 336:     g->sldParam.value=g->backlight;
  9420  001DB8  C018  FFD9         	movff	backlightController@g,fsr2l
  9421  001DBC  C019  FFDA         	movff	backlightController@g+1,fsr2h
  9422  001DC0  EE10 F0C1          	lfsr	1,193
  9423  001DC4  5018               	movf	backlightController@g^0,w,c
  9424  001DC6  26E1               	addwf	fsr1l,f,c
  9425  001DC8  5019               	movf	(backlightController@g+1)^0,w,c
  9426  001DCA  22E2               	addwfc	fsr1h,f,c
  9427  001DCC  CFDE FFE6          	movff	postinc2,postinc1
  9428  001DD0  CFDD FFE5          	movff	postdec2,postdec1
  9429  001DD4  0012               	return		;funcret
  9430  001DD6                     __end_of_backlightController:
  9431                           	callstack 0
  9432                           
  9433 ;; *************** function _GameParameters_setBackLight *****************
  9434 ;; Defined at:
  9435 ;;		line 23 in file "class/gameParameters.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9438 ;;		 -> g1(239), 
  9439 ;;  value           2   19[COMRAM] unsigned short 
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;		None
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  1    wreg      void 
  9444 ;; Registers used:
  9445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9451 ;;      Params:         4       0       0       0       0       0       0
  9452 ;;      Locals:         0       0       0       0       0       0       0
  9453 ;;      Temps:          2       0       0       0       0       0       0
  9454 ;;      Totals:         6       0       0       0       0       0       0
  9455 ;;Total ram usage:        6 bytes
  9456 ;; Hardware stack levels used: 1
  9457 ;; Hardware stack levels required when called: 4
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_backlightController
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text32
  9466  006082                     __ptext32:
  9467                           	callstack 0
  9468  006082                     _GameParameters_setBackLight:
  9469                           	callstack 21
  9470  006082                     
  9471                           ;class/gameParameters.c: 23: void GameParameters_setBackLight(struct GameParameters* s, 
      +                          uint16_t value);class/gameParameters.c: 24: {;class/gameParameters.c: 25:     s->backlig
      +                          ht = value;
  9472  006082  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9473  006086  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9474  00608A  C014  FFDE         	movff	GameParameters_setBackLight@value,postinc2
  9475  00608E  C015  FFDD         	movff	GameParameters_setBackLight@value+1,postdec2
  9476  006092                     
  9477                           ;class/gameParameters.c: 26:     if(s->backlight==11)
  9478  006092  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9479  006096  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9480  00609A  0E0B               	movlw	11
  9481  00609C  18DE               	xorwf	postinc2,w,c
  9482  00609E  10DE               	iorwf	postinc2,w,c
  9483  0060A0  A4D8               	btfss	status,2,c
  9484  0060A2  EF55  F030         	goto	u6561
  9485  0060A6  EF57  F030         	goto	u6560
  9486  0060AA                     u6561:
  9487  0060AA  EF5A  F030         	goto	l9449
  9488  0060AE                     u6560:
  9489  0060AE                     
  9490                           ;class/gameParameters.c: 27:     {;class/gameParameters.c: 28:         CCPR2L = 255;
  9491  0060AE  6867               	setf	103,c	;volatile
  9492                           
  9493                           ;class/gameParameters.c: 29:     }
  9494  0060B0  EF62  F030         	goto	l146
  9495  0060B4                     l9449:
  9496                           
  9497                           ;class/gameParameters.c: 31:     {;class/gameParameters.c: 32:         CCPR2L=(s->backli
      +                          ght)*23;
  9498  0060B4  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9499  0060B8  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9500  0060BC  50DF               	movf	indf2,w,c
  9501  0060BE  0D17               	mullw	23
  9502  0060C0  CFF3 FF67          	movff	prodl,3943	;volatile
  9503  0060C4                     l146:
  9504  0060C4  0012               	return		;funcret
  9505  0060C6                     __end_of_GameParameters_setBackLight:
  9506                           	callstack 0
  9507                           
  9508 ;; *************** function _XF_scheduleTimer *****************
  9509 ;; Defined at:
  9510 ;;		line 96 in file "xf/xf.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;  tm              2   18[COMRAM] unsigned short 
  9513 ;;  ev              1   20[COMRAM] unsigned char 
  9514 ;;  inISR           1   21[COMRAM] _Bool 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  i               1   22[COMRAM] unsigned char 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      unsigned char 
  9519 ;; Registers used:
  9520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9526 ;;      Params:         4       0       0       0       0       0       0
  9527 ;;      Locals:         1       0       0       0       0       0       0
  9528 ;;      Temps:          0       0       0       0       0       0       0
  9529 ;;      Totals:         5       0       0       0       0       0       0
  9530 ;;Total ram usage:        5 bytes
  9531 ;; Hardware stack levels used: 1
  9532 ;; Hardware stack levels required when called: 5
  9533 ;; This function calls:
  9534 ;;		_ENTERCRITICAL
  9535 ;;		_LEAVECRITICAL
  9536 ;; This function is called by:
  9537 ;;		_touchScreenController
  9538 ;;		_gameControllerSM
  9539 ;;		_gameControllerController
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text33
  9544  005C10                     __ptext33:
  9545                           	callstack 0
  9546  005C10                     _XF_scheduleTimer:
  9547                           	callstack 21
  9548  005C10                     
  9549                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
  9550  005C10  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  9551  005C12  ECB2  F031         	call	_ENTERCRITICAL
  9552  005C16                     
  9553                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
  9554  005C16  0E00               	movlw	0
  9555  005C18  6E17               	movwf	XF_scheduleTimer@i^0,c
  9556  005C1A                     l9729:
  9557                           
  9558                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
  9559  005C1A  5017               	movf	XF_scheduleTimer@i^0,w,c
  9560  005C1C  0D03               	mullw	3
  9561  005C1E  0EB7               	movlw	low (_theXF+2)
  9562  005C20  24F3               	addwf	243,w,c
  9563  005C22  6ED9               	movwf	fsr2l,c
  9564  005C24  0E00               	movlw	high (_theXF+2)
  9565  005C26  20F4               	addwfc	prodh,w,c
  9566  005C28  6EDA               	movwf	fsr2h,c
  9567  005C2A  50DF               	movf	indf2,w,c
  9568  005C2C  A4D8               	btfss	status,2,c
  9569  005C2E  EF1B  F02E         	goto	u6881
  9570  005C32  EF1D  F02E         	goto	u6880
  9571  005C36                     u6881:
  9572  005C36  EF35  F02E         	goto	l9733
  9573  005C3A                     u6880:
  9574  005C3A                     
  9575                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
  9576  005C3A  5017               	movf	XF_scheduleTimer@i^0,w,c
  9577  005C3C  0D03               	mullw	3
  9578  005C3E  0EB5               	movlw	low _theXF
  9579  005C40  24F3               	addwf	243,w,c
  9580  005C42  6ED9               	movwf	fsr2l,c
  9581  005C44  0E00               	movlw	high _theXF
  9582  005C46  20F4               	addwfc	prodh,w,c
  9583  005C48  6EDA               	movwf	fsr2h,c
  9584  005C4A  C013  FFDE         	movff	XF_scheduleTimer@tm,postinc2
  9585  005C4E  C014  FFDD         	movff	XF_scheduleTimer@tm+1,postdec2
  9586                           
  9587                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
  9588  005C52  5017               	movf	XF_scheduleTimer@i^0,w,c
  9589  005C54  0D03               	mullw	3
  9590  005C56  0EB7               	movlw	low (_theXF+2)
  9591  005C58  24F3               	addwf	243,w,c
  9592  005C5A  6ED9               	movwf	fsr2l,c
  9593  005C5C  0E00               	movlw	high (_theXF+2)
  9594  005C5E  20F4               	addwfc	prodh,w,c
  9595  005C60  6EDA               	movwf	fsr2h,c
  9596  005C62  C015  FFDF         	movff	XF_scheduleTimer@ev,indf2
  9597                           
  9598                           ;xf/xf.c: 107:             break;
  9599  005C66  EF3E  F02E         	goto	l9737
  9600  005C6A                     l9733:
  9601                           
  9602                           ;xf/xf.c: 109:     }
  9603  005C6A  2A17               	incf	XF_scheduleTimer@i^0,f,c
  9604  005C6C  0E07               	movlw	7
  9605  005C6E  6417               	cpfsgt	XF_scheduleTimer@i^0,c
  9606  005C70  EF3C  F02E         	goto	u6891
  9607  005C74  EF3E  F02E         	goto	u6890
  9608  005C78                     u6891:
  9609  005C78  EF0D  F02E         	goto	l9729
  9610  005C7C                     u6890:
  9611  005C7C                     l9737:
  9612                           
  9613                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
  9614  005C7C  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  9615  005C7E  ECA7  F031         	call	_LEAVECRITICAL
  9616  005C82  0012               	return		;funcret
  9617  005C84                     __end_of_XF_scheduleTimer:
  9618                           	callstack 0
  9619                           
  9620 ;; *************** function _LCD_InSlider *****************
  9621 ;; Defined at:
  9622 ;;		line 546 in file "libraries/lcd_highlevel.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  slider          2   17[COMRAM] PTR struct .
  9625 ;;		 -> g1(239), 
  9626 ;;  posX            2   19[COMRAM] unsigned short 
  9627 ;;  posY            2   21[COMRAM] unsigned short 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;		None
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  1    wreg      unsigned char 
  9632 ;; Registers used:
  9633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9639 ;;      Params:         6       0       0       0       0       0       0
  9640 ;;      Locals:         0       0       0       0       0       0       0
  9641 ;;      Temps:          4       0       0       0       0       0       0
  9642 ;;      Totals:        10       0       0       0       0       0       0
  9643 ;;Total ram usage:       10 bytes
  9644 ;; Hardware stack levels used: 1
  9645 ;; Hardware stack levels required when called: 4
  9646 ;; This function calls:
  9647 ;;		Nothing
  9648 ;; This function is called by:
  9649 ;;		_gameControllerController
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           	psect	text34
  9654  004D82                     __ptext34:
  9655                           	callstack 0
  9656  004D82                     _LCD_InSlider:
  9657                           	callstack 22
  9658  004D82                     
  9659                           ;libraries/lcd_highlevel.c: 546: uint8_t LCD_InSlider(sld_t * slider, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 547: {;libraries/lcd_highlevel.c: 549:   if(posX 
      +                          < slider->posX)
  9660  004D82  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
  9661  004D86  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
  9662  004D8A  50DE               	movf	postinc2,w,c
  9663  004D8C  5C14               	subwf	LCD_InSlider@posX^0,w,c
  9664  004D8E  50DE               	movf	postinc2,w,c
  9665  004D90  5815               	subwfb	(LCD_InSlider@posX+1)^0,w,c
  9666  004D92  B0D8               	btfsc	status,0,c
  9667  004D94  EFCE  F026         	goto	u6841
  9668  004D98  EFD0  F026         	goto	u6840
  9669  004D9C                     u6841:
  9670  004D9C  EFD3  F026         	goto	l9699
  9671  004DA0                     u6840:
  9672  004DA0                     l9695:
  9673                           
  9674                           ;libraries/lcd_highlevel.c: 550:   {;libraries/lcd_highlevel.c: 551:     return 0;
  9675  004DA0  0E00               	movlw	0
  9676  004DA2  EF2F  F027         	goto	l271
  9677  004DA6                     l9699:
  9678                           
  9679                           ;libraries/lcd_highlevel.c: 554:   if(posX > (slider->posX + slider->width))
  9680  004DA6  EE20 F004          	lfsr	2,4
  9681  004DAA  5012               	movf	LCD_InSlider@slider^0,w,c
  9682  004DAC  26D9               	addwf	fsr2l,f,c
  9683  004DAE  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9684  004DB0  22DA               	addwfc	fsr2h,f,c
  9685  004DB2  CFDE F018          	movff	postinc2,??_LCD_InSlider
  9686  004DB6  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
  9687  004DBA  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
  9688  004DBE  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
  9689  004DC2  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
  9690  004DC6  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
  9691  004DCA  5018               	movf	??_LCD_InSlider^0,w,c
  9692  004DCC  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
  9693  004DCE  5019               	movf	(??_LCD_InSlider+1)^0,w,c
  9694  004DD0  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
  9695  004DD2  5014               	movf	LCD_InSlider@posX^0,w,c
  9696  004DD4  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
  9697  004DD6  5015               	movf	(LCD_InSlider@posX+1)^0,w,c
  9698  004DD8  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
  9699  004DDA  B0D8               	btfsc	status,0,c
  9700  004DDC  EFF2  F026         	goto	u6851
  9701  004DE0  EFF4  F026         	goto	u6850
  9702  004DE4                     u6851:
  9703  004DE4  EFF6  F026         	goto	l9705
  9704  004DE8                     u6850:
  9705  004DE8  EFD0  F026         	goto	l9695
  9706  004DEC                     l9705:
  9707                           
  9708                           ;libraries/lcd_highlevel.c: 559:   if(posY < slider->posY)
  9709  004DEC  EE20 F002          	lfsr	2,2
  9710  004DF0  5012               	movf	LCD_InSlider@slider^0,w,c
  9711  004DF2  26D9               	addwf	fsr2l,f,c
  9712  004DF4  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9713  004DF6  22DA               	addwfc	fsr2h,f,c
  9714  004DF8  50DE               	movf	postinc2,w,c
  9715  004DFA  5C16               	subwf	LCD_InSlider@posY^0,w,c
  9716  004DFC  50DE               	movf	postinc2,w,c
  9717  004DFE  5817               	subwfb	(LCD_InSlider@posY+1)^0,w,c
  9718  004E00  B0D8               	btfsc	status,0,c
  9719  004E02  EF05  F027         	goto	u6861
  9720  004E06  EF07  F027         	goto	u6860
  9721  004E0A                     u6861:
  9722  004E0A  EF09  F027         	goto	l9711
  9723  004E0E                     u6860:
  9724  004E0E  EFD0  F026         	goto	l9695
  9725  004E12                     l9711:
  9726                           
  9727                           ;libraries/lcd_highlevel.c: 564:   if(posY > (slider->posY + slider->height))
  9728  004E12  EE20 F006          	lfsr	2,6
  9729  004E16  5012               	movf	LCD_InSlider@slider^0,w,c
  9730  004E18  26D9               	addwf	fsr2l,f,c
  9731  004E1A  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9732  004E1C  22DA               	addwfc	fsr2h,f,c
  9733  004E1E  CFDE F018          	movff	postinc2,??_LCD_InSlider
  9734  004E22  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
  9735  004E26  EE20 F002          	lfsr	2,2
  9736  004E2A  5012               	movf	LCD_InSlider@slider^0,w,c
  9737  004E2C  26D9               	addwf	fsr2l,f,c
  9738  004E2E  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9739  004E30  22DA               	addwfc	fsr2h,f,c
  9740  004E32  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
  9741  004E36  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
  9742  004E3A  5018               	movf	??_LCD_InSlider^0,w,c
  9743  004E3C  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
  9744  004E3E  5019               	movf	(??_LCD_InSlider+1)^0,w,c
  9745  004E40  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
  9746  004E42  5016               	movf	LCD_InSlider@posY^0,w,c
  9747  004E44  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
  9748  004E46  5017               	movf	(LCD_InSlider@posY+1)^0,w,c
  9749  004E48  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
  9750  004E4A  B0D8               	btfsc	status,0,c
  9751  004E4C  EF2A  F027         	goto	u6871
  9752  004E50  EF2C  F027         	goto	u6870
  9753  004E54                     u6871:
  9754  004E54  EF2E  F027         	goto	l9717
  9755  004E58                     u6870:
  9756  004E58  EFD0  F026         	goto	l9695
  9757  004E5C                     l9717:
  9758                           
  9759                           ;libraries/lcd_highlevel.c: 568:   return 1;
  9760  004E5C  0E01               	movlw	1
  9761  004E5E                     l271:
  9762  004E5E  0012               	return		;funcret
  9763  004E60                     __end_of_LCD_InSlider:
  9764                           	callstack 0
  9765                           
  9766 ;; *************** function _GameParameters_init *****************
  9767 ;; Defined at:
  9768 ;;		line 3 in file "class/gameParameters.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  s               2   42[COMRAM] PTR struct GameParameter
  9771 ;;		 -> g1(239), 
  9772 ;; Auto vars:     Size  Location     Type
  9773 ;;		None
  9774 ;; Return value:  Size  Location     Type
  9775 ;;                  1    wreg      void 
  9776 ;; Registers used:
  9777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9778 ;; Tracked objects:
  9779 ;;		On entry : 0/0
  9780 ;;		On exit  : 0/0
  9781 ;;		Unchanged: 0/0
  9782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9783 ;;      Params:         2       0       0       0       0       0       0
  9784 ;;      Locals:         0       0       0       0       0       0       0
  9785 ;;      Temps:          0       0       0       0       0       0       0
  9786 ;;      Totals:         2       0       0       0       0       0       0
  9787 ;;Total ram usage:        2 bytes
  9788 ;; Hardware stack levels used: 1
  9789 ;; Hardware stack levels required when called: 5
  9790 ;; This function calls:
  9791 ;;		_Ball_init
  9792 ;;		_LCD_ButtonCreate
  9793 ;;		_LCD_SliderCreate
  9794 ;;		_Paddle_init
  9795 ;;		_Score_init
  9796 ;; This function is called by:
  9797 ;;		_Factory_init
  9798 ;;		_gameControllerController
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text35
  9803  002220                     __ptext35:
  9804                           	callstack 0
  9805  002220                     _GameParameters_init:
  9806                           	callstack 21
  9807  002220                     
  9808                           ;class/gameParameters.c: 3: void GameParameters_init(struct GameParameters* s);class/gam
      +                          eParameters.c: 4: {;class/gameParameters.c: 5:     s->backlight = 11;
  9809  002220  C02B  FFD9         	movff	GameParameters_init@s,fsr2l
  9810  002224  C02C  FFDA         	movff	GameParameters_init@s+1,fsr2h
  9811  002228  0E0B               	movlw	11
  9812  00222A  6EDE               	movwf	postinc2,c
  9813  00222C  0E00               	movlw	0
  9814  00222E  6EDD               	movwf	postdec2,c
  9815  002230                     
  9816                           ;class/gameParameters.c: 6:     CCPR2L = 255;
  9817  002230  6867               	setf	103,c	;volatile
  9818  002232                     
  9819                           ;class/gameParameters.c: 7:     s->player = 0;
  9820  002232  EE20 F002          	lfsr	2,2
  9821  002236  502B               	movf	GameParameters_init@s^0,w,c
  9822  002238  26D9               	addwf	fsr2l,f,c
  9823  00223A  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9824  00223C  22DA               	addwfc	fsr2h,f,c
  9825  00223E  0E00               	movlw	0
  9826  002240  6EDE               	movwf	postinc2,c
  9827  002242  0E00               	movlw	0
  9828  002244  6EDD               	movwf	postdec2,c
  9829  002246                     
  9830                           ;class/gameParameters.c: 8:     s->x=0;
  9831  002246  EE20 F004          	lfsr	2,4
  9832  00224A  502B               	movf	GameParameters_init@s^0,w,c
  9833  00224C  26D9               	addwf	fsr2l,f,c
  9834  00224E  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9835  002250  22DA               	addwfc	fsr2h,f,c
  9836  002252  0E00               	movlw	0
  9837  002254  6EDE               	movwf	postinc2,c
  9838  002256  0E00               	movlw	0
  9839  002258  6EDD               	movwf	postdec2,c
  9840  00225A                     
  9841                           ;class/gameParameters.c: 9:     s->y=0;
  9842  00225A  EE20 F006          	lfsr	2,6
  9843  00225E  502B               	movf	GameParameters_init@s^0,w,c
  9844  002260  26D9               	addwf	fsr2l,f,c
  9845  002262  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9846  002264  22DA               	addwfc	fsr2h,f,c
  9847  002266  0E00               	movlw	0
  9848  002268  6EDE               	movwf	postinc2,c
  9849  00226A  0E00               	movlw	0
  9850  00226C  6EDD               	movwf	postdec2,c
  9851  00226E                     
  9852                           ;class/gameParameters.c: 10:     Score_init(&s->s1);
  9853  00226E  0EE9               	movlw	233
  9854  002270  242B               	addwf	GameParameters_init@s^0,w,c
  9855  002272  6E12               	movwf	Score_init@s^0,c
  9856  002274  0E00               	movlw	0
  9857  002276  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9858  002278  6E13               	movwf	(Score_init@s+1)^0,c
  9859  00227A  EC34  F031         	call	_Score_init	;wreg free
  9860  00227E                     
  9861                           ;class/gameParameters.c: 11:     Ball_init(&(s->b));
  9862  00227E  0EC9               	movlw	201
  9863  002280  242B               	addwf	GameParameters_init@s^0,w,c
  9864  002282  6E12               	movwf	Ball_init@b^0,c
  9865  002284  0E00               	movlw	0
  9866  002286  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9867  002288  6E13               	movwf	(Ball_init@b+1)^0,c
  9868  00228A  ECCD  F02D         	call	_Ball_init	;wreg free
  9869  00228E                     
  9870                           ;class/gameParameters.c: 12:     Paddle_init(&(s->p1),0);
  9871  00228E  0ED5               	movlw	213
  9872  002290  242B               	addwf	GameParameters_init@s^0,w,c
  9873  002292  6E12               	movwf	Paddle_init@p^0,c
  9874  002294  0E00               	movlw	0
  9875  002296  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9876  002298  6E13               	movwf	(Paddle_init@p+1)^0,c
  9877  00229A  0E00               	movlw	0
  9878  00229C  6E15               	movwf	(Paddle_init@team+1)^0,c
  9879  00229E  0E00               	movlw	0
  9880  0022A0  6E14               	movwf	Paddle_init@team^0,c
  9881  0022A2  EC16  F02B         	call	_Paddle_init	;wreg free
  9882  0022A6                     
  9883                           ;class/gameParameters.c: 13:     Paddle_init(&(s->p2),1);
  9884  0022A6  0EDF               	movlw	223
  9885  0022A8  242B               	addwf	GameParameters_init@s^0,w,c
  9886  0022AA  6E12               	movwf	Paddle_init@p^0,c
  9887  0022AC  0E00               	movlw	0
  9888  0022AE  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9889  0022B0  6E13               	movwf	(Paddle_init@p+1)^0,c
  9890  0022B2  0E00               	movlw	0
  9891  0022B4  6E15               	movwf	(Paddle_init@team+1)^0,c
  9892  0022B6  0E01               	movlw	1
  9893  0022B8  6E14               	movwf	Paddle_init@team^0,c
  9894  0022BA  EC16  F02B         	call	_Paddle_init	;wreg free
  9895  0022BE                     
  9896                           ;class/gameParameters.c: 14:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"Parametres",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s
      +                          ->btnParam),1);
  9897  0022BE  0E00               	movlw	0
  9898  0022C0  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  9899  0022C2  0E82               	movlw	130
  9900  0022C4  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  9901  0022C6  0E00               	movlw	0
  9902  0022C8  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  9903  0022CA  0E32               	movlw	50
  9904  0022CC  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  9905  0022CE  0E00               	movlw	0
  9906  0022D0  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  9907  0022D2  0E5A               	movlw	90
  9908  0022D4  6E16               	movwf	LCD_ButtonCreate@width^0,c
  9909  0022D6  0E00               	movlw	0
  9910  0022D8  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  9911  0022DA  0E14               	movlw	20
  9912  0022DC  6E18               	movwf	LCD_ButtonCreate@height^0,c
  9913  0022DE  0EFF               	movlw	255
  9914  0022E0  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  9915  0022E2  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  9916  0022E4  0E00               	movlw	0
  9917  0022E6  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  9918  0022E8  0E00               	movlw	0
  9919  0022EA  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  9920  0022EC  0EAB               	movlw	low STR_4
  9921  0022EE  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  9922  0022F0  0E7F               	movlw	high STR_4
  9923  0022F2  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  9924  0022F4  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  9925  0022F6  6E20               	movwf	LCD_ButtonCreate@font^0,c
  9926  0022F8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  9927  0022FA  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  9928  0022FC  0E00               	movlw	0
  9929  0022FE  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  9930  002300  0E00               	movlw	0
  9931  002302  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  9932  002304  0E00               	movlw	0
  9933  002306  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  9934  002308  0E00               	movlw	0
  9935  00230A  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  9936  00230C  0E00               	movlw	0
  9937  00230E  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  9938  002310  0E00               	movlw	0
  9939  002312  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  9940  002314  0E08               	movlw	8
  9941  002316  242B               	addwf	GameParameters_init@s^0,w,c
  9942  002318  6E28               	movwf	LCD_ButtonCreate@button^0,c
  9943  00231A  0E00               	movlw	0
  9944  00231C  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9945  00231E  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  9946  002320  0E01               	movlw	1
  9947  002322  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  9948  002324  ECE4  F024         	call	_LCD_ButtonCreate	;wreg free
  9949  002328                     
  9950                           ;class/gameParameters.c: 15:     LCD_ButtonCreate(10,250,70,20,0b1111111111111111,0b0000
      +                          000000000000,"1 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->
      +                          btnOnePlayer),2);
  9951  002328  0E00               	movlw	0
  9952  00232A  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  9953  00232C  0E0A               	movlw	10
  9954  00232E  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  9955  002330  0E00               	movlw	0
  9956  002332  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  9957  002334  0EFA               	movlw	250
  9958  002336  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  9959  002338  0E00               	movlw	0
  9960  00233A  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  9961  00233C  0E46               	movlw	70
  9962  00233E  6E16               	movwf	LCD_ButtonCreate@width^0,c
  9963  002340  0E00               	movlw	0
  9964  002342  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  9965  002344  0E14               	movlw	20
  9966  002346  6E18               	movwf	LCD_ButtonCreate@height^0,c
  9967  002348  0EFF               	movlw	255
  9968  00234A  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  9969  00234C  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  9970  00234E  0E00               	movlw	0
  9971  002350  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  9972  002352  0E00               	movlw	0
  9973  002354  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  9974  002356  0EC9               	movlw	low STR_5
  9975  002358  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  9976  00235A  0E7F               	movlw	high STR_5
  9977  00235C  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  9978  00235E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  9979  002360  6E20               	movwf	LCD_ButtonCreate@font^0,c
  9980  002362  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  9981  002364  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  9982  002366  0E00               	movlw	0
  9983  002368  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  9984  00236A  0E00               	movlw	0
  9985  00236C  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  9986  00236E  0E00               	movlw	0
  9987  002370  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  9988  002372  0E00               	movlw	0
  9989  002374  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  9990  002376  0E00               	movlw	0
  9991  002378  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  9992  00237A  0E00               	movlw	0
  9993  00237C  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  9994  00237E  0E20               	movlw	32
  9995  002380  242B               	addwf	GameParameters_init@s^0,w,c
  9996  002382  6E28               	movwf	LCD_ButtonCreate@button^0,c
  9997  002384  0E00               	movlw	0
  9998  002386  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9999  002388  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10000  00238A  0E02               	movlw	2
 10001  00238C  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10002  00238E  ECE4  F024         	call	_LCD_ButtonCreate	;wreg free
 10003  002392                     
 10004                           ;class/gameParameters.c: 16:     LCD_ButtonCreate(150,250,70,20,0b1111111111111111,0b000
      +                          0000000000000,"2 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnTwoPlayer),3);
 10005  002392  0E00               	movlw	0
 10006  002394  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10007  002396  0E96               	movlw	150
 10008  002398  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10009  00239A  0E00               	movlw	0
 10010  00239C  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10011  00239E  0EFA               	movlw	250
 10012  0023A0  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10013  0023A2  0E00               	movlw	0
 10014  0023A4  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10015  0023A6  0E46               	movlw	70
 10016  0023A8  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10017  0023AA  0E00               	movlw	0
 10018  0023AC  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10019  0023AE  0E14               	movlw	20
 10020  0023B0  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10021  0023B2  0EFF               	movlw	255
 10022  0023B4  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10023  0023B6  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10024  0023B8  0E00               	movlw	0
 10025  0023BA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10026  0023BC  0E00               	movlw	0
 10027  0023BE  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10028  0023C0  0ED2               	movlw	low STR_6
 10029  0023C2  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10030  0023C4  0E7F               	movlw	high STR_6
 10031  0023C6  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10032  0023C8  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10033  0023CA  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10034  0023CC  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10035  0023CE  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10036  0023D0  0E00               	movlw	0
 10037  0023D2  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10038  0023D4  0E00               	movlw	0
 10039  0023D6  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10040  0023D8  0E00               	movlw	0
 10041  0023DA  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10042  0023DC  0E00               	movlw	0
 10043  0023DE  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10044  0023E0  0E00               	movlw	0
 10045  0023E2  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10046  0023E4  0E00               	movlw	0
 10047  0023E6  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10048  0023E8  0E38               	movlw	56
 10049  0023EA  242B               	addwf	GameParameters_init@s^0,w,c
 10050  0023EC  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10051  0023EE  0E00               	movlw	0
 10052  0023F0  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10053  0023F2  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10054  0023F4  0E03               	movlw	3
 10055  0023F6  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10056  0023F8  ECE4  F024         	call	_LCD_ButtonCreate	;wreg free
 10057  0023FC                     
 10058                           ;class/gameParameters.c: 17:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"QUITTER",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->b
      +                          tnLeaveParam),4);
 10059  0023FC  0E00               	movlw	0
 10060  0023FE  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10061  002400  0E82               	movlw	130
 10062  002402  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10063  002404  0E00               	movlw	0
 10064  002406  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10065  002408  0E32               	movlw	50
 10066  00240A  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10067  00240C  0E00               	movlw	0
 10068  00240E  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10069  002410  0E5A               	movlw	90
 10070  002412  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10071  002414  0E00               	movlw	0
 10072  002416  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10073  002418  0E14               	movlw	20
 10074  00241A  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10075  00241C  0EFF               	movlw	255
 10076  00241E  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10077  002420  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10078  002422  0E00               	movlw	0
 10079  002424  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10080  002426  0E00               	movlw	0
 10081  002428  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10082  00242A  0EE3               	movlw	low STR_7
 10083  00242C  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10084  00242E  0E7F               	movlw	high STR_7
 10085  002430  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10086  002432  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10087  002434  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10088  002436  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10089  002438  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10090  00243A  0E00               	movlw	0
 10091  00243C  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10092  00243E  0E00               	movlw	0
 10093  002440  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10094  002442  0E00               	movlw	0
 10095  002444  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10096  002446  0E00               	movlw	0
 10097  002448  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10098  00244A  0E00               	movlw	0
 10099  00244C  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10100  00244E  0E00               	movlw	0
 10101  002450  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10102  002452  0E50               	movlw	80
 10103  002454  242B               	addwf	GameParameters_init@s^0,w,c
 10104  002456  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10105  002458  0E00               	movlw	0
 10106  00245A  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10107  00245C  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10108  00245E  0E04               	movlw	4
 10109  002460  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10110  002462  ECE4  F024         	call	_LCD_ButtonCreate	;wreg free
 10111  002466                     
 10112                           ;class/gameParameters.c: 18:     LCD_ButtonCreate(10,220,70,50,0b0000000000000000,0b1111
      +                          111111111111,"<--",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnLe
      +                          ft),5);
 10113  002466  0E00               	movlw	0
 10114  002468  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10115  00246A  0E0A               	movlw	10
 10116  00246C  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10117  00246E  0E00               	movlw	0
 10118  002470  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10119  002472  0EDC               	movlw	220
 10120  002474  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10121  002476  0E00               	movlw	0
 10122  002478  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10123  00247A  0E46               	movlw	70
 10124  00247C  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10125  00247E  0E00               	movlw	0
 10126  002480  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10127  002482  0E32               	movlw	50
 10128  002484  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10129  002486  0E00               	movlw	0
 10130  002488  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10131  00248A  0E00               	movlw	0
 10132  00248C  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10133  00248E  0EFF               	movlw	255
 10134  002490  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10135  002492  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10136  002494  0EF7               	movlw	low STR_8
 10137  002496  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10138  002498  0E7F               	movlw	high STR_8
 10139  00249A  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10140  00249C  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10141  00249E  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10142  0024A0  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10143  0024A2  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10144  0024A4  0E00               	movlw	0
 10145  0024A6  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10146  0024A8  0E00               	movlw	0
 10147  0024AA  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10148  0024AC  0E00               	movlw	0
 10149  0024AE  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10150  0024B0  0E00               	movlw	0
 10151  0024B2  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10152  0024B4  0E00               	movlw	0
 10153  0024B6  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10154  0024B8  0E00               	movlw	0
 10155  0024BA  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10156  0024BC  0E68               	movlw	104
 10157  0024BE  242B               	addwf	GameParameters_init@s^0,w,c
 10158  0024C0  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10159  0024C2  0E00               	movlw	0
 10160  0024C4  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10161  0024C6  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10162  0024C8  0E05               	movlw	5
 10163  0024CA  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10164  0024CC  ECE4  F024         	call	_LCD_ButtonCreate	;wreg free
 10165  0024D0                     
 10166                           ;class/gameParameters.c: 19:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"-->",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnR
      +                          ight),6);
 10167  0024D0  0E00               	movlw	0
 10168  0024D2  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10169  0024D4  0E96               	movlw	150
 10170  0024D6  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10171  0024D8  0E00               	movlw	0
 10172  0024DA  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10173  0024DC  0EDC               	movlw	220
 10174  0024DE  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10175  0024E0  0E00               	movlw	0
 10176  0024E2  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10177  0024E4  0E46               	movlw	70
 10178  0024E6  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10179  0024E8  0E00               	movlw	0
 10180  0024EA  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10181  0024EC  0E32               	movlw	50
 10182  0024EE  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10183  0024F0  0E00               	movlw	0
 10184  0024F2  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10185  0024F4  0E00               	movlw	0
 10186  0024F6  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10187  0024F8  0EFF               	movlw	255
 10188  0024FA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10189  0024FC  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10190  0024FE  0EFB               	movlw	low STR_9
 10191  002500  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10192  002502  0E7F               	movlw	high STR_9
 10193  002504  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10194  002506  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10195  002508  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10196  00250A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10197  00250C  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10198  00250E  0E00               	movlw	0
 10199  002510  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10200  002512  0E00               	movlw	0
 10201  002514  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10202  002516  0E00               	movlw	0
 10203  002518  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10204  00251A  0E00               	movlw	0
 10205  00251C  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10206  00251E  0E00               	movlw	0
 10207  002520  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10208  002522  0E00               	movlw	0
 10209  002524  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10210  002526  0E98               	movlw	152
 10211  002528  242B               	addwf	GameParameters_init@s^0,w,c
 10212  00252A  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10213  00252C  0E00               	movlw	0
 10214  00252E  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10215  002530  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10216  002532  0E06               	movlw	6
 10217  002534  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10218  002536  ECE4  F024         	call	_LCD_ButtonCreate	;wreg free
 10219  00253A                     
 10220                           ;class/gameParameters.c: 20:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"New Game",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnNewGame),6);
 10221  00253A  0E00               	movlw	0
 10222  00253C  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10223  00253E  0E96               	movlw	150
 10224  002540  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10225  002542  0E00               	movlw	0
 10226  002544  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10227  002546  0EDC               	movlw	220
 10228  002548  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10229  00254A  0E00               	movlw	0
 10230  00254C  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10231  00254E  0E46               	movlw	70
 10232  002550  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10233  002552  0E00               	movlw	0
 10234  002554  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10235  002556  0E32               	movlw	50
 10236  002558  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10237  00255A  0E00               	movlw	0
 10238  00255C  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10239  00255E  0E00               	movlw	0
 10240  002560  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10241  002562  0EFF               	movlw	255
 10242  002564  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10243  002566  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10244  002568  0EC0               	movlw	low STR_10
 10245  00256A  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10246  00256C  0E7F               	movlw	high STR_10
 10247  00256E  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10248  002570  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10249  002572  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10250  002574  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10251  002576  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10252  002578  0E00               	movlw	0
 10253  00257A  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10254  00257C  0E00               	movlw	0
 10255  00257E  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10256  002580  0E00               	movlw	0
 10257  002582  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10258  002584  0E00               	movlw	0
 10259  002586  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10260  002588  0E00               	movlw	0
 10261  00258A  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10262  00258C  0E00               	movlw	0
 10263  00258E  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10264  002590  0E80               	movlw	128
 10265  002592  242B               	addwf	GameParameters_init@s^0,w,c
 10266  002594  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10267  002596  0E00               	movlw	0
 10268  002598  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10269  00259A  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10270  00259C  0E06               	movlw	6
 10271  00259E  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10272  0025A0  ECE4  F024         	call	_LCD_ButtonCreate	;wreg free
 10273  0025A4                     
 10274                           ;class/gameParameters.c: 21:     LCD_SliderCreate(50,100,165,20,0b0000000000000000,0b111
      +                          1111111111111,0b1111100000000000,0,11,((void*)0),&(s->sldParam));
 10275  0025A4  0E00               	movlw	0
 10276  0025A6  6E13               	movwf	(LCD_SliderCreate@posX+1)^0,c
 10277  0025A8  0E32               	movlw	50
 10278  0025AA  6E12               	movwf	LCD_SliderCreate@posX^0,c
 10279  0025AC  0E00               	movlw	0
 10280  0025AE  6E15               	movwf	(LCD_SliderCreate@posY+1)^0,c
 10281  0025B0  0E64               	movlw	100
 10282  0025B2  6E14               	movwf	LCD_SliderCreate@posY^0,c
 10283  0025B4  0E00               	movlw	0
 10284  0025B6  6E17               	movwf	(LCD_SliderCreate@width+1)^0,c
 10285  0025B8  0EA5               	movlw	165
 10286  0025BA  6E16               	movwf	LCD_SliderCreate@width^0,c
 10287  0025BC  0E00               	movlw	0
 10288  0025BE  6E19               	movwf	(LCD_SliderCreate@height+1)^0,c
 10289  0025C0  0E14               	movlw	20
 10290  0025C2  6E18               	movwf	LCD_SliderCreate@height^0,c
 10291  0025C4  0E00               	movlw	0
 10292  0025C6  6E1B               	movwf	(LCD_SliderCreate@sldColor+1)^0,c
 10293  0025C8  0E00               	movlw	0
 10294  0025CA  6E1A               	movwf	LCD_SliderCreate@sldColor^0,c
 10295  0025CC  0EFF               	movlw	255
 10296  0025CE  6E1D               	movwf	(LCD_SliderCreate@bgColor+1)^0,c
 10297  0025D0  681C               	setf	LCD_SliderCreate@bgColor^0,c
 10298  0025D2  0EF8               	movlw	248
 10299  0025D4  6E1F               	movwf	(LCD_SliderCreate@borderColor+1)^0,c
 10300  0025D6  0E00               	movlw	0
 10301  0025D8  6E1E               	movwf	LCD_SliderCreate@borderColor^0,c
 10302  0025DA  0E00               	movlw	0
 10303  0025DC  6E21               	movwf	(LCD_SliderCreate@cursorWidth+1)^0,c
 10304  0025DE  0E00               	movlw	0
 10305  0025E0  6E20               	movwf	LCD_SliderCreate@cursorWidth^0,c
 10306  0025E2  0E00               	movlw	0
 10307  0025E4  6E23               	movwf	(LCD_SliderCreate@steps+1)^0,c
 10308  0025E6  0E0B               	movlw	11
 10309  0025E8  6E22               	movwf	LCD_SliderCreate@steps^0,c
 10310  0025EA  0E00               	movlw	0
 10311  0025EC  6E24               	movwf	LCD_SliderCreate@fpPress^0,c
 10312  0025EE  0E00               	movlw	0
 10313  0025F0  6E25               	movwf	(LCD_SliderCreate@fpPress+1)^0,c
 10314  0025F2  0EB0               	movlw	176
 10315  0025F4  242B               	addwf	GameParameters_init@s^0,w,c
 10316  0025F6  6E26               	movwf	LCD_SliderCreate@slider^0,c
 10317  0025F8  0E00               	movlw	0
 10318  0025FA  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10319  0025FC  6E27               	movwf	(LCD_SliderCreate@slider+1)^0,c
 10320  0025FE  ECDB  F025         	call	_LCD_SliderCreate	;wreg free
 10321  002602  0012               	return		;funcret
 10322  002604                     __end_of_GameParameters_init:
 10323                           	callstack 0
 10324                           
 10325 ;; *************** function _Score_init *****************
 10326 ;; Defined at:
 10327 ;;		line 3 in file "class/score.c"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;  s               2   17[COMRAM] PTR struct Score
 10330 ;;		 -> g1(239), 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      void 
 10335 ;; Registers used:
 10336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10342 ;;      Params:         2       0       0       0       0       0       0
 10343 ;;      Locals:         0       0       0       0       0       0       0
 10344 ;;      Temps:          0       0       0       0       0       0       0
 10345 ;;      Totals:         2       0       0       0       0       0       0
 10346 ;;Total ram usage:        2 bytes
 10347 ;; Hardware stack levels used: 1
 10348 ;; Hardware stack levels required when called: 4
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_GameParameters_init
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           	psect	text36
 10357  006268                     __ptext36:
 10358                           	callstack 0
 10359  006268                     _Score_init:
 10360                           	callstack 21
 10361  006268                     
 10362                           ;class/score.c: 3: void Score_init(struct Score* s);class/score.c: 4: {;class/score.c: 5
      +                          :     s->homeScore = 0;
 10363  006268  C012  FFD9         	movff	Score_init@s,fsr2l
 10364  00626C  C013  FFDA         	movff	Score_init@s+1,fsr2h
 10365  006270  0E00               	movlw	0
 10366  006272  6EDE               	movwf	postinc2,c
 10367  006274  0E00               	movlw	0
 10368  006276  6EDD               	movwf	postdec2,c
 10369  006278                     
 10370                           ;class/score.c: 6:     s->awayScore = 0;
 10371  006278  EE20 F002          	lfsr	2,2
 10372  00627C  5012               	movf	Score_init@s^0,w,c
 10373  00627E  26D9               	addwf	fsr2l,f,c
 10374  006280  5013               	movf	(Score_init@s+1)^0,w,c
 10375  006282  22DA               	addwfc	fsr2h,f,c
 10376  006284  0E00               	movlw	0
 10377  006286  6EDE               	movwf	postinc2,c
 10378  006288  0E00               	movlw	0
 10379  00628A  6EDD               	movwf	postdec2,c
 10380  00628C  0012               	return		;funcret
 10381  00628E                     __end_of_Score_init:
 10382                           	callstack 0
 10383                           
 10384 ;; *************** function _Paddle_init *****************
 10385 ;; Defined at:
 10386 ;;		line 6 in file "class/paddle.c"
 10387 ;; Parameters:    Size  Location     Type
 10388 ;;  p               2   17[COMRAM] PTR struct Paddle
 10389 ;;		 -> g1(239), 
 10390 ;;  team            2   19[COMRAM] unsigned short 
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10402 ;;      Params:         4       0       0       0       0       0       0
 10403 ;;      Locals:         0       0       0       0       0       0       0
 10404 ;;      Temps:          0       0       0       0       0       0       0
 10405 ;;      Totals:         4       0       0       0       0       0       0
 10406 ;;Total ram usage:        4 bytes
 10407 ;; Hardware stack levels used: 1
 10408 ;; Hardware stack levels required when called: 4
 10409 ;; This function calls:
 10410 ;;		Nothing
 10411 ;; This function is called by:
 10412 ;;		_GameParameters_init
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           	psect	text37
 10417  00562C                     __ptext37:
 10418                           	callstack 0
 10419  00562C                     _Paddle_init:
 10420                           	callstack 21
 10421  00562C                     
 10422                           ;class/paddle.c: 6: void Paddle_init(struct Paddle* p,uint16_t team);class/paddle.c: 7: 
      +                          {;class/paddle.c: 8:     p->oldx=0;
 10423  00562C  EE20 F004          	lfsr	2,4
 10424  005630  5012               	movf	Paddle_init@p^0,w,c
 10425  005632  26D9               	addwf	fsr2l,f,c
 10426  005634  5013               	movf	(Paddle_init@p+1)^0,w,c
 10427  005636  22DA               	addwfc	fsr2h,f,c
 10428  005638  0E00               	movlw	0
 10429  00563A  6EDE               	movwf	postinc2,c
 10430  00563C  0E00               	movlw	0
 10431  00563E  6EDD               	movwf	postdec2,c
 10432                           
 10433                           ;class/paddle.c: 9:     p->oldy=0;
 10434  005640  EE20 F006          	lfsr	2,6
 10435  005644  5012               	movf	Paddle_init@p^0,w,c
 10436  005646  26D9               	addwf	fsr2l,f,c
 10437  005648  5013               	movf	(Paddle_init@p+1)^0,w,c
 10438  00564A  22DA               	addwfc	fsr2h,f,c
 10439  00564C  0E00               	movlw	0
 10440  00564E  6EDE               	movwf	postinc2,c
 10441  005650  0E00               	movlw	0
 10442  005652  6EDD               	movwf	postdec2,c
 10443  005654                     
 10444                           ;class/paddle.c: 10:     if(team)
 10445  005654  5014               	movf	Paddle_init@team^0,w,c
 10446  005656  1015               	iorwf	(Paddle_init@team+1)^0,w,c
 10447  005658  B4D8               	btfsc	status,2,c
 10448  00565A  EF31  F02B         	goto	u6501
 10449  00565E  EF33  F02B         	goto	u6500
 10450  005662                     u6501:
 10451  005662  EF51  F02B         	goto	l9281
 10452  005666                     u6500:
 10453  005666                     
 10454                           ;class/paddle.c: 11:     {;class/paddle.c: 12:         p->x = 90;
 10455  005666  C012  FFD9         	movff	Paddle_init@p,fsr2l
 10456  00566A  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
 10457  00566E  0E5A               	movlw	90
 10458  005670  6EDE               	movwf	postinc2,c
 10459  005672  0E00               	movlw	0
 10460  005674  6EDD               	movwf	postdec2,c
 10461  005676                     
 10462                           ;class/paddle.c: 13:         p->y = 20;
 10463  005676  EE20 F002          	lfsr	2,2
 10464  00567A  5012               	movf	Paddle_init@p^0,w,c
 10465  00567C  26D9               	addwf	fsr2l,f,c
 10466  00567E  5013               	movf	(Paddle_init@p+1)^0,w,c
 10467  005680  22DA               	addwfc	fsr2h,f,c
 10468  005682  0E14               	movlw	20
 10469  005684  6EDE               	movwf	postinc2,c
 10470  005686  0E00               	movlw	0
 10471  005688  6EDD               	movwf	postdec2,c
 10472  00568A                     
 10473                           ;class/paddle.c: 14:         p->color = 0b1111111111111111;
 10474  00568A  EE20 F008          	lfsr	2,8
 10475  00568E  5012               	movf	Paddle_init@p^0,w,c
 10476  005690  26D9               	addwf	fsr2l,f,c
 10477  005692  5013               	movf	(Paddle_init@p+1)^0,w,c
 10478  005694  22DA               	addwfc	fsr2h,f,c
 10479  005696  0EFF               	movlw	255
 10480  005698  6EDE               	movwf	postinc2,c
 10481  00569A  0EFF               	movlw	255
 10482  00569C  6EDD               	movwf	postdec2,c
 10483                           
 10484                           ;class/paddle.c: 15:     }
 10485  00569E  EF6D  F02B         	goto	l18
 10486  0056A2                     l9281:
 10487                           
 10488                           ;class/paddle.c: 17:     {;class/paddle.c: 18:         p->x = 90;
 10489  0056A2  C012  FFD9         	movff	Paddle_init@p,fsr2l
 10490  0056A6  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
 10491  0056AA  0E5A               	movlw	90
 10492  0056AC  6EDE               	movwf	postinc2,c
 10493  0056AE  0E00               	movlw	0
 10494  0056B0  6EDD               	movwf	postdec2,c
 10495  0056B2                     
 10496                           ;class/paddle.c: 19:         p->y = 280;
 10497  0056B2  EE20 F002          	lfsr	2,2
 10498  0056B6  5012               	movf	Paddle_init@p^0,w,c
 10499  0056B8  26D9               	addwf	fsr2l,f,c
 10500  0056BA  5013               	movf	(Paddle_init@p+1)^0,w,c
 10501  0056BC  22DA               	addwfc	fsr2h,f,c
 10502  0056BE  0E18               	movlw	24
 10503  0056C0  6EDE               	movwf	postinc2,c
 10504  0056C2  0E01               	movlw	1
 10505  0056C4  6EDD               	movwf	postdec2,c
 10506  0056C6                     
 10507                           ;class/paddle.c: 20:         p->color = 0b1111111111111111;
 10508  0056C6  EE20 F008          	lfsr	2,8
 10509  0056CA  5012               	movf	Paddle_init@p^0,w,c
 10510  0056CC  26D9               	addwf	fsr2l,f,c
 10511  0056CE  5013               	movf	(Paddle_init@p+1)^0,w,c
 10512  0056D0  22DA               	addwfc	fsr2h,f,c
 10513  0056D2  0EFF               	movlw	255
 10514  0056D4  6EDE               	movwf	postinc2,c
 10515  0056D6  0EFF               	movlw	255
 10516  0056D8  6EDD               	movwf	postdec2,c
 10517  0056DA                     l18:
 10518  0056DA  0012               	return		;funcret
 10519  0056DC                     __end_of_Paddle_init:
 10520                           	callstack 0
 10521                           
 10522 ;; *************** function _LCD_SliderCreate *****************
 10523 ;; Defined at:
 10524 ;;		line 291 in file "libraries/lcd_highlevel.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;  posX            2   17[COMRAM] unsigned short 
 10527 ;;  posY            2   19[COMRAM] unsigned short 
 10528 ;;  width           2   21[COMRAM] unsigned short 
 10529 ;;  height          2   23[COMRAM] unsigned short 
 10530 ;;  sldColor        2   25[COMRAM] unsigned short 
 10531 ;;  bgColor         2   27[COMRAM] unsigned short 
 10532 ;;  borderColor     2   29[COMRAM] unsigned short 
 10533 ;;  cursorWidth     2   31[COMRAM] unsigned short 
 10534 ;;  steps           2   33[COMRAM] unsigned short 
 10535 ;;  fpPress         2   35[COMRAM] PTR FTN()void 
 10536 ;;		 -> Absolute function(1), 
 10537 ;;  slider          2   37[COMRAM] PTR struct .
 10538 ;;		 -> g1(239), 
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;		None
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      void 
 10543 ;; Registers used:
 10544 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10550 ;;      Params:        22       0       0       0       0       0       0
 10551 ;;      Locals:         0       0       0       0       0       0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0
 10553 ;;      Totals:        22       0       0       0       0       0       0
 10554 ;;Total ram usage:       22 bytes
 10555 ;; Hardware stack levels used: 1
 10556 ;; Hardware stack levels required when called: 4
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_GameParameters_init
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564                           	psect	text38
 10565  004BB6                     __ptext38:
 10566                           	callstack 0
 10567  004BB6                     _LCD_SliderCreate:
 10568                           	callstack 21
 10569  004BB6                     
 10570                           ;libraries/lcd_highlevel.c: 291: void LCD_SliderCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 292:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 293:                       uint16_t sldColor, uint16_t bgColor, u
      +                          int16_t borderColor,;libraries/lcd_highlevel.c: 294:                       uint16_t curs
      +                          orWidth,;libraries/lcd_highlevel.c: 295:                       uint16_t steps,;libraries
      +                          /lcd_highlevel.c: 296:                       void (* fpPress)(),;libraries/lcd_highlevel
      +                          .c: 297:                       sld_t * slider)
 10571  004BB6  C026  FFD9         	movff	LCD_SliderCreate@slider,fsr2l
 10572  004BBA  C027  FFDA         	movff	LCD_SliderCreate@slider+1,fsr2h
 10573  004BBE  C012  FFDE         	movff	LCD_SliderCreate@posX,postinc2
 10574  004BC2  C013  FFDD         	movff	LCD_SliderCreate@posX+1,postdec2
 10575  004BC6                     
 10576                           ;libraries/lcd_highlevel.c: 300:   slider->posY = posY;
 10577  004BC6  EE20 F002          	lfsr	2,2
 10578  004BCA  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10579  004BCC  26D9               	addwf	fsr2l,f,c
 10580  004BCE  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10581  004BD0  22DA               	addwfc	fsr2h,f,c
 10582  004BD2  C014  FFDE         	movff	LCD_SliderCreate@posY,postinc2
 10583  004BD6  C015  FFDD         	movff	LCD_SliderCreate@posY+1,postdec2
 10584  004BDA                     
 10585                           ;libraries/lcd_highlevel.c: 301:   slider->height = height;
 10586  004BDA  EE20 F006          	lfsr	2,6
 10587  004BDE  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10588  004BE0  26D9               	addwf	fsr2l,f,c
 10589  004BE2  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10590  004BE4  22DA               	addwfc	fsr2h,f,c
 10591  004BE6  C018  FFDE         	movff	LCD_SliderCreate@height,postinc2
 10592  004BEA  C019  FFDD         	movff	LCD_SliderCreate@height+1,postdec2
 10593  004BEE                     
 10594                           ;libraries/lcd_highlevel.c: 302:   slider->width = width;
 10595  004BEE  EE20 F004          	lfsr	2,4
 10596  004BF2  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10597  004BF4  26D9               	addwf	fsr2l,f,c
 10598  004BF6  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10599  004BF8  22DA               	addwfc	fsr2h,f,c
 10600  004BFA  C016  FFDE         	movff	LCD_SliderCreate@width,postinc2
 10601  004BFE  C017  FFDD         	movff	LCD_SliderCreate@width+1,postdec2
 10602  004C02                     
 10603                           ;libraries/lcd_highlevel.c: 303:   slider->sldColor = sldColor;
 10604  004C02  EE20 F008          	lfsr	2,8
 10605  004C06  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10606  004C08  26D9               	addwf	fsr2l,f,c
 10607  004C0A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10608  004C0C  22DA               	addwfc	fsr2h,f,c
 10609  004C0E  C01A  FFDE         	movff	LCD_SliderCreate@sldColor,postinc2
 10610  004C12  C01B  FFDD         	movff	LCD_SliderCreate@sldColor+1,postdec2
 10611  004C16                     
 10612                           ;libraries/lcd_highlevel.c: 304:   slider->bgColor = bgColor;
 10613  004C16  EE20 F00A          	lfsr	2,10
 10614  004C1A  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10615  004C1C  26D9               	addwf	fsr2l,f,c
 10616  004C1E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10617  004C20  22DA               	addwfc	fsr2h,f,c
 10618  004C22  C01C  FFDE         	movff	LCD_SliderCreate@bgColor,postinc2
 10619  004C26  C01D  FFDD         	movff	LCD_SliderCreate@bgColor+1,postdec2
 10620  004C2A                     
 10621                           ;libraries/lcd_highlevel.c: 305:   slider->borderColor = borderColor;
 10622  004C2A  EE20 F00C          	lfsr	2,12
 10623  004C2E  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10624  004C30  26D9               	addwf	fsr2l,f,c
 10625  004C32  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10626  004C34  22DA               	addwfc	fsr2h,f,c
 10627  004C36  C01E  FFDE         	movff	LCD_SliderCreate@borderColor,postinc2
 10628  004C3A  C01F  FFDD         	movff	LCD_SliderCreate@borderColor+1,postdec2
 10629  004C3E                     
 10630                           ;libraries/lcd_highlevel.c: 306:   slider->cursorWidth = cursorWidth;
 10631  004C3E  EE20 F00E          	lfsr	2,14
 10632  004C42  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10633  004C44  26D9               	addwf	fsr2l,f,c
 10634  004C46  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10635  004C48  22DA               	addwfc	fsr2h,f,c
 10636  004C4A  C020  FFDE         	movff	LCD_SliderCreate@cursorWidth,postinc2
 10637  004C4E  C021  FFDD         	movff	LCD_SliderCreate@cursorWidth+1,postdec2
 10638  004C52                     
 10639                           ;libraries/lcd_highlevel.c: 307:   slider->fpPress = fpPress;
 10640  004C52  EE20 F017          	lfsr	2,23
 10641  004C56  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10642  004C58  26D9               	addwf	fsr2l,f,c
 10643  004C5A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10644  004C5C  22DA               	addwfc	fsr2h,f,c
 10645  004C5E  C024  FFDE         	movff	LCD_SliderCreate@fpPress,postinc2
 10646  004C62  C025  FFDD         	movff	LCD_SliderCreate@fpPress+1,postdec2
 10647  004C66                     
 10648                           ;libraries/lcd_highlevel.c: 308:   slider->steps = steps;
 10649  004C66  EE20 F015          	lfsr	2,21
 10650  004C6A  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10651  004C6C  26D9               	addwf	fsr2l,f,c
 10652  004C6E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10653  004C70  22DA               	addwfc	fsr2h,f,c
 10654  004C72  C022  FFDE         	movff	LCD_SliderCreate@steps,postinc2
 10655  004C76  C023  FFDD         	movff	LCD_SliderCreate@steps+1,postdec2
 10656  004C7A                     
 10657                           ;libraries/lcd_highlevel.c: 309:   slider->value = 0;
 10658  004C7A  EE20 F011          	lfsr	2,17
 10659  004C7E  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10660  004C80  26D9               	addwf	fsr2l,f,c
 10661  004C82  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10662  004C84  22DA               	addwfc	fsr2h,f,c
 10663  004C86  0E00               	movlw	0
 10664  004C88  6EDE               	movwf	postinc2,c
 10665  004C8A  0E00               	movlw	0
 10666  004C8C  6EDD               	movwf	postdec2,c
 10667  004C8E                     
 10668                           ;libraries/lcd_highlevel.c: 310:   slider->oldValue = 0;
 10669  004C8E  EE20 F013          	lfsr	2,19
 10670  004C92  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10671  004C94  26D9               	addwf	fsr2l,f,c
 10672  004C96  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10673  004C98  22DA               	addwfc	fsr2h,f,c
 10674  004C9A  0E00               	movlw	0
 10675  004C9C  6EDE               	movwf	postinc2,c
 10676  004C9E  0E00               	movlw	0
 10677  004CA0  6EDD               	movwf	postdec2,c
 10678  004CA2  0012               	return		;funcret
 10679  004CA4                     __end_of_LCD_SliderCreate:
 10680                           	callstack 0
 10681                           
 10682 ;; *************** function _LCD_ButtonCreate *****************
 10683 ;; Defined at:
 10684 ;;		line 396 in file "libraries/lcd_highlevel.c"
 10685 ;; Parameters:    Size  Location     Type
 10686 ;;  posX            2   17[COMRAM] unsigned short 
 10687 ;;  posY            2   19[COMRAM] unsigned short 
 10688 ;;  width           2   21[COMRAM] unsigned short 
 10689 ;;  height          2   23[COMRAM] unsigned short 
 10690 ;;  txtColor        2   25[COMRAM] unsigned short 
 10691 ;;  bgColor         2   27[COMRAM] unsigned short 
 10692 ;;  textOrBmp       2   29[COMRAM] PTR const unsigned char 
 10693 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 10694 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 10695 ;;  font            2   31[COMRAM] PTR struct .
 10696 ;;		 -> arialNarrow_12ptFontInfo(7), 
 10697 ;;  fpPress         2   33[COMRAM] PTR FTN(unsigned char ,)
 10698 ;;		 -> Absolute function(1), 
 10699 ;;  fpReleased      2   35[COMRAM] PTR FTN(unsigned char ,)
 10700 ;;		 -> Absolute function(1), 
 10701 ;;  fpOut           2   37[COMRAM] PTR FTN(unsigned char ,)
 10702 ;;		 -> Absolute function(1), 
 10703 ;;  button          2   39[COMRAM] PTR struct .
 10704 ;;		 -> g1(239), 
 10705 ;;  index           1   41[COMRAM] unsigned char 
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;		None
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      void 
 10710 ;; Registers used:
 10711 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10717 ;;      Params:        25       0       0       0       0       0       0
 10718 ;;      Locals:         0       0       0       0       0       0       0
 10719 ;;      Temps:          0       0       0       0       0       0       0
 10720 ;;      Totals:        25       0       0       0       0       0       0
 10721 ;;Total ram usage:       25 bytes
 10722 ;; Hardware stack levels used: 1
 10723 ;; Hardware stack levels required when called: 4
 10724 ;; This function calls:
 10725 ;;		Nothing
 10726 ;; This function is called by:
 10727 ;;		_GameParameters_init
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           	psect	text39
 10732  0049C8                     __ptext39:
 10733                           	callstack 0
 10734  0049C8                     _LCD_ButtonCreate:
 10735                           	callstack 21
 10736  0049C8                     
 10737                           ;libraries/lcd_highlevel.c: 396: void LCD_ButtonCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 397:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 398:                       uint16_t txtColor, uint16_t bgColor,;l
      +                          ibraries/lcd_highlevel.c: 399:                       const uint8_t * textOrBmp, FONT_INF
      +                          O * font,;libraries/lcd_highlevel.c: 400:                       void (*fpPress)(uint8_t)
      +                          , void (* fpReleased)(uint8_t), void (* fpOut)(uint8_t),;libraries/lcd_highlevel.c: 401:
      +                                                 btn_t * button,
 10738  0049C8  C028  FFD9         	movff	LCD_ButtonCreate@button,fsr2l
 10739  0049CC  C029  FFDA         	movff	LCD_ButtonCreate@button+1,fsr2h
 10740  0049D0  C012  FFDE         	movff	LCD_ButtonCreate@posX,postinc2
 10741  0049D4  C013  FFDD         	movff	LCD_ButtonCreate@posX+1,postdec2
 10742  0049D8                     
 10743                           ;libraries/lcd_highlevel.c: 405:   button->posY = posY;
 10744  0049D8  EE20 F002          	lfsr	2,2
 10745  0049DC  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10746  0049DE  26D9               	addwf	fsr2l,f,c
 10747  0049E0  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10748  0049E2  22DA               	addwfc	fsr2h,f,c
 10749  0049E4  C014  FFDE         	movff	LCD_ButtonCreate@posY,postinc2
 10750  0049E8  C015  FFDD         	movff	LCD_ButtonCreate@posY+1,postdec2
 10751  0049EC                     
 10752                           ;libraries/lcd_highlevel.c: 406:   button->height = height;
 10753  0049EC  EE20 F006          	lfsr	2,6
 10754  0049F0  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10755  0049F2  26D9               	addwf	fsr2l,f,c
 10756  0049F4  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10757  0049F6  22DA               	addwfc	fsr2h,f,c
 10758  0049F8  C018  FFDE         	movff	LCD_ButtonCreate@height,postinc2
 10759  0049FC  C019  FFDD         	movff	LCD_ButtonCreate@height+1,postdec2
 10760  004A00                     
 10761                           ;libraries/lcd_highlevel.c: 407:   button->width = width;
 10762  004A00  EE20 F004          	lfsr	2,4
 10763  004A04  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10764  004A06  26D9               	addwf	fsr2l,f,c
 10765  004A08  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10766  004A0A  22DA               	addwfc	fsr2h,f,c
 10767  004A0C  C016  FFDE         	movff	LCD_ButtonCreate@width,postinc2
 10768  004A10  C017  FFDD         	movff	LCD_ButtonCreate@width+1,postdec2
 10769  004A14                     
 10770                           ;libraries/lcd_highlevel.c: 408:   button->txtColor = txtColor;
 10771  004A14  EE20 F008          	lfsr	2,8
 10772  004A18  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10773  004A1A  26D9               	addwf	fsr2l,f,c
 10774  004A1C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10775  004A1E  22DA               	addwfc	fsr2h,f,c
 10776  004A20  C01A  FFDE         	movff	LCD_ButtonCreate@txtColor,postinc2
 10777  004A24  C01B  FFDD         	movff	LCD_ButtonCreate@txtColor+1,postdec2
 10778  004A28                     
 10779                           ;libraries/lcd_highlevel.c: 409:   button->bgColor = bgColor;
 10780  004A28  EE20 F00A          	lfsr	2,10
 10781  004A2C  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10782  004A2E  26D9               	addwf	fsr2l,f,c
 10783  004A30  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10784  004A32  22DA               	addwfc	fsr2h,f,c
 10785  004A34  C01C  FFDE         	movff	LCD_ButtonCreate@bgColor,postinc2
 10786  004A38  C01D  FFDD         	movff	LCD_ButtonCreate@bgColor+1,postdec2
 10787  004A3C                     
 10788                           ;libraries/lcd_highlevel.c: 410:   button->text = textOrBmp;
 10789  004A3C  EE20 F00C          	lfsr	2,12
 10790  004A40  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10791  004A42  26D9               	addwf	fsr2l,f,c
 10792  004A44  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10793  004A46  22DA               	addwfc	fsr2h,f,c
 10794  004A48  C01E  FFDE         	movff	LCD_ButtonCreate@textOrBmp,postinc2
 10795  004A4C  C01F  FFDD         	movff	LCD_ButtonCreate@textOrBmp+1,postdec2
 10796  004A50                     
 10797                           ;libraries/lcd_highlevel.c: 411:   button->font = font;
 10798  004A50  EE20 F00E          	lfsr	2,14
 10799  004A54  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10800  004A56  26D9               	addwf	fsr2l,f,c
 10801  004A58  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10802  004A5A  22DA               	addwfc	fsr2h,f,c
 10803  004A5C  C020  FFDE         	movff	LCD_ButtonCreate@font,postinc2
 10804  004A60  C021  FFDD         	movff	LCD_ButtonCreate@font+1,postdec2
 10805  004A64                     
 10806                           ;libraries/lcd_highlevel.c: 412:   button->fpPress = fpPress;
 10807  004A64  EE20 F011          	lfsr	2,17
 10808  004A68  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10809  004A6A  26D9               	addwf	fsr2l,f,c
 10810  004A6C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10811  004A6E  22DA               	addwfc	fsr2h,f,c
 10812  004A70  C022  FFDE         	movff	LCD_ButtonCreate@fpPress,postinc2
 10813  004A74  C023  FFDD         	movff	LCD_ButtonCreate@fpPress+1,postdec2
 10814  004A78                     
 10815                           ;libraries/lcd_highlevel.c: 413:   button->fpReleased = fpReleased;
 10816  004A78  EE20 F013          	lfsr	2,19
 10817  004A7C  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10818  004A7E  26D9               	addwf	fsr2l,f,c
 10819  004A80  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10820  004A82  22DA               	addwfc	fsr2h,f,c
 10821  004A84  C024  FFDE         	movff	LCD_ButtonCreate@fpReleased,postinc2
 10822  004A88  C025  FFDD         	movff	LCD_ButtonCreate@fpReleased+1,postdec2
 10823  004A8C                     
 10824                           ;libraries/lcd_highlevel.c: 414:   button->fpOut = fpOut;
 10825  004A8C  EE20 F015          	lfsr	2,21
 10826  004A90  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10827  004A92  26D9               	addwf	fsr2l,f,c
 10828  004A94  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10829  004A96  22DA               	addwfc	fsr2h,f,c
 10830  004A98  C026  FFDE         	movff	LCD_ButtonCreate@fpOut,postinc2
 10831  004A9C  C027  FFDD         	movff	LCD_ButtonCreate@fpOut+1,postdec2
 10832  004AA0                     
 10833                           ;libraries/lcd_highlevel.c: 415:   button->index = index;
 10834  004AA0  EE20 F017          	lfsr	2,23
 10835  004AA4  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10836  004AA6  26D9               	addwf	fsr2l,f,c
 10837  004AA8  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10838  004AAA  22DA               	addwfc	fsr2h,f,c
 10839  004AAC  C02A  FFDF         	movff	LCD_ButtonCreate@index,indf2
 10840  004AB0                     
 10841                           ;libraries/lcd_highlevel.c: 416:   button->pressed = 0;
 10842  004AB0  EE20 F010          	lfsr	2,16
 10843  004AB4  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10844  004AB6  26D9               	addwf	fsr2l,f,c
 10845  004AB8  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10846  004ABA  22DA               	addwfc	fsr2h,f,c
 10847  004ABC  0E00               	movlw	0
 10848  004ABE  6EDF               	movwf	indf2,c
 10849  004AC0  0012               	return		;funcret
 10850  004AC2                     __end_of_LCD_ButtonCreate:
 10851                           	callstack 0
 10852                           
 10853 ;; *************** function _Ball_init *****************
 10854 ;; Defined at:
 10855 ;;		line 3 in file "class/ball.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;  b               2   17[COMRAM] PTR struct Ball
 10858 ;;		 -> g1(239), 
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;		None
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  1    wreg      void 
 10863 ;; Registers used:
 10864 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10870 ;;      Params:         2       0       0       0       0       0       0
 10871 ;;      Locals:         0       0       0       0       0       0       0
 10872 ;;      Temps:          0       0       0       0       0       0       0
 10873 ;;      Totals:         2       0       0       0       0       0       0
 10874 ;;Total ram usage:        2 bytes
 10875 ;; Hardware stack levels used: 1
 10876 ;; Hardware stack levels required when called: 4
 10877 ;; This function calls:
 10878 ;;		Nothing
 10879 ;; This function is called by:
 10880 ;;		_GameParameters_init
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           	psect	text40
 10885  005B9A                     __ptext40:
 10886                           	callstack 0
 10887  005B9A                     _Ball_init:
 10888                           	callstack 21
 10889  005B9A                     
 10890                           ;class/ball.c: 3: void Ball_init(struct Ball* b);class/ball.c: 4: {;class/ball.c: 5:    
      +                           b->x = 90;
 10891  005B9A  C012  FFD9         	movff	Ball_init@b,fsr2l
 10892  005B9E  C013  FFDA         	movff	Ball_init@b+1,fsr2h
 10893  005BA2  0E5A               	movlw	90
 10894  005BA4  6EDE               	movwf	postinc2,c
 10895  005BA6  0E00               	movlw	0
 10896  005BA8  6EDD               	movwf	postdec2,c
 10897  005BAA                     
 10898                           ;class/ball.c: 6:     b->y = 150;
 10899  005BAA  EE20 F002          	lfsr	2,2
 10900  005BAE  5012               	movf	Ball_init@b^0,w,c
 10901  005BB0  26D9               	addwf	fsr2l,f,c
 10902  005BB2  5013               	movf	(Ball_init@b+1)^0,w,c
 10903  005BB4  22DA               	addwfc	fsr2h,f,c
 10904  005BB6  0E96               	movlw	150
 10905  005BB8  6EDE               	movwf	postinc2,c
 10906  005BBA  0E00               	movlw	0
 10907  005BBC  6EDD               	movwf	postdec2,c
 10908  005BBE                     
 10909                           ;class/ball.c: 7:     b->oldx=20;
 10910  005BBE  EE20 F004          	lfsr	2,4
 10911  005BC2  5012               	movf	Ball_init@b^0,w,c
 10912  005BC4  26D9               	addwf	fsr2l,f,c
 10913  005BC6  5013               	movf	(Ball_init@b+1)^0,w,c
 10914  005BC8  22DA               	addwfc	fsr2h,f,c
 10915  005BCA  0E14               	movlw	20
 10916  005BCC  6EDE               	movwf	postinc2,c
 10917  005BCE  0E00               	movlw	0
 10918  005BD0  6EDD               	movwf	postdec2,c
 10919  005BD2                     
 10920                           ;class/ball.c: 8:     b->oldy=20;
 10921  005BD2  EE20 F006          	lfsr	2,6
 10922  005BD6  5012               	movf	Ball_init@b^0,w,c
 10923  005BD8  26D9               	addwf	fsr2l,f,c
 10924  005BDA  5013               	movf	(Ball_init@b+1)^0,w,c
 10925  005BDC  22DA               	addwfc	fsr2h,f,c
 10926  005BDE  0E14               	movlw	20
 10927  005BE0  6EDE               	movwf	postinc2,c
 10928  005BE2  0E00               	movlw	0
 10929  005BE4  6EDD               	movwf	postdec2,c
 10930  005BE6                     
 10931                           ;class/ball.c: 9:     b->dx = 0;
 10932  005BE6  EE20 F008          	lfsr	2,8
 10933  005BEA  5012               	movf	Ball_init@b^0,w,c
 10934  005BEC  26D9               	addwf	fsr2l,f,c
 10935  005BEE  5013               	movf	(Ball_init@b+1)^0,w,c
 10936  005BF0  22DA               	addwfc	fsr2h,f,c
 10937  005BF2  0E00               	movlw	0
 10938  005BF4  6EDE               	movwf	postinc2,c
 10939  005BF6  0E00               	movlw	0
 10940  005BF8  6EDD               	movwf	postdec2,c
 10941  005BFA                     
 10942                           ;class/ball.c: 10:     b->dy = 1;
 10943  005BFA  EE20 F00A          	lfsr	2,10
 10944  005BFE  5012               	movf	Ball_init@b^0,w,c
 10945  005C00  26D9               	addwf	fsr2l,f,c
 10946  005C02  5013               	movf	(Ball_init@b+1)^0,w,c
 10947  005C04  22DA               	addwfc	fsr2h,f,c
 10948  005C06  0E01               	movlw	1
 10949  005C08  6EDE               	movwf	postinc2,c
 10950  005C0A  0E00               	movlw	0
 10951  005C0C  6EDD               	movwf	postdec2,c
 10952  005C0E  0012               	return		;funcret
 10953  005C10                     __end_of_Ball_init:
 10954                           	callstack 0
 10955                           
 10956 ;; *************** function _displaySM *****************
 10957 ;; Defined at:
 10958 ;;		line 26 in file "stateMachine/display.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;  ev              1    wreg     unsigned char 
 10961 ;;  g               2   67[BANK0 ] PTR struct GameParameter
 10962 ;;		 -> g1(239), 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;  ev              1   71[BANK0 ] unsigned char 
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  1    wreg      void 
 10967 ;; Registers used:
 10968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10974 ;;      Params:         0       2       0       0       0       0       0
 10975 ;;      Locals:         0       1       0       0       0       0       0
 10976 ;;      Temps:          0       2       0       0       0       0       0
 10977 ;;      Totals:         0       5       0       0       0       0       0
 10978 ;;Total ram usage:        5 bytes
 10979 ;; Hardware stack levels used: 1
 10980 ;; Hardware stack levels required when called: 14
 10981 ;; This function calls:
 10982 ;;		_Menu_inGameDraw
 10983 ;;		_displayController
 10984 ;; This function is called by:
 10985 ;;		_Factory_exec
 10986 ;; This function uses a non-reentrant model
 10987 ;;
 10988                           
 10989                           	psect	text41
 10990  0048C8                     __ptext41:
 10991                           	callstack 0
 10992  0048C8                     _displaySM:
 10993                           	callstack 15
 10994                           
 10995                           ;incstack = 0
 10996                           ;displaySM@ev stored from wreg
 10997  0048C8  0100               	movlb	0	; () banked
 10998  0048CA  6FA7               	movwf	displaySM@ev& (0+255),b
 10999  0048CC                     
 11000                           ;stateMachine/display.c: 26: void displaySM(Event ev, GameParameters* g);stateMachine/di
      +                          splay.c: 27: {;stateMachine/display.c: 28:    switch(displayState)
 11001  0048CC  EFC5  F024         	goto	l10361
 11002  0048D0                     l10323:
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;stateMachine/display.c: 31:             if((ev==evOnePlayer)||(ev==evTwoPlayer))
 11006  0048D0  0E05               	movlw	5
 11007  0048D2  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11008  0048D4  B4D8               	btfsc	status,2,c
 11009  0048D6  EF6F  F024         	goto	u7821
 11010  0048DA  EF71  F024         	goto	u7820
 11011  0048DE                     u7821:
 11012  0048DE  EF7A  F024         	goto	l10327
 11013  0048E2                     u7820:
 11014  0048E2                     
 11015                           ; BSR set to: 0
 11016  0048E2  0E06               	movlw	6
 11017  0048E4  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11018  0048E6  A4D8               	btfss	status,2,c
 11019  0048E8  EF78  F024         	goto	u7831
 11020  0048EC  EF7A  F024         	goto	u7830
 11021  0048F0                     u7831:
 11022  0048F0  EF8A  F024         	goto	l10333
 11023  0048F4                     u7830:
 11024  0048F4                     l10327:
 11025                           
 11026                           ; BSR set to: 0
 11027                           ;stateMachine/display.c: 32:             {;stateMachine/display.c: 33:                 d
      +                          isplayState=INGAME;
 11028  0048F4  0E02               	movlw	2
 11029  0048F6  6FDD               	movwf	_displayState& (0+255),b
 11030  0048F8                     
 11031                           ; BSR set to: 0
 11032                           ;stateMachine/display.c: 34:                 Menu_inGameDraw(g);
 11033  0048F8  C0A3  F092         	movff	displaySM@g,Menu_inGameDraw@g
 11034  0048FC  C0A4  F093         	movff	displaySM@g+1,Menu_inGameDraw@g+1
 11035  004900  EC9E  F02F         	call	_Menu_inGameDraw	;wreg free
 11036  004904                     
 11037                           ;stateMachine/display.c: 35:                 displayController(g,ev);
 11038  004904  C0A3  F09E         	movff	displaySM@g,displayController@g
 11039  004908  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11040  00490C  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11041  004910  ECE2  F023         	call	_displayController	;wreg free
 11042  004914                     l10333:
 11043                           
 11044                           ;stateMachine/display.c: 37:             if(ev==evParameters)
 11045  004914  0E07               	movlw	7
 11046  004916  0100               	movlb	0	; () banked
 11047  004918  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11048  00491A  A4D8               	btfss	status,2,c
 11049  00491C  EF92  F024         	goto	u7841
 11050  004920  EF94  F024         	goto	u7840
 11051  004924                     u7841:
 11052  004924  EFE3  F024         	goto	l560
 11053  004928                     u7840:
 11054  004928                     
 11055                           ; BSR set to: 0
 11056                           ;stateMachine/display.c: 38:             {;stateMachine/display.c: 39:                 d
      +                          isplayState=PARAMETERS;
 11057  004928  0E01               	movlw	1
 11058  00492A  6FDD               	movwf	_displayState& (0+255),b
 11059  00492C                     l10337:
 11060                           
 11061                           ; BSR set to: 0
 11062                           ;stateMachine/display.c: 40:                 displayController(g,ev);
 11063  00492C  C0A3  F09E         	movff	displaySM@g,displayController@g
 11064  004930  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11065  004934  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11066  004938  ECE2  F023         	call	_displayController	;wreg free
 11067  00493C  EFE3  F024         	goto	l560
 11068  004940                     l10339:
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;stateMachine/display.c: 44:             if(ev==evLeaveParam)
 11072  004940  0E08               	movlw	8
 11073  004942  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11074  004944  A4D8               	btfss	status,2,c
 11075  004946  EFA7  F024         	goto	u7851
 11076  00494A  EFA9  F024         	goto	u7850
 11077  00494E                     u7851:
 11078  00494E  EFE3  F024         	goto	l560
 11079  004952                     u7850:
 11080  004952                     l10341:
 11081                           
 11082                           ; BSR set to: 0
 11083                           ;stateMachine/display.c: 45:             {;stateMachine/display.c: 46:                 d
      +                          isplayState=WELCOME;
 11084  004952  0E00               	movlw	0
 11085  004954  6FDD               	movwf	_displayState& (0+255),b
 11086  004956  EF96  F024         	goto	l10337
 11087  00495A                     l10345:
 11088                           
 11089                           ; BSR set to: 0
 11090                           ;stateMachine/display.c: 51:             if(ev==evEndGame)
 11091  00495A  0E09               	movlw	9
 11092  00495C  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11093  00495E  A4D8               	btfss	status,2,c
 11094  004960  EFB4  F024         	goto	u7861
 11095  004964  EFB6  F024         	goto	u7860
 11096  004968                     u7861:
 11097  004968  EF96  F024         	goto	l10337
 11098  00496C                     u7860:
 11099  00496C                     
 11100                           ; BSR set to: 0
 11101                           ;stateMachine/display.c: 52:             {;stateMachine/display.c: 53:                 d
      +                          isplayState=ENDGAME;
 11102  00496C  0E03               	movlw	3
 11103  00496E  6FDD               	movwf	_displayState& (0+255),b
 11104  004970  EF96  F024         	goto	l10337
 11105  004974                     l10353:
 11106                           
 11107                           ; BSR set to: 0
 11108                           ;stateMachine/display.c: 62:            if(ev==evNewGame)
 11109  004974  0E0F               	movlw	15
 11110  004976  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11111  004978  A4D8               	btfss	status,2,c
 11112  00497A  EFC1  F024         	goto	u7871
 11113  00497E  EFC3  F024         	goto	u7870
 11114  004982                     u7871:
 11115  004982  EFE3  F024         	goto	l560
 11116  004986                     u7870:
 11117  004986  EFA9  F024         	goto	l10341
 11118  00498A                     l10361:
 11119  00498A  0100               	movlb	0	; () banked
 11120  00498C  51DD               	movf	_displayState& (0+255),w,b
 11121  00498E  6FA5               	movwf	??_displaySM& (0+255),b
 11122  004990  6BA6               	clrf	(??_displaySM+1)& (0+255),b
 11123                           
 11124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11125                           ; Switch size 1, requested type "simple"
 11126                           ; Number of cases is 1, Range of values is 0 to 0
 11127                           ; switch strategies available:
 11128                           ; Name         Instructions Cycles
 11129                           ; simple_byte            4     3 (average)
 11130                           ;	Chosen strategy is simple_byte
 11131  004992  51A6               	movf	(??_displaySM+1)& (0+255),w,b
 11132  004994  0A00               	xorlw	0	; case 0
 11133  004996  B4D8               	btfsc	status,2,c
 11134  004998  EFD0  F024         	goto	l10675
 11135  00499C  EFE3  F024         	goto	l560
 11136  0049A0                     l10675:
 11137                           
 11138                           ; BSR set to: 0
 11139                           ; Switch size 1, requested type "simple"
 11140                           ; Number of cases is 4, Range of values is 0 to 3
 11141                           ; switch strategies available:
 11142                           ; Name         Instructions Cycles
 11143                           ; simple_byte           13     7 (average)
 11144                           ;	Chosen strategy is simple_byte
 11145  0049A0  51A5               	movf	??_displaySM& (0+255),w,b
 11146  0049A2  0A00               	xorlw	0	; case 0
 11147  0049A4  B4D8               	btfsc	status,2,c
 11148  0049A6  EF68  F024         	goto	l10323
 11149  0049AA  0A01               	xorlw	1	; case 1
 11150  0049AC  B4D8               	btfsc	status,2,c
 11151  0049AE  EFA0  F024         	goto	l10339
 11152  0049B2  0A03               	xorlw	3	; case 2
 11153  0049B4  B4D8               	btfsc	status,2,c
 11154  0049B6  EFAD  F024         	goto	l10345
 11155  0049BA  0A01               	xorlw	1	; case 3
 11156  0049BC  B4D8               	btfsc	status,2,c
 11157  0049BE  EFBA  F024         	goto	l10353
 11158  0049C2  EFE3  F024         	goto	l560
 11159  0049C6                     l560:
 11160  0049C6  0012               	return		;funcret
 11161  0049C8                     __end_of_displaySM:
 11162                           	callstack 0
 11163                           
 11164 ;; *************** function _displayController *****************
 11165 ;; Defined at:
 11166 ;;		line 72 in file "stateMachine/display.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;  g               2   62[BANK0 ] PTR struct GameParameter
 11169 ;;		 -> g1(239), 
 11170 ;;  ev              1   64[BANK0 ] unsigned char 
 11171 ;; Auto vars:     Size  Location     Type
 11172 ;;		None
 11173 ;; Return value:  Size  Location     Type
 11174 ;;                  1    wreg      void 
 11175 ;; Registers used:
 11176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11182 ;;      Params:         0       3       0       0       0       0       0
 11183 ;;      Locals:         0       0       0       0       0       0       0
 11184 ;;      Temps:          0       2       0       0       0       0       0
 11185 ;;      Totals:         0       5       0       0       0       0       0
 11186 ;;Total ram usage:        5 bytes
 11187 ;; Hardware stack levels used: 1
 11188 ;; Hardware stack levels required when called: 13
 11189 ;; This function calls:
 11190 ;;		_Ball_draw
 11191 ;;		_Menu_endGame
 11192 ;;		_Menu_parametersDraw
 11193 ;;		_Menu_welcomeDraw
 11194 ;;		_Paddle_draw
 11195 ;;		_Score_draw
 11196 ;; This function is called by:
 11197 ;;		_displayInit
 11198 ;;		_displaySM
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text42
 11203  0047C4                     __ptext42:
 11204                           	callstack 0
 11205  0047C4                     _displayController:
 11206                           	callstack 14
 11207  0047C4                     
 11208                           ;stateMachine/display.c: 72: void displayController(GameParameters* g,Event ev);stateMac
      +                          hine/display.c: 73: {;stateMachine/display.c: 74:     switch(displayState)
 11209  0047C4  EF45  F024         	goto	l9875
 11210  0047C8                     l9851:
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;stateMachine/display.c: 78:             Menu_welcomeDraw(g);
 11214  0047C8  C09E  F09C         	movff	displayController@g,Menu_welcomeDraw@g
 11215  0047CC  C09F  F09D         	movff	displayController@g+1,Menu_welcomeDraw@g+1
 11216  0047D0  EC91  F02D         	call	_Menu_welcomeDraw	;wreg free
 11217                           
 11218                           ;stateMachine/display.c: 79:             break;
 11219  0047D4  EF63  F024         	goto	l574
 11220  0047D8                     l9853:
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;stateMachine/display.c: 82:             Menu_parametersDraw(g);
 11224  0047D8  C09E  F09C         	movff	displayController@g,Menu_parametersDraw@g
 11225  0047DC  C09F  F09D         	movff	displayController@g+1,Menu_parametersDraw@g+1
 11226  0047E0  EC50  F02D         	call	_Menu_parametersDraw	;wreg free
 11227                           
 11228                           ;stateMachine/display.c: 83:             break;
 11229  0047E4  EF63  F024         	goto	l574
 11230  0047E8                     l9855:
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;stateMachine/display.c: 86:             if(ev==evRedrawPaddle1)
 11234  0047E8  0E0B               	movlw	11
 11235  0047EA  19A0               	xorwf	displayController@ev& (0+255),w,b
 11236  0047EC  A4D8               	btfss	status,2,c
 11237  0047EE  EFFB  F023         	goto	u7181
 11238  0047F2  EFFD  F023         	goto	u7180
 11239  0047F6                     u7181:
 11240  0047F6  EF05  F024         	goto	l9859
 11241  0047FA                     u7180:
 11242  0047FA                     
 11243                           ; BSR set to: 0
 11244                           ;stateMachine/display.c: 87:             {;stateMachine/display.c: 88:                 P
      +                          addle_draw(&g->p1);
 11245  0047FA  0ED5               	movlw	213
 11246  0047FC  259E               	addwf	displayController@g& (0+255),w,b
 11247  0047FE  6E25               	movwf	Paddle_draw@p^0,c
 11248  004800  0E00               	movlw	0
 11249  004802  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11250  004804  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11251  004806  ECAE  F021         	call	_Paddle_draw	;wreg free
 11252  00480A                     l9859:
 11253                           
 11254                           ;stateMachine/display.c: 90:             if(ev==evRedrawPaddle2)
 11255  00480A  0E0C               	movlw	12
 11256  00480C  0100               	movlb	0	; () banked
 11257  00480E  19A0               	xorwf	displayController@ev& (0+255),w,b
 11258  004810  A4D8               	btfss	status,2,c
 11259  004812  EF0D  F024         	goto	u7191
 11260  004816  EF0F  F024         	goto	u7190
 11261  00481A                     u7191:
 11262  00481A  EF17  F024         	goto	l9863
 11263  00481E                     u7190:
 11264  00481E                     
 11265                           ; BSR set to: 0
 11266                           ;stateMachine/display.c: 91:             {;stateMachine/display.c: 92:                 P
      +                          addle_draw(&g->p2);
 11267  00481E  0EDF               	movlw	223
 11268  004820  259E               	addwf	displayController@g& (0+255),w,b
 11269  004822  6E25               	movwf	Paddle_draw@p^0,c
 11270  004824  0E00               	movlw	0
 11271  004826  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11272  004828  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11273  00482A  ECAE  F021         	call	_Paddle_draw	;wreg free
 11274  00482E                     l9863:
 11275                           
 11276                           ;stateMachine/display.c: 94:             if(ev==evRedrawBall)
 11277  00482E  0E0D               	movlw	13
 11278  004830  0100               	movlb	0	; () banked
 11279  004832  19A0               	xorwf	displayController@ev& (0+255),w,b
 11280  004834  A4D8               	btfss	status,2,c
 11281  004836  EF1F  F024         	goto	u7201
 11282  00483A  EF21  F024         	goto	u7200
 11283  00483E                     u7201:
 11284  00483E  EF29  F024         	goto	l9867
 11285  004842                     u7200:
 11286  004842                     
 11287                           ; BSR set to: 0
 11288                           ;stateMachine/display.c: 95:             {;stateMachine/display.c: 96:                 B
      +                          all_draw(&g->b);
 11289  004842  0EC9               	movlw	201
 11290  004844  259E               	addwf	displayController@g& (0+255),w,b
 11291  004846  6E25               	movwf	Ball_draw@b^0,c
 11292  004848  0E00               	movlw	0
 11293  00484A  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11294  00484C  6E26               	movwf	(Ball_draw@b+1)^0,c
 11295  00484E  EC62  F020         	call	_Ball_draw	;wreg free
 11296  004852                     l9867:
 11297                           
 11298                           ;stateMachine/display.c: 98:             if(ev==evRedrawScore)
 11299  004852  0E0E               	movlw	14
 11300  004854  0100               	movlb	0	; () banked
 11301  004856  19A0               	xorwf	displayController@ev& (0+255),w,b
 11302  004858  A4D8               	btfss	status,2,c
 11303  00485A  EF31  F024         	goto	u7211
 11304  00485E  EF33  F024         	goto	u7210
 11305  004862                     u7211:
 11306  004862  EF63  F024         	goto	l574
 11307  004866                     u7210:
 11308  004866                     
 11309                           ; BSR set to: 0
 11310                           ;stateMachine/display.c: 99:             {;stateMachine/display.c: 100:                 
      +                          Score_draw(&g->s1);
 11311  004866  0EE9               	movlw	233
 11312  004868  259E               	addwf	displayController@g& (0+255),w,b
 11313  00486A  6F90               	movwf	Score_draw@s& (0+255),b
 11314  00486C  0E00               	movlw	0
 11315  00486E  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11316  004870  6F91               	movwf	(Score_draw@s+1)& (0+255),b
 11317  004872  EC0B  F028         	call	_Score_draw	;wreg free
 11318  004876  EF63  F024         	goto	l574
 11319  00487A                     l9871:
 11320                           
 11321                           ; BSR set to: 0
 11322                           ;stateMachine/display.c: 104:             Menu_endGame(g);
 11323  00487A  C09E  F09C         	movff	displayController@g,Menu_endGame@g
 11324  00487E  C09F  F09D         	movff	displayController@g+1,Menu_endGame@g+1
 11325  004882  EC6E  F02B         	call	_Menu_endGame	;wreg free
 11326                           
 11327                           ;stateMachine/display.c: 105:             break;
 11328  004886  EF63  F024         	goto	l574
 11329  00488A                     l9875:
 11330  00488A  0100               	movlb	0	; () banked
 11331  00488C  51DD               	movf	_displayState& (0+255),w,b
 11332  00488E  6FA1               	movwf	??_displayController& (0+255),b
 11333  004890  6BA2               	clrf	(??_displayController+1)& (0+255),b
 11334                           
 11335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11336                           ; Switch size 1, requested type "simple"
 11337                           ; Number of cases is 1, Range of values is 0 to 0
 11338                           ; switch strategies available:
 11339                           ; Name         Instructions Cycles
 11340                           ; simple_byte            4     3 (average)
 11341                           ;	Chosen strategy is simple_byte
 11342  004892  51A2               	movf	(??_displayController+1)& (0+255),w,b
 11343  004894  0A00               	xorlw	0	; case 0
 11344  004896  B4D8               	btfsc	status,2,c
 11345  004898  EF50  F024         	goto	l10677
 11346  00489C  EF63  F024         	goto	l574
 11347  0048A0                     l10677:
 11348                           
 11349                           ; BSR set to: 0
 11350                           ; Switch size 1, requested type "simple"
 11351                           ; Number of cases is 4, Range of values is 0 to 3
 11352                           ; switch strategies available:
 11353                           ; Name         Instructions Cycles
 11354                           ; simple_byte           13     7 (average)
 11355                           ;	Chosen strategy is simple_byte
 11356  0048A0  51A1               	movf	??_displayController& (0+255),w,b
 11357  0048A2  0A00               	xorlw	0	; case 0
 11358  0048A4  B4D8               	btfsc	status,2,c
 11359  0048A6  EFE4  F023         	goto	l9851
 11360  0048AA  0A01               	xorlw	1	; case 1
 11361  0048AC  B4D8               	btfsc	status,2,c
 11362  0048AE  EFEC  F023         	goto	l9853
 11363  0048B2  0A03               	xorlw	3	; case 2
 11364  0048B4  B4D8               	btfsc	status,2,c
 11365  0048B6  EFF4  F023         	goto	l9855
 11366  0048BA  0A01               	xorlw	1	; case 3
 11367  0048BC  B4D8               	btfsc	status,2,c
 11368  0048BE  EF3D  F024         	goto	l9871
 11369  0048C2  EF63  F024         	goto	l574
 11370  0048C6                     l574:
 11371  0048C6  0012               	return		;funcret
 11372  0048C8                     __end_of_displayController:
 11373                           	callstack 0
 11374                           
 11375 ;; *************** function _Menu_welcomeDraw *****************
 11376 ;; Defined at:
 11377 ;;		line 7 in file "class/menu.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11380 ;;		 -> g1(239), 
 11381 ;; Auto vars:     Size  Location     Type
 11382 ;;		None
 11383 ;; Return value:  Size  Location     Type
 11384 ;;                  1    wreg      void 
 11385 ;; Registers used:
 11386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11387 ;; Tracked objects:
 11388 ;;		On entry : 0/0
 11389 ;;		On exit  : 0/0
 11390 ;;		Unchanged: 0/0
 11391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11392 ;;      Params:         0       2       0       0       0       0       0
 11393 ;;      Locals:         0       0       0       0       0       0       0
 11394 ;;      Temps:          0       0       0       0       0       0       0
 11395 ;;      Totals:         0       2       0       0       0       0       0
 11396 ;;Total ram usage:        2 bytes
 11397 ;; Hardware stack levels used: 1
 11398 ;; Hardware stack levels required when called: 7
 11399 ;; This function calls:
 11400 ;;		_LCD_ButtonDraw
 11401 ;;		_LCD_DrawText
 11402 ;;		_LCD_Fill
 11403 ;; This function is called by:
 11404 ;;		_displayController
 11405 ;; This function uses a non-reentrant model
 11406 ;;
 11407                           
 11408                           	psect	text43
 11409  005B22                     __ptext43:
 11410                           	callstack 0
 11411  005B22                     _Menu_welcomeDraw:
 11412                           	callstack 19
 11413  005B22                     
 11414                           ;class/menu.c: 7: void Menu_welcomeDraw(GameParameters* g);class/menu.c: 8: {;class/menu
      +                          .c: 9:     LCD_Fill(0b1111111111111111);
 11415  005B22  0EFF               	movlw	255
 11416  005B24  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11417  005B26  6812               	setf	LCD_Fill@color^0,c
 11418  005B28  EC9C  F029         	call	_LCD_Fill	;wreg free
 11419  005B2C                     
 11420                           ;class/menu.c: 10:     LCD_DrawText("WELCOME",&arialNarrow_12ptFontInfo,A_CENTER,50,50,0
      +                          b0000000000000000,0b1111111111111111);
 11421  005B2C  0EDB               	movlw	low STR_11
 11422  005B2E  6E20               	movwf	LCD_DrawText@msg^0,c
 11423  005B30  0E7F               	movlw	high STR_11
 11424  005B32  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11425  005B34  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 11426  005B36  6E22               	movwf	LCD_DrawText@font^0,c
 11427  005B38  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11428  005B3A  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11429  005B3C  0E02               	movlw	2
 11430  005B3E  6E24               	movwf	LCD_DrawText@align^0,c
 11431  005B40  0E00               	movlw	0
 11432  005B42  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11433  005B44  0E32               	movlw	50
 11434  005B46  6E25               	movwf	LCD_DrawText@posX^0,c
 11435  005B48  0E00               	movlw	0
 11436  005B4A  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11437  005B4C  0E32               	movlw	50
 11438  005B4E  6E27               	movwf	LCD_DrawText@posY^0,c
 11439  005B50  0E00               	movlw	0
 11440  005B52  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11441  005B54  0E00               	movlw	0
 11442  005B56  6E29               	movwf	LCD_DrawText@color^0,c
 11443  005B58  0EFF               	movlw	255
 11444  005B5A  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11445  005B5C  682B               	setf	LCD_DrawText@bg_color^0,c
 11446  005B5E  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 11447  005B62                     
 11448                           ;class/menu.c: 11:     LCD_ButtonDraw(&(g->btnParam));
 11449  005B62  0E08               	movlw	8
 11450  005B64  0100               	movlb	0	; () banked
 11451  005B66  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11452  005B68  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11453  005B6A  0E00               	movlw	0
 11454  005B6C  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11455  005B6E  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11456  005B70  ECBA  F007         	call	_LCD_ButtonDraw	;wreg free
 11457  005B74                     
 11458                           ;class/menu.c: 12:     LCD_ButtonDraw(&(g->btnOnePlayer));
 11459  005B74  0E20               	movlw	32
 11460  005B76  0100               	movlb	0	; () banked
 11461  005B78  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11462  005B7A  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11463  005B7C  0E00               	movlw	0
 11464  005B7E  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11465  005B80  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11466  005B82  ECBA  F007         	call	_LCD_ButtonDraw	;wreg free
 11467  005B86                     
 11468                           ;class/menu.c: 13:     LCD_ButtonDraw(&(g->btnTwoPlayer));
 11469  005B86  0E38               	movlw	56
 11470  005B88  0100               	movlb	0	; () banked
 11471  005B8A  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11472  005B8C  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11473  005B8E  0E00               	movlw	0
 11474  005B90  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11475  005B92  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11476  005B94  ECBA  F007         	call	_LCD_ButtonDraw	;wreg free
 11477  005B98  0012               	return		;funcret
 11478  005B9A                     __end_of_Menu_welcomeDraw:
 11479                           	callstack 0
 11480                           
 11481 ;; *************** function _Menu_parametersDraw *****************
 11482 ;; Defined at:
 11483 ;;		line 19 in file "class/menu.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11486 ;;		 -> g1(239), 
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;		None
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  1    wreg      void 
 11491 ;; Registers used:
 11492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11498 ;;      Params:         0       2       0       0       0       0       0
 11499 ;;      Locals:         0       0       0       0       0       0       0
 11500 ;;      Temps:          0       0       0       0       0       0       0
 11501 ;;      Totals:         0       2       0       0       0       0       0
 11502 ;;Total ram usage:        2 bytes
 11503 ;; Hardware stack levels used: 1
 11504 ;; Hardware stack levels required when called: 7
 11505 ;; This function calls:
 11506 ;;		_LCD_ButtonDraw
 11507 ;;		_LCD_DrawText
 11508 ;;		_LCD_Fill
 11509 ;;		_LCD_SliderDraw
 11510 ;; This function is called by:
 11511 ;;		_displayController
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           	psect	text44
 11516  005AA0                     __ptext44:
 11517                           	callstack 0
 11518  005AA0                     _Menu_parametersDraw:
 11519                           	callstack 19
 11520  005AA0                     
 11521                           ;class/menu.c: 19: void Menu_parametersDraw(GameParameters* g);class/menu.c: 20: {;class
      +                          /menu.c: 21:     LCD_Fill(0b1111111111111111);
 11522  005AA0  0EFF               	movlw	255
 11523  005AA2  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11524  005AA4  6812               	setf	LCD_Fill@color^0,c
 11525  005AA6  EC9C  F029         	call	_LCD_Fill	;wreg free
 11526  005AAA                     
 11527                           ;class/menu.c: 22:     LCD_DrawText("PARAMETERS",&arialNarrow_12ptFontInfo,A_CENTER,50,5
      +                          0,0b0000000000000000,0b1111111111111111);
 11528  005AAA  0EA0               	movlw	low STR_12
 11529  005AAC  6E20               	movwf	LCD_DrawText@msg^0,c
 11530  005AAE  0E7F               	movlw	high STR_12
 11531  005AB0  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11532  005AB2  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 11533  005AB4  6E22               	movwf	LCD_DrawText@font^0,c
 11534  005AB6  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11535  005AB8  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11536  005ABA  0E02               	movlw	2
 11537  005ABC  6E24               	movwf	LCD_DrawText@align^0,c
 11538  005ABE  0E00               	movlw	0
 11539  005AC0  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11540  005AC2  0E32               	movlw	50
 11541  005AC4  6E25               	movwf	LCD_DrawText@posX^0,c
 11542  005AC6  0E00               	movlw	0
 11543  005AC8  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11544  005ACA  0E32               	movlw	50
 11545  005ACC  6E27               	movwf	LCD_DrawText@posY^0,c
 11546  005ACE  0E00               	movlw	0
 11547  005AD0  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11548  005AD2  0E00               	movlw	0
 11549  005AD4  6E29               	movwf	LCD_DrawText@color^0,c
 11550  005AD6  0EFF               	movlw	255
 11551  005AD8  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11552  005ADA  682B               	setf	LCD_DrawText@bg_color^0,c
 11553  005ADC  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 11554  005AE0                     
 11555                           ;class/menu.c: 23:     LCD_ButtonDraw(&(g->btnLeaveParam));
 11556  005AE0  0E50               	movlw	80
 11557  005AE2  0100               	movlb	0	; () banked
 11558  005AE4  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 11559  005AE6  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11560  005AE8  0E00               	movlw	0
 11561  005AEA  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 11562  005AEC  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11563  005AEE  ECBA  F007         	call	_LCD_ButtonDraw	;wreg free
 11564  005AF2                     
 11565                           ;class/menu.c: 24:     g->sldParam.value=g->backlight;
 11566  005AF2  C09C  FFD9         	movff	Menu_parametersDraw@g,fsr2l
 11567  005AF6  C09D  FFDA         	movff	Menu_parametersDraw@g+1,fsr2h
 11568  005AFA  0100               	movlb	0	; () banked
 11569  005AFC  EE10 F0C1          	lfsr	1,193
 11570  005B00  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 11571  005B02  26E1               	addwf	fsr1l,f,c
 11572  005B04  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 11573  005B06  22E2               	addwfc	fsr1h,f,c
 11574  005B08  CFDE FFE6          	movff	postinc2,postinc1
 11575  005B0C  CFDD FFE5          	movff	postdec2,postdec1
 11576  005B10                     
 11577                           ; BSR set to: 0
 11578                           ;class/menu.c: 25:     LCD_SliderDraw(&(g->sldParam));
 11579  005B10  0EB0               	movlw	176
 11580  005B12  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 11581  005B14  6E37               	movwf	LCD_SliderDraw@slider^0,c
 11582  005B16  0E00               	movlw	0
 11583  005B18  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 11584  005B1A  6E38               	movwf	(LCD_SliderDraw@slider+1)^0,c
 11585  005B1C  ECD8  F022         	call	_LCD_SliderDraw	;wreg free
 11586  005B20  0012               	return		;funcret
 11587  005B22                     __end_of_Menu_parametersDraw:
 11588                           	callstack 0
 11589                           
 11590 ;; *************** function _LCD_SliderDraw *****************
 11591 ;; Defined at:
 11592 ;;		line 371 in file "libraries/lcd_highlevel.c"
 11593 ;; Parameters:    Size  Location     Type
 11594 ;;  slider          2   54[COMRAM] PTR struct .
 11595 ;;		 -> g1(239), 
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;  y2              2   66[COMRAM] unsigned short 
 11598 ;;  y1              2   64[COMRAM] unsigned short 
 11599 ;;  x2              2   62[COMRAM] unsigned short 
 11600 ;;  x1              2   60[COMRAM] unsigned short 
 11601 ;; Return value:  Size  Location     Type
 11602 ;;                  1    wreg      void 
 11603 ;; Registers used:
 11604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11605 ;; Tracked objects:
 11606 ;;		On entry : 0/0
 11607 ;;		On exit  : 0/0
 11608 ;;		Unchanged: 0/0
 11609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11610 ;;      Params:         2       0       0       0       0       0       0
 11611 ;;      Locals:         8       0       0       0       0       0       0
 11612 ;;      Temps:          4       0       0       0       0       0       0
 11613 ;;      Totals:        14       0       0       0       0       0       0
 11614 ;;Total ram usage:       14 bytes
 11615 ;; Hardware stack levels used: 1
 11616 ;; Hardware stack levels required when called: 6
 11617 ;; This function calls:
 11618 ;;		_LCD_DrawRect
 11619 ;;		_LCD_SliderUpdate
 11620 ;; This function is called by:
 11621 ;;		_Menu_parametersDraw
 11622 ;; This function uses a non-reentrant model
 11623 ;;
 11624                           
 11625                           	psect	text45
 11626  0045B0                     __ptext45:
 11627                           	callstack 0
 11628  0045B0                     _LCD_SliderDraw:
 11629                           	callstack 19
 11630  0045B0                     
 11631                           ;libraries/lcd_highlevel.c: 371: void LCD_SliderDraw(sld_t * slider);libraries/lcd_highl
      +                          evel.c: 372: {;libraries/lcd_highlevel.c: 373:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 375:   x1 = slider->posX;
 11632  0045B0  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 11633  0045B4  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 11634  0045B8  CFDE F03D          	movff	postinc2,LCD_SliderDraw@x1
 11635  0045BC  CFDD F03E          	movff	postdec2,LCD_SliderDraw@x1+1
 11636  0045C0                     
 11637                           ;libraries/lcd_highlevel.c: 376:   x2 = slider->posX + slider->width;
 11638  0045C0  EE20 F004          	lfsr	2,4
 11639  0045C4  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11640  0045C6  26D9               	addwf	fsr2l,f,c
 11641  0045C8  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11642  0045CA  22DA               	addwfc	fsr2h,f,c
 11643  0045CC  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11644  0045D0  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11645  0045D4  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 11646  0045D8  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 11647  0045DC  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11648  0045E0  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11649  0045E4  5039               	movf	??_LCD_SliderDraw^0,w,c
 11650  0045E6  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11651  0045E8  6E3F               	movwf	LCD_SliderDraw@x2^0,c
 11652  0045EA  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11653  0045EC  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11654  0045EE  6E40               	movwf	(LCD_SliderDraw@x2+1)^0,c
 11655  0045F0                     
 11656                           ;libraries/lcd_highlevel.c: 377:   y1 = slider->posY;
 11657  0045F0  EE20 F002          	lfsr	2,2
 11658  0045F4  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11659  0045F6  26D9               	addwf	fsr2l,f,c
 11660  0045F8  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11661  0045FA  22DA               	addwfc	fsr2h,f,c
 11662  0045FC  CFDE F041          	movff	postinc2,LCD_SliderDraw@y1
 11663  004600  CFDD F042          	movff	postdec2,LCD_SliderDraw@y1+1
 11664  004604                     
 11665                           ;libraries/lcd_highlevel.c: 378:   y2 = slider->posY + slider->height;
 11666  004604  EE20 F006          	lfsr	2,6
 11667  004608  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11668  00460A  26D9               	addwf	fsr2l,f,c
 11669  00460C  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11670  00460E  22DA               	addwfc	fsr2h,f,c
 11671  004610  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11672  004614  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11673  004618  EE20 F002          	lfsr	2,2
 11674  00461C  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11675  00461E  26D9               	addwf	fsr2l,f,c
 11676  004620  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11677  004622  22DA               	addwfc	fsr2h,f,c
 11678  004624  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11679  004628  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11680  00462C  5039               	movf	??_LCD_SliderDraw^0,w,c
 11681  00462E  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11682  004630  6E43               	movwf	LCD_SliderDraw@y2^0,c
 11683  004632  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11684  004634  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11685  004636  6E44               	movwf	(LCD_SliderDraw@y2+1)^0,c
 11686  004638                     
 11687                           ;libraries/lcd_highlevel.c: 379:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->bgColor);
 11688  004638  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11689  00463C  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11690  004640  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11691  004644  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11692  004648  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11693  00464C  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11694  004650  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11695  004654  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11696  004658  0E01               	movlw	1
 11697  00465A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11698  00465C  EE20 F00A          	lfsr	2,10
 11699  004660  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11700  004662  26D9               	addwf	fsr2l,f,c
 11701  004664  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11702  004666  22DA               	addwfc	fsr2h,f,c
 11703  004668  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11704  00466C  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11705  004670  EC84  F016         	call	_LCD_DrawRect	;wreg free
 11706  004674                     
 11707                           ;libraries/lcd_highlevel.c: 380:   LCD_DrawRect(x1, y1, x2, y2, 0, slider->borderColor);
 11708  004674  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11709  004678  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11710  00467C  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11711  004680  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11712  004684  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11713  004688  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11714  00468C  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11715  004690  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11716  004694  0E00               	movlw	0
 11717  004696  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11718  004698  EE20 F00C          	lfsr	2,12
 11719  00469C  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11720  00469E  26D9               	addwf	fsr2l,f,c
 11721  0046A0  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11722  0046A2  22DA               	addwfc	fsr2h,f,c
 11723  0046A4  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11724  0046A8  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11725  0046AC  EC84  F016         	call	_LCD_DrawRect	;wreg free
 11726  0046B0                     
 11727                           ;libraries/lcd_highlevel.c: 381:   LCD_SliderUpdate(slider);
 11728  0046B0  C037  F027         	movff	LCD_SliderDraw@slider,LCD_SliderUpdate@slider
 11729  0046B4  C038  F028         	movff	LCD_SliderDraw@slider+1,LCD_SliderUpdate@slider+1
 11730  0046B8  EC31  F00A         	call	_LCD_SliderUpdate	;wreg free
 11731  0046BC  0012               	return		;funcret
 11732  0046BE                     __end_of_LCD_SliderDraw:
 11733                           	callstack 0
 11734                           
 11735 ;; *************** function _LCD_SliderUpdate *****************
 11736 ;; Defined at:
 11737 ;;		line 319 in file "libraries/lcd_highlevel.c"
 11738 ;; Parameters:    Size  Location     Type
 11739 ;;  slider          2   38[COMRAM] PTR struct .
 11740 ;;		 -> g1(239), 
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;  x1              2   52[COMRAM] unsigned short 
 11743 ;;  y2              2   50[COMRAM] unsigned short 
 11744 ;;  y1              2   48[COMRAM] unsigned short 
 11745 ;;  x2              2   46[COMRAM] unsigned short 
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      void 
 11748 ;; Registers used:
 11749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11755 ;;      Params:         2       0       0       0       0       0       0
 11756 ;;      Locals:         8       0       0       0       0       0       0
 11757 ;;      Temps:          6       0       0       0       0       0       0
 11758 ;;      Totals:        16       0       0       0       0       0       0
 11759 ;;Total ram usage:       16 bytes
 11760 ;; Hardware stack levels used: 1
 11761 ;; Hardware stack levels required when called: 5
 11762 ;; This function calls:
 11763 ;;		_LCD_DrawRect
 11764 ;;		___lwdiv
 11765 ;;		___wmul
 11766 ;; This function is called by:
 11767 ;;		_LCD_SliderDraw
 11768 ;;		_gameControllerController
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           	psect	text46
 11773  001462                     __ptext46:
 11774                           	callstack 0
 11775  001462                     _LCD_SliderUpdate:
 11776                           	callstack 21
 11777  001462                     
 11778                           ;libraries/lcd_highlevel.c: 319: void LCD_SliderUpdate(sld_t * slider);libraries/lcd_hig
      +                          hlevel.c: 320: {;libraries/lcd_highlevel.c: 321:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 325:   if(slider->cursorWidth != 0)
 11779  001462  EE20 F00E          	lfsr	2,14
 11780  001466  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11781  001468  26D9               	addwf	fsr2l,f,c
 11782  00146A  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11783  00146C  22DA               	addwfc	fsr2h,f,c
 11784  00146E  50DE               	movf	postinc2,w,c
 11785  001470  10DE               	iorwf	postinc2,w,c
 11786  001472  B4D8               	btfsc	status,2,c
 11787  001474  EF3E  F00A         	goto	u6311
 11788  001478  EF40  F00A         	goto	u6310
 11789  00147C                     u6311:
 11790  00147C  EFCC  F00A         	goto	l8873
 11791  001480                     u6310:
 11792  001480                     
 11793                           ;libraries/lcd_highlevel.c: 326:   {;libraries/lcd_highlevel.c: 327:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->oldValue)/ slider->steps);
 11794  001480  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11795  001484  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11796  001488  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11797  00148C  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11798  001490  EE20 F00E          	lfsr	2,14
 11799  001494  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11800  001496  26D9               	addwf	fsr2l,f,c
 11801  001498  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11802  00149A  22DA               	addwfc	fsr2h,f,c
 11803  00149C  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11804  0014A0  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11805  0014A4  EE20 F004          	lfsr	2,4
 11806  0014A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11807  0014AA  26D9               	addwf	fsr2l,f,c
 11808  0014AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11809  0014AE  22DA               	addwfc	fsr2h,f,c
 11810  0014B0  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 11811  0014B4  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 11812  0014B8  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 11813  0014BA  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 11814  0014BC  6E1A               	movwf	___wmul@multiplier^0,c
 11815  0014BE  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 11816  0014C0  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 11817  0014C2  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 11818  0014C4  EE20 F013          	lfsr	2,19
 11819  0014C8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11820  0014CA  26D9               	addwf	fsr2l,f,c
 11821  0014CC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11822  0014CE  22DA               	addwfc	fsr2h,f,c
 11823  0014D0  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11824  0014D4  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11825  0014D8  EC47  F031         	call	___wmul	;wreg free
 11826  0014DC  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11827  0014E0  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11828  0014E4  EE20 F015          	lfsr	2,21
 11829  0014E8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11830  0014EA  26D9               	addwf	fsr2l,f,c
 11831  0014EC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11832  0014EE  22DA               	addwfc	fsr2h,f,c
 11833  0014F0  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11834  0014F4  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11835  0014F8  EC42  F02E         	call	___lwdiv	;wreg free
 11836  0014FC  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11837  0014FE  2620               	addwf	?___lwdiv^0,f,c
 11838  001500  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11839  001502  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11840  001504  0E01               	movlw	1
 11841  001506  2420               	addwf	?___lwdiv^0,w,c
 11842  001508  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11843  00150A  0E00               	movlw	0
 11844  00150C  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11845  00150E  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11846  001510                     
 11847                           ;libraries/lcd_highlevel.c: 328:     x2 = x1 + slider->cursorWidth-2;
 11848  001510  EE20 F00E          	lfsr	2,14
 11849  001514  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11850  001516  26D9               	addwf	fsr2l,f,c
 11851  001518  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11852  00151A  22DA               	addwfc	fsr2h,f,c
 11853  00151C  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11854  001520  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11855  001524  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 11856  001526  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 11857  001528  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 11858  00152A  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 11859  00152C  0EFE               	movlw	254
 11860  00152E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11861  001530  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11862  001532  0EFF               	movlw	255
 11863  001534  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11864  001536  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11865  001538                     
 11866                           ;libraries/lcd_highlevel.c: 329:     y1 = slider->posY + 2;
 11867  001538  EE20 F002          	lfsr	2,2
 11868  00153C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11869  00153E  26D9               	addwf	fsr2l,f,c
 11870  001540  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11871  001542  22DA               	addwfc	fsr2h,f,c
 11872  001544  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11873  001548  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11874  00154C  0E02               	movlw	2
 11875  00154E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11876  001550  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11877  001552  0E00               	movlw	0
 11878  001554  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11879  001556  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11880  001558                     
 11881                           ;libraries/lcd_highlevel.c: 330:     y2 = slider->posY + slider->height - 2;
 11882  001558  EE20 F006          	lfsr	2,6
 11883  00155C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11884  00155E  26D9               	addwf	fsr2l,f,c
 11885  001560  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11886  001562  22DA               	addwfc	fsr2h,f,c
 11887  001564  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11888  001568  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11889  00156C  EE20 F002          	lfsr	2,2
 11890  001570  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11891  001572  26D9               	addwf	fsr2l,f,c
 11892  001574  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11893  001576  22DA               	addwfc	fsr2h,f,c
 11894  001578  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11895  00157C  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11896  001580  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11897  001582  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11898  001584  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11899  001586  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11900  001588  0EFE               	movlw	254
 11901  00158A  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 11902  00158C  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 11903  00158E  0EFF               	movlw	255
 11904  001590  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 11905  001592  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 11906                           
 11907                           ;libraries/lcd_highlevel.c: 331:   }
 11908  001594  EF40  F00B         	goto	l8881
 11909  001598                     l8873:
 11910                           
 11911                           ;libraries/lcd_highlevel.c: 333:   {;libraries/lcd_highlevel.c: 334:     x1 = slider->po
      +                          sX + 1;
 11912  001598  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11913  00159C  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11914  0015A0  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11915  0015A4  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11916  0015A8  0E01               	movlw	1
 11917  0015AA  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11918  0015AC  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11919  0015AE  0E00               	movlw	0
 11920  0015B0  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11921  0015B2  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11922  0015B4                     
 11923                           ;libraries/lcd_highlevel.c: 335:     x2 = slider->posX - 1 + ((slider->width * slider->o
      +                          ldValue)/ slider->steps);
 11924  0015B4  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11925  0015B8  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11926  0015BC  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11927  0015C0  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11928  0015C4  EE20 F004          	lfsr	2,4
 11929  0015C8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11930  0015CA  26D9               	addwf	fsr2l,f,c
 11931  0015CC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11932  0015CE  22DA               	addwfc	fsr2h,f,c
 11933  0015D0  CFDE F01A          	movff	postinc2,___wmul@multiplier
 11934  0015D4  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 11935  0015D8  EE20 F013          	lfsr	2,19
 11936  0015DC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11937  0015DE  26D9               	addwf	fsr2l,f,c
 11938  0015E0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11939  0015E2  22DA               	addwfc	fsr2h,f,c
 11940  0015E4  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11941  0015E8  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11942  0015EC  EC47  F031         	call	___wmul	;wreg free
 11943  0015F0  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11944  0015F4  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11945  0015F8  EE20 F015          	lfsr	2,21
 11946  0015FC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11947  0015FE  26D9               	addwf	fsr2l,f,c
 11948  001600  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11949  001602  22DA               	addwfc	fsr2h,f,c
 11950  001604  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11951  001608  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11952  00160C  EC42  F02E         	call	___lwdiv	;wreg free
 11953  001610  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11954  001612  2620               	addwf	?___lwdiv^0,f,c
 11955  001614  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11956  001616  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11957  001618  0EFF               	movlw	255
 11958  00161A  2420               	addwf	?___lwdiv^0,w,c
 11959  00161C  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11960  00161E  0EFF               	movlw	255
 11961  001620  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11962  001622  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11963  001624                     
 11964                           ;libraries/lcd_highlevel.c: 336:     y1 = slider->posY + 2;
 11965  001624  EE20 F002          	lfsr	2,2
 11966  001628  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11967  00162A  26D9               	addwf	fsr2l,f,c
 11968  00162C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11969  00162E  22DA               	addwfc	fsr2h,f,c
 11970  001630  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11971  001634  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11972  001638  0E02               	movlw	2
 11973  00163A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11974  00163C  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11975  00163E  0E00               	movlw	0
 11976  001640  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11977  001642  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11978  001644                     
 11979                           ;libraries/lcd_highlevel.c: 337:     y2 = slider->posY + slider->height - 2;
 11980  001644  EE20 F006          	lfsr	2,6
 11981  001648  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11982  00164A  26D9               	addwf	fsr2l,f,c
 11983  00164C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11984  00164E  22DA               	addwfc	fsr2h,f,c
 11985  001650  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11986  001654  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11987  001658  EE20 F002          	lfsr	2,2
 11988  00165C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11989  00165E  26D9               	addwf	fsr2l,f,c
 11990  001660  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11991  001662  22DA               	addwfc	fsr2h,f,c
 11992  001664  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11993  001668  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11994  00166C  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11995  00166E  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11996  001670  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11997  001672  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11998  001674  0EFE               	movlw	254
 11999  001676  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12000  001678  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12001  00167A  0EFF               	movlw	255
 12002  00167C  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12003  00167E  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12004  001680                     l8881:
 12005                           
 12006                           ;libraries/lcd_highlevel.c: 339:   LCD_DrawRect(x1,
 12007  001680  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12008  001684  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12009  001688  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12010  00168C  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12011  001690  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12012  001694  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12013  001698  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12014  00169C  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12015  0016A0  0E01               	movlw	1
 12016  0016A2  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12017  0016A4  EE20 F00A          	lfsr	2,10
 12018  0016A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12019  0016AA  26D9               	addwf	fsr2l,f,c
 12020  0016AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12021  0016AE  22DA               	addwfc	fsr2h,f,c
 12022  0016B0  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12023  0016B4  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12024  0016B8  EC84  F016         	call	_LCD_DrawRect	;wreg free
 12025  0016BC                     
 12026                           ;libraries/lcd_highlevel.c: 344:   slider->oldValue = slider->value;
 12027  0016BC  EE20 F011          	lfsr	2,17
 12028  0016C0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12029  0016C2  26D9               	addwf	fsr2l,f,c
 12030  0016C4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12031  0016C6  22DA               	addwfc	fsr2h,f,c
 12032  0016C8  EE10 F013          	lfsr	1,19
 12033  0016CC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12034  0016CE  26E1               	addwf	fsr1l,f,c
 12035  0016D0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12036  0016D2  22E2               	addwfc	fsr1h,f,c
 12037  0016D4  CFDE FFE6          	movff	postinc2,postinc1
 12038  0016D8  CFDD FFE5          	movff	postdec2,postdec1
 12039  0016DC                     
 12040                           ;libraries/lcd_highlevel.c: 347:   if(slider->cursorWidth == 0)
 12041  0016DC  EE20 F00E          	lfsr	2,14
 12042  0016E0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12043  0016E2  26D9               	addwf	fsr2l,f,c
 12044  0016E4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12045  0016E6  22DA               	addwfc	fsr2h,f,c
 12046  0016E8  50DE               	movf	postinc2,w,c
 12047  0016EA  10DE               	iorwf	postinc2,w,c
 12048  0016EC  A4D8               	btfss	status,2,c
 12049  0016EE  EF7B  F00B         	goto	u6321
 12050  0016F2  EF7D  F00B         	goto	u6320
 12051  0016F6                     u6321:
 12052  0016F6  EFF3  F00B         	goto	l8895
 12053  0016FA                     u6320:
 12054  0016FA                     
 12055                           ;libraries/lcd_highlevel.c: 348:   {;libraries/lcd_highlevel.c: 349:     x1 = slider->po
      +                          sX + 1;
 12056  0016FA  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12057  0016FE  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12058  001702  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12059  001706  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12060  00170A  0E01               	movlw	1
 12061  00170C  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12062  00170E  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12063  001710  0E00               	movlw	0
 12064  001712  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12065  001714  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12066  001716                     
 12067                           ;libraries/lcd_highlevel.c: 350:     x2 = slider->posX - 1 + ((slider->width * slider->v
      +                          alue)/ slider->steps);
 12068  001716  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12069  00171A  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12070  00171E  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12071  001722  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12072  001726  EE20 F004          	lfsr	2,4
 12073  00172A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12074  00172C  26D9               	addwf	fsr2l,f,c
 12075  00172E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12076  001730  22DA               	addwfc	fsr2h,f,c
 12077  001732  CFDE F01A          	movff	postinc2,___wmul@multiplier
 12078  001736  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 12079  00173A  EE20 F011          	lfsr	2,17
 12080  00173E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12081  001740  26D9               	addwf	fsr2l,f,c
 12082  001742  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12083  001744  22DA               	addwfc	fsr2h,f,c
 12084  001746  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12085  00174A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12086  00174E  EC47  F031         	call	___wmul	;wreg free
 12087  001752  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12088  001756  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12089  00175A  EE20 F015          	lfsr	2,21
 12090  00175E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12091  001760  26D9               	addwf	fsr2l,f,c
 12092  001762  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12093  001764  22DA               	addwfc	fsr2h,f,c
 12094  001766  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12095  00176A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12096  00176E  EC42  F02E         	call	___lwdiv	;wreg free
 12097  001772  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12098  001774  2620               	addwf	?___lwdiv^0,f,c
 12099  001776  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12100  001778  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12101  00177A  0EFF               	movlw	255
 12102  00177C  2420               	addwf	?___lwdiv^0,w,c
 12103  00177E  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12104  001780  0EFF               	movlw	255
 12105  001782  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12106  001784  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12107  001786                     
 12108                           ;libraries/lcd_highlevel.c: 351:     y1 = slider->posY + 2;
 12109  001786  EE20 F002          	lfsr	2,2
 12110  00178A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12111  00178C  26D9               	addwf	fsr2l,f,c
 12112  00178E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12113  001790  22DA               	addwfc	fsr2h,f,c
 12114  001792  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12115  001796  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12116  00179A  0E02               	movlw	2
 12117  00179C  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12118  00179E  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12119  0017A0  0E00               	movlw	0
 12120  0017A2  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12121  0017A4  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12122  0017A6                     
 12123                           ;libraries/lcd_highlevel.c: 352:     y2 = slider->posY + slider->height - 2;
 12124  0017A6  EE20 F006          	lfsr	2,6
 12125  0017AA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12126  0017AC  26D9               	addwf	fsr2l,f,c
 12127  0017AE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12128  0017B0  22DA               	addwfc	fsr2h,f,c
 12129  0017B2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12130  0017B6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12131  0017BA  EE20 F002          	lfsr	2,2
 12132  0017BE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12133  0017C0  26D9               	addwf	fsr2l,f,c
 12134  0017C2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12135  0017C4  22DA               	addwfc	fsr2h,f,c
 12136  0017C6  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12137  0017CA  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12138  0017CE  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12139  0017D0  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12140  0017D2  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12141  0017D4  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12142  0017D6  0EFE               	movlw	254
 12143  0017D8  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12144  0017DA  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12145  0017DC  0EFF               	movlw	255
 12146  0017DE  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12147  0017E0  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12148                           
 12149                           ;libraries/lcd_highlevel.c: 353:   }
 12150  0017E2  EF7D  F00C         	goto	l8903
 12151  0017E6                     l8895:
 12152                           
 12153                           ;libraries/lcd_highlevel.c: 357:   {;libraries/lcd_highlevel.c: 358:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->value)/ slider->steps);
 12154  0017E6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12155  0017EA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12156  0017EE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12157  0017F2  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12158  0017F6  EE20 F00E          	lfsr	2,14
 12159  0017FA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12160  0017FC  26D9               	addwf	fsr2l,f,c
 12161  0017FE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12162  001800  22DA               	addwfc	fsr2h,f,c
 12163  001802  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12164  001806  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12165  00180A  EE20 F004          	lfsr	2,4
 12166  00180E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12167  001810  26D9               	addwf	fsr2l,f,c
 12168  001812  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12169  001814  22DA               	addwfc	fsr2h,f,c
 12170  001816  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 12171  00181A  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 12172  00181E  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 12173  001820  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 12174  001822  6E1A               	movwf	___wmul@multiplier^0,c
 12175  001824  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 12176  001826  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 12177  001828  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 12178  00182A  EE20 F011          	lfsr	2,17
 12179  00182E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12180  001830  26D9               	addwf	fsr2l,f,c
 12181  001832  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12182  001834  22DA               	addwfc	fsr2h,f,c
 12183  001836  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12184  00183A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12185  00183E  EC47  F031         	call	___wmul	;wreg free
 12186  001842  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12187  001846  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12188  00184A  EE20 F015          	lfsr	2,21
 12189  00184E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12190  001850  26D9               	addwf	fsr2l,f,c
 12191  001852  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12192  001854  22DA               	addwfc	fsr2h,f,c
 12193  001856  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12194  00185A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12195  00185E  EC42  F02E         	call	___lwdiv	;wreg free
 12196  001862  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12197  001864  2620               	addwf	?___lwdiv^0,f,c
 12198  001866  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12199  001868  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12200  00186A  0E01               	movlw	1
 12201  00186C  2420               	addwf	?___lwdiv^0,w,c
 12202  00186E  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12203  001870  0E00               	movlw	0
 12204  001872  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12205  001874  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12206  001876                     
 12207                           ;libraries/lcd_highlevel.c: 359:     x2 = x1 + slider->cursorWidth-2;
 12208  001876  EE20 F00E          	lfsr	2,14
 12209  00187A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12210  00187C  26D9               	addwf	fsr2l,f,c
 12211  00187E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12212  001880  22DA               	addwfc	fsr2h,f,c
 12213  001882  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12214  001886  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12215  00188A  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 12216  00188C  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 12217  00188E  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 12218  001890  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 12219  001892  0EFE               	movlw	254
 12220  001894  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12221  001896  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12222  001898  0EFF               	movlw	255
 12223  00189A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12224  00189C  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12225  00189E                     
 12226                           ;libraries/lcd_highlevel.c: 360:     y1 = slider->posY + 2;
 12227  00189E  EE20 F002          	lfsr	2,2
 12228  0018A2  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12229  0018A4  26D9               	addwf	fsr2l,f,c
 12230  0018A6  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12231  0018A8  22DA               	addwfc	fsr2h,f,c
 12232  0018AA  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12233  0018AE  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12234  0018B2  0E02               	movlw	2
 12235  0018B4  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12236  0018B6  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12237  0018B8  0E00               	movlw	0
 12238  0018BA  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12239  0018BC  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12240  0018BE                     
 12241                           ;libraries/lcd_highlevel.c: 361:     y2 = slider->posY + slider->height - 2;
 12242  0018BE  EE20 F006          	lfsr	2,6
 12243  0018C2  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12244  0018C4  26D9               	addwf	fsr2l,f,c
 12245  0018C6  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12246  0018C8  22DA               	addwfc	fsr2h,f,c
 12247  0018CA  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12248  0018CE  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12249  0018D2  EE20 F002          	lfsr	2,2
 12250  0018D6  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12251  0018D8  26D9               	addwf	fsr2l,f,c
 12252  0018DA  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12253  0018DC  22DA               	addwfc	fsr2h,f,c
 12254  0018DE  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12255  0018E2  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12256  0018E6  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12257  0018E8  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12258  0018EA  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12259  0018EC  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12260  0018EE  0EFE               	movlw	254
 12261  0018F0  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12262  0018F2  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12263  0018F4  0EFF               	movlw	255
 12264  0018F6  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12265  0018F8  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12266  0018FA                     l8903:
 12267                           
 12268                           ;libraries/lcd_highlevel.c: 363:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->sldColor);
 12269  0018FA  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12270  0018FE  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12271  001902  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12272  001906  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12273  00190A  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12274  00190E  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12275  001912  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12276  001916  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12277  00191A  0E01               	movlw	1
 12278  00191C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12279  00191E  EE20 F008          	lfsr	2,8
 12280  001922  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12281  001924  26D9               	addwf	fsr2l,f,c
 12282  001926  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12283  001928  22DA               	addwfc	fsr2h,f,c
 12284  00192A  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12285  00192E  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12286  001932  EC84  F016         	call	_LCD_DrawRect	;wreg free
 12287  001936  0012               	return		;funcret
 12288  001938                     __end_of_LCD_SliderUpdate:
 12289                           	callstack 0
 12290                           
 12291 ;; *************** function _Menu_endGame *****************
 12292 ;; Defined at:
 12293 ;;		line 43 in file "class/menu.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12296 ;;		 -> g1(239), 
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;		None
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      void 
 12301 ;; Registers used:
 12302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12308 ;;      Params:         0       2       0       0       0       0       0
 12309 ;;      Locals:         0       0       0       0       0       0       0
 12310 ;;      Temps:          2       0       0       0       0       0       0
 12311 ;;      Totals:         2       2       0       0       0       0       0
 12312 ;;Total ram usage:        4 bytes
 12313 ;; Hardware stack levels used: 1
 12314 ;; Hardware stack levels required when called: 7
 12315 ;; This function calls:
 12316 ;;		_LCD_ButtonDraw
 12317 ;;		_LCD_DrawText
 12318 ;;		_LCD_Fill
 12319 ;; This function is called by:
 12320 ;;		_displayController
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text47
 12325  0056DC                     __ptext47:
 12326                           	callstack 0
 12327  0056DC                     _Menu_endGame:
 12328                           	callstack 19
 12329  0056DC                     
 12330                           ;class/menu.c: 43: void Menu_endGame(GameParameters* g);class/menu.c: 44: {;class/menu.c
      +                          : 45:     LCD_Fill(0b0000000000000000);
 12331  0056DC  0E00               	movlw	0
 12332  0056DE  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12333  0056E0  0E00               	movlw	0
 12334  0056E2  6E12               	movwf	LCD_Fill@color^0,c
 12335  0056E4  EC9C  F029         	call	_LCD_Fill	;wreg free
 12336  0056E8                     
 12337                           ;class/menu.c: 46:     LCD_ButtonDraw(&(g->btnNewGame));
 12338  0056E8  0E80               	movlw	128
 12339  0056EA  0100               	movlb	0	; () banked
 12340  0056EC  259C               	addwf	Menu_endGame@g& (0+255),w,b
 12341  0056EE  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12342  0056F0  0E00               	movlw	0
 12343  0056F2  219D               	addwfc	(Menu_endGame@g+1)& (0+255),w,b
 12344  0056F4  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12345  0056F6  ECBA  F007         	call	_LCD_ButtonDraw	;wreg free
 12346  0056FA                     
 12347                           ;class/menu.c: 48:     if(g->s1.homeScore==0)
 12348  0056FA  0100               	movlb	0	; () banked
 12349  0056FC  EE20 F0E9          	lfsr	2,233
 12350  005700  519C               	movf	Menu_endGame@g& (0+255),w,b
 12351  005702  26D9               	addwf	fsr2l,f,c
 12352  005704  519D               	movf	(Menu_endGame@g+1)& (0+255),w,b
 12353  005706  22DA               	addwfc	fsr2h,f,c
 12354  005708  50DE               	movf	postinc2,w,c
 12355  00570A  10DE               	iorwf	postinc2,w,c
 12356  00570C  A4D8               	btfss	status,2,c
 12357  00570E  EF8B  F02B         	goto	u6831
 12358  005712  EF8D  F02B         	goto	u6830
 12359  005716                     u6831:
 12360  005716  EFAA  F02B         	goto	l9691
 12361  00571A                     u6830:
 12362  00571A                     
 12363                           ; BSR set to: 0
 12364                           ;class/menu.c: 49:     {;class/menu.c: 50:         LCD_DrawText("PLAYER 2 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,100,50,0b1111111111111111,0b0000000000000000);
 12365  00571A  0E93               	movlw	low STR_13
 12366  00571C  6E20               	movwf	LCD_DrawText@msg^0,c
 12367  00571E  0E7F               	movlw	high STR_13
 12368  005720  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12369  005722  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 12370  005724  6E22               	movwf	LCD_DrawText@font^0,c
 12371  005726  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12372  005728  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12373  00572A  0E02               	movlw	2
 12374  00572C  6E24               	movwf	LCD_DrawText@align^0,c
 12375  00572E  0E00               	movlw	0
 12376  005730  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12377  005732  0E64               	movlw	100
 12378  005734  6E25               	movwf	LCD_DrawText@posX^0,c
 12379  005736  0E00               	movlw	0
 12380  005738  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12381  00573A  0E32               	movlw	50
 12382  00573C  6E27               	movwf	LCD_DrawText@posY^0,c
 12383  00573E  0EFF               	movlw	255
 12384  005740  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12385  005742  6829               	setf	LCD_DrawText@color^0,c
 12386  005744  0E00               	movlw	0
 12387  005746  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12388  005748  0E00               	movlw	0
 12389  00574A  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12390  00574C  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 12391                           
 12392                           ;class/menu.c: 51:     }
 12393  005750  EFC5  F02B         	goto	l188
 12394  005754                     l9691:
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;class/menu.c: 53:     {;class/menu.c: 54:         LCD_DrawText("PLAYER 1 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,100,50,0b1111111111111111,0b0000000000000000);
 12398  005754  0E86               	movlw	low STR_14
 12399  005756  6E20               	movwf	LCD_DrawText@msg^0,c
 12400  005758  0E7F               	movlw	high STR_14
 12401  00575A  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12402  00575C  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 12403  00575E  6E22               	movwf	LCD_DrawText@font^0,c
 12404  005760  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12405  005762  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12406  005764  0E02               	movlw	2
 12407  005766  6E24               	movwf	LCD_DrawText@align^0,c
 12408  005768  0E00               	movlw	0
 12409  00576A  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12410  00576C  0E64               	movlw	100
 12411  00576E  6E25               	movwf	LCD_DrawText@posX^0,c
 12412  005770  0E00               	movlw	0
 12413  005772  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12414  005774  0E32               	movlw	50
 12415  005776  6E27               	movwf	LCD_DrawText@posY^0,c
 12416  005778  0EFF               	movlw	255
 12417  00577A  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12418  00577C  6829               	setf	LCD_DrawText@color^0,c
 12419  00577E  0E00               	movlw	0
 12420  005780  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12421  005782  0E00               	movlw	0
 12422  005784  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12423  005786  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 12424  00578A                     l188:
 12425  00578A  0012               	return		;funcret
 12426  00578C                     __end_of_Menu_endGame:
 12427                           	callstack 0
 12428                           
 12429 ;; *************** function _LCD_ButtonDraw *****************
 12430 ;; Defined at:
 12431 ;;		line 462 in file "libraries/lcd_highlevel.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;  button          2   28[BANK0 ] PTR struct .
 12434 ;;		 -> g1(239), 
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;  bmpPtr          2   58[BANK0 ] PTR struct .
 12437 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 12438 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 12439 ;;  yText           2   55[BANK0 ] unsigned short 
 12440 ;;  xText           2   53[BANK0 ] unsigned short 
 12441 ;;  y2              2   51[BANK0 ] unsigned short 
 12442 ;;  y1              2   49[BANK0 ] unsigned short 
 12443 ;;  x2              2   47[BANK0 ] unsigned short 
 12444 ;;  x1              2   45[BANK0 ] unsigned short 
 12445 ;;  width           2   43[BANK0 ] unsigned short 
 12446 ;;  i               1   57[BANK0 ] unsigned char 
 12447 ;;  tempChar        1   42[BANK0 ] unsigned char 
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  1    wreg      void 
 12450 ;; Registers used:
 12451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12452 ;; Tracked objects:
 12453 ;;		On entry : 0/0
 12454 ;;		On exit  : 0/0
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12457 ;;      Params:         0       2       0       0       0       0       0
 12458 ;;      Locals:         0      18       0       0       0       0       0
 12459 ;;      Temps:          0      12       0       0       0       0       0
 12460 ;;      Totals:         0      32       0       0       0       0       0
 12461 ;;Total ram usage:       32 bytes
 12462 ;; Hardware stack levels used: 1
 12463 ;; Hardware stack levels required when called: 6
 12464 ;; This function calls:
 12465 ;;		_LCD_Bitmap
 12466 ;;		_LCD_ButtonUpdate
 12467 ;;		_LCD_DrawRect
 12468 ;;		_LCD_DrawText
 12469 ;;		___awdiv
 12470 ;;		_strlen
 12471 ;; This function is called by:
 12472 ;;		_Menu_welcomeDraw
 12473 ;;		_Menu_parametersDraw
 12474 ;;		_Menu_endGame
 12475 ;; This function uses a non-reentrant model
 12476 ;;
 12477                           
 12478                           	psect	text48
 12479  000F74                     __ptext48:
 12480                           	callstack 0
 12481  000F74                     _LCD_ButtonDraw:
 12482                           	callstack 19
 12483  000F74                     
 12484                           ;libraries/lcd_highlevel.c: 462: void LCD_ButtonDraw(btn_t * button);libraries/lcd_highl
      +                          evel.c: 463: {;libraries/lcd_highlevel.c: 464:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 465:   uint16_t xText,yText;;libraries/lcd_highlevel.c: 466:   uint8_t i, temp
      +                          Char;;libraries/lcd_highlevel.c: 467:   uint16_t width=0;
 12485  000F74  0E00               	movlw	0
 12486  000F76  0100               	movlb	0	; () banked
 12487  000F78  6F8C               	movwf	(LCD_ButtonDraw@width+1)& (0+255),b
 12488  000F7A  0E00               	movlw	0
 12489  000F7C  6F8B               	movwf	LCD_ButtonDraw@width& (0+255),b
 12490  000F7E                     
 12491                           ; BSR set to: 0
 12492                           ;libraries/lcd_highlevel.c: 468:   BMP_STRUCT *bmpPtr;;libraries/lcd_highlevel.c: 470:  
      +                           x1 = button->posX;
 12493  000F7E  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12494  000F82  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12495  000F86  CFDE F08D          	movff	postinc2,LCD_ButtonDraw@x1
 12496  000F8A  CFDD F08E          	movff	postdec2,LCD_ButtonDraw@x1+1
 12497  000F8E                     
 12498                           ; BSR set to: 0
 12499                           ;libraries/lcd_highlevel.c: 471:   x2 = button->posX + button->width;
 12500  000F8E  EE20 F004          	lfsr	2,4
 12501  000F92  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12502  000F94  26D9               	addwf	fsr2l,f,c
 12503  000F96  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12504  000F98  22DA               	addwfc	fsr2h,f,c
 12505  000F9A  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12506  000F9E  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12507  000FA2  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12508  000FA6  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12509  000FAA  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12510  000FAE  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12511  000FB2  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12512  000FB4  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12513  000FB6  6F8F               	movwf	LCD_ButtonDraw@x2& (0+255),b
 12514  000FB8  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12515  000FBA  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12516  000FBC  6F90               	movwf	(LCD_ButtonDraw@x2+1)& (0+255),b
 12517  000FBE                     
 12518                           ; BSR set to: 0
 12519                           ;libraries/lcd_highlevel.c: 472:   y1 = button->posY;
 12520  000FBE  EE20 F002          	lfsr	2,2
 12521  000FC2  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12522  000FC4  26D9               	addwf	fsr2l,f,c
 12523  000FC6  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12524  000FC8  22DA               	addwfc	fsr2h,f,c
 12525  000FCA  CFDE F091          	movff	postinc2,LCD_ButtonDraw@y1
 12526  000FCE  CFDD F092          	movff	postdec2,LCD_ButtonDraw@y1+1
 12527  000FD2                     
 12528                           ; BSR set to: 0
 12529                           ;libraries/lcd_highlevel.c: 473:   y2 = button->posY + button->height;
 12530  000FD2  EE20 F006          	lfsr	2,6
 12531  000FD6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12532  000FD8  26D9               	addwf	fsr2l,f,c
 12533  000FDA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12534  000FDC  22DA               	addwfc	fsr2h,f,c
 12535  000FDE  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12536  000FE2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12537  000FE6  EE20 F002          	lfsr	2,2
 12538  000FEA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12539  000FEC  26D9               	addwf	fsr2l,f,c
 12540  000FEE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12541  000FF0  22DA               	addwfc	fsr2h,f,c
 12542  000FF2  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12543  000FF6  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12544  000FFA  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12545  000FFC  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12546  000FFE  6F93               	movwf	LCD_ButtonDraw@y2& (0+255),b
 12547  001000  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12548  001002  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12549  001004  6F94               	movwf	(LCD_ButtonDraw@y2+1)& (0+255),b
 12550  001006                     
 12551                           ; BSR set to: 0
 12552                           ;libraries/lcd_highlevel.c: 474:   if(button->bgColor != button->txtColor)
 12553  001006  EE20 F008          	lfsr	2,8
 12554  00100A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12555  00100C  26D9               	addwf	fsr2l,f,c
 12556  00100E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12557  001010  22DA               	addwfc	fsr2h,f,c
 12558  001012  EE10 F00A          	lfsr	1,10
 12559  001016  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12560  001018  26E1               	addwf	fsr1l,f,c
 12561  00101A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12562  00101C  22E2               	addwfc	fsr1h,f,c
 12563  00101E  50DE               	movf	postinc2,w,c
 12564  001020  18E6               	xorwf	postinc1,w,c
 12565  001022  E109               	bnz	u6570
 12566  001024  50DE               	movf	postinc2,w,c
 12567  001026  18E6               	xorwf	postinc1,w,c
 12568  001028  B4D8               	btfsc	status,2,c
 12569  00102A  EF19  F008         	goto	u6571
 12570  00102E  EF1B  F008         	goto	u6570
 12571  001032                     u6571:
 12572  001032  EF58  F008         	goto	l9467
 12573  001036                     u6570:
 12574  001036                     
 12575                           ; BSR set to: 0
 12576                           ;libraries/lcd_highlevel.c: 475:   {;libraries/lcd_highlevel.c: 476:     LCD_DrawRect(x1
      +                          , y1, x2, y2, 1, button->bgColor);
 12577  001036  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12578  00103A  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12579  00103E  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12580  001042  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12581  001046  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12582  00104A  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12583  00104E  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12584  001052  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12585  001056  0E01               	movlw	1
 12586  001058  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12587  00105A  EE20 F00A          	lfsr	2,10
 12588  00105E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12589  001060  26D9               	addwf	fsr2l,f,c
 12590  001062  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12591  001064  22DA               	addwfc	fsr2h,f,c
 12592  001066  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12593  00106A  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12594  00106E  EC84  F016         	call	_LCD_DrawRect	;wreg free
 12595                           
 12596                           ;libraries/lcd_highlevel.c: 477:     LCD_DrawRect(x1, y1, x2, y2, 0, button->txtColor);
 12597  001072  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12598  001076  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12599  00107A  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12600  00107E  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12601  001082  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12602  001086  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12603  00108A  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12604  00108E  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12605  001092  0E00               	movlw	0
 12606  001094  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12607  001096  0100               	movlb	0	; () banked
 12608  001098  EE20 F008          	lfsr	2,8
 12609  00109C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12610  00109E  26D9               	addwf	fsr2l,f,c
 12611  0010A0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12612  0010A2  22DA               	addwfc	fsr2h,f,c
 12613  0010A4  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12614  0010A8  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12615  0010AC  EC84  F016         	call	_LCD_DrawRect	;wreg free
 12616  0010B0                     l9467:
 12617                           
 12618                           ;libraries/lcd_highlevel.c: 482:   if((button->text[0] == 'B')&&(button->text[1] == 'M')
      +                          )
 12619  0010B0  0100               	movlb	0	; () banked
 12620  0010B2  EE20 F00C          	lfsr	2,12
 12621  0010B6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12622  0010B8  26D9               	addwf	fsr2l,f,c
 12623  0010BA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12624  0010BC  22DA               	addwfc	fsr2h,f,c
 12625  0010BE  CFDE FFF6          	movff	postinc2,tblptrl
 12626  0010C2  CFDD FFF7          	movff	postdec2,tblptrh
 12627  0010C6                     	if	0	;tblptru may be non-zero
 12628  0010C6                     	endif
 12629  0010C6                     	if	0	;tblptru may be non-zero
 12630  0010C6                     	endif
 12631  0010C6  0008               	tblrd		*
 12632  0010C8  50F5               	movf	tablat,w,c
 12633  0010CA  0A42               	xorlw	66
 12634  0010CC  A4D8               	btfss	status,2,c
 12635  0010CE  EF6B  F008         	goto	u6581
 12636  0010D2  EF6D  F008         	goto	u6580
 12637  0010D6                     u6581:
 12638  0010D6  EF1D  F009         	goto	l9479
 12639  0010DA                     u6580:
 12640  0010DA                     
 12641                           ; BSR set to: 0
 12642  0010DA  EE20 F00C          	lfsr	2,12
 12643  0010DE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12644  0010E0  26D9               	addwf	fsr2l,f,c
 12645  0010E2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12646  0010E4  22DA               	addwfc	fsr2h,f,c
 12647  0010E6  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12648  0010EA  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12649  0010EE  0E01               	movlw	1
 12650  0010F0  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12651  0010F2  0E00               	movlw	0
 12652  0010F4  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12653  0010F6  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12654  0010FA  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12655  0010FE                     	if	0	;tblptru may be non-zero
 12656  0010FE                     	endif
 12657  0010FE                     	if	0	;tblptru may be non-zero
 12658  0010FE                     	endif
 12659  0010FE  0008               	tblrd		*
 12660  001100  50F5               	movf	tablat,w,c
 12661  001102  0A4D               	xorlw	77
 12662  001104  A4D8               	btfss	status,2,c
 12663  001106  EF87  F008         	goto	u6591
 12664  00110A  EF89  F008         	goto	u6590
 12665  00110E                     u6591:
 12666  00110E  EF1D  F009         	goto	l9479
 12667  001112                     u6590:
 12668  001112                     
 12669                           ; BSR set to: 0
 12670                           ;libraries/lcd_highlevel.c: 483:   {;libraries/lcd_highlevel.c: 484:     bmpPtr = (BMP_S
      +                          TRUCT *)button->text;
 12671  001112  EE20 F00C          	lfsr	2,12
 12672  001116  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12673  001118  26D9               	addwf	fsr2l,f,c
 12674  00111A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12675  00111C  22DA               	addwfc	fsr2h,f,c
 12676  00111E  CFDE F09A          	movff	postinc2,LCD_ButtonDraw@bmpPtr
 12677  001122  CFDD F09B          	movff	postdec2,LCD_ButtonDraw@bmpPtr+1
 12678  001126                     
 12679                           ; BSR set to: 0
 12680                           ;libraries/lcd_highlevel.c: 485:     yText = button->height / 2 + button->posY - (bmpPtr
      +                          ->biHeight / 2);
 12681  001126  EE20 F002          	lfsr	2,2
 12682  00112A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12683  00112C  26D9               	addwf	fsr2l,f,c
 12684  00112E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12685  001130  22DA               	addwfc	fsr2h,f,c
 12686  001132  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12687  001136  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12688  00113A  0E16               	movlw	22
 12689  00113C  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12690  00113E  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12691  001140  0E00               	movlw	0
 12692  001142  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12693  001144  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12694  001146  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12695  00114A  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12696  00114E                     	if	0	;tblptru may be non-zero
 12697  00114E                     	endif
 12698  00114E                     	if	0	;tblptru may be non-zero
 12699  00114E                     	endif
 12700  00114E  0009               	tblrd		*+
 12701  001150  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12702  001154  0009               	tblrd		*+
 12703  001156  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12704  00115A  0009               	tblrd		*+
 12705  00115C  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12706  001160  0009               	tblrd		*+
 12707  001162  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12708  001166  90D8               	bcf	status,0,c
 12709  001168  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12710  00116A  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12711  00116C  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12712  00116E  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12713  001170  EE20 F006          	lfsr	2,6
 12714  001174  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12715  001176  26D9               	addwf	fsr2l,f,c
 12716  001178  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12717  00117A  22DA               	addwfc	fsr2h,f,c
 12718  00117C  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12719  001180  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12720  001184  90D8               	bcf	status,0,c
 12721  001186  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12722  001188  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12723  00118A  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12724  00118C  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12725  00118E  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12726  001190  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12727  001192  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12728  001194  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12729  001196  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12730  001198  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12731  00119A  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12732  00119C  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12733  00119E  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12734  0011A0  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12735  0011A2                     
 12736                           ; BSR set to: 0
 12737                           ;libraries/lcd_highlevel.c: 486:     xText = button->width / 2 + button->posX - (bmpPtr-
      +                          >biWidth / 2);
 12738  0011A2  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12739  0011A6  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12740  0011AA  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12741  0011AE  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12742  0011B2  0E12               	movlw	18
 12743  0011B4  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12744  0011B6  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12745  0011B8  0E00               	movlw	0
 12746  0011BA  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12747  0011BC  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12748  0011BE  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12749  0011C2  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12750  0011C6                     	if	0	;tblptru may be non-zero
 12751  0011C6                     	endif
 12752  0011C6                     	if	0	;tblptru may be non-zero
 12753  0011C6                     	endif
 12754  0011C6  0009               	tblrd		*+
 12755  0011C8  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12756  0011CC  0009               	tblrd		*+
 12757  0011CE  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12758  0011D2  0009               	tblrd		*+
 12759  0011D4  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12760  0011D8  0009               	tblrd		*+
 12761  0011DA  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12762  0011DE  90D8               	bcf	status,0,c
 12763  0011E0  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12764  0011E2  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12765  0011E4  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12766  0011E6  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12767  0011E8  EE20 F004          	lfsr	2,4
 12768  0011EC  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12769  0011EE  26D9               	addwf	fsr2l,f,c
 12770  0011F0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12771  0011F2  22DA               	addwfc	fsr2h,f,c
 12772  0011F4  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12773  0011F8  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12774  0011FC  90D8               	bcf	status,0,c
 12775  0011FE  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12776  001200  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12777  001202  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12778  001204  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12779  001206  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12780  001208  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12781  00120A  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12782  00120C  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12783  00120E  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12784  001210  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12785  001212  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 12786  001214  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12787  001216  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12788  001218  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 12789  00121A                     
 12790                           ; BSR set to: 0
 12791                           ;libraries/lcd_highlevel.c: 487:     LCD_Bitmap((const uint8_t *)bmpPtr,xText,yText);
 12792  00121A  C09A  F027         	movff	LCD_ButtonDraw@bmpPtr,LCD_Bitmap@bmpPtr
 12793  00121E  C09B  F028         	movff	LCD_ButtonDraw@bmpPtr+1,LCD_Bitmap@bmpPtr+1
 12794  001222  C095  F029         	movff	LCD_ButtonDraw@xText,LCD_Bitmap@posX
 12795  001226  C096  F02A         	movff	LCD_ButtonDraw@xText+1,LCD_Bitmap@posX+1
 12796  00122A  C097  F02B         	movff	LCD_ButtonDraw@yText,LCD_Bitmap@posY
 12797  00122E  C098  F02C         	movff	LCD_ButtonDraw@yText+1,LCD_Bitmap@posY+1
 12798  001232  ECBF  F004         	call	_LCD_Bitmap	;wreg free
 12799                           
 12800                           ;libraries/lcd_highlevel.c: 488:   }
 12801  001236  EF2A  F00A         	goto	l9495
 12802  00123A                     l9479:
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;libraries/lcd_highlevel.c: 493:   {;libraries/lcd_highlevel.c: 494:     yText = button-
      +                          >height / 2 + button->posY - (button->font->height / 2);
 12806  00123A  EE20 F002          	lfsr	2,2
 12807  00123E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12808  001240  26D9               	addwf	fsr2l,f,c
 12809  001242  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12810  001244  22DA               	addwfc	fsr2h,f,c
 12811  001246  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12812  00124A  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12813  00124E  EE20 F00E          	lfsr	2,14
 12814  001252  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12815  001254  26D9               	addwf	fsr2l,f,c
 12816  001256  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12817  001258  22DA               	addwfc	fsr2h,f,c
 12818  00125A  CFDE FFF6          	movff	postinc2,tblptrl
 12819  00125E  CFDD FFF7          	movff	postdec2,tblptrh
 12820  001262                     	if	0	;tblptru may be non-zero
 12821  001262                     	endif
 12822  001262                     	if	0	;tblptru may be non-zero
 12823  001262                     	endif
 12824  001262  0008               	tblrd		*
 12825  001264  50F5               	movf	tablat,w,c
 12826  001266  6E12               	movwf	___awdiv@dividend^0,c
 12827  001268  6A13               	clrf	(___awdiv@dividend+1)^0,c
 12828  00126A  0E00               	movlw	0
 12829  00126C  6E15               	movwf	(___awdiv@divisor+1)^0,c
 12830  00126E  0E02               	movlw	2
 12831  001270  6E14               	movwf	___awdiv@divisor^0,c
 12832  001272  ECD9  F028         	call	___awdiv	;wreg free
 12833  001276  0100               	movlb	0	; () banked
 12834  001278  EE20 F006          	lfsr	2,6
 12835  00127C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12836  00127E  26D9               	addwf	fsr2l,f,c
 12837  001280  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12838  001282  22DA               	addwfc	fsr2h,f,c
 12839  001284  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12840  001288  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12841  00128C  90D8               	bcf	status,0,c
 12842  00128E  3181               	rrcf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12843  001290  6F83               	movwf	(??_LCD_ButtonDraw+5)& (0+255),b
 12844  001292  3180               	rrcf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12845  001294  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12846  001296  5012               	movf	?___awdiv^0,w,c
 12847  001298  5F82               	subwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12848  00129A  5013               	movf	(?___awdiv+1)^0,w,c
 12849  00129C  5B83               	subwfb	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12850  00129E  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12851  0012A0  2582               	addwf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12852  0012A2  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12853  0012A4  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12854  0012A6  2183               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12855  0012A8  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12856  0012AA                     
 12857                           ; BSR set to: 0
 12858                           ;libraries/lcd_highlevel.c: 495:     for(i=0;i<strlen(button->text);i++)
 12859  0012AA  0E00               	movlw	0
 12860  0012AC  6F99               	movwf	LCD_ButtonDraw@i& (0+255),b
 12861  0012AE  EFB5  F009         	goto	l9489
 12862  0012B2                     l9483:
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;libraries/lcd_highlevel.c: 496:     {;libraries/lcd_highlevel.c: 497:       tempChar = 
      +                          (button->text[i]) - button->font->start_char;
 12866  0012B2  EE20 F00E          	lfsr	2,14
 12867  0012B6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12868  0012B8  26D9               	addwf	fsr2l,f,c
 12869  0012BA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12870  0012BC  22DA               	addwfc	fsr2h,f,c
 12871  0012BE  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12872  0012C2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12873  0012C6  0E01               	movlw	1
 12874  0012C8  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12875  0012CA  0E00               	movlw	0
 12876  0012CC  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12877  0012CE  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12878  0012D2  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12879  0012D6                     	if	0	;tblptru may be non-zero
 12880  0012D6                     	endif
 12881  0012D6                     	if	0	;tblptru may be non-zero
 12882  0012D6                     	endif
 12883  0012D6  0008               	tblrd		*
 12884  0012D8  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12885  0012DC  EE20 F00C          	lfsr	2,12
 12886  0012E0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12887  0012E2  26D9               	addwf	fsr2l,f,c
 12888  0012E4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12889  0012E6  22DA               	addwfc	fsr2h,f,c
 12890  0012E8  CFDE F081          	movff	postinc2,??_LCD_ButtonDraw+3
 12891  0012EC  CFDD F082          	movff	postdec2,??_LCD_ButtonDraw+4
 12892  0012F0  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12893  0012F2  2781               	addwf	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12894  0012F4  0E00               	movlw	0
 12895  0012F6  2382               	addwfc	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12896  0012F8  C081  FFF6         	movff	??_LCD_ButtonDraw+3,tblptrl
 12897  0012FC  C082  FFF7         	movff	??_LCD_ButtonDraw+4,tblptrh
 12898  001300                     	if	0	;tblptru may be non-zero
 12899  001300                     	endif
 12900  001300                     	if	0	;tblptru may be non-zero
 12901  001300                     	endif
 12902  001300  0008               	tblrd		*
 12903  001302  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12904  001306  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12905  001308  5D83               	subwf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12906  00130A  6F8A               	movwf	LCD_ButtonDraw@tempChar& (0+255),b
 12907  00130C                     
 12908                           ; BSR set to: 0
 12909                           ;libraries/lcd_highlevel.c: 498:       width += button->font->descriptor[tempChar].width
      +                          +2;
 12910  00130C  518A               	movf	LCD_ButtonDraw@tempChar& (0+255),w,b
 12911  00130E  0D03               	mullw	3
 12912  001310  EE20 F00E          	lfsr	2,14
 12913  001314  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12914  001316  26D9               	addwf	fsr2l,f,c
 12915  001318  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12916  00131A  22DA               	addwfc	fsr2h,f,c
 12917  00131C  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12918  001320  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12919  001324  0E03               	movlw	3
 12920  001326  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12921  001328  0E00               	movlw	0
 12922  00132A  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12923  00132C  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12924  001330  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12925  001334                     	if	0	;tblptru may be non-zero
 12926  001334                     	endif
 12927  001334                     	if	0	;tblptru may be non-zero
 12928  001334                     	endif
 12929  001334  0009               	tblrd		*+
 12930  001336  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12931  00133A  0009               	tblrd		*+
 12932  00133C  CFF5 F081          	movff	tablat,??_LCD_ButtonDraw+3
 12933  001340  50F3               	movf	243,w,c
 12934  001342  2780               	addwf	(??_LCD_ButtonDraw+2)& (0+255),f,b
 12935  001344  50F4               	movf	244,w,c
 12936  001346  2381               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12937  001348  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12938  00134C  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12939  001350                     	if	0	;tblptru may be non-zero
 12940  001350                     	endif
 12941  001350                     	if	0	;tblptru may be non-zero
 12942  001350                     	endif
 12943  001350  0008               	tblrd		*
 12944  001352  50F5               	movf	tablat,w,c
 12945  001354  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12946  001356  6B83               	clrf	(??_LCD_ButtonDraw+5)& (0+255),b
 12947  001358  0E02               	movlw	2
 12948  00135A  2782               	addwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12949  00135C  0E00               	movlw	0
 12950  00135E  2383               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12951  001360  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12952  001362  278B               	addwf	LCD_ButtonDraw@width& (0+255),f,b
 12953  001364  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12954  001366  238C               	addwfc	(LCD_ButtonDraw@width+1)& (0+255),f,b
 12955  001368                     
 12956                           ; BSR set to: 0
 12957                           ;libraries/lcd_highlevel.c: 499:     }
 12958  001368  2B99               	incf	LCD_ButtonDraw@i& (0+255),f,b
 12959  00136A                     l9489:
 12960                           
 12961                           ; BSR set to: 0
 12962  00136A  EE20 F00C          	lfsr	2,12
 12963  00136E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12964  001370  26D9               	addwf	fsr2l,f,c
 12965  001372  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12966  001374  22DA               	addwfc	fsr2h,f,c
 12967  001376  CFDE F012          	movff	postinc2,strlen@s
 12968  00137A  CFDD F013          	movff	postdec2,strlen@s+1
 12969  00137E  EC1A  F030         	call	_strlen	;wreg free
 12970  001382  0100               	movlb	0	; () banked
 12971  001384  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12972  001386  6F7E               	movwf	??_LCD_ButtonDraw& (0+255),b
 12973  001388  6B7F               	clrf	(??_LCD_ButtonDraw+1)& (0+255),b
 12974  00138A  5012               	movf	?_strlen^0,w,c
 12975  00138C  5D7E               	subwf	??_LCD_ButtonDraw& (0+255),w,b
 12976  00138E  5013               	movf	(?_strlen+1)^0,w,c
 12977  001390  597F               	subwfb	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12978  001392  A0D8               	btfss	status,0,c
 12979  001394  EFCE  F009         	goto	u6601
 12980  001398  EFD0  F009         	goto	u6600
 12981  00139C                     u6601:
 12982  00139C  EF59  F009         	goto	l9483
 12983  0013A0                     u6600:
 12984  0013A0                     
 12985                           ; BSR set to: 0
 12986                           ;libraries/lcd_highlevel.c: 500:     xText = button->width / 2 + button->posX - (width /
      +                           2);
 12987  0013A0  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12988  0013A4  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12989  0013A8  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12990  0013AC  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12991  0013B0  90D8               	bcf	status,0,c
 12992  0013B2  318C               	rrcf	(LCD_ButtonDraw@width+1)& (0+255),w,b
 12993  0013B4  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12994  0013B6  318B               	rrcf	LCD_ButtonDraw@width& (0+255),w,b
 12995  0013B8  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12996  0013BA  EE20 F004          	lfsr	2,4
 12997  0013BE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12998  0013C0  26D9               	addwf	fsr2l,f,c
 12999  0013C2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13000  0013C4  22DA               	addwfc	fsr2h,f,c
 13001  0013C6  CFDE F082          	movff	postinc2,??_LCD_ButtonDraw+4
 13002  0013CA  CFDD F083          	movff	postdec2,??_LCD_ButtonDraw+5
 13003  0013CE  90D8               	bcf	status,0,c
 13004  0013D0  3183               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13005  0013D2  6F85               	movwf	(??_LCD_ButtonDraw+7)& (0+255),b
 13006  0013D4  3182               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 13007  0013D6  6F84               	movwf	(??_LCD_ButtonDraw+6)& (0+255),b
 13008  0013D8  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 13009  0013DA  5F84               	subwf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 13010  0013DC  5181               	movf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 13011  0013DE  5B85               	subwfb	(??_LCD_ButtonDraw+7)& (0+255),f,b
 13012  0013E0  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13013  0013E2  2584               	addwf	(??_LCD_ButtonDraw+6)& (0+255),w,b
 13014  0013E4  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 13015  0013E6  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13016  0013E8  2185               	addwfc	(??_LCD_ButtonDraw+7)& (0+255),w,b
 13017  0013EA  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 13018  0013EC                     
 13019                           ; BSR set to: 0
 13020                           ;libraries/lcd_highlevel.c: 501:     LCD_DrawText(button->text, button->font,A_LEFT,
 13021  0013EC  EE20 F00C          	lfsr	2,12
 13022  0013F0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13023  0013F2  26D9               	addwf	fsr2l,f,c
 13024  0013F4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13025  0013F6  22DA               	addwfc	fsr2h,f,c
 13026  0013F8  CFDE F020          	movff	postinc2,LCD_DrawText@msg
 13027  0013FC  CFDD F021          	movff	postdec2,LCD_DrawText@msg+1
 13028  001400  EE20 F00E          	lfsr	2,14
 13029  001404  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13030  001406  26D9               	addwf	fsr2l,f,c
 13031  001408  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13032  00140A  22DA               	addwfc	fsr2h,f,c
 13033  00140C  CFDE F022          	movff	postinc2,LCD_DrawText@font
 13034  001410  CFDD F023          	movff	postdec2,LCD_DrawText@font+1
 13035  001414  0E00               	movlw	0
 13036  001416  6E24               	movwf	LCD_DrawText@align^0,c
 13037  001418  C095  F025         	movff	LCD_ButtonDraw@xText,LCD_DrawText@posX
 13038  00141C  C096  F026         	movff	LCD_ButtonDraw@xText+1,LCD_DrawText@posX+1
 13039  001420  C097  F027         	movff	LCD_ButtonDraw@yText,LCD_DrawText@posY
 13040  001424  C098  F028         	movff	LCD_ButtonDraw@yText+1,LCD_DrawText@posY+1
 13041  001428  EE20 F008          	lfsr	2,8
 13042  00142C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13043  00142E  26D9               	addwf	fsr2l,f,c
 13044  001430  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13045  001432  22DA               	addwfc	fsr2h,f,c
 13046  001434  CFDE F029          	movff	postinc2,LCD_DrawText@color
 13047  001438  CFDD F02A          	movff	postdec2,LCD_DrawText@color+1
 13048  00143C  EE20 F00A          	lfsr	2,10
 13049  001440  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13050  001442  26D9               	addwf	fsr2l,f,c
 13051  001444  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13052  001446  22DA               	addwfc	fsr2h,f,c
 13053  001448  CFDE F02B          	movff	postinc2,LCD_DrawText@bg_color
 13054  00144C  CFDD F02C          	movff	postdec2,LCD_DrawText@bg_color+1
 13055  001450  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 13056  001454                     l9495:
 13057                           
 13058                           ;libraries/lcd_highlevel.c: 504:   LCD_ButtonUpdate(button);
 13059  001454  C07C  F025         	movff	LCD_ButtonDraw@button,LCD_ButtonUpdate@button
 13060  001458  C07D  F026         	movff	LCD_ButtonDraw@button+1,LCD_ButtonUpdate@button+1
 13061  00145C  EC1D  F01C         	call	_LCD_ButtonUpdate	;wreg free
 13062  001460  0012               	return		;funcret
 13063  001462                     __end_of_LCD_ButtonDraw:
 13064                           	callstack 0
 13065                           
 13066 ;; *************** function _LCD_ButtonUpdate *****************
 13067 ;; Defined at:
 13068 ;;		line 425 in file "libraries/lcd_highlevel.c"
 13069 ;; Parameters:    Size  Location     Type
 13070 ;;  button          2   36[COMRAM] PTR struct .
 13071 ;;		 -> g1(239), 
 13072 ;; Auto vars:     Size  Location     Type
 13073 ;;  y2              2   52[COMRAM] unsigned short 
 13074 ;;  x1              2   50[COMRAM] unsigned short 
 13075 ;;  y1              2   48[COMRAM] unsigned short 
 13076 ;;  x2              2   46[COMRAM] unsigned short 
 13077 ;;  colorIn         2   44[COMRAM] unsigned short 
 13078 ;;  colorOut        2   42[COMRAM] unsigned short 
 13079 ;; Return value:  Size  Location     Type
 13080 ;;                  1    wreg      void 
 13081 ;; Registers used:
 13082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13083 ;; Tracked objects:
 13084 ;;		On entry : 0/0
 13085 ;;		On exit  : 0/0
 13086 ;;		Unchanged: 0/0
 13087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13088 ;;      Params:         2       0       0       0       0       0       0
 13089 ;;      Locals:        12       0       0       0       0       0       0
 13090 ;;      Temps:          4       0       0       0       0       0       0
 13091 ;;      Totals:        18       0       0       0       0       0       0
 13092 ;;Total ram usage:       18 bytes
 13093 ;; Hardware stack levels used: 1
 13094 ;; Hardware stack levels required when called: 5
 13095 ;; This function calls:
 13096 ;;		_LCD_DrawRect
 13097 ;;		_LCD_Read
 13098 ;; This function is called by:
 13099 ;;		_LCD_ButtonDraw
 13100 ;; This function uses a non-reentrant model
 13101 ;;
 13102                           
 13103                           	psect	text49
 13104  00383A                     __ptext49:
 13105                           	callstack 0
 13106  00383A                     _LCD_ButtonUpdate:
 13107                           	callstack 19
 13108  00383A                     
 13109                           ;libraries/lcd_highlevel.c: 425: void LCD_ButtonUpdate(btn_t * button);libraries/lcd_hig
      +                          hlevel.c: 426: {;libraries/lcd_highlevel.c: 427:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 428:   uint16_t colorOut, colorIn;;libraries/lcd_highlevel.c: 430:   x1 = bu
      +                          tton->posX;
 13110  00383A  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13111  00383E  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13112  003842  CFDE F033          	movff	postinc2,LCD_ButtonUpdate@x1
 13113  003846  CFDD F034          	movff	postdec2,LCD_ButtonUpdate@x1+1
 13114  00384A                     
 13115                           ;libraries/lcd_highlevel.c: 431:   x2 = button->posX + button->width;
 13116  00384A  EE20 F004          	lfsr	2,4
 13117  00384E  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13118  003850  26D9               	addwf	fsr2l,f,c
 13119  003852  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13120  003854  22DA               	addwfc	fsr2h,f,c
 13121  003856  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13122  00385A  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13123  00385E  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13124  003862  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13125  003866  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13126  00386A  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13127  00386E  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13128  003870  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13129  003872  6E2F               	movwf	LCD_ButtonUpdate@x2^0,c
 13130  003874  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13131  003876  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13132  003878  6E30               	movwf	(LCD_ButtonUpdate@x2+1)^0,c
 13133  00387A                     
 13134                           ;libraries/lcd_highlevel.c: 432:   y1 = button->posY;
 13135  00387A  EE20 F002          	lfsr	2,2
 13136  00387E  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13137  003880  26D9               	addwf	fsr2l,f,c
 13138  003882  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13139  003884  22DA               	addwfc	fsr2h,f,c
 13140  003886  CFDE F031          	movff	postinc2,LCD_ButtonUpdate@y1
 13141  00388A  CFDD F032          	movff	postdec2,LCD_ButtonUpdate@y1+1
 13142  00388E                     
 13143                           ;libraries/lcd_highlevel.c: 433:   y2 = button->posY + button->height;
 13144  00388E  EE20 F006          	lfsr	2,6
 13145  003892  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13146  003894  26D9               	addwf	fsr2l,f,c
 13147  003896  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13148  003898  22DA               	addwfc	fsr2h,f,c
 13149  00389A  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13150  00389E  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13151  0038A2  EE20 F002          	lfsr	2,2
 13152  0038A6  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13153  0038A8  26D9               	addwf	fsr2l,f,c
 13154  0038AA  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13155  0038AC  22DA               	addwfc	fsr2h,f,c
 13156  0038AE  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13157  0038B2  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13158  0038B6  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13159  0038B8  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13160  0038BA  6E35               	movwf	LCD_ButtonUpdate@y2^0,c
 13161  0038BC  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13162  0038BE  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13163  0038C0  6E36               	movwf	(LCD_ButtonUpdate@y2+1)^0,c
 13164  0038C2                     
 13165                           ;libraries/lcd_highlevel.c: 435:   if(button->pressed == 0)
 13166  0038C2  EE20 F010          	lfsr	2,16
 13167  0038C6  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13168  0038C8  26D9               	addwf	fsr2l,f,c
 13169  0038CA  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13170  0038CC  22DA               	addwfc	fsr2h,f,c
 13171  0038CE  50DF               	movf	indf2,w,c
 13172  0038D0  A4D8               	btfss	status,2,c
 13173  0038D2  EF6D  F01C         	goto	u6331
 13174  0038D6  EF6F  F01C         	goto	u6330
 13175  0038DA                     u6331:
 13176  0038DA  EF85  F01C         	goto	l8917
 13177  0038DE                     u6330:
 13178  0038DE                     
 13179                           ;libraries/lcd_highlevel.c: 436:   {;libraries/lcd_highlevel.c: 437:     colorOut = butt
      +                          on->txtColor;
 13180  0038DE  EE20 F008          	lfsr	2,8
 13181  0038E2  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13182  0038E4  26D9               	addwf	fsr2l,f,c
 13183  0038E6  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13184  0038E8  22DA               	addwfc	fsr2h,f,c
 13185  0038EA  CFDE F02B          	movff	postinc2,LCD_ButtonUpdate@colorOut
 13186  0038EE  CFDD F02C          	movff	postdec2,LCD_ButtonUpdate@colorOut+1
 13187                           
 13188                           ;libraries/lcd_highlevel.c: 438:     colorIn = button->bgColor;
 13189  0038F2  EE20 F00A          	lfsr	2,10
 13190  0038F6  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13191  0038F8  26D9               	addwf	fsr2l,f,c
 13192  0038FA  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13193  0038FC  22DA               	addwfc	fsr2h,f,c
 13194  0038FE  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13195  003902  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13196                           
 13197                           ;libraries/lcd_highlevel.c: 439:   }
 13198  003906  EF9F  F01C         	goto	l8921
 13199  00390A                     l8917:
 13200                           
 13201                           ;libraries/lcd_highlevel.c: 441:   {;libraries/lcd_highlevel.c: 443:     colorOut = LCD_
      +                          Read(x1,y2+1);
 13202  00390A  C033  F012         	movff	LCD_ButtonUpdate@x1,LCD_Read@posX
 13203  00390E  C034  F013         	movff	LCD_ButtonUpdate@x1+1,LCD_Read@posX+1
 13204  003912  0E01               	movlw	1
 13205  003914  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13206  003916  6E14               	movwf	LCD_Read@posY^0,c
 13207  003918  0E00               	movlw	0
 13208  00391A  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13209  00391C  6E15               	movwf	(LCD_Read@posY+1)^0,c
 13210  00391E  EC0D  F021         	call	_LCD_Read	;wreg free
 13211  003922  C012  F02B         	movff	?_LCD_Read,LCD_ButtonUpdate@colorOut
 13212  003926  C013  F02C         	movff	?_LCD_Read+1,LCD_ButtonUpdate@colorOut+1
 13213  00392A                     
 13214                           ;libraries/lcd_highlevel.c: 444:     colorIn = button->txtColor;
 13215  00392A  EE20 F008          	lfsr	2,8
 13216  00392E  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13217  003930  26D9               	addwf	fsr2l,f,c
 13218  003932  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13219  003934  22DA               	addwfc	fsr2h,f,c
 13220  003936  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13221  00393A  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13222  00393E                     l8921:
 13223                           
 13224                           ;libraries/lcd_highlevel.c: 446:   if(button->bgColor != button->txtColor)
 13225  00393E  EE20 F008          	lfsr	2,8
 13226  003942  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13227  003944  26D9               	addwf	fsr2l,f,c
 13228  003946  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13229  003948  22DA               	addwfc	fsr2h,f,c
 13230  00394A  EE10 F00A          	lfsr	1,10
 13231  00394E  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13232  003950  26E1               	addwf	fsr1l,f,c
 13233  003952  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13234  003954  22E2               	addwfc	fsr1h,f,c
 13235  003956  50DE               	movf	postinc2,w,c
 13236  003958  18E6               	xorwf	postinc1,w,c
 13237  00395A  E109               	bnz	u6340
 13238  00395C  50DE               	movf	postinc2,w,c
 13239  00395E  18E6               	xorwf	postinc1,w,c
 13240  003960  B4D8               	btfsc	status,2,c
 13241  003962  EFB5  F01C         	goto	u6341
 13242  003966  EFB7  F01C         	goto	u6340
 13243  00396A                     u6341:
 13244  00396A  EF37  F01D         	goto	l251
 13245  00396E                     u6340:
 13246  00396E                     
 13247                           ;libraries/lcd_highlevel.c: 447:   {;libraries/lcd_highlevel.c: 449:     LCD_DrawRect(x1
      +                          +3, y2+1, x2+3, y2+3, 1, colorOut);
 13248  00396E  0E03               	movlw	3
 13249  003970  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13250  003972  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13251  003974  0E00               	movlw	0
 13252  003976  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13253  003978  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13254  00397A  0E01               	movlw	1
 13255  00397C  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13256  00397E  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13257  003980  0E00               	movlw	0
 13258  003982  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13259  003984  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13260  003986  0E03               	movlw	3
 13261  003988  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13262  00398A  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13263  00398C  0E00               	movlw	0
 13264  00398E  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13265  003990  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13266  003992  0E03               	movlw	3
 13267  003994  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13268  003996  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13269  003998  0E00               	movlw	0
 13270  00399A  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13271  00399C  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13272  00399E  0E01               	movlw	1
 13273  0039A0  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13274  0039A2  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13275  0039A6  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13276  0039AA  EC84  F016         	call	_LCD_DrawRect	;wreg free
 13277                           
 13278                           ;libraries/lcd_highlevel.c: 450:     LCD_DrawRect(x2+1, y1+3, x2+3, y2+3, 1, colorOut);
 13279  0039AE  0E01               	movlw	1
 13280  0039B0  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13281  0039B2  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13282  0039B4  0E00               	movlw	0
 13283  0039B6  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13284  0039B8  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13285  0039BA  0E03               	movlw	3
 13286  0039BC  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13287  0039BE  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13288  0039C0  0E00               	movlw	0
 13289  0039C2  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13290  0039C4  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13291  0039C6  0E03               	movlw	3
 13292  0039C8  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13293  0039CA  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13294  0039CC  0E00               	movlw	0
 13295  0039CE  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13296  0039D0  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13297  0039D2  0E03               	movlw	3
 13298  0039D4  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13299  0039D6  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13300  0039D8  0E00               	movlw	0
 13301  0039DA  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13302  0039DC  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13303  0039DE  0E01               	movlw	1
 13304  0039E0  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13305  0039E2  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13306  0039E6  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13307  0039EA  EC84  F016         	call	_LCD_DrawRect	;wreg free
 13308                           
 13309                           ;libraries/lcd_highlevel.c: 451:     LCD_DrawRect(x1+1, y1+1, x2-1, y1+2, 1, colorIn);
 13310  0039EE  0E01               	movlw	1
 13311  0039F0  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13312  0039F2  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13313  0039F4  0E00               	movlw	0
 13314  0039F6  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13315  0039F8  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13316  0039FA  0E01               	movlw	1
 13317  0039FC  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13318  0039FE  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13319  003A00  0E00               	movlw	0
 13320  003A02  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13321  003A04  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13322  003A06  0EFF               	movlw	255
 13323  003A08  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13324  003A0A  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13325  003A0C  0EFF               	movlw	255
 13326  003A0E  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13327  003A10  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13328  003A12  0E02               	movlw	2
 13329  003A14  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13330  003A16  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13331  003A18  0E00               	movlw	0
 13332  003A1A  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13333  003A1C  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13334  003A1E  0E01               	movlw	1
 13335  003A20  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13336  003A22  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13337  003A26  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13338  003A2A  EC84  F016         	call	_LCD_DrawRect	;wreg free
 13339                           
 13340                           ;libraries/lcd_highlevel.c: 452:     LCD_DrawRect(x1+1, y1+1, x1+2, y2-1, 1, colorIn);
 13341  003A2E  0E01               	movlw	1
 13342  003A30  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13343  003A32  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13344  003A34  0E00               	movlw	0
 13345  003A36  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13346  003A38  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13347  003A3A  0E01               	movlw	1
 13348  003A3C  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13349  003A3E  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13350  003A40  0E00               	movlw	0
 13351  003A42  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13352  003A44  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13353  003A46  0E02               	movlw	2
 13354  003A48  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13355  003A4A  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13356  003A4C  0E00               	movlw	0
 13357  003A4E  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13358  003A50  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13359  003A52  0EFF               	movlw	255
 13360  003A54  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13361  003A56  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13362  003A58  0EFF               	movlw	255
 13363  003A5A  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13364  003A5C  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13365  003A5E  0E01               	movlw	1
 13366  003A60  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13367  003A62  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13368  003A66  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13369  003A6A  EC84  F016         	call	_LCD_DrawRect	;wreg free
 13370  003A6E                     l251:
 13371  003A6E  0012               	return		;funcret
 13372  003A70                     __end_of_LCD_ButtonUpdate:
 13373                           	callstack 0
 13374                           
 13375 ;; *************** function _LCD_Read *****************
 13376 ;; Defined at:
 13377 ;;		line 64 in file "libraries/lcd_lowlevel.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;  posX            2   17[COMRAM] unsigned short 
 13380 ;;  posY            2   19[COMRAM] unsigned short 
 13381 ;; Auto vars:     Size  Location     Type
 13382 ;;  temp16          2   25[COMRAM] unsigned short 
 13383 ;;  color           2   23[COMRAM] unsigned short 
 13384 ;; Return value:  Size  Location     Type
 13385 ;;                  2   17[COMRAM] unsigned short 
 13386 ;; Registers used:
 13387 ;;		wreg, status,2, status,0
 13388 ;; Tracked objects:
 13389 ;;		On entry : 0/0
 13390 ;;		On exit  : 0/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13393 ;;      Params:         4       0       0       0       0       0       0
 13394 ;;      Locals:         4       0       0       0       0       0       0
 13395 ;;      Temps:          2       0       0       0       0       0       0
 13396 ;;      Totals:        10       0       0       0       0       0       0
 13397 ;;Total ram usage:       10 bytes
 13398 ;; Hardware stack levels used: 1
 13399 ;; Hardware stack levels required when called: 4
 13400 ;; This function calls:
 13401 ;;		Nothing
 13402 ;; This function is called by:
 13403 ;;		_LCD_ButtonUpdate
 13404 ;; This function uses a non-reentrant model
 13405 ;;
 13406                           
 13407                           	psect	text50
 13408  00421A                     __ptext50:
 13409                           	callstack 0
 13410  00421A                     _LCD_Read:
 13411                           	callstack 19
 13412  00421A                     
 13413                           ;libraries/lcd_lowlevel.c: 64: uint16_t LCD_Read(uint16_t posX, uint16_t posY);libraries
      +                          /lcd_lowlevel.c: 65: {;libraries/lcd_lowlevel.c: 66:  uint16_t temp16;;libraries/lcd_low
      +                          level.c: 67:   uint16_t color;;libraries/lcd_lowlevel.c: 70:   PORTA = 0x2A; LATC4 = 0; 
      +                          LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 13414  00421A  0E2A               	movlw	42
 13415  00421C  6E80               	movwf	128,c	;volatile
 13416  00421E  988B               	bcf	3979,4,c	;volatile
 13417  004220  968B               	bcf	3979,3,c	;volatile
 13418  004222  868B               	bsf	3979,3,c	;volatile
 13419  004224  888B               	bsf	3979,4,c	;volatile
 13420                           
 13421                           ;libraries/lcd_lowlevel.c: 71:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13422  004226  5013               	movf	(LCD_Read@posX+1)^0,w,c
 13423  004228  6E80               	movwf	128,c	;volatile
 13424  00422A  968B               	bcf	3979,3,c	;volatile
 13425  00422C  868B               	bsf	3979,3,c	;volatile
 13426  00422E                     
 13427                           ;libraries/lcd_lowlevel.c: 72:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13428  00422E  C012  FF80         	movff	LCD_Read@posX,3968	;volatile
 13429  004232  968B               	bcf	3979,3,c	;volatile
 13430  004234  868B               	bsf	3979,3,c	;volatile
 13431                           
 13432                           ;libraries/lcd_lowlevel.c: 73:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13433  004236  0E00               	movlw	0
 13434  004238  6E80               	movwf	128,c	;volatile
 13435  00423A  968B               	bcf	3979,3,c	;volatile
 13436  00423C  868B               	bsf	3979,3,c	;volatile
 13437                           
 13438                           ;libraries/lcd_lowlevel.c: 74:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 13439  00423E  0EEF               	movlw	239
 13440  004240  6E80               	movwf	128,c	;volatile
 13441  004242  968B               	bcf	3979,3,c	;volatile
 13442  004244  868B               	bsf	3979,3,c	;volatile
 13443                           
 13444                           ;libraries/lcd_lowlevel.c: 76:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13445  004246  0E2B               	movlw	43
 13446  004248  6E80               	movwf	128,c	;volatile
 13447  00424A  988B               	bcf	3979,4,c	;volatile
 13448  00424C  968B               	bcf	3979,3,c	;volatile
 13449  00424E  868B               	bsf	3979,3,c	;volatile
 13450  004250  888B               	bsf	3979,4,c	;volatile
 13451                           
 13452                           ;libraries/lcd_lowlevel.c: 77:   PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 13453  004252  5015               	movf	(LCD_Read@posY+1)^0,w,c
 13454  004254  6E80               	movwf	128,c	;volatile
 13455  004256  968B               	bcf	3979,3,c	;volatile
 13456  004258  868B               	bsf	3979,3,c	;volatile
 13457  00425A                     
 13458                           ;libraries/lcd_lowlevel.c: 78:   PORTA = posY; LATC3 = 0; LATC3 = 1;;
 13459  00425A  C014  FF80         	movff	LCD_Read@posY,3968	;volatile
 13460  00425E  968B               	bcf	3979,3,c	;volatile
 13461  004260  868B               	bsf	3979,3,c	;volatile
 13462                           
 13463                           ;libraries/lcd_lowlevel.c: 79:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13464  004262  0E01               	movlw	1
 13465  004264  6E80               	movwf	128,c	;volatile
 13466  004266  968B               	bcf	3979,3,c	;volatile
 13467  004268  868B               	bsf	3979,3,c	;volatile
 13468                           
 13469                           ;libraries/lcd_lowlevel.c: 80:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 13470  00426A  0E3F               	movlw	63
 13471  00426C  6E80               	movwf	128,c	;volatile
 13472  00426E  968B               	bcf	3979,3,c	;volatile
 13473  004270  868B               	bsf	3979,3,c	;volatile
 13474                           
 13475                           ;libraries/lcd_lowlevel.c: 82:   PORTA = 0x2E; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13476  004272  0E2E               	movlw	46
 13477  004274  6E80               	movwf	128,c	;volatile
 13478  004276  988B               	bcf	3979,4,c	;volatile
 13479  004278  968B               	bcf	3979,3,c	;volatile
 13480  00427A  868B               	bsf	3979,3,c	;volatile
 13481  00427C  888B               	bsf	3979,4,c	;volatile
 13482  00427E                     
 13483                           ;libraries/lcd_lowlevel.c: 83:  TRISA = 0xFF;
 13484  00427E  6892               	setf	146,c	;volatile
 13485  004280                     
 13486                           ;libraries/lcd_lowlevel.c: 84:  LATC2 = 0;
 13487  004280  948B               	bcf	3979,2,c	;volatile
 13488  004282                     
 13489                           ;libraries/lcd_lowlevel.c: 85:   __nop();
 13490  004282  F000               	nop	
 13491  004284                     
 13492                           ;libraries/lcd_lowlevel.c: 86:  LATC2 = 1;
 13493  004284  848B               	bsf	3979,2,c	;volatile
 13494  004286                     
 13495                           ;libraries/lcd_lowlevel.c: 87:  TRISA = 0xFF;
 13496  004286  6892               	setf	146,c	;volatile
 13497  004288                     
 13498                           ;libraries/lcd_lowlevel.c: 88:  LATC2 = 0;
 13499  004288  948B               	bcf	3979,2,c	;volatile
 13500  00428A                     
 13501                           ;libraries/lcd_lowlevel.c: 89:   __nop();
 13502  00428A  F000               	nop	
 13503  00428C                     
 13504                           ;libraries/lcd_lowlevel.c: 90:  temp16 = PORTA;
 13505  00428C  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13506  004290  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13507  004292                     
 13508                           ;libraries/lcd_lowlevel.c: 91:  LATC2 = 1;
 13509  004292  848B               	bsf	3979,2,c	;volatile
 13510  004294                     
 13511                           ;libraries/lcd_lowlevel.c: 92:   temp16 = temp16 >> 3;
 13512  004294  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13513  004298  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13514  00429C  90D8               	bcf	status,0,c
 13515  00429E  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13516  0042A0  3216               	rrcf	??_LCD_Read^0,f,c
 13517  0042A2  90D8               	bcf	status,0,c
 13518  0042A4  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13519  0042A6  3216               	rrcf	??_LCD_Read^0,f,c
 13520  0042A8  90D8               	bcf	status,0,c
 13521  0042AA  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13522  0042AC  3216               	rrcf	??_LCD_Read^0,f,c
 13523  0042AE  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13524  0042B2  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13525  0042B6                     
 13526                           ;libraries/lcd_lowlevel.c: 93:   color = temp16 << 11;
 13527  0042B6  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13528  0042BA  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13529  0042BE  0E0B               	movlw	11
 13530  0042C0                     u5915:
 13531  0042C0  90D8               	bcf	status,0,c
 13532  0042C2  3616               	rlcf	??_LCD_Read^0,f,c
 13533  0042C4  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13534  0042C6  2EE8               	decfsz	wreg,f,c
 13535  0042C8  EF60  F021         	goto	u5915
 13536  0042CC  C016  F018         	movff	??_LCD_Read,LCD_Read@color
 13537  0042D0  C017  F019         	movff	??_LCD_Read+1,LCD_Read@color+1
 13538  0042D4                     
 13539                           ;libraries/lcd_lowlevel.c: 94:  LATC2 = 0;
 13540  0042D4  948B               	bcf	3979,2,c	;volatile
 13541  0042D6                     
 13542                           ;libraries/lcd_lowlevel.c: 95:   __nop();
 13543  0042D6  F000               	nop	
 13544  0042D8                     
 13545                           ;libraries/lcd_lowlevel.c: 96:  temp16 = PORTA;
 13546  0042D8  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13547  0042DC  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13548  0042DE                     
 13549                           ;libraries/lcd_lowlevel.c: 97:  LATC2 = 1;
 13550  0042DE  848B               	bsf	3979,2,c	;volatile
 13551  0042E0                     
 13552                           ;libraries/lcd_lowlevel.c: 98:   temp16 = temp16 >> 2;
 13553  0042E0  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13554  0042E4  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13555  0042E8  90D8               	bcf	status,0,c
 13556  0042EA  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13557  0042EC  3216               	rrcf	??_LCD_Read^0,f,c
 13558  0042EE  90D8               	bcf	status,0,c
 13559  0042F0  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13560  0042F2  3216               	rrcf	??_LCD_Read^0,f,c
 13561  0042F4  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13562  0042F8  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13563  0042FC                     
 13564                           ;libraries/lcd_lowlevel.c: 99:   color |= temp16 << 5;
 13565  0042FC  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13566  004300  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13567  004304  0E05               	movlw	5
 13568  004306                     u5925:
 13569  004306  90D8               	bcf	status,0,c
 13570  004308  3616               	rlcf	??_LCD_Read^0,f,c
 13571  00430A  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13572  00430C  2EE8               	decfsz	wreg,f,c
 13573  00430E  EF83  F021         	goto	u5925
 13574  004312  5016               	movf	??_LCD_Read^0,w,c
 13575  004314  1218               	iorwf	LCD_Read@color^0,f,c
 13576  004316  5017               	movf	(??_LCD_Read+1)^0,w,c
 13577  004318  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13578  00431A                     
 13579                           ;libraries/lcd_lowlevel.c: 100:  LATC2 = 0;
 13580  00431A  948B               	bcf	3979,2,c	;volatile
 13581  00431C                     
 13582                           ;libraries/lcd_lowlevel.c: 101:   __nop();
 13583  00431C  F000               	nop	
 13584  00431E                     
 13585                           ;libraries/lcd_lowlevel.c: 102:  temp16 |= PORTA;
 13586  00431E  5080               	movf	128,w,c	;volatile
 13587  004320  121A               	iorwf	LCD_Read@temp16^0,f,c
 13588  004322                     
 13589                           ;libraries/lcd_lowlevel.c: 103:  LATC2 = 1;
 13590  004322  848B               	bsf	3979,2,c	;volatile
 13591  004324                     
 13592                           ;libraries/lcd_lowlevel.c: 104:   temp16 = temp16 >> 3;
 13593  004324  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13594  004328  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13595  00432C  90D8               	bcf	status,0,c
 13596  00432E  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13597  004330  3216               	rrcf	??_LCD_Read^0,f,c
 13598  004332  90D8               	bcf	status,0,c
 13599  004334  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13600  004336  3216               	rrcf	??_LCD_Read^0,f,c
 13601  004338  90D8               	bcf	status,0,c
 13602  00433A  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13603  00433C  3216               	rrcf	??_LCD_Read^0,f,c
 13604  00433E  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13605  004342  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13606  004346                     
 13607                           ;libraries/lcd_lowlevel.c: 105:   color |= temp16;
 13608  004346  501A               	movf	LCD_Read@temp16^0,w,c
 13609  004348  1218               	iorwf	LCD_Read@color^0,f,c
 13610  00434A  501B               	movf	(LCD_Read@temp16+1)^0,w,c
 13611  00434C  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13612  00434E                     
 13613                           ;libraries/lcd_lowlevel.c: 106:  TRISA = 0x00;
 13614  00434E  0E00               	movlw	0
 13615  004350  6E92               	movwf	146,c	;volatile
 13616  004352                     
 13617                           ;libraries/lcd_lowlevel.c: 107:  return color;
 13618  004352  C018  F012         	movff	LCD_Read@color,?_LCD_Read
 13619  004356  C019  F013         	movff	LCD_Read@color+1,?_LCD_Read+1
 13620  00435A  0012               	return		;funcret
 13621  00435C                     __end_of_LCD_Read:
 13622                           	callstack 0
 13623                           
 13624 ;; *************** function _LCD_Bitmap *****************
 13625 ;; Defined at:
 13626 ;;		line 823 in file "libraries/lcd_highlevel.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;  bmpPtr          2   38[COMRAM] PTR const unsigned char 
 13629 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13630 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13631 ;;  posX            2   40[COMRAM] unsigned short 
 13632 ;;  posY            2   42[COMRAM] unsigned short 
 13633 ;; Auto vars:     Size  Location     Type
 13634 ;;  bfOffBits       4    0[BANK0 ] unsigned long 
 13635 ;;  i               2   26[BANK0 ] unsigned short 
 13636 ;;  jumpColor       2   24[BANK0 ] unsigned short 
 13637 ;;  biWidth         2   22[BANK0 ] unsigned short 
 13638 ;;  newY            2   19[BANK0 ] unsigned short 
 13639 ;;  strPtr          2   17[BANK0 ] PTR struct .
 13640 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13641 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13642 ;;  curXPos         2   15[BANK0 ] unsigned short 
 13643 ;;  color           2   13[BANK0 ] unsigned short 
 13644 ;;  biHeight        2   11[BANK0 ] unsigned short 
 13645 ;;  colorTablePt    2    9[BANK0 ] PTR unsigned char 
 13646 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13647 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13648 ;;  curYPos         2    7[BANK0 ] unsigned short 
 13649 ;;  jumpCount       2    5[BANK0 ] unsigned short 
 13650 ;;  pixelCount      1   21[BANK0 ] unsigned char 
 13651 ;;  endOfImage      1    4[BANK0 ] unsigned char 
 13652 ;; Return value:  Size  Location     Type
 13653 ;;                  1    wreg      unsigned char 
 13654 ;; Registers used:
 13655 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13656 ;; Tracked objects:
 13657 ;;		On entry : 0/0
 13658 ;;		On exit  : 0/0
 13659 ;;		Unchanged: 0/0
 13660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13661 ;;      Params:         6       0       0       0       0       0       0
 13662 ;;      Locals:         0      28       0       0       0       0       0
 13663 ;;      Temps:          4       0       0       0       0       0       0
 13664 ;;      Totals:        10      28       0       0       0       0       0
 13665 ;;Total ram usage:       38 bytes
 13666 ;; Hardware stack levels used: 1
 13667 ;; Hardware stack levels required when called: 5
 13668 ;; This function calls:
 13669 ;;		_RGB2LCD
 13670 ;;		___lwdiv
 13671 ;;		___lwmod
 13672 ;;		___wmul
 13673 ;; This function is called by:
 13674 ;;		_LCD_ButtonDraw
 13675 ;; This function uses a non-reentrant model
 13676 ;;
 13677                           
 13678                           	psect	text51
 13679  00097E                     __ptext51:
 13680                           	callstack 0
 13681  00097E                     _LCD_Bitmap:
 13682                           	callstack 19
 13683  00097E                     
 13684                           ;libraries/lcd_highlevel.c: 823: uint8_t LCD_Bitmap(const uint8_t * bmpPtr, uint16_t pos
      +                          X, uint16_t posY);libraries/lcd_highlevel.c: 824: {;libraries/lcd_highlevel.c: 825:   ui
      +                          nt32_t bfOffBits;;libraries/lcd_highlevel.c: 826:   uint16_t biWidth, biHeight;;librarie
      +                          s/lcd_highlevel.c: 827:   uint8_t * colorTablePtr;;libraries/lcd_highlevel.c: 828:   uin
      +                          t8_t endOfImage;;libraries/lcd_highlevel.c: 829:   uint16_t i,curXPos,curYPos;;libraries
      +                          /lcd_highlevel.c: 830:   uint8_t pixelCount;;libraries/lcd_highlevel.c: 831:   uint16_t 
      +                          color;
 13685  00097E  C027  F071         	movff	LCD_Bitmap@bmpPtr,LCD_Bitmap@strPtr
 13686  000982  C028  F072         	movff	LCD_Bitmap@bmpPtr+1,LCD_Bitmap@strPtr+1
 13687  000986                     
 13688                           ;libraries/lcd_highlevel.c: 839:   bfOffBits = strPtr->bfOffBits;
 13689  000986  0E0A               	movlw	10
 13690  000988  0100               	movlb	0	; () banked
 13691  00098A  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13692  00098C  6E2D               	movwf	??_LCD_Bitmap^0,c
 13693  00098E  0E00               	movlw	0
 13694  000990  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13695  000992  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13696  000994  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13697  000998  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13698  00099C                     	if	0	;tblptru may be non-zero
 13699  00099C                     	endif
 13700  00099C                     	if	0	;tblptru may be non-zero
 13701  00099C                     	endif
 13702  00099C  0009               	tblrd		*+
 13703  00099E  CFF5 F060          	movff	tablat,LCD_Bitmap@bfOffBits
 13704  0009A2  0009               	tblrd		*+
 13705  0009A4  CFF5 F061          	movff	tablat,LCD_Bitmap@bfOffBits+1
 13706  0009A8  0009               	tblrd		*+
 13707  0009AA  CFF5 F062          	movff	tablat,LCD_Bitmap@bfOffBits+2
 13708  0009AE  000A               	tblrd		*-
 13709  0009B0  CFF5 F063          	movff	tablat,LCD_Bitmap@bfOffBits+3
 13710  0009B4                     
 13711                           ; BSR set to: 0
 13712                           ;libraries/lcd_highlevel.c: 840:   biWidth = strPtr->biWidth;
 13713  0009B4  0E12               	movlw	18
 13714  0009B6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13715  0009B8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13716  0009BA  0E00               	movlw	0
 13717  0009BC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13718  0009BE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13719  0009C0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13720  0009C4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13721  0009C8                     	if	0	;tblptru may be non-zero
 13722  0009C8                     	endif
 13723  0009C8                     	if	0	;tblptru may be non-zero
 13724  0009C8                     	endif
 13725  0009C8  0009               	tblrd		*+
 13726  0009CA  CFF5 F076          	movff	tablat,LCD_Bitmap@biWidth
 13727  0009CE  000A               	tblrd		*-
 13728  0009D0  CFF5 F077          	movff	tablat,LCD_Bitmap@biWidth+1
 13729  0009D4                     
 13730                           ; BSR set to: 0
 13731                           ;libraries/lcd_highlevel.c: 841:   biHeight = strPtr->biHeight;
 13732  0009D4  0E16               	movlw	22
 13733  0009D6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13734  0009D8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13735  0009DA  0E00               	movlw	0
 13736  0009DC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13737  0009DE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13738  0009E0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13739  0009E4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13740  0009E8                     	if	0	;tblptru may be non-zero
 13741  0009E8                     	endif
 13742  0009E8                     	if	0	;tblptru may be non-zero
 13743  0009E8                     	endif
 13744  0009E8  0009               	tblrd		*+
 13745  0009EA  CFF5 F06B          	movff	tablat,LCD_Bitmap@biHeight
 13746  0009EE  000A               	tblrd		*-
 13747  0009F0  CFF5 F06C          	movff	tablat,LCD_Bitmap@biHeight+1
 13748  0009F4                     
 13749                           ; BSR set to: 0
 13750                           ;libraries/lcd_highlevel.c: 842:   if((strPtr->biBitCount != 8) ||
 13751  0009F4  0E1C               	movlw	28
 13752  0009F6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13753  0009F8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13754  0009FA  0E00               	movlw	0
 13755  0009FC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13756  0009FE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13757  000A00  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13758  000A04  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13759  000A08                     	if	0	;tblptru may be non-zero
 13760  000A08                     	endif
 13761  000A08                     	if	0	;tblptru may be non-zero
 13762  000A08                     	endif
 13763  000A08  0009               	tblrd		*+
 13764  000A0A  0E08               	movlw	8
 13765  000A0C  18F5               	xorwf	tablat,w,c
 13766  000A0E  0009               	tblrd		*+
 13767  000A10  10F5               	iorwf	tablat,w,c
 13768  000A12  A4D8               	btfss	status,2,c
 13769  000A14  EF0E  F005         	goto	u6351
 13770  000A18  EF10  F005         	goto	u6350
 13771  000A1C                     u6351:
 13772  000A1C  EFB9  F007         	goto	l329
 13773  000A20                     u6350:
 13774  000A20                     
 13775                           ; BSR set to: 0
 13776  000A20  0E1E               	movlw	30
 13777  000A22  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13778  000A24  6E2D               	movwf	??_LCD_Bitmap^0,c
 13779  000A26  0E00               	movlw	0
 13780  000A28  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13781  000A2A  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13782  000A2C  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13783  000A30  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13784  000A34                     	if	0	;tblptru may be non-zero
 13785  000A34                     	endif
 13786  000A34                     	if	0	;tblptru may be non-zero
 13787  000A34                     	endif
 13788  000A34  0009               	tblrd		*+
 13789  000A36  04F5               	decf	tablat,w,c
 13790  000A38  0009               	tblrd		*+
 13791  000A3A  10F5               	iorwf	tablat,w,c
 13792  000A3C  0009               	tblrd		*+
 13793  000A3E  10F5               	iorwf	tablat,w,c
 13794  000A40  0009               	tblrd		*+
 13795  000A42  10F5               	iorwf	tablat,w,c
 13796  000A44  B4D8               	btfsc	status,2,c
 13797  000A46  EF27  F005         	goto	u6361
 13798  000A4A  EF29  F005         	goto	u6360
 13799  000A4E                     u6361:
 13800  000A4E  EF2B  F005         	goto	l8937
 13801  000A52                     u6360:
 13802  000A52  EFB9  F007         	goto	l329
 13803  000A56                     l8937:
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;libraries/lcd_highlevel.c: 847:   if(((posX + biWidth) > (240)) ||
 13807  000A56  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 13808  000A58  2429               	addwf	LCD_Bitmap@posX^0,w,c
 13809  000A5A  6E2D               	movwf	??_LCD_Bitmap^0,c
 13810  000A5C  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 13811  000A5E  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 13812  000A60  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13813  000A62  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 13814  000A64  E107               	bnz	u6371
 13815  000A66  0EF1               	movlw	241
 13816  000A68  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 13817  000A6A  B0D8               	btfsc	status,0,c
 13818  000A6C  EF3A  F005         	goto	u6371
 13819  000A70  EF3C  F005         	goto	u6370
 13820  000A74                     u6371:
 13821  000A74  EFB9  F007         	goto	l329
 13822  000A78                     u6370:
 13823  000A78                     
 13824                           ; BSR set to: 0
 13825  000A78  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 13826  000A7A  242B               	addwf	LCD_Bitmap@posY^0,w,c
 13827  000A7C  6E2D               	movwf	??_LCD_Bitmap^0,c
 13828  000A7E  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 13829  000A80  202C               	addwfc	(LCD_Bitmap@posY+1)^0,w,c
 13830  000A82  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13831  000A84  0E41               	movlw	65
 13832  000A86  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 13833  000A88  0E01               	movlw	1
 13834  000A8A  582E               	subwfb	(??_LCD_Bitmap+1)^0,w,c
 13835  000A8C  A0D8               	btfss	status,0,c
 13836  000A8E  EF4B  F005         	goto	u6381
 13837  000A92  EF4D  F005         	goto	u6380
 13838  000A96                     u6381:
 13839  000A96  EF4F  F005         	goto	l8941
 13840  000A9A                     u6380:
 13841  000A9A  EFB9  F007         	goto	l329
 13842  000A9E                     l8941:
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;libraries/lcd_highlevel.c: 853:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13846  000A9E  0E36               	movlw	54
 13847  000AA0  6E80               	movwf	128,c	;volatile
 13848  000AA2                     
 13849                           ; BSR set to: 0
 13850  000AA2  988B               	bcf	3979,4,c	;volatile
 13851  000AA4                     
 13852                           ; BSR set to: 0
 13853  000AA4  968B               	bcf	3979,3,c	;volatile
 13854  000AA6                     
 13855                           ; BSR set to: 0
 13856  000AA6  868B               	bsf	3979,3,c	;volatile
 13857  000AA8                     
 13858                           ; BSR set to: 0
 13859  000AA8  888B               	bsf	3979,4,c	;volatile
 13860                           
 13861                           ;libraries/lcd_highlevel.c: 855:   PORTA = 0b10000000; LATC3 = 0; LATC3 = 1;;
 13862  000AAA  0E80               	movlw	128
 13863  000AAC  6E80               	movwf	128,c	;volatile
 13864  000AAE                     
 13865                           ; BSR set to: 0
 13866  000AAE  968B               	bcf	3979,3,c	;volatile
 13867  000AB0                     
 13868                           ; BSR set to: 0
 13869  000AB0  868B               	bsf	3979,3,c	;volatile
 13870  000AB2                     
 13871                           ; BSR set to: 0
 13872                           ;libraries/lcd_highlevel.c: 857:   colorTablePtr = (uint8_t *)bmpPtr + 54;
 13873  000AB2  0E36               	movlw	54
 13874  000AB4  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 13875  000AB6  6F69               	movwf	LCD_Bitmap@colorTablePtr& (0+255),b
 13876  000AB8  0E00               	movlw	0
 13877  000ABA  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 13878  000ABC  6F6A               	movwf	(LCD_Bitmap@colorTablePtr+1)& (0+255),b
 13879  000ABE                     
 13880                           ; BSR set to: 0
 13881                           ;libraries/lcd_highlevel.c: 858:   bmpPtr += bfOffBits;
 13882  000ABE  5160               	movf	LCD_Bitmap@bfOffBits& (0+255),w,b
 13883  000AC0  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 13884  000AC2  5161               	movf	(LCD_Bitmap@bfOffBits+1)& (0+255),w,b
 13885  000AC4  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 13886                           
 13887                           ;libraries/lcd_highlevel.c: 859:   endOfImage = 0;
 13888  000AC6  0E00               	movlw	0
 13889  000AC8  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 13890  000ACA                     
 13891                           ; BSR set to: 0
 13892                           ;libraries/lcd_highlevel.c: 860:   jumpColor = RGB2LCD(colorTablePtr);
 13893  000ACA  C069  F012         	movff	LCD_Bitmap@colorTablePtr,RGB2LCD@colorTableEntry
 13894  000ACE  C06A  F013         	movff	LCD_Bitmap@colorTablePtr+1,RGB2LCD@colorTableEntry+1
 13895  000AD2  ECFD  F029         	call	_RGB2LCD	;wreg free
 13896  000AD6  C012  F078         	movff	?_RGB2LCD,LCD_Bitmap@jumpColor
 13897  000ADA  C013  F079         	movff	?_RGB2LCD+1,LCD_Bitmap@jumpColor+1
 13898  000ADE                     
 13899                           ;libraries/lcd_highlevel.c: 862:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13900  000ADE  0E2A               	movlw	42
 13901  000AE0  6E80               	movwf	128,c	;volatile
 13902  000AE2  988B               	bcf	3979,4,c	;volatile
 13903  000AE4  968B               	bcf	3979,3,c	;volatile
 13904  000AE6  868B               	bsf	3979,3,c	;volatile
 13905  000AE8  888B               	bsf	3979,4,c	;volatile
 13906  000AEA                     
 13907                           ;libraries/lcd_highlevel.c: 863:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13908  000AEA  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 13909  000AEC  6E80               	movwf	128,c	;volatile
 13910  000AEE  968B               	bcf	3979,3,c	;volatile
 13911  000AF0  868B               	bsf	3979,3,c	;volatile
 13912  000AF2                     
 13913                           ;libraries/lcd_highlevel.c: 864:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13914  000AF2  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 13915  000AF6  968B               	bcf	3979,3,c	;volatile
 13916  000AF8  868B               	bsf	3979,3,c	;volatile
 13917  000AFA                     
 13918                           ;libraries/lcd_highlevel.c: 865:   posX = posX + biWidth-1;
 13919  000AFA  0100               	movlb	0	; () banked
 13920  000AFC  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 13921  000AFE  2429               	addwf	LCD_Bitmap@posX^0,w,c
 13922  000B00  6E2D               	movwf	??_LCD_Bitmap^0,c
 13923  000B02  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 13924  000B04  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 13925  000B06  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13926  000B08  0EFF               	movlw	255
 13927  000B0A  242D               	addwf	??_LCD_Bitmap^0,w,c
 13928  000B0C  6E29               	movwf	LCD_Bitmap@posX^0,c
 13929  000B0E  0EFF               	movlw	255
 13930  000B10  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 13931  000B12  6E2A               	movwf	(LCD_Bitmap@posX+1)^0,c
 13932  000B14                     
 13933                           ; BSR set to: 0
 13934                           ;libraries/lcd_highlevel.c: 866:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13935  000B14  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 13936  000B16  6E80               	movwf	128,c	;volatile
 13937  000B18                     
 13938                           ; BSR set to: 0
 13939  000B18  968B               	bcf	3979,3,c	;volatile
 13940  000B1A                     
 13941                           ; BSR set to: 0
 13942  000B1A  868B               	bsf	3979,3,c	;volatile
 13943  000B1C                     
 13944                           ; BSR set to: 0
 13945                           ;libraries/lcd_highlevel.c: 867:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13946  000B1C  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 13947  000B20                     
 13948                           ; BSR set to: 0
 13949  000B20  968B               	bcf	3979,3,c	;volatile
 13950  000B22                     
 13951                           ; BSR set to: 0
 13952  000B22  868B               	bsf	3979,3,c	;volatile
 13953  000B24                     
 13954                           ; BSR set to: 0
 13955                           ;libraries/lcd_highlevel.c: 869:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13956  000B24  0E2B               	movlw	43
 13957  000B26  6E80               	movwf	128,c	;volatile
 13958  000B28                     
 13959                           ; BSR set to: 0
 13960  000B28  988B               	bcf	3979,4,c	;volatile
 13961  000B2A                     
 13962                           ; BSR set to: 0
 13963  000B2A  968B               	bcf	3979,3,c	;volatile
 13964  000B2C                     
 13965                           ; BSR set to: 0
 13966  000B2C  868B               	bsf	3979,3,c	;volatile
 13967  000B2E                     
 13968                           ; BSR set to: 0
 13969  000B2E  888B               	bsf	3979,4,c	;volatile
 13970  000B30                     
 13971                           ; BSR set to: 0
 13972                           ;libraries/lcd_highlevel.c: 870:   newY = 320 - posY - biHeight;
 13973  000B30  C02B  F02D         	movff	LCD_Bitmap@posY,??_LCD_Bitmap
 13974  000B34  C02C  F02E         	movff	LCD_Bitmap@posY+1,??_LCD_Bitmap+1
 13975  000B38  1E2D               	comf	??_LCD_Bitmap^0,f,c
 13976  000B3A  1E2E               	comf	(??_LCD_Bitmap+1)^0,f,c
 13977  000B3C  4A2D               	infsnz	??_LCD_Bitmap^0,f,c
 13978  000B3E  2A2E               	incf	(??_LCD_Bitmap+1)^0,f,c
 13979  000B40  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 13980  000B42  5E2D               	subwf	??_LCD_Bitmap^0,f,c
 13981  000B44  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 13982  000B46  5A2E               	subwfb	(??_LCD_Bitmap+1)^0,f,c
 13983  000B48  0E40               	movlw	64
 13984  000B4A  242D               	addwf	??_LCD_Bitmap^0,w,c
 13985  000B4C  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 13986  000B4E  0E01               	movlw	1
 13987  000B50  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 13988  000B52  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 13989  000B54                     
 13990                           ; BSR set to: 0
 13991                           ;libraries/lcd_highlevel.c: 871:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 13992  000B54  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 13993  000B56  6E80               	movwf	128,c	;volatile
 13994  000B58                     
 13995                           ; BSR set to: 0
 13996  000B58  968B               	bcf	3979,3,c	;volatile
 13997  000B5A                     
 13998                           ; BSR set to: 0
 13999  000B5A  868B               	bsf	3979,3,c	;volatile
 14000  000B5C                     
 14001                           ; BSR set to: 0
 14002                           ;libraries/lcd_highlevel.c: 872:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14003  000B5C  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14004  000B60                     
 14005                           ; BSR set to: 0
 14006  000B60  968B               	bcf	3979,3,c	;volatile
 14007  000B62                     
 14008                           ; BSR set to: 0
 14009  000B62  868B               	bsf	3979,3,c	;volatile
 14010  000B64                     
 14011                           ; BSR set to: 0
 14012                           ;libraries/lcd_highlevel.c: 873:   newY = newY + biHeight-1;
 14013  000B64  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14014  000B66  2573               	addwf	LCD_Bitmap@newY& (0+255),w,b
 14015  000B68  6E2D               	movwf	??_LCD_Bitmap^0,c
 14016  000B6A  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14017  000B6C  2174               	addwfc	(LCD_Bitmap@newY+1)& (0+255),w,b
 14018  000B6E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14019  000B70  0EFF               	movlw	255
 14020  000B72  242D               	addwf	??_LCD_Bitmap^0,w,c
 14021  000B74  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 14022  000B76  0EFF               	movlw	255
 14023  000B78  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14024  000B7A  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 14025  000B7C                     
 14026                           ; BSR set to: 0
 14027                           ;libraries/lcd_highlevel.c: 874:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14028  000B7C  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14029  000B7E  6E80               	movwf	128,c	;volatile
 14030  000B80                     
 14031                           ; BSR set to: 0
 14032  000B80  968B               	bcf	3979,3,c	;volatile
 14033  000B82                     
 14034                           ; BSR set to: 0
 14035  000B82  868B               	bsf	3979,3,c	;volatile
 14036  000B84                     
 14037                           ; BSR set to: 0
 14038                           ;libraries/lcd_highlevel.c: 875:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14039  000B84  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14040  000B88                     
 14041                           ; BSR set to: 0
 14042  000B88  968B               	bcf	3979,3,c	;volatile
 14043  000B8A                     
 14044                           ; BSR set to: 0
 14045  000B8A  868B               	bsf	3979,3,c	;volatile
 14046  000B8C                     
 14047                           ; BSR set to: 0
 14048                           ;libraries/lcd_highlevel.c: 877:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14049  000B8C  0E2C               	movlw	44
 14050  000B8E  6E80               	movwf	128,c	;volatile
 14051  000B90                     
 14052                           ; BSR set to: 0
 14053  000B90  988B               	bcf	3979,4,c	;volatile
 14054  000B92                     
 14055                           ; BSR set to: 0
 14056  000B92  968B               	bcf	3979,3,c	;volatile
 14057  000B94                     
 14058                           ; BSR set to: 0
 14059  000B94  868B               	bsf	3979,3,c	;volatile
 14060  000B96                     
 14061                           ; BSR set to: 0
 14062  000B96  888B               	bsf	3979,4,c	;volatile
 14063  000B98                     
 14064                           ; BSR set to: 0
 14065                           ;libraries/lcd_highlevel.c: 878:   curXPos = 0;
 14066  000B98  0E00               	movlw	0
 14067  000B9A  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14068  000B9C  0E00               	movlw	0
 14069  000B9E  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14070  000BA0                     
 14071                           ; BSR set to: 0
 14072                           ;libraries/lcd_highlevel.c: 879:   curYPos = 0;
 14073  000BA0  0E00               	movlw	0
 14074  000BA2  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14075  000BA4  0E00               	movlw	0
 14076  000BA6  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14077  000BA8                     l9049:
 14078                           
 14079                           ; BSR set to: 0
 14080                           ;libraries/lcd_highlevel.c: 881:   {;libraries/lcd_highlevel.c: 882:     if(bmpPtr[0] ==
      +                           0)
 14081  000BA8  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14082  000BAC  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14083  000BB0                     	if	0	;tblptru may be non-zero
 14084  000BB0                     	endif
 14085  000BB0                     	if	0	;tblptru may be non-zero
 14086  000BB0                     	endif
 14087  000BB0  0008               	tblrd		*
 14088  000BB2  50F5               	movf	tablat,w,c
 14089  000BB4  0900               	iorlw	0
 14090  000BB6  A4D8               	btfss	status,2,c
 14091  000BB8  EFE0  F005         	goto	u6391
 14092  000BBC  EFE2  F005         	goto	u6390
 14093  000BC0                     u6391:
 14094  000BC0  EF5D  F007         	goto	l9175
 14095  000BC4                     u6390:
 14096  000BC4  EF39  F007         	goto	l9173
 14097  000BC8                     l9053:
 14098                           
 14099                           ; BSR set to: 0
 14100                           ;libraries/lcd_highlevel.c: 887:           bmpPtr += 2;
 14101  000BC8  0E02               	movlw	2
 14102  000BCA  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14103  000BCC  0E00               	movlw	0
 14104  000BCE  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14105  000BD0                     
 14106                           ; BSR set to: 0
 14107                           ;libraries/lcd_highlevel.c: 888:           for(i=0;i<biWidth - curXPos;i++)
 14108  000BD0  0E00               	movlw	0
 14109  000BD2  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14110  000BD4  0E00               	movlw	0
 14111  000BD6  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14112  000BD8  EFF8  F005         	goto	l9071
 14113  000BDC                     l9057:
 14114                           
 14115                           ; BSR set to: 0
 14116                           ;libraries/lcd_highlevel.c: 889:           {;libraries/lcd_highlevel.c: 890:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14117  000BDC  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14118  000BDE  6E80               	movwf	128,c	;volatile
 14119  000BE0                     
 14120                           ; BSR set to: 0
 14121  000BE0  968B               	bcf	3979,3,c	;volatile
 14122  000BE2                     
 14123                           ; BSR set to: 0
 14124  000BE2  868B               	bsf	3979,3,c	;volatile
 14125  000BE4                     
 14126                           ; BSR set to: 0
 14127                           ;libraries/lcd_highlevel.c: 891:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14128  000BE4  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14129  000BE8                     
 14130                           ; BSR set to: 0
 14131  000BE8  968B               	bcf	3979,3,c	;volatile
 14132  000BEA                     
 14133                           ; BSR set to: 0
 14134  000BEA  868B               	bsf	3979,3,c	;volatile
 14135  000BEC                     
 14136                           ; BSR set to: 0
 14137                           ;libraries/lcd_highlevel.c: 892:           }
 14138  000BEC  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14139  000BEE  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14140  000BF0                     l9071:
 14141                           
 14142                           ; BSR set to: 0
 14143  000BF0  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14144  000BF2  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14145  000BF4  6E2D               	movwf	??_LCD_Bitmap^0,c
 14146  000BF6  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14147  000BF8  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14148  000BFA  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14149  000BFC  502D               	movf	??_LCD_Bitmap^0,w,c
 14150  000BFE  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14151  000C00  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14152  000C02  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14153  000C04  A0D8               	btfss	status,0,c
 14154  000C06  EF07  F006         	goto	u6401
 14155  000C0A  EF09  F006         	goto	u6400
 14156  000C0E                     u6401:
 14157  000C0E  EFEE  F005         	goto	l9057
 14158  000C12                     u6400:
 14159  000C12                     
 14160                           ; BSR set to: 0
 14161                           ;libraries/lcd_highlevel.c: 893:           curXPos = 0;
 14162  000C12  0E00               	movlw	0
 14163  000C14  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14164  000C16  0E00               	movlw	0
 14165  000C18  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14166  000C1A                     
 14167                           ; BSR set to: 0
 14168                           ;libraries/lcd_highlevel.c: 894:           curYPos++;
 14169  000C1A  4B67               	infsnz	LCD_Bitmap@curYPos& (0+255),f,b
 14170  000C1C  2B68               	incf	(LCD_Bitmap@curYPos+1)& (0+255),f,b
 14171                           
 14172                           ;libraries/lcd_highlevel.c: 895:         break;
 14173  000C1E  EFA6  F007         	goto	l9201
 14174  000C22                     l9077:
 14175                           
 14176                           ; BSR set to: 0
 14177                           ;libraries/lcd_highlevel.c: 897:           for(i=0;i<biWidth - curXPos;i++)
 14178  000C22  0E00               	movlw	0
 14179  000C24  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14180  000C26  0E00               	movlw	0
 14181  000C28  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14182  000C2A  EF21  F006         	goto	l9093
 14183  000C2E                     l9079:
 14184                           
 14185                           ; BSR set to: 0
 14186                           ;libraries/lcd_highlevel.c: 898:           {;libraries/lcd_highlevel.c: 899:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14187  000C2E  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14188  000C30  6E80               	movwf	128,c	;volatile
 14189  000C32                     
 14190                           ; BSR set to: 0
 14191  000C32  968B               	bcf	3979,3,c	;volatile
 14192  000C34                     
 14193                           ; BSR set to: 0
 14194  000C34  868B               	bsf	3979,3,c	;volatile
 14195  000C36                     
 14196                           ; BSR set to: 0
 14197                           ;libraries/lcd_highlevel.c: 900:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14198  000C36  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14199  000C3A                     
 14200                           ; BSR set to: 0
 14201  000C3A  968B               	bcf	3979,3,c	;volatile
 14202  000C3C                     
 14203                           ; BSR set to: 0
 14204  000C3C  868B               	bsf	3979,3,c	;volatile
 14205  000C3E                     
 14206                           ; BSR set to: 0
 14207                           ;libraries/lcd_highlevel.c: 901:           }
 14208  000C3E  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14209  000C40  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14210  000C42                     l9093:
 14211                           
 14212                           ; BSR set to: 0
 14213  000C42  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14214  000C44  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14215  000C46  6E2D               	movwf	??_LCD_Bitmap^0,c
 14216  000C48  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14217  000C4A  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14218  000C4C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14219  000C4E  502D               	movf	??_LCD_Bitmap^0,w,c
 14220  000C50  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14221  000C52  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14222  000C54  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14223  000C56  A0D8               	btfss	status,0,c
 14224  000C58  EF30  F006         	goto	u6411
 14225  000C5C  EF32  F006         	goto	u6410
 14226  000C60                     u6411:
 14227  000C60  EF17  F006         	goto	l9079
 14228  000C64                     u6410:
 14229  000C64                     
 14230                           ; BSR set to: 0
 14231                           ;libraries/lcd_highlevel.c: 902:           for(i=0;i<(biHeight - curYPos -1)*biWidth;i++
      +                          )
 14232  000C64  0E00               	movlw	0
 14233  000C66  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14234  000C68  0E00               	movlw	0
 14235  000C6A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14236  000C6C  EF42  F006         	goto	l9111
 14237  000C70                     l9097:
 14238                           
 14239                           ; BSR set to: 0
 14240                           ;libraries/lcd_highlevel.c: 903:           {;libraries/lcd_highlevel.c: 904:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14241  000C70  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14242  000C72  6E80               	movwf	128,c	;volatile
 14243  000C74                     
 14244                           ; BSR set to: 0
 14245  000C74  968B               	bcf	3979,3,c	;volatile
 14246  000C76                     
 14247                           ; BSR set to: 0
 14248  000C76  868B               	bsf	3979,3,c	;volatile
 14249  000C78                     
 14250                           ; BSR set to: 0
 14251                           ;libraries/lcd_highlevel.c: 905:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14252  000C78  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14253  000C7C                     
 14254                           ; BSR set to: 0
 14255  000C7C  968B               	bcf	3979,3,c	;volatile
 14256  000C7E                     
 14257                           ; BSR set to: 0
 14258  000C7E  868B               	bsf	3979,3,c	;volatile
 14259  000C80                     
 14260                           ; BSR set to: 0
 14261                           ;libraries/lcd_highlevel.c: 906:           }
 14262  000C80  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14263  000C82  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14264  000C84                     l9111:
 14265                           
 14266                           ; BSR set to: 0
 14267  000C84  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14268  000C86  5D6B               	subwf	LCD_Bitmap@biHeight& (0+255),w,b
 14269  000C88  6E2D               	movwf	??_LCD_Bitmap^0,c
 14270  000C8A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14271  000C8C  596C               	subwfb	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14272  000C8E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14273  000C90  0EFF               	movlw	255
 14274  000C92  242D               	addwf	??_LCD_Bitmap^0,w,c
 14275  000C94  6E1A               	movwf	___wmul@multiplier^0,c
 14276  000C96  0EFF               	movlw	255
 14277  000C98  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14278  000C9A  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 14279  000C9C  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14280  000CA0  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14281  000CA4  EC47  F031         	call	___wmul	;wreg free
 14282  000CA8  501A               	movf	?___wmul^0,w,c
 14283  000CAA  0100               	movlb	0	; () banked
 14284  000CAC  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14285  000CAE  501B               	movf	(?___wmul+1)^0,w,c
 14286  000CB0  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14287  000CB2  A0D8               	btfss	status,0,c
 14288  000CB4  EF5E  F006         	goto	u6421
 14289  000CB8  EF60  F006         	goto	u6420
 14290  000CBC                     u6421:
 14291  000CBC  EF38  F006         	goto	l9097
 14292  000CC0                     u6420:
 14293  000CC0                     
 14294                           ; BSR set to: 0
 14295                           ;libraries/lcd_highlevel.c: 907:           endOfImage = 1;
 14296  000CC0  0E01               	movlw	1
 14297  000CC2  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 14298                           
 14299                           ;libraries/lcd_highlevel.c: 908:         break;
 14300  000CC4  EFA6  F007         	goto	l9201
 14301  000CC8                     l9115:
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;libraries/lcd_highlevel.c: 910:           jumpCount = bmpPtr[2] + (bmpPtr[3]*biWidth);
 14305  000CC8  0E03               	movlw	3
 14306  000CCA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14307  000CCC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14308  000CCE  0E00               	movlw	0
 14309  000CD0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14310  000CD2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14311  000CD4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14312  000CD8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14313  000CDC                     	if	0	;tblptru may be non-zero
 14314  000CDC                     	endif
 14315  000CDC                     	if	0	;tblptru may be non-zero
 14316  000CDC                     	endif
 14317  000CDC  0008               	tblrd		*
 14318  000CDE  50F5               	movf	tablat,w,c
 14319  000CE0  6E1A               	movwf	___wmul@multiplier^0,c
 14320  000CE2  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14321  000CE4  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14322  000CE8  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14323  000CEC  EC47  F031         	call	___wmul	;wreg free
 14324  000CF0  0E02               	movlw	2
 14325  000CF2  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14326  000CF4  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14327  000CF6  0E00               	movlw	0
 14328  000CF8  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14329  000CFA  6E30               	movwf	(??_LCD_Bitmap+3)^0,c
 14330  000CFC  C02F  FFF6         	movff	??_LCD_Bitmap+2,tblptrl
 14331  000D00  C030  FFF7         	movff	??_LCD_Bitmap+3,tblptrh
 14332  000D04                     	if	0	;tblptru may be non-zero
 14333  000D04                     	endif
 14334  000D04                     	if	0	;tblptru may be non-zero
 14335  000D04                     	endif
 14336  000D04  0008               	tblrd		*
 14337  000D06  50F5               	movf	tablat,w,c
 14338  000D08  241A               	addwf	?___wmul^0,w,c
 14339  000D0A  0100               	movlb	0	; () banked
 14340  000D0C  6F65               	movwf	LCD_Bitmap@jumpCount& (0+255),b
 14341  000D0E  0E00               	movlw	0
 14342  000D10  201B               	addwfc	(?___wmul+1)^0,w,c
 14343  000D12  6F66               	movwf	(LCD_Bitmap@jumpCount+1)& (0+255),b
 14344  000D14                     
 14345                           ; BSR set to: 0
 14346                           ;libraries/lcd_highlevel.c: 911:           for(i=0;i<jumpCount;i++)
 14347  000D14  0E00               	movlw	0
 14348  000D16  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14349  000D18  0E00               	movlw	0
 14350  000D1A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14351  000D1C  EF9C  F006         	goto	l9135
 14352  000D20                     l9119:
 14353                           
 14354                           ; BSR set to: 0
 14355                           ;libraries/lcd_highlevel.c: 912:           {;libraries/lcd_highlevel.c: 913:            
      +                           curXPos++;
 14356  000D20  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14357  000D22  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14358  000D24                     
 14359                           ; BSR set to: 0
 14360                           ;libraries/lcd_highlevel.c: 914:             PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 
      +                          1;;
 14361  000D24  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14362  000D26  6E80               	movwf	128,c	;volatile
 14363  000D28                     
 14364                           ; BSR set to: 0
 14365  000D28  968B               	bcf	3979,3,c	;volatile
 14366  000D2A                     
 14367                           ; BSR set to: 0
 14368  000D2A  868B               	bsf	3979,3,c	;volatile
 14369  000D2C                     
 14370                           ; BSR set to: 0
 14371                           ;libraries/lcd_highlevel.c: 915:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14372  000D2C  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14373  000D30                     
 14374                           ; BSR set to: 0
 14375  000D30  968B               	bcf	3979,3,c	;volatile
 14376  000D32                     
 14377                           ; BSR set to: 0
 14378  000D32  868B               	bsf	3979,3,c	;volatile
 14379  000D34                     
 14380                           ; BSR set to: 0
 14381                           ;libraries/lcd_highlevel.c: 916:           }
 14382  000D34  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14383  000D36  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14384  000D38                     l9135:
 14385                           
 14386                           ; BSR set to: 0
 14387  000D38  5165               	movf	LCD_Bitmap@jumpCount& (0+255),w,b
 14388  000D3A  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14389  000D3C  5166               	movf	(LCD_Bitmap@jumpCount+1)& (0+255),w,b
 14390  000D3E  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14391  000D40  A0D8               	btfss	status,0,c
 14392  000D42  EFA5  F006         	goto	u6431
 14393  000D46  EFA7  F006         	goto	u6430
 14394  000D4A                     u6431:
 14395  000D4A  EF90  F006         	goto	l9119
 14396  000D4E                     u6430:
 14397  000D4E                     
 14398                           ; BSR set to: 0
 14399                           ;libraries/lcd_highlevel.c: 917:           curYPos = curYPos + (jumpCount / biWidth);
 14400  000D4E  C065  F020         	movff	LCD_Bitmap@jumpCount,___lwdiv@dividend
 14401  000D52  C066  F021         	movff	LCD_Bitmap@jumpCount+1,___lwdiv@dividend+1
 14402  000D56  C076  F022         	movff	LCD_Bitmap@biWidth,___lwdiv@divisor
 14403  000D5A  C077  F023         	movff	LCD_Bitmap@biWidth+1,___lwdiv@divisor+1
 14404  000D5E  EC42  F02E         	call	___lwdiv	;wreg free
 14405  000D62  0100               	movlb	0	; () banked
 14406  000D64  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14407  000D66  2420               	addwf	?___lwdiv^0,w,c
 14408  000D68  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14409  000D6A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14410  000D6C  2021               	addwfc	(?___lwdiv+1)^0,w,c
 14411  000D6E  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14412                           
 14413                           ;libraries/lcd_highlevel.c: 918:           curXPos = curXPos % biWidth;
 14414  000D70  C06F  F012         	movff	LCD_Bitmap@curXPos,___lwmod@dividend
 14415  000D74  C070  F013         	movff	LCD_Bitmap@curXPos+1,___lwmod@dividend+1
 14416  000D78  C076  F014         	movff	LCD_Bitmap@biWidth,___lwmod@divisor
 14417  000D7C  C077  F015         	movff	LCD_Bitmap@biWidth+1,___lwmod@divisor+1
 14418  000D80  ECAE  F02E         	call	___lwmod	;wreg free
 14419  000D84  C012  F06F         	movff	?___lwmod,LCD_Bitmap@curXPos
 14420  000D88  C013  F070         	movff	?___lwmod+1,LCD_Bitmap@curXPos+1
 14421  000D8C                     
 14422                           ;libraries/lcd_highlevel.c: 919:           bmpPtr += 4;
 14423  000D8C  0E04               	movlw	4
 14424  000D8E  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14425  000D90  0E00               	movlw	0
 14426  000D92  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14427                           
 14428                           ;libraries/lcd_highlevel.c: 920:         break;
 14429  000D94  EFA6  F007         	goto	l9201
 14430  000D98                     l9141:
 14431                           
 14432                           ; BSR set to: 0
 14433                           ;libraries/lcd_highlevel.c: 922:           pixelCount = bmpPtr[1];
 14434  000D98  0E01               	movlw	1
 14435  000D9A  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14436  000D9C  6E2D               	movwf	??_LCD_Bitmap^0,c
 14437  000D9E  0E00               	movlw	0
 14438  000DA0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14439  000DA2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14440  000DA4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14441  000DA8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14442  000DAC                     	if	0	;tblptru may be non-zero
 14443  000DAC                     	endif
 14444  000DAC                     	if	0	;tblptru may be non-zero
 14445  000DAC                     	endif
 14446  000DAC  0008               	tblrd		*
 14447  000DAE  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14448  000DB2                     
 14449                           ; BSR set to: 0
 14450                           ;libraries/lcd_highlevel.c: 923:           for(i=0;i < pixelCount;i++)
 14451  000DB2  0E00               	movlw	0
 14452  000DB4  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14453  000DB6  0E00               	movlw	0
 14454  000DB8  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14455  000DBA  EF0D  F007         	goto	l9163
 14456  000DBE                     l9145:
 14457                           
 14458                           ; BSR set to: 0
 14459                           ;libraries/lcd_highlevel.c: 924:           {;libraries/lcd_highlevel.c: 925:            
      +                           color = RGB2LCD(colorTablePtr+(bmpPtr[2+i]*4));
 14460  000DBE  517A               	movf	LCD_Bitmap@i& (0+255),w,b
 14461  000DC0  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14462  000DC2  6E2D               	movwf	??_LCD_Bitmap^0,c
 14463  000DC4  517B               	movf	(LCD_Bitmap@i+1)& (0+255),w,b
 14464  000DC6  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14465  000DC8  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14466  000DCA  0E02               	movlw	2
 14467  000DCC  262D               	addwf	??_LCD_Bitmap^0,f,c
 14468  000DCE  0E00               	movlw	0
 14469  000DD0  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14470  000DD2  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14471  000DD6  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14472  000DDA                     	if	0	;tblptru may be non-zero
 14473  000DDA                     	endif
 14474  000DDA                     	if	0	;tblptru may be non-zero
 14475  000DDA                     	endif
 14476  000DDA  0008               	tblrd		*
 14477  000DDC  50F5               	movf	tablat,w,c
 14478  000DDE  0D04               	mullw	4
 14479  000DE0  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14480  000DE4  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14481  000DE8  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14482  000DEA  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14483  000DEC  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14484  000DEE  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14485  000DF0  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14486  000DF2  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14487  000DF4  ECFD  F029         	call	_RGB2LCD	;wreg free
 14488  000DF8  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14489  000DFC  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14490  000E00                     
 14491                           ;libraries/lcd_highlevel.c: 926:             curXPos++;
 14492  000E00  0100               	movlb	0	; () banked
 14493  000E02  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14494  000E04  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14495  000E06                     
 14496                           ; BSR set to: 0
 14497                           ;libraries/lcd_highlevel.c: 927:             PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14498  000E06  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14499  000E08  6E80               	movwf	128,c	;volatile
 14500  000E0A                     
 14501                           ; BSR set to: 0
 14502  000E0A  968B               	bcf	3979,3,c	;volatile
 14503  000E0C                     
 14504                           ; BSR set to: 0
 14505  000E0C  868B               	bsf	3979,3,c	;volatile
 14506  000E0E                     
 14507                           ; BSR set to: 0
 14508                           ;libraries/lcd_highlevel.c: 928:             PORTA = color; LATC3 = 0; LATC3 = 1;;
 14509  000E0E  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14510  000E12                     
 14511                           ; BSR set to: 0
 14512  000E12  968B               	bcf	3979,3,c	;volatile
 14513  000E14                     
 14514                           ; BSR set to: 0
 14515  000E14  868B               	bsf	3979,3,c	;volatile
 14516  000E16                     
 14517                           ; BSR set to: 0
 14518                           ;libraries/lcd_highlevel.c: 929:           }
 14519  000E16  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14520  000E18  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14521  000E1A                     l9163:
 14522                           
 14523                           ; BSR set to: 0
 14524  000E1A  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14525  000E1C  6E2D               	movwf	??_LCD_Bitmap^0,c
 14526  000E1E  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14527  000E20  502D               	movf	??_LCD_Bitmap^0,w,c
 14528  000E22  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14529  000E24  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14530  000E26  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14531  000E28  A0D8               	btfss	status,0,c
 14532  000E2A  EF19  F007         	goto	u6441
 14533  000E2E  EF1B  F007         	goto	u6440
 14534  000E32                     u6441:
 14535  000E32  EFDF  F006         	goto	l9145
 14536  000E36                     u6440:
 14537  000E36                     
 14538                           ; BSR set to: 0
 14539                           ;libraries/lcd_highlevel.c: 930:           if(pixelCount < 255)
 14540  000E36  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14541  000E38  B4D8               	btfsc	status,2,c
 14542  000E3A  EF21  F007         	goto	u6451
 14543  000E3E  EF23  F007         	goto	u6450
 14544  000E42                     u6451:
 14545  000E42  EF33  F007         	goto	l9169
 14546  000E46                     u6450:
 14547  000E46                     
 14548                           ; BSR set to: 0
 14549                           ;libraries/lcd_highlevel.c: 931:           {;libraries/lcd_highlevel.c: 932:            
      +                           pixelCount = (pixelCount+1) & 0xFE;
 14550  000E46  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14551  000E48  0BFE               	andlw	254
 14552  000E4A  6F75               	movwf	LCD_Bitmap@pixelCount& (0+255),b
 14553                           
 14554                           ;libraries/lcd_highlevel.c: 933:             bmpPtr+=pixelCount+2;
 14555  000E4C  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14556  000E4E  6E2D               	movwf	??_LCD_Bitmap^0,c
 14557  000E50  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14558  000E52  0E02               	movlw	2
 14559  000E54  262D               	addwf	??_LCD_Bitmap^0,f,c
 14560  000E56  0E00               	movlw	0
 14561  000E58  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14562  000E5A  502D               	movf	??_LCD_Bitmap^0,w,c
 14563  000E5C  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14564  000E5E  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14565  000E60  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14566                           
 14567                           ;libraries/lcd_highlevel.c: 934:           }
 14568  000E62  EFA6  F007         	goto	l9201
 14569  000E66                     l9169:
 14570                           
 14571                           ; BSR set to: 0
 14572                           ;libraries/lcd_highlevel.c: 936:           {;libraries/lcd_highlevel.c: 937:            
      +                             bmpPtr += 258;
 14573  000E66  0E02               	movlw	2
 14574  000E68  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14575  000E6A  0E01               	movlw	1
 14576  000E6C  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14577  000E6E  EFA6  F007         	goto	l9201
 14578  000E72                     l9173:
 14579                           
 14580                           ; BSR set to: 0
 14581  000E72  0E01               	movlw	1
 14582  000E74  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14583  000E76  6E2D               	movwf	??_LCD_Bitmap^0,c
 14584  000E78  0E00               	movlw	0
 14585  000E7A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14586  000E7C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14587  000E7E  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14588  000E82  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14589  000E86                     	if	0	;tblptru may be non-zero
 14590  000E86                     	endif
 14591  000E86                     	if	0	;tblptru may be non-zero
 14592  000E86                     	endif
 14593  000E86  0008               	tblrd		*
 14594  000E88  50F5               	movf	tablat,w,c
 14595  000E8A  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14596  000E8C  6A30               	clrf	(??_LCD_Bitmap+3)^0,c
 14597                           
 14598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14599                           ; Switch size 1, requested type "simple"
 14600                           ; Number of cases is 1, Range of values is 0 to 0
 14601                           ; switch strategies available:
 14602                           ; Name         Instructions Cycles
 14603                           ; simple_byte            4     3 (average)
 14604                           ;	Chosen strategy is simple_byte
 14605  000E8E  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14606  000E90  0A00               	xorlw	0	; case 0
 14607  000E92  B4D8               	btfsc	status,2,c
 14608  000E94  EF4E  F007         	goto	l10679
 14609  000E98  EFCC  F006         	goto	l9141
 14610  000E9C                     l10679:
 14611                           
 14612                           ; BSR set to: 0
 14613                           ; Switch size 1, requested type "simple"
 14614                           ; Number of cases is 3, Range of values is 0 to 2
 14615                           ; switch strategies available:
 14616                           ; Name         Instructions Cycles
 14617                           ; simple_byte           10     6 (average)
 14618                           ;	Chosen strategy is simple_byte
 14619  000E9C  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14620  000E9E  0A00               	xorlw	0	; case 0
 14621  000EA0  B4D8               	btfsc	status,2,c
 14622  000EA2  EFE4  F005         	goto	l9053
 14623  000EA6  0A01               	xorlw	1	; case 1
 14624  000EA8  B4D8               	btfsc	status,2,c
 14625  000EAA  EF11  F006         	goto	l9077
 14626  000EAE  0A03               	xorlw	3	; case 2
 14627  000EB0  B4D8               	btfsc	status,2,c
 14628  000EB2  EF64  F006         	goto	l9115
 14629  000EB6  EFCC  F006         	goto	l9141
 14630  000EBA                     l9175:
 14631                           
 14632                           ; BSR set to: 0
 14633                           ;libraries/lcd_highlevel.c: 943:     {;libraries/lcd_highlevel.c: 944:       pixelCount 
      +                          = bmpPtr[0];
 14634  000EBA  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14635  000EBE  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14636  000EC2                     	if	0	;tblptru may be non-zero
 14637  000EC2                     	endif
 14638  000EC2                     	if	0	;tblptru may be non-zero
 14639  000EC2                     	endif
 14640  000EC2  0008               	tblrd		*
 14641  000EC4  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14642  000EC8                     
 14643                           ; BSR set to: 0
 14644                           ;libraries/lcd_highlevel.c: 945:       color = RGB2LCD(colorTablePtr+(bmpPtr[1]*4));
 14645  000EC8  0E01               	movlw	1
 14646  000ECA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14647  000ECC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14648  000ECE  0E00               	movlw	0
 14649  000ED0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14650  000ED2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14651  000ED4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14652  000ED8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14653  000EDC                     	if	0	;tblptru may be non-zero
 14654  000EDC                     	endif
 14655  000EDC                     	if	0	;tblptru may be non-zero
 14656  000EDC                     	endif
 14657  000EDC  0008               	tblrd		*
 14658  000EDE  50F5               	movf	tablat,w,c
 14659  000EE0  0D04               	mullw	4
 14660  000EE2  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14661  000EE6  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14662  000EEA  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14663  000EEC  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14664  000EEE  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14665  000EF0  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14666  000EF2  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14667  000EF4  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14668  000EF6  ECFD  F029         	call	_RGB2LCD	;wreg free
 14669  000EFA  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14670  000EFE  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14671  000F02                     
 14672                           ;libraries/lcd_highlevel.c: 946:       for(i=0;i < pixelCount;i++)
 14673  000F02  0E00               	movlw	0
 14674  000F04  0100               	movlb	0	; () banked
 14675  000F06  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14676  000F08  0E00               	movlw	0
 14677  000F0A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14678  000F0C  EF94  F007         	goto	l9197
 14679  000F10                     l9181:
 14680                           
 14681                           ; BSR set to: 0
 14682                           ;libraries/lcd_highlevel.c: 947:       {;libraries/lcd_highlevel.c: 948:         curXPos
      +                          ++;
 14683  000F10  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14684  000F12  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14685  000F14                     
 14686                           ; BSR set to: 0
 14687                           ;libraries/lcd_highlevel.c: 949:         PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14688  000F14  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14689  000F16  6E80               	movwf	128,c	;volatile
 14690  000F18                     
 14691                           ; BSR set to: 0
 14692  000F18  968B               	bcf	3979,3,c	;volatile
 14693  000F1A                     
 14694                           ; BSR set to: 0
 14695  000F1A  868B               	bsf	3979,3,c	;volatile
 14696  000F1C                     
 14697                           ; BSR set to: 0
 14698                           ;libraries/lcd_highlevel.c: 950:         PORTA = color; LATC3 = 0; LATC3 = 1;;
 14699  000F1C  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14700  000F20                     
 14701                           ; BSR set to: 0
 14702  000F20  968B               	bcf	3979,3,c	;volatile
 14703  000F22                     
 14704                           ; BSR set to: 0
 14705  000F22  868B               	bsf	3979,3,c	;volatile
 14706  000F24                     
 14707                           ; BSR set to: 0
 14708                           ;libraries/lcd_highlevel.c: 951:       }
 14709  000F24  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14710  000F26  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14711  000F28                     l9197:
 14712                           
 14713                           ; BSR set to: 0
 14714  000F28  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14715  000F2A  6E2D               	movwf	??_LCD_Bitmap^0,c
 14716  000F2C  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14717  000F2E  502D               	movf	??_LCD_Bitmap^0,w,c
 14718  000F30  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14719  000F32  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14720  000F34  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14721  000F36  A0D8               	btfss	status,0,c
 14722  000F38  EFA0  F007         	goto	u6461
 14723  000F3C  EFA2  F007         	goto	u6460
 14724  000F40                     u6461:
 14725  000F40  EF88  F007         	goto	l9181
 14726  000F44                     u6460:
 14727  000F44                     
 14728                           ; BSR set to: 0
 14729                           ;libraries/lcd_highlevel.c: 952:       bmpPtr+=2;
 14730  000F44  0E02               	movlw	2
 14731  000F46  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14732  000F48  0E00               	movlw	0
 14733  000F4A  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14734  000F4C                     l9201:
 14735                           
 14736                           ;libraries/lcd_highlevel.c: 954:   }while(endOfImage == 0);
 14737  000F4C  0100               	movlb	0	; () banked
 14738  000F4E  5164               	movf	LCD_Bitmap@endOfImage& (0+255),w,b
 14739  000F50  B4D8               	btfsc	status,2,c
 14740  000F52  EFAD  F007         	goto	u6471
 14741  000F56  EFAF  F007         	goto	u6470
 14742  000F5A                     u6471:
 14743  000F5A  EFD4  F005         	goto	l9049
 14744  000F5E                     u6470:
 14745  000F5E                     
 14746                           ; BSR set to: 0
 14747                           ;libraries/lcd_highlevel.c: 955:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14748  000F5E  0E36               	movlw	54
 14749  000F60  6E80               	movwf	128,c	;volatile
 14750  000F62                     
 14751                           ; BSR set to: 0
 14752  000F62  988B               	bcf	3979,4,c	;volatile
 14753  000F64                     
 14754                           ; BSR set to: 0
 14755  000F64  968B               	bcf	3979,3,c	;volatile
 14756  000F66                     
 14757                           ; BSR set to: 0
 14758  000F66  868B               	bsf	3979,3,c	;volatile
 14759  000F68                     
 14760                           ; BSR set to: 0
 14761  000F68  888B               	bsf	3979,4,c	;volatile
 14762                           
 14763                           ;libraries/lcd_highlevel.c: 957:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
 14764  000F6A  0E00               	movlw	0
 14765  000F6C  6E80               	movwf	128,c	;volatile
 14766  000F6E                     
 14767                           ; BSR set to: 0
 14768  000F6E  968B               	bcf	3979,3,c	;volatile
 14769  000F70                     
 14770                           ; BSR set to: 0
 14771  000F70  868B               	bsf	3979,3,c	;volatile
 14772  000F72                     l329:
 14773                           
 14774                           ; BSR set to: 0
 14775  000F72  0012               	return		;funcret
 14776  000F74                     __end_of_LCD_Bitmap:
 14777                           	callstack 0
 14778                           
 14779 ;; *************** function ___lwmod *****************
 14780 ;; Defined at:
 14781 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 14782 ;; Parameters:    Size  Location     Type
 14783 ;;  dividend        2   17[COMRAM] unsigned int 
 14784 ;;  divisor         2   19[COMRAM] unsigned int 
 14785 ;; Auto vars:     Size  Location     Type
 14786 ;;  counter         1   21[COMRAM] unsigned char 
 14787 ;; Return value:  Size  Location     Type
 14788 ;;                  2   17[COMRAM] unsigned int 
 14789 ;; Registers used:
 14790 ;;		wreg, status,2, status,0
 14791 ;; Tracked objects:
 14792 ;;		On entry : 0/0
 14793 ;;		On exit  : 0/0
 14794 ;;		Unchanged: 0/0
 14795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14796 ;;      Params:         4       0       0       0       0       0       0
 14797 ;;      Locals:         1       0       0       0       0       0       0
 14798 ;;      Temps:          0       0       0       0       0       0       0
 14799 ;;      Totals:         5       0       0       0       0       0       0
 14800 ;;Total ram usage:        5 bytes
 14801 ;; Hardware stack levels used: 1
 14802 ;; Hardware stack levels required when called: 4
 14803 ;; This function calls:
 14804 ;;		Nothing
 14805 ;; This function is called by:
 14806 ;;		_LCD_Bitmap
 14807 ;; This function uses a non-reentrant model
 14808 ;;
 14809                           
 14810                           	psect	text52
 14811  005D5C                     __ptext52:
 14812                           	callstack 0
 14813  005D5C                     ___lwmod:
 14814                           	callstack 19
 14815  005D5C  5014               	movf	___lwmod@divisor^0,w,c
 14816  005D5E  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
 14817  005D60  B4D8               	btfsc	status,2,c
 14818  005D62  EFB5  F02E         	goto	u6121
 14819  005D66  EFB7  F02E         	goto	u6120
 14820  005D6A                     u6121:
 14821  005D6A  EFDB  F02E         	goto	l1308
 14822  005D6E                     u6120:
 14823  005D6E  0E01               	movlw	1
 14824  005D70  6E16               	movwf	___lwmod@counter^0,c
 14825  005D72  EFBF  F02E         	goto	l8633
 14826  005D76                     l8631:
 14827  005D76  90D8               	bcf	status,0,c
 14828  005D78  3614               	rlcf	___lwmod@divisor^0,f,c
 14829  005D7A  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
 14830  005D7C  2A16               	incf	___lwmod@counter^0,f,c
 14831  005D7E                     l8633:
 14832  005D7E  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
 14833  005D80  EFC4  F02E         	goto	u6131
 14834  005D84  EFC6  F02E         	goto	u6130
 14835  005D88                     u6131:
 14836  005D88  EFBB  F02E         	goto	l8631
 14837  005D8C                     u6130:
 14838  005D8C                     l8635:
 14839  005D8C  5014               	movf	___lwmod@divisor^0,w,c
 14840  005D8E  5C12               	subwf	___lwmod@dividend^0,w,c
 14841  005D90  5015               	movf	(___lwmod@divisor+1)^0,w,c
 14842  005D92  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
 14843  005D94  A0D8               	btfss	status,0,c
 14844  005D96  EFCF  F02E         	goto	u6141
 14845  005D9A  EFD1  F02E         	goto	u6140
 14846  005D9E                     u6141:
 14847  005D9E  EFD5  F02E         	goto	l8639
 14848  005DA2                     u6140:
 14849  005DA2  5014               	movf	___lwmod@divisor^0,w,c
 14850  005DA4  5E12               	subwf	___lwmod@dividend^0,f,c
 14851  005DA6  5015               	movf	(___lwmod@divisor+1)^0,w,c
 14852  005DA8  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
 14853  005DAA                     l8639:
 14854  005DAA  90D8               	bcf	status,0,c
 14855  005DAC  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
 14856  005DAE  3214               	rrcf	___lwmod@divisor^0,f,c
 14857  005DB0  2E16               	decfsz	___lwmod@counter^0,f,c
 14858  005DB2  EFC6  F02E         	goto	l8635
 14859  005DB6                     l1308:
 14860  005DB6  C012  F012         	movff	___lwmod@dividend,?___lwmod
 14861  005DBA  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
 14862  005DBE  0012               	return		;funcret
 14863  005DC0                     __end_of___lwmod:
 14864                           	callstack 0
 14865                           
 14866 ;; *************** function ___lwdiv *****************
 14867 ;; Defined at:
 14868 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 14869 ;; Parameters:    Size  Location     Type
 14870 ;;  dividend        2   31[COMRAM] unsigned int 
 14871 ;;  divisor         2   33[COMRAM] unsigned int 
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;  quotient        2   36[COMRAM] unsigned int 
 14874 ;;  counter         1   35[COMRAM] unsigned char 
 14875 ;; Return value:  Size  Location     Type
 14876 ;;                  2   31[COMRAM] unsigned int 
 14877 ;; Registers used:
 14878 ;;		wreg, status,2, status,0
 14879 ;; Tracked objects:
 14880 ;;		On entry : 0/0
 14881 ;;		On exit  : 0/0
 14882 ;;		Unchanged: 0/0
 14883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14884 ;;      Params:         4       0       0       0       0       0       0
 14885 ;;      Locals:         3       0       0       0       0       0       0
 14886 ;;      Temps:          0       0       0       0       0       0       0
 14887 ;;      Totals:         7       0       0       0       0       0       0
 14888 ;;Total ram usage:        7 bytes
 14889 ;; Hardware stack levels used: 1
 14890 ;; Hardware stack levels required when called: 4
 14891 ;; This function calls:
 14892 ;;		Nothing
 14893 ;; This function is called by:
 14894 ;;		_LCD_SliderUpdate
 14895 ;;		_LCD_Bitmap
 14896 ;; This function uses a non-reentrant model
 14897 ;;
 14898                           
 14899                           	psect	text53
 14900  005C84                     __ptext53:
 14901                           	callstack 0
 14902  005C84                     ___lwdiv:
 14903                           	callstack 21
 14904  005C84  0E00               	movlw	0
 14905  005C86  6E26               	movwf	(___lwdiv@quotient+1)^0,c
 14906  005C88  0E00               	movlw	0
 14907  005C8A  6E25               	movwf	___lwdiv@quotient^0,c
 14908  005C8C  5022               	movf	___lwdiv@divisor^0,w,c
 14909  005C8E  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
 14910  005C90  B4D8               	btfsc	status,2,c
 14911  005C92  EF4D  F02E         	goto	u6091
 14912  005C96  EF4F  F02E         	goto	u6090
 14913  005C9A                     u6091:
 14914  005C9A  EF77  F02E         	goto	l1298
 14915  005C9E                     u6090:
 14916  005C9E  0E01               	movlw	1
 14917  005CA0  6E24               	movwf	___lwdiv@counter^0,c
 14918  005CA2  EF57  F02E         	goto	l8613
 14919  005CA6                     l8611:
 14920  005CA6  90D8               	bcf	status,0,c
 14921  005CA8  3622               	rlcf	___lwdiv@divisor^0,f,c
 14922  005CAA  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
 14923  005CAC  2A24               	incf	___lwdiv@counter^0,f,c
 14924  005CAE                     l8613:
 14925  005CAE  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
 14926  005CB0  EF5C  F02E         	goto	u6101
 14927  005CB4  EF5E  F02E         	goto	u6100
 14928  005CB8                     u6101:
 14929  005CB8  EF53  F02E         	goto	l8611
 14930  005CBC                     u6100:
 14931  005CBC                     l8615:
 14932  005CBC  90D8               	bcf	status,0,c
 14933  005CBE  3625               	rlcf	___lwdiv@quotient^0,f,c
 14934  005CC0  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
 14935  005CC2  5022               	movf	___lwdiv@divisor^0,w,c
 14936  005CC4  5C20               	subwf	___lwdiv@dividend^0,w,c
 14937  005CC6  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 14938  005CC8  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
 14939  005CCA  A0D8               	btfss	status,0,c
 14940  005CCC  EF6A  F02E         	goto	u6111
 14941  005CD0  EF6C  F02E         	goto	u6110
 14942  005CD4                     u6111:
 14943  005CD4  EF71  F02E         	goto	l8623
 14944  005CD8                     u6110:
 14945  005CD8  5022               	movf	___lwdiv@divisor^0,w,c
 14946  005CDA  5E20               	subwf	___lwdiv@dividend^0,f,c
 14947  005CDC  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 14948  005CDE  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
 14949  005CE0  8025               	bsf	___lwdiv@quotient^0,0,c
 14950  005CE2                     l8623:
 14951  005CE2  90D8               	bcf	status,0,c
 14952  005CE4  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
 14953  005CE6  3222               	rrcf	___lwdiv@divisor^0,f,c
 14954  005CE8  2E24               	decfsz	___lwdiv@counter^0,f,c
 14955  005CEA  EF5E  F02E         	goto	l8615
 14956  005CEE                     l1298:
 14957  005CEE  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 14958  005CF2  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14959  005CF6  0012               	return		;funcret
 14960  005CF8                     __end_of___lwdiv:
 14961                           	callstack 0
 14962                           
 14963 ;; *************** function _RGB2LCD *****************
 14964 ;; Defined at:
 14965 ;;		line 799 in file "libraries/lcd_highlevel.c"
 14966 ;; Parameters:    Size  Location     Type
 14967 ;;  colorTableEn    2   17[COMRAM] PTR unsigned char 
 14968 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 14969 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 14970 ;; Auto vars:     Size  Location     Type
 14971 ;;  color           2   29[COMRAM] unsigned short 
 14972 ;;  blue            2   27[COMRAM] unsigned short 
 14973 ;;  green           2   25[COMRAM] unsigned short 
 14974 ;;  red             2   23[COMRAM] unsigned short 
 14975 ;; Return value:  Size  Location     Type
 14976 ;;                  2   17[COMRAM] unsigned short 
 14977 ;; Registers used:
 14978 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 14979 ;; Tracked objects:
 14980 ;;		On entry : 0/0
 14981 ;;		On exit  : 0/0
 14982 ;;		Unchanged: 0/0
 14983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14984 ;;      Params:         2       0       0       0       0       0       0
 14985 ;;      Locals:         8       0       0       0       0       0       0
 14986 ;;      Temps:          4       0       0       0       0       0       0
 14987 ;;      Totals:        14       0       0       0       0       0       0
 14988 ;;Total ram usage:       14 bytes
 14989 ;; Hardware stack levels used: 1
 14990 ;; Hardware stack levels required when called: 4
 14991 ;; This function calls:
 14992 ;;		Nothing
 14993 ;; This function is called by:
 14994 ;;		_LCD_Bitmap
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998                           	psect	text54
 14999  0053FA                     __ptext54:
 15000                           	callstack 0
 15001  0053FA                     _RGB2LCD:
 15002                           	callstack 19
 15003  0053FA                     
 15004                           ;libraries/lcd_highlevel.c: 799: uint16_t RGB2LCD(uint8_t * colorTableEntry);libraries/l
      +                          cd_highlevel.c: 800: {;libraries/lcd_highlevel.c: 801:     uint16_t red,green,blue;;libr
      +                          aries/lcd_highlevel.c: 802:     uint16_t color;;libraries/lcd_highlevel.c: 804:     red 
      +                          = colorTableEntry[2] >> 3;
 15005  0053FA  0E02               	movlw	2
 15006  0053FC  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15007  0053FE  6E14               	movwf	??_RGB2LCD^0,c
 15008  005400  0E00               	movlw	0
 15009  005402  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15010  005404  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15011  005406  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15012  00540A  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15013  00540E                     	if	0	;tblptru may be non-zero
 15014  00540E                     	endif
 15015  00540E                     	if	0	;tblptru may be non-zero
 15016  00540E                     	endif
 15017  00540E  0008               	tblrd		*
 15018  005410  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15019  005414  90D8               	bcf	status,0,c
 15020  005416  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15021  005418  90D8               	bcf	status,0,c
 15022  00541A  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15023  00541C  90D8               	bcf	status,0,c
 15024  00541E  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15025  005420  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15026  005422  6E18               	movwf	RGB2LCD@red^0,c
 15027  005424  6A19               	clrf	(RGB2LCD@red+1)^0,c
 15028                           
 15029                           ;libraries/lcd_highlevel.c: 805:     green = colorTableEntry[1] >> 2;
 15030  005426  0E01               	movlw	1
 15031  005428  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15032  00542A  6E14               	movwf	??_RGB2LCD^0,c
 15033  00542C  0E00               	movlw	0
 15034  00542E  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15035  005430  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15036  005432  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15037  005436  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15038  00543A                     	if	0	;tblptru may be non-zero
 15039  00543A                     	endif
 15040  00543A                     	if	0	;tblptru may be non-zero
 15041  00543A                     	endif
 15042  00543A  0008               	tblrd		*
 15043  00543C  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15044  005440  90D8               	bcf	status,0,c
 15045  005442  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15046  005444  90D8               	bcf	status,0,c
 15047  005446  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15048  005448  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15049  00544A  6E1A               	movwf	RGB2LCD@green^0,c
 15050  00544C  6A1B               	clrf	(RGB2LCD@green+1)^0,c
 15051                           
 15052                           ;libraries/lcd_highlevel.c: 806:     blue = colorTableEntry[0] >> 3;
 15053  00544E  C012  FFF6         	movff	RGB2LCD@colorTableEntry,tblptrl
 15054  005452  C013  FFF7         	movff	RGB2LCD@colorTableEntry+1,tblptrh
 15055  005456                     	if	0	;tblptru may be non-zero
 15056  005456                     	endif
 15057  005456                     	if	0	;tblptru may be non-zero
 15058  005456                     	endif
 15059  005456  0008               	tblrd		*
 15060  005458  CFF5 F014          	movff	tablat,??_RGB2LCD
 15061  00545C  90D8               	bcf	status,0,c
 15062  00545E  3214               	rrcf	??_RGB2LCD^0,f,c
 15063  005460  90D8               	bcf	status,0,c
 15064  005462  3214               	rrcf	??_RGB2LCD^0,f,c
 15065  005464  90D8               	bcf	status,0,c
 15066  005466  3214               	rrcf	??_RGB2LCD^0,f,c
 15067  005468  5014               	movf	??_RGB2LCD^0,w,c
 15068  00546A  6E1C               	movwf	RGB2LCD@blue^0,c
 15069  00546C  6A1D               	clrf	(RGB2LCD@blue+1)^0,c
 15070  00546E                     
 15071                           ;libraries/lcd_highlevel.c: 807:     color = (red << 11) | (green << 5) | (blue << 0);
 15072  00546E  C01A  F014         	movff	RGB2LCD@green,??_RGB2LCD
 15073  005472  C01B  F015         	movff	RGB2LCD@green+1,??_RGB2LCD+1
 15074  005476  0E05               	movlw	5
 15075  005478                     u5935:
 15076  005478  90D8               	bcf	status,0,c
 15077  00547A  3614               	rlcf	??_RGB2LCD^0,f,c
 15078  00547C  3615               	rlcf	(??_RGB2LCD+1)^0,f,c
 15079  00547E  2EE8               	decfsz	wreg,f,c
 15080  005480  EF3C  F02A         	goto	u5935
 15081  005484  C018  F016         	movff	RGB2LCD@red,??_RGB2LCD+2
 15082  005488  C019  F017         	movff	RGB2LCD@red+1,??_RGB2LCD+3
 15083  00548C  0E0B               	movlw	11
 15084  00548E                     u5945:
 15085  00548E  90D8               	bcf	status,0,c
 15086  005490  3616               	rlcf	(??_RGB2LCD+2)^0,f,c
 15087  005492  3617               	rlcf	(??_RGB2LCD+3)^0,f,c
 15088  005494  2EE8               	decfsz	wreg,f,c
 15089  005496  EF47  F02A         	goto	u5945
 15090  00549A  5014               	movf	??_RGB2LCD^0,w,c
 15091  00549C  1216               	iorwf	(??_RGB2LCD+2)^0,f,c
 15092  00549E  5015               	movf	(??_RGB2LCD+1)^0,w,c
 15093  0054A0  1217               	iorwf	(??_RGB2LCD+3)^0,f,c
 15094  0054A2  501C               	movf	RGB2LCD@blue^0,w,c
 15095  0054A4  1016               	iorwf	(??_RGB2LCD+2)^0,w,c
 15096  0054A6  6E1E               	movwf	RGB2LCD@color^0,c
 15097  0054A8  501D               	movf	(RGB2LCD@blue+1)^0,w,c
 15098  0054AA  1017               	iorwf	(??_RGB2LCD+3)^0,w,c
 15099  0054AC  6E1F               	movwf	(RGB2LCD@color+1)^0,c
 15100  0054AE                     
 15101                           ;libraries/lcd_highlevel.c: 808:     return color;
 15102  0054AE  C01E  F012         	movff	RGB2LCD@color,?_RGB2LCD
 15103  0054B2  C01F  F013         	movff	RGB2LCD@color+1,?_RGB2LCD+1
 15104  0054B6  0012               	return		;funcret
 15105  0054B8                     __end_of_RGB2LCD:
 15106                           	callstack 0
 15107                           
 15108 ;; *************** function _Menu_inGameDraw *****************
 15109 ;; Defined at:
 15110 ;;		line 31 in file "class/menu.c"
 15111 ;; Parameters:    Size  Location     Type
 15112 ;;  g               2   50[BANK0 ] PTR struct GameParameter
 15113 ;;		 -> g1(239), 
 15114 ;; Auto vars:     Size  Location     Type
 15115 ;;		None
 15116 ;; Return value:  Size  Location     Type
 15117 ;;                  1    wreg      void 
 15118 ;; Registers used:
 15119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15120 ;; Tracked objects:
 15121 ;;		On entry : 0/0
 15122 ;;		On exit  : 0/0
 15123 ;;		Unchanged: 0/0
 15124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15125 ;;      Params:         0       2       0       0       0       0       0
 15126 ;;      Locals:         0       0       0       0       0       0       0
 15127 ;;      Temps:          0       0       0       0       0       0       0
 15128 ;;      Totals:         0       2       0       0       0       0       0
 15129 ;;Total ram usage:        2 bytes
 15130 ;; Hardware stack levels used: 1
 15131 ;; Hardware stack levels required when called: 13
 15132 ;; This function calls:
 15133 ;;		_Ball_draw
 15134 ;;		_LCD_Fill
 15135 ;;		_Paddle_draw
 15136 ;;		_Score_draw
 15137 ;; This function is called by:
 15138 ;;		_displaySM
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text55
 15143  005F3C                     __ptext55:
 15144                           	callstack 0
 15145  005F3C                     _Menu_inGameDraw:
 15146                           	callstack 15
 15147  005F3C                     
 15148                           ;class/menu.c: 31: void Menu_inGameDraw(GameParameters* g);class/menu.c: 32: {;class/men
      +                          u.c: 33:     LCD_Fill(0b0000000000000000);
 15149  005F3C  0E00               	movlw	0
 15150  005F3E  6E13               	movwf	(LCD_Fill@color+1)^0,c
 15151  005F40  0E00               	movlw	0
 15152  005F42  6E12               	movwf	LCD_Fill@color^0,c
 15153  005F44  EC9C  F029         	call	_LCD_Fill	;wreg free
 15154  005F48                     
 15155                           ;class/menu.c: 34:     Score_draw(&g->s1);
 15156  005F48  0EE9               	movlw	233
 15157  005F4A  0100               	movlb	0	; () banked
 15158  005F4C  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15159  005F4E  6F90               	movwf	Score_draw@s& (0+255),b
 15160  005F50  0E00               	movlw	0
 15161  005F52  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15162  005F54  6F91               	movwf	(Score_draw@s+1)& (0+255),b
 15163  005F56  EC0B  F028         	call	_Score_draw	;wreg free
 15164  005F5A                     
 15165                           ;class/menu.c: 35:     Paddle_draw(&g->p1);
 15166  005F5A  0ED5               	movlw	213
 15167  005F5C  0100               	movlb	0	; () banked
 15168  005F5E  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15169  005F60  6E25               	movwf	Paddle_draw@p^0,c
 15170  005F62  0E00               	movlw	0
 15171  005F64  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15172  005F66  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15173  005F68  ECAE  F021         	call	_Paddle_draw	;wreg free
 15174  005F6C                     
 15175                           ;class/menu.c: 36:     Paddle_draw(&g->p2);
 15176  005F6C  0EDF               	movlw	223
 15177  005F6E  0100               	movlb	0	; () banked
 15178  005F70  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15179  005F72  6E25               	movwf	Paddle_draw@p^0,c
 15180  005F74  0E00               	movlw	0
 15181  005F76  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15182  005F78  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15183  005F7A  ECAE  F021         	call	_Paddle_draw	;wreg free
 15184  005F7E                     
 15185                           ;class/menu.c: 37:     Ball_draw(&g->b);
 15186  005F7E  0EC9               	movlw	201
 15187  005F80  0100               	movlb	0	; () banked
 15188  005F82  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15189  005F84  6E25               	movwf	Ball_draw@b^0,c
 15190  005F86  0E00               	movlw	0
 15191  005F88  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15192  005F8A  6E26               	movwf	(Ball_draw@b+1)^0,c
 15193  005F8C  EC62  F020         	call	_Ball_draw	;wreg free
 15194  005F90  0012               	return		;funcret
 15195  005F92                     __end_of_Menu_inGameDraw:
 15196                           	callstack 0
 15197                           
 15198 ;; *************** function _Score_draw *****************
 15199 ;; Defined at:
 15200 ;;		line 16 in file "class/score.c"
 15201 ;; Parameters:    Size  Location     Type
 15202 ;;  s               2   48[BANK0 ] PTR struct Score
 15203 ;;		 -> g1(239), 
 15204 ;; Auto vars:     Size  Location     Type
 15205 ;;		None
 15206 ;; Return value:  Size  Location     Type
 15207 ;;                  1    wreg      void 
 15208 ;; Registers used:
 15209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15210 ;; Tracked objects:
 15211 ;;		On entry : 0/0
 15212 ;;		On exit  : 0/0
 15213 ;;		Unchanged: 0/0
 15214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15215 ;;      Params:         0       2       0       0       0       0       0
 15216 ;;      Locals:         0       0       0       0       0       0       0
 15217 ;;      Temps:          0       0       0       0       0       0       0
 15218 ;;      Totals:         0       2       0       0       0       0       0
 15219 ;;Total ram usage:        2 bytes
 15220 ;; Hardware stack levels used: 1
 15221 ;; Hardware stack levels required when called: 12
 15222 ;; This function calls:
 15223 ;;		_LCD_DrawText
 15224 ;;		_sprintf
 15225 ;; This function is called by:
 15226 ;;		_Menu_inGameDraw
 15227 ;;		_displayController
 15228 ;; This function uses a non-reentrant model
 15229 ;;
 15230                           
 15231                           	psect	text56
 15232  005016                     __ptext56:
 15233                           	callstack 0
 15234  005016                     _Score_draw:
 15235                           	callstack 14
 15236  005016                     
 15237                           ;class/score.c: 16: void Score_draw(struct Score* s);class/score.c: 17: {;class/score.c:
      +                           18:     sprintf(s->str,"%d",s->homeScore);
 15238  005016  0E04               	movlw	4
 15239  005018  0100               	movlb	0	; () banked
 15240  00501A  2590               	addwf	Score_draw@s& (0+255),w,b
 15241  00501C  6F82               	movwf	sprintf@s& (0+255),b
 15242  00501E  0E00               	movlw	0
 15243  005020  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15244  005022  6F83               	movwf	(sprintf@s+1)& (0+255),b
 15245  005024  0EEE               	movlw	low (STR_15+3)
 15246  005026  6F84               	movwf	sprintf@fmt& (0+255),b
 15247  005028  0E7F               	movlw	high (STR_15+3)
 15248  00502A  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
 15249  00502C  C090  FFD9         	movff	Score_draw@s,fsr2l
 15250  005030  C091  FFDA         	movff	Score_draw@s+1,fsr2h
 15251  005034  CFDE F086          	movff	postinc2,?_sprintf+4
 15252  005038  CFDD F087          	movff	postdec2,?_sprintf+5
 15253  00503C  ECC9  F02F         	call	_sprintf	;wreg free
 15254  005040                     
 15255                           ;class/score.c: 19:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_LEFT,0,0,0b11111
      +                          11111111111,0b0000000000000000);
 15256  005040  0E04               	movlw	4
 15257  005042  0100               	movlb	0	; () banked
 15258  005044  2590               	addwf	Score_draw@s& (0+255),w,b
 15259  005046  6E20               	movwf	LCD_DrawText@msg^0,c
 15260  005048  0E00               	movlw	0
 15261  00504A  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15262  00504C  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15263  00504E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 15264  005050  6E22               	movwf	LCD_DrawText@font^0,c
 15265  005052  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15266  005054  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15267  005056  0E00               	movlw	0
 15268  005058  6E24               	movwf	LCD_DrawText@align^0,c
 15269  00505A  0E00               	movlw	0
 15270  00505C  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15271  00505E  0E00               	movlw	0
 15272  005060  6E25               	movwf	LCD_DrawText@posX^0,c
 15273  005062  0E00               	movlw	0
 15274  005064  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15275  005066  0E00               	movlw	0
 15276  005068  6E27               	movwf	LCD_DrawText@posY^0,c
 15277  00506A  0EFF               	movlw	255
 15278  00506C  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15279  00506E  6829               	setf	LCD_DrawText@color^0,c
 15280  005070  0E00               	movlw	0
 15281  005072  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15282  005074  0E00               	movlw	0
 15283  005076  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15284  005078  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 15285  00507C                     
 15286                           ;class/score.c: 20:     sprintf(s->str,"%d",s->awayScore);
 15287  00507C  0E04               	movlw	4
 15288  00507E  0100               	movlb	0	; () banked
 15289  005080  2590               	addwf	Score_draw@s& (0+255),w,b
 15290  005082  6F82               	movwf	sprintf@s& (0+255),b
 15291  005084  0E00               	movlw	0
 15292  005086  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15293  005088  6F83               	movwf	(sprintf@s+1)& (0+255),b
 15294  00508A  0EEE               	movlw	low (STR_15+3)
 15295  00508C  6F84               	movwf	sprintf@fmt& (0+255),b
 15296  00508E  0E7F               	movlw	high (STR_15+3)
 15297  005090  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
 15298  005092  EE20 F002          	lfsr	2,2
 15299  005096  5190               	movf	Score_draw@s& (0+255),w,b
 15300  005098  26D9               	addwf	fsr2l,f,c
 15301  00509A  5191               	movf	(Score_draw@s+1)& (0+255),w,b
 15302  00509C  22DA               	addwfc	fsr2h,f,c
 15303  00509E  CFDE F086          	movff	postinc2,?_sprintf+4
 15304  0050A2  CFDD F087          	movff	postdec2,?_sprintf+5
 15305  0050A6  ECC9  F02F         	call	_sprintf	;wreg free
 15306                           
 15307                           ;class/score.c: 21:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_RIGHT,239,0,0b11
      +                          11111111111111,0b0000000000000000);
 15308  0050AA  0E04               	movlw	4
 15309  0050AC  0100               	movlb	0	; () banked
 15310  0050AE  2590               	addwf	Score_draw@s& (0+255),w,b
 15311  0050B0  6E20               	movwf	LCD_DrawText@msg^0,c
 15312  0050B2  0E00               	movlw	0
 15313  0050B4  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15314  0050B6  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15315  0050B8  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 15316  0050BA  6E22               	movwf	LCD_DrawText@font^0,c
 15317  0050BC  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15318  0050BE  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15319  0050C0  0E01               	movlw	1
 15320  0050C2  6E24               	movwf	LCD_DrawText@align^0,c
 15321  0050C4  0E00               	movlw	0
 15322  0050C6  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15323  0050C8  0EEF               	movlw	239
 15324  0050CA  6E25               	movwf	LCD_DrawText@posX^0,c
 15325  0050CC  0E00               	movlw	0
 15326  0050CE  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15327  0050D0  0E00               	movlw	0
 15328  0050D2  6E27               	movwf	LCD_DrawText@posY^0,c
 15329  0050D4  0EFF               	movlw	255
 15330  0050D6  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15331  0050D8  6829               	setf	LCD_DrawText@color^0,c
 15332  0050DA  0E00               	movlw	0
 15333  0050DC  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15334  0050DE  0E00               	movlw	0
 15335  0050E0  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15336  0050E2  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 15337  0050E6  0012               	return		;funcret
 15338  0050E8                     __end_of_Score_draw:
 15339                           	callstack 0
 15340                           
 15341 ;; *************** function _sprintf *****************
 15342 ;; Defined at:
 15343 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
 15344 ;; Parameters:    Size  Location     Type
 15345 ;;  s               2   34[BANK0 ] PTR unsigned char 
 15346 ;;		 -> touchScreenController@s(20), g1(239), 
 15347 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
 15348 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15349 ;; Auto vars:     Size  Location     Type
 15350 ;;  f               6   42[BANK0 ] struct _IO_FILE
 15351 ;;  ap              2   40[BANK0 ] PTR void [1]
 15352 ;;		 -> ?_sprintf(2), 
 15353 ;;  ret             2    0        int 
 15354 ;; Return value:  Size  Location     Type
 15355 ;;                  2   34[BANK0 ] int 
 15356 ;; Registers used:
 15357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15358 ;; Tracked objects:
 15359 ;;		On entry : 0/0
 15360 ;;		On exit  : 0/0
 15361 ;;		Unchanged: 0/0
 15362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15363 ;;      Params:         0       6       0       0       0       0       0
 15364 ;;      Locals:         0       8       0       0       0       0       0
 15365 ;;      Temps:          0       0       0       0       0       0       0
 15366 ;;      Totals:         0      14       0       0       0       0       0
 15367 ;;Total ram usage:       14 bytes
 15368 ;; Hardware stack levels used: 1
 15369 ;; Hardware stack levels required when called: 11
 15370 ;; This function calls:
 15371 ;;		_vfprintf
 15372 ;; This function is called by:
 15373 ;;		_Score_draw
 15374 ;;		_touchScreenController
 15375 ;; This function uses a non-reentrant model
 15376 ;;
 15377                           
 15378                           	psect	text57
 15379  005F92                     __ptext57:
 15380                           	callstack 0
 15381  005F92                     _sprintf:
 15382                           	callstack 14
 15383  005F92  0E86               	movlw	low (?_sprintf+4)
 15384  005F94  0100               	movlb	0	; () banked
 15385  005F96  6F88               	movwf	sprintf@ap& (0+255),b
 15386  005F98  0E00               	movlw	high (?_sprintf+4)
 15387  005F9A  6F89               	movwf	(sprintf@ap+1)& (0+255),b
 15388  005F9C  C082  F08A         	movff	sprintf@s,sprintf@f
 15389  005FA0  C083  F08B         	movff	sprintf@s+1,sprintf@f+1
 15390  005FA4                     
 15391                           ; BSR set to: 0
 15392  005FA4  0E00               	movlw	0
 15393  005FA6  6F8D               	movwf	(sprintf@f+3)& (0+255),b
 15394  005FA8  0E00               	movlw	0
 15395  005FAA  6F8C               	movwf	(sprintf@f+2)& (0+255),b
 15396  005FAC                     
 15397                           ; BSR set to: 0
 15398  005FAC  0E00               	movlw	0
 15399  005FAE  6F8F               	movwf	(sprintf@f+5)& (0+255),b
 15400  005FB0  0E00               	movlw	0
 15401  005FB2  6F8E               	movwf	(sprintf@f+4)& (0+255),b
 15402  005FB4                     
 15403                           ; BSR set to: 0
 15404  005FB4  0E8A               	movlw	low sprintf@f
 15405  005FB6  6F7A               	movwf	vfprintf@fp& (0+255),b
 15406  005FB8  0E00               	movlw	high sprintf@f
 15407  005FBA  6F7B               	movwf	(vfprintf@fp+1)& (0+255),b
 15408  005FBC  C084  F07C         	movff	sprintf@fmt,vfprintf@fmt
 15409  005FC0  C085  F07D         	movff	sprintf@fmt+1,vfprintf@fmt+1
 15410  005FC4  0E88               	movlw	low sprintf@ap
 15411  005FC6  6F7E               	movwf	vfprintf@ap& (0+255),b
 15412  005FC8  0E00               	movlw	high sprintf@ap
 15413  005FCA  6F7F               	movwf	(vfprintf@ap+1)& (0+255),b
 15414  005FCC  EC12  F02F         	call	_vfprintf	;wreg free
 15415  005FD0  0100               	movlb	0	; () banked
 15416  005FD2  518C               	movf	(sprintf@f+2)& (0+255),w,b
 15417  005FD4  2582               	addwf	sprintf@s& (0+255),w,b
 15418  005FD6  6ED9               	movwf	fsr2l,c
 15419  005FD8  518D               	movf	(sprintf@f+3)& (0+255),w,b
 15420  005FDA  2183               	addwfc	(sprintf@s+1)& (0+255),w,b
 15421  005FDC  6EDA               	movwf	fsr2h,c
 15422  005FDE  0E00               	movlw	0
 15423  005FE0  6EDF               	movwf	indf2,c
 15424  005FE2                     
 15425                           ; BSR set to: 0
 15426  005FE2  0012               	return		;funcret
 15427  005FE4                     __end_of_sprintf:
 15428                           	callstack 0
 15429                           
 15430 ;; *************** function _vfprintf *****************
 15431 ;; Defined at:
 15432 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15433 ;; Parameters:    Size  Location     Type
 15434 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
 15435 ;;		 -> sprintf@f(6), 
 15436 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
 15437 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15438 ;;  ap              2   30[BANK0 ] PTR PTR void 
 15439 ;;		 -> sprintf@ap(2), 
 15440 ;; Auto vars:     Size  Location     Type
 15441 ;;  cfmt            2   32[BANK0 ] PTR unsigned char 
 15442 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15443 ;; Return value:  Size  Location     Type
 15444 ;;                  2   26[BANK0 ] int 
 15445 ;; Registers used:
 15446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15447 ;; Tracked objects:
 15448 ;;		On entry : 0/0
 15449 ;;		On exit  : 0/0
 15450 ;;		Unchanged: 0/0
 15451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15452 ;;      Params:         0       6       0       0       0       0       0
 15453 ;;      Locals:         0       2       0       0       0       0       0
 15454 ;;      Temps:          0       0       0       0       0       0       0
 15455 ;;      Totals:         0       8       0       0       0       0       0
 15456 ;;Total ram usage:        8 bytes
 15457 ;; Hardware stack levels used: 1
 15458 ;; Hardware stack levels required when called: 10
 15459 ;; This function calls:
 15460 ;;		_vfpfcnvrt
 15461 ;; This function is called by:
 15462 ;;		_sprintf
 15463 ;; This function uses a non-reentrant model
 15464 ;;
 15465                           
 15466                           	psect	text58
 15467  005E24                     __ptext58:
 15468                           	callstack 0
 15469  005E24                     _vfprintf:
 15470                           	callstack 14
 15471  005E24                     
 15472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 15473  005E24  C07C  F080         	movff	vfprintf@fmt,vfprintf@cfmt
 15474  005E28  C07D  F081         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 15475  005E2C                     
 15476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 15477  005E2C  0E00               	movlw	0
 15478  005E2E  0100               	movlb	0	; () banked
 15479  005E30  6FDC               	movwf	(_nout+1)& (0+255),b
 15480  005E32  0E00               	movlw	0
 15481  005E34  6FDB               	movwf	_nout& (0+255),b
 15482                           
 15483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 15484  005E36  EF30  F02F         	goto	l9255
 15485  005E3A                     l9253:
 15486                           
 15487                           ; BSR set to: 0
 15488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 15489  005E3A  C07A  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
 15490  005E3E  C07B  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 15491  005E42  0E80               	movlw	low vfprintf@cfmt
 15492  005E44  6E41               	movwf	vfpfcnvrt@fmt^0,c
 15493  005E46  0E00               	movlw	high vfprintf@cfmt
 15494  005E48  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
 15495  005E4A  C07E  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
 15496  005E4E  C07F  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 15497  005E52  EC12  F01E         	call	_vfpfcnvrt	;wreg free
 15498  005E56  503F               	movf	?_vfpfcnvrt^0,w,c
 15499  005E58  0100               	movlb	0	; () banked
 15500  005E5A  27DB               	addwf	_nout& (0+255),f,b
 15501  005E5C  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
 15502  005E5E  23DC               	addwfc	(_nout+1)& (0+255),f,b
 15503  005E60                     l9255:
 15504                           
 15505                           ; BSR set to: 0
 15506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 15507  005E60  C080  FFF6         	movff	vfprintf@cfmt,tblptrl
 15508  005E64  C081  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 15509  005E68                     	if	0	;tblptru may be non-zero
 15510  005E68                     	endif
 15511  005E68                     	if	0	;tblptru may be non-zero
 15512  005E68                     	endif
 15513  005E68  0008               	tblrd		*
 15514  005E6A  50F5               	movf	tablat,w,c
 15515  005E6C  0900               	iorlw	0
 15516  005E6E  A4D8               	btfss	status,2,c
 15517  005E70  EF3C  F02F         	goto	u6491
 15518  005E74  EF3E  F02F         	goto	u6490
 15519  005E78                     u6491:
 15520  005E78  EF1D  F02F         	goto	l9253
 15521  005E7C                     u6490:
 15522  005E7C                     
 15523                           ; BSR set to: 0
 15524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 15525  005E7C  C0DB  F07A         	movff	_nout,?_vfprintf
 15526  005E80  C0DC  F07B         	movff	_nout+1,?_vfprintf+1
 15527  005E84                     
 15528                           ; BSR set to: 0
 15529  005E84  0012               	return		;funcret
 15530  005E86                     __end_of_vfprintf:
 15531                           	callstack 0
 15532                           
 15533 ;; *************** function _vfpfcnvrt *****************
 15534 ;; Defined at:
 15535 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
 15538 ;;		 -> sprintf@f(6), 
 15539 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
 15540 ;;		 -> vfprintf@cfmt(2), 
 15541 ;;  ap              2   66[COMRAM] PTR PTR void 
 15542 ;;		 -> sprintf@ap(2), 
 15543 ;; Auto vars:     Size  Location     Type
 15544 ;;  ll              8   18[BANK0 ] long long 
 15545 ;;  llu             8    0        unsigned long long 
 15546 ;;  f               4    0        unsigned long long 
 15547 ;;  vp              3    0        PTR void 
 15548 ;;  ct              3    0        unsigned char [3]
 15549 ;;  cp              3    0        PTR unsigned char 
 15550 ;;  i               2    0        int 
 15551 ;;  done            2    0        int 
 15552 ;;  c               1    0        unsigned char 
 15553 ;; Return value:  Size  Location     Type
 15554 ;;                  2   62[COMRAM] int 
 15555 ;; Registers used:
 15556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15557 ;; Tracked objects:
 15558 ;;		On entry : 0/0
 15559 ;;		On exit  : 0/0
 15560 ;;		Unchanged: 0/0
 15561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15562 ;;      Params:         6       0       0       0       0       0       0
 15563 ;;      Locals:         0       8       0       0       0       0       0
 15564 ;;      Temps:          2       0       0       0       0       0       0
 15565 ;;      Totals:         8       8       0       0       0       0       0
 15566 ;;Total ram usage:       16 bytes
 15567 ;; Hardware stack levels used: 1
 15568 ;; Hardware stack levels required when called: 9
 15569 ;; This function calls:
 15570 ;;		_dtoa
 15571 ;;		_fputc
 15572 ;; This function is called by:
 15573 ;;		_vfprintf
 15574 ;; This function uses a non-reentrant model
 15575 ;;
 15576                           
 15577                           	psect	text59
 15578  003C24                     __ptext59:
 15579                           	callstack 0
 15580  003C24                     _vfpfcnvrt:
 15581                           	callstack 14
 15582  003C24                     
 15583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 15584  003C24  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15585  003C28  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15586  003C2C  CFDE FFF6          	movff	postinc2,tblptrl
 15587  003C30  CFDD FFF7          	movff	postdec2,tblptrh
 15588  003C34                     	if	0	;tblptru may be non-zero
 15589  003C34                     	endif
 15590  003C34                     	if	0	;tblptru may be non-zero
 15591  003C34                     	endif
 15592  003C34  0008               	tblrd		*
 15593  003C36  50F5               	movf	tablat,w,c
 15594  003C38  0A25               	xorlw	37
 15595  003C3A  A4D8               	btfss	status,2,c
 15596  003C3C  EF22  F01E         	goto	u6151
 15597  003C40  EF24  F01E         	goto	u6150
 15598  003C44                     u6151:
 15599  003C44  EFD0  F01E         	goto	l8677
 15600  003C48                     u6150:
 15601  003C48                     
 15602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 15603  003C48  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15604  003C4C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15605  003C50  2ADE               	incf	postinc2,f,c
 15606  003C52  0E00               	movlw	0
 15607  003C54  22DD               	addwfc	postdec2,f,c
 15608  003C56                     
 15609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 15610  003C56  0E00               	movlw	0
 15611  003C58  6E48               	movwf	(_width+1)^0,c
 15612  003C5A  0E00               	movlw	0
 15613  003C5C  6E47               	movwf	_width^0,c
 15614  003C5E  C047  F04B         	movff	_width,_flags
 15615  003C62  C048  F04C         	movff	_width+1,_flags+1
 15616  003C66                     
 15617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 15618  003C66  6849               	setf	_prec^0,c
 15619  003C68  684A               	setf	(_prec+1)^0,c
 15620  003C6A                     
 15621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 15622  003C6A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15623  003C6E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15624  003C72  CFDE FFF6          	movff	postinc2,tblptrl
 15625  003C76  CFDD FFF7          	movff	postdec2,tblptrh
 15626  003C7A                     	if	0	;tblptru may be non-zero
 15627  003C7A                     	endif
 15628  003C7A                     	if	0	;tblptru may be non-zero
 15629  003C7A                     	endif
 15630  003C7A  0008               	tblrd		*
 15631  003C7C  50F5               	movf	tablat,w,c
 15632  003C7E  0A64               	xorlw	100
 15633  003C80  B4D8               	btfsc	status,2,c
 15634  003C82  EF45  F01E         	goto	u6161
 15635  003C86  EF47  F01E         	goto	u6160
 15636  003C8A                     u6161:
 15637  003C8A  EF59  F01E         	goto	l8655
 15638  003C8E                     u6160:
 15639  003C8E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15640  003C92  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15641  003C96  CFDE FFF6          	movff	postinc2,tblptrl
 15642  003C9A  CFDD FFF7          	movff	postdec2,tblptrh
 15643  003C9E                     	if	0	;tblptru may be non-zero
 15644  003C9E                     	endif
 15645  003C9E                     	if	0	;tblptru may be non-zero
 15646  003C9E                     	endif
 15647  003C9E  0008               	tblrd		*
 15648  003CA0  50F5               	movf	tablat,w,c
 15649  003CA2  0A69               	xorlw	105
 15650  003CA4  A4D8               	btfss	status,2,c
 15651  003CA6  EF57  F01E         	goto	u6171
 15652  003CAA  EF59  F01E         	goto	u6170
 15653  003CAE                     u6171:
 15654  003CAE  EF9A  F01E         	goto	l8661
 15655  003CB2                     u6170:
 15656  003CB2                     l8655:
 15657                           
 15658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 15659  003CB2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15660  003CB6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15661  003CBA  2ADE               	incf	postinc2,f,c
 15662  003CBC  0E00               	movlw	0
 15663  003CBE  22DD               	addwfc	postdec2,f,c
 15664                           
 15665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 15666  003CC0  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15667  003CC4  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15668  003CC8  CFDF F045          	movff	indf2,??_vfpfcnvrt
 15669  003CCC  0E02               	movlw	2
 15670  003CCE  26DE               	addwf	postinc2,f,c
 15671  003CD0  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
 15672  003CD4  0E00               	movlw	0
 15673  003CD6  22DD               	addwfc	postdec2,f,c
 15674  003CD8  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15675  003CDC  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15676  003CE0  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
 15677  003CE4  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
 15678  003CE8  0100               	movlb	0	; () banked
 15679  003CEA  0E00               	movlw	0
 15680  003CEC  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 15681  003CEE  0EFF               	movlw	-1
 15682  003CF0  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 15683  003CF2  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 15684  003CF4  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 15685  003CF6  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 15686  003CF8  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 15687  003CFA  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 15688  003CFC                     
 15689                           ; BSR set to: 0
 15690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 15691  003CFC  C03F  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
 15692  003D00  C040  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 15693  003D04  C072  F02F         	movff	vfpfcnvrt@ll,dtoa@d
 15694  003D08  C073  F030         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 15695  003D0C  C074  F031         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 15696  003D10  C075  F032         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 15697  003D14  C076  F033         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 15698  003D18  C077  F034         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 15699  003D1C  C078  F035         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 15700  003D20  C079  F036         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 15701  003D24  EC21  F018         	call	_dtoa	;wreg free
 15702  003D28  C02D  F03F         	movff	?_dtoa,?_vfpfcnvrt
 15703  003D2C  C02E  F040         	movff	?_dtoa+1,?_vfpfcnvrt+1
 15704  003D30  EFEB  F01E         	goto	l1550
 15705  003D34                     l8661:
 15706                           
 15707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 15708  003D34  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15709  003D38  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15710  003D3C  CFDE FFF6          	movff	postinc2,tblptrl
 15711  003D40  CFDD FFF7          	movff	postdec2,tblptrh
 15712  003D44                     	if	0	;tblptru may be non-zero
 15713  003D44                     	endif
 15714  003D44                     	if	0	;tblptru may be non-zero
 15715  003D44                     	endif
 15716  003D44  0008               	tblrd		*
 15717  003D46  50F5               	movf	tablat,w,c
 15718  003D48  0A25               	xorlw	37
 15719  003D4A  A4D8               	btfss	status,2,c
 15720  003D4C  EFAA  F01E         	goto	u6181
 15721  003D50  EFAC  F01E         	goto	u6180
 15722  003D54                     u6181:
 15723  003D54  EFC3  F01E         	goto	l8671
 15724  003D58                     u6180:
 15725  003D58                     
 15726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 15727  003D58  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15728  003D5C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15729  003D60  2ADE               	incf	postinc2,f,c
 15730  003D62  0E00               	movlw	0
 15731  003D64  22DD               	addwfc	postdec2,f,c
 15732  003D66                     
 15733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 15734  003D66  0E00               	movlw	0
 15735  003D68  6E13               	movwf	(fputc@c+1)^0,c
 15736  003D6A  0E25               	movlw	37
 15737  003D6C  6E12               	movwf	fputc@c^0,c
 15738  003D6E  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 15739  003D72  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15740  003D76  EC74  F028         	call	_fputc	;wreg free
 15741  003D7A                     l8667:
 15742                           
 15743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 15744  003D7A  0E00               	movlw	0
 15745  003D7C  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 15746  003D7E  0E01               	movlw	1
 15747  003D80  6E3F               	movwf	?_vfpfcnvrt^0,c
 15748  003D82  EFEB  F01E         	goto	l1550
 15749  003D86                     l8671:
 15750                           
 15751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 15752  003D86  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15753  003D8A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15754  003D8E  2ADE               	incf	postinc2,f,c
 15755  003D90  0E00               	movlw	0
 15756  003D92  22DD               	addwfc	postdec2,f,c
 15757  003D94                     
 15758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 15759  003D94  0E00               	movlw	0
 15760  003D96  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 15761  003D98  0E00               	movlw	0
 15762  003D9A  6E3F               	movwf	?_vfpfcnvrt^0,c
 15763  003D9C  EFEB  F01E         	goto	l1550
 15764  003DA0                     l8677:
 15765                           
 15766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 15767  003DA0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15768  003DA4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15769  003DA8  CFDE FFF6          	movff	postinc2,tblptrl
 15770  003DAC  CFDD FFF7          	movff	postdec2,tblptrh
 15771  003DB0                     	if	0	;tblptru may be non-zero
 15772  003DB0                     	endif
 15773  003DB0                     	if	0	;tblptru may be non-zero
 15774  003DB0                     	endif
 15775  003DB0  0008               	tblrd		*
 15776  003DB2  50F5               	movf	tablat,w,c
 15777  003DB4  6E12               	movwf	fputc@c^0,c
 15778  003DB6  6A13               	clrf	(fputc@c+1)^0,c
 15779  003DB8  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 15780  003DBC  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15781  003DC0  EC74  F028         	call	_fputc	;wreg free
 15782  003DC4                     
 15783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 15784  003DC4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15785  003DC8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15786  003DCC  2ADE               	incf	postinc2,f,c
 15787  003DCE  0E00               	movlw	0
 15788  003DD0  22DD               	addwfc	postdec2,f,c
 15789  003DD2  EFBD  F01E         	goto	l8667
 15790  003DD6                     l1550:
 15791  003DD6  0012               	return		;funcret
 15792  003DD8                     __end_of_vfpfcnvrt:
 15793                           	callstack 0
 15794                           
 15795 ;; *************** function _dtoa *****************
 15796 ;; Defined at:
 15797 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15798 ;; Parameters:    Size  Location     Type
 15799 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
 15800 ;;		 -> sprintf@f(6), 
 15801 ;;  d               8   46[COMRAM] long long 
 15802 ;; Auto vars:     Size  Location     Type
 15803 ;;  n               8    8[BANK0 ] long long 
 15804 ;;  i               2   16[BANK0 ] int 
 15805 ;;  s               2    6[BANK0 ] int 
 15806 ;;  w               2    4[BANK0 ] int 
 15807 ;;  p               2    2[BANK0 ] int 
 15808 ;; Return value:  Size  Location     Type
 15809 ;;                  2   44[COMRAM] int 
 15810 ;; Registers used:
 15811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15812 ;; Tracked objects:
 15813 ;;		On entry : 0/0
 15814 ;;		On exit  : 0/0
 15815 ;;		Unchanged: 0/0
 15816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15817 ;;      Params:        10       0       0       0       0       0       0
 15818 ;;      Locals:         0      18       0       0       0       0       0
 15819 ;;      Temps:          8       0       0       0       0       0       0
 15820 ;;      Totals:        18      18       0       0       0       0       0
 15821 ;;Total ram usage:       36 bytes
 15822 ;; Hardware stack levels used: 1
 15823 ;; Hardware stack levels required when called: 8
 15824 ;; This function calls:
 15825 ;;		___aodiv
 15826 ;;		___aomod
 15827 ;;		_abs
 15828 ;;		_pad
 15829 ;; This function is called by:
 15830 ;;		_vfpfcnvrt
 15831 ;; This function uses a non-reentrant model
 15832 ;;
 15833                           
 15834                           	psect	text60
 15835  003042                     __ptext60:
 15836                           	callstack 0
 15837  003042                     _dtoa:
 15838                           	callstack 14
 15839  003042                     
 15840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 15841  003042  C02F  F068         	movff	dtoa@d,dtoa@n
 15842  003046  C030  F069         	movff	dtoa@d+1,dtoa@n+1
 15843  00304A  C031  F06A         	movff	dtoa@d+2,dtoa@n+2
 15844  00304E  C032  F06B         	movff	dtoa@d+3,dtoa@n+3
 15845  003052  C033  F06C         	movff	dtoa@d+4,dtoa@n+4
 15846  003056  C034  F06D         	movff	dtoa@d+5,dtoa@n+5
 15847  00305A  C035  F06E         	movff	dtoa@d+6,dtoa@n+6
 15848  00305E  C036  F06F         	movff	dtoa@d+7,dtoa@n+7
 15849  003062                     
 15850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 15851  003062  0100               	movlb	0	; () banked
 15852  003064  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
 15853  003066  EF37  F018         	goto	u5671
 15854  00306A  EF3A  F018         	goto	u5670
 15855  00306E                     u5671:
 15856  00306E  0E01               	movlw	1
 15857  003070  EF3B  F018         	goto	u5680
 15858  003074                     u5670:
 15859  003074  0E00               	movlw	0
 15860  003076                     u5680:
 15861  003076  6F66               	movwf	dtoa@s& (0+255),b
 15862  003078  6B67               	clrf	(dtoa@s+1)& (0+255),b
 15863                           
 15864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 15865  00307A  5166               	movf	dtoa@s& (0+255),w,b
 15866  00307C  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 15867  00307E  B4D8               	btfsc	status,2,c
 15868  003080  EF44  F018         	goto	u5691
 15869  003084  EF46  F018         	goto	u5690
 15870  003088                     u5691:
 15871  003088  EF56  F018         	goto	l8027
 15872  00308C                     u5690:
 15873  00308C                     
 15874                           ; BSR set to: 0
 15875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 15876  00308C  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
 15877  00308E  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
 15878  003090  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
 15879  003092  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
 15880  003094  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
 15881  003096  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
 15882  003098  1F69               	comf	(dtoa@n+1)& (0+255),f,b
 15883  00309A  6D68               	negf	dtoa@n& (0+255),b
 15884  00309C  0E00               	movlw	0
 15885  00309E  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
 15886  0030A0  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
 15887  0030A2  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
 15888  0030A4  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
 15889  0030A6  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
 15890  0030A8  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
 15891  0030AA  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
 15892  0030AC                     l8027:
 15893                           
 15894                           ; BSR set to: 0
 15895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 15896  0030AC  BE4A               	btfsc	(_prec+1)^0,7,c
 15897  0030AE  EF5B  F018         	goto	u5701
 15898  0030B2  EF5D  F018         	goto	u5700
 15899  0030B6                     u5701:
 15900  0030B6  EF5E  F018         	goto	l8031
 15901  0030BA                     u5700:
 15902  0030BA                     
 15903                           ; BSR set to: 0
 15904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 15905  0030BA  924B               	bcf	_flags^0,1,c
 15906  0030BC                     l8031:
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 15910  0030BC  BE4A               	btfsc	(_prec+1)^0,7,c
 15911  0030BE  EF6B  F018         	goto	u5710
 15912  0030C2  504A               	movf	(_prec+1)^0,w,c
 15913  0030C4  E106               	bnz	u5711
 15914  0030C6  0449               	decf	_prec^0,w,c
 15915  0030C8  B0D8               	btfsc	status,0,c
 15916  0030CA  EF69  F018         	goto	u5711
 15917  0030CE  EF6B  F018         	goto	u5710
 15918  0030D2                     u5711:
 15919  0030D2  EF71  F018         	goto	l1523
 15920  0030D6                     u5710:
 15921  0030D6                     
 15922                           ; BSR set to: 0
 15923  0030D6  0E00               	movlw	0
 15924  0030D8  6F63               	movwf	(dtoa@p+1)& (0+255),b
 15925  0030DA  0E01               	movlw	1
 15926  0030DC  6F62               	movwf	dtoa@p& (0+255),b
 15927  0030DE  EF75  F018         	goto	l1525
 15928  0030E2                     l1523:
 15929                           
 15930                           ; BSR set to: 0
 15931  0030E2  C049  F062         	movff	_prec,dtoa@p
 15932  0030E6  C04A  F063         	movff	_prec+1,dtoa@p+1
 15933  0030EA                     l1525:
 15934                           
 15935                           ; BSR set to: 0
 15936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 15937  0030EA  C047  F064         	movff	_width,dtoa@w
 15938  0030EE  C048  F065         	movff	_width+1,dtoa@w+1
 15939  0030F2                     
 15940                           ; BSR set to: 0
 15941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 15942  0030F2  5166               	movf	dtoa@s& (0+255),w,b
 15943  0030F4  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 15944  0030F6  A4D8               	btfss	status,2,c
 15945  0030F8  EF80  F018         	goto	u5721
 15946  0030FC  EF82  F018         	goto	u5720
 15947  003100                     u5721:
 15948  003100  EF89  F018         	goto	l8039
 15949  003104                     u5720:
 15950  003104                     
 15951                           ; BSR set to: 0
 15952  003104  A44B               	btfss	_flags^0,2,c
 15953  003106  EF87  F018         	goto	u5731
 15954  00310A  EF89  F018         	goto	u5730
 15955  00310E                     u5731:
 15956  00310E  EF8C  F018         	goto	l8041
 15957  003112                     u5730:
 15958  003112                     l8039:
 15959                           
 15960                           ; BSR set to: 0
 15961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 15962  003112  0764               	decf	dtoa@w& (0+255),f,b
 15963  003114  A0D8               	btfss	status,0,c
 15964  003116  0765               	decf	(dtoa@w+1)& (0+255),f,b
 15965  003118                     l8041:
 15966                           
 15967                           ; BSR set to: 0
 15968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 15969  003118  0E00               	movlw	0
 15970  00311A  6F71               	movwf	(dtoa@i+1)& (0+255),b
 15971  00311C  0E1F               	movlw	31
 15972  00311E  6F70               	movwf	dtoa@i& (0+255),b
 15973  003120                     
 15974                           ; BSR set to: 0
 15975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 15976  003120  0E00               	movlw	0
 15977  003122  6FFF               	movwf	(_dbuf+31)& (0+255),b
 15978                           
 15979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15980  003124  EF11  F019         	goto	l8055
 15981  003128                     l8045:
 15982                           
 15983                           ; BSR set to: 0
 15984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 15985  003128  0770               	decf	dtoa@i& (0+255),f,b
 15986  00312A  A0D8               	btfss	status,0,c
 15987  00312C  0771               	decf	(dtoa@i+1)& (0+255),f,b
 15988  00312E                     
 15989                           ; BSR set to: 0
 15990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 15991  00312E  0EE0               	movlw	low _dbuf
 15992  003130  2570               	addwf	dtoa@i& (0+255),w,b
 15993  003132  6ED9               	movwf	fsr2l,c
 15994  003134  0E00               	movlw	high _dbuf
 15995  003136  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 15996  003138  6EDA               	movwf	fsr2h,c
 15997  00313A  C068  F012         	movff	dtoa@n,___aomod@dividend
 15998  00313E  C069  F013         	movff	dtoa@n+1,___aomod@dividend+1
 15999  003142  C06A  F014         	movff	dtoa@n+2,___aomod@dividend+2
 16000  003146  C06B  F015         	movff	dtoa@n+3,___aomod@dividend+3
 16001  00314A  C06C  F016         	movff	dtoa@n+4,___aomod@dividend+4
 16002  00314E  C06D  F017         	movff	dtoa@n+5,___aomod@dividend+5
 16003  003152  C06E  F018         	movff	dtoa@n+6,___aomod@dividend+6
 16004  003156  C06F  F019         	movff	dtoa@n+7,___aomod@dividend+7
 16005  00315A  0E0A               	movlw	10
 16006  00315C  6E1A               	movwf	___aomod@divisor^0,c
 16007  00315E  0E00               	movlw	0
 16008  003160  6E1B               	movwf	(___aomod@divisor+1)^0,c
 16009  003162  0E00               	movlw	0
 16010  003164  6E1C               	movwf	(___aomod@divisor+2)^0,c
 16011  003166  0E00               	movlw	0
 16012  003168  6E1D               	movwf	(___aomod@divisor+3)^0,c
 16013  00316A  0E00               	movlw	0
 16014  00316C  6E1E               	movwf	(___aomod@divisor+4)^0,c
 16015  00316E  0E00               	movlw	0
 16016  003170  6E1F               	movwf	(___aomod@divisor+5)^0,c
 16017  003172  0E00               	movlw	0
 16018  003174  6E20               	movwf	(___aomod@divisor+6)^0,c
 16019  003176  0E00               	movlw	0
 16020  003178  6E21               	movwf	(___aomod@divisor+7)^0,c
 16021  00317A  ECB0  F01F         	call	___aomod	;wreg free
 16022  00317E  C012  F037         	movff	?___aomod,??_dtoa
 16023  003182  C013  F038         	movff	?___aomod+1,??_dtoa+1
 16024  003186  C014  F039         	movff	?___aomod+2,??_dtoa+2
 16025  00318A  C015  F03A         	movff	?___aomod+3,??_dtoa+3
 16026  00318E  C016  F03B         	movff	?___aomod+4,??_dtoa+4
 16027  003192  C017  F03C         	movff	?___aomod+5,??_dtoa+5
 16028  003196  C018  F03D         	movff	?___aomod+6,??_dtoa+6
 16029  00319A  C019  F03E         	movff	?___aomod+7,??_dtoa+7
 16030  00319E  C037  F024         	movff	??_dtoa,abs@a
 16031  0031A2  C039  F025         	movff	??_dtoa+2,abs@a+1
 16032  0031A6  EC85  F030         	call	_abs	;wreg free
 16033  0031AA  5024               	movf	?_abs^0,w,c
 16034  0031AC  0F30               	addlw	48
 16035  0031AE  6EDF               	movwf	indf2,c
 16036  0031B0                     
 16037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 16038  0031B0  0100               	movlb	0	; () banked
 16039  0031B2  0762               	decf	dtoa@p& (0+255),f,b
 16040  0031B4  A0D8               	btfss	status,0,c
 16041  0031B6  0763               	decf	(dtoa@p+1)& (0+255),f,b
 16042  0031B8                     
 16043                           ; BSR set to: 0
 16044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 16045  0031B8  0764               	decf	dtoa@w& (0+255),f,b
 16046  0031BA  A0D8               	btfss	status,0,c
 16047  0031BC  0765               	decf	(dtoa@w+1)& (0+255),f,b
 16048  0031BE                     
 16049                           ; BSR set to: 0
 16050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 16051  0031BE  C068  F012         	movff	dtoa@n,___aodiv@dividend
 16052  0031C2  C069  F013         	movff	dtoa@n+1,___aodiv@dividend+1
 16053  0031C6  C06A  F014         	movff	dtoa@n+2,___aodiv@dividend+2
 16054  0031CA  C06B  F015         	movff	dtoa@n+3,___aodiv@dividend+3
 16055  0031CE  C06C  F016         	movff	dtoa@n+4,___aodiv@dividend+4
 16056  0031D2  C06D  F017         	movff	dtoa@n+5,___aodiv@dividend+5
 16057  0031D6  C06E  F018         	movff	dtoa@n+6,___aodiv@dividend+6
 16058  0031DA  C06F  F019         	movff	dtoa@n+7,___aodiv@dividend+7
 16059  0031DE  0E0A               	movlw	10
 16060  0031E0  6E1A               	movwf	___aodiv@divisor^0,c
 16061  0031E2  0E00               	movlw	0
 16062  0031E4  6E1B               	movwf	(___aodiv@divisor+1)^0,c
 16063  0031E6  0E00               	movlw	0
 16064  0031E8  6E1C               	movwf	(___aodiv@divisor+2)^0,c
 16065  0031EA  0E00               	movlw	0
 16066  0031EC  6E1D               	movwf	(___aodiv@divisor+3)^0,c
 16067  0031EE  0E00               	movlw	0
 16068  0031F0  6E1E               	movwf	(___aodiv@divisor+4)^0,c
 16069  0031F2  0E00               	movlw	0
 16070  0031F4  6E1F               	movwf	(___aodiv@divisor+5)^0,c
 16071  0031F6  0E00               	movlw	0
 16072  0031F8  6E20               	movwf	(___aodiv@divisor+6)^0,c
 16073  0031FA  0E00               	movlw	0
 16074  0031FC  6E21               	movwf	(___aodiv@divisor+7)^0,c
 16075  0031FE  ECEC  F01E         	call	___aodiv	;wreg free
 16076  003202  C012  F068         	movff	?___aodiv,dtoa@n
 16077  003206  C013  F069         	movff	?___aodiv+1,dtoa@n+1
 16078  00320A  C014  F06A         	movff	?___aodiv+2,dtoa@n+2
 16079  00320E  C015  F06B         	movff	?___aodiv+3,dtoa@n+3
 16080  003212  C016  F06C         	movff	?___aodiv+4,dtoa@n+4
 16081  003216  C017  F06D         	movff	?___aodiv+5,dtoa@n+5
 16082  00321A  C018  F06E         	movff	?___aodiv+6,dtoa@n+6
 16083  00321E  C019  F06F         	movff	?___aodiv+7,dtoa@n+7
 16084  003222                     l8055:
 16085                           
 16086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16087  003222  0100               	movlb	0	; () banked
 16088  003224  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
 16089  003226  EF1D  F019         	goto	u5741
 16090  00322A  5171               	movf	(dtoa@i+1)& (0+255),w,b
 16091  00322C  E108               	bnz	u5740
 16092  00322E  0570               	decf	dtoa@i& (0+255),w,b
 16093  003230  A0D8               	btfss	status,0,c
 16094  003232  EF1D  F019         	goto	u5741
 16095  003236  EF1F  F019         	goto	u5740
 16096  00323A                     u5741:
 16097  00323A  EF4F  F019         	goto	l8065
 16098  00323E                     u5740:
 16099  00323E                     
 16100                           ; BSR set to: 0
 16101  00323E  5168               	movf	dtoa@n& (0+255),w,b
 16102  003240  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
 16103  003242  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
 16104  003244  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
 16105  003246  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
 16106  003248  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
 16107  00324A  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
 16108  00324C  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
 16109  00324E  A4D8               	btfss	status,2,c
 16110  003250  EF2C  F019         	goto	u5751
 16111  003254  EF2E  F019         	goto	u5750
 16112  003258                     u5751:
 16113  003258  EF94  F018         	goto	l8045
 16114  00325C                     u5750:
 16115  00325C                     
 16116                           ; BSR set to: 0
 16117  00325C  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
 16118  00325E  EF3B  F019         	goto	u5760
 16119  003262  5163               	movf	(dtoa@p+1)& (0+255),w,b
 16120  003264  E106               	bnz	u5761
 16121  003266  0562               	decf	dtoa@p& (0+255),w,b
 16122  003268  B0D8               	btfsc	status,0,c
 16123  00326A  EF39  F019         	goto	u5761
 16124  00326E  EF3B  F019         	goto	u5760
 16125  003272                     u5761:
 16126  003272  EF94  F018         	goto	l8045
 16127  003276                     u5760:
 16128  003276                     
 16129                           ; BSR set to: 0
 16130  003276  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
 16131  003278  EF46  F019         	goto	u5771
 16132  00327C  5165               	movf	(dtoa@w+1)& (0+255),w,b
 16133  00327E  E108               	bnz	u5770
 16134  003280  0564               	decf	dtoa@w& (0+255),w,b
 16135  003282  A0D8               	btfss	status,0,c
 16136  003284  EF46  F019         	goto	u5771
 16137  003288  EF48  F019         	goto	u5770
 16138  00328C                     u5771:
 16139  00328C  EF4F  F019         	goto	l8065
 16140  003290                     u5770:
 16141  003290                     
 16142                           ; BSR set to: 0
 16143  003290  B24B               	btfsc	_flags^0,1,c
 16144  003292  EF4D  F019         	goto	u5781
 16145  003296  EF4F  F019         	goto	u5780
 16146  00329A                     u5781:
 16147  00329A  EF94  F018         	goto	l8045
 16148  00329E                     u5780:
 16149  00329E                     l8065:
 16150                           
 16151                           ; BSR set to: 0
 16152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 16153  00329E  5166               	movf	dtoa@s& (0+255),w,b
 16154  0032A0  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16155  0032A2  A4D8               	btfss	status,2,c
 16156  0032A4  EF56  F019         	goto	u5791
 16157  0032A8  EF58  F019         	goto	u5790
 16158  0032AC                     u5791:
 16159  0032AC  EF5F  F019         	goto	l8069
 16160  0032B0                     u5790:
 16161  0032B0                     
 16162                           ; BSR set to: 0
 16163  0032B0  A44B               	btfss	_flags^0,2,c
 16164  0032B2  EF5D  F019         	goto	u5801
 16165  0032B6  EF5F  F019         	goto	u5800
 16166  0032BA                     u5801:
 16167  0032BA  EF7D  F019         	goto	l8079
 16168  0032BE                     u5800:
 16169  0032BE                     l8069:
 16170                           
 16171                           ; BSR set to: 0
 16172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 16173  0032BE  0770               	decf	dtoa@i& (0+255),f,b
 16174  0032C0  A0D8               	btfss	status,0,c
 16175  0032C2  0771               	decf	(dtoa@i+1)& (0+255),f,b
 16176  0032C4                     
 16177                           ; BSR set to: 0
 16178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 16179  0032C4  5166               	movf	dtoa@s& (0+255),w,b
 16180  0032C6  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16181  0032C8  A4D8               	btfss	status,2,c
 16182  0032CA  EF69  F019         	goto	u5811
 16183  0032CE  EF6B  F019         	goto	u5810
 16184  0032D2                     u5811:
 16185  0032D2  EF71  F019         	goto	l8075
 16186  0032D6                     u5810:
 16187  0032D6                     
 16188                           ; BSR set to: 0
 16189  0032D6  0E00               	movlw	0
 16190  0032D8  6F61               	movwf	(_dtoa$4923+1)& (0+255),b
 16191  0032DA  0E2B               	movlw	43
 16192  0032DC  6F60               	movwf	_dtoa$4923& (0+255),b
 16193  0032DE  EF75  F019         	goto	l8077
 16194  0032E2                     l8075:
 16195                           
 16196                           ; BSR set to: 0
 16197  0032E2  0E00               	movlw	0
 16198  0032E4  6F61               	movwf	(_dtoa$4923+1)& (0+255),b
 16199  0032E6  0E2D               	movlw	45
 16200  0032E8  6F60               	movwf	_dtoa$4923& (0+255),b
 16201  0032EA                     l8077:
 16202                           
 16203                           ; BSR set to: 0
 16204  0032EA  0EE0               	movlw	low _dbuf
 16205  0032EC  2570               	addwf	dtoa@i& (0+255),w,b
 16206  0032EE  6ED9               	movwf	fsr2l,c
 16207  0032F0  0E00               	movlw	high _dbuf
 16208  0032F2  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16209  0032F4  6EDA               	movwf	fsr2h,c
 16210  0032F6  C060  FFDF         	movff	_dtoa$4923,indf2
 16211  0032FA                     l8079:
 16212                           
 16213                           ; BSR set to: 0
 16214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 16215  0032FA  C02D  F022         	movff	dtoa@fp,pad@fp
 16216  0032FE  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
 16217  003302  0EE0               	movlw	low _dbuf
 16218  003304  2570               	addwf	dtoa@i& (0+255),w,b
 16219  003306  6E24               	movwf	pad@buf^0,c
 16220  003308  0E00               	movlw	high _dbuf
 16221  00330A  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16222  00330C  6E25               	movwf	(pad@buf+1)^0,c
 16223  00330E  C064  F026         	movff	dtoa@w,pad@p
 16224  003312  C065  F027         	movff	dtoa@w+1,pad@p+1
 16225  003316  EC3B  F029         	call	_pad	;wreg free
 16226  00331A  C022  F02D         	movff	?_pad,?_dtoa
 16227  00331E  C023  F02E         	movff	?_pad+1,?_dtoa+1
 16228  003322  0012               	return		;funcret
 16229  003324                     __end_of_dtoa:
 16230                           	callstack 0
 16231                           
 16232 ;; *************** function _pad *****************
 16233 ;; Defined at:
 16234 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16235 ;; Parameters:    Size  Location     Type
 16236 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 16237 ;;		 -> sprintf@f(6), 
 16238 ;;  buf             2   35[COMRAM] PTR unsigned char 
 16239 ;;		 -> dbuf(32), 
 16240 ;;  p               2   37[COMRAM] int 
 16241 ;; Auto vars:     Size  Location     Type
 16242 ;;  w               2   42[COMRAM] int 
 16243 ;;  i               2   40[COMRAM] int 
 16244 ;; Return value:  Size  Location     Type
 16245 ;;                  2   33[COMRAM] int 
 16246 ;; Registers used:
 16247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16248 ;; Tracked objects:
 16249 ;;		On entry : 0/0
 16250 ;;		On exit  : 0/0
 16251 ;;		Unchanged: 0/0
 16252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16253 ;;      Params:         6       0       0       0       0       0       0
 16254 ;;      Locals:         4       0       0       0       0       0       0
 16255 ;;      Temps:          1       0       0       0       0       0       0
 16256 ;;      Totals:        11       0       0       0       0       0       0
 16257 ;;Total ram usage:       11 bytes
 16258 ;; Hardware stack levels used: 1
 16259 ;; Hardware stack levels required when called: 7
 16260 ;; This function calls:
 16261 ;;		_fputc
 16262 ;;		_fputs
 16263 ;;		_strlen
 16264 ;; This function is called by:
 16265 ;;		_dtoa
 16266 ;; This function uses a non-reentrant model
 16267 ;;
 16268                           
 16269                           	psect	text61
 16270  005276                     __ptext61:
 16271                           	callstack 0
 16272  005276                     _pad:
 16273                           	callstack 14
 16274  005276                     
 16275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 16276  005276  A04B               	btfss	_flags^0,0,c
 16277  005278  EF40  F029         	goto	u5621
 16278  00527C  EF42  F029         	goto	u5620
 16279  005280                     u5621:
 16280  005280  EF4C  F029         	goto	l7999
 16281  005284                     u5620:
 16282  005284                     
 16283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 16284  005284  C024  F01B         	movff	pad@buf,fputs@s
 16285  005288  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16286  00528C  C022  F01D         	movff	pad@fp,fputs@fp
 16287  005290  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16288  005294  EC63  F030         	call	_fputs	;wreg free
 16289  005298                     l7999:
 16290                           
 16291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 16292  005298  BE27               	btfsc	(pad@p+1)^0,7,c
 16293  00529A  EF51  F029         	goto	u5631
 16294  00529E  EF53  F029         	goto	u5630
 16295  0052A2                     u5631:
 16296  0052A2  EF59  F029         	goto	l8003
 16297  0052A6                     u5630:
 16298  0052A6  C026  F02B         	movff	pad@p,pad@w
 16299  0052AA  C027  F02C         	movff	pad@p+1,pad@w+1
 16300  0052AE  EF5D  F029         	goto	l1512
 16301  0052B2                     l8003:
 16302  0052B2  0E00               	movlw	0
 16303  0052B4  6E2C               	movwf	(pad@w+1)^0,c
 16304  0052B6  0E00               	movlw	0
 16305  0052B8  6E2B               	movwf	pad@w^0,c
 16306  0052BA                     l1512:
 16307                           
 16308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 16309  0052BA  0E00               	movlw	0
 16310  0052BC  6E2A               	movwf	(pad@i+1)^0,c
 16311  0052BE  0E00               	movlw	0
 16312  0052C0  6E29               	movwf	pad@i^0,c
 16313                           
 16314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16315  0052C2  EF6F  F029         	goto	l8009
 16316  0052C6                     l8005:
 16317                           
 16318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 16319  0052C6  0E00               	movlw	0
 16320  0052C8  6E13               	movwf	(fputc@c+1)^0,c
 16321  0052CA  0E20               	movlw	32
 16322  0052CC  6E12               	movwf	fputc@c^0,c
 16323  0052CE  C022  F014         	movff	pad@fp,fputc@fp
 16324  0052D2  C023  F015         	movff	pad@fp+1,fputc@fp+1
 16325  0052D6  EC74  F028         	call	_fputc	;wreg free
 16326  0052DA                     
 16327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 16328  0052DA  4A29               	infsnz	pad@i^0,f,c
 16329  0052DC  2A2A               	incf	(pad@i+1)^0,f,c
 16330  0052DE                     l8009:
 16331                           
 16332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16333  0052DE  502B               	movf	pad@w^0,w,c
 16334  0052E0  5C29               	subwf	pad@i^0,w,c
 16335  0052E2  502A               	movf	(pad@i+1)^0,w,c
 16336  0052E4  0A80               	xorlw	128
 16337  0052E6  6E28               	movwf	??_pad^0,c
 16338  0052E8  502C               	movf	(pad@w+1)^0,w,c
 16339  0052EA  0A80               	xorlw	128
 16340  0052EC  5828               	subwfb	??_pad^0,w,c
 16341  0052EE  A0D8               	btfss	status,0,c
 16342  0052F0  EF7C  F029         	goto	u5641
 16343  0052F4  EF7E  F029         	goto	u5640
 16344  0052F8                     u5641:
 16345  0052F8  EF63  F029         	goto	l8005
 16346  0052FC                     u5640:
 16347  0052FC                     
 16348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 16349  0052FC  B04B               	btfsc	_flags^0,0,c
 16350  0052FE  EF83  F029         	goto	u5651
 16351  005302  EF85  F029         	goto	u5650
 16352  005306                     u5651:
 16353  005306  EF8F  F029         	goto	l8013
 16354  00530A                     u5650:
 16355  00530A                     
 16356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 16357  00530A  C024  F01B         	movff	pad@buf,fputs@s
 16358  00530E  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16359  005312  C022  F01D         	movff	pad@fp,fputs@fp
 16360  005316  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16361  00531A  EC63  F030         	call	_fputs	;wreg free
 16362  00531E                     l8013:
 16363                           
 16364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 16365  00531E  C024  F012         	movff	pad@buf,strlen@s
 16366  005322  C025  F013         	movff	pad@buf+1,strlen@s+1
 16367  005326  EC1A  F030         	call	_strlen	;wreg free
 16368  00532A  502B               	movf	pad@w^0,w,c
 16369  00532C  2412               	addwf	?_strlen^0,w,c
 16370  00532E  6E22               	movwf	?_pad^0,c
 16371  005330  502C               	movf	(pad@w+1)^0,w,c
 16372  005332  2013               	addwfc	(?_strlen+1)^0,w,c
 16373  005334  6E23               	movwf	(?_pad+1)^0,c
 16374  005336  0012               	return		;funcret
 16375  005338                     __end_of_pad:
 16376                           	callstack 0
 16377                           
 16378 ;; *************** function _fputs *****************
 16379 ;; Defined at:
 16380 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 16381 ;; Parameters:    Size  Location     Type
 16382 ;;  s               2   26[COMRAM] PTR const unsigned char 
 16383 ;;		 -> dbuf(32), 
 16384 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 16385 ;;		 -> sprintf@f(6), 
 16386 ;; Auto vars:     Size  Location     Type
 16387 ;;  i               2   31[COMRAM] int 
 16388 ;;  c               1   30[COMRAM] unsigned char 
 16389 ;; Return value:  Size  Location     Type
 16390 ;;                  2   26[COMRAM] int 
 16391 ;; Registers used:
 16392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16393 ;; Tracked objects:
 16394 ;;		On entry : 0/0
 16395 ;;		On exit  : 0/0
 16396 ;;		Unchanged: 0/0
 16397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16398 ;;      Params:         4       0       0       0       0       0       0
 16399 ;;      Locals:         3       0       0       0       0       0       0
 16400 ;;      Temps:          0       0       0       0       0       0       0
 16401 ;;      Totals:         7       0       0       0       0       0       0
 16402 ;;Total ram usage:        7 bytes
 16403 ;; Hardware stack levels used: 1
 16404 ;; Hardware stack levels required when called: 6
 16405 ;; This function calls:
 16406 ;;		_fputc
 16407 ;; This function is called by:
 16408 ;;		_pad
 16409 ;; This function uses a non-reentrant model
 16410 ;;
 16411                           
 16412                           	psect	text62
 16413  0060C6                     __ptext62:
 16414                           	callstack 0
 16415  0060C6                     _fputs:
 16416                           	callstack 14
 16417  0060C6  0E00               	movlw	0
 16418  0060C8  6E21               	movwf	(fputs@i+1)^0,c
 16419  0060CA  0E00               	movlw	0
 16420  0060CC  6E20               	movwf	fputs@i^0,c
 16421  0060CE  EF74  F030         	goto	l7913
 16422  0060D2                     l7909:
 16423  0060D2  C01F  F012         	movff	fputs@c,fputc@c
 16424  0060D6  6A13               	clrf	(fputc@c+1)^0,c
 16425  0060D8  C01D  F014         	movff	fputs@fp,fputc@fp
 16426  0060DC  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
 16427  0060E0  EC74  F028         	call	_fputc	;wreg free
 16428  0060E4  4A20               	infsnz	fputs@i^0,f,c
 16429  0060E6  2A21               	incf	(fputs@i+1)^0,f,c
 16430  0060E8                     l7913:
 16431  0060E8  5020               	movf	fputs@i^0,w,c
 16432  0060EA  241B               	addwf	fputs@s^0,w,c
 16433  0060EC  6ED9               	movwf	fsr2l,c
 16434  0060EE  5021               	movf	(fputs@i+1)^0,w,c
 16435  0060F0  201C               	addwfc	(fputs@s+1)^0,w,c
 16436  0060F2  6EDA               	movwf	fsr2h,c
 16437  0060F4  50DF               	movf	indf2,w,c
 16438  0060F6  6E1F               	movwf	fputs@c^0,c
 16439  0060F8  501F               	movf	fputs@c^0,w,c
 16440  0060FA  A4D8               	btfss	status,2,c
 16441  0060FC  EF82  F030         	goto	u5481
 16442  006100  EF84  F030         	goto	u5480
 16443  006104                     u5481:
 16444  006104  EF69  F030         	goto	l7909
 16445  006108                     u5480:
 16446  006108  0012               	return		;funcret
 16447  00610A                     __end_of_fputs:
 16448                           	callstack 0
 16449                           
 16450 ;; *************** function _fputc *****************
 16451 ;; Defined at:
 16452 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 16453 ;; Parameters:    Size  Location     Type
 16454 ;;  c               2   17[COMRAM] int 
 16455 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 16456 ;;		 -> sprintf@f(6), 
 16457 ;; Auto vars:     Size  Location     Type
 16458 ;;		None
 16459 ;; Return value:  Size  Location     Type
 16460 ;;                  2   17[COMRAM] int 
 16461 ;; Registers used:
 16462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16463 ;; Tracked objects:
 16464 ;;		On entry : 0/0
 16465 ;;		On exit  : 0/0
 16466 ;;		Unchanged: 0/0
 16467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16468 ;;      Params:         4       0       0       0       0       0       0
 16469 ;;      Locals:         0       0       0       0       0       0       0
 16470 ;;      Temps:          5       0       0       0       0       0       0
 16471 ;;      Totals:         9       0       0       0       0       0       0
 16472 ;;Total ram usage:        9 bytes
 16473 ;; Hardware stack levels used: 1
 16474 ;; Hardware stack levels required when called: 5
 16475 ;; This function calls:
 16476 ;;		_putch
 16477 ;; This function is called by:
 16478 ;;		_pad
 16479 ;;		_vfpfcnvrt
 16480 ;;		_fputs
 16481 ;; This function uses a non-reentrant model
 16482 ;;
 16483                           
 16484                           	psect	text63
 16485  0050E8                     __ptext63:
 16486                           	callstack 0
 16487  0050E8                     _fputc:
 16488                           	callstack 17
 16489  0050E8  5014               	movf	fputc@fp^0,w,c
 16490  0050EA  1015               	iorwf	(fputc@fp+1)^0,w,c
 16491  0050EC  B4D8               	btfsc	status,2,c
 16492  0050EE  EF7B  F028         	goto	u5421
 16493  0050F2  EF7D  F028         	goto	u5420
 16494  0050F6                     u5421:
 16495  0050F6  EF86  F028         	goto	l7887
 16496  0050FA                     u5420:
 16497  0050FA  5014               	movf	fputc@fp^0,w,c
 16498  0050FC  1015               	iorwf	(fputc@fp+1)^0,w,c
 16499  0050FE  A4D8               	btfss	status,2,c
 16500  005100  EF84  F028         	goto	u5431
 16501  005104  EF86  F028         	goto	u5430
 16502  005108                     u5431:
 16503  005108  EF8B  F028         	goto	l7889
 16504  00510C                     u5430:
 16505  00510C                     l7887:
 16506  00510C  5012               	movf	fputc@c^0,w,c
 16507  00510E  ECE2  F031         	call	_putch
 16508  005112  EFD8  F028         	goto	l1576
 16509  005116                     l7889:
 16510  005116  EE20 F004          	lfsr	2,4
 16511  00511A  5014               	movf	fputc@fp^0,w,c
 16512  00511C  26D9               	addwf	fsr2l,f,c
 16513  00511E  5015               	movf	(fputc@fp+1)^0,w,c
 16514  005120  22DA               	addwfc	fsr2h,f,c
 16515  005122  50DE               	movf	postinc2,w,c
 16516  005124  10DE               	iorwf	postinc2,w,c
 16517  005126  B4D8               	btfsc	status,2,c
 16518  005128  EF98  F028         	goto	u5441
 16519  00512C  EF9A  F028         	goto	u5440
 16520  005130                     u5441:
 16521  005130  EFB5  F028         	goto	l7893
 16522  005134                     u5440:
 16523  005134  EE20 F004          	lfsr	2,4
 16524  005138  5014               	movf	fputc@fp^0,w,c
 16525  00513A  26D9               	addwf	fsr2l,f,c
 16526  00513C  5015               	movf	(fputc@fp+1)^0,w,c
 16527  00513E  22DA               	addwfc	fsr2h,f,c
 16528  005140  EE10 F002          	lfsr	1,2
 16529  005144  5014               	movf	fputc@fp^0,w,c
 16530  005146  26E1               	addwf	fsr1l,f,c
 16531  005148  5015               	movf	(fputc@fp+1)^0,w,c
 16532  00514A  22E2               	addwfc	fsr1h,f,c
 16533  00514C  50DE               	movf	postinc2,w,c
 16534  00514E  5CE6               	subwf	postinc1,w,c
 16535  005150  50E6               	movf	postinc1,w,c
 16536  005152  0A80               	xorlw	128
 16537  005154  6E1A               	movwf	(??_fputc+4)^0,c
 16538  005156  50DE               	movf	postinc2,w,c
 16539  005158  0A80               	xorlw	128
 16540  00515A  581A               	subwfb	(??_fputc+4)^0,w,c
 16541  00515C  B0D8               	btfsc	status,0,c
 16542  00515E  EFB3  F028         	goto	u5451
 16543  005162  EFB5  F028         	goto	u5450
 16544  005166                     u5451:
 16545  005166  EFD8  F028         	goto	l1576
 16546  00516A                     u5450:
 16547  00516A                     l7893:
 16548  00516A  EE20 F002          	lfsr	2,2
 16549  00516E  5014               	movf	fputc@fp^0,w,c
 16550  005170  26D9               	addwf	fsr2l,f,c
 16551  005172  5015               	movf	(fputc@fp+1)^0,w,c
 16552  005174  22DA               	addwfc	fsr2h,f,c
 16553  005176  CFDE F016          	movff	postinc2,??_fputc
 16554  00517A  CFDD F017          	movff	postdec2,??_fputc+1
 16555  00517E  C014  FFD9         	movff	fputc@fp,fsr2l
 16556  005182  C015  FFDA         	movff	fputc@fp+1,fsr2h
 16557  005186  CFDE F018          	movff	postinc2,??_fputc+2
 16558  00518A  CFDD F019          	movff	postdec2,??_fputc+3
 16559  00518E  5016               	movf	??_fputc^0,w,c
 16560  005190  2418               	addwf	(??_fputc+2)^0,w,c
 16561  005192  6ED9               	movwf	fsr2l,c
 16562  005194  5017               	movf	(??_fputc+1)^0,w,c
 16563  005196  2019               	addwfc	(??_fputc+3)^0,w,c
 16564  005198  6EDA               	movwf	fsr2h,c
 16565  00519A  C012  FFDF         	movff	fputc@c,indf2
 16566  00519E  EE20 F002          	lfsr	2,2
 16567  0051A2  5014               	movf	fputc@fp^0,w,c
 16568  0051A4  26D9               	addwf	fsr2l,f,c
 16569  0051A6  5015               	movf	(fputc@fp+1)^0,w,c
 16570  0051A8  22DA               	addwfc	fsr2h,f,c
 16571  0051AA  2ADE               	incf	postinc2,f,c
 16572  0051AC  0E00               	movlw	0
 16573  0051AE  22DD               	addwfc	postdec2,f,c
 16574  0051B0                     l1576:
 16575  0051B0  0012               	return		;funcret
 16576  0051B2                     __end_of_fputc:
 16577                           	callstack 0
 16578                           
 16579 ;; *************** function _putch *****************
 16580 ;; Defined at:
 16581 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 16582 ;; Parameters:    Size  Location     Type
 16583 ;;  c               1    wreg     unsigned char 
 16584 ;; Auto vars:     Size  Location     Type
 16585 ;;  c               1    0[COMRAM] unsigned char 
 16586 ;; Return value:  Size  Location     Type
 16587 ;;                  1    wreg      void 
 16588 ;; Registers used:
 16589 ;;		wreg
 16590 ;; Tracked objects:
 16591 ;;		On entry : 0/0
 16592 ;;		On exit  : 0/0
 16593 ;;		Unchanged: 0/0
 16594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16595 ;;      Params:         0       0       0       0       0       0       0
 16596 ;;      Locals:         0       0       0       0       0       0       0
 16597 ;;      Temps:          0       0       0       0       0       0       0
 16598 ;;      Totals:         0       0       0       0       0       0       0
 16599 ;;Total ram usage:        0 bytes
 16600 ;; Hardware stack levels used: 1
 16601 ;; Hardware stack levels required when called: 4
 16602 ;; This function calls:
 16603 ;;		Nothing
 16604 ;; This function is called by:
 16605 ;;		_fputc
 16606 ;; This function uses a non-reentrant model
 16607 ;;
 16608                           
 16609                           	psect	text64
 16610  0063C4                     __ptext64:
 16611                           	callstack 0
 16612  0063C4                     _putch:
 16613                           	callstack 17
 16614  0063C4  0012               	return		;funcret
 16615  0063C6                     __end_of_putch:
 16616                           	callstack 0
 16617                           
 16618 ;; *************** function _abs *****************
 16619 ;; Defined at:
 16620 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 16621 ;; Parameters:    Size  Location     Type
 16622 ;;  a               2   35[COMRAM] int 
 16623 ;; Auto vars:     Size  Location     Type
 16624 ;;		None
 16625 ;; Return value:  Size  Location     Type
 16626 ;;                  2   35[COMRAM] int 
 16627 ;; Registers used:
 16628 ;;		wreg, status,2, status,0
 16629 ;; Tracked objects:
 16630 ;;		On entry : 0/0
 16631 ;;		On exit  : 0/0
 16632 ;;		Unchanged: 0/0
 16633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16634 ;;      Params:         2       0       0       0       0       0       0
 16635 ;;      Locals:         0       0       0       0       0       0       0
 16636 ;;      Temps:          2       0       0       0       0       0       0
 16637 ;;      Totals:         4       0       0       0       0       0       0
 16638 ;;Total ram usage:        4 bytes
 16639 ;; Hardware stack levels used: 1
 16640 ;; Hardware stack levels required when called: 4
 16641 ;; This function calls:
 16642 ;;		Nothing
 16643 ;; This function is called by:
 16644 ;;		_dtoa
 16645 ;; This function uses a non-reentrant model
 16646 ;;
 16647                           
 16648                           	psect	text65
 16649  00610A                     __ptext65:
 16650                           	callstack 0
 16651  00610A                     _abs:
 16652                           	callstack 17
 16653  00610A  BE25               	btfsc	(abs@a+1)^0,7,c
 16654  00610C  EF92  F030         	goto	u5660
 16655  006110  5025               	movf	(abs@a+1)^0,w,c
 16656  006112  E106               	bnz	u5661
 16657  006114  0424               	decf	abs@a^0,w,c
 16658  006116  B0D8               	btfsc	status,0,c
 16659  006118  EF90  F030         	goto	u5661
 16660  00611C  EF92  F030         	goto	u5660
 16661  006120                     u5661:
 16662  006120  EFA0  F030         	goto	l1561
 16663  006124                     u5660:
 16664  006124  C024  F026         	movff	abs@a,??_abs
 16665  006128  C025  F027         	movff	abs@a+1,??_abs+1
 16666  00612C  1E26               	comf	??_abs^0,f,c
 16667  00612E  1E27               	comf	(??_abs+1)^0,f,c
 16668  006130  4A26               	infsnz	??_abs^0,f,c
 16669  006132  2A27               	incf	(??_abs+1)^0,f,c
 16670  006134  C026  F024         	movff	??_abs,?_abs
 16671  006138  C027  F025         	movff	??_abs+1,?_abs+1
 16672  00613C  EFA4  F030         	goto	l1564
 16673  006140                     l1561:
 16674  006140  C024  F024         	movff	abs@a,?_abs
 16675  006144  C025  F025         	movff	abs@a+1,?_abs+1
 16676  006148                     l1564:
 16677  006148  0012               	return		;funcret
 16678  00614A                     __end_of_abs:
 16679                           	callstack 0
 16680                           
 16681 ;; *************** function ___aomod *****************
 16682 ;; Defined at:
 16683 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 16684 ;; Parameters:    Size  Location     Type
 16685 ;;  dividend        8   17[COMRAM] long long 
 16686 ;;  divisor         8   25[COMRAM] long long 
 16687 ;; Auto vars:     Size  Location     Type
 16688 ;;  sign            1   34[COMRAM] unsigned char 
 16689 ;;  counter         1   33[COMRAM] unsigned char 
 16690 ;; Return value:  Size  Location     Type
 16691 ;;                  8   17[COMRAM] long long 
 16692 ;; Registers used:
 16693 ;;		wreg, status,2, status,0
 16694 ;; Tracked objects:
 16695 ;;		On entry : 0/0
 16696 ;;		On exit  : 0/0
 16697 ;;		Unchanged: 0/0
 16698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16699 ;;      Params:        16       0       0       0       0       0       0
 16700 ;;      Locals:         2       0       0       0       0       0       0
 16701 ;;      Temps:          0       0       0       0       0       0       0
 16702 ;;      Totals:        18       0       0       0       0       0       0
 16703 ;;Total ram usage:       18 bytes
 16704 ;; Hardware stack levels used: 1
 16705 ;; Hardware stack levels required when called: 4
 16706 ;; This function calls:
 16707 ;;		Nothing
 16708 ;; This function is called by:
 16709 ;;		_dtoa
 16710 ;; This function uses a non-reentrant model
 16711 ;;
 16712                           
 16713                           	psect	text66
 16714  003F60                     __ptext66:
 16715                           	callstack 0
 16716  003F60                     ___aomod:
 16717                           	callstack 17
 16718  003F60  0E00               	movlw	0
 16719  003F62  6E23               	movwf	___aomod@sign^0,c
 16720  003F64  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
 16721  003F66  EFB9  F01F         	goto	u5560
 16722  003F6A  EFB7  F01F         	goto	u5561
 16723  003F6E                     u5561:
 16724  003F6E  EFCB  F01F         	goto	l7967
 16725  003F72                     u5560:
 16726  003F72  1E19               	comf	(___aomod@dividend+7)^0,f,c
 16727  003F74  1E18               	comf	(___aomod@dividend+6)^0,f,c
 16728  003F76  1E17               	comf	(___aomod@dividend+5)^0,f,c
 16729  003F78  1E16               	comf	(___aomod@dividend+4)^0,f,c
 16730  003F7A  1E15               	comf	(___aomod@dividend+3)^0,f,c
 16731  003F7C  1E14               	comf	(___aomod@dividend+2)^0,f,c
 16732  003F7E  1E13               	comf	(___aomod@dividend+1)^0,f,c
 16733  003F80  6C12               	negf	___aomod@dividend^0,c
 16734  003F82  0E00               	movlw	0
 16735  003F84  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 16736  003F86  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 16737  003F88  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 16738  003F8A  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 16739  003F8C  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 16740  003F8E  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 16741  003F90  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 16742  003F92  0E01               	movlw	1
 16743  003F94  6E23               	movwf	___aomod@sign^0,c
 16744  003F96                     l7967:
 16745  003F96  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
 16746  003F98  EFD2  F01F         	goto	u5570
 16747  003F9C  EFD0  F01F         	goto	u5571
 16748  003FA0                     u5571:
 16749  003FA0  EFE2  F01F         	goto	l7971
 16750  003FA4                     u5570:
 16751  003FA4  1E21               	comf	(___aomod@divisor+7)^0,f,c
 16752  003FA6  1E20               	comf	(___aomod@divisor+6)^0,f,c
 16753  003FA8  1E1F               	comf	(___aomod@divisor+5)^0,f,c
 16754  003FAA  1E1E               	comf	(___aomod@divisor+4)^0,f,c
 16755  003FAC  1E1D               	comf	(___aomod@divisor+3)^0,f,c
 16756  003FAE  1E1C               	comf	(___aomod@divisor+2)^0,f,c
 16757  003FB0  1E1B               	comf	(___aomod@divisor+1)^0,f,c
 16758  003FB2  6C1A               	negf	___aomod@divisor^0,c
 16759  003FB4  0E00               	movlw	0
 16760  003FB6  221B               	addwfc	(___aomod@divisor+1)^0,f,c
 16761  003FB8  221C               	addwfc	(___aomod@divisor+2)^0,f,c
 16762  003FBA  221D               	addwfc	(___aomod@divisor+3)^0,f,c
 16763  003FBC  221E               	addwfc	(___aomod@divisor+4)^0,f,c
 16764  003FBE  221F               	addwfc	(___aomod@divisor+5)^0,f,c
 16765  003FC0  2220               	addwfc	(___aomod@divisor+6)^0,f,c
 16766  003FC2  2221               	addwfc	(___aomod@divisor+7)^0,f,c
 16767  003FC4                     l7971:
 16768  003FC4  501A               	movf	___aomod@divisor^0,w,c
 16769  003FC6  101B               	iorwf	(___aomod@divisor+1)^0,w,c
 16770  003FC8  101C               	iorwf	(___aomod@divisor+2)^0,w,c
 16771  003FCA  101D               	iorwf	(___aomod@divisor+3)^0,w,c
 16772  003FCC  101E               	iorwf	(___aomod@divisor+4)^0,w,c
 16773  003FCE  101F               	iorwf	(___aomod@divisor+5)^0,w,c
 16774  003FD0  1020               	iorwf	(___aomod@divisor+6)^0,w,c
 16775  003FD2  1021               	iorwf	(___aomod@divisor+7)^0,w,c
 16776  003FD4  B4D8               	btfsc	status,2,c
 16777  003FD6  EFEF  F01F         	goto	u5581
 16778  003FDA  EFF1  F01F         	goto	u5580
 16779  003FDE                     u5581:
 16780  003FDE  EF39  F020         	goto	l7987
 16781  003FE2                     u5580:
 16782  003FE2  0E01               	movlw	1
 16783  003FE4  6E22               	movwf	___aomod@counter^0,c
 16784  003FE6  EFFF  F01F         	goto	l7977
 16785  003FEA                     l7975:
 16786  003FEA  90D8               	bcf	status,0,c
 16787  003FEC  361A               	rlcf	___aomod@divisor^0,f,c
 16788  003FEE  361B               	rlcf	(___aomod@divisor+1)^0,f,c
 16789  003FF0  361C               	rlcf	(___aomod@divisor+2)^0,f,c
 16790  003FF2  361D               	rlcf	(___aomod@divisor+3)^0,f,c
 16791  003FF4  361E               	rlcf	(___aomod@divisor+4)^0,f,c
 16792  003FF6  361F               	rlcf	(___aomod@divisor+5)^0,f,c
 16793  003FF8  3620               	rlcf	(___aomod@divisor+6)^0,f,c
 16794  003FFA  3621               	rlcf	(___aomod@divisor+7)^0,f,c
 16795  003FFC  2A22               	incf	___aomod@counter^0,f,c
 16796  003FFE                     l7977:
 16797  003FFE  AE21               	btfss	(___aomod@divisor+7)^0,7,c
 16798  004000  EF04  F020         	goto	u5591
 16799  004004  EF06  F020         	goto	u5590
 16800  004008                     u5591:
 16801  004008  EFF5  F01F         	goto	l7975
 16802  00400C                     u5590:
 16803  00400C                     l7979:
 16804  00400C  501A               	movf	___aomod@divisor^0,w,c
 16805  00400E  5C12               	subwf	___aomod@dividend^0,w,c
 16806  004010  501B               	movf	(___aomod@divisor+1)^0,w,c
 16807  004012  5813               	subwfb	(___aomod@dividend+1)^0,w,c
 16808  004014  501C               	movf	(___aomod@divisor+2)^0,w,c
 16809  004016  5814               	subwfb	(___aomod@dividend+2)^0,w,c
 16810  004018  501D               	movf	(___aomod@divisor+3)^0,w,c
 16811  00401A  5815               	subwfb	(___aomod@dividend+3)^0,w,c
 16812  00401C  501E               	movf	(___aomod@divisor+4)^0,w,c
 16813  00401E  5816               	subwfb	(___aomod@dividend+4)^0,w,c
 16814  004020  501F               	movf	(___aomod@divisor+5)^0,w,c
 16815  004022  5817               	subwfb	(___aomod@dividend+5)^0,w,c
 16816  004024  5020               	movf	(___aomod@divisor+6)^0,w,c
 16817  004026  5818               	subwfb	(___aomod@dividend+6)^0,w,c
 16818  004028  5021               	movf	(___aomod@divisor+7)^0,w,c
 16819  00402A  5819               	subwfb	(___aomod@dividend+7)^0,w,c
 16820  00402C  A0D8               	btfss	status,0,c
 16821  00402E  EF1B  F020         	goto	u5601
 16822  004032  EF1D  F020         	goto	u5600
 16823  004036                     u5601:
 16824  004036  EF2D  F020         	goto	l7983
 16825  00403A                     u5600:
 16826  00403A  501A               	movf	___aomod@divisor^0,w,c
 16827  00403C  5E12               	subwf	___aomod@dividend^0,f,c
 16828  00403E  501B               	movf	(___aomod@divisor+1)^0,w,c
 16829  004040  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
 16830  004042  501C               	movf	(___aomod@divisor+2)^0,w,c
 16831  004044  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
 16832  004046  501D               	movf	(___aomod@divisor+3)^0,w,c
 16833  004048  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
 16834  00404A  501E               	movf	(___aomod@divisor+4)^0,w,c
 16835  00404C  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
 16836  00404E  501F               	movf	(___aomod@divisor+5)^0,w,c
 16837  004050  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
 16838  004052  5020               	movf	(___aomod@divisor+6)^0,w,c
 16839  004054  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
 16840  004056  5021               	movf	(___aomod@divisor+7)^0,w,c
 16841  004058  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
 16842  00405A                     l7983:
 16843  00405A  90D8               	bcf	status,0,c
 16844  00405C  3221               	rrcf	(___aomod@divisor+7)^0,f,c
 16845  00405E  3220               	rrcf	(___aomod@divisor+6)^0,f,c
 16846  004060  321F               	rrcf	(___aomod@divisor+5)^0,f,c
 16847  004062  321E               	rrcf	(___aomod@divisor+4)^0,f,c
 16848  004064  321D               	rrcf	(___aomod@divisor+3)^0,f,c
 16849  004066  321C               	rrcf	(___aomod@divisor+2)^0,f,c
 16850  004068  321B               	rrcf	(___aomod@divisor+1)^0,f,c
 16851  00406A  321A               	rrcf	___aomod@divisor^0,f,c
 16852  00406C  2E22               	decfsz	___aomod@counter^0,f,c
 16853  00406E  EF06  F020         	goto	l7979
 16854  004072                     l7987:
 16855  004072  5023               	movf	___aomod@sign^0,w,c
 16856  004074  B4D8               	btfsc	status,2,c
 16857  004076  EF3F  F020         	goto	u5611
 16858  00407A  EF41  F020         	goto	u5610
 16859  00407E                     u5611:
 16860  00407E  EF51  F020         	goto	l7991
 16861  004082                     u5610:
 16862  004082  1E19               	comf	(___aomod@dividend+7)^0,f,c
 16863  004084  1E18               	comf	(___aomod@dividend+6)^0,f,c
 16864  004086  1E17               	comf	(___aomod@dividend+5)^0,f,c
 16865  004088  1E16               	comf	(___aomod@dividend+4)^0,f,c
 16866  00408A  1E15               	comf	(___aomod@dividend+3)^0,f,c
 16867  00408C  1E14               	comf	(___aomod@dividend+2)^0,f,c
 16868  00408E  1E13               	comf	(___aomod@dividend+1)^0,f,c
 16869  004090  6C12               	negf	___aomod@dividend^0,c
 16870  004092  0E00               	movlw	0
 16871  004094  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 16872  004096  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 16873  004098  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 16874  00409A  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 16875  00409C  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 16876  00409E  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 16877  0040A0  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 16878  0040A2                     l7991:
 16879  0040A2  C012  F012         	movff	___aomod@dividend,?___aomod
 16880  0040A6  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
 16881  0040AA  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
 16882  0040AE  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
 16883  0040B2  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
 16884  0040B6  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
 16885  0040BA  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
 16886  0040BE  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
 16887  0040C2  0012               	return		;funcret
 16888  0040C4                     __end_of___aomod:
 16889                           	callstack 0
 16890                           
 16891 ;; *************** function ___aodiv *****************
 16892 ;; Defined at:
 16893 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 16894 ;; Parameters:    Size  Location     Type
 16895 ;;  dividend        8   17[COMRAM] long long 
 16896 ;;  divisor         8   25[COMRAM] long long 
 16897 ;; Auto vars:     Size  Location     Type
 16898 ;;  quotient        8   35[COMRAM] long long 
 16899 ;;  sign            1   34[COMRAM] unsigned char 
 16900 ;;  counter         1   33[COMRAM] unsigned char 
 16901 ;; Return value:  Size  Location     Type
 16902 ;;                  8   17[COMRAM] long long 
 16903 ;; Registers used:
 16904 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16905 ;; Tracked objects:
 16906 ;;		On entry : 0/0
 16907 ;;		On exit  : 0/0
 16908 ;;		Unchanged: 0/0
 16909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16910 ;;      Params:        16       0       0       0       0       0       0
 16911 ;;      Locals:        10       0       0       0       0       0       0
 16912 ;;      Temps:          0       0       0       0       0       0       0
 16913 ;;      Totals:        26       0       0       0       0       0       0
 16914 ;;Total ram usage:       26 bytes
 16915 ;; Hardware stack levels used: 1
 16916 ;; Hardware stack levels required when called: 4
 16917 ;; This function calls:
 16918 ;;		Nothing
 16919 ;; This function is called by:
 16920 ;;		_dtoa
 16921 ;; This function uses a non-reentrant model
 16922 ;;
 16923                           
 16924                           	psect	text67
 16925  003DD8                     __ptext67:
 16926                           	callstack 0
 16927  003DD8                     ___aodiv:
 16928                           	callstack 17
 16929  003DD8  0E00               	movlw	0
 16930  003DDA  6E23               	movwf	___aodiv@sign^0,c
 16931  003DDC  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
 16932  003DDE  EFF5  F01E         	goto	u5490
 16933  003DE2  EFF3  F01E         	goto	u5491
 16934  003DE6                     u5491:
 16935  003DE6  EF07  F01F         	goto	l7923
 16936  003DEA                     u5490:
 16937  003DEA  1E21               	comf	(___aodiv@divisor+7)^0,f,c
 16938  003DEC  1E20               	comf	(___aodiv@divisor+6)^0,f,c
 16939  003DEE  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
 16940  003DF0  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
 16941  003DF2  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
 16942  003DF4  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
 16943  003DF6  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
 16944  003DF8  6C1A               	negf	___aodiv@divisor^0,c
 16945  003DFA  0E00               	movlw	0
 16946  003DFC  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
 16947  003DFE  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
 16948  003E00  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
 16949  003E02  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
 16950  003E04  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
 16951  003E06  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
 16952  003E08  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
 16953  003E0A  0E01               	movlw	1
 16954  003E0C  6E23               	movwf	___aodiv@sign^0,c
 16955  003E0E                     l7923:
 16956  003E0E  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
 16957  003E10  EF0E  F01F         	goto	u5500
 16958  003E14  EF0C  F01F         	goto	u5501
 16959  003E18                     u5501:
 16960  003E18  EF20  F01F         	goto	l7929
 16961  003E1C                     u5500:
 16962  003E1C  1E19               	comf	(___aodiv@dividend+7)^0,f,c
 16963  003E1E  1E18               	comf	(___aodiv@dividend+6)^0,f,c
 16964  003E20  1E17               	comf	(___aodiv@dividend+5)^0,f,c
 16965  003E22  1E16               	comf	(___aodiv@dividend+4)^0,f,c
 16966  003E24  1E15               	comf	(___aodiv@dividend+3)^0,f,c
 16967  003E26  1E14               	comf	(___aodiv@dividend+2)^0,f,c
 16968  003E28  1E13               	comf	(___aodiv@dividend+1)^0,f,c
 16969  003E2A  6C12               	negf	___aodiv@dividend^0,c
 16970  003E2C  0E00               	movlw	0
 16971  003E2E  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
 16972  003E30  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
 16973  003E32  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
 16974  003E34  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
 16975  003E36  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
 16976  003E38  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
 16977  003E3A  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
 16978  003E3C  0E01               	movlw	1
 16979  003E3E  1A23               	xorwf	___aodiv@sign^0,f,c
 16980  003E40                     l7929:
 16981  003E40  EE20  F024         	lfsr	2,___aodiv@quotient
 16982  003E44  0E07               	movlw	7
 16983  003E46                     u5511:
 16984  003E46  6ADE               	clrf	postinc2,c
 16985  003E48  06E8               	decf	wreg,f,c
 16986  003E4A  E2FD               	bc	u5511
 16987  003E4C  501A               	movf	___aodiv@divisor^0,w,c
 16988  003E4E  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
 16989  003E50  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
 16990  003E52  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
 16991  003E54  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
 16992  003E56  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
 16993  003E58  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
 16994  003E5A  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
 16995  003E5C  B4D8               	btfsc	status,2,c
 16996  003E5E  EF33  F01F         	goto	u5521
 16997  003E62  EF35  F01F         	goto	u5520
 16998  003E66                     u5521:
 16999  003E66  EF87  F01F         	goto	l7951
 17000  003E6A                     u5520:
 17001  003E6A  0E01               	movlw	1
 17002  003E6C  6E22               	movwf	___aodiv@counter^0,c
 17003  003E6E  EF43  F01F         	goto	l7937
 17004  003E72                     l7935:
 17005  003E72  90D8               	bcf	status,0,c
 17006  003E74  361A               	rlcf	___aodiv@divisor^0,f,c
 17007  003E76  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
 17008  003E78  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
 17009  003E7A  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
 17010  003E7C  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
 17011  003E7E  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
 17012  003E80  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
 17013  003E82  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
 17014  003E84  2A22               	incf	___aodiv@counter^0,f,c
 17015  003E86                     l7937:
 17016  003E86  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
 17017  003E88  EF48  F01F         	goto	u5531
 17018  003E8C  EF4A  F01F         	goto	u5530
 17019  003E90                     u5531:
 17020  003E90  EF39  F01F         	goto	l7935
 17021  003E94                     u5530:
 17022  003E94                     l7939:
 17023  003E94  90D8               	bcf	status,0,c
 17024  003E96  3624               	rlcf	___aodiv@quotient^0,f,c
 17025  003E98  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
 17026  003E9A  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
 17027  003E9C  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
 17028  003E9E  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
 17029  003EA0  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
 17030  003EA2  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
 17031  003EA4  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
 17032  003EA6  501A               	movf	___aodiv@divisor^0,w,c
 17033  003EA8  5C12               	subwf	___aodiv@dividend^0,w,c
 17034  003EAA  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17035  003EAC  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
 17036  003EAE  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17037  003EB0  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
 17038  003EB2  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17039  003EB4  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
 17040  003EB6  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17041  003EB8  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
 17042  003EBA  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17043  003EBC  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
 17044  003EBE  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17045  003EC0  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
 17046  003EC2  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17047  003EC4  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
 17048  003EC6  A0D8               	btfss	status,0,c
 17049  003EC8  EF68  F01F         	goto	u5541
 17050  003ECC  EF6A  F01F         	goto	u5540
 17051  003ED0                     u5541:
 17052  003ED0  EF7B  F01F         	goto	l7947
 17053  003ED4                     u5540:
 17054  003ED4  501A               	movf	___aodiv@divisor^0,w,c
 17055  003ED6  5E12               	subwf	___aodiv@dividend^0,f,c
 17056  003ED8  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17057  003EDA  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
 17058  003EDC  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17059  003EDE  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
 17060  003EE0  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17061  003EE2  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
 17062  003EE4  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17063  003EE6  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
 17064  003EE8  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17065  003EEA  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
 17066  003EEC  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17067  003EEE  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
 17068  003EF0  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17069  003EF2  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
 17070  003EF4  8024               	bsf	___aodiv@quotient^0,0,c
 17071  003EF6                     l7947:
 17072  003EF6  90D8               	bcf	status,0,c
 17073  003EF8  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
 17074  003EFA  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
 17075  003EFC  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
 17076  003EFE  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
 17077  003F00  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
 17078  003F02  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
 17079  003F04  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
 17080  003F06  321A               	rrcf	___aodiv@divisor^0,f,c
 17081  003F08  2E22               	decfsz	___aodiv@counter^0,f,c
 17082  003F0A  EF4A  F01F         	goto	l7939
 17083  003F0E                     l7951:
 17084  003F0E  5023               	movf	___aodiv@sign^0,w,c
 17085  003F10  B4D8               	btfsc	status,2,c
 17086  003F12  EF8D  F01F         	goto	u5551
 17087  003F16  EF8F  F01F         	goto	u5550
 17088  003F1A                     u5551:
 17089  003F1A  EF9F  F01F         	goto	l7955
 17090  003F1E                     u5550:
 17091  003F1E  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
 17092  003F20  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
 17093  003F22  1E29               	comf	(___aodiv@quotient+5)^0,f,c
 17094  003F24  1E28               	comf	(___aodiv@quotient+4)^0,f,c
 17095  003F26  1E27               	comf	(___aodiv@quotient+3)^0,f,c
 17096  003F28  1E26               	comf	(___aodiv@quotient+2)^0,f,c
 17097  003F2A  1E25               	comf	(___aodiv@quotient+1)^0,f,c
 17098  003F2C  6C24               	negf	___aodiv@quotient^0,c
 17099  003F2E  0E00               	movlw	0
 17100  003F30  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
 17101  003F32  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
 17102  003F34  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
 17103  003F36  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
 17104  003F38  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
 17105  003F3A  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
 17106  003F3C  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
 17107  003F3E                     l7955:
 17108  003F3E  C024  F012         	movff	___aodiv@quotient,?___aodiv
 17109  003F42  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
 17110  003F46  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
 17111  003F4A  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
 17112  003F4E  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
 17113  003F52  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
 17114  003F56  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
 17115  003F5A  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
 17116  003F5E  0012               	return		;funcret
 17117  003F60                     __end_of___aodiv:
 17118                           	callstack 0
 17119                           
 17120 ;; *************** function _LCD_DrawText *****************
 17121 ;; Defined at:
 17122 ;;		line 713 in file "libraries/lcd_highlevel.c"
 17123 ;; Parameters:    Size  Location     Type
 17124 ;;  msg             2   31[COMRAM] PTR const unsigned char 
 17125 ;;		 -> g1.str(2), touchScreenController@s(20), STR_14(13), STR_13(13), 
 17126 ;;		 -> STR_12(11), STR_11(8), STR_10(9), STR_9(4), 
 17127 ;;		 -> STR_8(4), STR_7(8), STR_6(9), STR_5(9), 
 17128 ;;		 -> STR_4(11), g1(239), STR_1(10), 
 17129 ;;  font            2   33[COMRAM] PTR const struct .
 17130 ;;		 -> arialNarrow_12ptFontInfo(7), 
 17131 ;;  align           1   35[COMRAM] enum E355
 17132 ;;  posX            2   36[COMRAM] unsigned short 
 17133 ;;  posY            2   38[COMRAM] unsigned short 
 17134 ;;  color           2   40[COMRAM] unsigned short 
 17135 ;;  bg_color        2   42[COMRAM] unsigned short 
 17136 ;; Auto vars:     Size  Location     Type
 17137 ;;  posXEnd         2   58[COMRAM] unsigned short 
 17138 ;;  posYEnd         2   56[COMRAM] unsigned short 
 17139 ;;  yOffset         2   52[COMRAM] unsigned short 
 17140 ;;  offset          2   50[COMRAM] unsigned short 
 17141 ;;  width           1   64[COMRAM] unsigned char 
 17142 ;;  x               1   63[COMRAM] unsigned char 
 17143 ;;  tempChar        1   62[COMRAM] char 
 17144 ;;  i               1   61[COMRAM] unsigned char 
 17145 ;;  y               1   60[COMRAM] unsigned char 
 17146 ;;  fontPixel       1   55[COMRAM] unsigned char 
 17147 ;;  fontByte        1   54[COMRAM] unsigned char 
 17148 ;; Return value:  Size  Location     Type
 17149 ;;                  1    wreg      void 
 17150 ;; Registers used:
 17151 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17152 ;; Tracked objects:
 17153 ;;		On entry : 0/0
 17154 ;;		On exit  : 0/0
 17155 ;;		Unchanged: 0/0
 17156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17157 ;;      Params:        13       0       0       0       0       0       0
 17158 ;;      Locals:        15       0       0       0       0       0       0
 17159 ;;      Temps:          6       0       0       0       0       0       0
 17160 ;;      Totals:        34       0       0       0       0       0       0
 17161 ;;Total ram usage:       34 bytes
 17162 ;; Hardware stack levels used: 1
 17163 ;; Hardware stack levels required when called: 5
 17164 ;; This function calls:
 17165 ;;		___awdiv
 17166 ;;		___wmul
 17167 ;;		_strlen
 17168 ;; This function is called by:
 17169 ;;		_Factory_init
 17170 ;;		_Score_draw
 17171 ;;		_Menu_welcomeDraw
 17172 ;;		_Menu_parametersDraw
 17173 ;;		_Menu_endGame
 17174 ;;		_LCD_ButtonDraw
 17175 ;;		_touchScreenController
 17176 ;; This function uses a non-reentrant model
 17177 ;;
 17178                           
 17179                           	psect	text68
 17180  001DD6                     __ptext68:
 17181                           	callstack 0
 17182  001DD6                     _LCD_DrawText:
 17183                           	callstack 20
 17184  001DD6                     
 17185                           ;libraries/lcd_highlevel.c: 713: void LCD_DrawText(const uint8_t * msg,const FONT_INFO *
      +                           font, ALIGN align,;libraries/lcd_highlevel.c: 714:         uint16_t posX, uint16_t posY
      +                          , uint16_t color, uint16_t bg_color);libraries/lcd_highlevel.c: 715: {;libraries/lcd_hig
      +                          hlevel.c: 716:   uint8_t x,y,i;;libraries/lcd_highlevel.c: 717:   int8_t tempChar;;libra
      +                          ries/lcd_highlevel.c: 718:   uint16_t offset;;libraries/lcd_highlevel.c: 719:   uint8_t 
      +                          width=0;
 17186  001DD6  0E00               	movlw	0
 17187  001DD8  6E41               	movwf	LCD_DrawText@width^0,c
 17188                           
 17189                           ;libraries/lcd_highlevel.c: 720:   uint8_t fontByte,fontPixel;;libraries/lcd_highlevel.c
      +                          : 721:   uint16_t posYEnd, posXEnd, yOffset;;libraries/lcd_highlevel.c: 725:   for(i=0;i
      +                          <strlen(msg);i++)
 17190  001DDA  0E00               	movlw	0
 17191  001DDC  6E3E               	movwf	LCD_DrawText@i^0,c
 17192  001DDE  EF40  F00F         	goto	l8693
 17193  001DE2                     l8687:
 17194                           
 17195                           ;libraries/lcd_highlevel.c: 726:   {;libraries/lcd_highlevel.c: 727:     tempChar = (msg
      +                          [i]) - font->start_char;
 17196  001DE2  0E01               	movlw	1
 17197  001DE4  2422               	addwf	LCD_DrawText@font^0,w,c
 17198  001DE6  6E2D               	movwf	??_LCD_DrawText^0,c
 17199  001DE8  0E00               	movlw	0
 17200  001DEA  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17201  001DEC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17202  001DEE  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17203  001DF2  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17204  001DF6                     	if	0	;tblptru may be non-zero
 17205  001DF6                     	endif
 17206  001DF6                     	if	0	;tblptru may be non-zero
 17207  001DF6                     	endif
 17208  001DF6  0008               	tblrd		*
 17209  001DF8  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17210  001DFC  503E               	movf	LCD_DrawText@i^0,w,c
 17211  001DFE  2420               	addwf	LCD_DrawText@msg^0,w,c
 17212  001E00  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17213  001E02  0E00               	movlw	0
 17214  001E04  2021               	addwfc	(LCD_DrawText@msg+1)^0,w,c
 17215  001E06  6E31               	movwf	(??_LCD_DrawText+4)^0,c
 17216  001E08  C030  FFF6         	movff	??_LCD_DrawText+3,tblptrl
 17217  001E0C  C031  FFF7         	movff	??_LCD_DrawText+4,tblptrh
 17218  001E10  6AF8               	clrf	tblptru,c
 17219  001E12  0E05               	movlw	(high __ramtop+-1)
 17220  001E14  64F7               	cpfsgt	tblptrh,c
 17221  001E16  D003               	bra	u6197
 17222  001E18  0008               	tblrd		*
 17223  001E1A  50F5               	movf	tablat,w,c
 17224  001E1C  D005               	bra	u6190
 17225  001E1E                     u6197:
 17226  001E1E  CFF6 FFE1          	movff	tblptrl,fsr1l
 17227  001E22  CFF7 FFE2          	movff	tblptrh,fsr1h
 17228  001E26  50E7               	movf	indf1,w,c
 17229  001E28                     u6190:
 17230  001E28  6E32               	movwf	(??_LCD_DrawText+5)^0,c
 17231  001E2A  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17232  001E2C  5C32               	subwf	(??_LCD_DrawText+5)^0,w,c
 17233  001E2E  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17234  001E30                     
 17235                           ;libraries/lcd_highlevel.c: 728:     width += font->descriptor[tempChar].width+2;
 17236  001E30  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17237  001E32  6E1A               	movwf	___wmul@multiplier^0,c
 17238  001E34  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17239  001E36  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17240  001E38  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17241  001E3A  0E00               	movlw	0
 17242  001E3C  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17243  001E3E  0E03               	movlw	3
 17244  001E40  6E1C               	movwf	___wmul@multiplicand^0,c
 17245  001E42  EC47  F031         	call	___wmul	;wreg free
 17246  001E46  0E03               	movlw	3
 17247  001E48  2422               	addwf	LCD_DrawText@font^0,w,c
 17248  001E4A  6E2D               	movwf	??_LCD_DrawText^0,c
 17249  001E4C  0E00               	movlw	0
 17250  001E4E  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17251  001E50  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17252  001E52  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17253  001E56  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17254  001E5A                     	if	0	;tblptru may be non-zero
 17255  001E5A                     	endif
 17256  001E5A                     	if	0	;tblptru may be non-zero
 17257  001E5A                     	endif
 17258  001E5A  0009               	tblrd		*+
 17259  001E5C  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17260  001E60  0009               	tblrd		*+
 17261  001E62  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17262  001E66  501A               	movf	?___wmul^0,w,c
 17263  001E68  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17264  001E6A  501B               	movf	(?___wmul+1)^0,w,c
 17265  001E6C  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17266  001E6E  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17267  001E72  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17268  001E76                     	if	0	;tblptru may be non-zero
 17269  001E76                     	endif
 17270  001E76                     	if	0	;tblptru may be non-zero
 17271  001E76                     	endif
 17272  001E76  0008               	tblrd		*
 17273  001E78  50F5               	movf	tablat,w,c
 17274  001E7A  0F02               	addlw	2
 17275  001E7C  2641               	addwf	LCD_DrawText@width^0,f,c
 17276  001E7E                     
 17277                           ;libraries/lcd_highlevel.c: 729:   }
 17278  001E7E  2A3E               	incf	LCD_DrawText@i^0,f,c
 17279  001E80                     l8693:
 17280  001E80  C020  F012         	movff	LCD_DrawText@msg,strlen@s
 17281  001E84  C021  F013         	movff	LCD_DrawText@msg+1,strlen@s+1
 17282  001E88  EC1A  F030         	call	_strlen	;wreg free
 17283  001E8C  503E               	movf	LCD_DrawText@i^0,w,c
 17284  001E8E  6E2D               	movwf	??_LCD_DrawText^0,c
 17285  001E90  6A2E               	clrf	(??_LCD_DrawText+1)^0,c
 17286  001E92  5012               	movf	?_strlen^0,w,c
 17287  001E94  5C2D               	subwf	??_LCD_DrawText^0,w,c
 17288  001E96  5013               	movf	(?_strlen+1)^0,w,c
 17289  001E98  582E               	subwfb	(??_LCD_DrawText+1)^0,w,c
 17290  001E9A  A0D8               	btfss	status,0,c
 17291  001E9C  EF52  F00F         	goto	u6201
 17292  001EA0  EF54  F00F         	goto	u6200
 17293  001EA4                     u6201:
 17294  001EA4  EFF1  F00E         	goto	l8687
 17295  001EA8                     u6200:
 17296  001EA8                     
 17297                           ;libraries/lcd_highlevel.c: 730:   if(align == A_RIGHT)
 17298  001EA8  0424               	decf	LCD_DrawText@align^0,w,c
 17299  001EAA  A4D8               	btfss	status,2,c
 17300  001EAC  EF5A  F00F         	goto	u6211
 17301  001EB0  EF5C  F00F         	goto	u6210
 17302  001EB4                     u6211:
 17303  001EB4  EF65  F00F         	goto	l8699
 17304  001EB8                     u6210:
 17305  001EB8                     
 17306                           ;libraries/lcd_highlevel.c: 731:   {;libraries/lcd_highlevel.c: 732:     posX = posX - w
      +                          idth;
 17307  001EB8  5041               	movf	LCD_DrawText@width^0,w,c
 17308  001EBA  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17309  001EBC  6E25               	movwf	LCD_DrawText@posX^0,c
 17310  001EBE  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17311  001EC0  A0D8               	btfss	status,0,c
 17312  001EC2  0426               	decf	(LCD_DrawText@posX+1)^0,w,c
 17313  001EC4  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17314                           
 17315                           ;libraries/lcd_highlevel.c: 733:   }
 17316  001EC6  EF7D  F00F         	goto	l8703
 17317  001ECA                     l8699:
 17318  001ECA  0E02               	movlw	2
 17319  001ECC  1824               	xorwf	LCD_DrawText@align^0,w,c
 17320  001ECE  A4D8               	btfss	status,2,c
 17321  001ED0  EF6C  F00F         	goto	u6221
 17322  001ED4  EF6E  F00F         	goto	u6220
 17323  001ED8                     u6221:
 17324  001ED8  EF7D  F00F         	goto	l8703
 17325  001EDC                     u6220:
 17326  001EDC                     
 17327                           ;libraries/lcd_highlevel.c: 735:   {;libraries/lcd_highlevel.c: 736:     posX = posX - w
      +                          idth / 2;
 17328  001EDC  C041  F012         	movff	LCD_DrawText@width,___awdiv@dividend
 17329  001EE0  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17330  001EE2  0E00               	movlw	0
 17331  001EE4  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17332  001EE6  0E02               	movlw	2
 17333  001EE8  6E14               	movwf	___awdiv@divisor^0,c
 17334  001EEA  ECD9  F028         	call	___awdiv	;wreg free
 17335  001EEE  5012               	movf	?___awdiv^0,w,c
 17336  001EF0  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17337  001EF2  6E25               	movwf	LCD_DrawText@posX^0,c
 17338  001EF4  5013               	movf	(?___awdiv+1)^0,w,c
 17339  001EF6  5826               	subwfb	(LCD_DrawText@posX+1)^0,w,c
 17340  001EF8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17341  001EFA                     l8703:
 17342                           
 17343                           ;libraries/lcd_highlevel.c: 740:   {;libraries/lcd_highlevel.c: 741:     tempChar = (*ms
      +                          g) - font->start_char;
 17344  001EFA  0E01               	movlw	1
 17345  001EFC  2422               	addwf	LCD_DrawText@font^0,w,c
 17346  001EFE  6E2D               	movwf	??_LCD_DrawText^0,c
 17347  001F00  0E00               	movlw	0
 17348  001F02  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17349  001F04  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17350  001F06  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17351  001F0A  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17352  001F0E                     	if	0	;tblptru may be non-zero
 17353  001F0E                     	endif
 17354  001F0E                     	if	0	;tblptru may be non-zero
 17355  001F0E                     	endif
 17356  001F0E  0008               	tblrd		*
 17357  001F10  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17358  001F14  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17359  001F18  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17360  001F1C  6AF8               	clrf	tblptru,c
 17361  001F1E  0E05               	movlw	(high __ramtop+-1)
 17362  001F20  64F7               	cpfsgt	tblptrh,c
 17363  001F22  D003               	bra	u6237
 17364  001F24  0008               	tblrd		*
 17365  001F26  50F5               	movf	tablat,w,c
 17366  001F28  D005               	bra	u6230
 17367  001F2A                     u6237:
 17368  001F2A  CFF6 FFE1          	movff	tblptrl,fsr1l
 17369  001F2E  CFF7 FFE2          	movff	tblptrh,fsr1h
 17370  001F32  50E7               	movf	indf1,w,c
 17371  001F34                     u6230:
 17372  001F34  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17373  001F36  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17374  001F38  5C30               	subwf	(??_LCD_DrawText+3)^0,w,c
 17375  001F3A  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17376  001F3C                     
 17377                           ;libraries/lcd_highlevel.c: 742:     offset = font->descriptor[tempChar].offset;
 17378  001F3C  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17379  001F3E  6E1A               	movwf	___wmul@multiplier^0,c
 17380  001F40  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17381  001F42  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17382  001F44  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17383  001F46  0E00               	movlw	0
 17384  001F48  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17385  001F4A  0E03               	movlw	3
 17386  001F4C  6E1C               	movwf	___wmul@multiplicand^0,c
 17387  001F4E  EC47  F031         	call	___wmul	;wreg free
 17388  001F52  0E03               	movlw	3
 17389  001F54  2422               	addwf	LCD_DrawText@font^0,w,c
 17390  001F56  6E2D               	movwf	??_LCD_DrawText^0,c
 17391  001F58  0E00               	movlw	0
 17392  001F5A  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17393  001F5C  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17394  001F5E  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17395  001F62  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17396  001F66                     	if	0	;tblptru may be non-zero
 17397  001F66                     	endif
 17398  001F66                     	if	0	;tblptru may be non-zero
 17399  001F66                     	endif
 17400  001F66  0009               	tblrd		*+
 17401  001F68  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17402  001F6C  0009               	tblrd		*+
 17403  001F6E  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17404  001F72  501A               	movf	?___wmul^0,w,c
 17405  001F74  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17406  001F76  501B               	movf	(?___wmul+1)^0,w,c
 17407  001F78  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17408  001F7A  0E01               	movlw	1
 17409  001F7C  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17410  001F7E  0E00               	movlw	0
 17411  001F80  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17412  001F82  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17413  001F86  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17414  001F8A                     	if	0	;tblptru may be non-zero
 17415  001F8A                     	endif
 17416  001F8A                     	if	0	;tblptru may be non-zero
 17417  001F8A                     	endif
 17418  001F8A  0009               	tblrd		*+
 17419  001F8C  CFF5 F033          	movff	tablat,LCD_DrawText@offset
 17420  001F90  000A               	tblrd		*-
 17421  001F92  CFF5 F034          	movff	tablat,LCD_DrawText@offset+1
 17422  001F96                     
 17423                           ;libraries/lcd_highlevel.c: 743:     width = font->descriptor[tempChar].width;
 17424  001F96  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17425  001F98  6E1A               	movwf	___wmul@multiplier^0,c
 17426  001F9A  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17427  001F9C  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17428  001F9E  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17429  001FA0  0E00               	movlw	0
 17430  001FA2  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17431  001FA4  0E03               	movlw	3
 17432  001FA6  6E1C               	movwf	___wmul@multiplicand^0,c
 17433  001FA8  EC47  F031         	call	___wmul	;wreg free
 17434  001FAC  0E03               	movlw	3
 17435  001FAE  2422               	addwf	LCD_DrawText@font^0,w,c
 17436  001FB0  6E2D               	movwf	??_LCD_DrawText^0,c
 17437  001FB2  0E00               	movlw	0
 17438  001FB4  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17439  001FB6  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17440  001FB8  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17441  001FBC  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17442  001FC0                     	if	0	;tblptru may be non-zero
 17443  001FC0                     	endif
 17444  001FC0                     	if	0	;tblptru may be non-zero
 17445  001FC0                     	endif
 17446  001FC0  0009               	tblrd		*+
 17447  001FC2  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17448  001FC6  0009               	tblrd		*+
 17449  001FC8  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17450  001FCC  501A               	movf	?___wmul^0,w,c
 17451  001FCE  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17452  001FD0  501B               	movf	(?___wmul+1)^0,w,c
 17453  001FD2  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17454  001FD4  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17455  001FD8  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17456  001FDC                     	if	0	;tblptru may be non-zero
 17457  001FDC                     	endif
 17458  001FDC                     	if	0	;tblptru may be non-zero
 17459  001FDC                     	endif
 17460  001FDC  0008               	tblrd		*
 17461  001FDE  CFF5 F041          	movff	tablat,LCD_DrawText@width
 17462  001FE2                     
 17463                           ;libraries/lcd_highlevel.c: 748:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17464  001FE2  0E2A               	movlw	42
 17465  001FE4  6E80               	movwf	128,c	;volatile
 17466  001FE6  988B               	bcf	3979,4,c	;volatile
 17467  001FE8  968B               	bcf	3979,3,c	;volatile
 17468  001FEA  868B               	bsf	3979,3,c	;volatile
 17469  001FEC  888B               	bsf	3979,4,c	;volatile
 17470  001FEE                     
 17471                           ;libraries/lcd_highlevel.c: 749:     PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 17472  001FEE  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17473  001FF0  6E80               	movwf	128,c	;volatile
 17474  001FF2  968B               	bcf	3979,3,c	;volatile
 17475  001FF4  868B               	bsf	3979,3,c	;volatile
 17476  001FF6                     
 17477                           ;libraries/lcd_highlevel.c: 750:     PORTA = posX; LATC3 = 0; LATC3 = 1;;
 17478  001FF6  C025  FF80         	movff	LCD_DrawText@posX,3968	;volatile
 17479  001FFA  968B               	bcf	3979,3,c	;volatile
 17480  001FFC  868B               	bsf	3979,3,c	;volatile
 17481  001FFE                     
 17482                           ;libraries/lcd_highlevel.c: 751:     posXEnd = posX+width-1+2;
 17483  001FFE  5041               	movf	LCD_DrawText@width^0,w,c
 17484  002000  2425               	addwf	LCD_DrawText@posX^0,w,c
 17485  002002  6E2D               	movwf	??_LCD_DrawText^0,c
 17486  002004  0E00               	movlw	0
 17487  002006  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 17488  002008  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17489  00200A  0E01               	movlw	1
 17490  00200C  242D               	addwf	??_LCD_DrawText^0,w,c
 17491  00200E  6E3B               	movwf	LCD_DrawText@posXEnd^0,c
 17492  002010  0E00               	movlw	0
 17493  002012  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17494  002014  6E3C               	movwf	(LCD_DrawText@posXEnd+1)^0,c
 17495  002016                     
 17496                           ;libraries/lcd_highlevel.c: 752:     PORTA = posXEnd>>8; LATC3 = 0; LATC3 = 1;;
 17497  002016  503C               	movf	(LCD_DrawText@posXEnd+1)^0,w,c
 17498  002018  6E80               	movwf	128,c	;volatile
 17499  00201A  968B               	bcf	3979,3,c	;volatile
 17500  00201C  868B               	bsf	3979,3,c	;volatile
 17501  00201E                     
 17502                           ;libraries/lcd_highlevel.c: 753:     PORTA = posXEnd; LATC3 = 0; LATC3 = 1;;
 17503  00201E  C03B  FF80         	movff	LCD_DrawText@posXEnd,3968	;volatile
 17504  002022  968B               	bcf	3979,3,c	;volatile
 17505  002024  868B               	bsf	3979,3,c	;volatile
 17506  002026                     
 17507                           ;libraries/lcd_highlevel.c: 755:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17508  002026  0E2B               	movlw	43
 17509  002028  6E80               	movwf	128,c	;volatile
 17510  00202A  988B               	bcf	3979,4,c	;volatile
 17511  00202C  968B               	bcf	3979,3,c	;volatile
 17512  00202E  868B               	bsf	3979,3,c	;volatile
 17513  002030  888B               	bsf	3979,4,c	;volatile
 17514  002032                     
 17515                           ;libraries/lcd_highlevel.c: 756:     PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 17516  002032  5028               	movf	(LCD_DrawText@posY+1)^0,w,c
 17517  002034  6E80               	movwf	128,c	;volatile
 17518  002036  968B               	bcf	3979,3,c	;volatile
 17519  002038  868B               	bsf	3979,3,c	;volatile
 17520  00203A                     
 17521                           ;libraries/lcd_highlevel.c: 757:     PORTA = posY; LATC3 = 0; LATC3 = 1;;
 17522  00203A  C027  FF80         	movff	LCD_DrawText@posY,3968	;volatile
 17523  00203E  968B               	bcf	3979,3,c	;volatile
 17524  002040  868B               	bsf	3979,3,c	;volatile
 17525  002042                     
 17526                           ;libraries/lcd_highlevel.c: 758:     posYEnd = posY + font->height-1;
 17527  002042  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 17528  002046  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 17529  00204A                     	if	0	;tblptru may be non-zero
 17530  00204A                     	endif
 17531  00204A                     	if	0	;tblptru may be non-zero
 17532  00204A                     	endif
 17533  00204A  0008               	tblrd		*
 17534  00204C  50F5               	movf	tablat,w,c
 17535  00204E  2427               	addwf	LCD_DrawText@posY^0,w,c
 17536  002050  6E2D               	movwf	??_LCD_DrawText^0,c
 17537  002052  0E00               	movlw	0
 17538  002054  2028               	addwfc	(LCD_DrawText@posY+1)^0,w,c
 17539  002056  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17540  002058  0EFF               	movlw	255
 17541  00205A  242D               	addwf	??_LCD_DrawText^0,w,c
 17542  00205C  6E39               	movwf	LCD_DrawText@posYEnd^0,c
 17543  00205E  0EFF               	movlw	255
 17544  002060  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17545  002062  6E3A               	movwf	(LCD_DrawText@posYEnd+1)^0,c
 17546  002064                     
 17547                           ;libraries/lcd_highlevel.c: 759:     PORTA = posYEnd>>8; LATC3 = 0; LATC3 = 1;;
 17548  002064  503A               	movf	(LCD_DrawText@posYEnd+1)^0,w,c
 17549  002066  6E80               	movwf	128,c	;volatile
 17550  002068  968B               	bcf	3979,3,c	;volatile
 17551  00206A  868B               	bsf	3979,3,c	;volatile
 17552  00206C                     
 17553                           ;libraries/lcd_highlevel.c: 760:     PORTA = posYEnd; LATC3 = 0; LATC3 = 1;;
 17554  00206C  C039  FF80         	movff	LCD_DrawText@posYEnd,3968	;volatile
 17555  002070  968B               	bcf	3979,3,c	;volatile
 17556  002072  868B               	bsf	3979,3,c	;volatile
 17557  002074                     
 17558                           ;libraries/lcd_highlevel.c: 761:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17559  002074  0E2C               	movlw	44
 17560  002076  6E80               	movwf	128,c	;volatile
 17561  002078  988B               	bcf	3979,4,c	;volatile
 17562  00207A  968B               	bcf	3979,3,c	;volatile
 17563  00207C  868B               	bsf	3979,3,c	;volatile
 17564  00207E  888B               	bsf	3979,4,c	;volatile
 17565  002080                     
 17566                           ;libraries/lcd_highlevel.c: 763:     for(y=0;y<font->height;y++)
 17567  002080  0E00               	movlw	0
 17568  002082  6E3D               	movwf	LCD_DrawText@y^0,c
 17569  002084  EFDB  F010         	goto	l8855
 17570  002088                     l8793:
 17571                           
 17572                           ;libraries/lcd_highlevel.c: 764:     {;libraries/lcd_highlevel.c: 765:       yOffset = o
      +                          ffset + (y * ((width+7)/8));
 17573  002088  C03D  F01A         	movff	LCD_DrawText@y,___wmul@multiplier
 17574  00208C  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17575  00208E  0E00               	movlw	0
 17576  002090  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17577  002092  0E08               	movlw	8
 17578  002094  6E14               	movwf	___awdiv@divisor^0,c
 17579  002096  0E07               	movlw	7
 17580  002098  2441               	addwf	LCD_DrawText@width^0,w,c
 17581  00209A  6E12               	movwf	___awdiv@dividend^0,c
 17582  00209C  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17583  00209E  0E00               	movlw	0
 17584  0020A0  2213               	addwfc	(___awdiv@dividend+1)^0,f,c
 17585  0020A2  ECD9  F028         	call	___awdiv	;wreg free
 17586  0020A6  C012  F01C         	movff	?___awdiv,___wmul@multiplicand
 17587  0020AA  C013  F01D         	movff	?___awdiv+1,___wmul@multiplicand+1
 17588  0020AE  EC47  F031         	call	___wmul	;wreg free
 17589  0020B2  5033               	movf	LCD_DrawText@offset^0,w,c
 17590  0020B4  241A               	addwf	?___wmul^0,w,c
 17591  0020B6  6E35               	movwf	LCD_DrawText@yOffset^0,c
 17592  0020B8  5034               	movf	(LCD_DrawText@offset+1)^0,w,c
 17593  0020BA  201B               	addwfc	(?___wmul+1)^0,w,c
 17594  0020BC  6E36               	movwf	(LCD_DrawText@yOffset+1)^0,c
 17595  0020BE                     
 17596                           ;libraries/lcd_highlevel.c: 766:       for(x=0;x<width;x++)
 17597  0020BE  0E00               	movlw	0
 17598  0020C0  6E40               	movwf	LCD_DrawText@x^0,c
 17599  0020C2  EFBA  F010         	goto	l8829
 17600  0020C6                     l8797:
 17601                           
 17602                           ;libraries/lcd_highlevel.c: 767:       {;libraries/lcd_highlevel.c: 768:         fontByt
      +                          e = font->bitmap[yOffset + (x/8)];
 17603  0020C6  C040  F012         	movff	LCD_DrawText@x,___awdiv@dividend
 17604  0020CA  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17605  0020CC  0E00               	movlw	0
 17606  0020CE  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17607  0020D0  0E08               	movlw	8
 17608  0020D2  6E14               	movwf	___awdiv@divisor^0,c
 17609  0020D4  ECD9  F028         	call	___awdiv	;wreg free
 17610  0020D8  0E05               	movlw	5
 17611  0020DA  2422               	addwf	LCD_DrawText@font^0,w,c
 17612  0020DC  6E2D               	movwf	??_LCD_DrawText^0,c
 17613  0020DE  0E00               	movlw	0
 17614  0020E0  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17615  0020E2  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17616  0020E4  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17617  0020E8  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17618  0020EC                     	if	0	;tblptru may be non-zero
 17619  0020EC                     	endif
 17620  0020EC                     	if	0	;tblptru may be non-zero
 17621  0020EC                     	endif
 17622  0020EC  0009               	tblrd		*+
 17623  0020EE  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17624  0020F2  0009               	tblrd		*+
 17625  0020F4  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17626  0020F8  5012               	movf	?___awdiv^0,w,c
 17627  0020FA  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17628  0020FC  5013               	movf	(?___awdiv+1)^0,w,c
 17629  0020FE  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17630  002100  5035               	movf	LCD_DrawText@yOffset^0,w,c
 17631  002102  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17632  002104  5036               	movf	(LCD_DrawText@yOffset+1)^0,w,c
 17633  002106  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17634  002108  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17635  00210C  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17636  002110                     	if	0	;tblptru may be non-zero
 17637  002110                     	endif
 17638  002110                     	if	0	;tblptru may be non-zero
 17639  002110                     	endif
 17640  002110  0008               	tblrd		*
 17641  002112  CFF5 F037          	movff	tablat,LCD_DrawText@fontByte
 17642  002116                     
 17643                           ;libraries/lcd_highlevel.c: 769:         fontPixel = fontByte & (0x80 >> (x%8));
 17644  002116  C040  F02D         	movff	LCD_DrawText@x,??_LCD_DrawText
 17645  00211A  0E07               	movlw	7
 17646  00211C  162D               	andwf	??_LCD_DrawText^0,f,c
 17647  00211E  0E80               	movlw	128
 17648  002120  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17649  002122  0E00               	movlw	0
 17650  002124  6E2F               	movwf	(??_LCD_DrawText+2)^0,c
 17651  002126  2A2D               	incf	??_LCD_DrawText^0,f,c
 17652  002128  EF99  F010         	goto	u6244
 17653  00212C                     u6245:
 17654  00212C  342F               	rlcf	(??_LCD_DrawText+2)^0,w,c
 17655  00212E  322F               	rrcf	(??_LCD_DrawText+2)^0,f,c
 17656  002130  322E               	rrcf	(??_LCD_DrawText+1)^0,f,c
 17657  002132                     u6244:
 17658  002132  2E2D               	decfsz	??_LCD_DrawText^0,f,c
 17659  002134  EF96  F010         	goto	u6245
 17660  002138  502E               	movf	(??_LCD_DrawText+1)^0,w,c
 17661  00213A  1437               	andwf	LCD_DrawText@fontByte^0,w,c
 17662  00213C  6E38               	movwf	LCD_DrawText@fontPixel^0,c
 17663  00213E                     
 17664                           ;libraries/lcd_highlevel.c: 770:         if(fontPixel != 0)
 17665  00213E  5038               	movf	LCD_DrawText@fontPixel^0,w,c
 17666  002140  B4D8               	btfsc	status,2,c
 17667  002142  EFA5  F010         	goto	u6251
 17668  002146  EFA7  F010         	goto	u6250
 17669  00214A                     u6251:
 17670  00214A  EFB1  F010         	goto	l8815
 17671  00214E                     u6250:
 17672  00214E                     
 17673                           ;libraries/lcd_highlevel.c: 771:         {;libraries/lcd_highlevel.c: 772:           POR
      +                          TA = color>>8; LATC3 = 0; LATC3 = 1;;
 17674  00214E  502A               	movf	(LCD_DrawText@color+1)^0,w,c
 17675  002150  6E80               	movwf	128,c	;volatile
 17676  002152  968B               	bcf	3979,3,c	;volatile
 17677  002154  868B               	bsf	3979,3,c	;volatile
 17678  002156                     
 17679                           ;libraries/lcd_highlevel.c: 773:           PORTA = color; LATC3 = 0; LATC3 = 1;;
 17680  002156  C029  FF80         	movff	LCD_DrawText@color,3968	;volatile
 17681  00215A                     l8811:
 17682  00215A  968B               	bcf	3979,3,c	;volatile
 17683  00215C  868B               	bsf	3979,3,c	;volatile
 17684                           
 17685                           ;libraries/lcd_highlevel.c: 774:         }
 17686  00215E  EFB9  F010         	goto	l8827
 17687  002162                     l8815:
 17688                           
 17689                           ;libraries/lcd_highlevel.c: 776:         {;libraries/lcd_highlevel.c: 777:           POR
      +                          TA = bg_color>>8; LATC3 = 0; LATC3 = 1;;
 17690  002162  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 17691  002164  6E80               	movwf	128,c	;volatile
 17692  002166  968B               	bcf	3979,3,c	;volatile
 17693  002168  868B               	bsf	3979,3,c	;volatile
 17694  00216A                     
 17695                           ;libraries/lcd_highlevel.c: 778:           PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 17696  00216A  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 17697  00216E  EFAD  F010         	goto	l8811
 17698  002172                     l8827:
 17699                           
 17700                           ;libraries/lcd_highlevel.c: 780:       }
 17701  002172  2A40               	incf	LCD_DrawText@x^0,f,c
 17702  002174                     l8829:
 17703  002174  5041               	movf	LCD_DrawText@width^0,w,c
 17704  002176  5C40               	subwf	LCD_DrawText@x^0,w,c
 17705  002178  A0D8               	btfss	status,0,c
 17706  00217A  EFC1  F010         	goto	u6261
 17707  00217E  EFC3  F010         	goto	u6260
 17708  002182                     u6261:
 17709  002182  EF63  F010         	goto	l8797
 17710  002186                     u6260:
 17711  002186                     
 17712                           ;libraries/lcd_highlevel.c: 781:       for(x=0;x<2;x++)
 17713  002186  0E00               	movlw	0
 17714  002188  6E40               	movwf	LCD_DrawText@x^0,c
 17715  00218A                     l8833:
 17716  00218A  0E01               	movlw	1
 17717  00218C  6440               	cpfsgt	LCD_DrawText@x^0,c
 17718  00218E  EFCB  F010         	goto	u6271
 17719  002192  EFCD  F010         	goto	u6270
 17720  002196                     u6271:
 17721  002196  EFCF  F010         	goto	l8837
 17722  00219A                     u6270:
 17723  00219A  EFDA  F010         	goto	l8853
 17724  00219E                     l8837:
 17725                           
 17726                           ;libraries/lcd_highlevel.c: 782:       {;libraries/lcd_highlevel.c: 783:         PORTA =
      +                           bg_color>>8; LATC3 = 0; LATC3 = 1;;
 17727  00219E  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 17728  0021A0  6E80               	movwf	128,c	;volatile
 17729  0021A2  968B               	bcf	3979,3,c	;volatile
 17730  0021A4  868B               	bsf	3979,3,c	;volatile
 17731  0021A6                     
 17732                           ;libraries/lcd_highlevel.c: 784:         PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 17733  0021A6  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 17734  0021AA  968B               	bcf	3979,3,c	;volatile
 17735  0021AC  868B               	bsf	3979,3,c	;volatile
 17736  0021AE                     
 17737                           ;libraries/lcd_highlevel.c: 785:       }
 17738  0021AE  2A40               	incf	LCD_DrawText@x^0,f,c
 17739  0021B0  EFC5  F010         	goto	l8833
 17740  0021B4                     l8853:
 17741                           
 17742                           ;libraries/lcd_highlevel.c: 786:     }
 17743  0021B4  2A3D               	incf	LCD_DrawText@y^0,f,c
 17744  0021B6                     l8855:
 17745  0021B6  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 17746  0021BA  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 17747  0021BE                     	if	0	;tblptru may be non-zero
 17748  0021BE                     	endif
 17749  0021BE                     	if	0	;tblptru may be non-zero
 17750  0021BE                     	endif
 17751  0021BE  0009               	tblrd		*+
 17752  0021C0  50F5               	movf	tablat,w,c
 17753  0021C2  5C3D               	subwf	LCD_DrawText@y^0,w,c
 17754  0021C4  A0D8               	btfss	status,0,c
 17755  0021C6  EFE7  F010         	goto	u6281
 17756  0021CA  EFE9  F010         	goto	u6280
 17757  0021CE                     u6281:
 17758  0021CE  EF44  F010         	goto	l8793
 17759  0021D2                     u6280:
 17760  0021D2                     
 17761                           ;libraries/lcd_highlevel.c: 787:     posX = posX + 2 + width;
 17762  0021D2  5041               	movf	LCD_DrawText@width^0,w,c
 17763  0021D4  2425               	addwf	LCD_DrawText@posX^0,w,c
 17764  0021D6  6E2D               	movwf	??_LCD_DrawText^0,c
 17765  0021D8  0E00               	movlw	0
 17766  0021DA  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 17767  0021DC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17768  0021DE  0E02               	movlw	2
 17769  0021E0  242D               	addwf	??_LCD_DrawText^0,w,c
 17770  0021E2  6E25               	movwf	LCD_DrawText@posX^0,c
 17771  0021E4  0E00               	movlw	0
 17772  0021E6  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17773  0021E8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17774  0021EA                     
 17775                           ;libraries/lcd_highlevel.c: 788:     msg++;
 17776  0021EA  4A20               	infsnz	LCD_DrawText@msg^0,f,c
 17777  0021EC  2A21               	incf	(LCD_DrawText@msg+1)^0,f,c
 17778  0021EE                     
 17779                           ;libraries/lcd_highlevel.c: 789:  }while(*msg != 0);
 17780  0021EE  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17781  0021F2  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17782  0021F6  6AF8               	clrf	tblptru,c
 17783  0021F8  0E05               	movlw	(high __ramtop+-1)
 17784  0021FA  64F7               	cpfsgt	tblptrh,c
 17785  0021FC  D003               	bra	u6297
 17786  0021FE  0008               	tblrd		*
 17787  002200  50F5               	movf	tablat,w,c
 17788  002202  D005               	bra	u6290
 17789  002204                     u6297:
 17790  002204  CFF6 FFE1          	movff	tblptrl,fsr1l
 17791  002208  CFF7 FFE2          	movff	tblptrh,fsr1h
 17792  00220C  50E7               	movf	indf1,w,c
 17793  00220E                     u6290:
 17794  00220E  0900               	iorlw	0
 17795  002210  A4D8               	btfss	status,2,c
 17796  002212  EF0D  F011         	goto	u6301
 17797  002216  EF0F  F011         	goto	u6300
 17798  00221A                     u6301:
 17799  00221A  EF7D  F00F         	goto	l8703
 17800  00221E                     u6300:
 17801  00221E  0012               	return		;funcret
 17802  002220                     __end_of_LCD_DrawText:
 17803                           	callstack 0
 17804                           
 17805 ;; *************** function _strlen *****************
 17806 ;; Defined at:
 17807 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 17808 ;; Parameters:    Size  Location     Type
 17809 ;;  s               2   17[COMRAM] PTR const unsigned char 
 17810 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 17811 ;;		 -> STR_13(13), STR_12(11), STR_11(8), STR_10(9), 
 17812 ;;		 -> STR_9(4), STR_8(4), STR_7(8), STR_6(9), 
 17813 ;;		 -> STR_5(9), STR_4(11), g1(239), STR_1(10), 
 17814 ;; Auto vars:     Size  Location     Type
 17815 ;;  a               2   19[COMRAM] PTR const unsigned char 
 17816 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 17817 ;;		 -> STR_13(13), STR_12(11), STR_11(8), STR_10(9), 
 17818 ;;		 -> STR_9(4), STR_8(4), STR_7(8), STR_6(9), 
 17819 ;;		 -> STR_5(9), STR_4(11), g1(239), STR_1(10), 
 17820 ;; Return value:  Size  Location     Type
 17821 ;;                  2   17[COMRAM] unsigned int 
 17822 ;; Registers used:
 17823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 17824 ;; Tracked objects:
 17825 ;;		On entry : 0/0
 17826 ;;		On exit  : 0/0
 17827 ;;		Unchanged: 0/0
 17828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17829 ;;      Params:         2       0       0       0       0       0       0
 17830 ;;      Locals:         2       0       0       0       0       0       0
 17831 ;;      Temps:          0       0       0       0       0       0       0
 17832 ;;      Totals:         4       0       0       0       0       0       0
 17833 ;;Total ram usage:        4 bytes
 17834 ;; Hardware stack levels used: 1
 17835 ;; Hardware stack levels required when called: 4
 17836 ;; This function calls:
 17837 ;;		Nothing
 17838 ;; This function is called by:
 17839 ;;		_LCD_ButtonDraw
 17840 ;;		_LCD_DrawText
 17841 ;;		_pad
 17842 ;; This function uses a non-reentrant model
 17843 ;;
 17844                           
 17845                           	psect	text69
 17846  006034                     __ptext69:
 17847                           	callstack 0
 17848  006034                     _strlen:
 17849                           	callstack 16
 17850  006034  C012  F014         	movff	strlen@s,strlen@a
 17851  006038  C013  F015         	movff	strlen@s+1,strlen@a+1
 17852  00603C  EF22  F030         	goto	l7901
 17853  006040                     l7899:
 17854  006040  4A12               	infsnz	strlen@s^0,f,c
 17855  006042  2A13               	incf	(strlen@s+1)^0,f,c
 17856  006044                     l7901:
 17857  006044  C012  FFF6         	movff	strlen@s,tblptrl
 17858  006048  C013  FFF7         	movff	strlen@s+1,tblptrh
 17859  00604C  6AF8               	clrf	tblptru,c
 17860  00604E  0E05               	movlw	(high __ramtop+-1)
 17861  006050  64F7               	cpfsgt	tblptrh,c
 17862  006052  D003               	bra	u5467
 17863  006054  0008               	tblrd		*
 17864  006056  50F5               	movf	tablat,w,c
 17865  006058  D005               	bra	u5460
 17866  00605A                     u5467:
 17867  00605A  CFF6 FFE1          	movff	tblptrl,fsr1l
 17868  00605E  CFF7 FFE2          	movff	tblptrh,fsr1h
 17869  006062  50E7               	movf	indf1,w,c
 17870  006064                     u5460:
 17871  006064  0900               	iorlw	0
 17872  006066  A4D8               	btfss	status,2,c
 17873  006068  EF38  F030         	goto	u5471
 17874  00606C  EF3A  F030         	goto	u5470
 17875  006070                     u5471:
 17876  006070  EF20  F030         	goto	l7899
 17877  006074                     u5470:
 17878  006074  5014               	movf	strlen@a^0,w,c
 17879  006076  5C12               	subwf	strlen@s^0,w,c
 17880  006078  6E12               	movwf	?_strlen^0,c
 17881  00607A  5015               	movf	(strlen@a+1)^0,w,c
 17882  00607C  5813               	subwfb	(strlen@s+1)^0,w,c
 17883  00607E  6E13               	movwf	(?_strlen+1)^0,c
 17884  006080  0012               	return		;funcret
 17885  006082                     __end_of_strlen:
 17886                           	callstack 0
 17887                           
 17888 ;; *************** function ___wmul *****************
 17889 ;; Defined at:
 17890 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 17891 ;; Parameters:    Size  Location     Type
 17892 ;;  multiplier      2   25[COMRAM] unsigned int 
 17893 ;;  multiplicand    2   27[COMRAM] unsigned int 
 17894 ;; Auto vars:     Size  Location     Type
 17895 ;;  product         2   29[COMRAM] unsigned int 
 17896 ;; Return value:  Size  Location     Type
 17897 ;;                  2   25[COMRAM] unsigned int 
 17898 ;; Registers used:
 17899 ;;		wreg, status,2, status,0, prodl, prodh
 17900 ;; Tracked objects:
 17901 ;;		On entry : 0/0
 17902 ;;		On exit  : 0/0
 17903 ;;		Unchanged: 0/0
 17904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17905 ;;      Params:         4       0       0       0       0       0       0
 17906 ;;      Locals:         2       0       0       0       0       0       0
 17907 ;;      Temps:          0       0       0       0       0       0       0
 17908 ;;      Totals:         6       0       0       0       0       0       0
 17909 ;;Total ram usage:        6 bytes
 17910 ;; Hardware stack levels used: 1
 17911 ;; Hardware stack levels required when called: 4
 17912 ;; This function calls:
 17913 ;;		Nothing
 17914 ;; This function is called by:
 17915 ;;		_LCD_SliderUpdate
 17916 ;;		_LCD_DrawText
 17917 ;;		_LCD_Bitmap
 17918 ;;		_XF_init
 17919 ;; This function uses a non-reentrant model
 17920 ;;
 17921                           
 17922                           	psect	text70
 17923  00628E                     __ptext70:
 17924                           	callstack 0
 17925  00628E                     ___wmul:
 17926                           	callstack 21
 17927  00628E  501A               	movf	___wmul@multiplier^0,w,c
 17928  006290  021C               	mulwf	___wmul@multiplicand^0,c
 17929  006292  CFF3 F01E          	movff	prodl,___wmul@product
 17930  006296  CFF4 F01F          	movff	prodh,___wmul@product+1
 17931  00629A  501A               	movf	___wmul@multiplier^0,w,c
 17932  00629C  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 17933  00629E  50F3               	movf	243,w,c
 17934  0062A0  261F               	addwf	(___wmul@product+1)^0,f,c
 17935  0062A2  501B               	movf	(___wmul@multiplier+1)^0,w,c
 17936  0062A4  021C               	mulwf	___wmul@multiplicand^0,c
 17937  0062A6  50F3               	movf	243,w,c
 17938  0062A8  261F               	addwf	(___wmul@product+1)^0,f,c
 17939  0062AA  C01E  F01A         	movff	___wmul@product,?___wmul
 17940  0062AE  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 17941  0062B2  0012               	return		;funcret
 17942  0062B4                     __end_of___wmul:
 17943                           	callstack 0
 17944                           
 17945 ;; *************** function ___awdiv *****************
 17946 ;; Defined at:
 17947 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 17948 ;; Parameters:    Size  Location     Type
 17949 ;;  dividend        2   17[COMRAM] int 
 17950 ;;  divisor         2   19[COMRAM] int 
 17951 ;; Auto vars:     Size  Location     Type
 17952 ;;  quotient        2   23[COMRAM] int 
 17953 ;;  sign            1   22[COMRAM] unsigned char 
 17954 ;;  counter         1   21[COMRAM] unsigned char 
 17955 ;; Return value:  Size  Location     Type
 17956 ;;                  2   17[COMRAM] int 
 17957 ;; Registers used:
 17958 ;;		wreg, status,2, status,0
 17959 ;; Tracked objects:
 17960 ;;		On entry : 0/0
 17961 ;;		On exit  : 0/0
 17962 ;;		Unchanged: 0/0
 17963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17964 ;;      Params:         4       0       0       0       0       0       0
 17965 ;;      Locals:         4       0       0       0       0       0       0
 17966 ;;      Temps:          0       0       0       0       0       0       0
 17967 ;;      Totals:         8       0       0       0       0       0       0
 17968 ;;Total ram usage:        8 bytes
 17969 ;; Hardware stack levels used: 1
 17970 ;; Hardware stack levels required when called: 4
 17971 ;; This function calls:
 17972 ;;		Nothing
 17973 ;; This function is called by:
 17974 ;;		_LCD_ButtonDraw
 17975 ;;		_LCD_DrawText
 17976 ;; This function uses a non-reentrant model
 17977 ;;
 17978                           
 17979                           	psect	text71
 17980  0051B2                     __ptext71:
 17981                           	callstack 0
 17982  0051B2                     ___awdiv:
 17983                           	callstack 20
 17984  0051B2  0E00               	movlw	0
 17985  0051B4  6E17               	movwf	___awdiv@sign^0,c
 17986  0051B6  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
 17987  0051B8  EFE2  F028         	goto	u5970
 17988  0051BC  EFE0  F028         	goto	u5971
 17989  0051C0                     u5971:
 17990  0051C0  EFE8  F028         	goto	l8533
 17991  0051C4                     u5970:
 17992  0051C4  6C14               	negf	___awdiv@divisor^0,c
 17993  0051C6  1E15               	comf	(___awdiv@divisor+1)^0,f,c
 17994  0051C8  B0D8               	btfsc	status,0,c
 17995  0051CA  2A15               	incf	(___awdiv@divisor+1)^0,f,c
 17996  0051CC  0E01               	movlw	1
 17997  0051CE  6E17               	movwf	___awdiv@sign^0,c
 17998  0051D0                     l8533:
 17999  0051D0  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
 18000  0051D2  EFEF  F028         	goto	u5980
 18001  0051D6  EFED  F028         	goto	u5981
 18002  0051DA                     u5981:
 18003  0051DA  EFF5  F028         	goto	l8539
 18004  0051DE                     u5980:
 18005  0051DE  6C12               	negf	___awdiv@dividend^0,c
 18006  0051E0  1E13               	comf	(___awdiv@dividend+1)^0,f,c
 18007  0051E2  B0D8               	btfsc	status,0,c
 18008  0051E4  2A13               	incf	(___awdiv@dividend+1)^0,f,c
 18009  0051E6  0E01               	movlw	1
 18010  0051E8  1A17               	xorwf	___awdiv@sign^0,f,c
 18011  0051EA                     l8539:
 18012  0051EA  0E00               	movlw	0
 18013  0051EC  6E19               	movwf	(___awdiv@quotient+1)^0,c
 18014  0051EE  0E00               	movlw	0
 18015  0051F0  6E18               	movwf	___awdiv@quotient^0,c
 18016  0051F2  5014               	movf	___awdiv@divisor^0,w,c
 18017  0051F4  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
 18018  0051F6  B4D8               	btfsc	status,2,c
 18019  0051F8  EF00  F029         	goto	u5991
 18020  0051FC  EF02  F029         	goto	u5990
 18021  005200                     u5991:
 18022  005200  EF2A  F029         	goto	l8561
 18023  005204                     u5990:
 18024  005204  0E01               	movlw	1
 18025  005206  6E16               	movwf	___awdiv@counter^0,c
 18026  005208  EF0A  F029         	goto	l8547
 18027  00520C                     l8545:
 18028  00520C  90D8               	bcf	status,0,c
 18029  00520E  3614               	rlcf	___awdiv@divisor^0,f,c
 18030  005210  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
 18031  005212  2A16               	incf	___awdiv@counter^0,f,c
 18032  005214                     l8547:
 18033  005214  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
 18034  005216  EF0F  F029         	goto	u6001
 18035  00521A  EF11  F029         	goto	u6000
 18036  00521E                     u6001:
 18037  00521E  EF06  F029         	goto	l8545
 18038  005222                     u6000:
 18039  005222                     l8549:
 18040  005222  90D8               	bcf	status,0,c
 18041  005224  3618               	rlcf	___awdiv@quotient^0,f,c
 18042  005226  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
 18043  005228  5014               	movf	___awdiv@divisor^0,w,c
 18044  00522A  5C12               	subwf	___awdiv@dividend^0,w,c
 18045  00522C  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18046  00522E  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
 18047  005230  A0D8               	btfss	status,0,c
 18048  005232  EF1D  F029         	goto	u6011
 18049  005236  EF1F  F029         	goto	u6010
 18050  00523A                     u6011:
 18051  00523A  EF24  F029         	goto	l8557
 18052  00523E                     u6010:
 18053  00523E  5014               	movf	___awdiv@divisor^0,w,c
 18054  005240  5E12               	subwf	___awdiv@dividend^0,f,c
 18055  005242  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18056  005244  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
 18057  005246  8018               	bsf	___awdiv@quotient^0,0,c
 18058  005248                     l8557:
 18059  005248  90D8               	bcf	status,0,c
 18060  00524A  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
 18061  00524C  3214               	rrcf	___awdiv@divisor^0,f,c
 18062  00524E  2E16               	decfsz	___awdiv@counter^0,f,c
 18063  005250  EF11  F029         	goto	l8549
 18064  005254                     l8561:
 18065  005254  5017               	movf	___awdiv@sign^0,w,c
 18066  005256  B4D8               	btfsc	status,2,c
 18067  005258  EF30  F029         	goto	u6021
 18068  00525C  EF32  F029         	goto	u6020
 18069  005260                     u6021:
 18070  005260  EF36  F029         	goto	l8565
 18071  005264                     u6020:
 18072  005264  6C18               	negf	___awdiv@quotient^0,c
 18073  005266  1E19               	comf	(___awdiv@quotient+1)^0,f,c
 18074  005268  B0D8               	btfsc	status,0,c
 18075  00526A  2A19               	incf	(___awdiv@quotient+1)^0,f,c
 18076  00526C                     l8565:
 18077  00526C  C018  F012         	movff	___awdiv@quotient,?___awdiv
 18078  005270  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
 18079  005274  0012               	return		;funcret
 18080  005276                     __end_of___awdiv:
 18081                           	callstack 0
 18082                           
 18083 ;; *************** function _Paddle_draw *****************
 18084 ;; Defined at:
 18085 ;;		line 55 in file "class/paddle.c"
 18086 ;; Parameters:    Size  Location     Type
 18087 ;;  p               2   36[COMRAM] PTR struct Paddle
 18088 ;;		 -> g1(239), 
 18089 ;; Auto vars:     Size  Location     Type
 18090 ;;		None
 18091 ;; Return value:  Size  Location     Type
 18092 ;;                  1    wreg      void 
 18093 ;; Registers used:
 18094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18095 ;; Tracked objects:
 18096 ;;		On entry : 0/0
 18097 ;;		On exit  : 0/0
 18098 ;;		Unchanged: 0/0
 18099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18100 ;;      Params:         2       0       0       0       0       0       0
 18101 ;;      Locals:         0       0       0       0       0       0       0
 18102 ;;      Temps:          4       0       0       0       0       0       0
 18103 ;;      Totals:         6       0       0       0       0       0       0
 18104 ;;Total ram usage:        6 bytes
 18105 ;; Hardware stack levels used: 1
 18106 ;; Hardware stack levels required when called: 5
 18107 ;; This function calls:
 18108 ;;		_LCD_DrawRect
 18109 ;; This function is called by:
 18110 ;;		_Menu_inGameDraw
 18111 ;;		_displayController
 18112 ;; This function uses a non-reentrant model
 18113 ;;
 18114                           
 18115                           	psect	text72
 18116  00435C                     __ptext72:
 18117                           	callstack 0
 18118  00435C                     _Paddle_draw:
 18119                           	callstack 21
 18120  00435C                     
 18121                           ;class/paddle.c: 55: void Paddle_draw(struct Paddle* p);class/paddle.c: 56: {;class/padd
      +                          le.c: 58:     LCD_DrawRect(p->oldx,p->oldy,p->oldx+50,p->oldy+10,1,0b0000000000000000);
 18122  00435C  EE20 F004          	lfsr	2,4
 18123  004360  5025               	movf	Paddle_draw@p^0,w,c
 18124  004362  26D9               	addwf	fsr2l,f,c
 18125  004364  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18126  004366  22DA               	addwfc	fsr2h,f,c
 18127  004368  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18128  00436C  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18129  004370  EE20 F006          	lfsr	2,6
 18130  004374  5025               	movf	Paddle_draw@p^0,w,c
 18131  004376  26D9               	addwf	fsr2l,f,c
 18132  004378  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18133  00437A  22DA               	addwfc	fsr2h,f,c
 18134  00437C  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18135  004380  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18136  004384  EE20 F004          	lfsr	2,4
 18137  004388  5025               	movf	Paddle_draw@p^0,w,c
 18138  00438A  26D9               	addwf	fsr2l,f,c
 18139  00438C  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18140  00438E  22DA               	addwfc	fsr2h,f,c
 18141  004390  CFDE F027          	movff	postinc2,??_Paddle_draw
 18142  004394  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18143  004398  0E32               	movlw	50
 18144  00439A  2427               	addwf	??_Paddle_draw^0,w,c
 18145  00439C  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18146  00439E  0E00               	movlw	0
 18147  0043A0  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18148  0043A2  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18149  0043A4  EE20 F006          	lfsr	2,6
 18150  0043A8  5025               	movf	Paddle_draw@p^0,w,c
 18151  0043AA  26D9               	addwf	fsr2l,f,c
 18152  0043AC  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18153  0043AE  22DA               	addwfc	fsr2h,f,c
 18154  0043B0  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18155  0043B4  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18156  0043B8  0E0A               	movlw	10
 18157  0043BA  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18158  0043BC  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18159  0043BE  0E00               	movlw	0
 18160  0043C0  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18161  0043C2  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18162  0043C4  0E01               	movlw	1
 18163  0043C6  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18164  0043C8  0E00               	movlw	0
 18165  0043CA  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18166  0043CC  0E00               	movlw	0
 18167  0043CE  6E1B               	movwf	LCD_DrawRect@color^0,c
 18168  0043D0  EC84  F016         	call	_LCD_DrawRect	;wreg free
 18169  0043D4                     
 18170                           ;class/paddle.c: 60:     p->oldx=p->x;
 18171  0043D4  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18172  0043D8  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18173  0043DC  EE10 F004          	lfsr	1,4
 18174  0043E0  5025               	movf	Paddle_draw@p^0,w,c
 18175  0043E2  26E1               	addwf	fsr1l,f,c
 18176  0043E4  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18177  0043E6  22E2               	addwfc	fsr1h,f,c
 18178  0043E8  CFDE FFE6          	movff	postinc2,postinc1
 18179  0043EC  CFDD FFE5          	movff	postdec2,postdec1
 18180  0043F0                     
 18181                           ;class/paddle.c: 61:     p->oldy=p->y;
 18182  0043F0  EE20 F002          	lfsr	2,2
 18183  0043F4  5025               	movf	Paddle_draw@p^0,w,c
 18184  0043F6  26D9               	addwf	fsr2l,f,c
 18185  0043F8  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18186  0043FA  22DA               	addwfc	fsr2h,f,c
 18187  0043FC  EE10 F006          	lfsr	1,6
 18188  004400  5025               	movf	Paddle_draw@p^0,w,c
 18189  004402  26E1               	addwf	fsr1l,f,c
 18190  004404  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18191  004406  22E2               	addwfc	fsr1h,f,c
 18192  004408  CFDE FFE6          	movff	postinc2,postinc1
 18193  00440C  CFDD FFE5          	movff	postdec2,postdec1
 18194                           
 18195                           ;class/paddle.c: 63:     LCD_DrawRect(p->x,p->y,p->x+50,p->y+10,1,p->color);
 18196  004410  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18197  004414  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18198  004418  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18199  00441C  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18200  004420  EE20 F002          	lfsr	2,2
 18201  004424  5025               	movf	Paddle_draw@p^0,w,c
 18202  004426  26D9               	addwf	fsr2l,f,c
 18203  004428  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18204  00442A  22DA               	addwfc	fsr2h,f,c
 18205  00442C  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18206  004430  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18207  004434  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18208  004438  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18209  00443C  CFDE F027          	movff	postinc2,??_Paddle_draw
 18210  004440  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18211  004444  0E32               	movlw	50
 18212  004446  2427               	addwf	??_Paddle_draw^0,w,c
 18213  004448  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18214  00444A  0E00               	movlw	0
 18215  00444C  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18216  00444E  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18217  004450  EE20 F002          	lfsr	2,2
 18218  004454  5025               	movf	Paddle_draw@p^0,w,c
 18219  004456  26D9               	addwf	fsr2l,f,c
 18220  004458  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18221  00445A  22DA               	addwfc	fsr2h,f,c
 18222  00445C  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18223  004460  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18224  004464  0E0A               	movlw	10
 18225  004466  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18226  004468  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18227  00446A  0E00               	movlw	0
 18228  00446C  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18229  00446E  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18230  004470  0E01               	movlw	1
 18231  004472  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18232  004474  EE20 F008          	lfsr	2,8
 18233  004478  5025               	movf	Paddle_draw@p^0,w,c
 18234  00447A  26D9               	addwf	fsr2l,f,c
 18235  00447C  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18236  00447E  22DA               	addwfc	fsr2h,f,c
 18237  004480  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 18238  004484  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 18239  004488  EC84  F016         	call	_LCD_DrawRect	;wreg free
 18240  00448C  0012               	return		;funcret
 18241  00448E                     __end_of_Paddle_draw:
 18242                           	callstack 0
 18243                           
 18244 ;; *************** function _LCD_Fill *****************
 18245 ;; Defined at:
 18246 ;;		line 218 in file "libraries/lcd_highlevel.c"
 18247 ;; Parameters:    Size  Location     Type
 18248 ;;  color           2   17[COMRAM] unsigned short 
 18249 ;; Auto vars:     Size  Location     Type
 18250 ;;  page            2   23[COMRAM] unsigned short 
 18251 ;;  column          2   21[COMRAM] unsigned short 
 18252 ;;  colorL          1   20[COMRAM] unsigned char 
 18253 ;;  colorH          1   19[COMRAM] unsigned char 
 18254 ;; Return value:  Size  Location     Type
 18255 ;;                  1    wreg      void 
 18256 ;; Registers used:
 18257 ;;		wreg, status,2, status,0
 18258 ;; Tracked objects:
 18259 ;;		On entry : 0/0
 18260 ;;		On exit  : 0/0
 18261 ;;		Unchanged: 0/0
 18262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18263 ;;      Params:         2       0       0       0       0       0       0
 18264 ;;      Locals:         6       0       0       0       0       0       0
 18265 ;;      Temps:          0       0       0       0       0       0       0
 18266 ;;      Totals:         8       0       0       0       0       0       0
 18267 ;;Total ram usage:        8 bytes
 18268 ;; Hardware stack levels used: 1
 18269 ;; Hardware stack levels required when called: 4
 18270 ;; This function calls:
 18271 ;;		Nothing
 18272 ;; This function is called by:
 18273 ;;		_Factory_init
 18274 ;;		_Menu_welcomeDraw
 18275 ;;		_Menu_parametersDraw
 18276 ;;		_Menu_inGameDraw
 18277 ;;		_Menu_endGame
 18278 ;; This function uses a non-reentrant model
 18279 ;;
 18280                           
 18281                           	psect	text73
 18282  005338                     __ptext73:
 18283                           	callstack 0
 18284  005338                     _LCD_Fill:
 18285                           	callstack 21
 18286  005338                     
 18287                           ;libraries/lcd_highlevel.c: 218: void LCD_Fill(uint16_t color);libraries/lcd_highlevel.c
      +                          : 219: {;libraries/lcd_highlevel.c: 220:   uint16_t column;;libraries/lcd_highlevel.c: 2
      +                          21:   uint16_t page;;libraries/lcd_highlevel.c: 222:   uint8_t colorH, colorL;;libraries
      +                          /lcd_highlevel.c: 223:   colorH = color >> 8;
 18288  005338  5013               	movf	(LCD_Fill@color+1)^0,w,c
 18289  00533A  6E14               	movwf	LCD_Fill@colorH^0,c
 18290  00533C                     
 18291                           ;libraries/lcd_highlevel.c: 224:   colorL = color;
 18292  00533C  C012  F015         	movff	LCD_Fill@color,LCD_Fill@colorL
 18293                           
 18294                           ;libraries/lcd_highlevel.c: 226:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18295  005340  0E2A               	movlw	42
 18296  005342  6E80               	movwf	128,c	;volatile
 18297  005344  988B               	bcf	3979,4,c	;volatile
 18298  005346  968B               	bcf	3979,3,c	;volatile
 18299  005348  868B               	bsf	3979,3,c	;volatile
 18300  00534A  888B               	bsf	3979,4,c	;volatile
 18301                           
 18302                           ;libraries/lcd_highlevel.c: 227:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18303  00534C  0E00               	movlw	0
 18304  00534E  6E80               	movwf	128,c	;volatile
 18305  005350  968B               	bcf	3979,3,c	;volatile
 18306  005352  868B               	bsf	3979,3,c	;volatile
 18307                           
 18308                           ;libraries/lcd_highlevel.c: 228:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18309  005354  0E00               	movlw	0
 18310  005356  6E80               	movwf	128,c	;volatile
 18311  005358  968B               	bcf	3979,3,c	;volatile
 18312  00535A  868B               	bsf	3979,3,c	;volatile
 18313                           
 18314                           ;libraries/lcd_highlevel.c: 229:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18315  00535C  0E00               	movlw	0
 18316  00535E  6E80               	movwf	128,c	;volatile
 18317  005360  968B               	bcf	3979,3,c	;volatile
 18318  005362  868B               	bsf	3979,3,c	;volatile
 18319                           
 18320                           ;libraries/lcd_highlevel.c: 230:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 18321  005364  0EEF               	movlw	239
 18322  005366  6E80               	movwf	128,c	;volatile
 18323  005368  968B               	bcf	3979,3,c	;volatile
 18324  00536A  868B               	bsf	3979,3,c	;volatile
 18325                           
 18326                           ;libraries/lcd_highlevel.c: 232:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18327  00536C  0E2B               	movlw	43
 18328  00536E  6E80               	movwf	128,c	;volatile
 18329  005370  988B               	bcf	3979,4,c	;volatile
 18330  005372  968B               	bcf	3979,3,c	;volatile
 18331  005374  868B               	bsf	3979,3,c	;volatile
 18332  005376  888B               	bsf	3979,4,c	;volatile
 18333                           
 18334                           ;libraries/lcd_highlevel.c: 233:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18335  005378  0E00               	movlw	0
 18336  00537A  6E80               	movwf	128,c	;volatile
 18337  00537C  968B               	bcf	3979,3,c	;volatile
 18338  00537E  868B               	bsf	3979,3,c	;volatile
 18339                           
 18340                           ;libraries/lcd_highlevel.c: 234:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18341  005380  0E00               	movlw	0
 18342  005382  6E80               	movwf	128,c	;volatile
 18343  005384  968B               	bcf	3979,3,c	;volatile
 18344  005386  868B               	bsf	3979,3,c	;volatile
 18345                           
 18346                           ;libraries/lcd_highlevel.c: 235:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18347  005388  0E01               	movlw	1
 18348  00538A  6E80               	movwf	128,c	;volatile
 18349  00538C  968B               	bcf	3979,3,c	;volatile
 18350  00538E  868B               	bsf	3979,3,c	;volatile
 18351                           
 18352                           ;libraries/lcd_highlevel.c: 236:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18353  005390  0E3F               	movlw	63
 18354  005392  6E80               	movwf	128,c	;volatile
 18355  005394  968B               	bcf	3979,3,c	;volatile
 18356  005396  868B               	bsf	3979,3,c	;volatile
 18357                           
 18358                           ;libraries/lcd_highlevel.c: 238:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18359  005398  0E2C               	movlw	44
 18360  00539A  6E80               	movwf	128,c	;volatile
 18361  00539C  988B               	bcf	3979,4,c	;volatile
 18362  00539E  968B               	bcf	3979,3,c	;volatile
 18363  0053A0  868B               	bsf	3979,3,c	;volatile
 18364  0053A2  888B               	bsf	3979,4,c	;volatile
 18365                           
 18366                           ;libraries/lcd_highlevel.c: 239:   for(column=0; column<320; column++)
 18367  0053A4  0E00               	movlw	0
 18368  0053A6  6E17               	movwf	(LCD_Fill@column+1)^0,c
 18369  0053A8  0E00               	movlw	0
 18370  0053AA  6E16               	movwf	LCD_Fill@column^0,c
 18371  0053AC                     l9363:
 18372                           
 18373                           ;libraries/lcd_highlevel.c: 240:   {;libraries/lcd_highlevel.c: 241:     for(page=0; pag
      +                          e<240; page++)
 18374  0053AC  0E00               	movlw	0
 18375  0053AE  6E19               	movwf	(LCD_Fill@page+1)^0,c
 18376  0053B0  0E00               	movlw	0
 18377  0053B2  6E18               	movwf	LCD_Fill@page^0,c
 18378  0053B4                     l224:
 18379                           
 18380                           ;libraries/lcd_highlevel.c: 242:     {;libraries/lcd_highlevel.c: 243:       PORTA = col
      +                          orH;
 18381  0053B4  C014  FF80         	movff	LCD_Fill@colorH,3968	;volatile
 18382                           
 18383                           ;libraries/lcd_highlevel.c: 244:       LATC3 = 0;
 18384  0053B8  968B               	bcf	3979,3,c	;volatile
 18385                           
 18386                           ;libraries/lcd_highlevel.c: 245:       LATC3 = 1;
 18387  0053BA  868B               	bsf	3979,3,c	;volatile
 18388                           
 18389                           ;libraries/lcd_highlevel.c: 246:       PORTA = colorL;
 18390  0053BC  C015  FF80         	movff	LCD_Fill@colorL,3968	;volatile
 18391                           
 18392                           ;libraries/lcd_highlevel.c: 247:       LATC3 = 0;
 18393  0053C0  968B               	bcf	3979,3,c	;volatile
 18394                           
 18395                           ;libraries/lcd_highlevel.c: 248:       LATC3 = 1;
 18396  0053C2  868B               	bsf	3979,3,c	;volatile
 18397  0053C4                     
 18398                           ;libraries/lcd_highlevel.c: 249:     }
 18399  0053C4  4A18               	infsnz	LCD_Fill@page^0,f,c
 18400  0053C6  2A19               	incf	(LCD_Fill@page+1)^0,f,c
 18401  0053C8  5019               	movf	(LCD_Fill@page+1)^0,w,c
 18402  0053CA  E109               	bnz	u6540
 18403  0053CC  0EF0               	movlw	240
 18404  0053CE  5C18               	subwf	LCD_Fill@page^0,w,c
 18405  0053D0  A0D8               	btfss	status,0,c
 18406  0053D2  EFED  F029         	goto	u6541
 18407  0053D6  EFEF  F029         	goto	u6540
 18408  0053DA                     u6541:
 18409  0053DA  EFDA  F029         	goto	l224
 18410  0053DE                     u6540:
 18411  0053DE                     
 18412                           ;libraries/lcd_highlevel.c: 250:   }
 18413  0053DE  4A16               	infsnz	LCD_Fill@column^0,f,c
 18414  0053E0  2A17               	incf	(LCD_Fill@column+1)^0,f,c
 18415  0053E2  0E40               	movlw	64
 18416  0053E4  5C16               	subwf	LCD_Fill@column^0,w,c
 18417  0053E6  0E01               	movlw	1
 18418  0053E8  5817               	subwfb	(LCD_Fill@column+1)^0,w,c
 18419  0053EA  A0D8               	btfss	status,0,c
 18420  0053EC  EFFA  F029         	goto	u6551
 18421  0053F0  EFFC  F029         	goto	u6550
 18422  0053F4                     u6551:
 18423  0053F4  EFD6  F029         	goto	l9363
 18424  0053F8                     u6550:
 18425  0053F8  0012               	return		;funcret
 18426  0053FA                     __end_of_LCD_Fill:
 18427                           	callstack 0
 18428                           
 18429 ;; *************** function _Ball_draw *****************
 18430 ;; Defined at:
 18431 ;;		line 17 in file "class/ball.c"
 18432 ;; Parameters:    Size  Location     Type
 18433 ;;  b               2   36[COMRAM] PTR struct Ball
 18434 ;;		 -> g1(239), 
 18435 ;; Auto vars:     Size  Location     Type
 18436 ;;		None
 18437 ;; Return value:  Size  Location     Type
 18438 ;;                  1    wreg      void 
 18439 ;; Registers used:
 18440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18441 ;; Tracked objects:
 18442 ;;		On entry : 0/0
 18443 ;;		On exit  : 0/0
 18444 ;;		Unchanged: 0/0
 18445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18446 ;;      Params:         2       0       0       0       0       0       0
 18447 ;;      Locals:         0       0       0       0       0       0       0
 18448 ;;      Temps:          8       0       0       0       0       0       0
 18449 ;;      Totals:        10       0       0       0       0       0       0
 18450 ;;Total ram usage:       10 bytes
 18451 ;; Hardware stack levels used: 1
 18452 ;; Hardware stack levels required when called: 5
 18453 ;; This function calls:
 18454 ;;		_LCD_DrawRect
 18455 ;; This function is called by:
 18456 ;;		_Menu_inGameDraw
 18457 ;;		_displayController
 18458 ;; This function uses a non-reentrant model
 18459 ;;
 18460                           
 18461                           	psect	text74
 18462  0040C4                     __ptext74:
 18463                           	callstack 0
 18464  0040C4                     _Ball_draw:
 18465                           	callstack 21
 18466  0040C4                     
 18467                           ;class/ball.c: 17: void Ball_draw(struct Ball* b);class/ball.c: 18: {;class/ball.c: 19: 
      +                              LCD_DrawRect(b->oldx-8,b->oldy-8,b->oldx+8,b->oldy+8,1,0b0000000000000000);
 18468  0040C4  EE20 F004          	lfsr	2,4
 18469  0040C8  5025               	movf	Ball_draw@b^0,w,c
 18470  0040CA  26D9               	addwf	fsr2l,f,c
 18471  0040CC  5026               	movf	(Ball_draw@b+1)^0,w,c
 18472  0040CE  22DA               	addwfc	fsr2h,f,c
 18473  0040D0  CFDE F027          	movff	postinc2,??_Ball_draw
 18474  0040D4  CFDD F028          	movff	postdec2,??_Ball_draw+1
 18475  0040D8  0EF8               	movlw	248
 18476  0040DA  2427               	addwf	??_Ball_draw^0,w,c
 18477  0040DC  6E12               	movwf	LCD_DrawRect@posX1^0,c
 18478  0040DE  0EFF               	movlw	255
 18479  0040E0  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 18480  0040E2  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 18481  0040E4  EE20 F006          	lfsr	2,6
 18482  0040E8  5025               	movf	Ball_draw@b^0,w,c
 18483  0040EA  26D9               	addwf	fsr2l,f,c
 18484  0040EC  5026               	movf	(Ball_draw@b+1)^0,w,c
 18485  0040EE  22DA               	addwfc	fsr2h,f,c
 18486  0040F0  CFDE F029          	movff	postinc2,??_Ball_draw+2
 18487  0040F4  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 18488  0040F8  0EF8               	movlw	248
 18489  0040FA  2429               	addwf	(??_Ball_draw+2)^0,w,c
 18490  0040FC  6E14               	movwf	LCD_DrawRect@posY1^0,c
 18491  0040FE  0EFF               	movlw	255
 18492  004100  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 18493  004102  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 18494  004104  EE20 F004          	lfsr	2,4
 18495  004108  5025               	movf	Ball_draw@b^0,w,c
 18496  00410A  26D9               	addwf	fsr2l,f,c
 18497  00410C  5026               	movf	(Ball_draw@b+1)^0,w,c
 18498  00410E  22DA               	addwfc	fsr2h,f,c
 18499  004110  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 18500  004114  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 18501  004118  0E08               	movlw	8
 18502  00411A  242B               	addwf	(??_Ball_draw+4)^0,w,c
 18503  00411C  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18504  00411E  0E00               	movlw	0
 18505  004120  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 18506  004122  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18507  004124  EE20 F006          	lfsr	2,6
 18508  004128  5025               	movf	Ball_draw@b^0,w,c
 18509  00412A  26D9               	addwf	fsr2l,f,c
 18510  00412C  5026               	movf	(Ball_draw@b+1)^0,w,c
 18511  00412E  22DA               	addwfc	fsr2h,f,c
 18512  004130  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 18513  004134  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 18514  004138  0E08               	movlw	8
 18515  00413A  242D               	addwf	(??_Ball_draw+6)^0,w,c
 18516  00413C  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18517  00413E  0E00               	movlw	0
 18518  004140  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 18519  004142  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18520  004144  0E01               	movlw	1
 18521  004146  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18522  004148  0E00               	movlw	0
 18523  00414A  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18524  00414C  0E00               	movlw	0
 18525  00414E  6E1B               	movwf	LCD_DrawRect@color^0,c
 18526  004150  EC84  F016         	call	_LCD_DrawRect	;wreg free
 18527  004154                     
 18528                           ;class/ball.c: 20:     b->oldx=b->x;
 18529  004154  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18530  004158  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18531  00415C  EE10 F004          	lfsr	1,4
 18532  004160  5025               	movf	Ball_draw@b^0,w,c
 18533  004162  26E1               	addwf	fsr1l,f,c
 18534  004164  5026               	movf	(Ball_draw@b+1)^0,w,c
 18535  004166  22E2               	addwfc	fsr1h,f,c
 18536  004168  CFDE FFE6          	movff	postinc2,postinc1
 18537  00416C  CFDD FFE5          	movff	postdec2,postdec1
 18538  004170                     
 18539                           ;class/ball.c: 21:     b->oldy=b->y;
 18540  004170  EE20 F002          	lfsr	2,2
 18541  004174  5025               	movf	Ball_draw@b^0,w,c
 18542  004176  26D9               	addwf	fsr2l,f,c
 18543  004178  5026               	movf	(Ball_draw@b+1)^0,w,c
 18544  00417A  22DA               	addwfc	fsr2h,f,c
 18545  00417C  EE10 F006          	lfsr	1,6
 18546  004180  5025               	movf	Ball_draw@b^0,w,c
 18547  004182  26E1               	addwf	fsr1l,f,c
 18548  004184  5026               	movf	(Ball_draw@b+1)^0,w,c
 18549  004186  22E2               	addwfc	fsr1h,f,c
 18550  004188  CFDE FFE6          	movff	postinc2,postinc1
 18551  00418C  CFDD FFE5          	movff	postdec2,postdec1
 18552                           
 18553                           ;class/ball.c: 22:     LCD_DrawRect(b->x-8,b->y-8,b->x+8,b->y+8,1,0b1111100000000000);
 18554  004190  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18555  004194  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18556  004198  CFDE F027          	movff	postinc2,??_Ball_draw
 18557  00419C  CFDD F028          	movff	postdec2,??_Ball_draw+1
 18558  0041A0  0EF8               	movlw	248
 18559  0041A2  2427               	addwf	??_Ball_draw^0,w,c
 18560  0041A4  6E12               	movwf	LCD_DrawRect@posX1^0,c
 18561  0041A6  0EFF               	movlw	255
 18562  0041A8  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 18563  0041AA  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 18564  0041AC  EE20 F002          	lfsr	2,2
 18565  0041B0  5025               	movf	Ball_draw@b^0,w,c
 18566  0041B2  26D9               	addwf	fsr2l,f,c
 18567  0041B4  5026               	movf	(Ball_draw@b+1)^0,w,c
 18568  0041B6  22DA               	addwfc	fsr2h,f,c
 18569  0041B8  CFDE F029          	movff	postinc2,??_Ball_draw+2
 18570  0041BC  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 18571  0041C0  0EF8               	movlw	248
 18572  0041C2  2429               	addwf	(??_Ball_draw+2)^0,w,c
 18573  0041C4  6E14               	movwf	LCD_DrawRect@posY1^0,c
 18574  0041C6  0EFF               	movlw	255
 18575  0041C8  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 18576  0041CA  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 18577  0041CC  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18578  0041D0  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18579  0041D4  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 18580  0041D8  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 18581  0041DC  0E08               	movlw	8
 18582  0041DE  242B               	addwf	(??_Ball_draw+4)^0,w,c
 18583  0041E0  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18584  0041E2  0E00               	movlw	0
 18585  0041E4  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 18586  0041E6  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18587  0041E8  EE20 F002          	lfsr	2,2
 18588  0041EC  5025               	movf	Ball_draw@b^0,w,c
 18589  0041EE  26D9               	addwf	fsr2l,f,c
 18590  0041F0  5026               	movf	(Ball_draw@b+1)^0,w,c
 18591  0041F2  22DA               	addwfc	fsr2h,f,c
 18592  0041F4  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 18593  0041F8  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 18594  0041FC  0E08               	movlw	8
 18595  0041FE  242D               	addwf	(??_Ball_draw+6)^0,w,c
 18596  004200  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18597  004202  0E00               	movlw	0
 18598  004204  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 18599  004206  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18600  004208  0E01               	movlw	1
 18601  00420A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18602  00420C  0EF8               	movlw	248
 18603  00420E  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18604  004210  0E00               	movlw	0
 18605  004212  6E1B               	movwf	LCD_DrawRect@color^0,c
 18606  004214  EC84  F016         	call	_LCD_DrawRect	;wreg free
 18607  004218  0012               	return		;funcret
 18608  00421A                     __end_of_Ball_draw:
 18609                           	callstack 0
 18610                           
 18611 ;; *************** function _LCD_DrawRect *****************
 18612 ;; Defined at:
 18613 ;;		line 584 in file "libraries/lcd_highlevel.c"
 18614 ;; Parameters:    Size  Location     Type
 18615 ;;  posX1           2   17[COMRAM] unsigned short 
 18616 ;;  posY1           2   19[COMRAM] unsigned short 
 18617 ;;  posX2           2   21[COMRAM] unsigned short 
 18618 ;;  posY2           2   23[COMRAM] unsigned short 
 18619 ;;  fill            1   25[COMRAM] unsigned char 
 18620 ;;  color           2   26[COMRAM] unsigned short 
 18621 ;; Auto vars:     Size  Location     Type
 18622 ;;  i               2   34[COMRAM] unsigned short 
 18623 ;;  temp            2   30[COMRAM] unsigned short 
 18624 ;;  j               2   28[COMRAM] unsigned short 
 18625 ;;  colorL          1   33[COMRAM] unsigned char 
 18626 ;;  colorH          1   32[COMRAM] unsigned char 
 18627 ;; Return value:  Size  Location     Type
 18628 ;;                  1    wreg      void 
 18629 ;; Registers used:
 18630 ;;		wreg, status,2, status,0
 18631 ;; Tracked objects:
 18632 ;;		On entry : 0/0
 18633 ;;		On exit  : 0/0
 18634 ;;		Unchanged: 0/0
 18635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18636 ;;      Params:        11       0       0       0       0       0       0
 18637 ;;      Locals:         8       0       0       0       0       0       0
 18638 ;;      Temps:          0       0       0       0       0       0       0
 18639 ;;      Totals:        19       0       0       0       0       0       0
 18640 ;;Total ram usage:       19 bytes
 18641 ;; Hardware stack levels used: 1
 18642 ;; Hardware stack levels required when called: 4
 18643 ;; This function calls:
 18644 ;;		Nothing
 18645 ;; This function is called by:
 18646 ;;		_Ball_draw
 18647 ;;		_Paddle_draw
 18648 ;;		_LCD_SliderUpdate
 18649 ;;		_LCD_SliderDraw
 18650 ;;		_LCD_ButtonUpdate
 18651 ;;		_LCD_ButtonDraw
 18652 ;; This function uses a non-reentrant model
 18653 ;;
 18654                           
 18655                           	psect	text75
 18656  002D08                     __ptext75:
 18657                           	callstack 0
 18658  002D08                     _LCD_DrawRect:
 18659                           	callstack 21
 18660  002D08                     
 18661                           ;libraries/lcd_highlevel.c: 584: void LCD_DrawRect(uint16_t posX1,uint16_t posY1, uint16
      +                          _t posX2,;libraries/lcd_highlevel.c: 585:   uint16_t posY2,uint8_t fill,uint16_t color);
      +                          libraries/lcd_highlevel.c: 586: {;libraries/lcd_highlevel.c: 587:   uint16_t i;;librarie
      +                          s/lcd_highlevel.c: 588:   uint16_t j;;libraries/lcd_highlevel.c: 589:   uint16_t temp;;l
      +                          ibraries/lcd_highlevel.c: 590:   uint8_t colorH,colorL;;libraries/lcd_highlevel.c: 592: 
      +                            colorH = color>>8;
 18662  002D08  501C               	movf	(LCD_DrawRect@color+1)^0,w,c
 18663  002D0A  6E21               	movwf	LCD_DrawRect@colorH^0,c
 18664  002D0C                     
 18665                           ;libraries/lcd_highlevel.c: 593:   colorL = color;
 18666  002D0C  C01B  F022         	movff	LCD_DrawRect@color,LCD_DrawRect@colorL
 18667  002D10                     
 18668                           ;libraries/lcd_highlevel.c: 597:   if(posX1 > posX2)
 18669  002D10  5012               	movf	LCD_DrawRect@posX1^0,w,c
 18670  002D12  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18671  002D14  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18672  002D16  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18673  002D18  B0D8               	btfsc	status,0,c
 18674  002D1A  EF91  F016         	goto	u5821
 18675  002D1E  EF93  F016         	goto	u5820
 18676  002D22                     u5821:
 18677  002D22  EF9F  F016         	goto	l8091
 18678  002D26                     u5820:
 18679  002D26                     
 18680                           ;libraries/lcd_highlevel.c: 598:   {;libraries/lcd_highlevel.c: 599:     temp = posX1;
 18681  002D26  C012  F01F         	movff	LCD_DrawRect@posX1,LCD_DrawRect@temp
 18682  002D2A  C013  F020         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@temp+1
 18683                           
 18684                           ;libraries/lcd_highlevel.c: 600:     posX1 = posX2;
 18685  002D2E  C016  F012         	movff	LCD_DrawRect@posX2,LCD_DrawRect@posX1
 18686  002D32  C017  F013         	movff	LCD_DrawRect@posX2+1,LCD_DrawRect@posX1+1
 18687                           
 18688                           ;libraries/lcd_highlevel.c: 601:     posX2 = temp;
 18689  002D36  C01F  F016         	movff	LCD_DrawRect@temp,LCD_DrawRect@posX2
 18690  002D3A  C020  F017         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posX2+1
 18691  002D3E                     l8091:
 18692                           
 18693                           ;libraries/lcd_highlevel.c: 603:   if(posY1 > posY2)
 18694  002D3E  5014               	movf	LCD_DrawRect@posY1^0,w,c
 18695  002D40  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18696  002D42  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18697  002D44  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18698  002D46  B0D8               	btfsc	status,0,c
 18699  002D48  EFA8  F016         	goto	u5831
 18700  002D4C  EFAA  F016         	goto	u5830
 18701  002D50                     u5831:
 18702  002D50  EFB6  F016         	goto	l8095
 18703  002D54                     u5830:
 18704  002D54                     
 18705                           ;libraries/lcd_highlevel.c: 604:   {;libraries/lcd_highlevel.c: 605:     temp = posY1;
 18706  002D54  C014  F01F         	movff	LCD_DrawRect@posY1,LCD_DrawRect@temp
 18707  002D58  C015  F020         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@temp+1
 18708                           
 18709                           ;libraries/lcd_highlevel.c: 606:     posY1 = posY2;
 18710  002D5C  C018  F014         	movff	LCD_DrawRect@posY2,LCD_DrawRect@posY1
 18711  002D60  C019  F015         	movff	LCD_DrawRect@posY2+1,LCD_DrawRect@posY1+1
 18712                           
 18713                           ;libraries/lcd_highlevel.c: 607:     posY2 = temp;
 18714  002D64  C01F  F018         	movff	LCD_DrawRect@temp,LCD_DrawRect@posY2
 18715  002D68  C020  F019         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posY2+1
 18716  002D6C                     l8095:
 18717                           
 18718                           ;libraries/lcd_highlevel.c: 610:   if(fill==1)
 18719  002D6C  041A               	decf	LCD_DrawRect@fill^0,w,c
 18720  002D6E  A4D8               	btfss	status,2,c
 18721  002D70  EFBC  F016         	goto	u5841
 18722  002D74  EFBE  F016         	goto	u5840
 18723  002D78                     u5841:
 18724  002D78  EF20  F017         	goto	l8171
 18725  002D7C                     u5840:
 18726  002D7C                     
 18727                           ;libraries/lcd_highlevel.c: 611:   {;libraries/lcd_highlevel.c: 613:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18728  002D7C  0E2A               	movlw	42
 18729  002D7E  6E80               	movwf	128,c	;volatile
 18730  002D80  988B               	bcf	3979,4,c	;volatile
 18731  002D82  968B               	bcf	3979,3,c	;volatile
 18732  002D84  868B               	bsf	3979,3,c	;volatile
 18733  002D86  888B               	bsf	3979,4,c	;volatile
 18734                           
 18735                           ;libraries/lcd_highlevel.c: 614:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18736  002D88  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18737  002D8A  6E80               	movwf	128,c	;volatile
 18738  002D8C  968B               	bcf	3979,3,c	;volatile
 18739  002D8E  868B               	bsf	3979,3,c	;volatile
 18740  002D90                     
 18741                           ;libraries/lcd_highlevel.c: 615:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18742  002D90  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18743  002D94  968B               	bcf	3979,3,c	;volatile
 18744  002D96  868B               	bsf	3979,3,c	;volatile
 18745                           
 18746                           ;libraries/lcd_highlevel.c: 616:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18747  002D98  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18748  002D9A  6E80               	movwf	128,c	;volatile
 18749  002D9C  968B               	bcf	3979,3,c	;volatile
 18750  002D9E  868B               	bsf	3979,3,c	;volatile
 18751  002DA0                     
 18752                           ;libraries/lcd_highlevel.c: 617:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18753  002DA0  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18754  002DA4  968B               	bcf	3979,3,c	;volatile
 18755  002DA6  868B               	bsf	3979,3,c	;volatile
 18756                           
 18757                           ;libraries/lcd_highlevel.c: 619:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18758  002DA8  0E2B               	movlw	43
 18759  002DAA  6E80               	movwf	128,c	;volatile
 18760  002DAC  988B               	bcf	3979,4,c	;volatile
 18761  002DAE  968B               	bcf	3979,3,c	;volatile
 18762  002DB0  868B               	bsf	3979,3,c	;volatile
 18763  002DB2  888B               	bsf	3979,4,c	;volatile
 18764                           
 18765                           ;libraries/lcd_highlevel.c: 620:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18766  002DB4  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18767  002DB6  6E80               	movwf	128,c	;volatile
 18768  002DB8  968B               	bcf	3979,3,c	;volatile
 18769  002DBA  868B               	bsf	3979,3,c	;volatile
 18770  002DBC                     
 18771                           ;libraries/lcd_highlevel.c: 621:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18772  002DBC  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18773  002DC0  968B               	bcf	3979,3,c	;volatile
 18774  002DC2  868B               	bsf	3979,3,c	;volatile
 18775                           
 18776                           ;libraries/lcd_highlevel.c: 622:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18777  002DC4  0E01               	movlw	1
 18778  002DC6  6E80               	movwf	128,c	;volatile
 18779  002DC8  968B               	bcf	3979,3,c	;volatile
 18780  002DCA  868B               	bsf	3979,3,c	;volatile
 18781                           
 18782                           ;libraries/lcd_highlevel.c: 623:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18783  002DCC  0E3F               	movlw	63
 18784  002DCE  6E80               	movwf	128,c	;volatile
 18785  002DD0  968B               	bcf	3979,3,c	;volatile
 18786  002DD2  868B               	bsf	3979,3,c	;volatile
 18787                           
 18788                           ;libraries/lcd_highlevel.c: 625:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18789  002DD4  0E2C               	movlw	44
 18790  002DD6  6E80               	movwf	128,c	;volatile
 18791  002DD8  988B               	bcf	3979,4,c	;volatile
 18792  002DDA  968B               	bcf	3979,3,c	;volatile
 18793  002DDC  868B               	bsf	3979,3,c	;volatile
 18794  002DDE  888B               	bsf	3979,4,c	;volatile
 18795  002DE0                     
 18796                           ;libraries/lcd_highlevel.c: 626:     for(i=posX1;i<=posX2;i++)
 18797  002DE0  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18798  002DE4  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18799  002DE8  EF13  F017         	goto	l8169
 18800  002DEC                     l281:
 18801                           
 18802                           ;libraries/lcd_highlevel.c: 627:     {;libraries/lcd_highlevel.c: 628:       for(j=posY1
      +                          ;j<=posY2;j++)
 18803  002DEC  C014  F01D         	movff	LCD_DrawRect@posY1,LCD_DrawRect@j
 18804  002DF0  C015  F01E         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@j+1
 18805  002DF4  EF06  F017         	goto	l8165
 18806  002DF8                     l283:
 18807                           
 18808                           ;libraries/lcd_highlevel.c: 629:       {;libraries/lcd_highlevel.c: 630:         PORTA =
      +                           colorH; LATC3 = 0; LATC3 = 1;;
 18809  002DF8  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18810  002DFC  968B               	bcf	3979,3,c	;volatile
 18811  002DFE  868B               	bsf	3979,3,c	;volatile
 18812                           
 18813                           ;libraries/lcd_highlevel.c: 631:         PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18814  002E00  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18815  002E04  968B               	bcf	3979,3,c	;volatile
 18816  002E06  868B               	bsf	3979,3,c	;volatile
 18817  002E08                     
 18818                           ;libraries/lcd_highlevel.c: 632:       }
 18819  002E08  4A1D               	infsnz	LCD_DrawRect@j^0,f,c
 18820  002E0A  2A1E               	incf	(LCD_DrawRect@j+1)^0,f,c
 18821  002E0C                     l8165:
 18822  002E0C  501D               	movf	LCD_DrawRect@j^0,w,c
 18823  002E0E  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18824  002E10  501E               	movf	(LCD_DrawRect@j+1)^0,w,c
 18825  002E12  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18826  002E14  B0D8               	btfsc	status,0,c
 18827  002E16  EF0F  F017         	goto	u5851
 18828  002E1A  EF11  F017         	goto	u5850
 18829  002E1E                     u5851:
 18830  002E1E  EFFC  F016         	goto	l283
 18831  002E22                     u5850:
 18832  002E22                     
 18833                           ;libraries/lcd_highlevel.c: 633:     }
 18834  002E22  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18835  002E24  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18836  002E26                     l8169:
 18837  002E26  5023               	movf	LCD_DrawRect@i^0,w,c
 18838  002E28  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18839  002E2A  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18840  002E2C  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18841  002E2E  B0D8               	btfsc	status,0,c
 18842  002E30  EF1C  F017         	goto	u5861
 18843  002E34  EF1E  F017         	goto	u5860
 18844  002E38                     u5861:
 18845  002E38  EFF6  F016         	goto	l281
 18846  002E3C                     u5860:
 18847  002E3C  EF20  F018         	goto	l299
 18848  002E40                     l8171:
 18849                           
 18850                           ;libraries/lcd_highlevel.c: 637:   {;libraries/lcd_highlevel.c: 639:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18851  002E40  0E2A               	movlw	42
 18852  002E42  6E80               	movwf	128,c	;volatile
 18853  002E44  988B               	bcf	3979,4,c	;volatile
 18854  002E46  968B               	bcf	3979,3,c	;volatile
 18855  002E48  868B               	bsf	3979,3,c	;volatile
 18856  002E4A  888B               	bsf	3979,4,c	;volatile
 18857                           
 18858                           ;libraries/lcd_highlevel.c: 640:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18859  002E4C  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18860  002E4E  6E80               	movwf	128,c	;volatile
 18861  002E50  968B               	bcf	3979,3,c	;volatile
 18862  002E52  868B               	bsf	3979,3,c	;volatile
 18863  002E54                     
 18864                           ;libraries/lcd_highlevel.c: 641:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18865  002E54  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18866  002E58  968B               	bcf	3979,3,c	;volatile
 18867  002E5A  868B               	bsf	3979,3,c	;volatile
 18868                           
 18869                           ;libraries/lcd_highlevel.c: 642:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18870  002E5C  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18871  002E5E  6E80               	movwf	128,c	;volatile
 18872  002E60  968B               	bcf	3979,3,c	;volatile
 18873  002E62  868B               	bsf	3979,3,c	;volatile
 18874  002E64                     
 18875                           ;libraries/lcd_highlevel.c: 643:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18876  002E64  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18877  002E68  968B               	bcf	3979,3,c	;volatile
 18878  002E6A  868B               	bsf	3979,3,c	;volatile
 18879                           
 18880                           ;libraries/lcd_highlevel.c: 645:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18881  002E6C  0E2B               	movlw	43
 18882  002E6E  6E80               	movwf	128,c	;volatile
 18883  002E70  988B               	bcf	3979,4,c	;volatile
 18884  002E72  968B               	bcf	3979,3,c	;volatile
 18885  002E74  868B               	bsf	3979,3,c	;volatile
 18886  002E76  888B               	bsf	3979,4,c	;volatile
 18887                           
 18888                           ;libraries/lcd_highlevel.c: 646:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18889  002E78  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18890  002E7A  6E80               	movwf	128,c	;volatile
 18891  002E7C  968B               	bcf	3979,3,c	;volatile
 18892  002E7E  868B               	bsf	3979,3,c	;volatile
 18893  002E80                     
 18894                           ;libraries/lcd_highlevel.c: 647:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18895  002E80  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18896  002E84  968B               	bcf	3979,3,c	;volatile
 18897  002E86  868B               	bsf	3979,3,c	;volatile
 18898                           
 18899                           ;libraries/lcd_highlevel.c: 648:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18900  002E88  0E01               	movlw	1
 18901  002E8A  6E80               	movwf	128,c	;volatile
 18902  002E8C  968B               	bcf	3979,3,c	;volatile
 18903  002E8E  868B               	bsf	3979,3,c	;volatile
 18904                           
 18905                           ;libraries/lcd_highlevel.c: 649:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18906  002E90  0E3F               	movlw	63
 18907  002E92  6E80               	movwf	128,c	;volatile
 18908  002E94  968B               	bcf	3979,3,c	;volatile
 18909  002E96  868B               	bsf	3979,3,c	;volatile
 18910                           
 18911                           ;libraries/lcd_highlevel.c: 651:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18912  002E98  0E2C               	movlw	44
 18913  002E9A  6E80               	movwf	128,c	;volatile
 18914  002E9C  988B               	bcf	3979,4,c	;volatile
 18915  002E9E  968B               	bcf	3979,3,c	;volatile
 18916  002EA0  868B               	bsf	3979,3,c	;volatile
 18917  002EA2  888B               	bsf	3979,4,c	;volatile
 18918  002EA4                     
 18919                           ;libraries/lcd_highlevel.c: 653:     for(i=posX1;i<=posX2;i++)
 18920  002EA4  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18921  002EA8  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18922  002EAC  EF62  F017         	goto	l8239
 18923  002EB0                     l288:
 18924                           
 18925                           ;libraries/lcd_highlevel.c: 654:     {;libraries/lcd_highlevel.c: 655:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18926  002EB0  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18927  002EB4  968B               	bcf	3979,3,c	;volatile
 18928  002EB6  868B               	bsf	3979,3,c	;volatile
 18929                           
 18930                           ;libraries/lcd_highlevel.c: 656:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18931  002EB8  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18932  002EBC  968B               	bcf	3979,3,c	;volatile
 18933  002EBE  868B               	bsf	3979,3,c	;volatile
 18934  002EC0                     
 18935                           ;libraries/lcd_highlevel.c: 657:     }
 18936  002EC0  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18937  002EC2  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18938  002EC4                     l8239:
 18939  002EC4  5023               	movf	LCD_DrawRect@i^0,w,c
 18940  002EC6  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18941  002EC8  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18942  002ECA  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18943  002ECC  B0D8               	btfsc	status,0,c
 18944  002ECE  EF6B  F017         	goto	u5871
 18945  002ED2  EF6D  F017         	goto	u5870
 18946  002ED6                     u5871:
 18947  002ED6  EF58  F017         	goto	l288
 18948  002EDA                     u5870:
 18949  002EDA                     
 18950                           ;libraries/lcd_highlevel.c: 659:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18951  002EDA  0E2B               	movlw	43
 18952  002EDC  6E80               	movwf	128,c	;volatile
 18953  002EDE  988B               	bcf	3979,4,c	;volatile
 18954  002EE0  968B               	bcf	3979,3,c	;volatile
 18955  002EE2  868B               	bsf	3979,3,c	;volatile
 18956  002EE4  888B               	bsf	3979,4,c	;volatile
 18957                           
 18958                           ;libraries/lcd_highlevel.c: 660:     PORTA = posY2>>8; LATC3 = 0; LATC3 = 1;;
 18959  002EE6  5019               	movf	(LCD_DrawRect@posY2+1)^0,w,c
 18960  002EE8  6E80               	movwf	128,c	;volatile
 18961  002EEA  968B               	bcf	3979,3,c	;volatile
 18962  002EEC  868B               	bsf	3979,3,c	;volatile
 18963  002EEE                     
 18964                           ;libraries/lcd_highlevel.c: 661:     PORTA = posY2; LATC3 = 0; LATC3 = 1;;
 18965  002EEE  C018  FF80         	movff	LCD_DrawRect@posY2,3968	;volatile
 18966  002EF2  968B               	bcf	3979,3,c	;volatile
 18967  002EF4  868B               	bsf	3979,3,c	;volatile
 18968                           
 18969                           ;libraries/lcd_highlevel.c: 662:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18970  002EF6  0E2C               	movlw	44
 18971  002EF8  6E80               	movwf	128,c	;volatile
 18972  002EFA  988B               	bcf	3979,4,c	;volatile
 18973  002EFC  968B               	bcf	3979,3,c	;volatile
 18974  002EFE  868B               	bsf	3979,3,c	;volatile
 18975  002F00  888B               	bsf	3979,4,c	;volatile
 18976  002F02                     
 18977                           ;libraries/lcd_highlevel.c: 663:     for(i=posX1;i<=posX2;i++)
 18978  002F02  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18979  002F06  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18980  002F0A  EF91  F017         	goto	l8273
 18981  002F0E                     l291:
 18982                           
 18983                           ;libraries/lcd_highlevel.c: 664:     {;libraries/lcd_highlevel.c: 665:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18984  002F0E  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18985  002F12  968B               	bcf	3979,3,c	;volatile
 18986  002F14  868B               	bsf	3979,3,c	;volatile
 18987                           
 18988                           ;libraries/lcd_highlevel.c: 666:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18989  002F16  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18990  002F1A  968B               	bcf	3979,3,c	;volatile
 18991  002F1C  868B               	bsf	3979,3,c	;volatile
 18992  002F1E                     
 18993                           ;libraries/lcd_highlevel.c: 667:     }
 18994  002F1E  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18995  002F20  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18996  002F22                     l8273:
 18997  002F22  5023               	movf	LCD_DrawRect@i^0,w,c
 18998  002F24  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18999  002F26  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19000  002F28  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 19001  002F2A  B0D8               	btfsc	status,0,c
 19002  002F2C  EF9A  F017         	goto	u5881
 19003  002F30  EF9C  F017         	goto	u5880
 19004  002F34                     u5881:
 19005  002F34  EF87  F017         	goto	l291
 19006  002F38                     u5880:
 19007  002F38                     
 19008                           ;libraries/lcd_highlevel.c: 669:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19009  002F38  0E2A               	movlw	42
 19010  002F3A  6E80               	movwf	128,c	;volatile
 19011  002F3C  988B               	bcf	3979,4,c	;volatile
 19012  002F3E  968B               	bcf	3979,3,c	;volatile
 19013  002F40  868B               	bsf	3979,3,c	;volatile
 19014  002F42  888B               	bsf	3979,4,c	;volatile
 19015                           
 19016                           ;libraries/lcd_highlevel.c: 670:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19017  002F44  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19018  002F46  6E80               	movwf	128,c	;volatile
 19019  002F48  968B               	bcf	3979,3,c	;volatile
 19020  002F4A  868B               	bsf	3979,3,c	;volatile
 19021  002F4C                     
 19022                           ;libraries/lcd_highlevel.c: 671:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19023  002F4C  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19024  002F50  968B               	bcf	3979,3,c	;volatile
 19025  002F52  868B               	bsf	3979,3,c	;volatile
 19026                           
 19027                           ;libraries/lcd_highlevel.c: 672:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19028  002F54  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19029  002F56  6E80               	movwf	128,c	;volatile
 19030  002F58  968B               	bcf	3979,3,c	;volatile
 19031  002F5A  868B               	bsf	3979,3,c	;volatile
 19032  002F5C                     
 19033                           ;libraries/lcd_highlevel.c: 673:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19034  002F5C  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19035  002F60  968B               	bcf	3979,3,c	;volatile
 19036  002F62  868B               	bsf	3979,3,c	;volatile
 19037                           
 19038                           ;libraries/lcd_highlevel.c: 675:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19039  002F64  0E2B               	movlw	43
 19040  002F66  6E80               	movwf	128,c	;volatile
 19041  002F68  988B               	bcf	3979,4,c	;volatile
 19042  002F6A  968B               	bcf	3979,3,c	;volatile
 19043  002F6C  868B               	bsf	3979,3,c	;volatile
 19044  002F6E  888B               	bsf	3979,4,c	;volatile
 19045                           
 19046                           ;libraries/lcd_highlevel.c: 676:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 19047  002F70  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 19048  002F72  6E80               	movwf	128,c	;volatile
 19049  002F74  968B               	bcf	3979,3,c	;volatile
 19050  002F76  868B               	bsf	3979,3,c	;volatile
 19051  002F78                     
 19052                           ;libraries/lcd_highlevel.c: 677:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 19053  002F78  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 19054  002F7C  968B               	bcf	3979,3,c	;volatile
 19055  002F7E  868B               	bsf	3979,3,c	;volatile
 19056                           
 19057                           ;libraries/lcd_highlevel.c: 678:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 19058  002F80  0E01               	movlw	1
 19059  002F82  6E80               	movwf	128,c	;volatile
 19060  002F84  968B               	bcf	3979,3,c	;volatile
 19061  002F86  868B               	bsf	3979,3,c	;volatile
 19062                           
 19063                           ;libraries/lcd_highlevel.c: 679:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 19064  002F88  0E3F               	movlw	63
 19065  002F8A  6E80               	movwf	128,c	;volatile
 19066  002F8C  968B               	bcf	3979,3,c	;volatile
 19067  002F8E  868B               	bsf	3979,3,c	;volatile
 19068                           
 19069                           ;libraries/lcd_highlevel.c: 680:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19070  002F90  0E2C               	movlw	44
 19071  002F92  6E80               	movwf	128,c	;volatile
 19072  002F94  988B               	bcf	3979,4,c	;volatile
 19073  002F96  968B               	bcf	3979,3,c	;volatile
 19074  002F98  868B               	bsf	3979,3,c	;volatile
 19075  002F9A  888B               	bsf	3979,4,c	;volatile
 19076  002F9C                     
 19077                           ;libraries/lcd_highlevel.c: 681:     for(i=posY1;i<=posY2;i++)
 19078  002F9C  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19079  002FA0  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19080  002FA4  EFDE  F017         	goto	l8343
 19081  002FA8                     l294:
 19082                           
 19083                           ;libraries/lcd_highlevel.c: 682:     {;libraries/lcd_highlevel.c: 683:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19084  002FA8  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19085  002FAC  968B               	bcf	3979,3,c	;volatile
 19086  002FAE  868B               	bsf	3979,3,c	;volatile
 19087                           
 19088                           ;libraries/lcd_highlevel.c: 684:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19089  002FB0  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19090  002FB4  968B               	bcf	3979,3,c	;volatile
 19091  002FB6  868B               	bsf	3979,3,c	;volatile
 19092  002FB8                     
 19093                           ;libraries/lcd_highlevel.c: 685:     }
 19094  002FB8  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19095  002FBA  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19096  002FBC                     l8343:
 19097  002FBC  5023               	movf	LCD_DrawRect@i^0,w,c
 19098  002FBE  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19099  002FC0  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19100  002FC2  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19101  002FC4  B0D8               	btfsc	status,0,c
 19102  002FC6  EFE7  F017         	goto	u5891
 19103  002FCA  EFE9  F017         	goto	u5890
 19104  002FCE                     u5891:
 19105  002FCE  EFD4  F017         	goto	l294
 19106  002FD2                     u5890:
 19107  002FD2                     
 19108                           ;libraries/lcd_highlevel.c: 687:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19109  002FD2  0E2A               	movlw	42
 19110  002FD4  6E80               	movwf	128,c	;volatile
 19111  002FD6  988B               	bcf	3979,4,c	;volatile
 19112  002FD8  968B               	bcf	3979,3,c	;volatile
 19113  002FDA  868B               	bsf	3979,3,c	;volatile
 19114  002FDC  888B               	bsf	3979,4,c	;volatile
 19115                           
 19116                           ;libraries/lcd_highlevel.c: 688:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19117  002FDE  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19118  002FE0  6E80               	movwf	128,c	;volatile
 19119  002FE2  968B               	bcf	3979,3,c	;volatile
 19120  002FE4  868B               	bsf	3979,3,c	;volatile
 19121  002FE6                     
 19122                           ;libraries/lcd_highlevel.c: 689:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19123  002FE6  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19124  002FEA  968B               	bcf	3979,3,c	;volatile
 19125  002FEC  868B               	bsf	3979,3,c	;volatile
 19126                           
 19127                           ;libraries/lcd_highlevel.c: 690:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19128  002FEE  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19129  002FF0  6E80               	movwf	128,c	;volatile
 19130  002FF2  968B               	bcf	3979,3,c	;volatile
 19131  002FF4  868B               	bsf	3979,3,c	;volatile
 19132  002FF6                     
 19133                           ;libraries/lcd_highlevel.c: 691:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19134  002FF6  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19135  002FFA  968B               	bcf	3979,3,c	;volatile
 19136  002FFC  868B               	bsf	3979,3,c	;volatile
 19137                           
 19138                           ;libraries/lcd_highlevel.c: 692:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19139  002FFE  0E2C               	movlw	44
 19140  003000  6E80               	movwf	128,c	;volatile
 19141  003002  988B               	bcf	3979,4,c	;volatile
 19142  003004  968B               	bcf	3979,3,c	;volatile
 19143  003006  868B               	bsf	3979,3,c	;volatile
 19144  003008  888B               	bsf	3979,4,c	;volatile
 19145  00300A                     
 19146                           ;libraries/lcd_highlevel.c: 693:     for(i=posY1;i<=posY2;i++)
 19147  00300A  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19148  00300E  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19149  003012  EF15  F018         	goto	l8387
 19150  003016                     l297:
 19151                           
 19152                           ;libraries/lcd_highlevel.c: 694:     {;libraries/lcd_highlevel.c: 695:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19153  003016  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19154  00301A  968B               	bcf	3979,3,c	;volatile
 19155  00301C  868B               	bsf	3979,3,c	;volatile
 19156                           
 19157                           ;libraries/lcd_highlevel.c: 696:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19158  00301E  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19159  003022  968B               	bcf	3979,3,c	;volatile
 19160  003024  868B               	bsf	3979,3,c	;volatile
 19161  003026                     
 19162                           ;libraries/lcd_highlevel.c: 697:     }
 19163  003026  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19164  003028  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19165  00302A                     l8387:
 19166  00302A  5023               	movf	LCD_DrawRect@i^0,w,c
 19167  00302C  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19168  00302E  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19169  003030  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19170  003032  B0D8               	btfsc	status,0,c
 19171  003034  EF1E  F018         	goto	u5901
 19172  003038  EF20  F018         	goto	u5900
 19173  00303C                     u5901:
 19174  00303C  EF0B  F018         	goto	l297
 19175  003040                     u5900:
 19176  003040                     l299:
 19177  003040  0012               	return		;funcret
 19178  003042                     __end_of_LCD_DrawRect:
 19179                           	callstack 0
 19180                           
 19181 ;; *************** function _XF_popEvent *****************
 19182 ;; Defined at:
 19183 ;;		line 72 in file "xf/xf.c"
 19184 ;; Parameters:    Size  Location     Type
 19185 ;;  inISR           1    wreg     _Bool 
 19186 ;; Auto vars:     Size  Location     Type
 19187 ;;  inISR           1   24[COMRAM] _Bool 
 19188 ;;  ev              1   23[COMRAM] unsigned char 
 19189 ;; Return value:  Size  Location     Type
 19190 ;;                  1    wreg      unsigned char 
 19191 ;; Registers used:
 19192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19193 ;; Tracked objects:
 19194 ;;		On entry : 0/0
 19195 ;;		On exit  : 0/0
 19196 ;;		Unchanged: 0/0
 19197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19198 ;;      Params:         0       0       0       0       0       0       0
 19199 ;;      Locals:         2       0       0       0       0       0       0
 19200 ;;      Temps:          0       0       0       0       0       0       0
 19201 ;;      Totals:         2       0       0       0       0       0       0
 19202 ;;Total ram usage:        2 bytes
 19203 ;; Hardware stack levels used: 1
 19204 ;; Hardware stack levels required when called: 5
 19205 ;; This function calls:
 19206 ;;		_ENTERCRITICAL
 19207 ;;		_LEAVECRITICAL
 19208 ;;		___awmod
 19209 ;; This function is called by:
 19210 ;;		_Factory_exec
 19211 ;; This function uses a non-reentrant model
 19212 ;;
 19213                           
 19214                           	psect	text76
 19215  005E86                     __ptext76:
 19216                           	callstack 0
 19217  005E86                     _XF_popEvent:
 19218                           	callstack 24
 19219                           
 19220                           ;incstack = 0
 19221                           ;XF_popEvent@inISR stored from wreg
 19222  005E86  6E19               	movwf	XF_popEvent@inISR^0,c
 19223  005E88                     
 19224                           ;xf/xf.c: 76:     ENTERCRITICAL(inISR);
 19225  005E88  5019               	movf	XF_popEvent@inISR^0,w,c
 19226  005E8A  ECB2  F031         	call	_ENTERCRITICAL
 19227  005E8E                     
 19228                           ;xf/xf.c: 77:     if(theXF.in == theXF.out)
 19229  005E8E  0100               	movlb	0	; () banked
 19230  005E90  51DA               	movf	(_theXF+37)& (0+255),w,b
 19231  005E92  19D9               	xorwf	(_theXF+36)& (0+255),w,b
 19232  005E94  A4D8               	btfss	status,2,c
 19233  005E96  EF4F  F02F         	goto	u7781
 19234  005E9A  EF51  F02F         	goto	u7780
 19235  005E9E                     u7781:
 19236  005E9E  EF57  F02F         	goto	l10285
 19237  005EA2                     u7780:
 19238  005EA2                     
 19239                           ; BSR set to: 0
 19240                           ;xf/xf.c: 78:     {;xf/xf.c: 79:       LEAVECRITICAL(inISR);
 19241  005EA2  5019               	movf	XF_popEvent@inISR^0,w,c
 19242  005EA4  ECA7  F031         	call	_LEAVECRITICAL
 19243  005EA8                     
 19244                           ;xf/xf.c: 80:       return ev;
 19245  005EA8  0E00               	movlw	0
 19246  005EAA  EF72  F02F         	goto	l732
 19247  005EAE                     l10285:
 19248                           
 19249                           ; BSR set to: 0
 19250                           ;xf/xf.c: 82:     ev = theXF.eventQueue[theXF.out];
 19251  005EAE  0ECD               	movlw	low (_theXF+24)
 19252  005EB0  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19253  005EB2  6ED9               	movwf	fsr2l,c
 19254  005EB4  6ADA               	clrf	fsr2h,c
 19255  005EB6  0E00               	movlw	high (_theXF+24)
 19256  005EB8  22DA               	addwfc	fsr2h,f,c
 19257  005EBA  50DF               	movf	indf2,w,c
 19258  005EBC  6E18               	movwf	XF_popEvent@ev^0,c
 19259  005EBE                     
 19260                           ; BSR set to: 0
 19261                           ;xf/xf.c: 83:     theXF.out = (theXF.out + 1)%(uint8_t)sizeof(theXF.eventQueue);
 19262  005EBE  0E01               	movlw	1
 19263  005EC0  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19264  005EC2  6E12               	movwf	___awmod@dividend^0,c
 19265  005EC4  6A13               	clrf	(___awmod@dividend+1)^0,c
 19266  005EC6  0E00               	movlw	0
 19267  005EC8  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 19268  005ECA  0E00               	movlw	0
 19269  005ECC  6E15               	movwf	(___awmod@divisor+1)^0,c
 19270  005ECE  0E0C               	movlw	12
 19271  005ED0  6E14               	movwf	___awmod@divisor^0,c
 19272  005ED2  ECC6  F02B         	call	___awmod	;wreg free
 19273  005ED6  5012               	movf	?___awmod^0,w,c
 19274  005ED8  0100               	movlb	0	; () banked
 19275  005EDA  6FDA               	movwf	(_theXF+37)& (0+255),b
 19276  005EDC                     
 19277                           ; BSR set to: 0
 19278                           ;xf/xf.c: 84:     LEAVECRITICAL(inISR);
 19279  005EDC  5019               	movf	XF_popEvent@inISR^0,w,c
 19280  005EDE  ECA7  F031         	call	_LEAVECRITICAL
 19281  005EE2                     
 19282                           ;xf/xf.c: 85:     return ev;
 19283  005EE2  5018               	movf	XF_popEvent@ev^0,w,c
 19284  005EE4                     l732:
 19285  005EE4  0012               	return		;funcret
 19286  005EE6                     __end_of_XF_popEvent:
 19287                           	callstack 0
 19288                           
 19289 ;; *************** function ___awmod *****************
 19290 ;; Defined at:
 19291 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 19292 ;; Parameters:    Size  Location     Type
 19293 ;;  dividend        2   17[COMRAM] int 
 19294 ;;  divisor         2   19[COMRAM] int 
 19295 ;; Auto vars:     Size  Location     Type
 19296 ;;  sign            1   22[COMRAM] unsigned char 
 19297 ;;  counter         1   21[COMRAM] unsigned char 
 19298 ;; Return value:  Size  Location     Type
 19299 ;;                  2   17[COMRAM] int 
 19300 ;; Registers used:
 19301 ;;		wreg, status,2, status,0
 19302 ;; Tracked objects:
 19303 ;;		On entry : 0/0
 19304 ;;		On exit  : 0/0
 19305 ;;		Unchanged: 0/0
 19306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19307 ;;      Params:         4       0       0       0       0       0       0
 19308 ;;      Locals:         2       0       0       0       0       0       0
 19309 ;;      Temps:          0       0       0       0       0       0       0
 19310 ;;      Totals:         6       0       0       0       0       0       0
 19311 ;;Total ram usage:        6 bytes
 19312 ;; Hardware stack levels used: 1
 19313 ;; Hardware stack levels required when called: 4
 19314 ;; This function calls:
 19315 ;;		Nothing
 19316 ;; This function is called by:
 19317 ;;		_XF_pushEvent
 19318 ;;		_XF_popEvent
 19319 ;; This function uses a non-reentrant model
 19320 ;;
 19321                           
 19322                           	psect	text77
 19323  00578C                     __ptext77:
 19324                           	callstack 0
 19325  00578C                     ___awmod:
 19326                           	callstack 20
 19327  00578C  0E00               	movlw	0
 19328  00578E  6E17               	movwf	___awmod@sign^0,c
 19329  005790  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
 19330  005792  EFCF  F02B         	goto	u6030
 19331  005796  EFCD  F02B         	goto	u6031
 19332  00579A                     u6031:
 19333  00579A  EFD5  F02B         	goto	l8577
 19334  00579E                     u6030:
 19335  00579E  6C12               	negf	___awmod@dividend^0,c
 19336  0057A0  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19337  0057A2  B0D8               	btfsc	status,0,c
 19338  0057A4  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19339  0057A6  0E01               	movlw	1
 19340  0057A8  6E17               	movwf	___awmod@sign^0,c
 19341  0057AA                     l8577:
 19342  0057AA  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
 19343  0057AC  EFDC  F02B         	goto	u6040
 19344  0057B0  EFDA  F02B         	goto	u6041
 19345  0057B4                     u6041:
 19346  0057B4  EFE0  F02B         	goto	l8581
 19347  0057B8                     u6040:
 19348  0057B8  6C14               	negf	___awmod@divisor^0,c
 19349  0057BA  1E15               	comf	(___awmod@divisor+1)^0,f,c
 19350  0057BC  B0D8               	btfsc	status,0,c
 19351  0057BE  2A15               	incf	(___awmod@divisor+1)^0,f,c
 19352  0057C0                     l8581:
 19353  0057C0  5014               	movf	___awmod@divisor^0,w,c
 19354  0057C2  1015               	iorwf	(___awmod@divisor+1)^0,w,c
 19355  0057C4  B4D8               	btfsc	status,2,c
 19356  0057C6  EFE7  F02B         	goto	u6051
 19357  0057CA  EFE9  F02B         	goto	u6050
 19358  0057CE                     u6051:
 19359  0057CE  EF0D  F02C         	goto	l8597
 19360  0057D2                     u6050:
 19361  0057D2  0E01               	movlw	1
 19362  0057D4  6E16               	movwf	___awmod@counter^0,c
 19363  0057D6  EFF1  F02B         	goto	l8587
 19364  0057DA                     l8585:
 19365  0057DA  90D8               	bcf	status,0,c
 19366  0057DC  3614               	rlcf	___awmod@divisor^0,f,c
 19367  0057DE  3615               	rlcf	(___awmod@divisor+1)^0,f,c
 19368  0057E0  2A16               	incf	___awmod@counter^0,f,c
 19369  0057E2                     l8587:
 19370  0057E2  AE15               	btfss	(___awmod@divisor+1)^0,7,c
 19371  0057E4  EFF6  F02B         	goto	u6061
 19372  0057E8  EFF8  F02B         	goto	u6060
 19373  0057EC                     u6061:
 19374  0057EC  EFED  F02B         	goto	l8585
 19375  0057F0                     u6060:
 19376  0057F0                     l8589:
 19377  0057F0  5014               	movf	___awmod@divisor^0,w,c
 19378  0057F2  5C12               	subwf	___awmod@dividend^0,w,c
 19379  0057F4  5015               	movf	(___awmod@divisor+1)^0,w,c
 19380  0057F6  5813               	subwfb	(___awmod@dividend+1)^0,w,c
 19381  0057F8  A0D8               	btfss	status,0,c
 19382  0057FA  EF01  F02C         	goto	u6071
 19383  0057FE  EF03  F02C         	goto	u6070
 19384  005802                     u6071:
 19385  005802  EF07  F02C         	goto	l8593
 19386  005806                     u6070:
 19387  005806  5014               	movf	___awmod@divisor^0,w,c
 19388  005808  5E12               	subwf	___awmod@dividend^0,f,c
 19389  00580A  5015               	movf	(___awmod@divisor+1)^0,w,c
 19390  00580C  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
 19391  00580E                     l8593:
 19392  00580E  90D8               	bcf	status,0,c
 19393  005810  3215               	rrcf	(___awmod@divisor+1)^0,f,c
 19394  005812  3214               	rrcf	___awmod@divisor^0,f,c
 19395  005814  2E16               	decfsz	___awmod@counter^0,f,c
 19396  005816  EFF8  F02B         	goto	l8589
 19397  00581A                     l8597:
 19398  00581A  5017               	movf	___awmod@sign^0,w,c
 19399  00581C  B4D8               	btfsc	status,2,c
 19400  00581E  EF13  F02C         	goto	u6081
 19401  005822  EF15  F02C         	goto	u6080
 19402  005826                     u6081:
 19403  005826  EF19  F02C         	goto	l8601
 19404  00582A                     u6080:
 19405  00582A  6C12               	negf	___awmod@dividend^0,c
 19406  00582C  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19407  00582E  B0D8               	btfsc	status,0,c
 19408  005830  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19409  005832                     l8601:
 19410  005832  C012  F012         	movff	___awmod@dividend,?___awmod
 19411  005836  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
 19412  00583A  0012               	return		;funcret
 19413  00583C                     __end_of___awmod:
 19414                           	callstack 0
 19415                           
 19416 ;; *************** function _LEAVECRITICAL *****************
 19417 ;; Defined at:
 19418 ;;		line 186 in file "xf/xf.c"
 19419 ;; Parameters:    Size  Location     Type
 19420 ;;  inISR           1    wreg     _Bool 
 19421 ;; Auto vars:     Size  Location     Type
 19422 ;;  inISR           1   17[COMRAM] _Bool 
 19423 ;; Return value:  Size  Location     Type
 19424 ;;                  1    wreg      void 
 19425 ;; Registers used:
 19426 ;;		wreg, status,2
 19427 ;; Tracked objects:
 19428 ;;		On entry : 0/0
 19429 ;;		On exit  : 0/0
 19430 ;;		Unchanged: 0/0
 19431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19432 ;;      Params:         0       0       0       0       0       0       0
 19433 ;;      Locals:         1       0       0       0       0       0       0
 19434 ;;      Temps:          0       0       0       0       0       0       0
 19435 ;;      Totals:         1       0       0       0       0       0       0
 19436 ;;Total ram usage:        1 bytes
 19437 ;; Hardware stack levels used: 1
 19438 ;; Hardware stack levels required when called: 4
 19439 ;; This function calls:
 19440 ;;		Nothing
 19441 ;; This function is called by:
 19442 ;;		_XF_pushEvent
 19443 ;;		_XF_popEvent
 19444 ;;		_XF_scheduleTimer
 19445 ;; This function uses a non-reentrant model
 19446 ;;
 19447                           
 19448                           	psect	text78
 19449  00634E                     __ptext78:
 19450                           	callstack 0
 19451  00634E                     _LEAVECRITICAL:
 19452                           	callstack 20
 19453                           
 19454                           ;incstack = 0
 19455                           ;LEAVECRITICAL@inISR stored from wreg
 19456  00634E  6E12               	movwf	LEAVECRITICAL@inISR^0,c
 19457  006350                     
 19458                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 19459  006350  5012               	movf	LEAVECRITICAL@inISR^0,w,c
 19460  006352  A4D8               	btfss	status,2,c
 19461  006354  EFAE  F031         	goto	u5961
 19462  006358  EFB0  F031         	goto	u5960
 19463  00635C                     u5961:
 19464  00635C  EFB1  F031         	goto	l758
 19465  006360                     u5960:
 19466  006360                     
 19467                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 19468  006360  8EF2               	bsf	4082,7,c	;volatile
 19469  006362                     l758:
 19470  006362  0012               	return		;funcret
 19471  006364                     __end_of_LEAVECRITICAL:
 19472                           	callstack 0
 19473                           
 19474 ;; *************** function _ENTERCRITICAL *****************
 19475 ;; Defined at:
 19476 ;;		line 172 in file "xf/xf.c"
 19477 ;; Parameters:    Size  Location     Type
 19478 ;;  inISR           1    wreg     _Bool 
 19479 ;; Auto vars:     Size  Location     Type
 19480 ;;  inISR           1   17[COMRAM] _Bool 
 19481 ;; Return value:  Size  Location     Type
 19482 ;;                  1    wreg      void 
 19483 ;; Registers used:
 19484 ;;		wreg, status,2
 19485 ;; Tracked objects:
 19486 ;;		On entry : 0/0
 19487 ;;		On exit  : 0/0
 19488 ;;		Unchanged: 0/0
 19489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19490 ;;      Params:         0       0       0       0       0       0       0
 19491 ;;      Locals:         1       0       0       0       0       0       0
 19492 ;;      Temps:          0       0       0       0       0       0       0
 19493 ;;      Totals:         1       0       0       0       0       0       0
 19494 ;;Total ram usage:        1 bytes
 19495 ;; Hardware stack levels used: 1
 19496 ;; Hardware stack levels required when called: 4
 19497 ;; This function calls:
 19498 ;;		Nothing
 19499 ;; This function is called by:
 19500 ;;		_XF_pushEvent
 19501 ;;		_XF_popEvent
 19502 ;;		_XF_scheduleTimer
 19503 ;; This function uses a non-reentrant model
 19504 ;;
 19505                           
 19506                           	psect	text79
 19507  006364                     __ptext79:
 19508                           	callstack 0
 19509  006364                     _ENTERCRITICAL:
 19510                           	callstack 20
 19511                           
 19512                           ;incstack = 0
 19513                           ;ENTERCRITICAL@inISR stored from wreg
 19514  006364  6E12               	movwf	ENTERCRITICAL@inISR^0,c
 19515  006366                     
 19516                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 19517  006366  5012               	movf	ENTERCRITICAL@inISR^0,w,c
 19518  006368  A4D8               	btfss	status,2,c
 19519  00636A  EFB9  F031         	goto	u5951
 19520  00636E  EFBB  F031         	goto	u5950
 19521  006372                     u5951:
 19522  006372  EFBC  F031         	goto	l754
 19523  006376                     u5950:
 19524  006376                     
 19525                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 19526  006376  9EF2               	bcf	4082,7,c	;volatile
 19527  006378                     l754:
 19528  006378  0012               	return		;funcret
 19529  00637A                     __end_of_ENTERCRITICAL:
 19530                           	callstack 0
 19531                           
 19532 ;; *************** function _isr *****************
 19533 ;; Defined at:
 19534 ;;		line 18 in file "main.c"
 19535 ;; Parameters:    Size  Location     Type
 19536 ;;		None
 19537 ;; Auto vars:     Size  Location     Type
 19538 ;;		None
 19539 ;; Return value:  Size  Location     Type
 19540 ;;                  1    wreg      void 
 19541 ;; Registers used:
 19542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19543 ;; Tracked objects:
 19544 ;;		On entry : 0/0
 19545 ;;		On exit  : 0/0
 19546 ;;		Unchanged: 0/0
 19547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19548 ;;      Params:         0       0       0       0       0       0       0
 19549 ;;      Locals:         0       0       0       0       0       0       0
 19550 ;;      Temps:          4       0       0       0       0       0       0
 19551 ;;      Totals:         4       0       0       0       0       0       0
 19552 ;;Total ram usage:        4 bytes
 19553 ;; Hardware stack levels used: 1
 19554 ;; Hardware stack levels required when called: 3
 19555 ;; This function calls:
 19556 ;;		_XF_decrementAndQueueTimers
 19557 ;;		i2_XF_pushEvent
 19558 ;; This function is called by:
 19559 ;;		Interrupt level 2
 19560 ;; This function uses a non-reentrant model
 19561 ;;
 19562                           
 19563                           	psect	intcode
 19564  000008                     __pintcode:
 19565                           	callstack 0
 19566  000008                     _isr:
 19567                           	callstack 14
 19568                           
 19569                           ;incstack = 0
 19570  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 19571  00000A  CFD9 F00E          	movff	fsr2l,??_isr
 19572  00000E  CFDA F00F          	movff	fsr2h,??_isr+1
 19573  000012  CFF3 F010          	movff	prodl,??_isr+2
 19574  000016  CFF4 F011          	movff	prodh,??_isr+3
 19575  00001A                     
 19576                           ;main.c: 20:     if((INT1IF==1)&&(INT1IE==1))
 19577  00001A  A0F0               	btfss	4080,0,c	;volatile
 19578  00001C  EF12  F000         	goto	i2u536_41
 19579  000020  EF14  F000         	goto	i2u536_40
 19580  000024                     i2u536_41:
 19581  000024  EF39  F000         	goto	i2l7679
 19582  000028                     i2u536_40:
 19583  000028  A6F0               	btfss	4080,3,c	;volatile
 19584  00002A  EF19  F000         	goto	i2u537_41
 19585  00002E  EF1B  F000         	goto	i2u537_40
 19586  000032                     i2u537_41:
 19587  000032  EF39  F000         	goto	i2l7679
 19588  000036                     i2u537_40:
 19589  000036                     
 19590                           ;main.c: 21:     {;main.c: 22:         if(INTEDG1==0)
 19591  000036  BAF1               	btfsc	4081,5,c	;volatile
 19592  000038  EF20  F000         	goto	i2u538_41
 19593  00003C  EF22  F000         	goto	i2u538_40
 19594  000040                     i2u538_41:
 19595  000040  EF2B  F000         	goto	i2l792
 19596  000044                     i2u538_40:
 19597  000044                     
 19598                           ;main.c: 23:         {;main.c: 24:             INTEDG1=1;
 19599  000044  8AF1               	bsf	4081,5,c	;volatile
 19600                           
 19601                           ;main.c: 25:             INT1IF=0;
 19602  000046  90F0               	bcf	4080,0,c	;volatile
 19603  000048                     
 19604                           ;main.c: 26:             XF_pushEvent(evPress,1);
 19605  000048  0E01               	movlw	1
 19606  00004A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19607  00004C  0E01               	movlw	1
 19608  00004E  ECE0  F02E         	call	i2_XF_pushEvent
 19609                           
 19610                           ;main.c: 28:         }
 19611  000052  EF39  F000         	goto	i2l7679
 19612  000056                     i2l792:
 19613  000056  AAF1               	btfss	4081,5,c	;volatile
 19614  000058  EF30  F000         	goto	i2u539_41
 19615  00005C  EF32  F000         	goto	i2u539_40
 19616  000060                     i2u539_41:
 19617  000060  EF39  F000         	goto	i2l7679
 19618  000064                     i2u539_40:
 19619  000064                     
 19620                           ;main.c: 30:         {;main.c: 31:             INTEDG1=0;
 19621  000064  9AF1               	bcf	4081,5,c	;volatile
 19622                           
 19623                           ;main.c: 32:             INT1IF=0;
 19624  000066  90F0               	bcf	4080,0,c	;volatile
 19625  000068                     
 19626                           ;main.c: 33:             XF_pushEvent(evRelease,1);
 19627  000068  0E01               	movlw	1
 19628  00006A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19629  00006C  0E02               	movlw	2
 19630  00006E  ECE0  F02E         	call	i2_XF_pushEvent
 19631  000072                     i2l7679:
 19632                           
 19633                           ;main.c: 39:     if((TMR0IF==1)&&(TMR0IE==1))
 19634  000072  A4F2               	btfss	4082,2,c	;volatile
 19635  000074  EF3E  F000         	goto	i2u540_41
 19636  000078  EF40  F000         	goto	i2u540_40
 19637  00007C                     i2u540_41:
 19638  00007C  EF4E  F000         	goto	i2l796
 19639  000080                     i2u540_40:
 19640  000080  AAF2               	btfss	4082,5,c	;volatile
 19641  000082  EF45  F000         	goto	i2u541_41
 19642  000086  EF47  F000         	goto	i2u541_40
 19643  00008A                     i2u541_41:
 19644  00008A  EF4E  F000         	goto	i2l796
 19645  00008E                     i2u541_40:
 19646  00008E                     
 19647                           ;main.c: 40:     {;main.c: 41:         XF_decrementAndQueueTimers();
 19648  00008E  EC47  F022         	call	_XF_decrementAndQueueTimers	;wreg free
 19649  000092                     
 19650                           ;main.c: 42:         TMR0H=0xFB;
 19651  000092  0EFB               	movlw	251
 19652  000094  6ED7               	movwf	215,c	;volatile
 19653  000096                     
 19654                           ;main.c: 43:         TMR0L=0x1D;
 19655  000096  0E1D               	movlw	29
 19656  000098  6ED6               	movwf	214,c	;volatile
 19657  00009A                     
 19658                           ;main.c: 44:         TMR0IF=0;
 19659  00009A  94F2               	bcf	4082,2,c	;volatile
 19660  00009C                     i2l796:
 19661  00009C  C011  FFF4         	movff	??_isr+3,prodh
 19662  0000A0  C010  FFF3         	movff	??_isr+2,prodl
 19663  0000A4  C00F  FFDA         	movff	??_isr+1,fsr2h
 19664  0000A8  C00E  FFD9         	movff	??_isr,fsr2l
 19665  0000AC  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 19666  0000AE  0011               	retfie		f
 19667  0000B0                     __end_of_isr:
 19668                           	callstack 0
 19669                           
 19670 ;; *************** function _XF_decrementAndQueueTimers *****************
 19671 ;; Defined at:
 19672 ;;		line 139 in file "xf/xf.c"
 19673 ;; Parameters:    Size  Location     Type
 19674 ;;		None
 19675 ;; Auto vars:     Size  Location     Type
 19676 ;;  i               2   11[COMRAM] int 
 19677 ;; Return value:  Size  Location     Type
 19678 ;;                  1    wreg      void 
 19679 ;; Registers used:
 19680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19681 ;; Tracked objects:
 19682 ;;		On entry : 0/0
 19683 ;;		On exit  : 0/0
 19684 ;;		Unchanged: 0/0
 19685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19686 ;;      Params:         0       0       0       0       0       0       0
 19687 ;;      Locals:         2       0       0       0       0       0       0
 19688 ;;      Temps:          2       0       0       0       0       0       0
 19689 ;;      Totals:         4       0       0       0       0       0       0
 19690 ;;Total ram usage:        4 bytes
 19691 ;; Hardware stack levels used: 1
 19692 ;; Hardware stack levels required when called: 2
 19693 ;; This function calls:
 19694 ;;		_XF_unscheduleTimer
 19695 ;;		i2_XF_pushEvent
 19696 ;;		i2___wmul
 19697 ;; This function is called by:
 19698 ;;		_isr
 19699 ;; This function uses a non-reentrant model
 19700 ;;
 19701                           
 19702                           	psect	text81
 19703  00448E                     __ptext81:
 19704                           	callstack 0
 19705  00448E                     _XF_decrementAndQueueTimers:
 19706                           	callstack 14
 19707  00448E                     
 19708                           ;xf/xf.c: 141:     int i;;xf/xf.c: 142:     for (i=0; i<8; i++)
 19709  00448E  0E00               	movlw	0
 19710  004490  6E0D               	movwf	(XF_decrementAndQueueTimers@i+1)^0,c
 19711  004492  0E00               	movlw	0
 19712  004494  6E0C               	movwf	XF_decrementAndQueueTimers@i^0,c
 19713  004496                     i2l7651:
 19714                           
 19715                           ;xf/xf.c: 143:     {;xf/xf.c: 144:         if (theXF.timerList[i].ev != NULLEVENT)
 19716  004496  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19717  00449A  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19718  00449E  0E00               	movlw	0
 19719  0044A0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19720  0044A2  0E03               	movlw	3
 19721  0044A4  6E03               	movwf	i2___wmul@multiplicand^0,c
 19722  0044A6  EC5A  F031         	call	i2___wmul	;wreg free
 19723  0044AA  0EB7               	movlw	low (_theXF+2)
 19724  0044AC  2401               	addwf	?i2___wmul^0,w,c
 19725  0044AE  6ED9               	movwf	fsr2l,c
 19726  0044B0  0E00               	movlw	high (_theXF+2)
 19727  0044B2  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19728  0044B4  6EDA               	movwf	fsr2h,c
 19729  0044B6  50DF               	movf	indf2,w,c
 19730  0044B8  B4D8               	btfsc	status,2,c
 19731  0044BA  EF61  F022         	goto	i2u532_41
 19732  0044BE  EF63  F022         	goto	i2u532_40
 19733  0044C2                     i2u532_41:
 19734  0044C2  EFC7  F022         	goto	i2l7661
 19735  0044C6                     i2u532_40:
 19736  0044C6                     
 19737                           ;xf/xf.c: 145:         {;xf/xf.c: 147:             theXF.timerList[i].tm-=1;
 19738  0044C6  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19739  0044CA  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19740  0044CE  0E00               	movlw	0
 19741  0044D0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19742  0044D2  0E03               	movlw	3
 19743  0044D4  6E03               	movwf	i2___wmul@multiplicand^0,c
 19744  0044D6  EC5A  F031         	call	i2___wmul	;wreg free
 19745  0044DA  0EB5               	movlw	low _theXF
 19746  0044DC  2401               	addwf	?i2___wmul^0,w,c
 19747  0044DE  6ED9               	movwf	fsr2l,c
 19748  0044E0  0E00               	movlw	high _theXF
 19749  0044E2  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19750  0044E4  6EDA               	movwf	fsr2h,c
 19751  0044E6  06DE               	decf	postinc2,f,c
 19752  0044E8  0E00               	movlw	0
 19753  0044EA  5ADD               	subwfb	postdec2,f,c
 19754                           
 19755                           ;xf/xf.c: 148:             if (theXF.timerList[i].tm ==0)
 19756  0044EC  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19757  0044F0  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19758  0044F4  0E00               	movlw	0
 19759  0044F6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19760  0044F8  0E03               	movlw	3
 19761  0044FA  6E03               	movwf	i2___wmul@multiplicand^0,c
 19762  0044FC  EC5A  F031         	call	i2___wmul	;wreg free
 19763  004500  0EB5               	movlw	low _theXF
 19764  004502  2401               	addwf	?i2___wmul^0,w,c
 19765  004504  6ED9               	movwf	fsr2l,c
 19766  004506  0E00               	movlw	high _theXF
 19767  004508  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19768  00450A  6EDA               	movwf	fsr2h,c
 19769  00450C  50DE               	movf	postinc2,w,c
 19770  00450E  10DE               	iorwf	postinc2,w,c
 19771  004510  A4D8               	btfss	status,2,c
 19772  004512  EF8D  F022         	goto	i2u533_41
 19773  004516  EF8F  F022         	goto	i2u533_40
 19774  00451A                     i2u533_41:
 19775  00451A  EFC7  F022         	goto	i2l7661
 19776  00451E                     i2u533_40:
 19777  00451E                     
 19778                           ;xf/xf.c: 149:             {;xf/xf.c: 150:                 if(XF_pushEvent(theXF.timerLi
      +                          st[i].ev, 1) == 1)
 19779  00451E  0E01               	movlw	1
 19780  004520  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19781  004522  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19782  004526  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19783  00452A  0E00               	movlw	0
 19784  00452C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19785  00452E  0E03               	movlw	3
 19786  004530  6E03               	movwf	i2___wmul@multiplicand^0,c
 19787  004532  EC5A  F031         	call	i2___wmul	;wreg free
 19788  004536  0EB7               	movlw	low (_theXF+2)
 19789  004538  2401               	addwf	?i2___wmul^0,w,c
 19790  00453A  6ED9               	movwf	fsr2l,c
 19791  00453C  0E00               	movlw	high (_theXF+2)
 19792  00453E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19793  004540  6EDA               	movwf	fsr2h,c
 19794  004542  50DF               	movf	indf2,w,c
 19795  004544  ECE0  F02E         	call	i2_XF_pushEvent
 19796  004548  06E8               	decf	wreg,f,c
 19797  00454A  A4D8               	btfss	status,2,c
 19798  00454C  EFAA  F022         	goto	i2u534_41
 19799  004550  EFAC  F022         	goto	i2u534_40
 19800  004554                     i2u534_41:
 19801  004554  EFB3  F022         	goto	i2l7659
 19802  004558                     i2u534_40:
 19803  004558                     
 19804                           ;xf/xf.c: 151:                 {;xf/xf.c: 152:                   XF_unscheduleTimer(i, 1
      +                          );
 19805  004558  0E01               	movlw	1
 19806  00455A  6E02               	movwf	XF_unscheduleTimer@inISR^0,c
 19807  00455C  500C               	movf	XF_decrementAndQueueTimers@i^0,w,c
 19808  00455E  ECA5  F030         	call	_XF_unscheduleTimer
 19809                           
 19810                           ;xf/xf.c: 153:                 }
 19811  004562  EFC7  F022         	goto	i2l7661
 19812  004566                     i2l7659:
 19813                           
 19814                           ;xf/xf.c: 155:                 {;xf/xf.c: 156:                   theXF.timerList[i].tm=1
      +                          ;
 19815  004566  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19816  00456A  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19817  00456E  0E00               	movlw	0
 19818  004570  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19819  004572  0E03               	movlw	3
 19820  004574  6E03               	movwf	i2___wmul@multiplicand^0,c
 19821  004576  EC5A  F031         	call	i2___wmul	;wreg free
 19822  00457A  0EB5               	movlw	low _theXF
 19823  00457C  2401               	addwf	?i2___wmul^0,w,c
 19824  00457E  6ED9               	movwf	fsr2l,c
 19825  004580  0E00               	movlw	high _theXF
 19826  004582  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19827  004584  6EDA               	movwf	fsr2h,c
 19828  004586  0E01               	movlw	1
 19829  004588  6EDE               	movwf	postinc2,c
 19830  00458A  0E00               	movlw	0
 19831  00458C  6EDD               	movwf	postdec2,c
 19832  00458E                     i2l7661:
 19833                           
 19834                           ;xf/xf.c: 160:     }
 19835  00458E  4A0C               	infsnz	XF_decrementAndQueueTimers@i^0,f,c
 19836  004590  2A0D               	incf	(XF_decrementAndQueueTimers@i+1)^0,f,c
 19837  004592  BE0D               	btfsc	(XF_decrementAndQueueTimers@i+1)^0,7,c
 19838  004594  EFD5  F022         	goto	i2u535_41
 19839  004598  500D               	movf	(XF_decrementAndQueueTimers@i+1)^0,w,c
 19840  00459A  E109               	bnz	i2u535_40
 19841  00459C  0E08               	movlw	8
 19842  00459E  5C0C               	subwf	XF_decrementAndQueueTimers@i^0,w,c
 19843  0045A0  A0D8               	btfss	status,0,c
 19844  0045A2  EFD5  F022         	goto	i2u535_41
 19845  0045A6  EFD7  F022         	goto	i2u535_40
 19846  0045AA                     i2u535_41:
 19847  0045AA  EF4B  F022         	goto	i2l7651
 19848  0045AE                     i2u535_40:
 19849  0045AE  0012               	return		;funcret
 19850  0045B0                     __end_of_XF_decrementAndQueueTimers:
 19851                           	callstack 0
 19852                           
 19853 ;; *************** function i2___wmul *****************
 19854 ;; Defined at:
 19855 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 19856 ;; Parameters:    Size  Location     Type
 19857 ;;  multiplier      2    0[COMRAM] unsigned int 
 19858 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19859 ;; Auto vars:     Size  Location     Type
 19860 ;;  product         2    4[COMRAM] unsigned int 
 19861 ;; Return value:  Size  Location     Type
 19862 ;;                  2    0[COMRAM] unsigned int 
 19863 ;; Registers used:
 19864 ;;		wreg, status,2, status,0, prodl, prodh
 19865 ;; Tracked objects:
 19866 ;;		On entry : 0/0
 19867 ;;		On exit  : 0/0
 19868 ;;		Unchanged: 0/0
 19869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19870 ;;      Params:         4       0       0       0       0       0       0
 19871 ;;      Locals:         2       0       0       0       0       0       0
 19872 ;;      Temps:          0       0       0       0       0       0       0
 19873 ;;      Totals:         6       0       0       0       0       0       0
 19874 ;;Total ram usage:        6 bytes
 19875 ;; Hardware stack levels used: 1
 19876 ;; This function calls:
 19877 ;;		Nothing
 19878 ;; This function is called by:
 19879 ;;		_XF_decrementAndQueueTimers
 19880 ;; This function uses a non-reentrant model
 19881 ;;
 19882                           
 19883                           	psect	text82
 19884  0062B4                     __ptext82:
 19885                           	callstack 0
 19886  0062B4                     i2___wmul:
 19887                           	callstack 15
 19888  0062B4  5001               	movf	i2___wmul@multiplier^0,w,c
 19889  0062B6  0203               	mulwf	i2___wmul@multiplicand^0,c
 19890  0062B8  CFF3 F005          	movff	prodl,i2___wmul@product
 19891  0062BC  CFF4 F006          	movff	prodh,i2___wmul@product+1
 19892  0062C0  5001               	movf	i2___wmul@multiplier^0,w,c
 19893  0062C2  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 19894  0062C4  50F3               	movf	243,w,c
 19895  0062C6  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19896  0062C8  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 19897  0062CA  0203               	mulwf	i2___wmul@multiplicand^0,c
 19898  0062CC  50F3               	movf	243,w,c
 19899  0062CE  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19900  0062D0  C005  F001         	movff	i2___wmul@product,?i2___wmul
 19901  0062D4  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 19902  0062D8  0012               	return		;funcret
 19903  0062DA                     __end_ofi2___wmul:
 19904                           	callstack 0
 19905                           
 19906 ;; *************** function i2_XF_pushEvent *****************
 19907 ;; Defined at:
 19908 ;;		line 49 in file "xf/xf.c"
 19909 ;; Parameters:    Size  Location     Type
 19910 ;;  ev              1    wreg     unsigned char 
 19911 ;;  inISR           1    6[COMRAM] _Bool 
 19912 ;; Auto vars:     Size  Location     Type
 19913 ;;  ev              1    7[COMRAM] unsigned char 
 19914 ;;  temp            1    8[COMRAM] unsigned char 
 19915 ;; Return value:  Size  Location     Type
 19916 ;;                  1    wreg      _Bool 
 19917 ;; Registers used:
 19918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19919 ;; Tracked objects:
 19920 ;;		On entry : 0/0
 19921 ;;		On exit  : 0/0
 19922 ;;		Unchanged: 0/0
 19923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19924 ;;      Params:         1       0       0       0       0       0       0
 19925 ;;      Locals:         2       0       0       0       0       0       0
 19926 ;;      Temps:          0       0       0       0       0       0       0
 19927 ;;      Totals:         3       0       0       0       0       0       0
 19928 ;;Total ram usage:        3 bytes
 19929 ;; Hardware stack levels used: 1
 19930 ;; Hardware stack levels required when called: 1
 19931 ;; This function calls:
 19932 ;;		i2_ENTERCRITICAL
 19933 ;;		i2_LEAVECRITICAL
 19934 ;;		i2___awmod
 19935 ;; This function is called by:
 19936 ;;		_XF_decrementAndQueueTimers
 19937 ;;		_isr
 19938 ;; This function uses a non-reentrant model
 19939 ;;
 19940                           
 19941                           	psect	text83
 19942  005DC0                     __ptext83:
 19943                           	callstack 0
 19944  005DC0                     i2_XF_pushEvent:
 19945                           	callstack 15
 19946                           
 19947                           ;incstack = 0
 19948                           ;i2XF_pushEvent@ev stored from wreg
 19949  005DC0  6E08               	movwf	i2XF_pushEvent@ev^0,c
 19950  005DC2                     
 19951                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 19952  005DC2  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 19953  005DC4  ECC8  F031         	call	i2_ENTERCRITICAL
 19954  005DC8                     
 19955                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 19956  005DC8  0E01               	movlw	1
 19957  005DCA  0100               	movlb	0	; () banked
 19958  005DCC  25D9               	addwf	(_theXF+36)& (0+255),w,b
 19959  005DCE  6E01               	movwf	i2___awmod@dividend^0,c
 19960  005DD0  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 19961  005DD2  0E00               	movlw	0
 19962  005DD4  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
 19963  005DD6  0E00               	movlw	0
 19964  005DD8  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 19965  005DDA  0E0C               	movlw	12
 19966  005DDC  6E03               	movwf	i2___awmod@divisor^0,c
 19967  005DDE  EC1E  F02C         	call	i2___awmod	;wreg free
 19968  005DE2  5001               	movf	?i2___awmod^0,w,c
 19969  005DE4  6E09               	movwf	i2XF_pushEvent@temp^0,c
 19970  005DE6                     
 19971                           ;xf/xf.c: 55:     if(temp == theXF.out)
 19972  005DE6  5009               	movf	i2XF_pushEvent@temp^0,w,c
 19973  005DE8  0100               	movlb	0	; () banked
 19974  005DEA  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 19975  005DEC  A4D8               	btfss	status,2,c
 19976  005DEE  EFFB  F02E         	goto	i2u530_41
 19977  005DF2  EFFD  F02E         	goto	i2u530_40
 19978  005DF6                     i2u530_41:
 19979  005DF6  EF03  F02F         	goto	i2l7561
 19980  005DFA                     i2u530_40:
 19981  005DFA                     
 19982                           ; BSR set to: 0
 19983                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 19984  005DFA  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 19985  005DFC  ECBD  F031         	call	i2_LEAVECRITICAL
 19986  005E00                     
 19987                           ;xf/xf.c: 58:       return 0;
 19988  005E00  0E00               	movlw	0
 19989  005E02  EF11  F02F         	goto	i2l728
 19990  005E06                     i2l7561:
 19991                           
 19992                           ; BSR set to: 0
 19993                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 19994  005E06  0ECD               	movlw	low (_theXF+24)
 19995  005E08  25D9               	addwf	(_theXF+36)& (0+255),w,b
 19996  005E0A  6ED9               	movwf	fsr2l,c
 19997  005E0C  6ADA               	clrf	fsr2h,c
 19998  005E0E  0E00               	movlw	high (_theXF+24)
 19999  005E10  22DA               	addwfc	fsr2h,f,c
 20000  005E12  C008  FFDF         	movff	i2XF_pushEvent@ev,indf2
 20001  005E16                     
 20002                           ; BSR set to: 0
 20003                           ;xf/xf.c: 61:     theXF.in = temp;
 20004  005E16  C009  F0D9         	movff	i2XF_pushEvent@temp,_theXF+36
 20005  005E1A                     
 20006                           ; BSR set to: 0
 20007                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 20008  005E1A  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20009  005E1C  ECBD  F031         	call	i2_LEAVECRITICAL
 20010  005E20                     
 20011                           ;xf/xf.c: 63:     return 1;
 20012  005E20  0E01               	movlw	1
 20013  005E22                     i2l728:
 20014  005E22  0012               	return		;funcret
 20015  005E24                     __end_ofi2_XF_pushEvent:
 20016                           	callstack 0
 20017                           
 20018 ;; *************** function i2___awmod *****************
 20019 ;; Defined at:
 20020 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 20021 ;; Parameters:    Size  Location     Type
 20022 ;;  dividend        2    0[COMRAM] int 
 20023 ;;  divisor         2    2[COMRAM] int 
 20024 ;; Auto vars:     Size  Location     Type
 20025 ;;  sign            1    5[COMRAM] unsigned char 
 20026 ;;  counter         1    4[COMRAM] unsigned char 
 20027 ;; Return value:  Size  Location     Type
 20028 ;;                  2    0[COMRAM] int 
 20029 ;; Registers used:
 20030 ;;		wreg, status,2, status,0
 20031 ;; Tracked objects:
 20032 ;;		On entry : 0/0
 20033 ;;		On exit  : 0/0
 20034 ;;		Unchanged: 0/0
 20035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20036 ;;      Params:         4       0       0       0       0       0       0
 20037 ;;      Locals:         2       0       0       0       0       0       0
 20038 ;;      Temps:          0       0       0       0       0       0       0
 20039 ;;      Totals:         6       0       0       0       0       0       0
 20040 ;;Total ram usage:        6 bytes
 20041 ;; Hardware stack levels used: 1
 20042 ;; This function calls:
 20043 ;;		Nothing
 20044 ;; This function is called by:
 20045 ;;		i2_XF_pushEvent
 20046 ;; This function uses a non-reentrant model
 20047 ;;
 20048                           
 20049                           	psect	text84
 20050  00583C                     __ptext84:
 20051                           	callstack 0
 20052  00583C                     i2___awmod:
 20053                           	callstack 15
 20054  00583C  0E00               	movlw	0
 20055  00583E  6E06               	movwf	i2___awmod@sign^0,c
 20056  005840  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 20057  005842  EF27  F02C         	goto	i2u509_40
 20058  005846  EF25  F02C         	goto	i2u509_41
 20059  00584A                     i2u509_41:
 20060  00584A  EF2D  F02C         	goto	i2l7343
 20061  00584E                     i2u509_40:
 20062  00584E  6C01               	negf	i2___awmod@dividend^0,c
 20063  005850  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20064  005852  B0D8               	btfsc	status,0,c
 20065  005854  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20066  005856  0E01               	movlw	1
 20067  005858  6E06               	movwf	i2___awmod@sign^0,c
 20068  00585A                     i2l7343:
 20069  00585A  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 20070  00585C  EF34  F02C         	goto	i2u510_40
 20071  005860  EF32  F02C         	goto	i2u510_41
 20072  005864                     i2u510_41:
 20073  005864  EF38  F02C         	goto	i2l7347
 20074  005868                     i2u510_40:
 20075  005868  6C03               	negf	i2___awmod@divisor^0,c
 20076  00586A  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 20077  00586C  B0D8               	btfsc	status,0,c
 20078  00586E  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 20079  005870                     i2l7347:
 20080  005870  5003               	movf	i2___awmod@divisor^0,w,c
 20081  005872  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 20082  005874  B4D8               	btfsc	status,2,c
 20083  005876  EF3F  F02C         	goto	i2u511_41
 20084  00587A  EF41  F02C         	goto	i2u511_40
 20085  00587E                     i2u511_41:
 20086  00587E  EF65  F02C         	goto	i2l7363
 20087  005882                     i2u511_40:
 20088  005882  0E01               	movlw	1
 20089  005884  6E05               	movwf	i2___awmod@counter^0,c
 20090  005886  EF49  F02C         	goto	i2l7353
 20091  00588A                     i2l7351:
 20092  00588A  90D8               	bcf	status,0,c
 20093  00588C  3603               	rlcf	i2___awmod@divisor^0,f,c
 20094  00588E  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 20095  005890  2A05               	incf	i2___awmod@counter^0,f,c
 20096  005892                     i2l7353:
 20097  005892  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 20098  005894  EF4E  F02C         	goto	i2u512_41
 20099  005898  EF50  F02C         	goto	i2u512_40
 20100  00589C                     i2u512_41:
 20101  00589C  EF45  F02C         	goto	i2l7351
 20102  0058A0                     i2u512_40:
 20103  0058A0                     i2l7355:
 20104  0058A0  5003               	movf	i2___awmod@divisor^0,w,c
 20105  0058A2  5C01               	subwf	i2___awmod@dividend^0,w,c
 20106  0058A4  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20107  0058A6  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 20108  0058A8  A0D8               	btfss	status,0,c
 20109  0058AA  EF59  F02C         	goto	i2u513_41
 20110  0058AE  EF5B  F02C         	goto	i2u513_40
 20111  0058B2                     i2u513_41:
 20112  0058B2  EF5F  F02C         	goto	i2l7359
 20113  0058B6                     i2u513_40:
 20114  0058B6  5003               	movf	i2___awmod@divisor^0,w,c
 20115  0058B8  5E01               	subwf	i2___awmod@dividend^0,f,c
 20116  0058BA  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20117  0058BC  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 20118  0058BE                     i2l7359:
 20119  0058BE  90D8               	bcf	status,0,c
 20120  0058C0  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 20121  0058C2  3203               	rrcf	i2___awmod@divisor^0,f,c
 20122  0058C4  2E05               	decfsz	i2___awmod@counter^0,f,c
 20123  0058C6  EF50  F02C         	goto	i2l7355
 20124  0058CA                     i2l7363:
 20125  0058CA  5006               	movf	i2___awmod@sign^0,w,c
 20126  0058CC  B4D8               	btfsc	status,2,c
 20127  0058CE  EF6B  F02C         	goto	i2u514_41
 20128  0058D2  EF6D  F02C         	goto	i2u514_40
 20129  0058D6                     i2u514_41:
 20130  0058D6  EF71  F02C         	goto	i2l7367
 20131  0058DA                     i2u514_40:
 20132  0058DA  6C01               	negf	i2___awmod@dividend^0,c
 20133  0058DC  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20134  0058DE  B0D8               	btfsc	status,0,c
 20135  0058E0  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20136  0058E2                     i2l7367:
 20137  0058E2  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 20138  0058E6  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 20139  0058EA  0012               	return		;funcret
 20140  0058EC                     __end_ofi2___awmod:
 20141                           	callstack 0
 20142                           
 20143 ;; *************** function _XF_unscheduleTimer *****************
 20144 ;; Defined at:
 20145 ;;		line 125 in file "xf/xf.c"
 20146 ;; Parameters:    Size  Location     Type
 20147 ;;  id              1    wreg     unsigned char 
 20148 ;;  inISR           1    1[COMRAM] _Bool 
 20149 ;; Auto vars:     Size  Location     Type
 20150 ;;  id              1    2[COMRAM] unsigned char 
 20151 ;; Return value:  Size  Location     Type
 20152 ;;                  1    wreg      void 
 20153 ;; Registers used:
 20154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20155 ;; Tracked objects:
 20156 ;;		On entry : 0/0
 20157 ;;		On exit  : 0/0
 20158 ;;		Unchanged: 0/0
 20159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20160 ;;      Params:         1       0       0       0       0       0       0
 20161 ;;      Locals:         1       0       0       0       0       0       0
 20162 ;;      Temps:          0       0       0       0       0       0       0
 20163 ;;      Totals:         2       0       0       0       0       0       0
 20164 ;;Total ram usage:        2 bytes
 20165 ;; Hardware stack levels used: 1
 20166 ;; Hardware stack levels required when called: 1
 20167 ;; This function calls:
 20168 ;;		i2_ENTERCRITICAL
 20169 ;;		i2_LEAVECRITICAL
 20170 ;; This function is called by:
 20171 ;;		_XF_decrementAndQueueTimers
 20172 ;; This function uses a non-reentrant model
 20173 ;;
 20174                           
 20175                           	psect	text85
 20176  00614A                     __ptext85:
 20177                           	callstack 0
 20178  00614A                     _XF_unscheduleTimer:
 20179                           	callstack 14
 20180                           
 20181                           ;incstack = 0
 20182                           ;XF_unscheduleTimer@id stored from wreg
 20183  00614A  6E03               	movwf	XF_unscheduleTimer@id^0,c
 20184  00614C                     
 20185                           ;xf/xf.c: 125: void XF_unscheduleTimer(TimerID id, _Bool inISR);xf/xf.c: 126: {;xf/xf.c:
      +                           127:     ENTERCRITICAL(inISR);
 20186  00614C  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20187  00614E  ECC8  F031         	call	i2_ENTERCRITICAL
 20188  006152                     
 20189                           ;xf/xf.c: 128:     theXF.timerList[id].tm = 0;
 20190  006152  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20191  006154  0D03               	mullw	3
 20192  006156  0EB5               	movlw	low _theXF
 20193  006158  24F3               	addwf	243,w,c
 20194  00615A  6ED9               	movwf	fsr2l,c
 20195  00615C  0E00               	movlw	high _theXF
 20196  00615E  20F4               	addwfc	prodh,w,c
 20197  006160  6EDA               	movwf	fsr2h,c
 20198  006162  0E00               	movlw	0
 20199  006164  6EDE               	movwf	postinc2,c
 20200  006166  0E00               	movlw	0
 20201  006168  6EDD               	movwf	postdec2,c
 20202  00616A                     
 20203                           ;xf/xf.c: 129:     theXF.timerList[id].ev = NULLEVENT;
 20204  00616A  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20205  00616C  0D03               	mullw	3
 20206  00616E  0EB7               	movlw	low (_theXF+2)
 20207  006170  24F3               	addwf	243,w,c
 20208  006172  6ED9               	movwf	fsr2l,c
 20209  006174  0E00               	movlw	high (_theXF+2)
 20210  006176  20F4               	addwfc	prodh,w,c
 20211  006178  6EDA               	movwf	fsr2h,c
 20212  00617A  0E00               	movlw	0
 20213  00617C  6EDF               	movwf	indf2,c
 20214                           
 20215                           ;xf/xf.c: 130:     LEAVECRITICAL(inISR);
 20216  00617E  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20217  006180  ECBD  F031         	call	i2_LEAVECRITICAL
 20218  006184  0012               	return		;funcret
 20219  006186                     __end_of_XF_unscheduleTimer:
 20220                           	callstack 0
 20221                           
 20222 ;; *************** function i2_LEAVECRITICAL *****************
 20223 ;; Defined at:
 20224 ;;		line 186 in file "xf/xf.c"
 20225 ;; Parameters:    Size  Location     Type
 20226 ;;  inISR           1    wreg     _Bool 
 20227 ;; Auto vars:     Size  Location     Type
 20228 ;;  inISR           1    0[COMRAM] _Bool 
 20229 ;; Return value:  Size  Location     Type
 20230 ;;                  1    wreg      void 
 20231 ;; Registers used:
 20232 ;;		wreg, status,2
 20233 ;; Tracked objects:
 20234 ;;		On entry : 0/0
 20235 ;;		On exit  : 0/0
 20236 ;;		Unchanged: 0/0
 20237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20238 ;;      Params:         0       0       0       0       0       0       0
 20239 ;;      Locals:         1       0       0       0       0       0       0
 20240 ;;      Temps:          0       0       0       0       0       0       0
 20241 ;;      Totals:         1       0       0       0       0       0       0
 20242 ;;Total ram usage:        1 bytes
 20243 ;; Hardware stack levels used: 1
 20244 ;; This function calls:
 20245 ;;		Nothing
 20246 ;; This function is called by:
 20247 ;;		_XF_unscheduleTimer
 20248 ;;		i2_XF_pushEvent
 20249 ;; This function uses a non-reentrant model
 20250 ;;
 20251                           
 20252                           	psect	text86
 20253  00637A                     __ptext86:
 20254                           	callstack 0
 20255  00637A                     i2_LEAVECRITICAL:
 20256                           	callstack 15
 20257                           
 20258                           ;incstack = 0
 20259                           ;i2LEAVECRITICAL@inISR stored from wreg
 20260  00637A  6E01               	movwf	i2LEAVECRITICAL@inISR^0,c
 20261  00637C                     
 20262                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 20263  00637C  5001               	movf	i2LEAVECRITICAL@inISR^0,w,c
 20264  00637E  A4D8               	btfss	status,2,c
 20265  006380  EFC4  F031         	goto	i2u508_41
 20266  006384  EFC6  F031         	goto	i2u508_40
 20267  006388                     i2u508_41:
 20268  006388  EFC7  F031         	goto	i2l758
 20269  00638C                     i2u508_40:
 20270  00638C                     
 20271                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 20272  00638C  8EF2               	bsf	4082,7,c	;volatile
 20273  00638E                     i2l758:
 20274  00638E  0012               	return		;funcret
 20275  006390                     __end_ofi2_LEAVECRITICAL:
 20276                           	callstack 0
 20277                           
 20278 ;; *************** function i2_ENTERCRITICAL *****************
 20279 ;; Defined at:
 20280 ;;		line 172 in file "xf/xf.c"
 20281 ;; Parameters:    Size  Location     Type
 20282 ;;  inISR           1    wreg     _Bool 
 20283 ;; Auto vars:     Size  Location     Type
 20284 ;;  inISR           1    0[COMRAM] _Bool 
 20285 ;; Return value:  Size  Location     Type
 20286 ;;                  1    wreg      void 
 20287 ;; Registers used:
 20288 ;;		wreg, status,2
 20289 ;; Tracked objects:
 20290 ;;		On entry : 0/0
 20291 ;;		On exit  : 0/0
 20292 ;;		Unchanged: 0/0
 20293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20294 ;;      Params:         0       0       0       0       0       0       0
 20295 ;;      Locals:         1       0       0       0       0       0       0
 20296 ;;      Temps:          0       0       0       0       0       0       0
 20297 ;;      Totals:         1       0       0       0       0       0       0
 20298 ;;Total ram usage:        1 bytes
 20299 ;; Hardware stack levels used: 1
 20300 ;; This function calls:
 20301 ;;		Nothing
 20302 ;; This function is called by:
 20303 ;;		_XF_unscheduleTimer
 20304 ;;		i2_XF_pushEvent
 20305 ;; This function uses a non-reentrant model
 20306 ;;
 20307                           
 20308                           	psect	text87
 20309  006390                     __ptext87:
 20310                           	callstack 0
 20311  006390                     i2_ENTERCRITICAL:
 20312                           	callstack 15
 20313                           
 20314                           ;incstack = 0
 20315                           ;i2ENTERCRITICAL@inISR stored from wreg
 20316  006390  6E01               	movwf	i2ENTERCRITICAL@inISR^0,c
 20317  006392                     
 20318                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 20319  006392  5001               	movf	i2ENTERCRITICAL@inISR^0,w,c
 20320  006394  A4D8               	btfss	status,2,c
 20321  006396  EFCF  F031         	goto	i2u507_41
 20322  00639A  EFD1  F031         	goto	i2u507_40
 20323  00639E                     i2u507_41:
 20324  00639E  EFD2  F031         	goto	i2l754
 20325  0063A2                     i2u507_40:
 20326  0063A2                     
 20327                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 20328  0063A2  9EF2               	bcf	4082,7,c	;volatile
 20329  0063A4                     i2l754:
 20330  0063A4  0012               	return		;funcret
 20331  0063A6                     __end_ofi2_ENTERCRITICAL:
 20332                           	callstack 0
 20333                           
 20334                           	psect	rparam
 20335  0000                     
 20336                           	psect	temp
 20337  00004E                     btemp:
 20338                           	callstack 0
 20339  00004E                     	ds	1
 20340  0000                     int$flags	set	btemp
 20341  0000                     wtemp8	set	btemp+1
 20342  0000                     ttemp5	set	btemp+1
 20343  0000                     ttemp6	set	btemp+4
 20344  0000                     ttemp7	set	btemp+8
 20345                           
 20346                           	psect	idloc
 20347                           
 20348                           ;Config register IDLOC0 @ 0x200000
 20349                           ;	unspecified, using default values
 20350  200000                     	org	2097152
 20351  200000  FF                 	db	255
 20352                           
 20353                           ;Config register IDLOC1 @ 0x200001
 20354                           ;	unspecified, using default values
 20355  200001                     	org	2097153
 20356  200001  FF                 	db	255
 20357                           
 20358                           ;Config register IDLOC2 @ 0x200002
 20359                           ;	unspecified, using default values
 20360  200002                     	org	2097154
 20361  200002  FF                 	db	255
 20362                           
 20363                           ;Config register IDLOC3 @ 0x200003
 20364                           ;	unspecified, using default values
 20365  200003                     	org	2097155
 20366  200003  FF                 	db	255
 20367                           
 20368                           ;Config register IDLOC4 @ 0x200004
 20369                           ;	unspecified, using default values
 20370  200004                     	org	2097156
 20371  200004  FF                 	db	255
 20372                           
 20373                           ;Config register IDLOC5 @ 0x200005
 20374                           ;	unspecified, using default values
 20375  200005                     	org	2097157
 20376  200005  FF                 	db	255
 20377                           
 20378                           ;Config register IDLOC6 @ 0x200006
 20379                           ;	unspecified, using default values
 20380  200006                     	org	2097158
 20381  200006  FF                 	db	255
 20382                           
 20383                           ;Config register IDLOC7 @ 0x200007
 20384                           ;	unspecified, using default values
 20385  200007                     	org	2097159
 20386  200007  FF                 	db	255
 20387                           
 20388                           	psect	config
 20389                           
 20390                           ; Padding undefined space
 20391  300000                     	org	3145728
 20392  300000  FF                 	db	255
 20393                           
 20394                           ;Config register CONFIG1H @ 0x300001
 20395                           ;	Oscillator Selection bits
 20396                           ;	FOSC = INTIO67, Internal oscillator block
 20397                           ;	4X PLL Enable
 20398                           ;	PLLCFG = ON, Oscillator multiplied by 4
 20399                           ;	Primary clock enable bit
 20400                           ;	PRICLKEN = ON, Primary clock is always enabled
 20401                           ;	Fail-Safe Clock Monitor Enable bit
 20402                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 20403                           ;	Internal/External Oscillator Switchover bit
 20404                           ;	IESO = OFF, Oscillator Switchover mode disabled
 20405  300001                     	org	3145729
 20406  300001  38                 	db	56
 20407                           
 20408                           ;Config register CONFIG2L @ 0x300002
 20409                           ;	Power-up Timer Enable bit
 20410                           ;	PWRTEN = OFF, Power up timer disabled
 20411                           ;	Brown-out Reset Enable bits
 20412                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 20413                           ;	Brown Out Reset Voltage bits
 20414                           ;	BORV = 190, VBOR set to 1.90 V nominal
 20415  300002                     	org	3145730
 20416  300002  1F                 	db	31
 20417                           
 20418                           ;Config register CONFIG2H @ 0x300003
 20419                           ;	Watchdog Timer Enable bits
 20420                           ;	WDTEN = SWON, WDT is controlled by SWDTEN bit of the WDTCON register
 20421                           ;	Watchdog Timer Postscale Select bits
 20422                           ;	WDTPS = 32768, 1:32768
 20423  300003                     	org	3145731
 20424  300003  3E                 	db	62
 20425                           
 20426                           ; Padding undefined space
 20427  300004                     	org	3145732
 20428  300004  FF                 	db	255
 20429                           
 20430                           ;Config register CONFIG3H @ 0x300005
 20431                           ;	CCP2 MUX bit
 20432                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 20433                           ;	PORTB A/D Enable bit
 20434                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 20435                           ;	P3A/CCP3 Mux bit
 20436                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 20437                           ;	HFINTOSC Fast Start-up
 20438                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 20439                           ;	Timer3 Clock input mux bit
 20440                           ;	T3CMX = PORTC0, T3CKI is on RC0
 20441                           ;	ECCP2 B output mux bit
 20442                           ;	P2BMX = PORTB5, P2B is on RB5
 20443                           ;	MCLR Pin Enable bit
 20444                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 20445  300005                     	org	3145733
 20446  300005  BD                 	db	189
 20447                           
 20448                           ;Config register CONFIG4L @ 0x300006
 20449                           ;	Stack Full/Underflow Reset Enable bit
 20450                           ;	STVREN = ON, Stack full/underflow will cause Reset
 20451                           ;	Single-Supply ICSP Enable bit
 20452                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 20453                           ;	Extended Instruction Set Enable bit
 20454                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 20455                           ;	Background Debug
 20456                           ;	DEBUG = 0x1, unprogrammed default
 20457  300006                     	org	3145734
 20458  300006  85                 	db	133
 20459                           
 20460                           ; Padding undefined space
 20461  300007                     	org	3145735
 20462  300007  FF                 	db	255
 20463                           
 20464                           ;Config register CONFIG5L @ 0x300008
 20465                           ;	Code Protection Block 0
 20466                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 20467                           ;	Code Protection Block 1
 20468                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 20469                           ;	Code Protection Block 2
 20470                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 20471                           ;	Code Protection Block 3
 20472                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 20473  300008                     	org	3145736
 20474  300008  0F                 	db	15
 20475                           
 20476                           ;Config register CONFIG5H @ 0x300009
 20477                           ;	Boot Block Code Protection bit
 20478                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 20479                           ;	Data EEPROM Code Protection bit
 20480                           ;	CPD = OFF, Data EEPROM not code-protected
 20481  300009                     	org	3145737
 20482  300009  C0                 	db	192
 20483                           
 20484                           ;Config register CONFIG6L @ 0x30000A
 20485                           ;	Write Protection Block 0
 20486                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 20487                           ;	Write Protection Block 1
 20488                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 20489                           ;	Write Protection Block 2
 20490                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 20491                           ;	Write Protection Block 3
 20492                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 20493  30000A                     	org	3145738
 20494  30000A  0F                 	db	15
 20495                           
 20496                           ;Config register CONFIG6H @ 0x30000B
 20497                           ;	Configuration Register Write Protection bit
 20498                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 20499                           ;	Boot Block Write Protection bit
 20500                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 20501                           ;	Data EEPROM Write Protection bit
 20502                           ;	WRTD = OFF, Data EEPROM not write-protected
 20503  30000B                     	org	3145739
 20504  30000B  E0                 	db	224
 20505                           
 20506                           ;Config register CONFIG7L @ 0x30000C
 20507                           ;	Table Read Protection Block 0
 20508                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 20509                           ;	Table Read Protection Block 1
 20510                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 20511                           ;	Table Read Protection Block 2
 20512                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 20513                           ;	Table Read Protection Block 3
 20514                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 20515  30000C                     	org	3145740
 20516  30000C  0F                 	db	15
 20517                           
 20518                           ;Config register CONFIG7H @ 0x30000D
 20519                           ;	Boot Block Table Read Protection bit
 20520                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 20521  30000D                     	org	3145741
 20522  30000D  40                 	db	64
 20523                           tosu	equ	0xFFF
 20524                           tosh	equ	0xFFE
 20525                           tosl	equ	0xFFD
 20526                           stkptr	equ	0xFFC
 20527                           pclatu	equ	0xFFB
 20528                           pclath	equ	0xFFA
 20529                           pcl	equ	0xFF9
 20530                           tblptru	equ	0xFF8
 20531                           tblptrh	equ	0xFF7
 20532                           tblptrl	equ	0xFF6
 20533                           tablat	equ	0xFF5
 20534                           prodh	equ	0xFF4
 20535                           prodl	equ	0xFF3
 20536                           indf0	equ	0xFEF
 20537                           postinc0	equ	0xFEE
 20538                           postdec0	equ	0xFED
 20539                           preinc0	equ	0xFEC
 20540                           plusw0	equ	0xFEB
 20541                           fsr0h	equ	0xFEA
 20542                           fsr0l	equ	0xFE9
 20543                           wreg	equ	0xFE8
 20544                           indf1	equ	0xFE7
 20545                           postinc1	equ	0xFE6
 20546                           postdec1	equ	0xFE5
 20547                           preinc1	equ	0xFE4
 20548                           plusw1	equ	0xFE3
 20549                           fsr1h	equ	0xFE2
 20550                           fsr1l	equ	0xFE1
 20551                           bsr	equ	0xFE0
 20552                           indf2	equ	0xFDF
 20553                           postinc2	equ	0xFDE
 20554                           postdec2	equ	0xFDD
 20555                           preinc2	equ	0xFDC
 20556                           plusw2	equ	0xFDB
 20557                           fsr2h	equ	0xFDA
 20558                           fsr2l	equ	0xFD9
 20559                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    1867
    Data        0
    BSS         321
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      77
    BANK0           160     85     160
    BANK1           256      1     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    g1.font.bitmap	PTR const unsigned char  size(2) Largest target is 0
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    g1.font.descriptor	PTR const struct . size(2) Largest target is 0
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    g1.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.font	PTR struct . size(2) Largest target is 0
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.text	PTR const unsigned char  size(2) Largest target is 0
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.fpPress	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S4854_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    backlightController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    checkCollision@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    mooveBall@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    moovePaddle@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerSM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displayController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displaySM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displayInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    touchScreenController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    touchScreenSM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    sleepInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_Bitmap@colorTablePtr	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_Bitmap@bmpPtr	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_Bitmap@strPtr	PTR struct . size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    RGB2LCD@colorTableEntry	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_DrawText@font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_DrawText@font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_DrawText@font	PTR const struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_DrawText@msg	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    LCD_InSlider@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InSlider@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_InButton@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_InButton@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_InButton@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonDraw@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonDraw@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonDraw@bmpPtr	PTR struct . size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonDraw@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonDraw@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonDraw@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonUpdate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonUpdate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonUpdate@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonCreate@fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonCreate@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonCreate@font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@textOrBmp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonCreate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonCreate@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderDraw@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderDraw@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderUpdate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderUpdate@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderCreate@fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_endGame@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_inGameDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_parametersDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_welcomeDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setY@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setX@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_resetPos@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setPlayer@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_init@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Score_draw@s	PTR struct Score size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Score_init@s	PTR struct Score size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    S135$fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    S108$fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    S108$text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    S99$bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    arialNarrow_12ptFontInfo.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    S99$descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    arialNarrow_12ptFontInfo.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    Paddle_draw@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Paddle_addX@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Paddle_init@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_draw@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_Update@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_init@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 


Critical Paths under _main in COMRAM

    _gameControllerInit->_gameControllerController
    _XF_init->___wmul
    _LCD_Init->_LCD_Lowlevel_Init
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _gameControllerSM->_gameControllerController
    _gameControllerController->_LCD_SliderUpdate
    _moovePaddle->_LCD_InButton
    _mooveBall->_checkCollision
    _checkCollision->_XF_pushEvent
    _XF_pushEvent->___awmod
    _backlightController->_GameParameters_setBackLight
    _XF_scheduleTimer->_ENTERCRITICAL
    _XF_scheduleTimer->_LEAVECRITICAL
    _GameParameters_init->_LCD_ButtonCreate
    _Menu_welcomeDraw->_LCD_DrawText
    _Menu_parametersDraw->_LCD_SliderDraw
    _LCD_SliderDraw->_LCD_SliderUpdate
    _LCD_SliderUpdate->___lwdiv
    _Menu_endGame->_LCD_DrawText
    _LCD_ButtonDraw->_LCD_DrawText
    _LCD_ButtonUpdate->_LCD_DrawRect
    _LCD_Bitmap->___lwdiv
    ___lwdiv->___wmul
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_DrawText->___wmul
    ___wmul->___awdiv
    _Paddle_draw->_LCD_DrawRect
    _Ball_draw->_LCD_DrawRect
    _XF_popEvent->___awmod

Critical Paths under _isr in COMRAM

    _isr->_XF_decrementAndQueueTimers
    _XF_decrementAndQueueTimers->i2_XF_pushEvent
    i2_XF_pushEvent->i2___awmod
    i2_XF_pushEvent->i2___wmul
    _XF_unscheduleTimer->i2_ENTERCRITICAL
    _XF_unscheduleTimer->i2_LEAVECRITICAL

Critical Paths under _main in BANK0

    _Factory_init->_sleepInit
    _sleepInit->_displayInit
    _displayInit->_displayController
    _Factory_exec->_touchScreenSM
    _touchScreenSM->_touchScreenController
    _touchScreenController->_sprintf
    _displaySM->_displayController
    _displayController->_Menu_endGame
    _displayController->_Menu_parametersDraw
    _displayController->_Menu_welcomeDraw
    _Menu_welcomeDraw->_LCD_ButtonDraw
    _Menu_parametersDraw->_LCD_ButtonDraw
    _Menu_endGame->_LCD_ButtonDraw
    _LCD_ButtonDraw->_LCD_Bitmap
    _Menu_inGameDraw->_Score_draw
    _Score_draw->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Factory_exec

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  695898
                       _Factory_exec
                       _Factory_init
 ---------------------------------------------------------------------------------
 (1) _Factory_init                                         2     2      0  325127
                                             71 BANK0      2     2      0
                _GameParameters_init
                       _LCD_DrawText
                           _LCD_Fill
                           _LCD_Init
                            _XF_init
                          _sleepInit
 ---------------------------------------------------------------------------------
 (2) _sleepInit                                            2     0      2  296529
                                             69 BANK0      2     0      2
                        _displayInit
                 _gameControllerInit
                    _sleepController
                    _touchScreenInit
 ---------------------------------------------------------------------------------
 (3) _touchScreenInit                                      0     0      0       0
                        _configTouch
 ---------------------------------------------------------------------------------
 (3) _sleepController                                      2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _gameControllerInit                                   2     0      2   54108
                                             59 COMRAM     2     0      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (3) _displayInit                                          2     0      2  242269
                                             67 BANK0      2     0      2
                  _displayController
 ---------------------------------------------------------------------------------
 (2) _XF_init                                              2     2      0    3031
                                             31 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      90
                                             22 COMRAM     2     2      0
                  _LCD_Lowlevel_Init
 ---------------------------------------------------------------------------------
 (3) _LCD_Lowlevel_Init                                    5     5      0      60
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Factory_exec                                         1     1      0  370771
                                              0 BANK1      1     1      0
                        _XF_popEvent
                          _displaySM
                   _gameControllerSM
                            _sleepSM
                      _touchScreenSM
 ---------------------------------------------------------------------------------
 (2) _touchScreenSM                                        5     3      2   27550
                                             80 BANK0      5     3      2
              _touchScreenController
 ---------------------------------------------------------------------------------
 (3) _touchScreenController                               32    30      2   27274
                                             48 BANK0     32    30      2
                _GameParameters_setX
                _GameParameters_setY
                       _LCD_DrawText
                   _XF_scheduleTimer
                            ___fldiv
                            ___fltol
                           ___xxtofl
                      _configMeasure
                        _configTouch
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _configTouch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _configMeasure                                        1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     566
                                             17 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             56 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2003
                                             31 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setY                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setX                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sleepSM                                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _gameControllerSM                                     5     3      2   55821
                                             59 COMRAM     5     3      2
                   _XF_scheduleTimer
           _gameControllerController
 ---------------------------------------------------------------------------------
 (4) _gameControllerController                             5     2      3   53987
                                             54 COMRAM     5     2      3
                _GameParameters_init
            _GameParameters_resetPos
                       _LCD_InButton
                       _LCD_InSlider
                   _LCD_SliderUpdate
                       _XF_pushEvent
                   _XF_scheduleTimer
                _backlightController
                          _mooveBall
                        _moovePaddle
 ---------------------------------------------------------------------------------
 (5) _moovePaddle                                          2     0      2    6462
                                             27 COMRAM     2     0      2
            _GameParameters_resetPos
                       _LCD_InButton
                        _Paddle_addX
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _Paddle_addX                                          8     2      6     881
                                             17 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _LCD_InButton                                        10     4      6    2200
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (6) _GameParameters_resetPos                              2     0      2     692
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _mooveBall                                            2     0      2    7328
                                             36 COMRAM     2     0      2
                        _Ball_Update
                       _XF_pushEvent
                     _checkCollision
 ---------------------------------------------------------------------------------
 (6) _checkCollision                                      30    28      2    4611
                                             26 COMRAM    10     8      2
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _XF_pushEvent                                         3     2      1    2289
                                             23 COMRAM     3     2      1
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _Ball_Update                                          6     4      2     276
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _backlightController                                  4     2      2    3552
                                             23 COMRAM     4     2      2
        _GameParameters_setBackLight
 ---------------------------------------------------------------------------------
 (6) _GameParameters_setBackLight                          6     2      4    2284
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _XF_scheduleTimer                                     5     1      4    1434
                                             18 COMRAM     5     1      4
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (5) _LCD_InSlider                                        10     4      6     580
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _GameParameters_init                                  2     0      2   12380
                                             42 COMRAM     2     0      2
                          _Ball_init
                   _LCD_ButtonCreate
                   _LCD_SliderCreate
                        _Paddle_init
                         _Score_init
 ---------------------------------------------------------------------------------
 (6) _Score_init                                           2     0      2     152
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Paddle_init                                          4     0      4     639
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderCreate                                    22     0     22    1672
                                             17 COMRAM    22     0     22
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonCreate                                    25     0     25    8965
                                             17 COMRAM    25     0     25
 ---------------------------------------------------------------------------------
 (6) _Ball_init                                            2     0      2     276
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _displaySM                                            5     3      2  286226
                                             67 BANK0      5     3      2
                    _Menu_inGameDraw
                  _displayController
 ---------------------------------------------------------------------------------
 (4) _displayController                                    5     2      3  242148
                                             62 BANK0      5     2      3
                          _Ball_draw
                       _Menu_endGame
                _Menu_parametersDraw
                   _Menu_welcomeDraw
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Menu_welcomeDraw                                     2     0      2   57566
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (5) _Menu_parametersDraw                                  2     0      2   82977
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
                     _LCD_SliderDraw
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderDraw                                      14    12      2   25380
                                             54 COMRAM    14    12      2
                       _LCD_DrawRect
                   _LCD_SliderUpdate
 ---------------------------------------------------------------------------------
 (5) _LCD_SliderUpdate                                    16    14      2   15116
                                             38 COMRAM    16    14      2
                       _LCD_DrawRect
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _Menu_endGame                                         4     2      2   57535
                                             65 COMRAM     2     2      0
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonDraw                                      32    30      2   44286
                                             28 BANK0     32    30      2
                         _LCD_Bitmap
                   _LCD_ButtonUpdate
                       _LCD_DrawRect
                       _LCD_DrawText
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _LCD_ButtonUpdate                                    18    16      2   11351
                                             36 COMRAM    18    16      2
                       _LCD_DrawRect
                           _LCD_Read
 ---------------------------------------------------------------------------------
 (8) _LCD_Read                                            10     6      4     548
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _LCD_Bitmap                                          38    32      6    7372
                                             38 COMRAM    10     4      6
                                              0 BANK0     28    28      0
                            _RGB2LCD
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     901
                                             31 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _RGB2LCD                                             14    12      2     499
                                             17 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (3) _Menu_inGameDraw                                      2     0      2   43399
                                             50 BANK0      2     0      2
                          _Ball_draw
                           _LCD_Fill
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Score_draw                                           2     0      2   21884
                                             48 BANK0      2     0      2
                       _LCD_DrawText
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             16    10      6    9137
                                             34 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             8     2      6    8111
                                             26 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           42    36      6    7638
                                             62 COMRAM     8     2      6
                                             18 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _dtoa                                                36    26     10    5863
                                             44 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (10) _pad                                                11     5      6    3597
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _fputs                                               7     3      4    1537
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2     183
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (10) ___aomod                                            18     2     16     613
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (10) ___aodiv                                            26    10     16     625
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawText                                        34    21     13   12381
                                             31 COMRAM    34    21     13
                            ___awdiv
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _strlen                                              4     2      2     400
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2802
                                             25 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1105
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _Paddle_draw                                          6     4      2   10398
                                             36 COMRAM     6     4      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_Fill                                             8     6      2     716
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Ball_draw                                           10     8      2   10187
                                             36 COMRAM    10     8      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawRect                                        19     8     11    9635
                                             17 COMRAM    19     8     11
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                          2     2      0    1016
                                             23 COMRAM     2     2      0
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     793
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _LEAVECRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ENTERCRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _isr                                                 4     4      0    2011
                                             13 COMRAM     4     4      0
         _XF_decrementAndQueueTimers
                     i2_XF_pushEvent
 ---------------------------------------------------------------------------------
 (15) _XF_decrementAndQueueTimers                          4     4      0    1408
                                              9 COMRAM     4     4      0
                 _XF_unscheduleTimer
                     i2_XF_pushEvent
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     419
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2_XF_pushEvent                                      3     2      1     603
                                              6 COMRAM     3     2      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
                          i2___awmod
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) _XF_unscheduleTimer                                  2     1      1     208
                                              1 COMRAM     2     1      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (16) i2_LEAVECRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_ENTERCRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Factory_exec
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _displaySM
       _Menu_inGameDraw
         _Ball_draw
           _LCD_DrawRect
         _LCD_Fill
         _Paddle_draw
           _LCD_DrawRect
         _Score_draw
           _LCD_DrawText
             ___awdiv
             ___wmul
               ___awdiv (ARG)
             _strlen
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                     _strlen
                 _fputc
       _displayController
         _Ball_draw
         _Menu_endGame
           _LCD_ButtonDraw
             _LCD_Bitmap
               _RGB2LCD
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
               ___wmul
             _LCD_ButtonUpdate
               _LCD_DrawRect
               _LCD_Read
             _LCD_DrawRect
             _LCD_DrawText
             ___awdiv
             _strlen
           _LCD_DrawText
           _LCD_Fill
         _Menu_parametersDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
           _LCD_SliderDraw
             _LCD_DrawRect
             _LCD_SliderUpdate
               _LCD_DrawRect
               ___lwdiv
               ___wmul
         _Menu_welcomeDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
         _Paddle_draw
         _Score_draw
     _gameControllerSM
       _XF_scheduleTimer
         _ENTERCRITICAL
         _LEAVECRITICAL
       _gameControllerController
         _GameParameters_init
           _Ball_init
           _LCD_ButtonCreate
           _LCD_SliderCreate
           _Paddle_init
           _Score_init
         _GameParameters_resetPos
         _LCD_InButton
         _LCD_InSlider
         _LCD_SliderUpdate
         _XF_pushEvent
           _ENTERCRITICAL
           _LEAVECRITICAL
           ___awmod
         _XF_scheduleTimer
         _backlightController
           _GameParameters_setBackLight
         _mooveBall
           _Ball_Update
           _XF_pushEvent
           _checkCollision
             _XF_pushEvent
         _moovePaddle
           _GameParameters_resetPos
           _LCD_InButton
           _Paddle_addX
           _XF_pushEvent
     _sleepSM
     _touchScreenSM
       _touchScreenController
         _GameParameters_setX
         _GameParameters_setY
         _LCD_DrawText
         _XF_scheduleTimer
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _configMeasure
         _configTouch
         _sprintf
   _Factory_init
     _GameParameters_init
     _LCD_DrawText
     _LCD_Fill
     _LCD_Init
       _LCD_Lowlevel_Init
     _XF_init
       ___wmul
     _sleepInit
       _displayInit
         _displayController
       _gameControllerInit
         _gameControllerController
       _sleepController
       _touchScreenInit
         _configTouch

 _isr (ROOT)
   _XF_decrementAndQueueTimers
     _XF_unscheduleTimer
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
     i2_XF_pushEvent
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
       i2___awmod
       i2___wmul (ARG)
     i2___wmul
   i2_XF_pushEvent

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      1      F0       6       93.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     55      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4D       1       81.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DD       9        0.0%
DATA                 0      0     1DD      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 06 16:12:18 2021

                      _LCD_ButtonDraw 0F74                           ?_LCD_Bitmap 0027  
                                   l5 5C0E                                     l8 5A9E  
                        ___fldiv@aexp 0038                          ___fldiv@bexp 0037  
                    _LCD_ButtonCreate 49C8                          ___fldiv@sign 0030  
                        ?_displayInit 00A3                  __end_of_Factory_exec 5F3C  
                __end_of_Factory_init 5574                                    l11 4218  
                                  l18 56DA                                    l26 5014  
                                  l29 448C                                    _g1 0100  
                        ___awdiv@sign 0017               __end_of_sleepController 61BC  
                   ??i2_ENTERCRITICAL 0001              __end_of_Menu_welcomeDraw 5B9A  
                 ___wmul@multiplicand 001C                  backlightController@g 0018  
                    _LCD_ButtonUpdate 383A                         ?_LCD_InButton 0012  
                       ?_LCD_InSlider 0012                         ?_LCD_DrawRect 0012  
                       ?_LCD_DrawText 0020                                   l102 5572  
                                 l106 5F3A                                   l115 628C  
                                 l124 50E6                                   l141 2602  
                                 l224 53B4                                   l320 221E  
                                 l232 4CA2                                   l152 6216  
                                 l226 53F8                                   l242 46BC  
                                 l146 60C4                                   l323 54B6  
                                 l251 3A6E                                   l155 634C  
                                 l219 35CA                                   l260 1460  
                                 l180 5B20                                   l500 35D0  
                                 l412 623E                                   l245 4AC0  
                                 l158 6336                                   l502 35DA  
                                 l183 5F90                                   l239 1936  
                                 l271 4E5E                                   l415 63C2  
                                 l503 35E2                                   l264 4D80  
                                 l424 61BA                                   l281 2DEC  
                                 l329 0F72                                   l177 5B98  
                                 l521 6032                                   l513 3838  
                                 l291 2F0E                                   l283 2DF8  
                                 l507 36A4                                   l188 578A  
                                 l516 62F2                                   l294 2FA8  
                                 l630 2A5E                                   l542 630A  
                                 l703 1DB8                                   l288 2EB0  
                                 l560 49C6                                   l624 4F3A  
                                 l297 3016                                   l393 5988  
                                 l609 6320                                   l801 63AA  
                                 l650 4BAA                                   l299 3040  
                                 l651 4BB4                                   l732 5EE4  
                                 l724 562A                                   l709 1DD4  
                                 l629 2A00                                   l485 63C0  
                                 l574 48C6                                   l654 6266  
                                 l646 2D06                                   l807 62B2  
                                 l399 435A                                   l663 0506  
                                 l728 5D5A                                   l496 5A1C  
                                 l921 3F5E                                   l657 0132  
                                 l649 4B36                                   l754 6378  
                                 l738 5C82                                   l674 0870  
                                 l658 01B8                                   l683 097C  
                                 l758 6362                                   l934 40C2  
                                 _GIE 007F97                                   _PR2 000FBB  
                                 _abs 610A                                   _pad 5276  
                                 _isr 0008                  configMeasure@channel 0012  
                     ??_ENTERCRITICAL 0012                          ___awmod@sign 0017  
                                 prod 000FF3                                   wreg 000FE8  
              __size_of_touchScreenSM 0094                       __end_of_RGB2LCD 54B8  
                        ___fltol@exp1 0042                      _touchScreenState 00DE  
                         _Ball_Update 5A1E                         ??_Paddle_addX 0018  
                                l1104 47C2                                  l1051 583A  
                                ?_abs 0024                                  l1038 5274  
                                l1400 2842                                  l1305 5CF6  
                                l1402 28BA                                  l1315 5DBE  
                                l1403 28A8                                  l1308 5DB6  
                                l1512 52BA                                  l1515 52FC  
                                l1523 30E2                                  l1517 5336  
                                l1525 30EA                                  l4101 33AA  
                                l1550 3DD6                                  l1462 3AC6  
                                l1543 3322                                  l1391 27FC  
                                l4111 33BC                                  l4103 33B0  
                                l4031 3324                                  l1561 6140  
                                l1465 3C22                                  l4201 344E  
                                l4121 33CA                                  l4113 33BE  
                                l4105 33B2                                  l4041 3332  
                                l4033 3328                                  l1298 5CEE  
                                l1394 27C0                                  l4211 3460  
                                l4203 3450                                  l4131 33DC  
                                l4123 33D0                                  l4115 33C4  
                                l4107 33B4                                  l4051 3346  
                                l4043 3334                                  l4035 332C  
                                l1564 6148                                  l1556 5E7C  
                                l1476 3BBA                                  l1557 5E84  
                                l1485 5FE2                                  l1389 299C  
                                l1469 3B5E                                  l4301 350E  
                                l4221 3472                                  l4213 3462  
                                l4205 3456                                  l4141 33EE  
                                l4133 33DE                                  l4125 33D2  
                                l4117 33C6                                  l4109 33B6  
                                l4061 3362                                  l4053 3358  
                                l4037 332E                                  l4311 3520  
                                l4303 3510                                  l4231 3484  
                                l4223 3474                                  l4215 3464  
                                l4207 3458                                  l4151 33FC  
                                l4143 33F0                                  l4135 33E4  
                                l4127 33D8                                  l4119 33C8  
                                l4071 3374                                  l4063 3368  
                                l4055 335C                                  l4039 3330  
                                l1576 51B0                                  l1584 6108  
                                l1593 6080                                  l4401 35C6  
                                l4321 3536                                  l4313 3526  
                                l4305 3516                                  l4241 349A  
                                l4233 348A                                  l4225 347A  
                                l4217 346A                                  l4209 345E  
                                l4161 340A                                  l4153 33FE  
                                l4145 33F2                                  l4137 33E6  
                                l4129 33DA                                  l4081 3386  
                                l4073 3376                                  l4065 336A  
                                l4057 335E                                  l4049 3338  
                                l1587 63C4                                  l4403 35C8  
                                l4331 3548                                  l4323 3538  
                                l4315 3528                                  l4307 3518  
                                l4251 34AC                                  l4243 349C  
                                l4235 348C                                  l4227 347C  
                                l4219 346C                                  l4171 341C  
                                l4163 340C                                  l4155 3400  
                                l4147 33F8                                  l4139 33EC  
                                l4091 3398                                  l4083 3388  
                                l4075 337C                                  l4067 3370  
                                l4059 3360                                  l4341 355A  
                                l4333 354E                                  l4325 353E  
                                l4317 352E                                  l4309 351E  
                                l4261 34C2                                  l4253 34B2  
                                l4245 34A2                                  l4237 3492  
                                l4229 3482                                  l4181 342E  
                                l4173 341E                                  l4165 3412  
                                l4157 3406                                  l4149 33FA  
                                l4093 339A                                  l4085 338A  
                                l4077 337E                                  l4069 3372  
                                l4351 356C                                  l4343 355C  
                                l4335 3550                                  l4327 3540  
                                l4319 3530                                  l4271 34D4  
                                l4263 34C4                                  l4255 34B4  
                                l4247 34A4                                  l4239 3494  
                                l4191 343C                                  l4183 3430  
                                l4175 3420                                  l4167 3414  
                                l4159 3408                                  l4095 33A0  
                                l4087 3390                                  l4079 3384  
                                l4361 3582                                  l4353 3572  
                                l4345 3562                                  l4337 3556  
                                l4329 3546                                  l4281 34E6  
                                l4273 34DA                                  l4265 34CA  
                                l4257 34BA                                  l4249 34AA  
                                l4193 3442                                  l4185 3432  
                                l4177 3426                                  l4169 341A  
                                l4097 33A2                                  l4089 3392  
                                l4371 3590                                  l4363 3584  
                                l4355 3574                                  l4347 3564  
                                l4339 3558                                  l4291 34F8  
                                l4283 34E8                                  l4275 34DC  
                                l4267 34CC                                  l4259 34BC  
                                l4195 3444                                  l4187 3434  
                                l4179 3428                                  l4099 33A8  
                                l3901 5944                                  l4381 35A6  
                                l4373 3596                                  l4365 3586  
                                l4357 357A                                  l4349 356A  
                                l4293 34FE                                  l4285 34EE  
                                l4277 34DE                                  l4269 34D2  
                                l4197 3446                                  l4189 343A  
                                ?_pad 0022                                  l3911 596E  
                                l4391 35B4                                  l4383 35A8  
                                l4375 3598                                  l4367 3588  
                                l4359 357C                                  l4295 3500  
                                l4287 34F0                                  l4279 34E0  
                                l4199 3448                                  l8001 52A6  
                                l4393 35BA                                  l4385 35AE  
                                l4377 359E                                  l4369 358E  
                                l4297 3506                                  l4289 34F6  
                                l8011 530A                                  l8003 52B2  
                                l3907 5954                                  l4395 35BC  
                                l4387 35B0                                  l4379 35A0  
                                l4299 3508                                  l8101 2D82  
                                l8013 531E                                  l8005 52C6  
                                l8021 3042                                  l3909 5962  
                                l4397 35C2                                  l4389 35B2  
                                l8111 2D90                                  l8103 2D84  
                                l8007 52DA                                  l8031 30BC  
                                l8023 3062                                  l4399 35C4  
                                l8201 2E70                                  l8121 2DA0  
                                l8113 2D94                                  l8105 2D86  
                                l8017 610A                                  l8009 52DE  
                                l8041 3118                                  l8033 30D6  
                                l8025 308C                                  l9001 0B2A  
                                l3881 58F4                                  l8211 2E7E  
                                l8203 2E72                                  l8131 2DB0  
                                l8123 2DA4                                  l8115 2D96  
                                l8107 2D8C                                  l8019 6124  
                                l8051 31B8                                  l8043 3120  
                                l8035 30F2                                  l8027 30AC  
                                l9011 0B58                                  l9003 0B2C  
                                l3883 58F8                                  l8301 2F60  
                                l8221 2E8E                                  l8213 2E80  
                                l8205 2E74                                  l8141 2DC0  
                                l8133 2DB2                                  l8125 2DA6  
                                l8117 2D9C                                  l8109 2D8E  
                                l8061 3276                                  l8053 31BE  
                                l8045 3128                                  l8037 3104  
                                l8029 30BA                                  l9101 0C76  
                                l9021 0B64                                  l9013 0B5A  
                                l9005 0B2E                                  l3885 58FA  
                                l8311 2F6E                                  l8303 2F62  
                                l8231 2EA0                                  l8223 2E94  
                                l8215 2E84                                  l8207 2E76  
                                l8151 2DD2                                  l8143 2DC2  
                                l8135 2DB8                                  l8127 2DAC  
                                l8119 2D9E                                  l8071 32C4  
                                l8063 3290                                  l8047 312E  
                                l8055 3222                                  l8039 3112  
                                l9103 0C78                                  l9111 0C84  
                                l9031 0B88                                  l9023 0B7C  
                                l9015 0B5C                                  l9007 0B30  
                                l3895 5910                                  l3887 58FC  
                                l3879 58EC                                  l7263 6186  
                                l8321 2F7E                                  l8313 2F74  
                                l8305 2F68                                  l8241 2EDA  
                                l8233 2EA2                                  l8225 2E96  
                                l8217 2E86                                  l8209 2E7C  
                                l8161 2DE0                                  l8153 2DD8  
                                l8145 2DC8                                  l8137 2DBA  
                                l8129 2DAE                                  l8073 32D6  
                                l8057 323E                                  l8065 329E  
                                l8049 31B0                                  l9121 0D24  
                                l9113 0CC0                                  l9105 0C7C  
                                l9201 0F4C                                  l9041 0B94  
                                l9033 0B8A                                  l9025 0B80  
                                l9017 0B60                                  l9009 0B54  
                                l8401 422C                                  l3897 591E  
                                l3889 58FE                                  l8331 2F94  
                                l8323 2F84                                  l8315 2F76  
                                l8307 2F6A                                  l8251 2EEA  
                                l8243 2EDE                                  l8235 2EA4  
                                l8227 2E9C                                  l8219 2E8C  
                                l8163 2E08                                  l8155 2DDA  
                                l8147 2DCA                                  l8139 2DBC  
                                l8171 2E40                                  l8091 2D3E  
                                l8083 2D08                                  l8075 32E2  
                                l8067 32B0                                  l8059 325C  
                                l9211 0F68                                  l9203 0F5E  
                                l9131 0D32                                  l9123 0D28  
                                l9115 0CC8                                  l9107 0C7E  
                                l9043 0B96                                  l9035 0B8C  
                                l9027 0B82                                  l9019 0B62  
                                l8411 423C                                  l8403 422E  
                                l3899 592A                                  l7267 6186  
                                ?_isr 0001                                  l8341 2FB8  
                                l8333 2F96                                  l8325 2F86  
                                l8317 2F78                                  l8309 2F6C  
                                l8261 2EFA                                  l8253 2EEC  
                                l8245 2EE0                                  l8237 2EC0  
                                l8229 2E9E                                  l8181 2E50  
                                l8173 2E44                                  l8165 2E0C  
                                l8157 2DDC                                  l8149 2DD0  
                                l8093 2D54                                  l8085 2D0C  
                                l9301 533C                                  l8077 32EA  
                                l8069 32BE                                  l9213 0F6E  
                                l9205 0F62                                  l9141 0D98  
                                l9133 0D34                                  l9125 0D2A  
                                l9117 0D14                                  l9109 0C80  
                                l9061 0BE2                                  l9053 0BC8  
                                l9045 0B98                                  l9037 0B90  
                                l9029 0B84                                  l8421 424E  
                                l8413 4242                                  l8405 4232  
                                l8511 6366                                  l8351 2FDA  
                                l8343 2FBC                                  l8335 2F98  
                                l8327 2F8C                                  l8319 2F7C  
                                l8271 2F1E                                  l8263 2EFC  
                                l8255 2EEE                                  l8247 2EE2  
                                l8239 2EC4                                  l8191 2E60  
                                l8183 2E52                                  l8175 2E46  
                                l8167 2E22                                  l8159 2DDE  
                                l8095 2D6C                                  l8087 2D10  
                                l9311 5350                                  l9303 5344  
                                l8079 32FA                                  l8503 53FA  
                                l9215 0F70                                  l9207 0F64  
                                l9151 0E0A                                  l9143 0DB2  
                                l9127 0D2C                                  l9119 0D20  
                                l9135 0D38                                  l9063 0BE4  
                                l9071 0BF0                                  l9055 0BD0  
                                l9047 0BA0                                  l9039 0B92  
                                l8431 425E                                  l8423 4250  
                                l8415 4244                                  l8407 4234  
                                l9231 5D1E                                  l8513 6376  
                                l8601 5832                                  l8361 2FEA  
                                l8353 2FDC                                  l8345 2FD2  
                                l8337 2F9A                                  l8329 2F8E  
                                l8281 2F40                                  l8273 2F22  
                                l8265 2EFE                                  l8257 2EF2  
                                l8249 2EE4                                  l8193 2E62  
                                l8185 2E54                                  l8177 2E48  
                                l8169 2E26                                  l8097 2D7C  
                                l8089 2D26                                  l9321 5362  
                                l9313 5352                                  l9305 5346  
                                l8521 62AA                                  l8505 546E  
                                l9209 0F66                                  l9161 0E16  
                                l9153 0E0C                                  l9145 0DBE  
                                l9137 0D4E                                  l9129 0D30  
                                l9081 0C32                                  l9073 0C12  
                                l9065 0BE8                                  l9057 0BDC  
                                l9049 0BA8                                  l8441 4270  
                                l8433 4260                                  l8425 4256  
                                l8417 424A                                  l8409 423A  
                                l9401 4A14                                  l9241 5D4E  
                                l9233 5D32                                  l8515 6350  
                                l8371 2FFA                                  l8363 2FEC  
                                l8355 2FE2                                  l8347 2FD6  
                                l8339 2F9C                                  l8291 2F50  
                                l8283 2F42                                  l8275 2F38  
                                l8267 2F00                                  l8259 2EF4  
                                l8195 2E64                                  l8187 2E58  
                                l8179 2E4A                                  l8099 2D80  
                                l9331 5374                                  l9323 5368  
                                l9315 5358                                  l9307 5348  
                                l8531 51CC                                  l9251 5E2C  
                                l8507 54AE                                  l8611 5CA6  
                                l9155 0E0E                                  l9147 0E00  
                                l9163 0E1A                                  l9139 0D8C  
                                l9091 0C3E                                  l9083 0C34  
                                l9075 0C1A                                  l9067 0BEA  
                                l9059 0BE0                                  l8451 427E  
                                l8443 4276                                  l8435 4266  
                                l8427 4258                                  l8419 424C  
                                l9411 4A78                                  l9403 4A28  
                                l9243 5D52                                  l9235 5D38  
                                l9227 5CFA                                  l8517 6360  
                                l8381 3008                                  l8373 2FFC  
                                l8365 2FF2                                  l8357 2FE4  
                                l8349 2FD8                                  l8293 2F52  
                                l8285 2F48                                  l8277 2F3C  
                                l8269 2F02                                  l8197 2E68  
                                l8189 2E5A                                  l9341 5386  
                                l9333 5376                                  l9325 536A  
                                l9317 535A                                  l9309 534A  
                                l8541 51F2                                  l8533 51D0  
                                l8525 51B2                                  l7901 6044  
                                l8701 1EDC                                  l9253 5E3A  
                                l8621 5CE0                                  l8613 5CAE  
                                l8605 5C84                                  l9181 0F10  
                                l9165 0E36                                  l9157 0E12  
                                l9149 0E06                                  l9085 0C36  
                                l9093 0C42                                  l9077 0C22  
                                l9069 0BEC                                  l9173 0E72  
                                l8461 4288                                  l8453 4280  
                                l8445 4278                                  l8437 4268  
                                l8429 425A                                  l9501 45F0  
                                l9261 5BBE                                  l9413 4A8C  
                                l9405 4A3C                                  l9421 4BC6  
                                l9245 5D58                                  l9229 5D00  
                                l8383 300A                                  l8375 3002  
                                l8367 2FF4                                  l8359 2FE6  
                                l8295 2F58                                  l8287 2F4A  
                                l8279 2F3E                                  l8199 2E6A  
                                l9351 539C                                  l9343 538C  
                                l9335 537C                                  l9327 5370  
                                l9319 5360                                  l8551 5228  
                                l8543 5204                                  l8535 51DE  
                                l8527 51B6                                  l8519 628E  
                                l7903 6074                                  l8711 1FE6  
                                l8703 1EFA                                  l7911 60E4  
                                l9255 5E60                                  l8623 5CE2  
                                l8615 5CBC                                  l8607 5C8C  
                                l8631 5D76                                  l9191 0F20  
                                l9183 0F14                                  l9167 0E46  
                                l9159 0E14                                  l9095 0C64  
                                l9087 0C3A                                  l9079 0C2E  
                                l9175 0EBA                                  l8471 42B6  
                                l8463 428A                                  l8455 4282  
                                l8447 427A                                  l8439 426E  
                                l8391 421E                                  l9503 4604  
                                l9263 5BD2                                  l9415 4AA0  
                                l9407 4A50                                  l9431 4C2A  
                                l9423 4BDA                                  l9271 562C  
                                l9239 5D3E                                  l9511 4CA4  
                                l8385 3026                                  l8377 3004  
                                l8369 2FF6                                  l8297 2F5A  
                                l8289 2F4C                                  l9353 539E  
                                l9345 538E                                  l9337 537E  
                                l9329 5372                                  l8553 523E  
                                l8545 520C                                  l8561 5254  
                                l8537 51E6                                  l8529 51C4  
                                l8801 213E                                  l8721 1FF2  
                                l8713 1FE8                                  l8705 1F3C  
                                l7921 3E0A                                  l7913 60E8  
                                l9249 5E24                                  l8625 5CE8  
                                l8617 5CC2                                  l8609 5C9E  
                                l8641 5DB0                                  l8633 5D7E  
                                l9193 0F22                                  l9185 0F18  
                                l9177 0EC8                                  l9169 0E66  
                                l9097 0C70                                  l9089 0C3C  
                                l8481 42E0                                  l8473 42D4  
                                l8465 428C                                  l8457 4284  
                                l8449 427C                                  l8393 4220  
                                l9505 4638                                  l9265 5BE6  
                                l9257 5B9A                                  l9417 4AB0  
                                l9409 4A64                                  l9441 4C8E  
                                l9433 4C3E                                  l9425 4BEE  
                                l9281 56A2                                  l9273 5654  
                                l9601 0908                                  l9513 4CC2  
                                l8571 5790                                  l8387 302A  
                                l8379 3006                                  l8299 2F5C  
                                l9611 40C4                                  l9371 53C8  
                                l9363 53AC                                  l9355 53A0  
                                l9347 5394                                  l9339 5384  
                                l8563 5264                                  l8555 5246  
                                l8547 5214                                  l8539 51EA  
                                l8811 215A                                  l8803 214E  
                                l8731 1FFE                                  l8723 1FF4  
                                l8715 1FEA                                  l8707 1F96  
                                l7931 3E4C                                  l7923 3E0E  
                                l7915 3DD8                                  l7907 60C6  
                                l8651 3C6A                                  l8643 3C24  
                                l8619 5CD8                                  l8635 5D8C  
                                l8627 5D5C                                  l9195 0F24  
                                l9187 0F1A                                  l9179 0F02  
                                l9099 0C74                                  l8491 4322  
                                l8483 42FC                                  l8475 42D6  
                                l8467 4292                                  l8459 4286  
                                l8395 4222                                  l9507 4674  
                                l9267 5BFA                                  l9259 5BAA  
                                l9435 4C52                                  l9427 4C02  
                                l9419 4BB6                                  l9283 56B2  
                                l9275 5666                                  l9443 6082  
                                l9603 090C                                  l9451 61EE  
                                l9523 4D0E                                  l9291 4FA4  
                                l8581 57C0                                  l8573 579E  
                                l9613 4154                                  l9373 53DE  
                                l9357 53A2                                  l9349 5396  
                                l9621 43F0                                  l8565 526C  
                                l8557 5248                                  l8549 5222  
                                l8821 216A                                  l8813 215C  
                                l8805 2152                                  l8741 2022  
                                l8733 2016                                  l8725 1FF6  
                                l8717 1FEC                                  l8709 1FE2  
                                l7941 3EA6                                  l7933 3E6A  
                                l7925 3E1C                                  l7917 3DDC  
                                l7909 60D2                                  l8661 3D34  
                                l8653 3C8E                                  l8645 3C48  
                                l9381 5F92                                  l8637 5DA2  
                                l8629 5D6E                                  l9189 0F1C  
                                l9197 0F28                                  l8493 4324  
                                l8485 431A                                  l8477 42D8  
                                l8469 4294                                  l8397 4224  
                                l8389 421A                                  l9461 0FD2  
                                l9453 0F74                                  l8901 18BE  
                                l9509 46B0                                  l9437 4C66  
                                l9429 4C16                                  l9285 56C6  
                                l9277 5676                                  l9445 6092  
                                l9269 5A1E                                  l9605 095A  
                                l9541 0102                                  l9517 4CC8  
                                l9293 4FB8                                  l8591 5806  
                                l8583 57D2                                  l8575 57A6  
                                l9615 4170                                  l9375 53E2  
                                l8559 524E                                  l8831 2186  
                                l8807 2154                                  l8815 2162  
                                l8751 202E                                  l8743 2024  
                                l8735 201A                                  l8727 1FFA  
                                l8719 1FEE                                  l7943 3ED4  
                                l7935 3E72                                  l7951 3F0E  
                                l7927 3E3C                                  l7919 3DEA  
                                l8663 3D58                                  l8671 3D86  
                                l8655 3CB2                                  l8647 3C56  
                                l9383 5FA4                                  l8639 5DAA  
                                l9199 0F44                                  l8495 4346  
                                l8487 431C                                  l8479 42DE  
                                l8399 422A                                  l8911 388E  
                                l9471 1112                                  l9463 1006  
                                l9455 0F7E                                  l8903 18FA  
                                l9439 4C7A                                  l9279 568A  
                                l9631 225A                                  l9623 2220  
                                l9711 4E12                                  l9447 60AE  
                                l9607 0964                                  l9551 02E8  
                                l9543 0188                                  l9535 4D7E  
                                l9295 4FD8                                  l9287 4F3C  
                                l8593 580E                                  l8585 57DA  
                                l8577 57AA                                  l8569 578C  
                                l9369 53C4                                  l9617 435C  
                                l8841 21A4                                  l8833 218A  
                                l8817 2166                                  l8809 2156  
                                l8761 203A                                  l8753 2030  
                                l8745 2026                                  l8737 201C  
                                l8729 1FFC                                  l7953 3F1E  
                                l7945 3EF4                                  l7937 3E86  
                                l7929 3E40                                  l7961 3F64  
                                l8673 3D94                                  l8665 3D66  
                                l8657 3CFC                                  l8649 3C66  
                                l9385 5FAC                                  l8497 434E  
                                l8489 431E                                  l8921 393E  
                                l8913 38C2                                  l8905 383A  
                                l9481 12AA                                  l9473 1126  
                                l9465 1036                                  l9457 0F8E  
                                l9393 49C8                                  l9377 6268  
                                l9641 22BE                                  l9633 226E  
                                l9625 2230                                  l9705 4DEC  
                                l9721 5C10                                  l9449 60B4  
                                l9801 1CF8                                  l9609 0978  
                                l9561 0436                                  l9553 0330  
                                l9545 020E                                  l9529 4D34  
                                l9297 4FEC                                  l9289 4F4E  
                       ??_Paddle_draw 0027                                  l8595 5814  
                                l8587 57E2                                  l8579 57B8  
                                l9299 5338                                  l9619 43D4  
                                l8843 21A6                                  l8819 2168  
                                l8827 2172                                  l8771 2068  
                                l8763 203E                                  l8755 2032  
                                l8747 202A                                  l8739 201E  
                                l8691 1E7E                                  l7955 3F3E  
                                l7947 3EF6                                  l7939 3E94  
                                l7971 3FC4                                  l7963 3F72  
                                l7891 5134                                  l7883 50E8  
                                l8667 3D7A                                  l9387 5FB4  
                                l8931 09D4                                  l8499 4352  
                                l8923 396E                                  l8915 38DE  
                                l8907 384A                                  l9491 13A0  
                                l9483 12B2                                  l9475 11A2  
                                l9467 10B0                                  l9459 0FBE  
                                l9395 49D8                                  l9379 6278  
                                l9651 24D0                                  l9643 2328  
                                l9635 227E                                  l9627 2232  
                                l9731 5C3A                                  l9723 5C16  
                                l9811 1DA0                                  l9803 1D1C  
                                l9571 0578                                  l9563 047C  
                                l9555 0376                                  l9547 024C  
                                l9539 00B4                                  l8589 57F0  
                                l8597 581A                                  l8861 21EE  
                                l8845 21AA                                  l8853 21B4  
                                l8837 219E                                  l8829 2174  
                                l8781 2074                                  l8773 206A  
                                l8765 2040                                  l8757 2036  
                                l8749 202C                                  l8693 1E80  
                                l8685 1DD6                                  l7949 3F08  
                                l7981 403A                                  l7973 3FE2  
                                l7965 3F92                                  l7893 516A  
                                l7885 50FA                                  l8677 3DA0  
                                l9389 5FD0                                  l9661 507C  
                                l8941 0A9E                                  l8933 09F4  
                                l8925 097E                                  l8917 390A  
                                l8909 387A                                  l9493 13EC  
                                l9485 130C                                  l9477 121A  
                                l9469 10DA                                  l9397 49EC  
                                l9653 253A                                  l9645 2392  
                                l9637 228E                                  l9629 2246  
                                l9717 4E5C                                  l9733 5C6A  
                                l9805 1D40                                  l9813 1DB8  
                                l9741 1938                                  l9581 06E0  
                                l9573 05B6                                  l9565 04C2  
                                l9557 03BC                                  l9549 02A2  
                                l9821 6240                                  l9901 2B92  
                                l8599 582A                                  l8847 21AC  
                                l8839 21A2                                  l8855 21B6  
                                l8791 2080                                  l8783 2078  
                                l8775 206C                                  l8767 2042  
                                l8759 2038                                  l8695 1EA8  
                                l8687 1DE2                                  l7991 40A2  
                                l7983 405A                                  l7975 3FEA  
                                l7967 3F96                                  l7959 3F60  
                                l7887 510C                                  l8679 3DC4  
                                l8951 0AAE                                  l8943 0AA2  
                                l8935 0A20                                  l8927 0986  
                                l8919 392A                                  l9487 1368  
                                l9495 1454                                  l9479 123A  
                                l8871 1558                                  l8863 1462  
                                l9671 5B86                                  l9663 5B22  
                                l9399 4A00                                  l9655 25A4  
                                l9647 23FC                                  l9639 22A6  
                                l9735 5C6C                                  l9807 1D58  
                                l9751 19E0                                  l9743 195C  
                                l9591 082C                                  l9583 0726  
                                l9575 060C                                  l9567 0518  
                                l9559 0402                                  l9815 4AC2  
                                l9911 2C04                                  l9903 2BA4  
                                l9823 6338                                  l9831 62EC  
                                l7897 6034                                  l8857 21D2  
                                l8849 21AE                                  l8793 2088  
                                l8785 207A                                  l8777 2070  
                                l8769 2064                                  l8697 1EB8  
                                l8689 1E30                                  l7985 406C  
                                l7977 3FFE                                  l7969 3FA4  
                                l7889 5116                                  l9657 5016  
                                l8961 0ADE                                  l8953 0AB0  
                                l8945 0AA4                                  l8937 0A56  
                                l8929 09B4                                  l9489 136A  
                                l8881 1680                                  l8865 1480  
                                l8873 1598                                  l9497 45B0  
                                l9681 5B10                                  l9673 5AA0  
                                l9665 5B2C                                  l9649 2466  
                                l9737 5C7C                                  l9729 5C1A  
                                l9809 1D7C                                  l9761 1A7C  
                                l9753 19F8                                  l9745 1980  
                                l9593 0882                                  l9585 076C  
                                l9577 0652                                  l9569 0522  
                                l9817 4B0A                                  l9921 2CA6  
                                l9913 2C1C                                  l9905 2BB4  
                                l9825 6322                                  l9841 6008  
                                l9833 62EE                                  l7899 6040  
                                l8859 21EA                                  l8795 20BE  
                                l8787 207C                                  l8779 2072  
                                l8699 1ECA                                  l7979 400C  
                                l7987 4072                                  l7995 5276  
                                l9659 5040                                  l8971 0AEA  
                                l8963 0AE2                                  l8955 0AB2  
                                l8947 0AA6                                  l8939 0A78  
                                l9691 5754                                  l9683 56DC  
                                l8891 1786                                  l8883 16BC  
                                l8875 15B4                                  l8867 1510  
                                l9499 45C0                                  l9675 5AAA  
                                l9667 5B62                                  l9851 47C8  
                                l9771 1B18                                  l9763 1AA0  
                                l9755 1A1C                                  l9747 1998  
                                l9587 07A0                                  l9579 069A  
                                l9595 088C                                  l9819 4B7E  
                                l9923 2CBC                                  l9915 2C3C  
                                l9907 2BC6                                  l9843 600C  
                                l9835 62F0                                  l9827 62DA  
                                l8797 20C6                                  l8789 207E  
                                l7989 4082                                  l7997 5284  
                                l8981 0AF8                                  l8973 0AEE  
                                l8965 0AE4                                  l8957 0ABE  
                                l8949 0AA8                                  l9685 56E8  
                                l8893 17A6                                  l8885 16DC  
                                l8877 1624                                  l8869 1538  
                                l9677 5AE0                                  l9669 5B74  
                                l9861 481E                                  l9853 47D8  
                                l9693 4D82                                  l9781 1BC0  
                                l9773 1B3C                                  l9765 1AB8  
                                l9757 1A40                                  l9749 19BC  
                                l9597 08EA                                  l9589 07E6  
                                l9917 2C46                                  l9909 2BD2  
                                l9941 2630                                  l9933 2604  
                                l9845 601C                                  l9837 5FE6  
                                l9829 62E8                   __end_of_XF_popEvent 5EE6  
                                l8799 2116                                  l7999 5298  
                                l8991 0B1C                                  l8983 0AFA  
                                l8975 0AF0                                  l8967 0AE6  
                                l8959 0ACA                                  l9687 56FA  
                                l8887 16FA                                  l8895 17E6  
                                l8879 1644                                  l9679 5AF2  
                                l9871 487A                                  l9863 482E  
                                l9855 47E8                                  l9695 4DA0  
                                l9791 1C5C                                  l9783 1BD8  
                                l9775 1B60                                  l9767 1ADC  
                                l9759 1A58                                  l9599 08F4  
                                l9919 2C5E                                  l9927 2CC4  
                                l9951 266A                                  l9943 2640  
                                l9935 2610                                  l9847 602E  
                                l9839 5FF6                                  STR_1 7FB6  
                                STR_2 7FEE                                  l8993 0B20  
                                l8985 0B14                                  l8977 0AF2  
                                l8969 0AE8                                  l9689 571A  
                                l8897 1876                                  l8889 1716  
                                l9865 4842                                  l9857 47FA  
                                l9849 47C4                                  l9793 1C80  
                                l9785 1BFC                                  l9777 1B78  
                                l9769 1B00                                  l9881 299E  
                                l9961 2696                                  l9953 2670  
                                l9945 2650                                  l9937 261E  
                                STR_3 7FEE                                  STR_4 7FAB  
                                l8995 0B22                                  l8987 0B18  
                                l8979 0AF6                                  l8899 189E  
                                l9867 4852                                  l9859 480A  
                                l9875 488A                                  l9699 4DA6  
                                l9795 1C98                                  l9787 1C20  
                                l9779 1B9C                                  l9891 2AC0  
                                l9883 29A2                                  l9971 26D0  
                                l9963 26A6                                  l9955 2676  
                                l9947 2652                                  l9939 2620  
                                STR_5 7FC9                                  STR_6 7FD2  
                                l8997 0B24                                  l8989 0B1A  
                                l9869 4866                                  l9797 1CBC  
                                l9789 1C38                                  l9893 2B08  
                                l9885 29EA                                  l9973 26E6  
                                l9965 26B6                                  l9957 2684  
                                l9949 265A                                  STR_7 7FE3  
                                STR_8 7FF7                                  l8999 0B28  
                                l9799 1CE0                                  l9895 2B24  
                                l9887 2A48                                  l9991 273A  
                                l9975 26F6                                  l9983 2716  
                                l9967 26B8                                  l9959 2686  
                                STR_9 7FFB                                  l9897 2B30  
                                l9889 2AA6                                  l9993 2754  
                                l9985 2726                                  l9977 26FE  
                                l9969 26C0                                  l9899 2B78  
                                l9995 2764                                  l9987 2726  
                                l9979 2702                                  l9997 2774  
                                l9999 2784                         ??_Paddle_init 0016  
                                u2300 5944                                  u2301 5940  
                                u2310 5988                                  u2311 5984  
                                u2450 3358                                  u2451 3354  
                                u6000 5222                                  u6001 521E  
                                u6010 523E                                  u6011 523A  
                                u6020 5264                                  u6100 5CBC  
                                u6021 5260                                  u6101 5CB8  
                                u6030 579E                                  u6110 5CD8  
                                u6031 579A                                  u6111 5CD4  
                                u6040 57B8                                  u6200 1EA8  
                                u6120 5D6E                                  u7000 1B3C  
                                u6041 57B4                                  u6201 1EA4  
                                u6121 5D6A                                  u7001 1B38  
                                u6050 57D2                                  u6210 1EB8  
                                u6130 5D8C                                  u7010 1B60  
                                u6051 57CE                                  u6211 1EB4  
                                u6131 5D88                                  u7011 1B5C  
                                u6060 57F0                                  u6300 221E  
                                u6220 1EDC                                  u5500 3E1C  
                                u5420 50FA                                  u6140 5DA2  
                                u7100 1D1C                                  u7020 1B9C  
                                u6061 57EC                                  u6301 221A  
                                u6221 1ED8                                  u5501 3E18  
                                u5421 50F6                                  u6141 5D9E  
                                u7101 1D18                                  u7021 1B98  
                                u6070 5806                                  u6230 1F34  
                                u5430 510C                                  u6150 3C48  
                                u6310 1480                                  u7110 1D40  
                                u7030 1BC0                                  u6071 5802  
                                u5511 3E46                                  u5431 5108  
                                u6151 3C44                                  u6311 147C  
                                u7111 1D3C                                  u7031 1BBC  
                                u6080 582A                                  u5520 3E6A  
                                u5600 403A                                  u5440 5134  
                                u6160 3C8E                                  u6400 0C12  
                                u6320 16FA                                  u7200 4842  
                                u7120 1D7C                                  u7040 1BFC  
                                u6081 5826                                  u5521 3E66  
                                u5601 4036                                  u5441 5130  
                                u6161 3C8A                                  u6401 0C0E  
                                u6321 16F6                                  u7201 483E  
                                u7121 1D78                                  u7041 1BF8  
                                u6250 214E                                  u5530 3E94  
                                u5610 4082                                  u5450 516A  
                                u6170 3CB2                                  u6090 5C9E  
                                u6410 0C64                                  u6330 38DE  
                                u7210 4866                                  u7130 1DA0  
                                u7050 1C20                                  u6251 214A  
                                u5531 3E90                                  u5611 407E  
                                u5451 5166                                  u6171 3CAE  
                                u6091 5C9A                                  u6411 0C60  
                                u6331 38DA                                  u7211 4862  
                                u7131 1D9C                                  u7051 1C1C  
                                u5460 6064                                  u6260 2186  
                                u6244 2132                                  u5540 3ED4  
                                u5620 5284                                  u5700 30BA  
                                u6180 3D58                                  u6420 0CC0  
                                u6340 396E                                  u6500 5666  
                                u7060 1C5C                                  u7140 4B0A  
                                u7300 2CA6                                  u7220 29EA  
                                u6261 2182                                  u6245 212C  
                                u6237 1F2A                                  u5541 3ED0  
                                u5621 5280                                  u5701 30B6  
                                u6181 3D54                                  u6421 0CBC  
                                u6341 396A                                  u6501 5662  
                                u7061 1C58                                  u7141 4B06  
                                u7301 2CA2                                  u7221 29E6  
                                u5470 6074                                  u6270 219A  
                                u6190 1E28                                  u5550 3F1E  
                                u5630 52A6                                  u5710 30D6  
                                u6430 0D4E                                  u6350 0A20  
                                u7070 1C80                                  u6510 4F4E  
                                u7150 4B7E                                  u7230 2A48  
                                u7310 261E                                  u5471 6070  
                                u6271 2196                                  u5551 3F1A  
                                u5631 52A2                                  u5711 30D2  
                                u6431 0D4A                                  u6351 0A1C  
                                u7071 1C7C                                  u6511 4F4A  
                                u7151 4B7A                                  u7231 2A44  
                                u7311 261A                                  u6280 21D2  
                                u5560 3F72                                  u5480 6108  
                                u5640 52FC                                  u5800 32BE  
                                u5720 3104                                  u6440 0E36  
                                u6360 0A52                                  u6600 13A0  
                                u7080 1CBC                                  u6520 4FA4  
                                u7240 2AA6                                  u7400 27BE  
                                u7320 2630                                  u7160 5FF6  
                                u6281 21CE                                  u5561 3F6E  
                                u5481 6104                                  u5641 52F8  
                                u5801 32BA                                  u5721 3100  
                                u6441 0E32                                  u6361 0A4E  
                                u6601 139C                                  u7081 1CB8  
                                u6521 4FA0                                  u7241 2AA2  
                                u7401 27BA                                  u7321 262C  
                                u7161 5FF2                                  u6290 220E  
                                u5490 3DEA                                  u5570 3FA4  
                                u5650 530A                                  u5810 32D6  
                                u5730 3112                                  u6450 0E46  
                                u6370 0A78                                  u7090 1CE0  
                                u6610 4CC2                                  u6530 4FD8  
                                u7250 2B08                                  u7410 27E8  
                                u7330 2640                                  u7170 601C  
                                u5467 605A                                  u5491 3DE6  
                                u5571 3FA0                                  u5651 5306  
                                u5811 32D2                                  u5731 310E  
                                u6451 0E42                                  u6371 0A74  
                                u7091 1CDC                                  u6611 4CBE  
                                u6531 4FD4                                  u7251 2B04  
                                u7411 27E4                                  u7331 263C  
                                u7171 6018                                  u5900 3040  
                                u5820 2D26                                  u6540 53DE  
                                u5580 3FE2                                  u5660 6124  
                                u5740 323E                                  u6460 0F44  
                                u6380 0A9A                                  u7180 47FA  
                                u6700 02E8                                  u6620 4D0A  
                                u7260 2B78                                  u7500 28E4  
                                u7420 280C                                  u7340 2684  
                                u5901 303C                                  u5821 2D22  
                                u6541 53DA                                  u6197 1E1E  
                                u5581 3FDE                                  u5661 6120  
                                u5741 323A                                  u6461 0F40  
                                u6381 0A96                                  u7181 47F6  
                                u6701 02E4                                  u6621 4D06  
                                u7261 2B74                                  u7501 28E0  
                                u7421 2808                                  u7341 2680  
                                u5830 2D54                                  u6550 53F8  
                                u5590 400C                                  u5750 325C  
                                u5670 3074                                  u6470 0F5E  
                                u6390 0BC4                                  u7190 481E  
                                u6710 0376                                  u6630 4D30  
                                u7270 2BA4                                  u7510 292C  
                                u7430 2822                                  u7350 2696  
                                u5831 2D50                                  u6551 53F4  
                                u5591 4008                                  u5751 3258  
                                u5671 306E                                  u6471 0F5A  
                                u6391 0BC0                                  u7191 481A  
                                u6711 0372                                  u6631 4D2C  
                                u7271 2BA0                                  u7511 2928  
                                u7431 281E                                  u7351 2692  
                                u5840 2D7C                                  u5760 3276  
                                u5680 3076                                  u6560 60AE  
                                u6480 5D32                                  u6800 07E6  
                                u6720 0402                                  u6640 4D7A  
                                u7280 2BC6                                  u7520 295C  
                                u7440 2840                                  u7360 26A6  
                                u7600 47A2                                  u5841 2D78  
                                u6297 2204                                  u5761 3272  
                                u6561 60AA                                  u6481 5D2E  
                                u6801 07E2                                  u6721 03FE  
                                u6641 4D76                                  u7281 2BC2  
                                u7521 2958                                  u7441 283C  
                                u7361 26A2                                  u7601 479E  
                                u5850 2E22                                  u5770 3290  
                                u5690 308C                                  u6490 5E7C  
                                u6570 1036                                  u6810 08EA  
                                u6730 047C                                  u6650 0102  
                                u7290 2C04                                  u7530 298A  
                                u7450 2860                                  u7370 26E6  
                                u7610 3A82                                  u5851 2E1E  
                                u5771 328C                                  u5691 3088  
                                u6491 5E78                                  u5915 42C0  
                                u6571 1032                                  u6811 08E6  
                                u6731 0478                                  u6651 00FE  
                                u7291 2C00                                  u7531 2986  
                                u7451 285C                                  u7371 26E2  
                                u7611 3A7E                                  u5860 2E3C  
                                u5780 329E                                  u6580 10DA  
                                u6900 195C                                  u6820 095A  
                                u6740 0578                                  u6660 0188  
                                u7460 2872                                  u7380 2726  
                                u7540 46D4                                  u7700 3C10  
                                u7620 3A90                                  u5861 2E38  
                                u5781 329A                                  u5925 4306  
                                u6581 10D6                                  u6901 1958  
                                u6821 0956                                  u6741 0574  
                                u6661 0184                                  u7461 286E  
                                u7381 2722                                  u7541 46D0  
                                u7701 3C0C                                  u7621 3A8C  
                                u5950 6376                                  u5870 2EDA  
                                u5790 32B0                                  u6590 1112  
                                u6830 571A                                  u6910 1980  
                                u6750 05B6                                  u6670 020E  
                                u7470 28A0                                  u7390 279C  
                                u7550 4708                                  u7630 3AEC  
                                u7710 35F0                                  u5951 6372  
                                u5871 2ED6                                  u5791 32AC  
                                u5935 5478                                  u6591 110E  
                                u6831 5716                                  u6911 197C  
                                u6751 05B2                                  u6671 020A  
                                u7471 289C                                  u7391 2798  
                                u7631 3AE8                                  u7711 35EC  
                                u5960 6360                                  u5880 2F38  
                                u6840 4DA0                                  u6920 19BC  
                                u6760 060C                                  u6680 024C  
                                u7480 28B6                                  u7560 4736  
                                u7640 3B42                                  u7720 361A  
                                u7800 59C8                                  u5961 635C  
                                u5881 2F34                                  u5945 548E  
                                u6841 4D9C                                  u6921 19B8  
                                u6761 0608                                  u6681 0248  
                                u7481 28B2                                  u7561 4732  
                                u7641 3B3E                                  u7721 3616  
                                u7801 59C4                                  u5890 2FD2  
                                u5970 51C4                                  u6850 4DE8  
                                u6930 19E0                                  u6770 0652  
                                u6690 02A2                                  u7490 28CA  
                                u7570 474A                                  u7650 3B8C  
                                u7730 36B2                                  u7810 59EC  
                                u5891 2FCE                                  u5971 51C0  
                                u6851 4DE4                                  u6931 19DC  
                                u6771 064E                                  u6691 029E  
                                u7491 28C6                                  u7571 4746  
                                u7555 46FE                                  u7651 3B88  
                                u7731 36AE                                  u7811 59E8  
                                u5980 51DE                                  u7820 48E2  
                                u6860 4E0E                                  u6940 1A1C  
                                u6780 06E0                                  u7900 4EDC  
                                u7580 4772                                  u7660 3BAA  
                                u7740 36DC                                  u5981 51DA  
                                u7821 48DE                                  u6861 4E0A  
                                u6941 1A18                                  u6781 06DC  
                                u7901 4ED8                                  u7581 476E  
                                u7661 3BA6                                  u7741 36D8  
                                _RBPU 007F8F                                  u5990 5204  
                                u7830 48F4                                  u6870 4E58  
                                u6950 1A40                                  u6790 076C  
                                u7590 4792                                  u7670 3BBA  
                                u7750 3738                                  u7910 5F00  
                                u5991 5200                                  u7831 48F0  
                                u6871 4E54                                  u6951 1A3C  
                                u6791 0768                                  u7591 478E  
                                u7671 3BB6                                  u7751 3734  
                                u7911 5EFC                                  u7840 4928  
                                u6880 5C3A                                  u6960 1A7C  
                                u7680 3BC8                                  u7760 55AC  
                                u7841 4924                                  u6881 5C36  
                                u6961 1A78                                  u7681 3BC4  
                                u7761 55A8                                  u7850 4952  
                                u6890 5C7C                                  u6970 1AA0  
                                u7690 3C02                                  u7770 5620  
                                u7851 494E                                  u6891 5C78  
                                u6971 1A9C                                  u7691 3BFE  
                                u7771 561C                                  u7780 5EA2  
                                u7860 496C                                  u6980 1ADC  
                                u7781 5E9E                                  u7861 4968  
                                u6981 1AD8                                  u7870 4986  
                                u6990 1B00                                  u7790 59A2  
                                u7871 4982                                  u6991 1AFC  
                                u7791 599E                                  u7927 54CA  
                                u7880 4E88                                  u7881 4E84  
                                u7937 333E                                  u7890 4E9E  
                                u7891 4E9A                                  u7947 5916  
                                u7957 595A                                  _WPUB 000F61  
                         displaySM@ev 00A7                           LCD_Bitmap@i 007A  
                                abs@a 0024                                  _dbuf 00E0  
                     ?_checkCollision 001B             __size_of_LCD_SliderCreate 00EE  
                                _main 63A6                                  _dtoa 3042  
                    _XF_scheduleTimer 5C10                                  _prec 0049  
                                _nout 00DB                                  pad@i 0029  
                                pad@p 0026                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf1 000FE7  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 002B                                  fsr2l 000FD9  
                                btemp 004E                      Menu_inGameDraw@g 0092  
                      touchScreenSM@g 00B0                                  prodh 000FF4  
                                prodl 000FF3      __end_of_arialNarrow_12ptFontInfo 7F86  
                                start 00B0                           RGB2LCD@blue 001C  
              __end_of_LCD_ButtonDraw 1462             __size_of_LCD_SliderUpdate 04D6  
                     ___fldiv@new_exp 0031                        _LCD_SliderDraw 45B0  
                  LCD_InSlider@slider 0012                       __end_of_XF_init 562C  
                        ___param_bank 000000                      _gameStateMachine 004D  
              LCD_ButtonCreate@height 0018                    XF_scheduleTimer@ev 0015  
                  XF_scheduleTimer@tm 0013                LCD_ButtonCreate@button 0028  
                               ??_abs 0026                                 ??_pad 0028  
                               ??_isr 000E                      __end_of_LCD_Fill 53FA  
                      ??_LCD_InButton 0018                      __end_of_LCD_Init 35CC  
                    __end_of_LCD_Read 435C                        ??_LCD_InSlider 0018  
                      ??_LCD_DrawRect 001D           LCD_SliderCreate@cursorWidth 0020  
                               l10001 278C                                 l10011 27E8  
                               l10003 279C                                 l10021 2828  
                               l10013 27EA                                 l10005 27B0  
                               l10031 2864                                 l10023 2832  
                               l10015 27FA                                 l10007 27BE  
                               l10111 47B2                                 l10103 4776  
                               l10041 28D6                                 l10033 2872  
                               l10025 2840                                 l10017 280C  
                               l10009 27CA                                 l10105 4782  
                               l10121 3AD6                                 l10201 36DC  
                               l10051 2942                                 l10043 28E4  
                               l10035 28A0                                 l10019 2822  
                               l10027 2852                                 l10107 4792  
                               l10131 3B14                                 l10123 3AEC  
                               l10115 3A72                                 l10211 3726  
                               l10203 36E4                                 l10061 2990  
                               l10053 295C                                 l10045 290E  
                               l10029 2860                                 l10109 47A2  
                               l10141 3B9C                                 l10133 3B46  
                               l10117 3A82                                 l10221 378C  
                               l10213 3728                                 l10205 370A  
                               l10301 59A6                                 l10063 2992  
                               l10055 2978                                 l10039 28CA  
                               l10047 2912                                 l10071 46BE  
                               l10151 3BF2                                 l10143 3BAA  
                               l10135 3B48                                 l10127 3B00  
                               l10119 3A90                                 l10223 37A0  
                               l10215 372A                                 l10207 371E  
                               l10303 59B6                                 l10161 5F3C  
                               l10321 48CC                                 l10057 297C  
                               l10049 292C                                 l10081 4714  
                               l10073 46D4                                 l10153 3C02  
                               l10145 3BC8                                 l10137 3B54  
                               l10129 3B08                                 l10225 37BE  
                               l10217 3738                                 l10209 3722  
                               l10305 59C8                                 l10163 5F48  
                               l10331 4904                                 l10323 48D0  
                               l10059 298A                                 l10083 4724  
                               l10155 3C10                                 l10147 3BCA  
                               l10139 3B90                                 l10219 3756  
                               l10307 59CC                                 l10315 59F0  
                               l10243 557C                                 l10171 62F4  
                               l10411 54D8                                 l10165 5F5A  
                               l10341 4952                                 l10333 4914  
                               l10325 48E2                                 l10093 474E  
                               l10085 4728                                 l10077 46E8  
                               l10157 3C12                                 l10149 3BCE  
                               l10229 380C                                 l10309 59D8  
                               l10261 5620                                 l10245 558C  
                               l10237 5574                                 l10173 62FA  
                               l10181 63BC                                 l10421 5522  
                               l10413 54DC                                 l10405 54B8  
                               l10167 5F6C                                 l10335 4928  
                               l10327 48F4                                 l10095 4758  
                               l10087 4736                                 l10079 4712  
                               l10191 361A                                 l10183 35CC  
                               l10255 55B4                                 l10247 5590  
                               l10175 630C                                 l10271 623A  
                               l10263 6218                                 l10431 5530  
                               l10423 5524                                 l10415 54E8  
                               l10407 54BA                                 l10281 5EA8  
                               l10273 5E88                                 l10169 5F7E  
                               l10353 4974                                 l10345 495A  
                               l10337 492C                                 l10329 48F8  
                               l10361 498A                                 l10097 4762  
                               l10193 3622                                 l10185 35D2  
                               l10257 5600                                 l10249 55AC  
                               l10177 6310                                 l10265 621E  
                               l10441 5542                                 l10433 5534  
                               l10425 5526                                 l10417 551E  
                               l10409 54BE                                 l10291 5EE2  
                               l10275 5E88                                 l10347 496C  
                               l10339 4940                                 l10371 4E76  
                               l10195 368C                                 l10187 35DC  
                               l10259 5604                                 l10179 63B6  
                               l10267 622A                                 l10451 554E  
                               l10443 5544                                 l10435 5536  
                               l10427 5528                                 l10419 5520  
                               l10285 5EAE                                 l10277 5E8E  
                               l10373 4E88                                 l10197 369E  
                               l10189 35F0                                 l10461 5EE6  
                               l10269 6236                                 l10453 5550  
                               l10445 5548                                 l10437 5538  
                               l10429 552C                                 l10287 5EBE  
                               l10279 5EA2                                 l10391 4EDC  
                               l10375 4E8C                                 l10367 4E62  
                               l10199 36B2                                 l10295 598E  
                               l10471 5F2A                                 l10463 5EF0  
                               l10455 5554                                 l10447 554A  
                               l10439 553A                                 l10289 5EDC  
                               l10393 4EE4                                 l10377 4E9E  
                               l10369 4E66                                 l10297 5992  
                               l10465 5F00                                 l10457 5558  
                               l10449 554C                                 l10473 63A6  
                               l10387 4EBA                                 l10379 4EA2  
                               l10299 59A2                                 l10467 5F06  
                               l10459 5564                                 l10389 4ECA  
                               l10469 5F18                                 l10671 4F0C  
                               l10399 4EF8                        ??_LCD_DrawText 002D  
                               l10673 2CD8                                 l10665 619C  
                               l10675 49A0                                 l10667 5A06  
                               l10677 48A0                                 l10669 3822  
                               l10679 0E9C                         ___fltol@sign1 0041  
                     __end_of___aodiv 3F60                                 ?_main 0001  
                               ?_dtoa 002D                       __end_of___aomod 40C4  
                     LCD_ButtonDraw@i 0099                       __end_of___fldiv 299E  
                     __end_of___awdiv 5276                                 STR_10 7FC0  
                               STR_11 7FDB                                 STR_12 7FA0  
                               STR_13 7F93                                 STR_14 7F86  
                               STR_15 7FEB                                 STR_16 7FF1  
                     __end_of___awmod 583C                                 _ANSB1 0079C9  
                               _ANSB2 0079CA                       __end_of___fltol 47C4  
                               _T0CON 000FD5                       ___awdiv@divisor 0014  
                               _LATB1 007C51                                 _LATC0 007C58  
                               _LATB2 007C52                                 _LATB3 007C53  
                               _LATC2 007C5A                                 _LATB4 007C54  
                               _LATC3 007C5B                                 _LATC4 007C5C  
                               _LATC5 007C5D                       __end_of___lwdiv 5CF8  
                     __end_of___lwmod 5DC0                                 i2l741 6184  
                               i2l750 45AE                                 i2l807 62D8  
                               i2l728 5E22                                 i2l754 63A4  
                               i2l758 638E                                 i2l792 0056  
                               i2l796 009C                       ___awdiv@counter 0016  
                               _PLLEN 007CDE                          vfpfcnvrt@fmt 0041  
                               _TMR0H 000FD7                                 _TMR0L 000FD6  
                               _PORTA 000F80                       ??_configMeasure 0012  
                               _TRISA 000F92                   LCD_Bitmap@bfOffBits 0060  
                        LCD_Fill@page 0018                                 _flags 004B  
                        displayInit@g 00A3                                 _fputc 50E8  
                               _theXF 00B5                                 _fputs 60C6  
              LCD_ButtonDraw@tempChar 008A                   __size_of_LCD_Bitmap 05F6  
                               pad@fp 0022                                 _width 0047  
                               _putch 63C4                                 dtoa@d 002F  
                               dtoa@i 0070                                 dtoa@n 0068  
                               dtoa@p 0062                                 dtoa@s 0066  
                               dtoa@w 0064                  __end_of_XF_pushEvent 5D5C  
                     __end_of_sleepSM 63C4                          Paddle_addX@p 0012  
                               tablat 000FF5            ??_gameControllerController 003A  
                     touchScreenSM@ev 00B4                      __end_ofi2___wmul 62DA  
                               plusw2 000FDB           ?_XF_decrementAndQueueTimers 0001  
                               ttemp5 004F                                 ttemp6 0052  
                               ttemp7 0056                                 status 000FD8  
                               wtemp8 004F                          Paddle_draw@p 0025  
                     __end_of_sprintf 5FE4                          RGB2LCD@color 001E  
                        RGB2LCD@green 001A                __end_of_LCD_SliderDraw 46BE  
                       ?_Menu_endGame 009C                          Paddle_init@p 0012  
            __size_of_touchScreenInit 000C               LCD_ButtonCreate@bgColor 001C  
                  __size_ofi2___awmod 00B0                   __end_of_Paddle_addX 5016  
                     ?_LCD_ButtonDraw 007C                     ?_gameControllerSM 003C  
                 __end_of_Paddle_draw 448E                         _touchScreenSM 598A  
                 __end_of_Paddle_init 56DC                    __size_of_Ball_draw 0156  
                        LCD_Read@posX 0012                          LCD_Read@posY 0014  
                  __size_of_Ball_init 0076                       __initialization 61BC  
                  ??_gameControllerSM 003E                          __end_of_main 63B6  
                        __end_of_dtoa 3324               LCD_ButtonCreate@fpPress 0022  
              touchScreenController@g 0090                touchScreenController@s 0098  
                    ?_sleepController 0001                      i2XF_pushEvent@ev 0008  
                              ??_main 0047                                ??_dtoa 0037  
                       __activetblptr 000002                             ??_RGB2LCD 0014  
                         _XF_popEvent 5E86                                _ADCON0 000FC2  
                              _ADCON2 000FC0                      LCD_ButtonDraw@x1 008D  
                    LCD_ButtonDraw@x2 008F                      LCD_ButtonDraw@y1 0091  
                    LCD_ButtonDraw@y2 0093                                ?_fputc 0012  
                              ?_fputs 001B                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                _CCPR2L 000F67  
                    ___awdiv@dividend 0012                                ?_putch 0001  
                              _INT1IE 007F83                                _INT1IF 007F80  
                  LCD_DrawRect@colorH 0021                    LCD_DrawRect@colorL 0022  
             _GameParameters_resetPos 61EE                                i2l1051 58EA  
                              i2l7331 637C                                i2l7333 638C  
                              i2l7341 5856                                i2l7327 6392  
                              i2l7351 588A                                i2l7343 585A  
                              i2l7335 583C                                i2l7329 63A2  
                              i2l7361 58C4                                i2l7353 5892  
                              i2l7345 5868                                i2l7337 5840  
                              i2l7355 58A0                                i2l7363 58CA  
                              i2l7347 5870                                i2l7339 584E  
                              i2l7365 58DA                                i2l7357 58B6  
                              i2l7349 5882                                i2l7543 614C  
                              i2l7367 58E2                                i2l7359 58BE  
                              i2l7551 5DC8                                i2l7545 6152  
                              i2l7561 5E06                                i2l7553 5DE6  
                              i2l7547 616A                                i2l7563 5E16  
                              i2l7555 5DFA                                i2l7571 62B4  
                              i2l7651 4496                                i2l7565 5E1A  
                              i2l7557 5E00                                i2l7549 5DC2  
                              i2l7573 62D0                                i2l7653 44C6  
                              i2l7661 458E                                i2l7645 448E  
                              i2l7567 5E20                                i2l7663 4592  
                              i2l7655 451E                                i2l7671 0044  
                              i2l7657 4558                                i2l7681 0080  
                              i2l7673 0048                                i2l7665 001A  
                              i2l7659 4566                                i2l7683 008E  
                              i2l7675 0064                                i2l7667 0028  
                              i2l7685 0092                                i2l7677 0068  
                              i2l7669 0036                                i2l7687 0096  
                              i2l7679 0072                                i2l7689 009A  
                              _OSCCON 000FD3                             ??_XF_init 0020  
                              _TMR0IE 007F95                                _TMR0IF 007F92  
                              _TMR2IF 007CF1                        ??_Menu_endGame 0042  
                              _TRISB1 007C99                                _TRISC0 007CA0  
                              _TRISB2 007C9A                                _TRISC1 007CA1  
                              _TRISB3 007C9B                                _TRISC2 007CA2  
                              _TRISB4 007C9C                                _TRISC3 007CA3  
                              _TRISC4 007CA4                                _TRISC5 007CA5  
                        ?_moovePaddle 001C                      __end_of___xxtofl 3C24  
                     ?_LCD_SliderDraw 0037                   i2XF_pushEvent@inISR 0007  
                LCD_DrawText@bg_color 002B                            _Score_draw 5016  
                          _Score_init 6268                        ?_touchScreenSM 00B0  
                     i2_LEAVECRITICAL 637A                 __size_of_Factory_exec 0056  
               __size_of_Factory_init 00BC                          vfprintf@cfmt 0080  
                 LCD_Bitmap@jumpColor 0078                   LCD_Bitmap@jumpCount 0065  
                 _Menu_parametersDraw 5AA0                  __size_of_configTouch 001A  
          __end_of_gameControllerInit 6322                             ??___aodiv 0022  
                           ??___aomod 0022                                ___wmul 628E  
                           ??___fldiv 0028                             ??___awdiv 0016  
                           ??___awmod 0016                         LCD_Fill@color 0012  
                           ??___fltol 003D                LCD_ButtonUpdate@button 0025  
                           ??___lwdiv 0024                             ??___lwmod 0016  
          gameControllerController@ev 0039                  LCD_DrawText@fontByte 0037  
        __size_of_GameParameters_init 03E4                                clear_0 61C2  
                              clear_1 61CE                                clear_2 61DA  
        __size_of_GameParameters_setX 0016          __size_of_GameParameters_setY 0016  
                    ___awdiv@quotient 0018             LCD_ButtonCreate@textOrBmp 001E  
               _touchScreenController 35CC                       ___awmod@divisor 0014  
                              isa$std 000001                       ___awmod@counter 0016  
                __size_of_displayInit 0018                                pad@buf 0024  
                              dtoa@fp 002D                                _strlen 6034  
                       LCD_DrawRect@i 0023                         LCD_DrawRect@j 001D  
                              fputc@c 0012                                fputs@c 001F  
                              fputs@i 0020                                fputs@s 001B  
        ?_GameParameters_setBackLight 0012                         LCD_DrawText@i 003E  
                   __end_ofi2___awmod 58EC                         LCD_DrawText@x 0040  
                       LCD_DrawText@y 003D                  LCD_DrawText@tempChar 003F  
                        __mediumconst 783A                                tblptrh 000FF7  
                           ??_sleepSM 0012                                tblptrl 000FF6  
                              tblptru 000FF8                     __end_of_Ball_draw 421A  
                   __end_of_Ball_init 5C10                  ?_Menu_parametersDraw 009C  
                              putch@c 0001                      __end_of_vfprintf 5E86  
                      i2___awmod@sign 0006                             ??_sprintf 0047  
            __end_of_LCD_ButtonCreate 4AC2                           _Paddle_addX 4F3C  
                        _Factory_exec 5EE6                          _Factory_init 54B8  
                         _Paddle_draw 435C                           _Paddle_init 562C  
                    XF_pushEvent@temp 001A                          ___xxtofl@arg 001C  
               LCD_SliderCreate@width 0016                          ___xxtofl@exp 001B  
                        ___xxtofl@val 0012                  __end_of_LCD_InButton 4D82  
               LCD_SliderCreate@steps 0022              __end_of_LCD_ButtonUpdate 3A70  
                          __accesstop 0060               __end_of__initialization 61E0  
                           ?_LCD_Fill 0012                      _LCD_SliderCreate 4BB6  
                           ?_LCD_Init 0001                             ?_LCD_Read 0012  
                __end_of_LCD_InSlider 4E60                  __end_of_LCD_DrawRect 3042  
                __end_of_LCD_DrawText 2220           __size_of_XF_unscheduleTimer 003C  
                     i2_ENTERCRITICAL 6390                         ___rparam_used 000001  
                          ___fltol@f1 0039                         LCD_Read@color 0018  
                    _LCD_SliderUpdate 1462                    LEAVECRITICAL@inISR 0012  
                           LCD_Init@i 0018                        __pcstackCOMRAM 0001  
                        ??_LCD_Bitmap 002D                     ??_touchScreenInit 0012  
         __end_of_backlightController 1DD6                         __end_of_fputc 51B2  
                       __end_of_fputs 610A                   gameControllerInit@g 003C  
          LCD_ButtonCreate@fpReleased 0024                         __end_of_putch 63C6  
                   LCD_Bitmap@biWidth 0076                     ?_Menu_welcomeDraw 009C  
                LCD_Bitmap@endOfImage 0064              __end_of_XF_scheduleTimer 5C84  
                           ?i2___wmul 0001                    ??_Menu_welcomeDraw 0042  
                   LCD_Bitmap@curXPos 006F   __size_of_XF_decrementAndQueueTimers 0122  
                   LCD_Bitmap@curYPos 0067                 __size_of_XF_pushEvent 0064  
               ??_Menu_parametersDraw 0045         ??_GameParameters_setBackLight 0016  
                        Ball_Update@b 0012             ??_GameParameters_resetPos 0014  
             _arialNarrow_12ptBitmaps 783B                      ??_checkCollision 001D  
                  __size_of_displaySM 0100                 __end_of_LEAVECRITICAL 6364  
                  LCD_DrawText@offset 0033                               ??_fputc 0016  
                             ??_fputs 001F                          ?_Ball_Update 0012  
                             ??_putch 0012      __end_of_gameControllerController 2D08  
           gameControllerController@g 0037               __end_ofi2_LEAVECRITICAL 6390  
                      XF_pushEvent@ev 0019                            __pbssBANK0 00B5  
                          __pbssBANK1 0100                    __end_of_LCD_Bitmap 0F74  
                          ??_LCD_Fill 0014                            ??_LCD_Init 0017  
                          ??_LCD_Read 0016                       ??_touchScreenSM 00B2  
            LCD_ButtonCreate@txtColor 001A                           ?_Score_draw 0090  
                         ?_Score_init 0012                    ENTERCRITICAL@inISR 0012  
            __size_of_Menu_inGameDraw 0056                           Score_draw@s 0090  
                         Score_init@s 0012                               ?___wmul 001A  
              ?_touchScreenController 0090                          _XF_pushEvent 5CF8  
                  __size_of_mooveBall 0028                    __size_of_sleepInit 0028  
                             ?_strlen 0012                  __end_of_Menu_endGame 578C  
                          ??i2___wmul 0005               __size_ofi2_XF_pushEvent 0064  
                             _RGB2LCD 53FA                               _INTEDG1 007F8D  
                GameParameters_init@s 002B                             ?___xxtofl 0012  
                GameParameters_setX@s 0012                  GameParameters_setY@s 0012  
                  __size_of_vfpfcnvrt 01B4                 __end_of_ENTERCRITICAL 637A  
             __end_ofi2_ENTERCRITICAL 63A6                      ??_LCD_ButtonDraw 007E  
                Menu_parametersDraw@g 009C   __end_of_arialNarrow_12ptDescriptors 7F7F  
         _arialNarrow_12ptDescriptors 7E62                               _XF_init 5574  
                 LCD_ButtonDraw@xText 0095                   LCD_ButtonDraw@yText 0097  
                 LCD_ButtonDraw@width 008B                               __Hparam 0000  
                __size_of_moovePaddle 00F4                               __Lparam 0000  
                             ___aodiv 3DD8                     __end_of_displaySM 49C8  
                             ___aomod 3F60                               ___fldiv 2604  
                             ___awdiv 51B2                               ___awmod 578C  
                             ___fltol 46BE                       __size_of___wmul 0026  
             LCD_ButtonUpdate@colorIn 002D                               ___lwdiv 5C84  
                             ___lwmod 5D5C                             ?_vfprintf 007A  
                      LCD_Bitmap@newY 0073                        LCD_Bitmap@posX 0029  
                      LCD_Bitmap@posY 002B                        LCD_Fill@colorH 0014  
                      LCD_Fill@colorL 0015                               __pcinit 61BC  
                      LCD_Fill@column 0016                               __ramtop 0600  
                             __ptext0 63A6                               __ptext1 54B8  
                             __ptext2 6218                               __ptext3 63B6  
                             __ptext4 6186                               __ptext5 630C  
                             __ptext6 62F4                               __ptext7 5574  
                             __ptext8 3324                               __ptext9 58EC  
                     __size_of_strlen 004E             __size_of_gameControllerSM 00DC  
                           _T2CONbits 000FBA                          __size_of_abs 0040  
                        __size_of_pad 00C2                          __size_of_isr 00A8  
                        ?_XF_popEvent 0001                            ??___xxtofl 0016  
                LCD_Bitmap@pixelCount 0075                   __size_of_Score_draw 00D2  
                    ___awmod@dividend 0012                   __size_of_Score_init 0026  
               LCD_DrawText@fontPixel 0038                               _sleepSM 63C2  
               __end_of_configMeasure 6034                 __size_of_LCD_InButton 00DE  
             XF_unscheduleTimer@inISR 0002                 __size_of_LCD_InSlider 00DE  
                   Menu_welcomeDraw@g 009C                 __size_of_LCD_DrawRect 033A  
                             _sprintf 5F92                 __size_of_LCD_DrawText 044A  
                    ??_LCD_SliderDraw 0039                  end_of_initialization 61E0  
                    ?i2_LEAVECRITICAL 0001                   _GameParameters_init 2220  
                 _GameParameters_setX 6338                   _GameParameters_setY 6322  
                   __end_of_mooveBall 6268                               fputc@fp 0014  
                       __Lmediumconst 783A                               fputs@fp 001D  
                      Paddle_addX@add 0016                   i2___wmul@multiplier 0001  
                   __end_of_sleepInit 6240                   displayController@ev 00A0  
                   __end_of_vfpfcnvrt 3DD8                            _sleepState 00DF  
                             postdec1 000FE5                               postdec2 000FDD  
                   _LCD_Lowlevel_Init 58EC                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                          ??_vfprintf 0047     __size_of_gameControllerController 036A  
                ?_GameParameters_init 002B             ?_gameControllerController 0037  
                   ??_Menu_inGameDraw 0047                  ?_GameParameters_setX 0012  
                  ?_LCD_Lowlevel_Init 0001                  ?_GameParameters_setY 0012  
                             strlen@a 0014                               strlen@s 0012  
                        _LCD_InButton 4CA4                             _PORTBbits 000F81  
            __end_of_LCD_SliderCreate 4CA4                LCD_SliderCreate@height 0018  
                        _LCD_InSlider 4D82                          _displayState 00DD  
                        _LCD_DrawRect 2D08                          _LCD_DrawText 1DD6  
                   XF_pushEvent@inISR 0018              __end_of_LCD_SliderUpdate 1938  
                    XF_popEvent@inISR 0019                LCD_SliderCreate@slider 0026  
                 ??_LCD_Lowlevel_Init 0012                         ___xxtofl@sign 001A  
                  _gameControllerInit 630C              __size_of_sleepController 0036  
                      Factory_exec@ev 01EF                           ___fldiv@grs 0033  
                         ___fldiv@rem 002C                             i2___awmod 583C  
                    ?i2_ENTERCRITICAL 0001                     ?_LCD_ButtonCreate 0012  
                        ?_Paddle_addX 0012                          ?_Paddle_draw 0025  
                           _Ball_draw 40C4                          ?_Paddle_init 0012  
                           _Ball_init 5B9A                   ?_gameControllerInit 003C  
                __size_of_Ball_Update 0082                    ??_LCD_ButtonCreate 002B  
                   ?_LCD_ButtonUpdate 0025                       _touchScreenInit 63B6  
                   _displayController 47C4                           _CCP2CONbits 000F66  
                          displaySM@g 00A3                        LCD_Read@temp16 001A  
     __end_of_arialNarrow_12ptBitmaps 7E62                RGB2LCD@colorTableEntry 0012  
                       ??_configTouch 0012                    ??_LCD_ButtonUpdate 0027  
                   __size_of_LCD_Fill 00C2                     __size_of_LCD_Init 02A8  
                   __size_of_LCD_Read 0142                    ?_displayController 009E  
                          RGB2LCD@red 0018             __end_of_LCD_Lowlevel_Init 598A  
                  LCD_Lowlevel_Init@i 0013                 LCD_ButtonCreate@fpOut 0026  
                   XF_scheduleTimer@i 0017                 LCD_ButtonCreate@index 002A  
               LCD_ButtonCreate@width 0016                         ??_displayInit 0047  
               __size_of_Menu_endGame 00B0                 ??_GameParameters_init 002D  
               ??_GameParameters_setX 0016                 ??_GameParameters_setY 0016  
                 ??_displayController 00A1                           vfpfcnvrt@ap 0043  
                         vfpfcnvrt@fp 003F                           vfpfcnvrt@ll 0072  
                      __end_of___wmul 62B4                  ??_gameControllerInit 003E  
                  LCD_Bitmap@biHeight 006B                  XF_unscheduleTimer@id 0003  
                      i2_XF_pushEvent 5DC0                      i2___wmul@product 0005  
                   ?_XF_scheduleTimer 0013                        __end_of_strlen 6082  
                       XF_popEvent@ev 0018                   start_initialization 61BC  
                   __size_ofi2___wmul 0026                    ??_XF_scheduleTimer 0017  
                         __end_of_abs 614A                    LCD_InButton@button 0012  
                         __end_of_pad 5338                           __end_of_isr 00B0  
               XF_scheduleTimer@inISR 0016                            ?i2___awmod 0001  
                          ?_Ball_draw 0025                            ?_Ball_init 0012  
           __end_of_displayController 48C8             __size_of_Menu_welcomeDraw 0078  
          __end_of_XF_unscheduleTimer 6186                          ??_Score_draw 0047  
                   LCD_DrawRect@color 001B                          _Menu_endGame 56DC  
                        ??_Score_init 0014                     LCD_DrawRect@posX1 0012  
                   LCD_DrawRect@posX2 0016                     LCD_DrawRect@posY1 0014  
                   LCD_DrawRect@posY2 0018                    i2XF_pushEvent@temp 0009  
             ??_touchScreenController 0092                           vfprintf@fmt 007C  
                            ??___wmul 001E                   LCD_DrawText@yOffset 0035  
                 __end_of_configTouch 62F4                __end_ofi2_XF_pushEvent 5E24  
                 LCD_DrawText@posXEnd 003B                   LCD_DrawText@posYEnd 0039  
            _arialNarrow_12ptFontInfo 7F7F           __end_of_Menu_parametersDraw 5B22  
                            ??_strlen 0014                  LCD_SliderCreate@posX 0012  
                LCD_SliderCreate@posY 0014                      _gameControllerSM 4E60  
                 __end_of_displayInit 630C                             ___fldiv@a 0024  
                           ___fldiv@b 0020                              ?_RGB2LCD 0012  
        __size_of_backlightController 049E                           __pbssCOMRAM 0047  
              LCD_SliderUpdate@slider 0027                         Menu_endGame@g 009C  
         XF_decrementAndQueueTimers@i 000C                         __pcstackBANK0 0060  
                       __pcstackBANK1 01EF                    __end_of_Score_draw 50E8  
                LCD_SliderDraw@slider 0037                    __end_of_Score_init 628E  
                    ___aodiv@dividend 0012                    gameControllerSM@ev 0040  
             __end_of_touchScreenInit 63C2                  __size_of_XF_popEvent 0060  
                   __size_of___xxtofl 01B4                      LCD_InButton@posX 0014  
                    LCD_InButton@posY 0016                      LCD_Bitmap@bmpPtr 0027  
                   LCD_DrawText@align 0024                              ?_XF_init 0001  
                   LCD_DrawText@color 0029                     ??_sleepController 0012  
                    LCD_Bitmap@strPtr 0071          ??_XF_decrementAndQueueTimers 000A  
                   LCD_DrawText@width 0041                 __end_of_touchScreenSM 5A1E  
             LCD_Bitmap@colorTablePtr 0069                  i2LEAVECRITICAL@inISR 0001  
                    LCD_SliderDraw@x1 003D                      LCD_SliderDraw@x2 003F  
                    LCD_SliderDraw@y1 0041                      LCD_SliderDraw@y2 0043  
          __size_of_LCD_Lowlevel_Init 009E                      ___lwdiv@dividend 0020  
                           _dtoa$4923 0060                             __pintcode 0008  
                       __pmediumconst 783A                              ?___aodiv 0012  
                            ?___aomod 0012                              ?___fldiv 0020  
                            ?___awdiv 0012                      ___aodiv@quotient 0024  
                            ?___awmod 0012                              ?___fltol 0039  
                            ?___lwdiv 0020                              ?___lwmod 0012  
              __size_of_LEAVECRITICAL 0016                       ?i2_XF_pushEvent 0007  
                           _displaySM 48C8                     __size_of_vfprintf 0062  
 __end_of_GameParameters_setBackLight 60C6           _GameParameters_setBackLight 6082  
            ?_GameParameters_resetPos 0012                            mooveBall@g 0025  
                            ?_sleepSM 0001                      ___lwdiv@quotient 0025  
         touchScreenController@valueX 00AE           touchScreenController@valueY 00AC  
                         ??i2___awmod 0005                              ?_sprintf 0082  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                      __size_of_putch 0002                           ??_Ball_draw 0027  
                         ??_Ball_init 0014            __size_of_displayController 0104  
                          sleepInit@g 00A5                              _LCD_Fill 5338  
                            _LCD_Init 3324                              _LCD_Read 421A  
                       ??_moovePaddle 001E                        ___wmul@product 001E  
                __size_of_Paddle_addX 00DA                  __size_of_Paddle_draw 0132  
                __size_of_Paddle_init 00B0                       _Menu_inGameDraw 5F3C  
                i2ENTERCRITICAL@inISR 0001                    LCD_SliderUpdate@x1 0035  
                  LCD_SliderUpdate@x2 002F                    LCD_SliderUpdate@y1 0031  
                  LCD_SliderUpdate@y2 0033                    displayController@g 009E  
             __size_of_checkCollision 08CA                             _mooveBall 6240  
                         _configTouch 62DA                              i2u510_40 5868  
                            i2u510_41 5864                              i2u511_40 5882  
                            i2u511_41 587E                              i2u512_40 58A0  
                            i2u512_41 589C                              i2u513_40 58B6  
                            i2u513_41 58B2                              i2u514_40 58DA  
                            i2u530_40 5DFA                              i2u514_41 58D6  
                            i2u530_41 5DF6                              i2u507_40 63A2  
                            i2u507_41 639E                              i2u508_40 638C  
                            i2u532_40 44C6                              i2u540_40 0080  
                            i2u508_41 6388                              i2u532_41 44C2  
                            i2u540_41 007C                              i2u509_40 584E  
                            i2u533_40 451E                              i2u541_40 008E  
                            i2u509_41 584A                              i2u533_41 451A  
                            i2u541_41 008A                              XF_init@i 0020  
                            i2u534_40 4558                              i2u534_41 4554  
                            i2u535_40 45AE                              i2u535_41 45AA  
                            i2u536_40 0028                              i2u536_41 0024  
                           _sleepInit 6218                              i2u537_40 0036  
                            i2u537_41 0032                              i2u538_40 0044  
                            i2u538_41 0040                              i2u539_40 0064  
                            i2u539_41 0060                __size_of_ENTERCRITICAL 0016  
                         _displayInit 62F4                             _vfpfcnvrt 3C24  
                          ?_displaySM 00A3                     ___wmul@multiplier 001A  
                   ?_LCD_SliderCreate 0012                              i2___wmul 62B4  
    GameParameters_setBackLight@value 0014                    LCD_ButtonUpdate@x1 0033  
                  LCD_ButtonUpdate@x2 002F                    LCD_ButtonUpdate@y1 0031  
                  LCD_ButtonUpdate@y2 0035                    ??_LCD_SliderCreate 0028  
                    __size_of_RGB2LCD 00BE                     ?_LCD_SliderUpdate 0027  
                    LCD_InSlider@posX 0014                      LCD_InSlider@posY 0016  
                LCD_ButtonCreate@font 0020                  LCD_ButtonCreate@posX 0012  
                LCD_ButtonCreate@posY 0014                  LCD_ButtonDraw@bmpPtr 009A  
                    ?_touchScreenInit 0001                    ??_LCD_SliderUpdate 0029  
                LCD_ButtonDraw@button 007C                         _LEAVECRITICAL 634E  
                       ?_Factory_exec 0001                         ?_Factory_init 0001  
                  i2___awmod@dividend 0001                      _Menu_welcomeDraw 5B22  
                     checkCollision@g 001B                      __size_of_XF_init 00B8  
                    LCD_DrawRect@fill 001A                            ?_mooveBall 0025  
                            __Hrparam 0000                      LCD_DrawRect@temp 001F  
                          ?_sleepInit 00A5              __size_ofi2_LEAVECRITICAL 0016  
                          vfprintf@ap 007E                              __Lrparam 0000  
                          vfprintf@fp 007A                   __end_of_moovePaddle 4BB6  
             __size_of_LCD_ButtonDraw 04EE                __size_of_configMeasure 0050  
           __size_of_LCD_ButtonCreate 00FA                      __size_of___aodiv 0188  
     __end_of_GameParameters_resetPos 6218                      __size_of___aomod 0164  
                    __size_of___fldiv 039A                      __size_of___awdiv 00C4  
                    __size_of___awmod 00B0                      __size_of___fltol 0106  
               i2___wmul@multiplicand 0003                            ?_vfpfcnvrt 003F  
                    __size_of___lwdiv 0074                      __size_of___lwmod 0064  
           __size_of_LCD_ButtonUpdate 0236                     gameControllerSM@g 003C  
                     ___aodiv@divisor 001A                      Paddle_addX@value 0014  
            LCD_ButtonUpdate@colorOut 002B                       ___aodiv@counter 0022  
                        moovePaddle@g 001C              GameParameters_setX@value 0014  
                     LCD_Bitmap@color 006D              GameParameters_setY@value 0014  
                    LCD_DrawText@font 0022                            sprintf@fmt 0084  
                    LCD_DrawText@posX 0025                      LCD_DrawText@posY 0027  
                            ___xxtofl 3A70                            Ball_draw@b 0025  
                     ___lwdiv@divisor 0022                            Ball_init@b 0012  
                     ___lwdiv@counter 0024                              __ptext10 5EE6  
                            __ptext11 598A                              __ptext20 63C2  
                            __ptext12 35CC                              __ptext21 4E60  
                            __ptext13 62DA                              __ptext30 5A1E  
                            __ptext22 299E                              __ptext14 5FE4  
                            __ptext31 1938                              __ptext23 4AC2  
                            __ptext15 3A70                              __ptext40 5B9A  
                            __ptext32 6082                              __ptext24 4F3C  
                            __ptext16 46BE                              __ptext41 48C8  
                            __ptext33 5C10                              __ptext25 4CA4  
                            __ptext17 2604                              __ptext50 421A  
                            __ptext42 47C4                              __ptext34 4D82  
                            __ptext26 61EE                              __ptext18 6322  
                            __ptext51 097E                              __ptext43 5B22  
                            __ptext35 2220                              __ptext27 6240  
                            __ptext19 6338                              __ptext60 3042  
                            __ptext52 5D5C                              __ptext44 5AA0  
                            __ptext36 6268                              __ptext28 00B4  
                            __ptext61 5276                              __ptext53 5C84  
                            __ptext45 45B0                              __ptext37 562C  
                            __ptext29 5CF8                              __ptext70 628E  
                            __ptext62 60C6                              __ptext54 53FA  
                            __ptext46 1462                              __ptext38 4BB6  
                            __ptext71 51B2                              __ptext63 50E8  
                            __ptext55 5F3C                              __ptext47 56DC  
                            __ptext39 49C8                              __ptext72 435C  
                            __ptext64 63C4                              __ptext56 5016  
                            __ptext48 0F74                              __ptext81 448E  
                            __ptext73 5338                              __ptext65 610A  
                            __ptext57 5F92                              __ptext49 383A  
                            __ptext82 62B4                              __ptext74 40C4  
                            __ptext66 3F60                              __ptext58 5E24  
                            __ptext83 5DC0                              __ptext75 2D08  
                            __ptext67 3DD8                              __ptext59 3C24  
                            __ptext84 583C                              __ptext76 5E86  
                            __ptext68 1DD6                              __ptext85 614A  
                            __ptext77 578C                              __ptext69 6034  
                            __ptext86 637A                              __ptext78 634E  
                            __ptext87 6390                              __ptext79 6364  
                    __size_of_sleepSM 0002                        ?_LEAVECRITICAL 0001  
                       _ENTERCRITICAL 6364                         ??_Ball_Update 0014  
                      ??_Factory_exec 0047                        ??_Factory_init 00A7  
             __end_of_Menu_inGameDraw 5F92              GameParameters_resetPos@s 0012  
                    __size_of_sprintf 0052    __end_of_XF_decrementAndQueueTimers 45B0  
          _XF_decrementAndQueueTimers 448E                         __size_of_main 0010  
                           sleepSM@ev 0001                         __size_of_dtoa 02E2  
           __size_of_XF_scheduleTimer 0074              __end_of_gameControllerSM 4F3C  
                 _backlightController 1938           __end_of_GameParameters_init 2604  
         __end_of_GameParameters_setX 634E           __end_of_GameParameters_setY 6338  
            __size_ofi2_ENTERCRITICAL 0016               __size_of_LCD_SliderDraw 010E  
        GameParameters_setBackLight@s 0012              _gameControllerController 299E  
                            isa$xinst 000000                            _LCD_Bitmap 097E  
      __size_of_touchScreenController 026E                    _XF_unscheduleTimer 614A  
       __end_of_touchScreenController 383A                              int$flags 004E  
                            _vfprintf 5E24                         ?_XF_pushEvent 0018  
         __size_of_gameControllerInit 0016                           ??_displaySM 00A5  
                    ___aomod@dividend 0012                   ?_XF_unscheduleTimer 0002  
                   i2___awmod@divisor 0003                     i2___awmod@counter 0005  
                ?_backlightController 0018                       _sleepController 6186  
                      ?_ENTERCRITICAL 0001                         _configMeasure 5FE4  
                            intlevel2 0000                             sprintf@ap 0088  
                     LCD_DrawText@msg 0020                      ___lwmod@dividend 0012  
                ??_XF_unscheduleTimer 0003                           _moovePaddle 4AC2  
                 __end_of_Ball_Update 5AA0                        _checkCollision 00B4  
                         ??_mooveBall 0027                           ??_sleepInit 0047  
                    ??i2_XF_pushEvent 0008                        ??_XF_pushEvent 0019  
                     ___aomod@divisor 001A                           ??_vfpfcnvrt 0045  
                     ___aomod@counter 0022                     ??i2_LEAVECRITICAL 0001  
                            sprintf@f 008A                              sprintf@s 0082  
               ??_backlightController 001A                         ??_XF_popEvent 0018  
                     ___lwmod@divisor 0014               LCD_SliderCreate@bgColor 001C  
                     ___lwmod@counter 0016                       ??_LEAVECRITICAL 0012  
                      ?_configMeasure 0001           LCD_SliderCreate@borderColor 001E  
        __size_of_Menu_parametersDraw 0082              LCD_SliderCreate@sldColor 001A  
             LCD_SliderCreate@fpPress 0024                      ?_Menu_inGameDraw 0092  
                        ___aodiv@sign 0023                       Paddle_init@team 0014  
              __end_of_checkCollision 097E      __size_of_GameParameters_resetPos 002A  
__size_of_GameParameters_setBackLight 0044                          ___aomod@sign 0023  
                        ?_configTouch 0001  
