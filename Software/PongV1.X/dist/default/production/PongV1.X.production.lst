

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Sep 03 12:59:35 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	text80,global,reloc=2,class=CODE,delta=1
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	text83,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   103                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   104  0000                     
   105                           ; Version 2.32
   106                           ; Generated 02/02/2021 GMT
   107                           ; 
   108                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution. Publication is not required when
   122                           ;        this file is used in an embedded application.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC18LF25K22 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140  0000                     
   141                           	psect	mediumconst
   142  00785C                     __pmediumconst:
   143                           	callstack 0
   144  00785C  00                 	db	0
   145  00785D                     _arialNarrow_12ptBitmaps:
   146                           	callstack 0
   147  00785D  00                 	db	0
   148  00785E  00                 	db	0
   149  00785F  00                 	db	0
   150  007860  00                 	db	0
   151  007861  00                 	db	0
   152  007862  00                 	db	0
   153  007863  00                 	db	0
   154  007864  00                 	db	0
   155  007865  00                 	db	0
   156  007866  00                 	db	0
   157  007867  00                 	db	0
   158  007868  00                 	db	0
   159  007869  00                 	db	0
   160  00786A  00                 	db	0
   161  00786B  00                 	db	0
   162  00786C  00                 	db	0
   163  00786D  C0                 	db	192
   164  00786E  C0                 	db	192
   165  00786F  C0                 	db	192
   166  007870  C0                 	db	192
   167  007871  C0                 	db	192
   168  007872  C0                 	db	192
   169  007873  C0                 	db	192
   170  007874  C0                 	db	192
   171  007875  00                 	db	0
   172  007876  C0                 	db	192
   173  007877  C0                 	db	192
   174  007878  00                 	db	0
   175  007879  00                 	db	0
   176  00787A  00                 	db	0
   177  00787B  00                 	db	0
   178  00787C  D8                 	db	216
   179  00787D  D8                 	db	216
   180  00787E  D8                 	db	216
   181  00787F  D8                 	db	216
   182  007880  00                 	db	0
   183  007881  00                 	db	0
   184  007882  00                 	db	0
   185  007883  00                 	db	0
   186  007884  00                 	db	0
   187  007885  00                 	db	0
   188  007886  00                 	db	0
   189  007887  00                 	db	0
   190  007888  00                 	db	0
   191  007889  00                 	db	0
   192  00788A  00                 	db	0
   193  00788B  12                 	db	18
   194  00788C  12                 	db	18
   195  00788D  24                 	db	36
   196  00788E  FE                 	db	254
   197  00788F  FE                 	db	254
   198  007890  48                 	db	72
   199  007891  FE                 	db	254
   200  007892  FE                 	db	254
   201  007893  48                 	db	72
   202  007894  90                 	db	144
   203  007895  90                 	db	144
   204  007896  00                 	db	0
   205  007897  00                 	db	0
   206  007898  00                 	db	0
   207  007899  10                 	db	16
   208  00789A  7C                 	db	124
   209  00789B  FC                 	db	252
   210  00789C  D6                 	db	214
   211  00789D  D0                 	db	208
   212  00789E  F0                 	db	240
   213  00789F  7C                 	db	124
   214  0078A0  1E                 	db	30
   215  0078A1  16                 	db	22
   216  0078A2  D6                 	db	214
   217  0078A3  7E                 	db	126
   218  0078A4  7C                 	db	124
   219  0078A5  10                 	db	16
   220  0078A6  00                 	db	0
   221  0078A7  00                 	db	0
   222  0078A8  00                 	db	0
   223  0078A9  00                 	db	0
   224  0078AA  61                 	db	97
   225  0078AB  00                 	db	0
   226  0078AC  91                 	db	145
   227  0078AD  00                 	db	0
   228  0078AE  92                 	db	146
   229  0078AF  00                 	db	0
   230  0078B0  92                 	db	146
   231  0078B1  00                 	db	0
   232  0078B2  94                 	db	148
   233  0078B3  00                 	db	0
   234  0078B4  65                 	db	101
   235  0078B5  80                 	db	128
   236  0078B6  06                 	db	6
   237  0078B7  40                 	db	64
   238  0078B8  0A                 	db	10
   239  0078B9  40                 	db	64
   240  0078BA  0A                 	db	10
   241  0078BB  40                 	db	64
   242  0078BC  12                 	db	18
   243  0078BD  40                 	db	64
   244  0078BE  11                 	db	17
   245  0078BF  80                 	db	128
   246  0078C0  00                 	db	0
   247  0078C1  00                 	db	0
   248  0078C2  00                 	db	0
   249  0078C3  00                 	db	0
   250  0078C4  00                 	db	0
   251  0078C5  00                 	db	0
   252  0078C6  00                 	db	0
   253  0078C7  38                 	db	56
   254  0078C8  7C                 	db	124
   255  0078C9  6C                 	db	108
   256  0078CA  7C                 	db	124
   257  0078CB  30                 	db	48
   258  0078CC  78                 	db	120
   259  0078CD  DA                 	db	218
   260  0078CE  CE                 	db	206
   261  0078CF  CE                 	db	206
   262  0078D0  FF                 	db	255
   263  0078D1  7A                 	db	122
   264  0078D2  00                 	db	0
   265  0078D3  00                 	db	0
   266  0078D4  00                 	db	0
   267  0078D5  00                 	db	0
   268  0078D6  C0                 	db	192
   269  0078D7  C0                 	db	192
   270  0078D8  C0                 	db	192
   271  0078D9  C0                 	db	192
   272  0078DA  00                 	db	0
   273  0078DB  00                 	db	0
   274  0078DC  00                 	db	0
   275  0078DD  00                 	db	0
   276  0078DE  00                 	db	0
   277  0078DF  00                 	db	0
   278  0078E0  00                 	db	0
   279  0078E1  00                 	db	0
   280  0078E2  00                 	db	0
   281  0078E3  00                 	db	0
   282  0078E4  00                 	db	0
   283  0078E5  10                 	db	16
   284  0078E6  20                 	db	32
   285  0078E7  60                 	db	96
   286  0078E8  60                 	db	96
   287  0078E9  C0                 	db	192
   288  0078EA  C0                 	db	192
   289  0078EB  C0                 	db	192
   290  0078EC  C0                 	db	192
   291  0078ED  C0                 	db	192
   292  0078EE  C0                 	db	192
   293  0078EF  60                 	db	96
   294  0078F0  60                 	db	96
   295  0078F1  20                 	db	32
   296  0078F2  10                 	db	16
   297  0078F3  00                 	db	0
   298  0078F4  80                 	db	128
   299  0078F5  40                 	db	64
   300  0078F6  60                 	db	96
   301  0078F7  20                 	db	32
   302  0078F8  30                 	db	48
   303  0078F9  30                 	db	48
   304  0078FA  30                 	db	48
   305  0078FB  30                 	db	48
   306  0078FC  30                 	db	48
   307  0078FD  30                 	db	48
   308  0078FE  60                 	db	96
   309  0078FF  60                 	db	96
   310  007900  40                 	db	64
   311  007901  80                 	db	128
   312  007902  00                 	db	0
   313  007903  20                 	db	32
   314  007904  A8                 	db	168
   315  007905  F8                 	db	248
   316  007906  20                 	db	32
   317  007907  50                 	db	80
   318  007908  50                 	db	80
   319  007909  00                 	db	0
   320  00790A  00                 	db	0
   321  00790B  00                 	db	0
   322  00790C  00                 	db	0
   323  00790D  00                 	db	0
   324  00790E  00                 	db	0
   325  00790F  00                 	db	0
   326  007910  00                 	db	0
   327  007911  00                 	db	0
   328  007912  00                 	db	0
   329  007913  00                 	db	0
   330  007914  00                 	db	0
   331  007915  30                 	db	48
   332  007916  30                 	db	48
   333  007917  30                 	db	48
   334  007918  FC                 	db	252
   335  007919  FC                 	db	252
   336  00791A  30                 	db	48
   337  00791B  30                 	db	48
   338  00791C  30                 	db	48
   339  00791D  00                 	db	0
   340  00791E  00                 	db	0
   341  00791F  00                 	db	0
   342  007920  00                 	db	0
   343  007921  00                 	db	0
   344  007922  00                 	db	0
   345  007923  00                 	db	0
   346  007924  00                 	db	0
   347  007925  00                 	db	0
   348  007926  00                 	db	0
   349  007927  00                 	db	0
   350  007928  00                 	db	0
   351  007929  00                 	db	0
   352  00792A  C0                 	db	192
   353  00792B  C0                 	db	192
   354  00792C  40                 	db	64
   355  00792D  40                 	db	64
   356  00792E  80                 	db	128
   357  00792F  00                 	db	0
   358  007930  00                 	db	0
   359  007931  00                 	db	0
   360  007932  00                 	db	0
   361  007933  00                 	db	0
   362  007934  00                 	db	0
   363  007935  00                 	db	0
   364  007936  F0                 	db	240
   365  007937  F0                 	db	240
   366  007938  00                 	db	0
   367  007939  00                 	db	0
   368  00793A  00                 	db	0
   369  00793B  00                 	db	0
   370  00793C  00                 	db	0
   371  00793D  00                 	db	0
   372  00793E  00                 	db	0
   373  00793F  00                 	db	0
   374  007940  00                 	db	0
   375  007941  00                 	db	0
   376  007942  00                 	db	0
   377  007943  00                 	db	0
   378  007944  00                 	db	0
   379  007945  00                 	db	0
   380  007946  00                 	db	0
   381  007947  00                 	db	0
   382  007948  C0                 	db	192
   383  007949  C0                 	db	192
   384  00794A  00                 	db	0
   385  00794B  00                 	db	0
   386  00794C  00                 	db	0
   387  00794D  00                 	db	0
   388  00794E  30                 	db	48
   389  00794F  30                 	db	48
   390  007950  30                 	db	48
   391  007951  60                 	db	96
   392  007952  60                 	db	96
   393  007953  60                 	db	96
   394  007954  60                 	db	96
   395  007955  60                 	db	96
   396  007956  C0                 	db	192
   397  007957  C0                 	db	192
   398  007958  C0                 	db	192
   399  007959  00                 	db	0
   400  00795A  00                 	db	0
   401  00795B  00                 	db	0
   402  00795C  00                 	db	0
   403  00795D  78                 	db	120
   404  00795E  78                 	db	120
   405  00795F  CC                 	db	204
   406  007960  CC                 	db	204
   407  007961  CC                 	db	204
   408  007962  CC                 	db	204
   409  007963  CC                 	db	204
   410  007964  CC                 	db	204
   411  007965  CC                 	db	204
   412  007966  78                 	db	120
   413  007967  78                 	db	120
   414  007968  00                 	db	0
   415  007969  00                 	db	0
   416  00796A  00                 	db	0
   417  00796B  00                 	db	0
   418  00796C  30                 	db	48
   419  00796D  30                 	db	48
   420  00796E  70                 	db	112
   421  00796F  F0                 	db	240
   422  007970  B0                 	db	176
   423  007971  30                 	db	48
   424  007972  30                 	db	48
   425  007973  30                 	db	48
   426  007974  30                 	db	48
   427  007975  30                 	db	48
   428  007976  30                 	db	48
   429  007977  00                 	db	0
   430  007978  00                 	db	0
   431  007979  00                 	db	0
   432  00797A  00                 	db	0
   433  00797B  38                 	db	56
   434  00797C  7C                 	db	124
   435  00797D  CC                 	db	204
   436  00797E  CC                 	db	204
   437  00797F  0C                 	db	12
   438  007980  18                 	db	24
   439  007981  38                 	db	56
   440  007982  70                 	db	112
   441  007983  60                 	db	96
   442  007984  FC                 	db	252
   443  007985  FC                 	db	252
   444  007986  00                 	db	0
   445  007987  00                 	db	0
   446  007988  00                 	db	0
   447  007989  00                 	db	0
   448  00798A  78                 	db	120
   449  00798B  FC                 	db	252
   450  00798C  CC                 	db	204
   451  00798D  0C                 	db	12
   452  00798E  38                 	db	56
   453  00798F  38                 	db	56
   454  007990  0C                 	db	12
   455  007991  0C                 	db	12
   456  007992  CC                 	db	204
   457  007993  F8                 	db	248
   458  007994  78                 	db	120
   459  007995  00                 	db	0
   460  007996  00                 	db	0
   461  007997  00                 	db	0
   462  007998  00                 	db	0
   463  007999  0C                 	db	12
   464  00799A  1C                 	db	28
   465  00799B  1C                 	db	28
   466  00799C  3C                 	db	60
   467  00799D  2C                 	db	44
   468  00799E  6C                 	db	108
   469  00799F  CC                 	db	204
   470  0079A0  FE                 	db	254
   471  0079A1  FE                 	db	254
   472  0079A2  0C                 	db	12
   473  0079A3  0C                 	db	12
   474  0079A4  00                 	db	0
   475  0079A5  00                 	db	0
   476  0079A6  00                 	db	0
   477  0079A7  00                 	db	0
   478  0079A8  7C                 	db	124
   479  0079A9  7C                 	db	124
   480  0079AA  60                 	db	96
   481  0079AB  D8                 	db	216
   482  0079AC  FC                 	db	252
   483  0079AD  CC                 	db	204
   484  0079AE  0C                 	db	12
   485  0079AF  CC                 	db	204
   486  0079B0  CC                 	db	204
   487  0079B1  78                 	db	120
   488  0079B2  78                 	db	120
   489  0079B3  00                 	db	0
   490  0079B4  00                 	db	0
   491  0079B5  00                 	db	0
   492  0079B6  00                 	db	0
   493  0079B7  70                 	db	112
   494  0079B8  78                 	db	120
   495  0079B9  D8                 	db	216
   496  0079BA  C0                 	db	192
   497  0079BB  F0                 	db	240
   498  0079BC  F8                 	db	248
   499  0079BD  D8                 	db	216
   500  0079BE  D8                 	db	216
   501  0079BF  D8                 	db	216
   502  0079C0  78                 	db	120
   503  0079C1  70                 	db	112
   504  0079C2  00                 	db	0
   505  0079C3  00                 	db	0
   506  0079C4  00                 	db	0
   507  0079C5  00                 	db	0
   508  0079C6  F8                 	db	248
   509  0079C7  F8                 	db	248
   510  0079C8  18                 	db	24
   511  0079C9  10                 	db	16
   512  0079CA  30                 	db	48
   513  0079CB  30                 	db	48
   514  0079CC  20                 	db	32
   515  0079CD  60                 	db	96
   516  0079CE  60                 	db	96
   517  0079CF  60                 	db	96
   518  0079D0  60                 	db	96
   519  0079D1  00                 	db	0
   520  0079D2  00                 	db	0
   521  0079D3  00                 	db	0
   522  0079D4  00                 	db	0
   523  0079D5  78                 	db	120
   524  0079D6  FC                 	db	252
   525  0079D7  CC                 	db	204
   526  0079D8  CC                 	db	204
   527  0079D9  78                 	db	120
   528  0079DA  78                 	db	120
   529  0079DB  CC                 	db	204
   530  0079DC  CC                 	db	204
   531  0079DD  CC                 	db	204
   532  0079DE  FC                 	db	252
   533  0079DF  78                 	db	120
   534  0079E0  00                 	db	0
   535  0079E1  00                 	db	0
   536  0079E2  00                 	db	0
   537  0079E3  00                 	db	0
   538  0079E4  70                 	db	112
   539  0079E5  F8                 	db	248
   540  0079E6  CC                 	db	204
   541  0079E7  CC                 	db	204
   542  0079E8  CC                 	db	204
   543  0079E9  FC                 	db	252
   544  0079EA  7C                 	db	124
   545  0079EB  0C                 	db	12
   546  0079EC  CC                 	db	204
   547  0079ED  F8                 	db	248
   548  0079EE  70                 	db	112
   549  0079EF  00                 	db	0
   550  0079F0  00                 	db	0
   551  0079F1  00                 	db	0
   552  0079F2  00                 	db	0
   553  0079F3  00                 	db	0
   554  0079F4  00                 	db	0
   555  0079F5  00                 	db	0
   556  0079F6  C0                 	db	192
   557  0079F7  C0                 	db	192
   558  0079F8  00                 	db	0
   559  0079F9  00                 	db	0
   560  0079FA  00                 	db	0
   561  0079FB  00                 	db	0
   562  0079FC  C0                 	db	192
   563  0079FD  C0                 	db	192
   564  0079FE  00                 	db	0
   565  0079FF  00                 	db	0
   566  007A00  00                 	db	0
   567  007A01  00                 	db	0
   568  007A02  00                 	db	0
   569  007A03  00                 	db	0
   570  007A04  00                 	db	0
   571  007A05  C0                 	db	192
   572  007A06  C0                 	db	192
   573  007A07  00                 	db	0
   574  007A08  00                 	db	0
   575  007A09  00                 	db	0
   576  007A0A  00                 	db	0
   577  007A0B  C0                 	db	192
   578  007A0C  C0                 	db	192
   579  007A0D  40                 	db	64
   580  007A0E  40                 	db	64
   581  007A0F  80                 	db	128
   582  007A10  00                 	db	0
   583  007A11  00                 	db	0
   584  007A12  04                 	db	4
   585  007A13  1C                 	db	28
   586  007A14  38                 	db	56
   587  007A15  F0                 	db	240
   588  007A16  C0                 	db	192
   589  007A17  F0                 	db	240
   590  007A18  38                 	db	56
   591  007A19  1C                 	db	28
   592  007A1A  04                 	db	4
   593  007A1B  00                 	db	0
   594  007A1C  00                 	db	0
   595  007A1D  00                 	db	0
   596  007A1E  00                 	db	0
   597  007A1F  00                 	db	0
   598  007A20  00                 	db	0
   599  007A21  00                 	db	0
   600  007A22  00                 	db	0
   601  007A23  FC                 	db	252
   602  007A24  FC                 	db	252
   603  007A25  00                 	db	0
   604  007A26  FC                 	db	252
   605  007A27  FC                 	db	252
   606  007A28  00                 	db	0
   607  007A29  00                 	db	0
   608  007A2A  00                 	db	0
   609  007A2B  00                 	db	0
   610  007A2C  00                 	db	0
   611  007A2D  00                 	db	0
   612  007A2E  00                 	db	0
   613  007A2F  00                 	db	0
   614  007A30  80                 	db	128
   615  007A31  E0                 	db	224
   616  007A32  70                 	db	112
   617  007A33  3C                 	db	60
   618  007A34  0C                 	db	12
   619  007A35  1C                 	db	28
   620  007A36  70                 	db	112
   621  007A37  E0                 	db	224
   622  007A38  80                 	db	128
   623  007A39  00                 	db	0
   624  007A3A  00                 	db	0
   625  007A3B  00                 	db	0
   626  007A3C  00                 	db	0
   627  007A3D  00                 	db	0
   628  007A3E  78                 	db	120
   629  007A3F  FC                 	db	252
   630  007A40  CC                 	db	204
   631  007A41  CC                 	db	204
   632  007A42  1C                 	db	28
   633  007A43  18                 	db	24
   634  007A44  30                 	db	48
   635  007A45  30                 	db	48
   636  007A46  00                 	db	0
   637  007A47  30                 	db	48
   638  007A48  30                 	db	48
   639  007A49  00                 	db	0
   640  007A4A  00                 	db	0
   641  007A4B  00                 	db	0
   642  007A4C  00                 	db	0
   643  007A4D  00                 	db	0
   644  007A4E  0F                 	db	15
   645  007A4F  C0                 	db	192
   646  007A50  1F                 	db	31
   647  007A51  E0                 	db	224
   648  007A52  30                 	db	48
   649  007A53  30                 	db	48
   650  007A54  66                 	db	102
   651  007A55  D8                 	db	216
   652  007A56  EF                 	db	239
   653  007A57  D8                 	db	216
   654  007A58  DD                 	db	221
   655  007A59  D8                 	db	216
   656  007A5A  D8                 	db	216
   657  007A5B  98                 	db	152
   658  007A5C  D9                 	db	217
   659  007A5D  98                 	db	152
   660  007A5E  D9                 	db	217
   661  007A5F  B0                 	db	176
   662  007A60  DF                 	db	223
   663  007A61  F0                 	db	240
   664  007A62  6E                 	db	110
   665  007A63  C8                 	db	200
   666  007A64  70                 	db	112
   667  007A65  10                 	db	16
   668  007A66  3F                 	db	63
   669  007A67  E0                 	db	224
   670  007A68  0F                 	db	15
   671  007A69  C0                 	db	192
   672  007A6A  00                 	db	0
   673  007A6B  00                 	db	0
   674  007A6C  1C                 	db	28
   675  007A6D  00                 	db	0
   676  007A6E  1C                 	db	28
   677  007A6F  00                 	db	0
   678  007A70  1C                 	db	28
   679  007A71  00                 	db	0
   680  007A72  36                 	db	54
   681  007A73  00                 	db	0
   682  007A74  36                 	db	54
   683  007A75  00                 	db	0
   684  007A76  36                 	db	54
   685  007A77  00                 	db	0
   686  007A78  63                 	db	99
   687  007A79  00                 	db	0
   688  007A7A  7F                 	db	127
   689  007A7B  00                 	db	0
   690  007A7C  7F                 	db	127
   691  007A7D  00                 	db	0
   692  007A7E  C1                 	db	193
   693  007A7F  80                 	db	128
   694  007A80  C1                 	db	193
   695  007A81  80                 	db	128
   696  007A82  00                 	db	0
   697  007A83  00                 	db	0
   698  007A84  00                 	db	0
   699  007A85  00                 	db	0
   700  007A86  00                 	db	0
   701  007A87  00                 	db	0
   702  007A88  00                 	db	0
   703  007A89  FC                 	db	252
   704  007A8A  FE                 	db	254
   705  007A8B  C6                 	db	198
   706  007A8C  C6                 	db	198
   707  007A8D  FC                 	db	252
   708  007A8E  FC                 	db	252
   709  007A8F  C6                 	db	198
   710  007A90  C6                 	db	198
   711  007A91  C6                 	db	198
   712  007A92  FE                 	db	254
   713  007A93  FC                 	db	252
   714  007A94  00                 	db	0
   715  007A95  00                 	db	0
   716  007A96  00                 	db	0
   717  007A97  00                 	db	0
   718  007A98  3C                 	db	60
   719  007A99  7E                 	db	126
   720  007A9A  67                 	db	103
   721  007A9B  C2                 	db	194
   722  007A9C  C0                 	db	192
   723  007A9D  C0                 	db	192
   724  007A9E  C0                 	db	192
   725  007A9F  C2                 	db	194
   726  007AA0  67                 	db	103
   727  007AA1  7E                 	db	126
   728  007AA2  3C                 	db	60
   729  007AA3  00                 	db	0
   730  007AA4  00                 	db	0
   731  007AA5  00                 	db	0
   732  007AA6  00                 	db	0
   733  007AA7  F8                 	db	248
   734  007AA8  FC                 	db	252
   735  007AA9  CE                 	db	206
   736  007AAA  C6                 	db	198
   737  007AAB  C6                 	db	198
   738  007AAC  C6                 	db	198
   739  007AAD  C6                 	db	198
   740  007AAE  C6                 	db	198
   741  007AAF  CE                 	db	206
   742  007AB0  FC                 	db	252
   743  007AB1  F8                 	db	248
   744  007AB2  00                 	db	0
   745  007AB3  00                 	db	0
   746  007AB4  00                 	db	0
   747  007AB5  00                 	db	0
   748  007AB6  FE                 	db	254
   749  007AB7  FE                 	db	254
   750  007AB8  C0                 	db	192
   751  007AB9  C0                 	db	192
   752  007ABA  FE                 	db	254
   753  007ABB  FE                 	db	254
   754  007ABC  C0                 	db	192
   755  007ABD  C0                 	db	192
   756  007ABE  C0                 	db	192
   757  007ABF  FE                 	db	254
   758  007AC0  FE                 	db	254
   759  007AC1  00                 	db	0
   760  007AC2  00                 	db	0
   761  007AC3  00                 	db	0
   762  007AC4  00                 	db	0
   763  007AC5  FC                 	db	252
   764  007AC6  FC                 	db	252
   765  007AC7  C0                 	db	192
   766  007AC8  C0                 	db	192
   767  007AC9  F8                 	db	248
   768  007ACA  F8                 	db	248
   769  007ACB  C0                 	db	192
   770  007ACC  C0                 	db	192
   771  007ACD  C0                 	db	192
   772  007ACE  C0                 	db	192
   773  007ACF  C0                 	db	192
   774  007AD0  00                 	db	0
   775  007AD1  00                 	db	0
   776  007AD2  00                 	db	0
   777  007AD3  00                 	db	0
   778  007AD4  3C                 	db	60
   779  007AD5  7E                 	db	126
   780  007AD6  67                 	db	103
   781  007AD7  C3                 	db	195
   782  007AD8  C0                 	db	192
   783  007AD9  CF                 	db	207
   784  007ADA  CF                 	db	207
   785  007ADB  C3                 	db	195
   786  007ADC  63                 	db	99
   787  007ADD  7F                 	db	127
   788  007ADE  3C                 	db	60
   789  007ADF  00                 	db	0
   790  007AE0  00                 	db	0
   791  007AE1  00                 	db	0
   792  007AE2  00                 	db	0
   793  007AE3  C6                 	db	198
   794  007AE4  C6                 	db	198
   795  007AE5  C6                 	db	198
   796  007AE6  C6                 	db	198
   797  007AE7  FE                 	db	254
   798  007AE8  FE                 	db	254
   799  007AE9  C6                 	db	198
   800  007AEA  C6                 	db	198
   801  007AEB  C6                 	db	198
   802  007AEC  C6                 	db	198
   803  007AED  C6                 	db	198
   804  007AEE  00                 	db	0
   805  007AEF  00                 	db	0
   806  007AF0  00                 	db	0
   807  007AF1  00                 	db	0
   808  007AF2  C0                 	db	192
   809  007AF3  C0                 	db	192
   810  007AF4  C0                 	db	192
   811  007AF5  C0                 	db	192
   812  007AF6  C0                 	db	192
   813  007AF7  C0                 	db	192
   814  007AF8  C0                 	db	192
   815  007AF9  C0                 	db	192
   816  007AFA  C0                 	db	192
   817  007AFB  C0                 	db	192
   818  007AFC  C0                 	db	192
   819  007AFD  00                 	db	0
   820  007AFE  00                 	db	0
   821  007AFF  00                 	db	0
   822  007B00  00                 	db	0
   823  007B01  0C                 	db	12
   824  007B02  0C                 	db	12
   825  007B03  0C                 	db	12
   826  007B04  0C                 	db	12
   827  007B05  0C                 	db	12
   828  007B06  0C                 	db	12
   829  007B07  0C                 	db	12
   830  007B08  CC                 	db	204
   831  007B09  CC                 	db	204
   832  007B0A  FC                 	db	252
   833  007B0B  78                 	db	120
   834  007B0C  00                 	db	0
   835  007B0D  00                 	db	0
   836  007B0E  00                 	db	0
   837  007B0F  00                 	db	0
   838  007B10  C3                 	db	195
   839  007B11  C6                 	db	198
   840  007B12  CC                 	db	204
   841  007B13  CC                 	db	204
   842  007B14  D8                 	db	216
   843  007B15  FC                 	db	252
   844  007B16  EC                 	db	236
   845  007B17  C6                 	db	198
   846  007B18  C6                 	db	198
   847  007B19  C3                 	db	195
   848  007B1A  C3                 	db	195
   849  007B1B  00                 	db	0
   850  007B1C  00                 	db	0
   851  007B1D  00                 	db	0
   852  007B1E  00                 	db	0
   853  007B1F  C0                 	db	192
   854  007B20  C0                 	db	192
   855  007B21  C0                 	db	192
   856  007B22  C0                 	db	192
   857  007B23  C0                 	db	192
   858  007B24  C0                 	db	192
   859  007B25  C0                 	db	192
   860  007B26  C0                 	db	192
   861  007B27  C0                 	db	192
   862  007B28  FE                 	db	254
   863  007B29  FE                 	db	254
   864  007B2A  00                 	db	0
   865  007B2B  00                 	db	0
   866  007B2C  00                 	db	0
   867  007B2D  00                 	db	0
   868  007B2E  00                 	db	0
   869  007B2F  E3                 	db	227
   870  007B30  80                 	db	128
   871  007B31  E3                 	db	227
   872  007B32  80                 	db	128
   873  007B33  E3                 	db	227
   874  007B34  80                 	db	128
   875  007B35  F7                 	db	247
   876  007B36  80                 	db	128
   877  007B37  D5                 	db	213
   878  007B38  80                 	db	128
   879  007B39  D5                 	db	213
   880  007B3A  80                 	db	128
   881  007B3B  D5                 	db	213
   882  007B3C  80                 	db	128
   883  007B3D  D5                 	db	213
   884  007B3E  80                 	db	128
   885  007B3F  DD                 	db	221
   886  007B40  80                 	db	128
   887  007B41  D9                 	db	217
   888  007B42  80                 	db	128
   889  007B43  C9                 	db	201
   890  007B44  80                 	db	128
   891  007B45  00                 	db	0
   892  007B46  00                 	db	0
   893  007B47  00                 	db	0
   894  007B48  00                 	db	0
   895  007B49  00                 	db	0
   896  007B4A  00                 	db	0
   897  007B4B  00                 	db	0
   898  007B4C  C6                 	db	198
   899  007B4D  E6                 	db	230
   900  007B4E  E6                 	db	230
   901  007B4F  E6                 	db	230
   902  007B50  F6                 	db	246
   903  007B51  D6                 	db	214
   904  007B52  DE                 	db	222
   905  007B53  DE                 	db	222
   906  007B54  CE                 	db	206
   907  007B55  CE                 	db	206
   908  007B56  C6                 	db	198
   909  007B57  00                 	db	0
   910  007B58  00                 	db	0
   911  007B59  00                 	db	0
   912  007B5A  00                 	db	0
   913  007B5B  3C                 	db	60
   914  007B5C  7E                 	db	126
   915  007B5D  67                 	db	103
   916  007B5E  C3                 	db	195
   917  007B5F  C3                 	db	195
   918  007B60  C3                 	db	195
   919  007B61  C3                 	db	195
   920  007B62  C3                 	db	195
   921  007B63  66                 	db	102
   922  007B64  7E                 	db	126
   923  007B65  3C                 	db	60
   924  007B66  00                 	db	0
   925  007B67  00                 	db	0
   926  007B68  00                 	db	0
   927  007B69  00                 	db	0
   928  007B6A  FC                 	db	252
   929  007B6B  FE                 	db	254
   930  007B6C  C6                 	db	198
   931  007B6D  C6                 	db	198
   932  007B6E  C6                 	db	198
   933  007B6F  FE                 	db	254
   934  007B70  FC                 	db	252
   935  007B71  C0                 	db	192
   936  007B72  C0                 	db	192
   937  007B73  C0                 	db	192
   938  007B74  C0                 	db	192
   939  007B75  00                 	db	0
   940  007B76  00                 	db	0
   941  007B77  00                 	db	0
   942  007B78  00                 	db	0
   943  007B79  00                 	db	0
   944  007B7A  3C                 	db	60
   945  007B7B  00                 	db	0
   946  007B7C  7E                 	db	126
   947  007B7D  00                 	db	0
   948  007B7E  E7                 	db	231
   949  007B7F  00                 	db	0
   950  007B80  C3                 	db	195
   951  007B81  00                 	db	0
   952  007B82  C3                 	db	195
   953  007B83  00                 	db	0
   954  007B84  C3                 	db	195
   955  007B85  00                 	db	0
   956  007B86  C3                 	db	195
   957  007B87  00                 	db	0
   958  007B88  CB                 	db	203
   959  007B89  00                 	db	0
   960  007B8A  66                 	db	102
   961  007B8B  00                 	db	0
   962  007B8C  7F                 	db	127
   963  007B8D  00                 	db	0
   964  007B8E  3D                 	db	61
   965  007B8F  80                 	db	128
   966  007B90  00                 	db	0
   967  007B91  80                 	db	128
   968  007B92  00                 	db	0
   969  007B93  00                 	db	0
   970  007B94  00                 	db	0
   971  007B95  00                 	db	0
   972  007B96  00                 	db	0
   973  007B97  FC                 	db	252
   974  007B98  FE                 	db	254
   975  007B99  C6                 	db	198
   976  007B9A  C6                 	db	198
   977  007B9B  FE                 	db	254
   978  007B9C  FC                 	db	252
   979  007B9D  CC                 	db	204
   980  007B9E  C6                 	db	198
   981  007B9F  C6                 	db	198
   982  007BA0  C6                 	db	198
   983  007BA1  C3                 	db	195
   984  007BA2  00                 	db	0
   985  007BA3  00                 	db	0
   986  007BA4  00                 	db	0
   987  007BA5  00                 	db	0
   988  007BA6  7C                 	db	124
   989  007BA7  FE                 	db	254
   990  007BA8  C6                 	db	198
   991  007BA9  C6                 	db	198
   992  007BAA  F0                 	db	240
   993  007BAB  7C                 	db	124
   994  007BAC  0E                 	db	14
   995  007BAD  C6                 	db	198
   996  007BAE  C6                 	db	198
   997  007BAF  FE                 	db	254
   998  007BB0  7C                 	db	124
   999  007BB1  00                 	db	0
  1000  007BB2  00                 	db	0
  1001  007BB3  00                 	db	0
  1002  007BB4  00                 	db	0
  1003  007BB5  FF                 	db	255
  1004  007BB6  FF                 	db	255
  1005  007BB7  18                 	db	24
  1006  007BB8  18                 	db	24
  1007  007BB9  18                 	db	24
  1008  007BBA  18                 	db	24
  1009  007BBB  18                 	db	24
  1010  007BBC  18                 	db	24
  1011  007BBD  18                 	db	24
  1012  007BBE  18                 	db	24
  1013  007BBF  18                 	db	24
  1014  007BC0  00                 	db	0
  1015  007BC1  00                 	db	0
  1016  007BC2  00                 	db	0
  1017  007BC3  00                 	db	0
  1018  007BC4  C6                 	db	198
  1019  007BC5  C6                 	db	198
  1020  007BC6  C6                 	db	198
  1021  007BC7  C6                 	db	198
  1022  007BC8  C6                 	db	198
  1023  007BC9  C6                 	db	198
  1024  007BCA  C6                 	db	198
  1025  007BCB  C6                 	db	198
  1026  007BCC  C6                 	db	198
  1027  007BCD  7E                 	db	126
  1028  007BCE  38                 	db	56
  1029  007BCF  00                 	db	0
  1030  007BD0  00                 	db	0
  1031  007BD1  00                 	db	0
  1032  007BD2  00                 	db	0
  1033  007BD3  00                 	db	0
  1034  007BD4  C1                 	db	193
  1035  007BD5  80                 	db	128
  1036  007BD6  C1                 	db	193
  1037  007BD7  80                 	db	128
  1038  007BD8  63                 	db	99
  1039  007BD9  00                 	db	0
  1040  007BDA  63                 	db	99
  1041  007BDB  00                 	db	0
  1042  007BDC  63                 	db	99
  1043  007BDD  00                 	db	0
  1044  007BDE  36                 	db	54
  1045  007BDF  00                 	db	0
  1046  007BE0  36                 	db	54
  1047  007BE1  00                 	db	0
  1048  007BE2  36                 	db	54
  1049  007BE3  00                 	db	0
  1050  007BE4  1C                 	db	28
  1051  007BE5  00                 	db	0
  1052  007BE6  1C                 	db	28
  1053  007BE7  00                 	db	0
  1054  007BE8  1C                 	db	28
  1055  007BE9  00                 	db	0
  1056  007BEA  00                 	db	0
  1057  007BEB  00                 	db	0
  1058  007BEC  00                 	db	0
  1059  007BED  00                 	db	0
  1060  007BEE  00                 	db	0
  1061  007BEF  00                 	db	0
  1062  007BF0  00                 	db	0
  1063  007BF1  00                 	db	0
  1064  007BF2  C4                 	db	196
  1065  007BF3  60                 	db	96
  1066  007BF4  C4                 	db	196
  1067  007BF5  60                 	db	96
  1068  007BF6  CA                 	db	202
  1069  007BF7  60                 	db	96
  1070  007BF8  6A                 	db	106
  1071  007BF9  C0                 	db	192
  1072  007BFA  6A                 	db	106
  1073  007BFB  C0                 	db	192
  1074  007BFC  6A                 	db	106
  1075  007BFD  C0                 	db	192
  1076  007BFE  6A                 	db	106
  1077  007BFF  C0                 	db	192
  1078  007C00  6A                 	db	106
  1079  007C01  C0                 	db	192
  1080  007C02  31                 	db	49
  1081  007C03  80                 	db	128
  1082  007C04  31                 	db	49
  1083  007C05  80                 	db	128
  1084  007C06  31                 	db	49
  1085  007C07  80                 	db	128
  1086  007C08  00                 	db	0
  1087  007C09  00                 	db	0
  1088  007C0A  00                 	db	0
  1089  007C0B  00                 	db	0
  1090  007C0C  00                 	db	0
  1091  007C0D  00                 	db	0
  1092  007C0E  00                 	db	0
  1093  007C0F  00                 	db	0
  1094  007C10  C1                 	db	193
  1095  007C11  80                 	db	128
  1096  007C12  63                 	db	99
  1097  007C13  00                 	db	0
  1098  007C14  36                 	db	54
  1099  007C15  00                 	db	0
  1100  007C16  36                 	db	54
  1101  007C17  00                 	db	0
  1102  007C18  1C                 	db	28
  1103  007C19  00                 	db	0
  1104  007C1A  1C                 	db	28
  1105  007C1B  00                 	db	0
  1106  007C1C  1C                 	db	28
  1107  007C1D  00                 	db	0
  1108  007C1E  36                 	db	54
  1109  007C1F  00                 	db	0
  1110  007C20  36                 	db	54
  1111  007C21  00                 	db	0
  1112  007C22  63                 	db	99
  1113  007C23  00                 	db	0
  1114  007C24  C1                 	db	193
  1115  007C25  80                 	db	128
  1116  007C26  00                 	db	0
  1117  007C27  00                 	db	0
  1118  007C28  00                 	db	0
  1119  007C29  00                 	db	0
  1120  007C2A  00                 	db	0
  1121  007C2B  00                 	db	0
  1122  007C2C  00                 	db	0
  1123  007C2D  C3                 	db	195
  1124  007C2E  66                 	db	102
  1125  007C2F  66                 	db	102
  1126  007C30  3C                 	db	60
  1127  007C31  3C                 	db	60
  1128  007C32  18                 	db	24
  1129  007C33  18                 	db	24
  1130  007C34  18                 	db	24
  1131  007C35  18                 	db	24
  1132  007C36  18                 	db	24
  1133  007C37  18                 	db	24
  1134  007C38  00                 	db	0
  1135  007C39  00                 	db	0
  1136  007C3A  00                 	db	0
  1137  007C3B  00                 	db	0
  1138  007C3C  FE                 	db	254
  1139  007C3D  FE                 	db	254
  1140  007C3E  06                 	db	6
  1141  007C3F  0C                 	db	12
  1142  007C40  18                 	db	24
  1143  007C41  30                 	db	48
  1144  007C42  30                 	db	48
  1145  007C43  60                 	db	96
  1146  007C44  C0                 	db	192
  1147  007C45  FE                 	db	254
  1148  007C46  FE                 	db	254
  1149  007C47  00                 	db	0
  1150  007C48  00                 	db	0
  1151  007C49  00                 	db	0
  1152  007C4A  00                 	db	0
  1153  007C4B  E0                 	db	224
  1154  007C4C  E0                 	db	224
  1155  007C4D  C0                 	db	192
  1156  007C4E  C0                 	db	192
  1157  007C4F  C0                 	db	192
  1158  007C50  C0                 	db	192
  1159  007C51  C0                 	db	192
  1160  007C52  C0                 	db	192
  1161  007C53  C0                 	db	192
  1162  007C54  C0                 	db	192
  1163  007C55  C0                 	db	192
  1164  007C56  C0                 	db	192
  1165  007C57  E0                 	db	224
  1166  007C58  E0                 	db	224
  1167  007C59  00                 	db	0
  1168  007C5A  C0                 	db	192
  1169  007C5B  C0                 	db	192
  1170  007C5C  C0                 	db	192
  1171  007C5D  60                 	db	96
  1172  007C5E  60                 	db	96
  1173  007C5F  60                 	db	96
  1174  007C60  60                 	db	96
  1175  007C61  60                 	db	96
  1176  007C62  30                 	db	48
  1177  007C63  30                 	db	48
  1178  007C64  30                 	db	48
  1179  007C65  00                 	db	0
  1180  007C66  00                 	db	0
  1181  007C67  00                 	db	0
  1182  007C68  00                 	db	0
  1183  007C69  E0                 	db	224
  1184  007C6A  E0                 	db	224
  1185  007C6B  60                 	db	96
  1186  007C6C  60                 	db	96
  1187  007C6D  60                 	db	96
  1188  007C6E  60                 	db	96
  1189  007C6F  60                 	db	96
  1190  007C70  60                 	db	96
  1191  007C71  60                 	db	96
  1192  007C72  60                 	db	96
  1193  007C73  60                 	db	96
  1194  007C74  60                 	db	96
  1195  007C75  E0                 	db	224
  1196  007C76  E0                 	db	224
  1197  007C77  00                 	db	0
  1198  007C78  38                 	db	56
  1199  007C79  38                 	db	56
  1200  007C7A  6C                 	db	108
  1201  007C7B  6C                 	db	108
  1202  007C7C  6C                 	db	108
  1203  007C7D  C6                 	db	198
  1204  007C7E  00                 	db	0
  1205  007C7F  00                 	db	0
  1206  007C80  00                 	db	0
  1207  007C81  00                 	db	0
  1208  007C82  00                 	db	0
  1209  007C83  00                 	db	0
  1210  007C84  00                 	db	0
  1211  007C85  00                 	db	0
  1212  007C86  00                 	db	0
  1213  007C87  00                 	db	0
  1214  007C88  00                 	db	0
  1215  007C89  00                 	db	0
  1216  007C8A  00                 	db	0
  1217  007C8B  00                 	db	0
  1218  007C8C  00                 	db	0
  1219  007C8D  00                 	db	0
  1220  007C8E  00                 	db	0
  1221  007C8F  00                 	db	0
  1222  007C90  00                 	db	0
  1223  007C91  00                 	db	0
  1224  007C92  00                 	db	0
  1225  007C93  FE                 	db	254
  1226  007C94  00                 	db	0
  1227  007C95  00                 	db	0
  1228  007C96  C0                 	db	192
  1229  007C97  60                 	db	96
  1230  007C98  00                 	db	0
  1231  007C99  00                 	db	0
  1232  007C9A  00                 	db	0
  1233  007C9B  00                 	db	0
  1234  007C9C  00                 	db	0
  1235  007C9D  00                 	db	0
  1236  007C9E  00                 	db	0
  1237  007C9F  00                 	db	0
  1238  007CA0  00                 	db	0
  1239  007CA1  00                 	db	0
  1240  007CA2  00                 	db	0
  1241  007CA3  00                 	db	0
  1242  007CA4  00                 	db	0
  1243  007CA5  00                 	db	0
  1244  007CA6  00                 	db	0
  1245  007CA7  00                 	db	0
  1246  007CA8  78                 	db	120
  1247  007CA9  FC                 	db	252
  1248  007CAA  CC                 	db	204
  1249  007CAB  3C                 	db	60
  1250  007CAC  FC                 	db	252
  1251  007CAD  CC                 	db	204
  1252  007CAE  FC                 	db	252
  1253  007CAF  6C                 	db	108
  1254  007CB0  00                 	db	0
  1255  007CB1  00                 	db	0
  1256  007CB2  00                 	db	0
  1257  007CB3  00                 	db	0
  1258  007CB4  C0                 	db	192
  1259  007CB5  C0                 	db	192
  1260  007CB6  C0                 	db	192
  1261  007CB7  F8                 	db	248
  1262  007CB8  FC                 	db	252
  1263  007CB9  CC                 	db	204
  1264  007CBA  CC                 	db	204
  1265  007CBB  CC                 	db	204
  1266  007CBC  CC                 	db	204
  1267  007CBD  F8                 	db	248
  1268  007CBE  F8                 	db	248
  1269  007CBF  00                 	db	0
  1270  007CC0  00                 	db	0
  1271  007CC1  00                 	db	0
  1272  007CC2  00                 	db	0
  1273  007CC3  00                 	db	0
  1274  007CC4  00                 	db	0
  1275  007CC5  00                 	db	0
  1276  007CC6  70                 	db	112
  1277  007CC7  78                 	db	120
  1278  007CC8  D8                 	db	216
  1279  007CC9  C0                 	db	192
  1280  007CCA  C0                 	db	192
  1281  007CCB  D8                 	db	216
  1282  007CCC  78                 	db	120
  1283  007CCD  70                 	db	112
  1284  007CCE  00                 	db	0
  1285  007CCF  00                 	db	0
  1286  007CD0  00                 	db	0
  1287  007CD1  00                 	db	0
  1288  007CD2  0C                 	db	12
  1289  007CD3  0C                 	db	12
  1290  007CD4  0C                 	db	12
  1291  007CD5  7C                 	db	124
  1292  007CD6  FC                 	db	252
  1293  007CD7  CC                 	db	204
  1294  007CD8  CC                 	db	204
  1295  007CD9  CC                 	db	204
  1296  007CDA  CC                 	db	204
  1297  007CDB  FC                 	db	252
  1298  007CDC  7C                 	db	124
  1299  007CDD  00                 	db	0
  1300  007CDE  00                 	db	0
  1301  007CDF  00                 	db	0
  1302  007CE0  00                 	db	0
  1303  007CE1  00                 	db	0
  1304  007CE2  00                 	db	0
  1305  007CE3  00                 	db	0
  1306  007CE4  70                 	db	112
  1307  007CE5  F8                 	db	248
  1308  007CE6  D8                 	db	216
  1309  007CE7  F8                 	db	248
  1310  007CE8  C0                 	db	192
  1311  007CE9  D8                 	db	216
  1312  007CEA  F8                 	db	248
  1313  007CEB  70                 	db	112
  1314  007CEC  00                 	db	0
  1315  007CED  00                 	db	0
  1316  007CEE  00                 	db	0
  1317  007CEF  00                 	db	0
  1318  007CF0  30                 	db	48
  1319  007CF1  70                 	db	112
  1320  007CF2  60                 	db	96
  1321  007CF3  F0                 	db	240
  1322  007CF4  F0                 	db	240
  1323  007CF5  60                 	db	96
  1324  007CF6  60                 	db	96
  1325  007CF7  60                 	db	96
  1326  007CF8  60                 	db	96
  1327  007CF9  60                 	db	96
  1328  007CFA  60                 	db	96
  1329  007CFB  00                 	db	0
  1330  007CFC  00                 	db	0
  1331  007CFD  00                 	db	0
  1332  007CFE  00                 	db	0
  1333  007CFF  00                 	db	0
  1334  007D00  00                 	db	0
  1335  007D01  00                 	db	0
  1336  007D02  6C                 	db	108
  1337  007D03  FC                 	db	252
  1338  007D04  CC                 	db	204
  1339  007D05  CC                 	db	204
  1340  007D06  CC                 	db	204
  1341  007D07  CC                 	db	204
  1342  007D08  FC                 	db	252
  1343  007D09  6C                 	db	108
  1344  007D0A  0C                 	db	12
  1345  007D0B  CC                 	db	204
  1346  007D0C  78                 	db	120
  1347  007D0D  00                 	db	0
  1348  007D0E  C0                 	db	192
  1349  007D0F  C0                 	db	192
  1350  007D10  C0                 	db	192
  1351  007D11  D8                 	db	216
  1352  007D12  FC                 	db	252
  1353  007D13  CC                 	db	204
  1354  007D14  CC                 	db	204
  1355  007D15  CC                 	db	204
  1356  007D16  CC                 	db	204
  1357  007D17  CC                 	db	204
  1358  007D18  CC                 	db	204
  1359  007D19  00                 	db	0
  1360  007D1A  00                 	db	0
  1361  007D1B  00                 	db	0
  1362  007D1C  00                 	db	0
  1363  007D1D  C0                 	db	192
  1364  007D1E  C0                 	db	192
  1365  007D1F  00                 	db	0
  1366  007D20  C0                 	db	192
  1367  007D21  C0                 	db	192
  1368  007D22  C0                 	db	192
  1369  007D23  C0                 	db	192
  1370  007D24  C0                 	db	192
  1371  007D25  C0                 	db	192
  1372  007D26  C0                 	db	192
  1373  007D27  C0                 	db	192
  1374  007D28  00                 	db	0
  1375  007D29  00                 	db	0
  1376  007D2A  00                 	db	0
  1377  007D2B  00                 	db	0
  1378  007D2C  30                 	db	48
  1379  007D2D  30                 	db	48
  1380  007D2E  00                 	db	0
  1381  007D2F  30                 	db	48
  1382  007D30  30                 	db	48
  1383  007D31  30                 	db	48
  1384  007D32  30                 	db	48
  1385  007D33  30                 	db	48
  1386  007D34  30                 	db	48
  1387  007D35  30                 	db	48
  1388  007D36  30                 	db	48
  1389  007D37  30                 	db	48
  1390  007D38  F0                 	db	240
  1391  007D39  E0                 	db	224
  1392  007D3A  00                 	db	0
  1393  007D3B  C0                 	db	192
  1394  007D3C  C0                 	db	192
  1395  007D3D  C0                 	db	192
  1396  007D3E  CC                 	db	204
  1397  007D3F  D8                 	db	216
  1398  007D40  F0                 	db	240
  1399  007D41  F8                 	db	248
  1400  007D42  D8                 	db	216
  1401  007D43  D8                 	db	216
  1402  007D44  CC                 	db	204
  1403  007D45  CC                 	db	204
  1404  007D46  00                 	db	0
  1405  007D47  00                 	db	0
  1406  007D48  00                 	db	0
  1407  007D49  00                 	db	0
  1408  007D4A  C0                 	db	192
  1409  007D4B  C0                 	db	192
  1410  007D4C  C0                 	db	192
  1411  007D4D  C0                 	db	192
  1412  007D4E  C0                 	db	192
  1413  007D4F  C0                 	db	192
  1414  007D50  C0                 	db	192
  1415  007D51  C0                 	db	192
  1416  007D52  C0                 	db	192
  1417  007D53  C0                 	db	192
  1418  007D54  C0                 	db	192
  1419  007D55  00                 	db	0
  1420  007D56  00                 	db	0
  1421  007D57  00                 	db	0
  1422  007D58  00                 	db	0
  1423  007D59  00                 	db	0
  1424  007D5A  00                 	db	0
  1425  007D5B  00                 	db	0
  1426  007D5C  00                 	db	0
  1427  007D5D  00                 	db	0
  1428  007D5E  00                 	db	0
  1429  007D5F  00                 	db	0
  1430  007D60  D9                 	db	217
  1431  007D61  80                 	db	128
  1432  007D62  FF                 	db	255
  1433  007D63  C0                 	db	192
  1434  007D64  CC                 	db	204
  1435  007D65  C0                 	db	192
  1436  007D66  CC                 	db	204
  1437  007D67  C0                 	db	192
  1438  007D68  CC                 	db	204
  1439  007D69  C0                 	db	192
  1440  007D6A  CC                 	db	204
  1441  007D6B  C0                 	db	192
  1442  007D6C  CC                 	db	204
  1443  007D6D  C0                 	db	192
  1444  007D6E  CC                 	db	204
  1445  007D6F  C0                 	db	192
  1446  007D70  00                 	db	0
  1447  007D71  00                 	db	0
  1448  007D72  00                 	db	0
  1449  007D73  00                 	db	0
  1450  007D74  00                 	db	0
  1451  007D75  00                 	db	0
  1452  007D76  00                 	db	0
  1453  007D77  00                 	db	0
  1454  007D78  00                 	db	0
  1455  007D79  00                 	db	0
  1456  007D7A  D8                 	db	216
  1457  007D7B  FC                 	db	252
  1458  007D7C  CC                 	db	204
  1459  007D7D  CC                 	db	204
  1460  007D7E  CC                 	db	204
  1461  007D7F  CC                 	db	204
  1462  007D80  CC                 	db	204
  1463  007D81  CC                 	db	204
  1464  007D82  00                 	db	0
  1465  007D83  00                 	db	0
  1466  007D84  00                 	db	0
  1467  007D85  00                 	db	0
  1468  007D86  00                 	db	0
  1469  007D87  00                 	db	0
  1470  007D88  00                 	db	0
  1471  007D89  78                 	db	120
  1472  007D8A  78                 	db	120
  1473  007D8B  CC                 	db	204
  1474  007D8C  CC                 	db	204
  1475  007D8D  CC                 	db	204
  1476  007D8E  CC                 	db	204
  1477  007D8F  78                 	db	120
  1478  007D90  78                 	db	120
  1479  007D91  00                 	db	0
  1480  007D92  00                 	db	0
  1481  007D93  00                 	db	0
  1482  007D94  00                 	db	0
  1483  007D95  00                 	db	0
  1484  007D96  00                 	db	0
  1485  007D97  00                 	db	0
  1486  007D98  D8                 	db	216
  1487  007D99  FC                 	db	252
  1488  007D9A  CC                 	db	204
  1489  007D9B  CC                 	db	204
  1490  007D9C  CC                 	db	204
  1491  007D9D  CC                 	db	204
  1492  007D9E  F8                 	db	248
  1493  007D9F  D8                 	db	216
  1494  007DA0  C0                 	db	192
  1495  007DA1  C0                 	db	192
  1496  007DA2  C0                 	db	192
  1497  007DA3  00                 	db	0
  1498  007DA4  00                 	db	0
  1499  007DA5  00                 	db	0
  1500  007DA6  00                 	db	0
  1501  007DA7  6C                 	db	108
  1502  007DA8  FC                 	db	252
  1503  007DA9  CC                 	db	204
  1504  007DAA  CC                 	db	204
  1505  007DAB  CC                 	db	204
  1506  007DAC  CC                 	db	204
  1507  007DAD  FC                 	db	252
  1508  007DAE  6C                 	db	108
  1509  007DAF  0C                 	db	12
  1510  007DB0  0C                 	db	12
  1511  007DB1  0C                 	db	12
  1512  007DB2  00                 	db	0
  1513  007DB3  00                 	db	0
  1514  007DB4  00                 	db	0
  1515  007DB5  00                 	db	0
  1516  007DB6  D0                 	db	208
  1517  007DB7  F0                 	db	240
  1518  007DB8  C0                 	db	192
  1519  007DB9  C0                 	db	192
  1520  007DBA  C0                 	db	192
  1521  007DBB  C0                 	db	192
  1522  007DBC  C0                 	db	192
  1523  007DBD  C0                 	db	192
  1524  007DBE  00                 	db	0
  1525  007DBF  00                 	db	0
  1526  007DC0  00                 	db	0
  1527  007DC1  00                 	db	0
  1528  007DC2  00                 	db	0
  1529  007DC3  00                 	db	0
  1530  007DC4  00                 	db	0
  1531  007DC5  70                 	db	112
  1532  007DC6  F8                 	db	248
  1533  007DC7  C8                 	db	200
  1534  007DC8  E0                 	db	224
  1535  007DC9  38                 	db	56
  1536  007DCA  98                 	db	152
  1537  007DCB  F8                 	db	248
  1538  007DCC  70                 	db	112
  1539  007DCD  00                 	db	0
  1540  007DCE  00                 	db	0
  1541  007DCF  00                 	db	0
  1542  007DD0  00                 	db	0
  1543  007DD1  20                 	db	32
  1544  007DD2  60                 	db	96
  1545  007DD3  60                 	db	96
  1546  007DD4  F0                 	db	240
  1547  007DD5  F0                 	db	240
  1548  007DD6  60                 	db	96
  1549  007DD7  60                 	db	96
  1550  007DD8  60                 	db	96
  1551  007DD9  60                 	db	96
  1552  007DDA  70                 	db	112
  1553  007DDB  70                 	db	112
  1554  007DDC  00                 	db	0
  1555  007DDD  00                 	db	0
  1556  007DDE  00                 	db	0
  1557  007DDF  00                 	db	0
  1558  007DE0  00                 	db	0
  1559  007DE1  00                 	db	0
  1560  007DE2  00                 	db	0
  1561  007DE3  CC                 	db	204
  1562  007DE4  CC                 	db	204
  1563  007DE5  CC                 	db	204
  1564  007DE6  CC                 	db	204
  1565  007DE7  CC                 	db	204
  1566  007DE8  CC                 	db	204
  1567  007DE9  FC                 	db	252
  1568  007DEA  6C                 	db	108
  1569  007DEB  00                 	db	0
  1570  007DEC  00                 	db	0
  1571  007DED  00                 	db	0
  1572  007DEE  00                 	db	0
  1573  007DEF  00                 	db	0
  1574  007DF0  00                 	db	0
  1575  007DF1  00                 	db	0
  1576  007DF2  C6                 	db	198
  1577  007DF3  C6                 	db	198
  1578  007DF4  6C                 	db	108
  1579  007DF5  6C                 	db	108
  1580  007DF6  6C                 	db	108
  1581  007DF7  38                 	db	56
  1582  007DF8  38                 	db	56
  1583  007DF9  38                 	db	56
  1584  007DFA  00                 	db	0
  1585  007DFB  00                 	db	0
  1586  007DFC  00                 	db	0
  1587  007DFD  00                 	db	0
  1588  007DFE  00                 	db	0
  1589  007DFF  00                 	db	0
  1590  007E00  00                 	db	0
  1591  007E01  00                 	db	0
  1592  007E02  00                 	db	0
  1593  007E03  00                 	db	0
  1594  007E04  00                 	db	0
  1595  007E05  DD                 	db	221
  1596  007E06  80                 	db	128
  1597  007E07  DD                 	db	221
  1598  007E08  80                 	db	128
  1599  007E09  DD                 	db	221
  1600  007E0A  80                 	db	128
  1601  007E0B  D5                 	db	213
  1602  007E0C  80                 	db	128
  1603  007E0D  55                 	db	85
  1604  007E0E  00                 	db	0
  1605  007E0F  77                 	db	119
  1606  007E10  00                 	db	0
  1607  007E11  77                 	db	119
  1608  007E12  00                 	db	0
  1609  007E13  77                 	db	119
  1610  007E14  00                 	db	0
  1611  007E15  00                 	db	0
  1612  007E16  00                 	db	0
  1613  007E17  00                 	db	0
  1614  007E18  00                 	db	0
  1615  007E19  00                 	db	0
  1616  007E1A  00                 	db	0
  1617  007E1B  00                 	db	0
  1618  007E1C  00                 	db	0
  1619  007E1D  00                 	db	0
  1620  007E1E  00                 	db	0
  1621  007E1F  CC                 	db	204
  1622  007E20  78                 	db	120
  1623  007E21  78                 	db	120
  1624  007E22  30                 	db	48
  1625  007E23  30                 	db	48
  1626  007E24  78                 	db	120
  1627  007E25  78                 	db	120
  1628  007E26  CC                 	db	204
  1629  007E27  00                 	db	0
  1630  007E28  00                 	db	0
  1631  007E29  00                 	db	0
  1632  007E2A  00                 	db	0
  1633  007E2B  00                 	db	0
  1634  007E2C  00                 	db	0
  1635  007E2D  00                 	db	0
  1636  007E2E  C6                 	db	198
  1637  007E2F  C6                 	db	198
  1638  007E30  6C                 	db	108
  1639  007E31  6C                 	db	108
  1640  007E32  6C                 	db	108
  1641  007E33  38                 	db	56
  1642  007E34  38                 	db	56
  1643  007E35  38                 	db	56
  1644  007E36  30                 	db	48
  1645  007E37  F0                 	db	240
  1646  007E38  E0                 	db	224
  1647  007E39  00                 	db	0
  1648  007E3A  00                 	db	0
  1649  007E3B  00                 	db	0
  1650  007E3C  00                 	db	0
  1651  007E3D  FC                 	db	252
  1652  007E3E  FC                 	db	252
  1653  007E3F  18                 	db	24
  1654  007E40  30                 	db	48
  1655  007E41  30                 	db	48
  1656  007E42  60                 	db	96
  1657  007E43  FC                 	db	252
  1658  007E44  FC                 	db	252
  1659  007E45  00                 	db	0
  1660  007E46  00                 	db	0
  1661  007E47  00                 	db	0
  1662  007E48  00                 	db	0
  1663  007E49  30                 	db	48
  1664  007E4A  70                 	db	112
  1665  007E4B  60                 	db	96
  1666  007E4C  60                 	db	96
  1667  007E4D  60                 	db	96
  1668  007E4E  60                 	db	96
  1669  007E4F  C0                 	db	192
  1670  007E50  C0                 	db	192
  1671  007E51  60                 	db	96
  1672  007E52  60                 	db	96
  1673  007E53  60                 	db	96
  1674  007E54  60                 	db	96
  1675  007E55  70                 	db	112
  1676  007E56  30                 	db	48
  1677  007E57  00                 	db	0
  1678  007E58  C0                 	db	192
  1679  007E59  C0                 	db	192
  1680  007E5A  C0                 	db	192
  1681  007E5B  C0                 	db	192
  1682  007E5C  C0                 	db	192
  1683  007E5D  C0                 	db	192
  1684  007E5E  C0                 	db	192
  1685  007E5F  C0                 	db	192
  1686  007E60  C0                 	db	192
  1687  007E61  C0                 	db	192
  1688  007E62  C0                 	db	192
  1689  007E63  C0                 	db	192
  1690  007E64  C0                 	db	192
  1691  007E65  C0                 	db	192
  1692  007E66  00                 	db	0
  1693  007E67  C0                 	db	192
  1694  007E68  E0                 	db	224
  1695  007E69  60                 	db	96
  1696  007E6A  60                 	db	96
  1697  007E6B  60                 	db	96
  1698  007E6C  60                 	db	96
  1699  007E6D  30                 	db	48
  1700  007E6E  30                 	db	48
  1701  007E6F  60                 	db	96
  1702  007E70  60                 	db	96
  1703  007E71  60                 	db	96
  1704  007E72  60                 	db	96
  1705  007E73  E0                 	db	224
  1706  007E74  C0                 	db	192
  1707  007E75  00                 	db	0
  1708  007E76  00                 	db	0
  1709  007E77  00                 	db	0
  1710  007E78  00                 	db	0
  1711  007E79  00                 	db	0
  1712  007E7A  E4                 	db	228
  1713  007E7B  FC                 	db	252
  1714  007E7C  9C                 	db	156
  1715  007E7D  00                 	db	0
  1716  007E7E  00                 	db	0
  1717  007E7F  00                 	db	0
  1718  007E80  00                 	db	0
  1719  007E81  00                 	db	0
  1720  007E82  00                 	db	0
  1721  007E83  00                 	db	0
  1722  007E84                     __end_of_arialNarrow_12ptBitmaps:
  1723                           	callstack 0
  1724  007E84                     _arialNarrow_12ptDescriptors:
  1725                           	callstack 0
  1726  007E84  08                 	db	8
  1727  007E85  0000               	dw	0
  1728  007E87  02                 	db	2
  1729  007E88  000F               	dw	15
  1730  007E8A  05                 	db	5
  1731  007E8B  001E               	dw	30
  1732  007E8D  07                 	db	7
  1733  007E8E  002D               	dw	45
  1734  007E90  07                 	db	7
  1735  007E91  003C               	dw	60
  1736  007E93  0A                 	db	10
  1737  007E94  004B               	dw	75
  1738  007E96  08                 	db	8
  1739  007E97  0069               	dw	105
  1740  007E99  02                 	db	2
  1741  007E9A  0078               	dw	120
  1742  007E9C  04                 	db	4
  1743  007E9D  0087               	dw	135
  1744  007E9F  04                 	db	4
  1745  007EA0  0096               	dw	150
  1746  007EA2  05                 	db	5
  1747  007EA3  00A5               	dw	165
  1748  007EA5  06                 	db	6
  1749  007EA6  00B4               	dw	180
  1750  007EA8  02                 	db	2
  1751  007EA9  00C3               	dw	195
  1752  007EAB  04                 	db	4
  1753  007EAC  00D2               	dw	210
  1754  007EAE  02                 	db	2
  1755  007EAF  00E1               	dw	225
  1756  007EB1  04                 	db	4
  1757  007EB2  00F0               	dw	240
  1758  007EB4  06                 	db	6
  1759  007EB5  00FF               	dw	255
  1760  007EB7  04                 	db	4
  1761  007EB8  010E               	dw	270
  1762  007EBA  06                 	db	6
  1763  007EBB  011D               	dw	285
  1764  007EBD  06                 	db	6
  1765  007EBE  012C               	dw	300
  1766  007EC0  07                 	db	7
  1767  007EC1  013B               	dw	315
  1768  007EC3  06                 	db	6
  1769  007EC4  014A               	dw	330
  1770  007EC6  05                 	db	5
  1771  007EC7  0159               	dw	345
  1772  007EC9  05                 	db	5
  1773  007ECA  0168               	dw	360
  1774  007ECC  06                 	db	6
  1775  007ECD  0177               	dw	375
  1776  007ECF  06                 	db	6
  1777  007ED0  0186               	dw	390
  1778  007ED2  02                 	db	2
  1779  007ED3  0195               	dw	405
  1780  007ED5  02                 	db	2
  1781  007ED6  01A4               	dw	420
  1782  007ED8  06                 	db	6
  1783  007ED9  01B3               	dw	435
  1784  007EDB  06                 	db	6
  1785  007EDC  01C2               	dw	450
  1786  007EDE  06                 	db	6
  1787  007EDF  01D1               	dw	465
  1788  007EE1  06                 	db	6
  1789  007EE2  01E0               	dw	480
  1790  007EE4  0D                 	db	13
  1791  007EE5  01EF               	dw	495
  1792  007EE7  09                 	db	9
  1793  007EE8  020D               	dw	525
  1794  007EEA  07                 	db	7
  1795  007EEB  022B               	dw	555
  1796  007EED  08                 	db	8
  1797  007EEE  023A               	dw	570
  1798  007EF0  07                 	db	7
  1799  007EF1  0249               	dw	585
  1800  007EF3  07                 	db	7
  1801  007EF4  0258               	dw	600
  1802  007EF6  06                 	db	6
  1803  007EF7  0267               	dw	615
  1804  007EF9  08                 	db	8
  1805  007EFA  0276               	dw	630
  1806  007EFC  07                 	db	7
  1807  007EFD  0285               	dw	645
  1808  007EFF  02                 	db	2
  1809  007F00  0294               	dw	660
  1810  007F02  06                 	db	6
  1811  007F03  02A3               	dw	675
  1812  007F05  08                 	db	8
  1813  007F06  02B2               	dw	690
  1814  007F08  07                 	db	7
  1815  007F09  02C1               	dw	705
  1816  007F0B  09                 	db	9
  1817  007F0C  02D0               	dw	720
  1818  007F0E  07                 	db	7
  1819  007F0F  02EE               	dw	750
  1820  007F11  08                 	db	8
  1821  007F12  02FD               	dw	765
  1822  007F14  07                 	db	7
  1823  007F15  030C               	dw	780
  1824  007F17  09                 	db	9
  1825  007F18  031B               	dw	795
  1826  007F1A  08                 	db	8
  1827  007F1B  0339               	dw	825
  1828  007F1D  07                 	db	7
  1829  007F1E  0348               	dw	840
  1830  007F20  08                 	db	8
  1831  007F21  0357               	dw	855
  1832  007F23  07                 	db	7
  1833  007F24  0366               	dw	870
  1834  007F26  09                 	db	9
  1835  007F27  0375               	dw	885
  1836  007F29  0B                 	db	11
  1837  007F2A  0393               	dw	915
  1838  007F2C  09                 	db	9
  1839  007F2D  03B1               	dw	945
  1840  007F2F  08                 	db	8
  1841  007F30  03CF               	dw	975
  1842  007F32  07                 	db	7
  1843  007F33  03DE               	dw	990
  1844  007F35  03                 	db	3
  1845  007F36  03ED               	dw	1005
  1846  007F38  04                 	db	4
  1847  007F39  03FC               	dw	1020
  1848  007F3B  03                 	db	3
  1849  007F3C  040B               	dw	1035
  1850  007F3E  07                 	db	7
  1851  007F3F  041A               	dw	1050
  1852  007F41  07                 	db	7
  1853  007F42  0429               	dw	1065
  1854  007F44  03                 	db	3
  1855  007F45  0438               	dw	1080
  1856  007F47  06                 	db	6
  1857  007F48  0447               	dw	1095
  1858  007F4A  06                 	db	6
  1859  007F4B  0456               	dw	1110
  1860  007F4D  05                 	db	5
  1861  007F4E  0465               	dw	1125
  1862  007F50  06                 	db	6
  1863  007F51  0474               	dw	1140
  1864  007F53  05                 	db	5
  1865  007F54  0483               	dw	1155
  1866  007F56  04                 	db	4
  1867  007F57  0492               	dw	1170
  1868  007F59  06                 	db	6
  1869  007F5A  04A1               	dw	1185
  1870  007F5C  06                 	db	6
  1871  007F5D  04B0               	dw	1200
  1872  007F5F  02                 	db	2
  1873  007F60  04BF               	dw	1215
  1874  007F62  04                 	db	4
  1875  007F63  04CE               	dw	1230
  1876  007F65  06                 	db	6
  1877  007F66  04DD               	dw	1245
  1878  007F68  02                 	db	2
  1879  007F69  04EC               	dw	1260
  1880  007F6B  0A                 	db	10
  1881  007F6C  04FB               	dw	1275
  1882  007F6E  06                 	db	6
  1883  007F6F  0519               	dw	1305
  1884  007F71  06                 	db	6
  1885  007F72  0528               	dw	1320
  1886  007F74  06                 	db	6
  1887  007F75  0537               	dw	1335
  1888  007F77  06                 	db	6
  1889  007F78  0546               	dw	1350
  1890  007F7A  04                 	db	4
  1891  007F7B  0555               	dw	1365
  1892  007F7D  05                 	db	5
  1893  007F7E  0564               	dw	1380
  1894  007F80  04                 	db	4
  1895  007F81  0573               	dw	1395
  1896  007F83  06                 	db	6
  1897  007F84  0582               	dw	1410
  1898  007F86  07                 	db	7
  1899  007F87  0591               	dw	1425
  1900  007F89  09                 	db	9
  1901  007F8A  05A0               	dw	1440
  1902  007F8C  06                 	db	6
  1903  007F8D  05BE               	dw	1470
  1904  007F8F  07                 	db	7
  1905  007F90  05CD               	dw	1485
  1906  007F92  06                 	db	6
  1907  007F93  05DC               	dw	1500
  1908  007F95  04                 	db	4
  1909  007F96  05EB               	dw	1515
  1910  007F98  02                 	db	2
  1911  007F99  05FA               	dw	1530
  1912  007F9B  04                 	db	4
  1913  007F9C  0609               	dw	1545
  1914  007F9E  06                 	db	6
  1915  007F9F  0618               	dw	1560
  1916  007FA1                     __end_of_arialNarrow_12ptDescriptors:
  1917                           	callstack 0
  1918  007FA1                     _arialNarrow_12ptFontInfo:
  1919                           	callstack 0
  1920  007FA1  0F                 	db	15
  1921  007FA2  20                 	db	32
  1922  007FA3  7E                 	db	126
  1923  007FA4  84                 	db	low _arialNarrow_12ptDescriptors
  1924  007FA5  7E                 	db	high _arialNarrow_12ptDescriptors
  1925  007FA6  5D                 	db	low _arialNarrow_12ptBitmaps
  1926  007FA7  78                 	db	high _arialNarrow_12ptBitmaps
  1927  007FA8                     __end_of_arialNarrow_12ptFontInfo:
  1928                           	callstack 0
  1929  0000                     _ANSB2	set	31178
  1930  0000                     _ANSB1	set	31177
  1931  0000                     _WPUB	set	3937
  1932  0000                     _PORTBbits	set	3969
  1933  0000                     _ADRESL	set	4035
  1934  0000                     _ADRESH	set	4036
  1935  0000                     _ADCON0	set	4034
  1936  0000                     _TRISA	set	3986
  1937  0000                     _PORTA	set	3968
  1938  0000                     _ADCON2	set	4032
  1939  0000                     _T2CONbits	set	4026
  1940  0000                     _CCPR2L	set	3943
  1941  0000                     _CCP2CONbits	set	3942
  1942  0000                     _PR2	set	4027
  1943  0000                     _TMR0L	set	4054
  1944  0000                     _TMR0H	set	4055
  1945  0000                     _T0CON	set	4053
  1946  0000                     _OSCCON	set	4051
  1947  0000                     _TMR0IF	set	32658
  1948  0000                     _LATB4	set	31828
  1949  0000                     _LATB3	set	31827
  1950  0000                     _LATB1	set	31825
  1951  0000                     _TRISB4	set	31900
  1952  0000                     _TRISB3	set	31899
  1953  0000                     _INTEDG1	set	32653
  1954  0000                     _RBPU	set	32655
  1955  0000                     _TRISB1	set	31897
  1956  0000                     _LATB2	set	31826
  1957  0000                     _TRISB2	set	31898
  1958  0000                     _INT1IF	set	32640
  1959  0000                     _LATC2	set	31834
  1960  0000                     _LATC5	set	31837
  1961  0000                     _TRISC4	set	31908
  1962  0000                     _TRISC3	set	31907
  1963  0000                     _TRISC2	set	31906
  1964  0000                     _TRISC5	set	31909
  1965  0000                     _LATC3	set	31835
  1966  0000                     _LATC4	set	31836
  1967  0000                     _TMR2IF	set	31985
  1968  0000                     _TRISC1	set	31905
  1969  0000                     _TMR0IE	set	32661
  1970  0000                     _INT1IE	set	32643
  1971  0000                     _GIE	set	32663
  1972  0000                     _PLLEN	set	31966
  1973  007FA8                     STR_9:
  1974  007FA8  50                 	db	80	;'P'
  1975  007FA9  41                 	db	65	;'A'
  1976  007FAA  52                 	db	82	;'R'
  1977  007FAB  41                 	db	65	;'A'
  1978  007FAC  4D                 	db	77	;'M'
  1979  007FAD  45                 	db	69	;'E'
  1980  007FAE  54                 	db	84	;'T'
  1981  007FAF  45                 	db	69	;'E'
  1982  007FB0  52                 	db	82	;'R'
  1983  007FB1  53                 	db	83	;'S'
  1984  007FB2  00                 	db	0
  1985  007FB3                     STR_2:
  1986  007FB3  50                 	db	80	;'P'
  1987  007FB4  61                 	db	97	;'a'
  1988  007FB5  72                 	db	114	;'r'
  1989  007FB6  61                 	db	97	;'a'
  1990  007FB7  6D                 	db	109	;'m'
  1991  007FB8  65                 	db	101	;'e'
  1992  007FB9  74                 	db	116	;'t'
  1993  007FBA  72                 	db	114	;'r'
  1994  007FBB  65                 	db	101	;'e'
  1995  007FBC  73                 	db	115	;'s'
  1996  007FBD  00                 	db	0
  1997  007FBE                     STR_1:
  1998  007FBE  4D                 	db	77	;'M'
  1999  007FBF  65                 	db	101	;'e'
  2000  007FC0  6E                 	db	110	;'n'
  2001  007FC1  75                 	db	117	;'u'
  2002  007FC2  53                 	db	83	;'S'
  2003  007FC3  74                 	db	116	;'t'
  2004  007FC4  61                 	db	97	;'a'
  2005  007FC5  72                 	db	114	;'r'
  2006  007FC6  74                 	db	116	;'t'
  2007  007FC7  00                 	db	0
  2008  007FC8                     STR_3:
  2009  007FC8  31                 	db	49	;'1'
  2010  007FC9  20                 	db	32
  2011  007FCA  50                 	db	80	;'P'
  2012  007FCB  6C                 	db	108	;'l'
  2013  007FCC  61                 	db	97	;'a'
  2014  007FCD  79                 	db	121	;'y'
  2015  007FCE  65                 	db	101	;'e'
  2016  007FCF  72                 	db	114	;'r'
  2017  007FD0  00                 	db	0
  2018  007FD1                     STR_4:
  2019  007FD1  32                 	db	50	;'2'
  2020  007FD2  20                 	db	32
  2021  007FD3  50                 	db	80	;'P'
  2022  007FD4  6C                 	db	108	;'l'
  2023  007FD5  61                 	db	97	;'a'
  2024  007FD6  79                 	db	121	;'y'
  2025  007FD7  65                 	db	101	;'e'
  2026  007FD8  72                 	db	114	;'r'
  2027  007FD9  00                 	db	0
  2028  007FDA                     STR_8:
  2029  007FDA  57                 	db	87	;'W'
  2030  007FDB  45                 	db	69	;'E'
  2031  007FDC  4C                 	db	76	;'L'
  2032  007FDD  43                 	db	67	;'C'
  2033  007FDE  4F                 	db	79	;'O'
  2034  007FDF  4D                 	db	77	;'M'
  2035  007FE0  45                 	db	69	;'E'
  2036  007FE1  00                 	db	0
  2037  007FE2                     STR_5:
  2038  007FE2  51                 	db	81	;'Q'
  2039  007FE3  55                 	db	85	;'U'
  2040  007FE4  49                 	db	73	;'I'
  2041  007FE5  54                 	db	84	;'T'
  2042  007FE6  54                 	db	84	;'T'
  2043  007FE7  45                 	db	69	;'E'
  2044  007FE8  52                 	db	82	;'R'
  2045  007FE9  00                 	db	0
  2046  007FEA                     STR_10:
  2047  007FEA  58                 	db	88	;'X'
  2048  007FEB  3A                 	db	58	;':'
  2049  007FEC  20                 	db	32
  2050  007FED  25                 	db	37
  2051  007FEE  64                 	db	100	;'d'
  2052  007FEF  00                 	db	0
  2053  007FF0                     STR_11:
  2054  007FF0  59                 	db	89	;'Y'
  2055  007FF1  3A                 	db	58	;':'
  2056  007FF2  20                 	db	32
  2057  007FF3  25                 	db	37
  2058  007FF4  64                 	db	100	;'d'
  2059  007FF5  00                 	db	0
  2060  007FF6                     STR_6:
  2061  007FF6  3C                 	db	60	;'<'
  2062  007FF7  2D                 	db	45
  2063  007FF8  2D                 	db	45
  2064  007FF9  00                 	db	0
  2065  007FFA                     STR_7:
  2066  007FFA  2D                 	db	45
  2067  007FFB  2D                 	db	45
  2068  007FFC  3E                 	db	62	;'>'
  2069  007FFD  00                 	db	0
  2070  007FFE  00                 	db	0	; dummy byte at the end
  2071  0000                     
  2072                           ; #config settings
  2073                           
  2074                           	psect	cinit
  2075  005D9A                     __pcinit:
  2076                           	callstack 0
  2077  005D9A                     start_initialization:
  2078                           	callstack 0
  2079  005D9A                     __initialization:
  2080                           	callstack 0
  2081                           
  2082                           ; Clear objects allocated to BANK1 (201 bytes)
  2083  005D9A  EE01  F000         	lfsr	0,__pbssBANK1
  2084  005D9E  0EC9               	movlw	201
  2085  005DA0                     clear_0:
  2086  005DA0  6AEE               	clrf	postinc0,c
  2087  005DA2  06E8               	decf	wreg,f,c
  2088  005DA4  E1FD               	bnz	clear_0
  2089                           
  2090                           ; Clear objects allocated to BANK0 (75 bytes)
  2091  005DA6  EE00  F0B5         	lfsr	0,__pbssBANK0
  2092  005DAA  0E4B               	movlw	75
  2093  005DAC                     clear_1:
  2094  005DAC  6AEE               	clrf	postinc0,c
  2095  005DAE  06E8               	decf	wreg,f,c
  2096  005DB0  E1FD               	bnz	clear_1
  2097                           
  2098                           ; Clear objects allocated to COMRAM (7 bytes)
  2099  005DB2  EE00  F047         	lfsr	0,__pbssCOMRAM
  2100  005DB6  0E07               	movlw	7
  2101  005DB8                     clear_2:
  2102  005DB8  6AEE               	clrf	postinc0,c
  2103  005DBA  06E8               	decf	wreg,f,c
  2104  005DBC  E1FD               	bnz	clear_2
  2105  005DBE                     end_of_initialization:
  2106                           	callstack 0
  2107  005DBE                     __end_of__initialization:
  2108                           	callstack 0
  2109  005DBE  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2110  005DC0  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2111  005DC2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2112  005DC4  6EF8               	movwf	tblptru,c
  2113  005DC6  0100               	movlb	0
  2114  005DC8  EFA7  F02F         	goto	_main	;jump to C main() function
  2115                           
  2116                           	psect	bssCOMRAM
  2117  000047                     __pbssCOMRAM:
  2118                           	callstack 0
  2119  000047                     _width:
  2120                           	callstack 0
  2121  000047                     	ds	2
  2122  000049                     _prec:
  2123                           	callstack 0
  2124  000049                     	ds	2
  2125  00004B                     _flags:
  2126                           	callstack 0
  2127  00004B                     	ds	2
  2128  00004D                     _gameControllerState:
  2129                           	callstack 0
  2130  00004D                     	ds	1
  2131                           
  2132                           	psect	bssBANK0
  2133  0000B5                     __pbssBANK0:
  2134                           	callstack 0
  2135  0000B5                     _theXF:
  2136                           	callstack 0
  2137  0000B5                     	ds	38
  2138  0000DB                     _nout:
  2139                           	callstack 0
  2140  0000DB                     	ds	2
  2141  0000DD                     _displayState:
  2142                           	callstack 0
  2143  0000DD                     	ds	1
  2144  0000DE                     _touchScreenState:
  2145                           	callstack 0
  2146  0000DE                     	ds	1
  2147  0000DF                     _sleepState:
  2148                           	callstack 0
  2149  0000DF                     	ds	1
  2150  0000E0                     _dbuf:
  2151                           	callstack 0
  2152  0000E0                     	ds	32
  2153                           
  2154                           	psect	bssBANK1
  2155  000100                     __pbssBANK1:
  2156                           	callstack 0
  2157  000100                     _g1:
  2158                           	callstack 0
  2159  000100                     	ds	201
  2160                           
  2161                           	psect	cstackBANK1
  2162  0001C9                     __pcstackBANK1:
  2163                           	callstack 0
  2164  0001C9                     Factory_exec@ev:
  2165                           	callstack 0
  2166                           
  2167                           ; 1 bytes @ 0x0
  2168  0001C9                     	ds	1
  2169                           
  2170                           	psect	cstackBANK0
  2171  000060                     __pcstackBANK0:
  2172                           	callstack 0
  2173  000060                     _dtoa$4328:
  2174                           	callstack 0
  2175  000060                     LCD_Bitmap@bfOffBits:
  2176                           	callstack 0
  2177                           
  2178                           ; 4 bytes @ 0x0
  2179  000060                     	ds	2
  2180  000062                     dtoa@p:
  2181                           	callstack 0
  2182                           
  2183                           ; 2 bytes @ 0x2
  2184  000062                     	ds	2
  2185  000064                     LCD_Bitmap@endOfImage:
  2186                           	callstack 0
  2187  000064                     dtoa@w:
  2188                           	callstack 0
  2189                           
  2190                           ; 2 bytes @ 0x4
  2191  000064                     	ds	1
  2192  000065                     LCD_Bitmap@jumpCount:
  2193                           	callstack 0
  2194                           
  2195                           ; 2 bytes @ 0x5
  2196  000065                     	ds	1
  2197  000066                     dtoa@s:
  2198                           	callstack 0
  2199                           
  2200                           ; 2 bytes @ 0x6
  2201  000066                     	ds	1
  2202  000067                     LCD_Bitmap@curYPos:
  2203                           	callstack 0
  2204                           
  2205                           ; 2 bytes @ 0x7
  2206  000067                     	ds	1
  2207  000068                     dtoa@n:
  2208                           	callstack 0
  2209                           
  2210                           ; 8 bytes @ 0x8
  2211  000068                     	ds	1
  2212  000069                     LCD_Bitmap@colorTablePtr:
  2213                           	callstack 0
  2214                           
  2215                           ; 2 bytes @ 0x9
  2216  000069                     	ds	2
  2217  00006B                     LCD_Bitmap@biHeight:
  2218                           	callstack 0
  2219                           
  2220                           ; 2 bytes @ 0xB
  2221  00006B                     	ds	2
  2222  00006D                     LCD_Bitmap@color:
  2223                           	callstack 0
  2224                           
  2225                           ; 2 bytes @ 0xD
  2226  00006D                     	ds	2
  2227  00006F                     LCD_Bitmap@curXPos:
  2228                           	callstack 0
  2229                           
  2230                           ; 2 bytes @ 0xF
  2231  00006F                     	ds	1
  2232  000070                     dtoa@i:
  2233                           	callstack 0
  2234                           
  2235                           ; 2 bytes @ 0x10
  2236  000070                     	ds	1
  2237  000071                     LCD_Bitmap@strPtr:
  2238                           	callstack 0
  2239                           
  2240                           ; 2 bytes @ 0x11
  2241  000071                     	ds	1
  2242  000072                     vfpfcnvrt@ll:
  2243                           	callstack 0
  2244                           
  2245                           ; 8 bytes @ 0x12
  2246  000072                     	ds	1
  2247  000073                     LCD_Bitmap@newY:
  2248                           	callstack 0
  2249                           
  2250                           ; 2 bytes @ 0x13
  2251  000073                     	ds	2
  2252  000075                     LCD_Bitmap@pixelCount:
  2253                           	callstack 0
  2254                           
  2255                           ; 1 bytes @ 0x15
  2256  000075                     	ds	1
  2257  000076                     LCD_Bitmap@biWidth:
  2258                           	callstack 0
  2259                           
  2260                           ; 2 bytes @ 0x16
  2261  000076                     	ds	2
  2262  000078                     LCD_Bitmap@jumpColor:
  2263                           	callstack 0
  2264                           
  2265                           ; 2 bytes @ 0x18
  2266  000078                     	ds	2
  2267  00007A                     ?_vfprintf:
  2268                           	callstack 0
  2269  00007A                     LCD_Bitmap@i:
  2270                           	callstack 0
  2271  00007A                     vfprintf@fp:
  2272                           	callstack 0
  2273                           
  2274                           ; 2 bytes @ 0x1A
  2275  00007A                     	ds	2
  2276  00007C                     LCD_ButtonDraw@button:
  2277                           	callstack 0
  2278  00007C                     vfprintf@fmt:
  2279                           	callstack 0
  2280                           
  2281                           ; 2 bytes @ 0x1C
  2282  00007C                     	ds	2
  2283  00007E                     ??_LCD_ButtonDraw:
  2284  00007E                     vfprintf@ap:
  2285                           	callstack 0
  2286                           
  2287                           ; 2 bytes @ 0x1E
  2288  00007E                     	ds	2
  2289  000080                     vfprintf@cfmt:
  2290                           	callstack 0
  2291                           
  2292                           ; 2 bytes @ 0x20
  2293  000080                     	ds	2
  2294  000082                     ?_sprintf:
  2295                           	callstack 0
  2296  000082                     sprintf@s:
  2297                           	callstack 0
  2298                           
  2299                           ; 2 bytes @ 0x22
  2300  000082                     	ds	2
  2301  000084                     sprintf@fmt:
  2302                           	callstack 0
  2303                           
  2304                           ; 2 bytes @ 0x24
  2305  000084                     	ds	4
  2306  000088                     sprintf@ap:
  2307                           	callstack 0
  2308                           
  2309                           ; 2 bytes @ 0x28
  2310  000088                     	ds	2
  2311  00008A                     LCD_ButtonDraw@tempChar:
  2312                           	callstack 0
  2313  00008A                     sprintf@f:
  2314                           	callstack 0
  2315                           
  2316                           ; 6 bytes @ 0x2A
  2317  00008A                     	ds	1
  2318  00008B                     LCD_ButtonDraw@width:
  2319                           	callstack 0
  2320                           
  2321                           ; 2 bytes @ 0x2B
  2322  00008B                     	ds	2
  2323  00008D                     LCD_ButtonDraw@x1:
  2324                           	callstack 0
  2325                           
  2326                           ; 2 bytes @ 0x2D
  2327  00008D                     	ds	2
  2328  00008F                     LCD_ButtonDraw@x2:
  2329                           	callstack 0
  2330                           
  2331                           ; 2 bytes @ 0x2F
  2332  00008F                     	ds	1
  2333  000090                     touchScreenController@g:
  2334                           	callstack 0
  2335                           
  2336                           ; 2 bytes @ 0x30
  2337  000090                     	ds	1
  2338  000091                     LCD_ButtonDraw@y1:
  2339                           	callstack 0
  2340                           
  2341                           ; 2 bytes @ 0x31
  2342  000091                     	ds	1
  2343  000092                     ??_touchScreenController:
  2344                           
  2345                           ; 1 bytes @ 0x32
  2346  000092                     	ds	1
  2347  000093                     LCD_ButtonDraw@y2:
  2348                           	callstack 0
  2349                           
  2350                           ; 2 bytes @ 0x33
  2351  000093                     	ds	2
  2352  000095                     LCD_ButtonDraw@xText:
  2353                           	callstack 0
  2354                           
  2355                           ; 2 bytes @ 0x35
  2356  000095                     	ds	2
  2357  000097                     LCD_ButtonDraw@yText:
  2358                           	callstack 0
  2359                           
  2360                           ; 2 bytes @ 0x37
  2361  000097                     	ds	1
  2362  000098                     touchScreenController@s:
  2363                           	callstack 0
  2364                           
  2365                           ; 20 bytes @ 0x38
  2366  000098                     	ds	1
  2367  000099                     LCD_ButtonDraw@i:
  2368                           	callstack 0
  2369                           
  2370                           ; 1 bytes @ 0x39
  2371  000099                     	ds	1
  2372  00009A                     LCD_ButtonDraw@bmpPtr:
  2373                           	callstack 0
  2374                           
  2375                           ; 2 bytes @ 0x3A
  2376  00009A                     	ds	2
  2377  00009C                     Menu_welcomeDraw@g:
  2378                           	callstack 0
  2379  00009C                     Menu_parametersDraw@g:
  2380                           	callstack 0
  2381  00009C                     Menu_inGameDraw@g:
  2382                           	callstack 0
  2383                           
  2384                           ; 2 bytes @ 0x3C
  2385  00009C                     	ds	2
  2386  00009E                     displayController@g:
  2387                           	callstack 0
  2388                           
  2389                           ; 2 bytes @ 0x3E
  2390  00009E                     	ds	2
  2391  0000A0                     displayInit@g:
  2392                           	callstack 0
  2393  0000A0                     displaySM@g:
  2394                           	callstack 0
  2395                           
  2396                           ; 2 bytes @ 0x40
  2397  0000A0                     	ds	2
  2398  0000A2                     ??_displaySM:
  2399  0000A2                     sleepInit@g:
  2400                           	callstack 0
  2401                           
  2402                           ; 2 bytes @ 0x42
  2403  0000A2                     	ds	2
  2404  0000A4                     ??_Factory_init:
  2405  0000A4                     displaySM@ev:
  2406                           	callstack 0
  2407                           
  2408                           ; 1 bytes @ 0x44
  2409  0000A4                     	ds	8
  2410  0000AC                     touchScreenController@valueY:
  2411                           	callstack 0
  2412                           
  2413                           ; 2 bytes @ 0x4C
  2414  0000AC                     	ds	2
  2415  0000AE                     touchScreenController@valueX:
  2416                           	callstack 0
  2417                           
  2418                           ; 2 bytes @ 0x4E
  2419  0000AE                     	ds	2
  2420  0000B0                     touchScreenSM@g:
  2421                           	callstack 0
  2422                           
  2423                           ; 2 bytes @ 0x50
  2424  0000B0                     	ds	2
  2425  0000B2                     ??_touchScreenSM:
  2426                           
  2427                           ; 1 bytes @ 0x52
  2428  0000B2                     	ds	2
  2429  0000B4                     touchScreenSM@ev:
  2430                           	callstack 0
  2431                           
  2432                           ; 1 bytes @ 0x54
  2433  0000B4                     	ds	1
  2434                           
  2435                           	psect	cstackCOMRAM
  2436  000001                     __pcstackCOMRAM:
  2437                           	callstack 0
  2438  000001                     ?i2___wmul:
  2439                           	callstack 0
  2440  000001                     ?i2___awmod:
  2441                           	callstack 0
  2442  000001                     i2ENTERCRITICAL@inISR:
  2443                           	callstack 0
  2444  000001                     i2LEAVECRITICAL@inISR:
  2445                           	callstack 0
  2446  000001                     i2___wmul@multiplier:
  2447                           	callstack 0
  2448  000001                     i2___awmod@dividend:
  2449                           	callstack 0
  2450                           
  2451                           ; 2 bytes @ 0x0
  2452  000001                     	ds	1
  2453  000002                     XF_unscheduleTimer@inISR:
  2454                           	callstack 0
  2455  000002                     i2XF_scheduleTimer@tm:
  2456                           	callstack 0
  2457                           
  2458                           ; 2 bytes @ 0x1
  2459  000002                     	ds	1
  2460  000003                     XF_unscheduleTimer@id:
  2461                           	callstack 0
  2462  000003                     i2___wmul@multiplicand:
  2463                           	callstack 0
  2464  000003                     i2___awmod@divisor:
  2465                           	callstack 0
  2466                           
  2467                           ; 2 bytes @ 0x2
  2468  000003                     	ds	1
  2469  000004                     i2XF_scheduleTimer@ev:
  2470                           	callstack 0
  2471                           
  2472                           ; 1 bytes @ 0x3
  2473  000004                     	ds	1
  2474  000005                     i2XF_scheduleTimer@inISR:
  2475                           	callstack 0
  2476  000005                     i2___awmod@counter:
  2477                           	callstack 0
  2478  000005                     i2___wmul@product:
  2479                           	callstack 0
  2480                           
  2481                           ; 2 bytes @ 0x4
  2482  000005                     	ds	1
  2483  000006                     i2XF_scheduleTimer@i:
  2484                           	callstack 0
  2485  000006                     i2___awmod@sign:
  2486                           	callstack 0
  2487                           
  2488                           ; 1 bytes @ 0x5
  2489  000006                     	ds	1
  2490  000007                     i2XF_pushEvent@inISR:
  2491                           	callstack 0
  2492                           
  2493                           ; 1 bytes @ 0x6
  2494  000007                     	ds	1
  2495  000008                     i2XF_pushEvent@ev:
  2496                           	callstack 0
  2497                           
  2498                           ; 1 bytes @ 0x7
  2499  000008                     	ds	1
  2500  000009                     i2XF_pushEvent@temp:
  2501                           	callstack 0
  2502                           
  2503                           ; 1 bytes @ 0x8
  2504  000009                     	ds	1
  2505  00000A                     
  2506                           ; 1 bytes @ 0x9
  2507  00000A                     	ds	2
  2508  00000C                     XF_decrementAndQueueTimers@i:
  2509                           	callstack 0
  2510                           
  2511                           ; 2 bytes @ 0xB
  2512  00000C                     	ds	2
  2513  00000E                     ??_isr:
  2514                           
  2515                           ; 1 bytes @ 0xD
  2516  00000E                     	ds	4
  2517  000012                     ??_LCD_Lowlevel_Init:
  2518  000012                     ??_sleepController:
  2519  000012                     ?_LCD_Read:
  2520                           	callstack 0
  2521  000012                     ?_strlen:
  2522                           	callstack 0
  2523  000012                     ?_RGB2LCD:
  2524                           	callstack 0
  2525  000012                     ?___awdiv:
  2526                           	callstack 0
  2527  000012                     ?___awmod:
  2528                           	callstack 0
  2529  000012                     ?___lwmod:
  2530                           	callstack 0
  2531  000012                     ?___xxtofl:
  2532                           	callstack 0
  2533  000012                     ?___aodiv:
  2534                           	callstack 0
  2535  000012                     ?___aomod:
  2536                           	callstack 0
  2537  000012                     configMeasure@channel:
  2538                           	callstack 0
  2539  000012                     ENTERCRITICAL@inISR:
  2540                           	callstack 0
  2541  000012                     LEAVECRITICAL@inISR:
  2542                           	callstack 0
  2543  000012                     Ball_init@b:
  2544                           	callstack 0
  2545  000012                     Paddle_init@p:
  2546                           	callstack 0
  2547  000012                     GameParameters_setBackLight@s:
  2548                           	callstack 0
  2549  000012                     GameParameters_resetPos@s:
  2550                           	callstack 0
  2551  000012                     GameParameters_setX@s:
  2552                           	callstack 0
  2553  000012                     GameParameters_setY@s:
  2554                           	callstack 0
  2555  000012                     LCD_Fill@color:
  2556                           	callstack 0
  2557  000012                     LCD_SliderCreate@posX:
  2558                           	callstack 0
  2559  000012                     LCD_ButtonCreate@posX:
  2560                           	callstack 0
  2561  000012                     LCD_InButton@button:
  2562                           	callstack 0
  2563  000012                     LCD_InSlider@slider:
  2564                           	callstack 0
  2565  000012                     LCD_DrawRect@posX1:
  2566                           	callstack 0
  2567  000012                     RGB2LCD@colorTableEntry:
  2568                           	callstack 0
  2569  000012                     LCD_Read@posX:
  2570                           	callstack 0
  2571  000012                     checkCollision@g:
  2572                           	callstack 0
  2573  000012                     ___awdiv@dividend:
  2574                           	callstack 0
  2575  000012                     ___awmod@dividend:
  2576                           	callstack 0
  2577  000012                     ___lwmod@dividend:
  2578                           	callstack 0
  2579  000012                     fputc@c:
  2580                           	callstack 0
  2581  000012                     strlen@s:
  2582                           	callstack 0
  2583  000012                     ___xxtofl@val:
  2584                           	callstack 0
  2585  000012                     ___aodiv@dividend:
  2586                           	callstack 0
  2587  000012                     ___aomod@dividend:
  2588                           	callstack 0
  2589                           
  2590                           ; 8 bytes @ 0x11
  2591  000012                     	ds	1
  2592  000013                     XF_scheduleTimer@tm:
  2593                           	callstack 0
  2594  000013                     LCD_Lowlevel_Init@i:
  2595                           	callstack 0
  2596                           
  2597                           ; 4 bytes @ 0x12
  2598  000013                     	ds	1
  2599  000014                     ??_sleepSM:
  2600  000014                     ??_checkCollision:
  2601  000014                     ??_RGB2LCD:
  2602  000014                     LCD_Fill@colorH:
  2603                           	callstack 0
  2604  000014                     Paddle_init@team:
  2605                           	callstack 0
  2606  000014                     GameParameters_setBackLight@value:
  2607                           	callstack 0
  2608  000014                     GameParameters_setX@value:
  2609                           	callstack 0
  2610  000014                     GameParameters_setY@value:
  2611                           	callstack 0
  2612  000014                     LCD_SliderCreate@posY:
  2613                           	callstack 0
  2614  000014                     LCD_ButtonCreate@posY:
  2615                           	callstack 0
  2616  000014                     LCD_InButton@posX:
  2617                           	callstack 0
  2618  000014                     LCD_InSlider@posX:
  2619                           	callstack 0
  2620  000014                     LCD_DrawRect@posY1:
  2621                           	callstack 0
  2622  000014                     LCD_Read@posY:
  2623                           	callstack 0
  2624  000014                     ___awdiv@divisor:
  2625                           	callstack 0
  2626  000014                     ___awmod@divisor:
  2627                           	callstack 0
  2628  000014                     ___lwmod@divisor:
  2629                           	callstack 0
  2630  000014                     fputc@fp:
  2631                           	callstack 0
  2632  000014                     strlen@a:
  2633                           	callstack 0
  2634                           
  2635                           ; 2 bytes @ 0x13
  2636  000014                     	ds	1
  2637  000015                     LCD_Fill@colorL:
  2638                           	callstack 0
  2639  000015                     XF_scheduleTimer@ev:
  2640                           	callstack 0
  2641                           
  2642                           ; 1 bytes @ 0x14
  2643  000015                     	ds	1
  2644  000016                     ??_LCD_Read:
  2645  000016                     ??_fputc:
  2646  000016                     ??___xxtofl:
  2647  000016                     sleepSM@ev:
  2648                           	callstack 0
  2649  000016                     XF_scheduleTimer@inISR:
  2650                           	callstack 0
  2651  000016                     ___awdiv@counter:
  2652                           	callstack 0
  2653  000016                     ___awmod@counter:
  2654                           	callstack 0
  2655  000016                     ___lwmod@counter:
  2656                           	callstack 0
  2657  000016                     LCD_Fill@column:
  2658                           	callstack 0
  2659  000016                     LCD_SliderCreate@width:
  2660                           	callstack 0
  2661  000016                     LCD_ButtonCreate@width:
  2662                           	callstack 0
  2663  000016                     LCD_InButton@posY:
  2664                           	callstack 0
  2665  000016                     LCD_InSlider@posY:
  2666                           	callstack 0
  2667  000016                     LCD_DrawRect@posX2:
  2668                           	callstack 0
  2669                           
  2670                           ; 2 bytes @ 0x15
  2671  000016                     	ds	1
  2672  000017                     ??_LCD_Init:
  2673  000017                     XF_scheduleTimer@i:
  2674                           	callstack 0
  2675  000017                     ___awdiv@sign:
  2676                           	callstack 0
  2677  000017                     ___awmod@sign:
  2678                           	callstack 0
  2679                           
  2680                           ; 1 bytes @ 0x16
  2681  000017                     	ds	1
  2682  000018                     ??_LCD_InButton:
  2683  000018                     ??_LCD_InSlider:
  2684  000018                     LCD_Init@i:
  2685                           	callstack 0
  2686  000018                     XF_pushEvent@inISR:
  2687                           	callstack 0
  2688  000018                     XF_popEvent@ev:
  2689                           	callstack 0
  2690  000018                     LCD_Fill@page:
  2691                           	callstack 0
  2692  000018                     LCD_SliderCreate@height:
  2693                           	callstack 0
  2694  000018                     LCD_ButtonCreate@height:
  2695                           	callstack 0
  2696  000018                     LCD_DrawRect@posY2:
  2697                           	callstack 0
  2698  000018                     RGB2LCD@red:
  2699                           	callstack 0
  2700  000018                     LCD_Read@color:
  2701                           	callstack 0
  2702  000018                     backlightController@g:
  2703                           	callstack 0
  2704  000018                     ___awdiv@quotient:
  2705                           	callstack 0
  2706                           
  2707                           ; 2 bytes @ 0x17
  2708  000018                     	ds	1
  2709  000019                     XF_pushEvent@ev:
  2710                           	callstack 0
  2711  000019                     XF_popEvent@inISR:
  2712                           	callstack 0
  2713                           
  2714                           ; 1 bytes @ 0x18
  2715  000019                     	ds	1
  2716  00001A                     ?___wmul:
  2717                           	callstack 0
  2718  00001A                     LCD_DrawRect@fill:
  2719                           	callstack 0
  2720  00001A                     XF_pushEvent@temp:
  2721                           	callstack 0
  2722  00001A                     ___xxtofl@sign:
  2723                           	callstack 0
  2724  00001A                     LCD_SliderCreate@sldColor:
  2725                           	callstack 0
  2726  00001A                     LCD_ButtonCreate@txtColor:
  2727                           	callstack 0
  2728  00001A                     RGB2LCD@green:
  2729                           	callstack 0
  2730  00001A                     LCD_Read@temp16:
  2731                           	callstack 0
  2732  00001A                     ___wmul@multiplier:
  2733                           	callstack 0
  2734  00001A                     ___aodiv@divisor:
  2735                           	callstack 0
  2736  00001A                     ___aomod@divisor:
  2737                           	callstack 0
  2738                           
  2739                           ; 8 bytes @ 0x19
  2740  00001A                     	ds	1
  2741  00001B                     ___xxtofl@exp:
  2742                           	callstack 0
  2743  00001B                     LCD_DrawRect@color:
  2744                           	callstack 0
  2745  00001B                     fputs@s:
  2746                           	callstack 0
  2747                           
  2748                           ; 2 bytes @ 0x1A
  2749  00001B                     	ds	1
  2750  00001C                     LCD_SliderCreate@bgColor:
  2751                           	callstack 0
  2752  00001C                     LCD_ButtonCreate@bgColor:
  2753                           	callstack 0
  2754  00001C                     RGB2LCD@blue:
  2755                           	callstack 0
  2756  00001C                     ___wmul@multiplicand:
  2757                           	callstack 0
  2758  00001C                     ___xxtofl@arg:
  2759                           	callstack 0
  2760                           
  2761                           ; 4 bytes @ 0x1B
  2762  00001C                     	ds	1
  2763  00001D                     LCD_DrawRect@j:
  2764                           	callstack 0
  2765  00001D                     fputs@fp:
  2766                           	callstack 0
  2767                           
  2768                           ; 2 bytes @ 0x1C
  2769  00001D                     	ds	1
  2770  00001E                     LCD_SliderCreate@borderColor:
  2771                           	callstack 0
  2772  00001E                     LCD_ButtonCreate@textOrBmp:
  2773                           	callstack 0
  2774  00001E                     RGB2LCD@color:
  2775                           	callstack 0
  2776  00001E                     ___wmul@product:
  2777                           	callstack 0
  2778                           
  2779                           ; 2 bytes @ 0x1D
  2780  00001E                     	ds	1
  2781  00001F                     fputs@c:
  2782                           	callstack 0
  2783  00001F                     LCD_DrawRect@temp:
  2784                           	callstack 0
  2785                           
  2786                           ; 2 bytes @ 0x1E
  2787  00001F                     	ds	1
  2788  000020                     ?___lwdiv:
  2789                           	callstack 0
  2790  000020                     ?___fldiv:
  2791                           	callstack 0
  2792  000020                     LCD_SliderCreate@cursorWidth:
  2793                           	callstack 0
  2794  000020                     LCD_ButtonCreate@font:
  2795                           	callstack 0
  2796  000020                     LCD_DrawText@msg:
  2797                           	callstack 0
  2798  000020                     XF_init@i:
  2799                           	callstack 0
  2800  000020                     ___lwdiv@dividend:
  2801                           	callstack 0
  2802  000020                     fputs@i:
  2803                           	callstack 0
  2804  000020                     ___fldiv@b:
  2805                           	callstack 0
  2806                           
  2807                           ; 4 bytes @ 0x1F
  2808  000020                     	ds	1
  2809  000021                     LCD_DrawRect@colorH:
  2810                           	callstack 0
  2811                           
  2812                           ; 1 bytes @ 0x20
  2813  000021                     	ds	1
  2814  000022                     ?_pad:
  2815                           	callstack 0
  2816  000022                     LCD_DrawRect@colorL:
  2817                           	callstack 0
  2818  000022                     ___aodiv@counter:
  2819                           	callstack 0
  2820  000022                     ___aomod@counter:
  2821                           	callstack 0
  2822  000022                     LCD_SliderCreate@steps:
  2823                           	callstack 0
  2824  000022                     LCD_ButtonCreate@fpPress:
  2825                           	callstack 0
  2826  000022                     LCD_DrawText@font:
  2827                           	callstack 0
  2828  000022                     ___lwdiv@divisor:
  2829                           	callstack 0
  2830  000022                     pad@fp:
  2831                           	callstack 0
  2832                           
  2833                           ; 2 bytes @ 0x21
  2834  000022                     	ds	1
  2835  000023                     ___aodiv@sign:
  2836                           	callstack 0
  2837  000023                     ___aomod@sign:
  2838                           	callstack 0
  2839  000023                     LCD_DrawRect@i:
  2840                           	callstack 0
  2841                           
  2842                           ; 2 bytes @ 0x22
  2843  000023                     	ds	1
  2844  000024                     ?_abs:
  2845                           	callstack 0
  2846  000024                     LCD_DrawText@align:
  2847                           	callstack 0
  2848  000024                     ___lwdiv@counter:
  2849                           	callstack 0
  2850  000024                     LCD_SliderCreate@fpPress:
  2851                           	callstack 0
  2852  000024                     LCD_ButtonCreate@fpReleased:
  2853                           	callstack 0
  2854  000024                     pad@buf:
  2855                           	callstack 0
  2856  000024                     abs@a:
  2857                           	callstack 0
  2858  000024                     ___fldiv@a:
  2859                           	callstack 0
  2860  000024                     ___aodiv@quotient:
  2861                           	callstack 0
  2862                           
  2863                           ; 8 bytes @ 0x23
  2864  000024                     	ds	1
  2865  000025                     Ball_draw@b:
  2866                           	callstack 0
  2867  000025                     Paddle_addX@p:
  2868                           	callstack 0
  2869  000025                     Paddle_draw@p:
  2870                           	callstack 0
  2871  000025                     LCD_ButtonUpdate@button:
  2872                           	callstack 0
  2873  000025                     LCD_DrawText@posX:
  2874                           	callstack 0
  2875  000025                     ___lwdiv@quotient:
  2876                           	callstack 0
  2877                           
  2878                           ; 2 bytes @ 0x24
  2879  000025                     	ds	1
  2880  000026                     ??_abs:
  2881  000026                     LCD_SliderCreate@slider:
  2882                           	callstack 0
  2883  000026                     LCD_ButtonCreate@fpOut:
  2884                           	callstack 0
  2885  000026                     pad@p:
  2886                           	callstack 0
  2887                           
  2888                           ; 2 bytes @ 0x25
  2889  000026                     	ds	1
  2890  000027                     ??_Ball_draw:
  2891  000027                     ??_Paddle_draw:
  2892  000027                     ??_LCD_ButtonUpdate:
  2893  000027                     Paddle_addX@value:
  2894                           	callstack 0
  2895  000027                     LCD_SliderUpdate@slider:
  2896                           	callstack 0
  2897  000027                     LCD_DrawText@posY:
  2898                           	callstack 0
  2899  000027                     LCD_Bitmap@bmpPtr:
  2900                           	callstack 0
  2901                           
  2902                           ; 2 bytes @ 0x26
  2903  000027                     	ds	1
  2904  000028                     ??___fldiv:
  2905  000028                     ??_pad:
  2906  000028                     LCD_ButtonCreate@button:
  2907                           	callstack 0
  2908                           
  2909                           ; 2 bytes @ 0x27
  2910  000028                     	ds	1
  2911  000029                     ??_LCD_SliderUpdate:
  2912  000029                     Paddle_addX@add:
  2913                           	callstack 0
  2914  000029                     LCD_DrawText@color:
  2915                           	callstack 0
  2916  000029                     LCD_Bitmap@posX:
  2917                           	callstack 0
  2918  000029                     pad@i:
  2919                           	callstack 0
  2920                           
  2921                           ; 2 bytes @ 0x28
  2922  000029                     	ds	1
  2923  00002A                     LCD_ButtonCreate@index:
  2924                           	callstack 0
  2925                           
  2926                           ; 1 bytes @ 0x29
  2927  00002A                     	ds	1
  2928  00002B                     ??_Paddle_addX:
  2929  00002B                     GameParameters_init@s:
  2930                           	callstack 0
  2931  00002B                     LCD_ButtonUpdate@colorOut:
  2932                           	callstack 0
  2933  00002B                     LCD_DrawText@bg_color:
  2934                           	callstack 0
  2935  00002B                     LCD_Bitmap@posY:
  2936                           	callstack 0
  2937  00002B                     pad@w:
  2938                           	callstack 0
  2939                           
  2940                           ; 2 bytes @ 0x2A
  2941  00002B                     	ds	1
  2942  00002C                     ___fldiv@rem:
  2943                           	callstack 0
  2944                           
  2945                           ; 4 bytes @ 0x2B
  2946  00002C                     	ds	1
  2947  00002D                     ??_LCD_DrawText:
  2948  00002D                     ??_LCD_Bitmap:
  2949  00002D                     ?_dtoa:
  2950                           	callstack 0
  2951  00002D                     LCD_ButtonUpdate@colorIn:
  2952                           	callstack 0
  2953  00002D                     dtoa@fp:
  2954                           	callstack 0
  2955                           
  2956                           ; 2 bytes @ 0x2C
  2957  00002D                     	ds	2
  2958  00002F                     Ball_Update@b:
  2959                           	callstack 0
  2960  00002F                     LCD_SliderUpdate@x2:
  2961                           	callstack 0
  2962  00002F                     LCD_ButtonUpdate@x2:
  2963                           	callstack 0
  2964  00002F                     moovePaddle@g:
  2965                           	callstack 0
  2966  00002F                     dtoa@d:
  2967                           	callstack 0
  2968                           
  2969                           ; 8 bytes @ 0x2E
  2970  00002F                     	ds	1
  2971  000030                     ___fldiv@sign:
  2972                           	callstack 0
  2973                           
  2974                           ; 1 bytes @ 0x2F
  2975  000030                     	ds	1
  2976  000031                     ??_Ball_Update:
  2977  000031                     LCD_SliderUpdate@y1:
  2978                           	callstack 0
  2979  000031                     LCD_ButtonUpdate@y1:
  2980                           	callstack 0
  2981  000031                     ___fldiv@new_exp:
  2982                           	callstack 0
  2983                           
  2984                           ; 2 bytes @ 0x30
  2985  000031                     	ds	2
  2986  000033                     LCD_SliderUpdate@y2:
  2987                           	callstack 0
  2988  000033                     LCD_ButtonUpdate@x1:
  2989                           	callstack 0
  2990  000033                     LCD_DrawText@offset:
  2991                           	callstack 0
  2992  000033                     ___fldiv@grs:
  2993                           	callstack 0
  2994                           
  2995                           ; 4 bytes @ 0x32
  2996  000033                     	ds	2
  2997  000035                     LCD_SliderUpdate@x1:
  2998                           	callstack 0
  2999  000035                     LCD_ButtonUpdate@y2:
  3000                           	callstack 0
  3001  000035                     LCD_DrawText@yOffset:
  3002                           	callstack 0
  3003                           
  3004                           ; 2 bytes @ 0x34
  3005  000035                     	ds	2
  3006  000037                     ??_dtoa:
  3007  000037                     LCD_DrawText@fontByte:
  3008                           	callstack 0
  3009  000037                     ___fldiv@bexp:
  3010                           	callstack 0
  3011  000037                     LCD_SliderDraw@slider:
  3012                           	callstack 0
  3013  000037                     gameControllerController@g:
  3014                           	callstack 0
  3015                           
  3016                           ; 2 bytes @ 0x36
  3017  000037                     	ds	1
  3018  000038                     LCD_DrawText@fontPixel:
  3019                           	callstack 0
  3020  000038                     ___fldiv@aexp:
  3021                           	callstack 0
  3022                           
  3023                           ; 1 bytes @ 0x37
  3024  000038                     	ds	1
  3025  000039                     ??_LCD_SliderDraw:
  3026  000039                     ??_gameControllerController:
  3027  000039                     ?___fltol:
  3028                           	callstack 0
  3029  000039                     LCD_DrawText@posYEnd:
  3030                           	callstack 0
  3031  000039                     mooveBall@g:
  3032                           	callstack 0
  3033  000039                     ___fltol@f1:
  3034                           	callstack 0
  3035                           
  3036                           ; 4 bytes @ 0x38
  3037  000039                     	ds	2
  3038  00003B                     LCD_DrawText@posXEnd:
  3039                           	callstack 0
  3040  00003B                     gameControllerInit@g:
  3041                           	callstack 0
  3042  00003B                     gameControllerSM@g:
  3043                           	callstack 0
  3044                           
  3045                           ; 2 bytes @ 0x3A
  3046  00003B                     	ds	2
  3047  00003D                     ??_gameControllerSM:
  3048  00003D                     ??___fltol:
  3049  00003D                     LCD_DrawText@y:
  3050                           	callstack 0
  3051  00003D                     LCD_SliderDraw@x1:
  3052                           	callstack 0
  3053                           
  3054                           ; 2 bytes @ 0x3C
  3055  00003D                     	ds	1
  3056  00003E                     LCD_DrawText@i:
  3057                           	callstack 0
  3058                           
  3059                           ; 1 bytes @ 0x3D
  3060  00003E                     	ds	1
  3061  00003F                     ?_vfpfcnvrt:
  3062                           	callstack 0
  3063  00003F                     LCD_DrawText@tempChar:
  3064                           	callstack 0
  3065  00003F                     LCD_SliderDraw@x2:
  3066                           	callstack 0
  3067  00003F                     vfpfcnvrt@fp:
  3068                           	callstack 0
  3069                           
  3070                           ; 2 bytes @ 0x3E
  3071  00003F                     	ds	1
  3072  000040                     LCD_DrawText@x:
  3073                           	callstack 0
  3074                           
  3075                           ; 1 bytes @ 0x3F
  3076  000040                     	ds	1
  3077  000041                     LCD_DrawText@width:
  3078                           	callstack 0
  3079  000041                     gameControllerSM@ev:
  3080                           	callstack 0
  3081  000041                     ___fltol@sign1:
  3082                           	callstack 0
  3083  000041                     LCD_SliderDraw@y1:
  3084                           	callstack 0
  3085  000041                     vfpfcnvrt@fmt:
  3086                           	callstack 0
  3087                           
  3088                           ; 2 bytes @ 0x40
  3089  000041                     	ds	1
  3090  000042                     ___fltol@exp1:
  3091                           	callstack 0
  3092                           
  3093                           ; 1 bytes @ 0x41
  3094  000042                     	ds	1
  3095  000043                     LCD_SliderDraw@y2:
  3096                           	callstack 0
  3097  000043                     vfpfcnvrt@ap:
  3098                           	callstack 0
  3099                           
  3100                           ; 2 bytes @ 0x42
  3101  000043                     	ds	2
  3102  000045                     ??_displayController:
  3103  000045                     ??_vfpfcnvrt:
  3104                           
  3105                           ; 1 bytes @ 0x44
  3106  000045                     	ds	2
  3107  000047                     
  3108                           ; 1 bytes @ 0x46
  3109 ;;
  3110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3111 ;;
  3112 ;; *************** function _main *****************
  3113 ;; Defined at:
  3114 ;;		line 49 in file "main.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3128 ;;      Params:         0       0       0       0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0
  3131 ;;      Totals:         0       0       0       0       0       0       0
  3132 ;;Total ram usage:        0 bytes
  3133 ;; Hardware stack levels required when called: 15
  3134 ;; This function calls:
  3135 ;;		_Factory_exec
  3136 ;;		_Factory_init
  3137 ;; This function is called by:
  3138 ;;		Startup code after reset
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text0
  3143  005F4E                     __ptext0:
  3144                           	callstack 0
  3145  005F4E                     _main:
  3146                           	callstack 16
  3147  005F4E                     
  3148                           ;main.c: 51:     Factory_init();
  3149  005F4E  EC1F  F028         	call	_Factory_init	;wreg free
  3150  005F52                     l776:
  3151                           
  3152                           ;main.c: 53:     {;main.c: 54:         Factory_exec();
  3153  005F52  EC66  F02D         	call	_Factory_exec	;wreg free
  3154  005F56  EFA9  F02F         	goto	l776
  3155  005F5A  EF62  F000         	goto	start
  3156  005F5E                     __end_of_main:
  3157                           	callstack 0
  3158                           
  3159 ;; *************** function _Factory_init *****************
  3160 ;; Defined at:
  3161 ;;		line 11 in file "class/factory.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3175 ;;      Params:         0       0       0       0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0
  3177 ;;      Temps:          0       2       0       0       0       0       0
  3178 ;;      Totals:         0       2       0       0       0       0       0
  3179 ;;Total ram usage:        2 bytes
  3180 ;; Hardware stack levels used: 1
  3181 ;; Hardware stack levels required when called: 11
  3182 ;; This function calls:
  3183 ;;		_GameParameters_init
  3184 ;;		_LCD_DrawText
  3185 ;;		_LCD_Fill
  3186 ;;		_LCD_Init
  3187 ;;		_XF_init
  3188 ;;		_sleepInit
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text1
  3195  00503E                     __ptext1:
  3196                           	callstack 0
  3197  00503E                     _Factory_init:
  3198                           	callstack 19
  3199  00503E                     
  3200                           ;class/factory.c: 14:     PLLEN = 1;
  3201  00503E  8C9B               	bsf	3995,6,c	;volatile
  3202  005040                     
  3203                           ;class/factory.c: 15:     OSCCON = 0b01110000;
  3204  005040  0E70               	movlw	112
  3205  005042  6ED3               	movwf	211,c	;volatile
  3206  005044                     
  3207                           ;class/factory.c: 16:     _delay((unsigned long)((100)*(64000000L/4000.0)));
  3208  005044  0E09               	movlw	9
  3209  005046  0100               	movlb	0	; () banked
  3210  005048  6FA5               	movwf	(??_Factory_init+1)& (0+255),b
  3211  00504A  0E1E               	movlw	30
  3212  00504C  6FA4               	movwf	??_Factory_init& (0+255),b
  3213  00504E  0EE4               	movlw	228
  3214  005050                     u7777:
  3215  005050  2EE8               	decfsz	wreg,f,c
  3216  005052  D7FE               	bra	u7777
  3217  005054  2FA4               	decfsz	??_Factory_init& (0+255),f,b
  3218  005056  D7FC               	bra	u7777
  3219  005058  2FA5               	decfsz	(??_Factory_init+1)& (0+255),f,b
  3220  00505A  D7FA               	bra	u7777
  3221  00505C  F000               	nop	
  3222  00505E                     
  3223                           ;class/factory.c: 18:     LCD_Init();
  3224  00505E  EC10  F017         	call	_LCD_Init	;wreg free
  3225  005062                     
  3226                           ;class/factory.c: 19:     LCD_Fill(0b0000000000011111);
  3227  005062  0E00               	movlw	0
  3228  005064  6E13               	movwf	(LCD_Fill@color+1)^0,c
  3229  005066  0E1F               	movlw	31
  3230  005068  6E12               	movwf	LCD_Fill@color^0,c
  3231  00506A  EC03  F027         	call	_LCD_Fill	;wreg free
  3232  00506E                     
  3233                           ;class/factory.c: 20:     LCD_DrawText("MenuStart",&arialNarrow_12ptFontInfo,A_CENTER,50
      +                          ,50,0b0000000000000000,0b1111111111111111);
  3234  00506E  0EBE               	movlw	low STR_1
  3235  005070  6E20               	movwf	LCD_DrawText@msg^0,c
  3236  005072  0E7F               	movlw	high STR_1
  3237  005074  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  3238  005076  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  3239  005078  6E22               	movwf	LCD_DrawText@font^0,c
  3240  00507A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  3241  00507C  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  3242  00507E  0E02               	movlw	2
  3243  005080  6E24               	movwf	LCD_DrawText@align^0,c
  3244  005082  0E00               	movlw	0
  3245  005084  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  3246  005086  0E32               	movlw	50
  3247  005088  6E25               	movwf	LCD_DrawText@posX^0,c
  3248  00508A  0E00               	movlw	0
  3249  00508C  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  3250  00508E  0E32               	movlw	50
  3251  005090  6E27               	movwf	LCD_DrawText@posY^0,c
  3252  005092  0E00               	movlw	0
  3253  005094  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  3254  005096  0E00               	movlw	0
  3255  005098  6E29               	movwf	LCD_DrawText@color^0,c
  3256  00509A  0EFF               	movlw	255
  3257  00509C  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  3258  00509E  682B               	setf	LCD_DrawText@bg_color^0,c
  3259  0050A0  EC5B  F00E         	call	_LCD_DrawText	;wreg free
  3260  0050A4                     
  3261                           ;class/factory.c: 25:     GIE=1;
  3262  0050A4  8EF2               	bsf	4082,7,c	;volatile
  3263  0050A6                     
  3264                           ;class/factory.c: 26:     INT1IE=0;
  3265  0050A6  96F0               	bcf	4080,3,c	;volatile
  3266  0050A8                     
  3267                           ;class/factory.c: 29:     T0CON=0b10000110;
  3268  0050A8  0E86               	movlw	134
  3269  0050AA  6ED5               	movwf	213,c	;volatile
  3270  0050AC                     
  3271                           ;class/factory.c: 30:     TMR0H=0xFB;
  3272  0050AC  0EFB               	movlw	251
  3273  0050AE  6ED7               	movwf	215,c	;volatile
  3274  0050B0                     
  3275                           ;class/factory.c: 31:     TMR0L=0x1D;
  3276  0050B0  0E1D               	movlw	29
  3277  0050B2  6ED6               	movwf	214,c	;volatile
  3278  0050B4                     
  3279                           ;class/factory.c: 32:     TMR0IE=1;
  3280  0050B4  8AF2               	bsf	4082,5,c	;volatile
  3281  0050B6                     
  3282                           ;class/factory.c: 35:     TRISC1=0;
  3283  0050B6  9294               	bcf	3988,1,c	;volatile
  3284  0050B8                     
  3285                           ;class/factory.c: 36:     PR2=255;
  3286  0050B8  68BB               	setf	187,c	;volatile
  3287  0050BA                     
  3288                           ;class/factory.c: 37:     CCP2CONbits.CCP2M = 0xC;
  3289  0050BA  5066               	movf	102,w,c	;volatile
  3290  0050BC  0BF0               	andlw	-16
  3291  0050BE  090C               	iorlw	12
  3292  0050C0  6E66               	movwf	102,c	;volatile
  3293  0050C2                     
  3294                           ;class/factory.c: 38:     CCPR2L = 255;
  3295  0050C2  6867               	setf	103,c	;volatile
  3296  0050C4                     
  3297                           ;class/factory.c: 39:     CCP2CONbits.DC2B = 0;
  3298  0050C4  0ECF               	movlw	-49
  3299  0050C6  1666               	andwf	102,f,c	;volatile
  3300  0050C8                     
  3301                           ;class/factory.c: 40:     TMR2IF=0;
  3302  0050C8  929E               	bcf	3998,1,c	;volatile
  3303  0050CA                     
  3304                           ;class/factory.c: 41:     T2CONbits.T2CKPS0 = 1;
  3305  0050CA  80BA               	bsf	186,0,c	;volatile
  3306  0050CC                     
  3307                           ;class/factory.c: 42:     T2CONbits.T2CKPS1 = 0;
  3308  0050CC  92BA               	bcf	186,1,c	;volatile
  3309  0050CE                     
  3310                           ;class/factory.c: 43:     T2CONbits.TMR2ON = 1;
  3311  0050CE  84BA               	bsf	186,2,c	;volatile
  3312  0050D0                     
  3313                           ;class/factory.c: 45:     ADCON2=0b10100110;
  3314  0050D0  0EA6               	movlw	166
  3315  0050D2  6EC0               	movwf	192,c	;volatile
  3316  0050D4                     
  3317                           ;class/factory.c: 48:     XF_init();
  3318  0050D4  ECC3  F027         	call	_XF_init	;wreg free
  3319  0050D8                     
  3320                           ;class/factory.c: 49:     GameParameters_init(&g1);
  3321  0050D8  0E00               	movlw	low _g1
  3322  0050DA  6E2B               	movwf	GameParameters_init@s^0,c
  3323  0050DC  0E01               	movlw	high _g1
  3324  0050DE  6E2C               	movwf	(GameParameters_init@s+1)^0,c
  3325  0050E0  EC4D  F012         	call	_GameParameters_init	;wreg free
  3326  0050E4                     
  3327                           ;class/factory.c: 50:     sleepInit(&g1);
  3328  0050E4  0E00               	movlw	low _g1
  3329  0050E6  0100               	movlb	0	; () banked
  3330  0050E8  6FA2               	movwf	sleepInit@g& (0+255),b
  3331  0050EA  0E01               	movlw	high _g1
  3332  0050EC  6FA3               	movwf	(sleepInit@g+1)& (0+255),b
  3333  0050EE  ECFB  F02E         	call	_sleepInit	;wreg free
  3334  0050F2  0012               	return		;funcret
  3335  0050F4                     __end_of_Factory_init:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function _sleepInit *****************
  3339 ;; Defined at:
  3340 ;;		line 11 in file "stateMachine/sleepSM.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  g               2   66[BANK0 ] PTR struct GameParameter
  3343 ;;		 -> g1(201), 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3355 ;;      Params:         0       2       0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0
  3358 ;;      Totals:         0       2       0       0       0       0       0
  3359 ;;Total ram usage:        2 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 10
  3362 ;; This function calls:
  3363 ;;		_displayInit
  3364 ;;		_gameControllerInit
  3365 ;;		_sleepController
  3366 ;;		_touchScreenInit
  3367 ;; This function is called by:
  3368 ;;		_Factory_init
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text2
  3373  005DF6                     __ptext2:
  3374                           	callstack 0
  3375  005DF6                     _sleepInit:
  3376                           	callstack 19
  3377  005DF6                     
  3378                           ;stateMachine/sleepSM.c: 11: void sleepInit(GameParameters* g);stateMachine/sleepSM.c: 1
      +                          2: {;stateMachine/sleepSM.c: 13:     sleepState=WAKEUP;
  3379  005DF6  0E00               	movlw	0
  3380  005DF8  0100               	movlb	0	; () banked
  3381  005DFA  6FDF               	movwf	_sleepState& (0+255),b
  3382  005DFC                     
  3383                           ; BSR set to: 0
  3384                           ;stateMachine/sleepSM.c: 14:     displayInit(g);
  3385  005DFC  C0A2  F0A0         	movff	sleepInit@g,displayInit@g
  3386  005E00  C0A3  F0A1         	movff	sleepInit@g+1,displayInit@g+1
  3387  005E04  EC94  F02F         	call	_displayInit	;wreg free
  3388  005E08                     
  3389                           ;stateMachine/sleepSM.c: 15:     gameControllerInit(g);
  3390  005E08  C0A2  F03B         	movff	sleepInit@g,gameControllerInit@g
  3391  005E0C  C0A3  F03C         	movff	sleepInit@g+1,gameControllerInit@g+1
  3392  005E10  EC9E  F02F         	call	_gameControllerInit	;wreg free
  3393  005E14                     
  3394                           ;stateMachine/sleepSM.c: 16:     touchScreenInit();
  3395  005E14  ECAF  F02F         	call	_touchScreenInit	;wreg free
  3396  005E18                     
  3397                           ;stateMachine/sleepSM.c: 17:     sleepController();
  3398  005E18  ECB2  F02E         	call	_sleepController	;wreg free
  3399  005E1C  0012               	return		;funcret
  3400  005E1E                     __end_of_sleepInit:
  3401                           	callstack 0
  3402                           
  3403 ;; *************** function _touchScreenInit *****************
  3404 ;; Defined at:
  3405 ;;		line 17 in file "stateMachine/touchScreenSM.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3419 ;;      Params:         0       0       0       0       0       0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0
  3422 ;;      Totals:         0       0       0       0       0       0       0
  3423 ;;Total ram usage:        0 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 5
  3426 ;; This function calls:
  3427 ;;		_configTouch
  3428 ;; This function is called by:
  3429 ;;		_sleepInit
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text3
  3434  005F5E                     __ptext3:
  3435                           	callstack 0
  3436  005F5E                     _touchScreenInit:
  3437                           	callstack 23
  3438  005F5E                     
  3439                           ;stateMachine/touchScreenSM.c: 19:     touchScreenState=WAITING;
  3440  005F5E  0E00               	movlw	0
  3441  005F60  0100               	movlb	0	; () banked
  3442  005F62  6FDE               	movwf	_touchScreenState& (0+255),b
  3443  005F64                     
  3444                           ; BSR set to: 0
  3445                           ;stateMachine/touchScreenSM.c: 20:     configTouch();
  3446  005F64  EC44  F02F         	call	_configTouch	;wreg free
  3447  005F68  0012               	return		;funcret
  3448  005F6A                     __end_of_touchScreenInit:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _gameControllerInit *****************
  3452 ;; Defined at:
  3453 ;;		line 15 in file "stateMachine/gameController.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  g               2   58[COMRAM] PTR struct GameParameter
  3456 ;;		 -> g1(201), 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3468 ;;      Params:         2       0       0       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0
  3471 ;;      Totals:         2       0       0       0       0       0       0
  3472 ;;Total ram usage:        2 bytes
  3473 ;; Hardware stack levels used: 1
  3474 ;; Hardware stack levels required when called: 7
  3475 ;; This function calls:
  3476 ;;		_gameControllerController
  3477 ;; This function is called by:
  3478 ;;		_sleepInit
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text4
  3483  005F3C                     __ptext4:
  3484                           	callstack 0
  3485  005F3C                     _gameControllerInit:
  3486                           	callstack 21
  3487  005F3C                     
  3488                           ;stateMachine/gameController.c: 15: void gameControllerInit(GameParameters* g);stateMach
      +                          ine/gameController.c: 16: {;stateMachine/gameController.c: 17:     gameControllerState=N
      +                          OGAME;
  3489  005F3C  0E00               	movlw	0
  3490  005F3E  6E4D               	movwf	_gameControllerState^0,c
  3491  005F40                     
  3492                           ;stateMachine/gameController.c: 18:     gameControllerController(g);
  3493  005F40  C03B  F037         	movff	gameControllerInit@g,gameControllerController@g
  3494  005F44  C03C  F038         	movff	gameControllerInit@g+1,gameControllerController@g+1
  3495  005F48  ECB5  F01A         	call	_gameControllerController	;wreg free
  3496  005F4C  0012               	return		;funcret
  3497  005F4E                     __end_of_gameControllerInit:
  3498                           	callstack 0
  3499                           
  3500 ;; *************** function _displayInit *****************
  3501 ;; Defined at:
  3502 ;;		line 13 in file "stateMachine/display.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  g               2   64[BANK0 ] PTR struct GameParameter
  3505 ;;		 -> g1(201), 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3517 ;;      Params:         0       2       0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0
  3520 ;;      Totals:         0       2       0       0       0       0       0
  3521 ;;Total ram usage:        2 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 9
  3524 ;; This function calls:
  3525 ;;		_displayController
  3526 ;; This function is called by:
  3527 ;;		_sleepInit
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text5
  3532  005F28                     __ptext5:
  3533                           	callstack 0
  3534  005F28                     _displayInit:
  3535                           	callstack 19
  3536  005F28                     
  3537                           ;stateMachine/display.c: 13: void displayInit(GameParameters* g);stateMachine/display.c:
      +                           14: {;stateMachine/display.c: 15:     displayState=WELCOME;
  3538  005F28  0E00               	movlw	0
  3539  005F2A  0100               	movlb	0	; () banked
  3540  005F2C  6FDD               	movwf	_displayState& (0+255),b
  3541  005F2E                     
  3542                           ; BSR set to: 0
  3543                           ;stateMachine/display.c: 16:     displayController(g);
  3544  005F2E  C0A0  F09E         	movff	displayInit@g,displayController@g
  3545  005F32  C0A1  F09F         	movff	displayInit@g+1,displayController@g+1
  3546  005F36  EC07  F02C         	call	_displayController	;wreg free
  3547  005F3A  0012               	return		;funcret
  3548  005F3C                     __end_of_displayInit:
  3549                           	callstack 0
  3550                           
  3551 ;; *************** function _XF_init *****************
  3552 ;; Defined at:
  3553 ;;		line 25 in file "xf/xf.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  i               2   31[COMRAM] int 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3567 ;;      Params:         0       0       0       0       0       0       0
  3568 ;;      Locals:         2       0       0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0
  3570 ;;      Totals:         2       0       0       0       0       0       0
  3571 ;;Total ram usage:        2 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 5
  3574 ;; This function calls:
  3575 ;;		___wmul
  3576 ;; This function is called by:
  3577 ;;		_Factory_init
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text6
  3582  004F86                     __ptext6:
  3583                           	callstack 0
  3584  004F86                     _XF_init:
  3585                           	callstack 24
  3586  004F86                     
  3587                           ;xf/xf.c: 27:     int i;;xf/xf.c: 28:     for (i=0; i<12; i++)
  3588  004F86  0E00               	movlw	0
  3589  004F88  6E21               	movwf	(XF_init@i+1)^0,c
  3590  004F8A  0E00               	movlw	0
  3591  004F8C  6E20               	movwf	XF_init@i^0,c
  3592  004F8E                     l9996:
  3593                           
  3594                           ;xf/xf.c: 29:     {;xf/xf.c: 30:         theXF.eventQueue[i] = NULLEVENT;
  3595  004F8E  0ECD               	movlw	low (_theXF+24)
  3596  004F90  2420               	addwf	XF_init@i^0,w,c
  3597  004F92  6ED9               	movwf	fsr2l,c
  3598  004F94  0E00               	movlw	high (_theXF+24)
  3599  004F96  2021               	addwfc	(XF_init@i+1)^0,w,c
  3600  004F98  6EDA               	movwf	fsr2h,c
  3601  004F9A  0E00               	movlw	0
  3602  004F9C  6EDF               	movwf	indf2,c
  3603  004F9E                     
  3604                           ;xf/xf.c: 31:     }
  3605  004F9E  4A20               	infsnz	XF_init@i^0,f,c
  3606  004FA0  2A21               	incf	(XF_init@i+1)^0,f,c
  3607  004FA2  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3608  004FA4  EFDD  F027         	goto	u7561
  3609  004FA8  5021               	movf	(XF_init@i+1)^0,w,c
  3610  004FAA  E109               	bnz	u7560
  3611  004FAC  0E0C               	movlw	12
  3612  004FAE  5C20               	subwf	XF_init@i^0,w,c
  3613  004FB0  A0D8               	btfss	status,0,c
  3614  004FB2  EFDD  F027         	goto	u7561
  3615  004FB6  EFDF  F027         	goto	u7560
  3616  004FBA                     u7561:
  3617  004FBA  EFC7  F027         	goto	l9996
  3618  004FBE                     u7560:
  3619  004FBE                     
  3620                           ;xf/xf.c: 33:     for (i=0; i<8; i++)
  3621  004FBE  0E00               	movlw	0
  3622  004FC0  6E21               	movwf	(XF_init@i+1)^0,c
  3623  004FC2  0E00               	movlw	0
  3624  004FC4  6E20               	movwf	XF_init@i^0,c
  3625  004FC6                     l10008:
  3626                           
  3627                           ;xf/xf.c: 34:     {;xf/xf.c: 35:         theXF.timerList[i].tm = 0;
  3628  004FC6  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3629  004FCA  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3630  004FCE  0E00               	movlw	0
  3631  004FD0  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3632  004FD2  0E03               	movlw	3
  3633  004FD4  6E1C               	movwf	___wmul@multiplicand^0,c
  3634  004FD6  EC0F  F02F         	call	___wmul	;wreg free
  3635  004FDA  0EB5               	movlw	low _theXF
  3636  004FDC  241A               	addwf	?___wmul^0,w,c
  3637  004FDE  6ED9               	movwf	fsr2l,c
  3638  004FE0  0E00               	movlw	high _theXF
  3639  004FE2  201B               	addwfc	(?___wmul+1)^0,w,c
  3640  004FE4  6EDA               	movwf	fsr2h,c
  3641  004FE6  0E00               	movlw	0
  3642  004FE8  6EDE               	movwf	postinc2,c
  3643  004FEA  0E00               	movlw	0
  3644  004FEC  6EDD               	movwf	postdec2,c
  3645                           
  3646                           ;xf/xf.c: 36:         theXF.timerList[i].ev = NULLEVENT;
  3647  004FEE  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3648  004FF2  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3649  004FF6  0E00               	movlw	0
  3650  004FF8  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3651  004FFA  0E03               	movlw	3
  3652  004FFC  6E1C               	movwf	___wmul@multiplicand^0,c
  3653  004FFE  EC0F  F02F         	call	___wmul	;wreg free
  3654  005002  0EB7               	movlw	low (_theXF+2)
  3655  005004  241A               	addwf	?___wmul^0,w,c
  3656  005006  6ED9               	movwf	fsr2l,c
  3657  005008  0E00               	movlw	high (_theXF+2)
  3658  00500A  201B               	addwfc	(?___wmul+1)^0,w,c
  3659  00500C  6EDA               	movwf	fsr2h,c
  3660  00500E  0E00               	movlw	0
  3661  005010  6EDF               	movwf	indf2,c
  3662  005012                     
  3663                           ;xf/xf.c: 37:     }
  3664  005012  4A20               	infsnz	XF_init@i^0,f,c
  3665  005014  2A21               	incf	(XF_init@i+1)^0,f,c
  3666  005016  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3667  005018  EF17  F028         	goto	u7571
  3668  00501C  5021               	movf	(XF_init@i+1)^0,w,c
  3669  00501E  E109               	bnz	u7570
  3670  005020  0E08               	movlw	8
  3671  005022  5C20               	subwf	XF_init@i^0,w,c
  3672  005024  A0D8               	btfss	status,0,c
  3673  005026  EF17  F028         	goto	u7571
  3674  00502A  EF19  F028         	goto	u7570
  3675  00502E                     u7571:
  3676  00502E  EFE3  F027         	goto	l10008
  3677  005032                     u7570:
  3678  005032                     
  3679                           ;xf/xf.c: 38:     theXF.in = 0;
  3680  005032  0E00               	movlw	0
  3681  005034  0100               	movlb	0	; () banked
  3682  005036  6FD9               	movwf	(_theXF+36)& (0+255),b
  3683                           
  3684                           ;xf/xf.c: 39:     theXF.out = 0;
  3685  005038  0E00               	movlw	0
  3686  00503A  6FDA               	movwf	(_theXF+37)& (0+255),b
  3687  00503C                     
  3688                           ; BSR set to: 0
  3689  00503C  0012               	return		;funcret
  3690  00503E                     __end_of_XF_init:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _LCD_Init *****************
  3694 ;; Defined at:
  3695 ;;		line 20 in file "libraries/lcd_highlevel.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  i               1   23[COMRAM] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3709 ;;      Params:         0       0       0       0       0       0       0
  3710 ;;      Locals:         1       0       0       0       0       0       0
  3711 ;;      Temps:          1       0       0       0       0       0       0
  3712 ;;      Totals:         2       0       0       0       0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 5
  3716 ;; This function calls:
  3717 ;;		_LCD_Lowlevel_Init
  3718 ;; This function is called by:
  3719 ;;		_Factory_init
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text7
  3724  002E20                     __ptext7:
  3725                           	callstack 0
  3726  002E20                     _LCD_Init:
  3727                           	callstack 24
  3728  002E20                     
  3729                           ;libraries/lcd_highlevel.c: 22:   uint8_t i;;libraries/lcd_highlevel.c: 86:   LCD_Lowlev
      +                          el_Init();
  3730  002E20  EC7B  F029         	call	_LCD_Lowlevel_Init	;wreg free
  3731  002E24                     
  3732                           ;libraries/lcd_highlevel.c: 87:   PORTA = 0x11; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3733  002E24  0E11               	movlw	17
  3734  002E26  6E80               	movwf	128,c	;volatile
  3735  002E28  988B               	bcf	3979,4,c	;volatile
  3736  002E2A  968B               	bcf	3979,3,c	;volatile
  3737  002E2C  868B               	bsf	3979,3,c	;volatile
  3738  002E2E  888B               	bsf	3979,4,c	;volatile
  3739  002E30                     
  3740                           ;libraries/lcd_highlevel.c: 88:   for(i=0;i<10;i++)
  3741  002E30  0E00               	movlw	0
  3742  002E32  6E18               	movwf	LCD_Init@i^0,c
  3743  002E34                     l3908:
  3744                           
  3745                           ;libraries/lcd_highlevel.c: 89:   {;libraries/lcd_highlevel.c: 90:     _delay((unsigned 
      +                          long)((10)*(64000000L/4000.0)));
  3746  002E34  0ED0               	movlw	208
  3747  002E36  6E17               	movwf	??_LCD_Init^0,c
  3748  002E38  0ECA               	movlw	202
  3749  002E3A                     u7787:
  3750  002E3A  2EE8               	decfsz	wreg,f,c
  3751  002E3C  D7FE               	bra	u7787
  3752  002E3E  2E17               	decfsz	??_LCD_Init^0,f,c
  3753  002E40  D7FC               	bra	u7787
  3754  002E42                     
  3755                           ;libraries/lcd_highlevel.c: 91:   }
  3756  002E42  2A18               	incf	LCD_Init@i^0,f,c
  3757  002E44  0E09               	movlw	9
  3758  002E46  6418               	cpfsgt	LCD_Init@i^0,c
  3759  002E48  EF28  F017         	goto	u2341
  3760  002E4C  EF2A  F017         	goto	u2340
  3761  002E50                     u2341:
  3762  002E50  EF1A  F017         	goto	l3908
  3763  002E54                     u2340:
  3764  002E54                     
  3765                           ;libraries/lcd_highlevel.c: 92:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3766  002E54  0E36               	movlw	54
  3767  002E56  6E80               	movwf	128,c	;volatile
  3768  002E58  988B               	bcf	3979,4,c	;volatile
  3769  002E5A  968B               	bcf	3979,3,c	;volatile
  3770  002E5C  868B               	bsf	3979,3,c	;volatile
  3771  002E5E  888B               	bsf	3979,4,c	;volatile
  3772                           
  3773                           ;libraries/lcd_highlevel.c: 93:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
  3774  002E60  0E00               	movlw	0
  3775  002E62  6E80               	movwf	128,c	;volatile
  3776  002E64  968B               	bcf	3979,3,c	;volatile
  3777  002E66  868B               	bsf	3979,3,c	;volatile
  3778                           
  3779                           ;libraries/lcd_highlevel.c: 94:   PORTA = 0x3A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3780  002E68  0E3A               	movlw	58
  3781  002E6A  6E80               	movwf	128,c	;volatile
  3782  002E6C  988B               	bcf	3979,4,c	;volatile
  3783  002E6E  968B               	bcf	3979,3,c	;volatile
  3784  002E70  868B               	bsf	3979,3,c	;volatile
  3785  002E72  888B               	bsf	3979,4,c	;volatile
  3786                           
  3787                           ;libraries/lcd_highlevel.c: 95:   PORTA = 0x55; LATC3 = 0; LATC3 = 1;;
  3788  002E74  0E55               	movlw	85
  3789  002E76  6E80               	movwf	128,c	;volatile
  3790  002E78  968B               	bcf	3979,3,c	;volatile
  3791  002E7A  868B               	bsf	3979,3,c	;volatile
  3792                           
  3793                           ;libraries/lcd_highlevel.c: 96:   PORTA = 0xB2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3794  002E7C  0EB2               	movlw	178
  3795  002E7E  6E80               	movwf	128,c	;volatile
  3796  002E80  988B               	bcf	3979,4,c	;volatile
  3797  002E82  968B               	bcf	3979,3,c	;volatile
  3798  002E84  868B               	bsf	3979,3,c	;volatile
  3799  002E86  888B               	bsf	3979,4,c	;volatile
  3800                           
  3801                           ;libraries/lcd_highlevel.c: 97:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3802  002E88  0E0C               	movlw	12
  3803  002E8A  6E80               	movwf	128,c	;volatile
  3804  002E8C  968B               	bcf	3979,3,c	;volatile
  3805  002E8E  868B               	bsf	3979,3,c	;volatile
  3806                           
  3807                           ;libraries/lcd_highlevel.c: 98:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3808  002E90  0E0C               	movlw	12
  3809  002E92  6E80               	movwf	128,c	;volatile
  3810  002E94  968B               	bcf	3979,3,c	;volatile
  3811  002E96  868B               	bsf	3979,3,c	;volatile
  3812                           
  3813                           ;libraries/lcd_highlevel.c: 99:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3814  002E98  0E33               	movlw	51
  3815  002E9A  6E80               	movwf	128,c	;volatile
  3816  002E9C  968B               	bcf	3979,3,c	;volatile
  3817  002E9E  868B               	bsf	3979,3,c	;volatile
  3818                           
  3819                           ;libraries/lcd_highlevel.c: 100:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3820  002EA0  0E33               	movlw	51
  3821  002EA2  6E80               	movwf	128,c	;volatile
  3822  002EA4  968B               	bcf	3979,3,c	;volatile
  3823  002EA6  868B               	bsf	3979,3,c	;volatile
  3824                           
  3825                           ;libraries/lcd_highlevel.c: 101:   PORTA = 0xB7; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3826  002EA8  0EB7               	movlw	183
  3827  002EAA  6E80               	movwf	128,c	;volatile
  3828  002EAC  988B               	bcf	3979,4,c	;volatile
  3829  002EAE  968B               	bcf	3979,3,c	;volatile
  3830  002EB0  868B               	bsf	3979,3,c	;volatile
  3831  002EB2  888B               	bsf	3979,4,c	;volatile
  3832                           
  3833                           ;libraries/lcd_highlevel.c: 102:   PORTA = 0x35; LATC3 = 0; LATC3 = 1;;
  3834  002EB4  0E35               	movlw	53
  3835  002EB6  6E80               	movwf	128,c	;volatile
  3836  002EB8  968B               	bcf	3979,3,c	;volatile
  3837  002EBA  868B               	bsf	3979,3,c	;volatile
  3838                           
  3839                           ;libraries/lcd_highlevel.c: 103:   PORTA = 0xBB; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3840  002EBC  0EBB               	movlw	187
  3841  002EBE  6E80               	movwf	128,c	;volatile
  3842  002EC0  988B               	bcf	3979,4,c	;volatile
  3843  002EC2  968B               	bcf	3979,3,c	;volatile
  3844  002EC4  868B               	bsf	3979,3,c	;volatile
  3845  002EC6  888B               	bsf	3979,4,c	;volatile
  3846                           
  3847                           ;libraries/lcd_highlevel.c: 104:   PORTA = 0x2B; LATC3 = 0; LATC3 = 1;;
  3848  002EC8  0E2B               	movlw	43
  3849  002ECA  6E80               	movwf	128,c	;volatile
  3850  002ECC  968B               	bcf	3979,3,c	;volatile
  3851  002ECE  868B               	bsf	3979,3,c	;volatile
  3852                           
  3853                           ;libraries/lcd_highlevel.c: 105:   PORTA = 0xC0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3854  002ED0  0EC0               	movlw	192
  3855  002ED2  6E80               	movwf	128,c	;volatile
  3856  002ED4  988B               	bcf	3979,4,c	;volatile
  3857  002ED6  968B               	bcf	3979,3,c	;volatile
  3858  002ED8  868B               	bsf	3979,3,c	;volatile
  3859  002EDA  888B               	bsf	3979,4,c	;volatile
  3860                           
  3861                           ;libraries/lcd_highlevel.c: 106:   PORTA = 0x2C; LATC3 = 0; LATC3 = 1;;
  3862  002EDC  0E2C               	movlw	44
  3863  002EDE  6E80               	movwf	128,c	;volatile
  3864  002EE0  968B               	bcf	3979,3,c	;volatile
  3865  002EE2  868B               	bsf	3979,3,c	;volatile
  3866                           
  3867                           ;libraries/lcd_highlevel.c: 107:   PORTA = 0xC2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3868  002EE4  0EC2               	movlw	194
  3869  002EE6  6E80               	movwf	128,c	;volatile
  3870  002EE8  988B               	bcf	3979,4,c	;volatile
  3871  002EEA  968B               	bcf	3979,3,c	;volatile
  3872  002EEC  868B               	bsf	3979,3,c	;volatile
  3873  002EEE  888B               	bsf	3979,4,c	;volatile
  3874                           
  3875                           ;libraries/lcd_highlevel.c: 108:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  3876  002EF0  0E01               	movlw	1
  3877  002EF2  6E80               	movwf	128,c	;volatile
  3878  002EF4  968B               	bcf	3979,3,c	;volatile
  3879  002EF6  868B               	bsf	3979,3,c	;volatile
  3880  002EF8                     
  3881                           ;libraries/lcd_highlevel.c: 109:   PORTA = 0xFF; LATC3 = 0; LATC3 = 1;;
  3882  002EF8  6880               	setf	128,c	;volatile
  3883  002EFA  968B               	bcf	3979,3,c	;volatile
  3884  002EFC  868B               	bsf	3979,3,c	;volatile
  3885                           
  3886                           ;libraries/lcd_highlevel.c: 110:   PORTA = 0XC3; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3887  002EFE  0EC3               	movlw	195
  3888  002F00  6E80               	movwf	128,c	;volatile
  3889  002F02  988B               	bcf	3979,4,c	;volatile
  3890  002F04  968B               	bcf	3979,3,c	;volatile
  3891  002F06  868B               	bsf	3979,3,c	;volatile
  3892  002F08  888B               	bsf	3979,4,c	;volatile
  3893                           
  3894                           ;libraries/lcd_highlevel.c: 111:   PORTA = 0x11; LATC3 = 0; LATC3 = 1;;
  3895  002F0A  0E11               	movlw	17
  3896  002F0C  6E80               	movwf	128,c	;volatile
  3897  002F0E  968B               	bcf	3979,3,c	;volatile
  3898  002F10  868B               	bsf	3979,3,c	;volatile
  3899                           
  3900                           ;libraries/lcd_highlevel.c: 112:   PORTA = 0xC4; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3901  002F12  0EC4               	movlw	196
  3902  002F14  6E80               	movwf	128,c	;volatile
  3903  002F16  988B               	bcf	3979,4,c	;volatile
  3904  002F18  968B               	bcf	3979,3,c	;volatile
  3905  002F1A  868B               	bsf	3979,3,c	;volatile
  3906  002F1C  888B               	bsf	3979,4,c	;volatile
  3907                           
  3908                           ;libraries/lcd_highlevel.c: 113:   PORTA = 0x20; LATC3 = 0; LATC3 = 1;;
  3909  002F1E  0E20               	movlw	32
  3910  002F20  6E80               	movwf	128,c	;volatile
  3911  002F22  968B               	bcf	3979,3,c	;volatile
  3912  002F24  868B               	bsf	3979,3,c	;volatile
  3913                           
  3914                           ;libraries/lcd_highlevel.c: 114:   PORTA = 0xC6; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3915  002F26  0EC6               	movlw	198
  3916  002F28  6E80               	movwf	128,c	;volatile
  3917  002F2A  988B               	bcf	3979,4,c	;volatile
  3918  002F2C  968B               	bcf	3979,3,c	;volatile
  3919  002F2E  868B               	bsf	3979,3,c	;volatile
  3920  002F30  888B               	bsf	3979,4,c	;volatile
  3921                           
  3922                           ;libraries/lcd_highlevel.c: 115:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  3923  002F32  0E09               	movlw	9
  3924  002F34  6E80               	movwf	128,c	;volatile
  3925  002F36  968B               	bcf	3979,3,c	;volatile
  3926  002F38  868B               	bsf	3979,3,c	;volatile
  3927                           
  3928                           ;libraries/lcd_highlevel.c: 116:   PORTA = 0xD0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3929  002F3A  0ED0               	movlw	208
  3930  002F3C  6E80               	movwf	128,c	;volatile
  3931  002F3E  988B               	bcf	3979,4,c	;volatile
  3932  002F40  968B               	bcf	3979,3,c	;volatile
  3933  002F42  868B               	bsf	3979,3,c	;volatile
  3934  002F44  888B               	bsf	3979,4,c	;volatile
  3935                           
  3936                           ;libraries/lcd_highlevel.c: 117:   PORTA = 0xA4; LATC3 = 0; LATC3 = 1;;
  3937  002F46  0EA4               	movlw	164
  3938  002F48  6E80               	movwf	128,c	;volatile
  3939  002F4A  968B               	bcf	3979,3,c	;volatile
  3940  002F4C  868B               	bsf	3979,3,c	;volatile
  3941                           
  3942                           ;libraries/lcd_highlevel.c: 118:   PORTA = 0xA1; LATC3 = 0; LATC3 = 1;;
  3943  002F4E  0EA1               	movlw	161
  3944  002F50  6E80               	movwf	128,c	;volatile
  3945  002F52  968B               	bcf	3979,3,c	;volatile
  3946  002F54  868B               	bsf	3979,3,c	;volatile
  3947                           
  3948                           ;libraries/lcd_highlevel.c: 119:   PORTA = 0xE0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3949  002F56  0EE0               	movlw	224
  3950  002F58  6E80               	movwf	128,c	;volatile
  3951  002F5A  988B               	bcf	3979,4,c	;volatile
  3952  002F5C  968B               	bcf	3979,3,c	;volatile
  3953  002F5E  868B               	bsf	3979,3,c	;volatile
  3954  002F60  888B               	bsf	3979,4,c	;volatile
  3955                           
  3956                           ;libraries/lcd_highlevel.c: 120:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  3957  002F62  0ED0               	movlw	208
  3958  002F64  6E80               	movwf	128,c	;volatile
  3959  002F66  968B               	bcf	3979,3,c	;volatile
  3960  002F68  868B               	bsf	3979,3,c	;volatile
  3961                           
  3962                           ;libraries/lcd_highlevel.c: 121:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  3963  002F6A  0E00               	movlw	0
  3964  002F6C  6E80               	movwf	128,c	;volatile
  3965  002F6E  968B               	bcf	3979,3,c	;volatile
  3966  002F70  868B               	bsf	3979,3,c	;volatile
  3967                           
  3968                           ;libraries/lcd_highlevel.c: 122:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  3969  002F72  0E05               	movlw	5
  3970  002F74  6E80               	movwf	128,c	;volatile
  3971  002F76  968B               	bcf	3979,3,c	;volatile
  3972  002F78  868B               	bsf	3979,3,c	;volatile
  3973                           
  3974                           ;libraries/lcd_highlevel.c: 123:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  3975  002F7A  0E0E               	movlw	14
  3976  002F7C  6E80               	movwf	128,c	;volatile
  3977  002F7E  968B               	bcf	3979,3,c	;volatile
  3978  002F80  868B               	bsf	3979,3,c	;volatile
  3979                           
  3980                           ;libraries/lcd_highlevel.c: 124:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  3981  002F82  0E15               	movlw	21
  3982  002F84  6E80               	movwf	128,c	;volatile
  3983  002F86  968B               	bcf	3979,3,c	;volatile
  3984  002F88  868B               	bsf	3979,3,c	;volatile
  3985                           
  3986                           ;libraries/lcd_highlevel.c: 125:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  3987  002F8A  0E0D               	movlw	13
  3988  002F8C  6E80               	movwf	128,c	;volatile
  3989  002F8E  968B               	bcf	3979,3,c	;volatile
  3990  002F90  868B               	bsf	3979,3,c	;volatile
  3991                           
  3992                           ;libraries/lcd_highlevel.c: 126:   PORTA = 0x37; LATC3 = 0; LATC3 = 1;;
  3993  002F92  0E37               	movlw	55
  3994  002F94  6E80               	movwf	128,c	;volatile
  3995  002F96  968B               	bcf	3979,3,c	;volatile
  3996  002F98  868B               	bsf	3979,3,c	;volatile
  3997                           
  3998                           ;libraries/lcd_highlevel.c: 127:   PORTA = 0x43; LATC3 = 0; LATC3 = 1;;
  3999  002F9A  0E43               	movlw	67
  4000  002F9C  6E80               	movwf	128,c	;volatile
  4001  002F9E  968B               	bcf	3979,3,c	;volatile
  4002  002FA0  868B               	bsf	3979,3,c	;volatile
  4003                           
  4004                           ;libraries/lcd_highlevel.c: 128:   PORTA = 0x47; LATC3 = 0; LATC3 = 1;;
  4005  002FA2  0E47               	movlw	71
  4006  002FA4  6E80               	movwf	128,c	;volatile
  4007  002FA6  968B               	bcf	3979,3,c	;volatile
  4008  002FA8  868B               	bsf	3979,3,c	;volatile
  4009                           
  4010                           ;libraries/lcd_highlevel.c: 129:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4011  002FAA  0E09               	movlw	9
  4012  002FAC  6E80               	movwf	128,c	;volatile
  4013  002FAE  968B               	bcf	3979,3,c	;volatile
  4014  002FB0  868B               	bsf	3979,3,c	;volatile
  4015                           
  4016                           ;libraries/lcd_highlevel.c: 130:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4017  002FB2  0E15               	movlw	21
  4018  002FB4  6E80               	movwf	128,c	;volatile
  4019  002FB6  968B               	bcf	3979,3,c	;volatile
  4020  002FB8  868B               	bsf	3979,3,c	;volatile
  4021                           
  4022                           ;libraries/lcd_highlevel.c: 131:   PORTA = 0x12; LATC3 = 0; LATC3 = 1;;
  4023  002FBA  0E12               	movlw	18
  4024  002FBC  6E80               	movwf	128,c	;volatile
  4025  002FBE  968B               	bcf	3979,3,c	;volatile
  4026  002FC0  868B               	bsf	3979,3,c	;volatile
  4027                           
  4028                           ;libraries/lcd_highlevel.c: 132:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4029  002FC2  0E16               	movlw	22
  4030  002FC4  6E80               	movwf	128,c	;volatile
  4031  002FC6  968B               	bcf	3979,3,c	;volatile
  4032  002FC8  868B               	bsf	3979,3,c	;volatile
  4033                           
  4034                           ;libraries/lcd_highlevel.c: 133:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4035  002FCA  0E19               	movlw	25
  4036  002FCC  6E80               	movwf	128,c	;volatile
  4037  002FCE  968B               	bcf	3979,3,c	;volatile
  4038  002FD0  868B               	bsf	3979,3,c	;volatile
  4039                           
  4040                           ;libraries/lcd_highlevel.c: 134:   PORTA = 0xE1; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4041  002FD2  0EE1               	movlw	225
  4042  002FD4  6E80               	movwf	128,c	;volatile
  4043  002FD6  988B               	bcf	3979,4,c	;volatile
  4044  002FD8  968B               	bcf	3979,3,c	;volatile
  4045  002FDA  868B               	bsf	3979,3,c	;volatile
  4046  002FDC  888B               	bsf	3979,4,c	;volatile
  4047                           
  4048                           ;libraries/lcd_highlevel.c: 135:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4049  002FDE  0ED0               	movlw	208
  4050  002FE0  6E80               	movwf	128,c	;volatile
  4051  002FE2  968B               	bcf	3979,3,c	;volatile
  4052  002FE4  868B               	bsf	3979,3,c	;volatile
  4053                           
  4054                           ;libraries/lcd_highlevel.c: 136:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4055  002FE6  0E00               	movlw	0
  4056  002FE8  6E80               	movwf	128,c	;volatile
  4057  002FEA  968B               	bcf	3979,3,c	;volatile
  4058  002FEC  868B               	bsf	3979,3,c	;volatile
  4059                           
  4060                           ;libraries/lcd_highlevel.c: 137:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4061  002FEE  0E05               	movlw	5
  4062  002FF0  6E80               	movwf	128,c	;volatile
  4063  002FF2  968B               	bcf	3979,3,c	;volatile
  4064  002FF4  868B               	bsf	3979,3,c	;volatile
  4065                           
  4066                           ;libraries/lcd_highlevel.c: 138:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4067  002FF6  0E0D               	movlw	13
  4068  002FF8  6E80               	movwf	128,c	;volatile
  4069  002FFA  968B               	bcf	3979,3,c	;volatile
  4070  002FFC  868B               	bsf	3979,3,c	;volatile
  4071                           
  4072                           ;libraries/lcd_highlevel.c: 139:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  4073  002FFE  0E0C               	movlw	12
  4074  003000  6E80               	movwf	128,c	;volatile
  4075  003002  968B               	bcf	3979,3,c	;volatile
  4076  003004  868B               	bsf	3979,3,c	;volatile
  4077                           
  4078                           ;libraries/lcd_highlevel.c: 140:   PORTA = 0x06; LATC3 = 0; LATC3 = 1;;
  4079  003006  0E06               	movlw	6
  4080  003008  6E80               	movwf	128,c	;volatile
  4081  00300A  968B               	bcf	3979,3,c	;volatile
  4082  00300C  868B               	bsf	3979,3,c	;volatile
  4083                           
  4084                           ;libraries/lcd_highlevel.c: 141:   PORTA = 0x2D; LATC3 = 0; LATC3 = 1;;
  4085  00300E  0E2D               	movlw	45
  4086  003010  6E80               	movwf	128,c	;volatile
  4087  003012  968B               	bcf	3979,3,c	;volatile
  4088  003014  868B               	bsf	3979,3,c	;volatile
  4089                           
  4090                           ;libraries/lcd_highlevel.c: 142:   PORTA = 0x44; LATC3 = 0; LATC3 = 1;;
  4091  003016  0E44               	movlw	68
  4092  003018  6E80               	movwf	128,c	;volatile
  4093  00301A  968B               	bcf	3979,3,c	;volatile
  4094  00301C  868B               	bsf	3979,3,c	;volatile
  4095                           
  4096                           ;libraries/lcd_highlevel.c: 143:   PORTA = 0x40; LATC3 = 0; LATC3 = 1;;
  4097  00301E  0E40               	movlw	64
  4098  003020  6E80               	movwf	128,c	;volatile
  4099  003022  968B               	bcf	3979,3,c	;volatile
  4100  003024  868B               	bsf	3979,3,c	;volatile
  4101                           
  4102                           ;libraries/lcd_highlevel.c: 144:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4103  003026  0E0E               	movlw	14
  4104  003028  6E80               	movwf	128,c	;volatile
  4105  00302A  968B               	bcf	3979,3,c	;volatile
  4106  00302C  868B               	bsf	3979,3,c	;volatile
  4107                           
  4108                           ;libraries/lcd_highlevel.c: 145:   PORTA = 0x1C; LATC3 = 0; LATC3 = 1;;
  4109  00302E  0E1C               	movlw	28
  4110  003030  6E80               	movwf	128,c	;volatile
  4111  003032  968B               	bcf	3979,3,c	;volatile
  4112  003034  868B               	bsf	3979,3,c	;volatile
  4113                           
  4114                           ;libraries/lcd_highlevel.c: 146:   PORTA = 0x18; LATC3 = 0; LATC3 = 1;;
  4115  003036  0E18               	movlw	24
  4116  003038  6E80               	movwf	128,c	;volatile
  4117  00303A  968B               	bcf	3979,3,c	;volatile
  4118  00303C  868B               	bsf	3979,3,c	;volatile
  4119                           
  4120                           ;libraries/lcd_highlevel.c: 147:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4121  00303E  0E16               	movlw	22
  4122  003040  6E80               	movwf	128,c	;volatile
  4123  003042  968B               	bcf	3979,3,c	;volatile
  4124  003044  868B               	bsf	3979,3,c	;volatile
  4125                           
  4126                           ;libraries/lcd_highlevel.c: 148:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4127  003046  0E19               	movlw	25
  4128  003048  6E80               	movwf	128,c	;volatile
  4129  00304A  968B               	bcf	3979,3,c	;volatile
  4130  00304C  868B               	bsf	3979,3,c	;volatile
  4131                           
  4132                           ;libraries/lcd_highlevel.c: 149:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4133  00304E  0E2A               	movlw	42
  4134  003050  6E80               	movwf	128,c	;volatile
  4135  003052  988B               	bcf	3979,4,c	;volatile
  4136  003054  968B               	bcf	3979,3,c	;volatile
  4137  003056  868B               	bsf	3979,3,c	;volatile
  4138  003058  888B               	bsf	3979,4,c	;volatile
  4139                           
  4140                           ;libraries/lcd_highlevel.c: 150:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4141  00305A  0E00               	movlw	0
  4142  00305C  6E80               	movwf	128,c	;volatile
  4143  00305E  968B               	bcf	3979,3,c	;volatile
  4144  003060  868B               	bsf	3979,3,c	;volatile
  4145                           
  4146                           ;libraries/lcd_highlevel.c: 151:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4147  003062  0E00               	movlw	0
  4148  003064  6E80               	movwf	128,c	;volatile
  4149  003066  968B               	bcf	3979,3,c	;volatile
  4150  003068  868B               	bsf	3979,3,c	;volatile
  4151                           
  4152                           ;libraries/lcd_highlevel.c: 152:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4153  00306A  0E00               	movlw	0
  4154  00306C  6E80               	movwf	128,c	;volatile
  4155  00306E  968B               	bcf	3979,3,c	;volatile
  4156  003070  868B               	bsf	3979,3,c	;volatile
  4157                           
  4158                           ;libraries/lcd_highlevel.c: 153:   PORTA = 0xEF; LATC3 = 0; LATC3 = 1;;
  4159  003072  0EEF               	movlw	239
  4160  003074  6E80               	movwf	128,c	;volatile
  4161  003076  968B               	bcf	3979,3,c	;volatile
  4162  003078  868B               	bsf	3979,3,c	;volatile
  4163                           
  4164                           ;libraries/lcd_highlevel.c: 154:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4165  00307A  0E2B               	movlw	43
  4166  00307C  6E80               	movwf	128,c	;volatile
  4167  00307E  988B               	bcf	3979,4,c	;volatile
  4168  003080  968B               	bcf	3979,3,c	;volatile
  4169  003082  868B               	bsf	3979,3,c	;volatile
  4170  003084  888B               	bsf	3979,4,c	;volatile
  4171                           
  4172                           ;libraries/lcd_highlevel.c: 155:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4173  003086  0E00               	movlw	0
  4174  003088  6E80               	movwf	128,c	;volatile
  4175  00308A  968B               	bcf	3979,3,c	;volatile
  4176  00308C  868B               	bsf	3979,3,c	;volatile
  4177                           
  4178                           ;libraries/lcd_highlevel.c: 156:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4179  00308E  0E00               	movlw	0
  4180  003090  6E80               	movwf	128,c	;volatile
  4181  003092  968B               	bcf	3979,3,c	;volatile
  4182  003094  868B               	bsf	3979,3,c	;volatile
  4183                           
  4184                           ;libraries/lcd_highlevel.c: 157:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4185  003096  0E01               	movlw	1
  4186  003098  6E80               	movwf	128,c	;volatile
  4187  00309A  968B               	bcf	3979,3,c	;volatile
  4188  00309C  868B               	bsf	3979,3,c	;volatile
  4189                           
  4190                           ;libraries/lcd_highlevel.c: 158:   PORTA = 0x3F; LATC3 = 0; LATC3 = 1;;
  4191  00309E  0E3F               	movlw	63
  4192  0030A0  6E80               	movwf	128,c	;volatile
  4193  0030A2  968B               	bcf	3979,3,c	;volatile
  4194  0030A4  868B               	bsf	3979,3,c	;volatile
  4195                           
  4196                           ;libraries/lcd_highlevel.c: 159:   PORTA = 0x26; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4197  0030A6  0E26               	movlw	38
  4198  0030A8  6E80               	movwf	128,c	;volatile
  4199  0030AA  988B               	bcf	3979,4,c	;volatile
  4200  0030AC  968B               	bcf	3979,3,c	;volatile
  4201  0030AE  868B               	bsf	3979,3,c	;volatile
  4202  0030B0  888B               	bsf	3979,4,c	;volatile
  4203                           
  4204                           ;libraries/lcd_highlevel.c: 160:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4205  0030B2  0E01               	movlw	1
  4206  0030B4  6E80               	movwf	128,c	;volatile
  4207  0030B6  968B               	bcf	3979,3,c	;volatile
  4208  0030B8  868B               	bsf	3979,3,c	;volatile
  4209                           
  4210                           ;libraries/lcd_highlevel.c: 161:   PORTA = 0x29; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4211  0030BA  0E29               	movlw	41
  4212  0030BC  6E80               	movwf	128,c	;volatile
  4213  0030BE  988B               	bcf	3979,4,c	;volatile
  4214  0030C0  968B               	bcf	3979,3,c	;volatile
  4215  0030C2  868B               	bsf	3979,3,c	;volatile
  4216  0030C4  888B               	bsf	3979,4,c	;volatile
  4217  0030C6  0012               	return		;funcret
  4218  0030C8                     __end_of_LCD_Init:
  4219                           	callstack 0
  4220                           
  4221 ;; *************** function _LCD_Lowlevel_Init *****************
  4222 ;; Defined at:
  4223 ;;		line 17 in file "libraries/lcd_lowlevel.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  i               4   18[COMRAM] unsigned long 
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4237 ;;      Params:         0       0       0       0       0       0       0
  4238 ;;      Locals:         4       0       0       0       0       0       0
  4239 ;;      Temps:          1       0       0       0       0       0       0
  4240 ;;      Totals:         5       0       0       0       0       0       0
  4241 ;;Total ram usage:        5 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 4
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_LCD_Init
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text8
  4252  0052F6                     __ptext8:
  4253                           	callstack 0
  4254  0052F6                     _LCD_Lowlevel_Init:
  4255                           	callstack 24
  4256  0052F6                     
  4257                           ;libraries/lcd_lowlevel.c: 19:   uint32_t i;;libraries/lcd_lowlevel.c: 20:   TRISC5 = 0;
  4258  0052F6  9A94               	bcf	3988,5,c	;volatile
  4259                           
  4260                           ;libraries/lcd_lowlevel.c: 21:   TRISC2 = 0;
  4261  0052F8  9494               	bcf	3988,2,c	;volatile
  4262                           
  4263                           ;libraries/lcd_lowlevel.c: 22:   TRISC3 = 0;
  4264  0052FA  9694               	bcf	3988,3,c	;volatile
  4265                           
  4266                           ;libraries/lcd_lowlevel.c: 23:   TRISC4 = 0;
  4267  0052FC  9894               	bcf	3988,4,c	;volatile
  4268  0052FE                     
  4269                           ;libraries/lcd_lowlevel.c: 25:   TRISA = 0x00;
  4270  0052FE  0E00               	movlw	0
  4271  005300  6E92               	movwf	146,c	;volatile
  4272  005302                     
  4273                           ;libraries/lcd_lowlevel.c: 28:  LATC5 = 0;
  4274  005302  9A8B               	bcf	3979,5,c	;volatile
  4275  005304                     
  4276                           ;libraries/lcd_lowlevel.c: 29:  LATC2 = 1;
  4277  005304  848B               	bsf	3979,2,c	;volatile
  4278  005306                     
  4279                           ;libraries/lcd_lowlevel.c: 30:  LATC3 = 1;
  4280  005306  868B               	bsf	3979,3,c	;volatile
  4281  005308                     
  4282                           ;libraries/lcd_lowlevel.c: 31:  LATC4 = 1;
  4283  005308  888B               	bsf	3979,4,c	;volatile
  4284                           
  4285                           ;libraries/lcd_lowlevel.c: 33:   for(i=0;i<12;i++)
  4286  00530A  0E00               	movlw	0
  4287  00530C  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4288  00530E  0E00               	movlw	0
  4289  005310  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4290  005312  0E00               	movlw	0
  4291  005314  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4292  005316  0E00               	movlw	0
  4293  005318  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4294  00531A                     l3744:
  4295                           
  4296                           ;libraries/lcd_lowlevel.c: 34:   {;libraries/lcd_lowlevel.c: 35:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4297  00531A  0ED0               	movlw	208
  4298  00531C  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4299  00531E  0ECA               	movlw	202
  4300  005320                     u7797:
  4301  005320  2EE8               	decfsz	wreg,f,c
  4302  005322  D7FE               	bra	u7797
  4303  005324  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4304  005326  D7FC               	bra	u7797
  4305  005328                     
  4306                           ;libraries/lcd_lowlevel.c: 36:   }
  4307  005328  0E01               	movlw	1
  4308  00532A  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4309  00532C  0E00               	movlw	0
  4310  00532E  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4311  005330  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4312  005332  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4313  005334  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4314  005336  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4315  005338  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4316  00533A  E109               	bnz	u2170
  4317  00533C  0E0C               	movlw	12
  4318  00533E  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4319  005340  A0D8               	btfss	status,0,c
  4320  005342  EFA5  F029         	goto	u2171
  4321  005346  EFA7  F029         	goto	u2170
  4322  00534A                     u2171:
  4323  00534A  EF8D  F029         	goto	l3744
  4324  00534E                     u2170:
  4325  00534E                     
  4326                           ;libraries/lcd_lowlevel.c: 38:   for(i=0;i<12;i++)
  4327  00534E  0E00               	movlw	0
  4328  005350  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4329  005352  0E00               	movlw	0
  4330  005354  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4331  005356  0E00               	movlw	0
  4332  005358  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4333  00535A  0E00               	movlw	0
  4334  00535C  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4335  00535E                     l3756:
  4336                           
  4337                           ;libraries/lcd_lowlevel.c: 39:   {;libraries/lcd_lowlevel.c: 40:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4338  00535E  0ED0               	movlw	208
  4339  005360  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4340  005362  0ECA               	movlw	202
  4341  005364                     u7807:
  4342  005364  2EE8               	decfsz	wreg,f,c
  4343  005366  D7FE               	bra	u7807
  4344  005368  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4345  00536A  D7FC               	bra	u7807
  4346  00536C                     
  4347                           ;libraries/lcd_lowlevel.c: 41:   }
  4348  00536C  0E01               	movlw	1
  4349  00536E  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4350  005370  0E00               	movlw	0
  4351  005372  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4352  005374  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4353  005376  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4354  005378  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4355  00537A  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4356  00537C  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4357  00537E  E109               	bnz	u2180
  4358  005380  0E0C               	movlw	12
  4359  005382  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4360  005384  A0D8               	btfss	status,0,c
  4361  005386  EFC7  F029         	goto	u2181
  4362  00538A  EFC9  F029         	goto	u2180
  4363  00538E                     u2181:
  4364  00538E  EFAF  F029         	goto	l3756
  4365  005392                     u2180:
  4366  005392  0012               	return		;funcret
  4367  005394                     __end_of_LCD_Lowlevel_Init:
  4368                           	callstack 0
  4369                           
  4370 ;; *************** function _GameParameters_init *****************
  4371 ;; Defined at:
  4372 ;;		line 3 in file "class/gameParameters.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  s               2   42[COMRAM] PTR struct GameParameter
  4375 ;;		 -> g1(201), 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4387 ;;      Params:         2       0       0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0
  4390 ;;      Totals:         2       0       0       0       0       0       0
  4391 ;;Total ram usage:        2 bytes
  4392 ;; Hardware stack levels used: 1
  4393 ;; Hardware stack levels required when called: 5
  4394 ;; This function calls:
  4395 ;;		_Ball_init
  4396 ;;		_LCD_ButtonCreate
  4397 ;;		_LCD_SliderCreate
  4398 ;;		_Paddle_init
  4399 ;; This function is called by:
  4400 ;;		_Factory_init
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text9
  4405  00249A                     __ptext9:
  4406                           	callstack 0
  4407  00249A                     _GameParameters_init:
  4408                           	callstack 24
  4409  00249A                     
  4410                           ;class/gameParameters.c: 3: void GameParameters_init(struct GameParameters* s);class/gam
      +                          eParameters.c: 4: {;class/gameParameters.c: 5:     s->backlight = 11;
  4411  00249A  C02B  FFD9         	movff	GameParameters_init@s,fsr2l
  4412  00249E  C02C  FFDA         	movff	GameParameters_init@s+1,fsr2h
  4413  0024A2  0E0B               	movlw	11
  4414  0024A4  6EDE               	movwf	postinc2,c
  4415  0024A6  0E00               	movlw	0
  4416  0024A8  6EDD               	movwf	postdec2,c
  4417  0024AA                     
  4418                           ;class/gameParameters.c: 6:     CCPR2L = 255;
  4419  0024AA  6867               	setf	103,c	;volatile
  4420  0024AC                     
  4421                           ;class/gameParameters.c: 7:     s->player = 0;
  4422  0024AC  EE20 F002          	lfsr	2,2
  4423  0024B0  502B               	movf	GameParameters_init@s^0,w,c
  4424  0024B2  26D9               	addwf	fsr2l,f,c
  4425  0024B4  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4426  0024B6  22DA               	addwfc	fsr2h,f,c
  4427  0024B8  0E00               	movlw	0
  4428  0024BA  6EDE               	movwf	postinc2,c
  4429  0024BC  0E00               	movlw	0
  4430  0024BE  6EDD               	movwf	postdec2,c
  4431  0024C0                     
  4432                           ;class/gameParameters.c: 8:     s->x=0;
  4433  0024C0  EE20 F004          	lfsr	2,4
  4434  0024C4  502B               	movf	GameParameters_init@s^0,w,c
  4435  0024C6  26D9               	addwf	fsr2l,f,c
  4436  0024C8  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4437  0024CA  22DA               	addwfc	fsr2h,f,c
  4438  0024CC  0E00               	movlw	0
  4439  0024CE  6EDE               	movwf	postinc2,c
  4440  0024D0  0E00               	movlw	0
  4441  0024D2  6EDD               	movwf	postdec2,c
  4442  0024D4                     
  4443                           ;class/gameParameters.c: 9:     s->y=0;
  4444  0024D4  EE20 F006          	lfsr	2,6
  4445  0024D8  502B               	movf	GameParameters_init@s^0,w,c
  4446  0024DA  26D9               	addwf	fsr2l,f,c
  4447  0024DC  502C               	movf	(GameParameters_init@s+1)^0,w,c
  4448  0024DE  22DA               	addwfc	fsr2h,f,c
  4449  0024E0  0E00               	movlw	0
  4450  0024E2  6EDE               	movwf	postinc2,c
  4451  0024E4  0E00               	movlw	0
  4452  0024E6  6EDD               	movwf	postdec2,c
  4453  0024E8                     
  4454                           ;class/gameParameters.c: 10:     Ball_init(&(s->b));
  4455  0024E8  0EB1               	movlw	177
  4456  0024EA  242B               	addwf	GameParameters_init@s^0,w,c
  4457  0024EC  6E12               	movwf	Ball_init@b^0,c
  4458  0024EE  0E00               	movlw	0
  4459  0024F0  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4460  0024F2  6E13               	movwf	(Ball_init@b+1)^0,c
  4461  0024F4  ECE2  F02D         	call	_Ball_init	;wreg free
  4462  0024F8                     
  4463                           ;class/gameParameters.c: 11:     Paddle_init(&(s->p1),0);
  4464  0024F8  0EB9               	movlw	185
  4465  0024FA  242B               	addwf	GameParameters_init@s^0,w,c
  4466  0024FC  6E12               	movwf	Paddle_init@p^0,c
  4467  0024FE  0E00               	movlw	0
  4468  002500  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4469  002502  6E13               	movwf	(Paddle_init@p+1)^0,c
  4470  002504  0E00               	movlw	0
  4471  002506  6E15               	movwf	(Paddle_init@team+1)^0,c
  4472  002508  0E00               	movlw	0
  4473  00250A  6E14               	movwf	Paddle_init@team^0,c
  4474  00250C  EC59  F02A         	call	_Paddle_init	;wreg free
  4475  002510                     
  4476                           ;class/gameParameters.c: 12:     Paddle_init(&(s->p2),1);
  4477  002510  0EBF               	movlw	191
  4478  002512  242B               	addwf	GameParameters_init@s^0,w,c
  4479  002514  6E12               	movwf	Paddle_init@p^0,c
  4480  002516  0E00               	movlw	0
  4481  002518  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4482  00251A  6E13               	movwf	(Paddle_init@p+1)^0,c
  4483  00251C  0E00               	movlw	0
  4484  00251E  6E15               	movwf	(Paddle_init@team+1)^0,c
  4485  002520  0E01               	movlw	1
  4486  002522  6E14               	movwf	Paddle_init@team^0,c
  4487  002524  EC59  F02A         	call	_Paddle_init	;wreg free
  4488  002528                     
  4489                           ;class/gameParameters.c: 13:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"Parametres",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s
      +                          ->btnParam),1);
  4490  002528  0E00               	movlw	0
  4491  00252A  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4492  00252C  0E82               	movlw	130
  4493  00252E  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4494  002530  0E00               	movlw	0
  4495  002532  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4496  002534  0E32               	movlw	50
  4497  002536  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4498  002538  0E00               	movlw	0
  4499  00253A  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4500  00253C  0E5A               	movlw	90
  4501  00253E  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4502  002540  0E00               	movlw	0
  4503  002542  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4504  002544  0E14               	movlw	20
  4505  002546  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4506  002548  0EFF               	movlw	255
  4507  00254A  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4508  00254C  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4509  00254E  0E00               	movlw	0
  4510  002550  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4511  002552  0E00               	movlw	0
  4512  002554  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4513  002556  0EB3               	movlw	low STR_2
  4514  002558  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4515  00255A  0E7F               	movlw	high STR_2
  4516  00255C  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4517  00255E  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4518  002560  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4519  002562  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4520  002564  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4521  002566  0E00               	movlw	0
  4522  002568  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4523  00256A  0E00               	movlw	0
  4524  00256C  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4525  00256E  0E00               	movlw	0
  4526  002570  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4527  002572  0E00               	movlw	0
  4528  002574  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4529  002576  0E00               	movlw	0
  4530  002578  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4531  00257A  0E00               	movlw	0
  4532  00257C  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4533  00257E  0E08               	movlw	8
  4534  002580  242B               	addwf	GameParameters_init@s^0,w,c
  4535  002582  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4536  002584  0E00               	movlw	0
  4537  002586  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4538  002588  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4539  00258A  0E01               	movlw	1
  4540  00258C  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4541  00258E  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4542  002592                     
  4543                           ;class/gameParameters.c: 14:     LCD_ButtonCreate(10,250,70,20,0b1111111111111111,0b0000
      +                          000000000000,"1 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->
      +                          btnOnePlayer),2);
  4544  002592  0E00               	movlw	0
  4545  002594  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4546  002596  0E0A               	movlw	10
  4547  002598  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4548  00259A  0E00               	movlw	0
  4549  00259C  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4550  00259E  0EFA               	movlw	250
  4551  0025A0  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4552  0025A2  0E00               	movlw	0
  4553  0025A4  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4554  0025A6  0E46               	movlw	70
  4555  0025A8  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4556  0025AA  0E00               	movlw	0
  4557  0025AC  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4558  0025AE  0E14               	movlw	20
  4559  0025B0  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4560  0025B2  0EFF               	movlw	255
  4561  0025B4  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4562  0025B6  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4563  0025B8  0E00               	movlw	0
  4564  0025BA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4565  0025BC  0E00               	movlw	0
  4566  0025BE  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4567  0025C0  0EC8               	movlw	low STR_3
  4568  0025C2  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4569  0025C4  0E7F               	movlw	high STR_3
  4570  0025C6  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4571  0025C8  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4572  0025CA  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4573  0025CC  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4574  0025CE  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4575  0025D0  0E00               	movlw	0
  4576  0025D2  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4577  0025D4  0E00               	movlw	0
  4578  0025D6  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4579  0025D8  0E00               	movlw	0
  4580  0025DA  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4581  0025DC  0E00               	movlw	0
  4582  0025DE  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4583  0025E0  0E00               	movlw	0
  4584  0025E2  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4585  0025E4  0E00               	movlw	0
  4586  0025E6  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4587  0025E8  0E20               	movlw	32
  4588  0025EA  242B               	addwf	GameParameters_init@s^0,w,c
  4589  0025EC  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4590  0025EE  0E00               	movlw	0
  4591  0025F0  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4592  0025F2  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4593  0025F4  0E02               	movlw	2
  4594  0025F6  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4595  0025F8  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4596  0025FC                     
  4597                           ;class/gameParameters.c: 15:     LCD_ButtonCreate(150,250,70,20,0b1111111111111111,0b000
      +                          0000000000000,"2 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnTwoPlayer),3);
  4598  0025FC  0E00               	movlw	0
  4599  0025FE  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4600  002600  0E96               	movlw	150
  4601  002602  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4602  002604  0E00               	movlw	0
  4603  002606  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4604  002608  0EFA               	movlw	250
  4605  00260A  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4606  00260C  0E00               	movlw	0
  4607  00260E  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4608  002610  0E46               	movlw	70
  4609  002612  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4610  002614  0E00               	movlw	0
  4611  002616  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4612  002618  0E14               	movlw	20
  4613  00261A  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4614  00261C  0EFF               	movlw	255
  4615  00261E  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4616  002620  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4617  002622  0E00               	movlw	0
  4618  002624  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4619  002626  0E00               	movlw	0
  4620  002628  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4621  00262A  0ED1               	movlw	low STR_4
  4622  00262C  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4623  00262E  0E7F               	movlw	high STR_4
  4624  002630  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4625  002632  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4626  002634  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4627  002636  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4628  002638  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4629  00263A  0E00               	movlw	0
  4630  00263C  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4631  00263E  0E00               	movlw	0
  4632  002640  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4633  002642  0E00               	movlw	0
  4634  002644  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4635  002646  0E00               	movlw	0
  4636  002648  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4637  00264A  0E00               	movlw	0
  4638  00264C  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4639  00264E  0E00               	movlw	0
  4640  002650  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4641  002652  0E38               	movlw	56
  4642  002654  242B               	addwf	GameParameters_init@s^0,w,c
  4643  002656  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4644  002658  0E00               	movlw	0
  4645  00265A  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4646  00265C  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4647  00265E  0E03               	movlw	3
  4648  002660  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4649  002662  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4650  002666                     
  4651                           ;class/gameParameters.c: 16:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"QUITTER",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->b
      +                          tnLeaveParam),4);
  4652  002666  0E00               	movlw	0
  4653  002668  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4654  00266A  0E82               	movlw	130
  4655  00266C  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4656  00266E  0E00               	movlw	0
  4657  002670  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4658  002672  0E32               	movlw	50
  4659  002674  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4660  002676  0E00               	movlw	0
  4661  002678  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4662  00267A  0E5A               	movlw	90
  4663  00267C  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4664  00267E  0E00               	movlw	0
  4665  002680  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4666  002682  0E14               	movlw	20
  4667  002684  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4668  002686  0EFF               	movlw	255
  4669  002688  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4670  00268A  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  4671  00268C  0E00               	movlw	0
  4672  00268E  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4673  002690  0E00               	movlw	0
  4674  002692  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  4675  002694  0EE2               	movlw	low STR_5
  4676  002696  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4677  002698  0E7F               	movlw	high STR_5
  4678  00269A  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4679  00269C  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4680  00269E  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4681  0026A0  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4682  0026A2  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4683  0026A4  0E00               	movlw	0
  4684  0026A6  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4685  0026A8  0E00               	movlw	0
  4686  0026AA  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4687  0026AC  0E00               	movlw	0
  4688  0026AE  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4689  0026B0  0E00               	movlw	0
  4690  0026B2  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4691  0026B4  0E00               	movlw	0
  4692  0026B6  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4693  0026B8  0E00               	movlw	0
  4694  0026BA  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4695  0026BC  0E50               	movlw	80
  4696  0026BE  242B               	addwf	GameParameters_init@s^0,w,c
  4697  0026C0  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4698  0026C2  0E00               	movlw	0
  4699  0026C4  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4700  0026C6  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4701  0026C8  0E04               	movlw	4
  4702  0026CA  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4703  0026CC  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4704  0026D0                     
  4705                           ;class/gameParameters.c: 17:     LCD_ButtonCreate(10,220,70,50,0b0000000000000000,0b1111
      +                          111111111111,"<--",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnLe
      +                          ft),5);
  4706  0026D0  0E00               	movlw	0
  4707  0026D2  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4708  0026D4  0E0A               	movlw	10
  4709  0026D6  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4710  0026D8  0E00               	movlw	0
  4711  0026DA  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4712  0026DC  0EDC               	movlw	220
  4713  0026DE  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4714  0026E0  0E00               	movlw	0
  4715  0026E2  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4716  0026E4  0E46               	movlw	70
  4717  0026E6  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4718  0026E8  0E00               	movlw	0
  4719  0026EA  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4720  0026EC  0E32               	movlw	50
  4721  0026EE  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4722  0026F0  0E00               	movlw	0
  4723  0026F2  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4724  0026F4  0E00               	movlw	0
  4725  0026F6  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
  4726  0026F8  0EFF               	movlw	255
  4727  0026FA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4728  0026FC  681C               	setf	LCD_ButtonCreate@bgColor^0,c
  4729  0026FE  0EF6               	movlw	low STR_6
  4730  002700  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4731  002702  0E7F               	movlw	high STR_6
  4732  002704  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4733  002706  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4734  002708  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4735  00270A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4736  00270C  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4737  00270E  0E00               	movlw	0
  4738  002710  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4739  002712  0E00               	movlw	0
  4740  002714  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4741  002716  0E00               	movlw	0
  4742  002718  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4743  00271A  0E00               	movlw	0
  4744  00271C  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4745  00271E  0E00               	movlw	0
  4746  002720  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4747  002722  0E00               	movlw	0
  4748  002724  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4749  002726  0E68               	movlw	104
  4750  002728  242B               	addwf	GameParameters_init@s^0,w,c
  4751  00272A  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4752  00272C  0E00               	movlw	0
  4753  00272E  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4754  002730  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4755  002732  0E05               	movlw	5
  4756  002734  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4757  002736  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4758  00273A                     
  4759                           ;class/gameParameters.c: 18:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"-->",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnR
      +                          ight),6);
  4760  00273A  0E00               	movlw	0
  4761  00273C  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  4762  00273E  0E96               	movlw	150
  4763  002740  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  4764  002742  0E00               	movlw	0
  4765  002744  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  4766  002746  0EDC               	movlw	220
  4767  002748  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  4768  00274A  0E00               	movlw	0
  4769  00274C  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  4770  00274E  0E46               	movlw	70
  4771  002750  6E16               	movwf	LCD_ButtonCreate@width^0,c
  4772  002752  0E00               	movlw	0
  4773  002754  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  4774  002756  0E32               	movlw	50
  4775  002758  6E18               	movwf	LCD_ButtonCreate@height^0,c
  4776  00275A  0E00               	movlw	0
  4777  00275C  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  4778  00275E  0E00               	movlw	0
  4779  002760  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
  4780  002762  0EFF               	movlw	255
  4781  002764  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  4782  002766  681C               	setf	LCD_ButtonCreate@bgColor^0,c
  4783  002768  0EFA               	movlw	low STR_7
  4784  00276A  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  4785  00276C  0E7F               	movlw	high STR_7
  4786  00276E  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  4787  002770  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  4788  002772  6E20               	movwf	LCD_ButtonCreate@font^0,c
  4789  002774  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  4790  002776  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  4791  002778  0E00               	movlw	0
  4792  00277A  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  4793  00277C  0E00               	movlw	0
  4794  00277E  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  4795  002780  0E00               	movlw	0
  4796  002782  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  4797  002784  0E00               	movlw	0
  4798  002786  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  4799  002788  0E00               	movlw	0
  4800  00278A  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  4801  00278C  0E00               	movlw	0
  4802  00278E  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  4803  002790  0E80               	movlw	128
  4804  002792  242B               	addwf	GameParameters_init@s^0,w,c
  4805  002794  6E28               	movwf	LCD_ButtonCreate@button^0,c
  4806  002796  0E00               	movlw	0
  4807  002798  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4808  00279A  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  4809  00279C  0E06               	movlw	6
  4810  00279E  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  4811  0027A0  EC27  F023         	call	_LCD_ButtonCreate	;wreg free
  4812  0027A4                     
  4813                           ;class/gameParameters.c: 19:     LCD_SliderCreate(50,100,165,20,0b0000000000000000,0b111
      +                          1111111111111,0b1111100000000000,0,11,((void*)0),&(s->sldParam));
  4814  0027A4  0E00               	movlw	0
  4815  0027A6  6E13               	movwf	(LCD_SliderCreate@posX+1)^0,c
  4816  0027A8  0E32               	movlw	50
  4817  0027AA  6E12               	movwf	LCD_SliderCreate@posX^0,c
  4818  0027AC  0E00               	movlw	0
  4819  0027AE  6E15               	movwf	(LCD_SliderCreate@posY+1)^0,c
  4820  0027B0  0E64               	movlw	100
  4821  0027B2  6E14               	movwf	LCD_SliderCreate@posY^0,c
  4822  0027B4  0E00               	movlw	0
  4823  0027B6  6E17               	movwf	(LCD_SliderCreate@width+1)^0,c
  4824  0027B8  0EA5               	movlw	165
  4825  0027BA  6E16               	movwf	LCD_SliderCreate@width^0,c
  4826  0027BC  0E00               	movlw	0
  4827  0027BE  6E19               	movwf	(LCD_SliderCreate@height+1)^0,c
  4828  0027C0  0E14               	movlw	20
  4829  0027C2  6E18               	movwf	LCD_SliderCreate@height^0,c
  4830  0027C4  0E00               	movlw	0
  4831  0027C6  6E1B               	movwf	(LCD_SliderCreate@sldColor+1)^0,c
  4832  0027C8  0E00               	movlw	0
  4833  0027CA  6E1A               	movwf	LCD_SliderCreate@sldColor^0,c
  4834  0027CC  0EFF               	movlw	255
  4835  0027CE  6E1D               	movwf	(LCD_SliderCreate@bgColor+1)^0,c
  4836  0027D0  681C               	setf	LCD_SliderCreate@bgColor^0,c
  4837  0027D2  0EF8               	movlw	248
  4838  0027D4  6E1F               	movwf	(LCD_SliderCreate@borderColor+1)^0,c
  4839  0027D6  0E00               	movlw	0
  4840  0027D8  6E1E               	movwf	LCD_SliderCreate@borderColor^0,c
  4841  0027DA  0E00               	movlw	0
  4842  0027DC  6E21               	movwf	(LCD_SliderCreate@cursorWidth+1)^0,c
  4843  0027DE  0E00               	movlw	0
  4844  0027E0  6E20               	movwf	LCD_SliderCreate@cursorWidth^0,c
  4845  0027E2  0E00               	movlw	0
  4846  0027E4  6E23               	movwf	(LCD_SliderCreate@steps+1)^0,c
  4847  0027E6  0E0B               	movlw	11
  4848  0027E8  6E22               	movwf	LCD_SliderCreate@steps^0,c
  4849  0027EA  0E00               	movlw	0
  4850  0027EC  6E24               	movwf	LCD_SliderCreate@fpPress^0,c
  4851  0027EE  0E00               	movlw	0
  4852  0027F0  6E25               	movwf	(LCD_SliderCreate@fpPress+1)^0,c
  4853  0027F2  0E98               	movlw	152
  4854  0027F4  242B               	addwf	GameParameters_init@s^0,w,c
  4855  0027F6  6E26               	movwf	LCD_SliderCreate@slider^0,c
  4856  0027F8  0E00               	movlw	0
  4857  0027FA  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  4858  0027FC  6E27               	movwf	(LCD_SliderCreate@slider+1)^0,c
  4859  0027FE  EC21  F024         	call	_LCD_SliderCreate	;wreg free
  4860  002802  0012               	return		;funcret
  4861  002804                     __end_of_GameParameters_init:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function _Paddle_init *****************
  4865 ;; Defined at:
  4866 ;;		line 3 in file "class/paddle.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  p               2   17[COMRAM] PTR struct Paddle
  4869 ;;		 -> g1(201), 
  4870 ;;  team            2   19[COMRAM] unsigned short 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4882 ;;      Params:         4       0       0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0
  4885 ;;      Totals:         4       0       0       0       0       0       0
  4886 ;;Total ram usage:        4 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 4
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_GameParameters_init
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text10
  4897  0054B2                     __ptext10:
  4898                           	callstack 0
  4899  0054B2                     _Paddle_init:
  4900                           	callstack 24
  4901  0054B2                     
  4902                           ;class/paddle.c: 3: void Paddle_init(struct Paddle* p,uint16_t team);class/paddle.c: 4: 
      +                          {;class/paddle.c: 5:     if(team)
  4903  0054B2  5014               	movf	Paddle_init@team^0,w,c
  4904  0054B4  1015               	iorwf	(Paddle_init@team+1)^0,w,c
  4905  0054B6  B4D8               	btfsc	status,2,c
  4906  0054B8  EF60  F02A         	goto	u4841
  4907  0054BC  EF62  F02A         	goto	u4840
  4908  0054C0                     u4841:
  4909  0054C0  EF80  F02A         	goto	l7010
  4910  0054C4                     u4840:
  4911  0054C4                     
  4912                           ;class/paddle.c: 6:     {;class/paddle.c: 7:         p->x = 90;
  4913  0054C4  C012  FFD9         	movff	Paddle_init@p,fsr2l
  4914  0054C8  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
  4915  0054CC  0E5A               	movlw	90
  4916  0054CE  6EDE               	movwf	postinc2,c
  4917  0054D0  0E00               	movlw	0
  4918  0054D2  6EDD               	movwf	postdec2,c
  4919  0054D4                     
  4920                           ;class/paddle.c: 8:         p->y = 20;
  4921  0054D4  EE20 F002          	lfsr	2,2
  4922  0054D8  5012               	movf	Paddle_init@p^0,w,c
  4923  0054DA  26D9               	addwf	fsr2l,f,c
  4924  0054DC  5013               	movf	(Paddle_init@p+1)^0,w,c
  4925  0054DE  22DA               	addwfc	fsr2h,f,c
  4926  0054E0  0E14               	movlw	20
  4927  0054E2  6EDE               	movwf	postinc2,c
  4928  0054E4  0E00               	movlw	0
  4929  0054E6  6EDD               	movwf	postdec2,c
  4930  0054E8                     
  4931                           ;class/paddle.c: 9:         p->color = 0b0000000000011111;
  4932  0054E8  EE20 F004          	lfsr	2,4
  4933  0054EC  5012               	movf	Paddle_init@p^0,w,c
  4934  0054EE  26D9               	addwf	fsr2l,f,c
  4935  0054F0  5013               	movf	(Paddle_init@p+1)^0,w,c
  4936  0054F2  22DA               	addwfc	fsr2h,f,c
  4937  0054F4  0E1F               	movlw	31
  4938  0054F6  6EDE               	movwf	postinc2,c
  4939  0054F8  0E00               	movlw	0
  4940  0054FA  6EDD               	movwf	postdec2,c
  4941                           
  4942                           ;class/paddle.c: 10:     }
  4943  0054FC  EF9C  F02A         	goto	l20
  4944  005500                     l7010:
  4945                           
  4946                           ;class/paddle.c: 12:     {;class/paddle.c: 13:         p->x = 90;
  4947  005500  C012  FFD9         	movff	Paddle_init@p,fsr2l
  4948  005504  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
  4949  005508  0E5A               	movlw	90
  4950  00550A  6EDE               	movwf	postinc2,c
  4951  00550C  0E00               	movlw	0
  4952  00550E  6EDD               	movwf	postdec2,c
  4953  005510                     
  4954                           ;class/paddle.c: 14:         p->y = 280;
  4955  005510  EE20 F002          	lfsr	2,2
  4956  005514  5012               	movf	Paddle_init@p^0,w,c
  4957  005516  26D9               	addwf	fsr2l,f,c
  4958  005518  5013               	movf	(Paddle_init@p+1)^0,w,c
  4959  00551A  22DA               	addwfc	fsr2h,f,c
  4960  00551C  0E18               	movlw	24
  4961  00551E  6EDE               	movwf	postinc2,c
  4962  005520  0E01               	movlw	1
  4963  005522  6EDD               	movwf	postdec2,c
  4964  005524                     
  4965                           ;class/paddle.c: 15:         p->color = 0b0000000000011111;
  4966  005524  EE20 F004          	lfsr	2,4
  4967  005528  5012               	movf	Paddle_init@p^0,w,c
  4968  00552A  26D9               	addwf	fsr2l,f,c
  4969  00552C  5013               	movf	(Paddle_init@p+1)^0,w,c
  4970  00552E  22DA               	addwfc	fsr2h,f,c
  4971  005530  0E1F               	movlw	31
  4972  005532  6EDE               	movwf	postinc2,c
  4973  005534  0E00               	movlw	0
  4974  005536  6EDD               	movwf	postdec2,c
  4975  005538                     l20:
  4976  005538  0012               	return		;funcret
  4977  00553A                     __end_of_Paddle_init:
  4978                           	callstack 0
  4979                           
  4980 ;; *************** function _LCD_SliderCreate *****************
  4981 ;; Defined at:
  4982 ;;		line 291 in file "libraries/lcd_highlevel.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  posX            2   17[COMRAM] unsigned short 
  4985 ;;  posY            2   19[COMRAM] unsigned short 
  4986 ;;  width           2   21[COMRAM] unsigned short 
  4987 ;;  height          2   23[COMRAM] unsigned short 
  4988 ;;  sldColor        2   25[COMRAM] unsigned short 
  4989 ;;  bgColor         2   27[COMRAM] unsigned short 
  4990 ;;  borderColor     2   29[COMRAM] unsigned short 
  4991 ;;  cursorWidth     2   31[COMRAM] unsigned short 
  4992 ;;  steps           2   33[COMRAM] unsigned short 
  4993 ;;  fpPress         2   35[COMRAM] PTR FTN()void 
  4994 ;;		 -> Absolute function(1), 
  4995 ;;  slider          2   37[COMRAM] PTR struct .
  4996 ;;		 -> g1(201), 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5008 ;;      Params:        22       0       0       0       0       0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0
  5011 ;;      Totals:        22       0       0       0       0       0       0
  5012 ;;Total ram usage:       22 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; Hardware stack levels required when called: 4
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_GameParameters_init
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text11
  5023  004842                     __ptext11:
  5024                           	callstack 0
  5025  004842                     _LCD_SliderCreate:
  5026                           	callstack 24
  5027  004842                     
  5028                           ;libraries/lcd_highlevel.c: 291: void LCD_SliderCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 292:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 293:                       uint16_t sldColor, uint16_t bgColor, u
      +                          int16_t borderColor,;libraries/lcd_highlevel.c: 294:                       uint16_t curs
      +                          orWidth,;libraries/lcd_highlevel.c: 295:                       uint16_t steps,;libraries
      +                          /lcd_highlevel.c: 296:                       void (* fpPress)(),;libraries/lcd_highlevel
      +                          .c: 297:                       sld_t * slider)
  5029  004842  C026  FFD9         	movff	LCD_SliderCreate@slider,fsr2l
  5030  004846  C027  FFDA         	movff	LCD_SliderCreate@slider+1,fsr2h
  5031  00484A  C012  FFDE         	movff	LCD_SliderCreate@posX,postinc2
  5032  00484E  C013  FFDD         	movff	LCD_SliderCreate@posX+1,postdec2
  5033  004852                     
  5034                           ;libraries/lcd_highlevel.c: 300:   slider->posY = posY;
  5035  004852  EE20 F002          	lfsr	2,2
  5036  004856  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5037  004858  26D9               	addwf	fsr2l,f,c
  5038  00485A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5039  00485C  22DA               	addwfc	fsr2h,f,c
  5040  00485E  C014  FFDE         	movff	LCD_SliderCreate@posY,postinc2
  5041  004862  C015  FFDD         	movff	LCD_SliderCreate@posY+1,postdec2
  5042  004866                     
  5043                           ;libraries/lcd_highlevel.c: 301:   slider->height = height;
  5044  004866  EE20 F006          	lfsr	2,6
  5045  00486A  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5046  00486C  26D9               	addwf	fsr2l,f,c
  5047  00486E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5048  004870  22DA               	addwfc	fsr2h,f,c
  5049  004872  C018  FFDE         	movff	LCD_SliderCreate@height,postinc2
  5050  004876  C019  FFDD         	movff	LCD_SliderCreate@height+1,postdec2
  5051  00487A                     
  5052                           ;libraries/lcd_highlevel.c: 302:   slider->width = width;
  5053  00487A  EE20 F004          	lfsr	2,4
  5054  00487E  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5055  004880  26D9               	addwf	fsr2l,f,c
  5056  004882  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5057  004884  22DA               	addwfc	fsr2h,f,c
  5058  004886  C016  FFDE         	movff	LCD_SliderCreate@width,postinc2
  5059  00488A  C017  FFDD         	movff	LCD_SliderCreate@width+1,postdec2
  5060  00488E                     
  5061                           ;libraries/lcd_highlevel.c: 303:   slider->sldColor = sldColor;
  5062  00488E  EE20 F008          	lfsr	2,8
  5063  004892  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5064  004894  26D9               	addwf	fsr2l,f,c
  5065  004896  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5066  004898  22DA               	addwfc	fsr2h,f,c
  5067  00489A  C01A  FFDE         	movff	LCD_SliderCreate@sldColor,postinc2
  5068  00489E  C01B  FFDD         	movff	LCD_SliderCreate@sldColor+1,postdec2
  5069  0048A2                     
  5070                           ;libraries/lcd_highlevel.c: 304:   slider->bgColor = bgColor;
  5071  0048A2  EE20 F00A          	lfsr	2,10
  5072  0048A6  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5073  0048A8  26D9               	addwf	fsr2l,f,c
  5074  0048AA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5075  0048AC  22DA               	addwfc	fsr2h,f,c
  5076  0048AE  C01C  FFDE         	movff	LCD_SliderCreate@bgColor,postinc2
  5077  0048B2  C01D  FFDD         	movff	LCD_SliderCreate@bgColor+1,postdec2
  5078  0048B6                     
  5079                           ;libraries/lcd_highlevel.c: 305:   slider->borderColor = borderColor;
  5080  0048B6  EE20 F00C          	lfsr	2,12
  5081  0048BA  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5082  0048BC  26D9               	addwf	fsr2l,f,c
  5083  0048BE  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5084  0048C0  22DA               	addwfc	fsr2h,f,c
  5085  0048C2  C01E  FFDE         	movff	LCD_SliderCreate@borderColor,postinc2
  5086  0048C6  C01F  FFDD         	movff	LCD_SliderCreate@borderColor+1,postdec2
  5087  0048CA                     
  5088                           ;libraries/lcd_highlevel.c: 306:   slider->cursorWidth = cursorWidth;
  5089  0048CA  EE20 F00E          	lfsr	2,14
  5090  0048CE  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5091  0048D0  26D9               	addwf	fsr2l,f,c
  5092  0048D2  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5093  0048D4  22DA               	addwfc	fsr2h,f,c
  5094  0048D6  C020  FFDE         	movff	LCD_SliderCreate@cursorWidth,postinc2
  5095  0048DA  C021  FFDD         	movff	LCD_SliderCreate@cursorWidth+1,postdec2
  5096  0048DE                     
  5097                           ;libraries/lcd_highlevel.c: 307:   slider->fpPress = fpPress;
  5098  0048DE  EE20 F017          	lfsr	2,23
  5099  0048E2  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5100  0048E4  26D9               	addwf	fsr2l,f,c
  5101  0048E6  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5102  0048E8  22DA               	addwfc	fsr2h,f,c
  5103  0048EA  C024  FFDE         	movff	LCD_SliderCreate@fpPress,postinc2
  5104  0048EE  C025  FFDD         	movff	LCD_SliderCreate@fpPress+1,postdec2
  5105  0048F2                     
  5106                           ;libraries/lcd_highlevel.c: 308:   slider->steps = steps;
  5107  0048F2  EE20 F015          	lfsr	2,21
  5108  0048F6  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5109  0048F8  26D9               	addwf	fsr2l,f,c
  5110  0048FA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5111  0048FC  22DA               	addwfc	fsr2h,f,c
  5112  0048FE  C022  FFDE         	movff	LCD_SliderCreate@steps,postinc2
  5113  004902  C023  FFDD         	movff	LCD_SliderCreate@steps+1,postdec2
  5114  004906                     
  5115                           ;libraries/lcd_highlevel.c: 309:   slider->value = 0;
  5116  004906  EE20 F011          	lfsr	2,17
  5117  00490A  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5118  00490C  26D9               	addwf	fsr2l,f,c
  5119  00490E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5120  004910  22DA               	addwfc	fsr2h,f,c
  5121  004912  0E00               	movlw	0
  5122  004914  6EDE               	movwf	postinc2,c
  5123  004916  0E00               	movlw	0
  5124  004918  6EDD               	movwf	postdec2,c
  5125  00491A                     
  5126                           ;libraries/lcd_highlevel.c: 310:   slider->oldValue = 0;
  5127  00491A  EE20 F013          	lfsr	2,19
  5128  00491E  5026               	movf	LCD_SliderCreate@slider^0,w,c
  5129  004920  26D9               	addwf	fsr2l,f,c
  5130  004922  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
  5131  004924  22DA               	addwfc	fsr2h,f,c
  5132  004926  0E00               	movlw	0
  5133  004928  6EDE               	movwf	postinc2,c
  5134  00492A  0E00               	movlw	0
  5135  00492C  6EDD               	movwf	postdec2,c
  5136  00492E  0012               	return		;funcret
  5137  004930                     __end_of_LCD_SliderCreate:
  5138                           	callstack 0
  5139                           
  5140 ;; *************** function _LCD_ButtonCreate *****************
  5141 ;; Defined at:
  5142 ;;		line 396 in file "libraries/lcd_highlevel.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  posX            2   17[COMRAM] unsigned short 
  5145 ;;  posY            2   19[COMRAM] unsigned short 
  5146 ;;  width           2   21[COMRAM] unsigned short 
  5147 ;;  height          2   23[COMRAM] unsigned short 
  5148 ;;  txtColor        2   25[COMRAM] unsigned short 
  5149 ;;  bgColor         2   27[COMRAM] unsigned short 
  5150 ;;  textOrBmp       2   29[COMRAM] PTR const unsigned char 
  5151 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
  5152 ;;		 -> STR_3(9), STR_2(11), 
  5153 ;;  font            2   31[COMRAM] PTR struct .
  5154 ;;		 -> arialNarrow_12ptFontInfo(7), 
  5155 ;;  fpPress         2   33[COMRAM] PTR FTN(unsigned char ,)
  5156 ;;		 -> Absolute function(1), 
  5157 ;;  fpReleased      2   35[COMRAM] PTR FTN(unsigned char ,)
  5158 ;;		 -> Absolute function(1), 
  5159 ;;  fpOut           2   37[COMRAM] PTR FTN(unsigned char ,)
  5160 ;;		 -> Absolute function(1), 
  5161 ;;  button          2   39[COMRAM] PTR struct .
  5162 ;;		 -> g1(201), 
  5163 ;;  index           1   41[COMRAM] unsigned char 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5175 ;;      Params:        25       0       0       0       0       0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0
  5178 ;;      Totals:        25       0       0       0       0       0       0
  5179 ;;Total ram usage:       25 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; Hardware stack levels required when called: 4
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_GameParameters_init
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text12
  5190  00464E                     __ptext12:
  5191                           	callstack 0
  5192  00464E                     _LCD_ButtonCreate:
  5193                           	callstack 24
  5194  00464E                     
  5195                           ;libraries/lcd_highlevel.c: 396: void LCD_ButtonCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 397:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 398:                       uint16_t txtColor, uint16_t bgColor,;l
      +                          ibraries/lcd_highlevel.c: 399:                       const uint8_t * textOrBmp, FONT_INF
      +                          O * font,;libraries/lcd_highlevel.c: 400:                       void (*fpPress)(uint8_t)
      +                          , void (* fpReleased)(uint8_t), void (* fpOut)(uint8_t),;libraries/lcd_highlevel.c: 401:
      +                                                 btn_t * button,
  5196  00464E  C028  FFD9         	movff	LCD_ButtonCreate@button,fsr2l
  5197  004652  C029  FFDA         	movff	LCD_ButtonCreate@button+1,fsr2h
  5198  004656  C012  FFDE         	movff	LCD_ButtonCreate@posX,postinc2
  5199  00465A  C013  FFDD         	movff	LCD_ButtonCreate@posX+1,postdec2
  5200  00465E                     
  5201                           ;libraries/lcd_highlevel.c: 405:   button->posY = posY;
  5202  00465E  EE20 F002          	lfsr	2,2
  5203  004662  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5204  004664  26D9               	addwf	fsr2l,f,c
  5205  004666  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5206  004668  22DA               	addwfc	fsr2h,f,c
  5207  00466A  C014  FFDE         	movff	LCD_ButtonCreate@posY,postinc2
  5208  00466E  C015  FFDD         	movff	LCD_ButtonCreate@posY+1,postdec2
  5209  004672                     
  5210                           ;libraries/lcd_highlevel.c: 406:   button->height = height;
  5211  004672  EE20 F006          	lfsr	2,6
  5212  004676  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5213  004678  26D9               	addwf	fsr2l,f,c
  5214  00467A  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5215  00467C  22DA               	addwfc	fsr2h,f,c
  5216  00467E  C018  FFDE         	movff	LCD_ButtonCreate@height,postinc2
  5217  004682  C019  FFDD         	movff	LCD_ButtonCreate@height+1,postdec2
  5218  004686                     
  5219                           ;libraries/lcd_highlevel.c: 407:   button->width = width;
  5220  004686  EE20 F004          	lfsr	2,4
  5221  00468A  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5222  00468C  26D9               	addwf	fsr2l,f,c
  5223  00468E  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5224  004690  22DA               	addwfc	fsr2h,f,c
  5225  004692  C016  FFDE         	movff	LCD_ButtonCreate@width,postinc2
  5226  004696  C017  FFDD         	movff	LCD_ButtonCreate@width+1,postdec2
  5227  00469A                     
  5228                           ;libraries/lcd_highlevel.c: 408:   button->txtColor = txtColor;
  5229  00469A  EE20 F008          	lfsr	2,8
  5230  00469E  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5231  0046A0  26D9               	addwf	fsr2l,f,c
  5232  0046A2  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5233  0046A4  22DA               	addwfc	fsr2h,f,c
  5234  0046A6  C01A  FFDE         	movff	LCD_ButtonCreate@txtColor,postinc2
  5235  0046AA  C01B  FFDD         	movff	LCD_ButtonCreate@txtColor+1,postdec2
  5236  0046AE                     
  5237                           ;libraries/lcd_highlevel.c: 409:   button->bgColor = bgColor;
  5238  0046AE  EE20 F00A          	lfsr	2,10
  5239  0046B2  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5240  0046B4  26D9               	addwf	fsr2l,f,c
  5241  0046B6  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5242  0046B8  22DA               	addwfc	fsr2h,f,c
  5243  0046BA  C01C  FFDE         	movff	LCD_ButtonCreate@bgColor,postinc2
  5244  0046BE  C01D  FFDD         	movff	LCD_ButtonCreate@bgColor+1,postdec2
  5245  0046C2                     
  5246                           ;libraries/lcd_highlevel.c: 410:   button->text = textOrBmp;
  5247  0046C2  EE20 F00C          	lfsr	2,12
  5248  0046C6  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5249  0046C8  26D9               	addwf	fsr2l,f,c
  5250  0046CA  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5251  0046CC  22DA               	addwfc	fsr2h,f,c
  5252  0046CE  C01E  FFDE         	movff	LCD_ButtonCreate@textOrBmp,postinc2
  5253  0046D2  C01F  FFDD         	movff	LCD_ButtonCreate@textOrBmp+1,postdec2
  5254  0046D6                     
  5255                           ;libraries/lcd_highlevel.c: 411:   button->font = font;
  5256  0046D6  EE20 F00E          	lfsr	2,14
  5257  0046DA  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5258  0046DC  26D9               	addwf	fsr2l,f,c
  5259  0046DE  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5260  0046E0  22DA               	addwfc	fsr2h,f,c
  5261  0046E2  C020  FFDE         	movff	LCD_ButtonCreate@font,postinc2
  5262  0046E6  C021  FFDD         	movff	LCD_ButtonCreate@font+1,postdec2
  5263  0046EA                     
  5264                           ;libraries/lcd_highlevel.c: 412:   button->fpPress = fpPress;
  5265  0046EA  EE20 F011          	lfsr	2,17
  5266  0046EE  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5267  0046F0  26D9               	addwf	fsr2l,f,c
  5268  0046F2  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5269  0046F4  22DA               	addwfc	fsr2h,f,c
  5270  0046F6  C022  FFDE         	movff	LCD_ButtonCreate@fpPress,postinc2
  5271  0046FA  C023  FFDD         	movff	LCD_ButtonCreate@fpPress+1,postdec2
  5272  0046FE                     
  5273                           ;libraries/lcd_highlevel.c: 413:   button->fpReleased = fpReleased;
  5274  0046FE  EE20 F013          	lfsr	2,19
  5275  004702  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5276  004704  26D9               	addwf	fsr2l,f,c
  5277  004706  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5278  004708  22DA               	addwfc	fsr2h,f,c
  5279  00470A  C024  FFDE         	movff	LCD_ButtonCreate@fpReleased,postinc2
  5280  00470E  C025  FFDD         	movff	LCD_ButtonCreate@fpReleased+1,postdec2
  5281  004712                     
  5282                           ;libraries/lcd_highlevel.c: 414:   button->fpOut = fpOut;
  5283  004712  EE20 F015          	lfsr	2,21
  5284  004716  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5285  004718  26D9               	addwf	fsr2l,f,c
  5286  00471A  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5287  00471C  22DA               	addwfc	fsr2h,f,c
  5288  00471E  C026  FFDE         	movff	LCD_ButtonCreate@fpOut,postinc2
  5289  004722  C027  FFDD         	movff	LCD_ButtonCreate@fpOut+1,postdec2
  5290  004726                     
  5291                           ;libraries/lcd_highlevel.c: 415:   button->index = index;
  5292  004726  EE20 F017          	lfsr	2,23
  5293  00472A  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5294  00472C  26D9               	addwf	fsr2l,f,c
  5295  00472E  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5296  004730  22DA               	addwfc	fsr2h,f,c
  5297  004732  C02A  FFDF         	movff	LCD_ButtonCreate@index,indf2
  5298  004736                     
  5299                           ;libraries/lcd_highlevel.c: 416:   button->pressed = 0;
  5300  004736  EE20 F010          	lfsr	2,16
  5301  00473A  5028               	movf	LCD_ButtonCreate@button^0,w,c
  5302  00473C  26D9               	addwf	fsr2l,f,c
  5303  00473E  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
  5304  004740  22DA               	addwfc	fsr2h,f,c
  5305  004742  0E00               	movlw	0
  5306  004744  6EDF               	movwf	indf2,c
  5307  004746  0012               	return		;funcret
  5308  004748                     __end_of_LCD_ButtonCreate:
  5309                           	callstack 0
  5310                           
  5311 ;; *************** function _Ball_init *****************
  5312 ;; Defined at:
  5313 ;;		line 3 in file "class/ball.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;  b               2   17[COMRAM] PTR struct Ball
  5316 ;;		 -> g1(201), 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5328 ;;      Params:         2       0       0       0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0
  5331 ;;      Totals:         2       0       0       0       0       0       0
  5332 ;;Total ram usage:        2 bytes
  5333 ;; Hardware stack levels used: 1
  5334 ;; Hardware stack levels required when called: 4
  5335 ;; This function calls:
  5336 ;;		Nothing
  5337 ;; This function is called by:
  5338 ;;		_GameParameters_init
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text13
  5343  005BC4                     __ptext13:
  5344                           	callstack 0
  5345  005BC4                     _Ball_init:
  5346                           	callstack 24
  5347  005BC4                     
  5348                           ;class/ball.c: 3: void Ball_init(struct Ball* b);class/ball.c: 4: {;class/ball.c: 5:    
      +                           b->x = 90;
  5349  005BC4  C012  FFD9         	movff	Ball_init@b,fsr2l
  5350  005BC8  C013  FFDA         	movff	Ball_init@b+1,fsr2h
  5351  005BCC  0E5A               	movlw	90
  5352  005BCE  6EDE               	movwf	postinc2,c
  5353  005BD0  0E00               	movlw	0
  5354  005BD2  6EDD               	movwf	postdec2,c
  5355  005BD4                     
  5356                           ;class/ball.c: 6:     b->y = 150;
  5357  005BD4  EE20 F002          	lfsr	2,2
  5358  005BD8  5012               	movf	Ball_init@b^0,w,c
  5359  005BDA  26D9               	addwf	fsr2l,f,c
  5360  005BDC  5013               	movf	(Ball_init@b+1)^0,w,c
  5361  005BDE  22DA               	addwfc	fsr2h,f,c
  5362  005BE0  0E96               	movlw	150
  5363  005BE2  6EDE               	movwf	postinc2,c
  5364  005BE4  0E00               	movlw	0
  5365  005BE6  6EDD               	movwf	postdec2,c
  5366  005BE8                     
  5367                           ;class/ball.c: 7:     b->dx = 0;
  5368  005BE8  EE20 F004          	lfsr	2,4
  5369  005BEC  5012               	movf	Ball_init@b^0,w,c
  5370  005BEE  26D9               	addwf	fsr2l,f,c
  5371  005BF0  5013               	movf	(Ball_init@b+1)^0,w,c
  5372  005BF2  22DA               	addwfc	fsr2h,f,c
  5373  005BF4  0E00               	movlw	0
  5374  005BF6  6EDE               	movwf	postinc2,c
  5375  005BF8  0E00               	movlw	0
  5376  005BFA  6EDD               	movwf	postdec2,c
  5377  005BFC                     
  5378                           ;class/ball.c: 8:     b->dy = 1;
  5379  005BFC  EE20 F006          	lfsr	2,6
  5380  005C00  5012               	movf	Ball_init@b^0,w,c
  5381  005C02  26D9               	addwf	fsr2l,f,c
  5382  005C04  5013               	movf	(Ball_init@b+1)^0,w,c
  5383  005C06  22DA               	addwfc	fsr2h,f,c
  5384  005C08  0E01               	movlw	1
  5385  005C0A  6EDE               	movwf	postinc2,c
  5386  005C0C  0E00               	movlw	0
  5387  005C0E  6EDD               	movwf	postdec2,c
  5388  005C10  0012               	return		;funcret
  5389  005C12                     __end_of_Ball_init:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _Factory_exec *****************
  5393 ;; Defined at:
  5394 ;;		line 53 in file "class/factory.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  ev              1    0[BANK1 ] unsigned char 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5408 ;;      Params:         0       0       0       0       0       0       0
  5409 ;;      Locals:         0       0       1       0       0       0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0
  5411 ;;      Totals:         0       0       1       0       0       0       0
  5412 ;;Total ram usage:        1 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; Hardware stack levels required when called: 14
  5415 ;; This function calls:
  5416 ;;		_XF_popEvent
  5417 ;;		_displaySM
  5418 ;;		_gameControllerSM
  5419 ;;		_sleepSM
  5420 ;;		_touchScreenSM
  5421 ;; This function is called by:
  5422 ;;		_main
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text14
  5427  005ACC                     __ptext14:
  5428                           	callstack 0
  5429  005ACC                     _Factory_exec:
  5430                           	callstack 16
  5431  005ACC                     
  5432                           ;class/factory.c: 56:     Event ev;;class/factory.c: 57:     ev = XF_popEvent(0);
  5433  005ACC  0E00               	movlw	0
  5434  005ACE  EC36  F02D         	call	_XF_popEvent
  5435  005AD2  0101               	movlb	1	; () banked
  5436  005AD4  6FC9               	movwf	Factory_exec@ev& (0+255),b
  5437  005AD6                     
  5438                           ; BSR set to: 1
  5439                           ;class/factory.c: 58:     if (ev != NULLEVENT)
  5440  005AD6  51C9               	movf	Factory_exec@ev& (0+255),w,b
  5441  005AD8  B4D8               	btfsc	status,2,c
  5442  005ADA  EF71  F02D         	goto	u7761
  5443  005ADE  EF73  F02D         	goto	u7760
  5444  005AE2                     u7761:
  5445  005AE2  EF90  F02D         	goto	l102
  5446  005AE6                     u7760:
  5447  005AE6                     
  5448                           ; BSR set to: 1
  5449                           ;class/factory.c: 59:     {;class/factory.c: 60:         sleepSM(ev);
  5450  005AE6  51C9               	movf	Factory_exec@ev& (0+255),w,b
  5451  005AE8  EC2A  F029         	call	_sleepSM
  5452  005AEC                     
  5453                           ;class/factory.c: 61:         touchScreenSM(ev,&g1);
  5454  005AEC  0E00               	movlw	low _g1
  5455  005AEE  0100               	movlb	0	; () banked
  5456  005AF0  6FB0               	movwf	touchScreenSM@g& (0+255),b
  5457  005AF2  0E01               	movlw	high _g1
  5458  005AF4  6FB1               	movwf	(touchScreenSM@g+1)& (0+255),b
  5459  005AF6  0101               	movlb	1	; () banked
  5460  005AF8  51C9               	movf	Factory_exec@ev& (0+255),w,b
  5461  005AFA  ECCA  F029         	call	_touchScreenSM
  5462  005AFE                     
  5463                           ;class/factory.c: 62:         displaySM(ev,&g1);
  5464  005AFE  0E00               	movlw	low _g1
  5465  005B00  0100               	movlb	0	; () banked
  5466  005B02  6FA0               	movwf	displaySM@g& (0+255),b
  5467  005B04  0E01               	movlw	high _g1
  5468  005B06  6FA1               	movwf	(displaySM@g+1)& (0+255),b
  5469  005B08  0101               	movlb	1	; () banked
  5470  005B0A  51C9               	movf	Factory_exec@ev& (0+255),w,b
  5471  005B0C  ECDB  F025         	call	_displaySM
  5472  005B10                     
  5473                           ;class/factory.c: 63:         gameControllerSM(ev,&g1);
  5474  005B10  0E00               	movlw	low _g1
  5475  005B12  6E3B               	movwf	gameControllerSM@g^0,c
  5476  005B14  0E01               	movlw	high _g1
  5477  005B16  6E3C               	movwf	(gameControllerSM@g+1)^0,c
  5478  005B18  0101               	movlb	1	; () banked
  5479  005B1A  51C9               	movf	Factory_exec@ev& (0+255),w,b
  5480  005B1C  EC81  F01D         	call	_gameControllerSM
  5481  005B20                     l102:
  5482  005B20  0012               	return		;funcret
  5483  005B22                     __end_of_Factory_exec:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _touchScreenSM *****************
  5487 ;; Defined at:
  5488 ;;		line 25 in file "stateMachine/touchScreenSM.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  ev              1    wreg     unsigned char 
  5491 ;;  g               2   80[BANK0 ] PTR struct GameParameter
  5492 ;;		 -> g1(201), 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  ev              1   84[BANK0 ] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5504 ;;      Params:         0       2       0       0       0       0       0
  5505 ;;      Locals:         0       1       0       0       0       0       0
  5506 ;;      Temps:          0       2       0       0       0       0       0
  5507 ;;      Totals:         0       5       0       0       0       0       0
  5508 ;;Total ram usage:        5 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; Hardware stack levels required when called: 13
  5511 ;; This function calls:
  5512 ;;		_touchScreenController
  5513 ;; This function is called by:
  5514 ;;		_Factory_exec
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text15
  5519  005394                     __ptext15:
  5520                           	callstack 0
  5521  005394                     _touchScreenSM:
  5522                           	callstack 16
  5523                           
  5524                           ;incstack = 0
  5525                           ;touchScreenSM@ev stored from wreg
  5526  005394  0100               	movlb	0	; () banked
  5527  005396  6FB4               	movwf	touchScreenSM@ev& (0+255),b
  5528  005398                     
  5529                           ;stateMachine/touchScreenSM.c: 25: void touchScreenSM(Event ev, GameParameters* g);state
      +                          Machine/touchScreenSM.c: 26: {;stateMachine/touchScreenSM.c: 27:     switch(touchScreenS
      +                          tate)
  5530  005398  EFFD  F029         	goto	l10104
  5531  00539C                     l10086:
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;stateMachine/touchScreenSM.c: 30:             if(ev==evPress)
  5535  00539C  05B4               	decf	touchScreenSM@ev& (0+255),w,b
  5536  00539E  A4D8               	btfss	status,2,c
  5537  0053A0  EFD4  F029         	goto	u7631
  5538  0053A4  EFD6  F029         	goto	u7630
  5539  0053A8                     u7631:
  5540  0053A8  EF13  F02A         	goto	l490
  5541  0053AC                     u7630:
  5542  0053AC                     
  5543                           ; BSR set to: 0
  5544                           ;stateMachine/touchScreenSM.c: 31:             {;stateMachine/touchScreenSM.c: 32:      
      +                                     touchScreenState=CALCULATEPOSITION;
  5545  0053AC  0E01               	movlw	1
  5546  0053AE  6FDE               	movwf	_touchScreenState& (0+255),b
  5547  0053B0                     l10090:
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;stateMachine/touchScreenSM.c: 33:                 touchScreenController(g);
  5551  0053B0  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  5552  0053B4  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  5553  0053B8  EC64  F018         	call	_touchScreenController	;wreg free
  5554  0053BC  EF13  F02A         	goto	l490
  5555  0053C0                     l10092:
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;stateMachine/touchScreenSM.c: 37:             if(ev==evRelease)
  5559  0053C0  0E02               	movlw	2
  5560  0053C2  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  5561  0053C4  A4D8               	btfss	status,2,c
  5562  0053C6  EFE7  F029         	goto	u7641
  5563  0053CA  EFE9  F029         	goto	u7640
  5564  0053CE                     u7641:
  5565  0053CE  EFF1  F029         	goto	l10098
  5566  0053D2                     u7640:
  5567  0053D2                     
  5568                           ; BSR set to: 0
  5569                           ;stateMachine/touchScreenSM.c: 38:             {;stateMachine/touchScreenSM.c: 39:      
      +                                     touchScreenState=WAITING;
  5570  0053D2  0E00               	movlw	0
  5571  0053D4  6FDE               	movwf	_touchScreenState& (0+255),b
  5572  0053D6                     
  5573                           ; BSR set to: 0
  5574                           ;stateMachine/touchScreenSM.c: 40:                 touchScreenController(g);
  5575  0053D6  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  5576  0053DA  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  5577  0053DE  EC64  F018         	call	_touchScreenController	;wreg free
  5578  0053E2                     l10098:
  5579                           
  5580                           ;stateMachine/touchScreenSM.c: 42:             if(ev==evTimerPos)
  5581  0053E2  0E04               	movlw	4
  5582  0053E4  0100               	movlb	0	; () banked
  5583  0053E6  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  5584  0053E8  A4D8               	btfss	status,2,c
  5585  0053EA  EFF9  F029         	goto	u7651
  5586  0053EE  EFFB  F029         	goto	u7650
  5587  0053F2                     u7651:
  5588  0053F2  EF13  F02A         	goto	l490
  5589  0053F6                     u7650:
  5590  0053F6  EFD8  F029         	goto	l10090
  5591  0053FA                     l10104:
  5592  0053FA  0100               	movlb	0	; () banked
  5593  0053FC  51DE               	movf	_touchScreenState& (0+255),w,b
  5594  0053FE  6FB2               	movwf	??_touchScreenSM& (0+255),b
  5595  005400  6BB3               	clrf	(??_touchScreenSM+1)& (0+255),b
  5596                           
  5597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5598                           ; Switch size 1, requested type "simple"
  5599                           ; Number of cases is 1, Range of values is 0 to 0
  5600                           ; switch strategies available:
  5601                           ; Name         Instructions Cycles
  5602                           ; simple_byte            4     3 (average)
  5603                           ;	Chosen strategy is simple_byte
  5604  005402  51B3               	movf	(??_touchScreenSM+1)& (0+255),w,b
  5605  005404  0A00               	xorlw	0	; case 0
  5606  005406  B4D8               	btfsc	status,2,c
  5607  005408  EF08  F02A         	goto	l10474
  5608  00540C  EF13  F02A         	goto	l490
  5609  005410                     l10474:
  5610                           
  5611                           ; BSR set to: 0
  5612                           ; Switch size 1, requested type "simple"
  5613                           ; Number of cases is 2, Range of values is 0 to 1
  5614                           ; switch strategies available:
  5615                           ; Name         Instructions Cycles
  5616                           ; simple_byte            7     4 (average)
  5617                           ;	Chosen strategy is simple_byte
  5618  005410  51B2               	movf	??_touchScreenSM& (0+255),w,b
  5619  005412  0A00               	xorlw	0	; case 0
  5620  005414  B4D8               	btfsc	status,2,c
  5621  005416  EFCE  F029         	goto	l10086
  5622  00541A  0A01               	xorlw	1	; case 1
  5623  00541C  B4D8               	btfsc	status,2,c
  5624  00541E  EFE0  F029         	goto	l10092
  5625  005422  EF13  F02A         	goto	l490
  5626  005426                     l490:
  5627  005426  0012               	return		;funcret
  5628  005428                     __end_of_touchScreenSM:
  5629                           	callstack 0
  5630                           
  5631 ;; *************** function _touchScreenController *****************
  5632 ;; Defined at:
  5633 ;;		line 54 in file "stateMachine/touchScreenSM.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  g               2   48[BANK0 ] PTR struct GameParameter
  5636 ;;		 -> g1(201), 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  valueX          2   78[BANK0 ] unsigned short 
  5639 ;;  valueY          2   76[BANK0 ] unsigned short 
  5640 ;;  s              20   56[BANK0 ] unsigned char [20]
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      void 
  5643 ;; Registers used:
  5644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5650 ;;      Params:         0       2       0       0       0       0       0
  5651 ;;      Locals:         0      24       0       0       0       0       0
  5652 ;;      Temps:          0       6       0       0       0       0       0
  5653 ;;      Totals:         0      32       0       0       0       0       0
  5654 ;;Total ram usage:       32 bytes
  5655 ;; Hardware stack levels used: 1
  5656 ;; Hardware stack levels required when called: 12
  5657 ;; This function calls:
  5658 ;;		_GameParameters_setX
  5659 ;;		_GameParameters_setY
  5660 ;;		_LCD_DrawText
  5661 ;;		_XF_scheduleTimer
  5662 ;;		___fldiv
  5663 ;;		___fltol
  5664 ;;		___xxtofl
  5665 ;;		_configMeasure
  5666 ;;		_configTouch
  5667 ;;		_sprintf
  5668 ;; This function is called by:
  5669 ;;		_touchScreenSM
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text16
  5674  0030C8                     __ptext16:
  5675                           	callstack 0
  5676  0030C8                     _touchScreenController:
  5677                           	callstack 16
  5678  0030C8                     
  5679                           ;stateMachine/touchScreenSM.c: 54: void touchScreenController(GameParameters* g);stateMa
      +                          chine/touchScreenSM.c: 55: {;stateMachine/touchScreenSM.c: 56:     char s[20];;stateMach
      +                          ine/touchScreenSM.c: 58:     switch(touchScreenState)
  5680  0030C8  EF83  F019         	goto	l9972
  5681  0030CC                     l9928:
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;stateMachine/touchScreenSM.c: 63:             configTouch();
  5685  0030CC  EC44  F02F         	call	_configTouch	;wreg free
  5686                           
  5687                           ;stateMachine/touchScreenSM.c: 65:             break;
  5688  0030D0  EF99  F019         	goto	l507
  5689  0030D4                     l496:
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;stateMachine/touchScreenSM.c: 70:             INT1IE=0;
  5693  0030D4  96F0               	bcf	4080,3,c	;volatile
  5694  0030D6                     
  5695                           ; BSR set to: 0
  5696                           ;stateMachine/touchScreenSM.c: 71:             configMeasure(0);
  5697  0030D6  0E00               	movlw	0
  5698  0030D8  ECBA  F02D         	call	_configMeasure
  5699  0030DC                     l497:
  5700  0030DC  B2C2               	btfsc	194,1,c	;volatile
  5701  0030DE  EF73  F018         	goto	u7491
  5702  0030E2  EF75  F018         	goto	u7490
  5703  0030E6                     u7491:
  5704  0030E6  EF6E  F018         	goto	l497
  5705  0030EA                     u7490:
  5706  0030EA                     
  5707                           ;stateMachine/touchScreenSM.c: 73:             uint16_t valueX;;stateMachine/touchScreen
      +                          SM.c: 74:             valueX=(ADRESH<<8)+ADRESL;
  5708  0030EA  50C4               	movf	196,w,c	;volatile
  5709  0030EC  0100               	movlb	0	; () banked
  5710  0030EE  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5711  0030F0  6B92               	clrf	??_touchScreenController& (0+255),b
  5712  0030F2  50C3               	movf	195,w,c	;volatile
  5713  0030F4  2592               	addwf	??_touchScreenController& (0+255),w,b
  5714  0030F6  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5715  0030F8  0E00               	movlw	0
  5716  0030FA  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  5717  0030FC  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5718                           
  5719                           ;stateMachine/touchScreenSM.c: 75:             if(valueX<=120)
  5720  0030FE  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  5721  003100  E107               	bnz	u7501
  5722  003102  0E79               	movlw	121
  5723  003104  5DAE               	subwf	touchScreenController@valueX& (0+255),w,b
  5724  003106  B0D8               	btfsc	status,0,c
  5725  003108  EF88  F018         	goto	u7501
  5726  00310C  EF8A  F018         	goto	u7500
  5727  003110                     u7501:
  5728  003110  EF8E  F018         	goto	l9936
  5729  003114                     u7500:
  5730  003114                     
  5731                           ; BSR set to: 0
  5732                           ;stateMachine/touchScreenSM.c: 76:             {;stateMachine/touchScreenSM.c: 77:      
      +                                     valueX=120;
  5733  003114  0E00               	movlw	0
  5734  003116  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5735  003118  0E78               	movlw	120
  5736  00311A  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5737  00311C                     l9936:
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;stateMachine/touchScreenSM.c: 79:             valueX=(valueX-120)/2.35;
  5741  00311C  0E66               	movlw	102
  5742  00311E  6E24               	movwf	___fldiv@a^0,c
  5743  003120  0E66               	movlw	102
  5744  003122  6E25               	movwf	(___fldiv@a+1)^0,c
  5745  003124  0E16               	movlw	22
  5746  003126  6E26               	movwf	(___fldiv@a+2)^0,c
  5747  003128  0E40               	movlw	64
  5748  00312A  6E27               	movwf	(___fldiv@a+3)^0,c
  5749  00312C  0E88               	movlw	136
  5750  00312E  6F92               	movwf	??_touchScreenController& (0+255),b
  5751  003130  0EFF               	movlw	255
  5752  003132  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5753  003134  C0AE  F094         	movff	touchScreenController@valueX,??_touchScreenController+2
  5754  003138  C0AF  F095         	movff	touchScreenController@valueX+1,??_touchScreenController+3
  5755  00313C  5192               	movf	??_touchScreenController& (0+255),w,b
  5756  00313E  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  5757  003140  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5758  003142  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  5759  003144  C094  F012         	movff	??_touchScreenController+2,___xxtofl@val
  5760  003148  C095  F013         	movff	??_touchScreenController+3,___xxtofl@val+1
  5761  00314C  6A14               	clrf	(___xxtofl@val+2)^0,c
  5762  00314E  6A15               	clrf	(___xxtofl@val+3)^0,c
  5763  003150  0E00               	movlw	0
  5764  003152  ECA7  F01C         	call	___xxtofl
  5765  003156  C012  F020         	movff	?___xxtofl,___fldiv@b
  5766  00315A  C013  F021         	movff	?___xxtofl+1,___fldiv@b+1
  5767  00315E  C014  F022         	movff	?___xxtofl+2,___fldiv@b+2
  5768  003162  C015  F023         	movff	?___xxtofl+3,___fldiv@b+3
  5769  003166  EC80  F010         	call	___fldiv	;wreg free
  5770  00316A  C020  F039         	movff	?___fldiv,___fltol@f1
  5771  00316E  C021  F03A         	movff	?___fldiv+1,___fltol@f1+1
  5772  003172  C022  F03B         	movff	?___fldiv+2,___fltol@f1+2
  5773  003176  C023  F03C         	movff	?___fldiv+3,___fltol@f1+3
  5774  00317A  ECA4  F022         	call	___fltol	;wreg free
  5775  00317E  C039  F0AE         	movff	?___fltol,touchScreenController@valueX
  5776  003182  C03A  F0AF         	movff	?___fltol+1,touchScreenController@valueX+1
  5777  003186                     
  5778                           ;stateMachine/touchScreenSM.c: 80:             valueX=240 -valueX;
  5779  003186  0100               	movlb	0	; () banked
  5780  003188  51AE               	movf	touchScreenController@valueX& (0+255),w,b
  5781  00318A  08F0               	sublw	240
  5782  00318C  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  5783  00318E  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  5784  003190  A0D8               	btfss	status,0,c
  5785  003192  2AE8               	incf	wreg,f,c
  5786  003194  0800               	sublw	0
  5787  003196  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  5788  003198                     
  5789                           ; BSR set to: 0
  5790                           ;stateMachine/touchScreenSM.c: 82:             configMeasure(1);
  5791  003198  0E01               	movlw	1
  5792  00319A  ECBA  F02D         	call	_configMeasure
  5793  00319E                     l501:
  5794  00319E  B2C2               	btfsc	194,1,c	;volatile
  5795  0031A0  EFD4  F018         	goto	u7511
  5796  0031A4  EFD6  F018         	goto	u7510
  5797  0031A8                     u7511:
  5798  0031A8  EFCF  F018         	goto	l501
  5799  0031AC                     u7510:
  5800  0031AC                     
  5801                           ;stateMachine/touchScreenSM.c: 84:             uint16_t valueY;;stateMachine/touchScreen
      +                          SM.c: 85:             valueY=(ADRESH<<8)+ADRESL;
  5802  0031AC  50C4               	movf	196,w,c	;volatile
  5803  0031AE  0100               	movlb	0	; () banked
  5804  0031B0  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5805  0031B2  6B92               	clrf	??_touchScreenController& (0+255),b
  5806  0031B4  50C3               	movf	195,w,c	;volatile
  5807  0031B6  2592               	addwf	??_touchScreenController& (0+255),w,b
  5808  0031B8  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  5809  0031BA  0E00               	movlw	0
  5810  0031BC  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  5811  0031BE  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  5812                           
  5813                           ;stateMachine/touchScreenSM.c: 86:             if(valueY<=105)
  5814  0031C0  51AD               	movf	(touchScreenController@valueY+1)& (0+255),w,b
  5815  0031C2  E107               	bnz	u7521
  5816  0031C4  0E6A               	movlw	106
  5817  0031C6  5DAC               	subwf	touchScreenController@valueY& (0+255),w,b
  5818  0031C8  B0D8               	btfsc	status,0,c
  5819  0031CA  EFE9  F018         	goto	u7521
  5820  0031CE  EFEB  F018         	goto	u7520
  5821  0031D2                     u7521:
  5822  0031D2  EFEF  F018         	goto	l9946
  5823  0031D6                     u7520:
  5824  0031D6                     
  5825                           ; BSR set to: 0
  5826                           ;stateMachine/touchScreenSM.c: 87:             {;stateMachine/touchScreenSM.c: 88:      
      +                                     valueY=105;
  5827  0031D6  0E00               	movlw	0
  5828  0031D8  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  5829  0031DA  0E69               	movlw	105
  5830  0031DC  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  5831  0031DE                     l9946:
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;stateMachine/touchScreenSM.c: 90:             valueY=(valueY-105)/2;
  5835  0031DE  0E97               	movlw	151
  5836  0031E0  6F92               	movwf	??_touchScreenController& (0+255),b
  5837  0031E2  0EFF               	movlw	255
  5838  0031E4  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  5839  0031E6  C0AC  F094         	movff	touchScreenController@valueY,??_touchScreenController+2
  5840  0031EA  C0AD  F095         	movff	touchScreenController@valueY+1,??_touchScreenController+3
  5841  0031EE  5192               	movf	??_touchScreenController& (0+255),w,b
  5842  0031F0  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  5843  0031F2  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5844  0031F4  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  5845  0031F6  90D8               	bcf	status,0,c
  5846  0031F8  3195               	rrcf	(??_touchScreenController+3)& (0+255),w,b
  5847  0031FA  6F96               	movwf	(??_touchScreenController+4)& (0+255),b
  5848  0031FC  3194               	rrcf	(??_touchScreenController+2)& (0+255),w,b
  5849  0031FE  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  5850  003200  C096  F0AD         	movff	??_touchScreenController+4,touchScreenController@valueY+1
  5851  003204                     
  5852                           ; BSR set to: 0
  5853                           ;stateMachine/touchScreenSM.c: 91:             XF_scheduleTimer(9,evTimerPos,0);
  5854  003204  0E00               	movlw	0
  5855  003206  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  5856  003208  0E09               	movlw	9
  5857  00320A  6E13               	movwf	XF_scheduleTimer@tm^0,c
  5858  00320C  0E04               	movlw	4
  5859  00320E  6E15               	movwf	XF_scheduleTimer@ev^0,c
  5860  003210  0E00               	movlw	0
  5861  003212  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  5862  003214  EC59  F02B         	call	_XF_scheduleTimer	;wreg free
  5863  003218                     
  5864                           ;stateMachine/touchScreenSM.c: 94:             ADCON0=0b00101001;
  5865  003218  0E29               	movlw	41
  5866  00321A  6EC2               	movwf	194,c	;volatile
  5867  00321C                     
  5868                           ;stateMachine/touchScreenSM.c: 95:             configTouch();
  5869  00321C  EC44  F02F         	call	_configTouch	;wreg free
  5870  003220                     
  5871                           ;stateMachine/touchScreenSM.c: 96:             INT1IF=0;
  5872  003220  90F0               	bcf	4080,0,c	;volatile
  5873  003222                     
  5874                           ;stateMachine/touchScreenSM.c: 97:             INT1IE=1;
  5875  003222  86F0               	bsf	4080,3,c	;volatile
  5876  003224                     
  5877                           ;stateMachine/touchScreenSM.c: 100:             if(PORTBbits.RB1 == 0)
  5878  003224  B281               	btfsc	129,1,c	;volatile
  5879  003226  EF17  F019         	goto	u7531
  5880  00322A  EF19  F019         	goto	u7530
  5881  00322E                     u7531:
  5882  00322E  EF99  F019         	goto	l507
  5883  003232                     u7530:
  5884  003232                     
  5885                           ;stateMachine/touchScreenSM.c: 101:             {;stateMachine/touchScreenSM.c: 102:    
      +                                       sprintf(s,"X: %d",valueX);
  5886  003232  0E98               	movlw	low touchScreenController@s
  5887  003234  0100               	movlb	0	; () banked
  5888  003236  6F82               	movwf	sprintf@s& (0+255),b
  5889  003238  0E00               	movlw	high touchScreenController@s
  5890  00323A  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5891  00323C  0EEA               	movlw	low STR_10
  5892  00323E  6F84               	movwf	sprintf@fmt& (0+255),b
  5893  003240  0E7F               	movlw	high STR_10
  5894  003242  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5895  003244  C0AE  F086         	movff	touchScreenController@valueX,?_sprintf+4
  5896  003248  C0AF  F087         	movff	touchScreenController@valueX+1,?_sprintf+5
  5897  00324C  EC91  F02D         	call	_sprintf	;wreg free
  5898  003250                     
  5899                           ;stateMachine/touchScreenSM.c: 103:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,200,0b0000000000000000,0b1111111111111111);
  5900  003250  0E98               	movlw	low touchScreenController@s
  5901  003252  6E20               	movwf	LCD_DrawText@msg^0,c
  5902  003254  0E00               	movlw	high touchScreenController@s
  5903  003256  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5904  003258  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  5905  00325A  6E22               	movwf	LCD_DrawText@font^0,c
  5906  00325C  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5907  00325E  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5908  003260  0E01               	movlw	1
  5909  003262  6E24               	movwf	LCD_DrawText@align^0,c
  5910  003264  0E00               	movlw	0
  5911  003266  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5912  003268  0EC8               	movlw	200
  5913  00326A  6E25               	movwf	LCD_DrawText@posX^0,c
  5914  00326C  0E00               	movlw	0
  5915  00326E  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5916  003270  0EC8               	movlw	200
  5917  003272  6E27               	movwf	LCD_DrawText@posY^0,c
  5918  003274  0E00               	movlw	0
  5919  003276  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5920  003278  0E00               	movlw	0
  5921  00327A  6E29               	movwf	LCD_DrawText@color^0,c
  5922  00327C  0EFF               	movlw	255
  5923  00327E  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5924  003280  682B               	setf	LCD_DrawText@bg_color^0,c
  5925  003282  EC5B  F00E         	call	_LCD_DrawText	;wreg free
  5926  003286                     
  5927                           ;stateMachine/touchScreenSM.c: 104:                 GameParameters_setX(g,valueX);
  5928  003286  C090  F012         	movff	touchScreenController@g,GameParameters_setX@s
  5929  00328A  C091  F013         	movff	touchScreenController@g+1,GameParameters_setX@s+1
  5930  00328E  C0AE  F014         	movff	touchScreenController@valueX,GameParameters_setX@value
  5931  003292  C0AF  F015         	movff	touchScreenController@valueX+1,GameParameters_setX@value+1
  5932  003296  EC5D  F02F         	call	_GameParameters_setX	;wreg free
  5933  00329A                     
  5934                           ;stateMachine/touchScreenSM.c: 105:                 sprintf(s,"Y: %d",valueY);
  5935  00329A  0E98               	movlw	low touchScreenController@s
  5936  00329C  0100               	movlb	0	; () banked
  5937  00329E  6F82               	movwf	sprintf@s& (0+255),b
  5938  0032A0  0E00               	movlw	high touchScreenController@s
  5939  0032A2  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5940  0032A4  0EF0               	movlw	low STR_11
  5941  0032A6  6F84               	movwf	sprintf@fmt& (0+255),b
  5942  0032A8  0E7F               	movlw	high STR_11
  5943  0032AA  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5944  0032AC  C0AC  F086         	movff	touchScreenController@valueY,?_sprintf+4
  5945  0032B0  C0AD  F087         	movff	touchScreenController@valueY+1,?_sprintf+5
  5946  0032B4  EC91  F02D         	call	_sprintf	;wreg free
  5947  0032B8                     
  5948                           ;stateMachine/touchScreenSM.c: 106:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,250,0b0000000000000000,0b1111111111111111);
  5949  0032B8  0E98               	movlw	low touchScreenController@s
  5950  0032BA  6E20               	movwf	LCD_DrawText@msg^0,c
  5951  0032BC  0E00               	movlw	high touchScreenController@s
  5952  0032BE  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5953  0032C0  0EA1               	movlw	low _arialNarrow_12ptFontInfo
  5954  0032C2  6E22               	movwf	LCD_DrawText@font^0,c
  5955  0032C4  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5956  0032C6  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5957  0032C8  0E01               	movlw	1
  5958  0032CA  6E24               	movwf	LCD_DrawText@align^0,c
  5959  0032CC  0E00               	movlw	0
  5960  0032CE  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5961  0032D0  0EC8               	movlw	200
  5962  0032D2  6E25               	movwf	LCD_DrawText@posX^0,c
  5963  0032D4  0E00               	movlw	0
  5964  0032D6  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5965  0032D8  0EFA               	movlw	250
  5966  0032DA  6E27               	movwf	LCD_DrawText@posY^0,c
  5967  0032DC  0E00               	movlw	0
  5968  0032DE  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5969  0032E0  0E00               	movlw	0
  5970  0032E2  6E29               	movwf	LCD_DrawText@color^0,c
  5971  0032E4  0EFF               	movlw	255
  5972  0032E6  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5973  0032E8  682B               	setf	LCD_DrawText@bg_color^0,c
  5974  0032EA  EC5B  F00E         	call	_LCD_DrawText	;wreg free
  5975                           
  5976                           ;stateMachine/touchScreenSM.c: 107:                 GameParameters_setY(g,valueY);
  5977  0032EE  C090  F012         	movff	touchScreenController@g,GameParameters_setY@s
  5978  0032F2  C091  F013         	movff	touchScreenController@g+1,GameParameters_setY@s+1
  5979  0032F6  C0AC  F014         	movff	touchScreenController@valueY,GameParameters_setY@value
  5980  0032FA  C0AD  F015         	movff	touchScreenController@valueY+1,GameParameters_setY@value+1
  5981  0032FE  EC52  F02F         	call	_GameParameters_setY	;wreg free
  5982  003302  EF99  F019         	goto	l507
  5983  003306                     l9972:
  5984  003306  0100               	movlb	0	; () banked
  5985  003308  51DE               	movf	_touchScreenState& (0+255),w,b
  5986  00330A  6F92               	movwf	??_touchScreenController& (0+255),b
  5987  00330C  6B93               	clrf	(??_touchScreenController+1)& (0+255),b
  5988                           
  5989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5990                           ; Switch size 1, requested type "simple"
  5991                           ; Number of cases is 1, Range of values is 0 to 0
  5992                           ; switch strategies available:
  5993                           ; Name         Instructions Cycles
  5994                           ; simple_byte            4     3 (average)
  5995                           ;	Chosen strategy is simple_byte
  5996  00330E  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5997  003310  0A00               	xorlw	0	; case 0
  5998  003312  B4D8               	btfsc	status,2,c
  5999  003314  EF8E  F019         	goto	l10476
  6000  003318  EF99  F019         	goto	l507
  6001  00331C                     l10476:
  6002                           
  6003                           ; BSR set to: 0
  6004                           ; Switch size 1, requested type "simple"
  6005                           ; Number of cases is 2, Range of values is 0 to 1
  6006                           ; switch strategies available:
  6007                           ; Name         Instructions Cycles
  6008                           ; simple_byte            7     4 (average)
  6009                           ;	Chosen strategy is simple_byte
  6010  00331C  5192               	movf	??_touchScreenController& (0+255),w,b
  6011  00331E  0A00               	xorlw	0	; case 0
  6012  003320  B4D8               	btfsc	status,2,c
  6013  003322  EF66  F018         	goto	l9928
  6014  003326  0A01               	xorlw	1	; case 1
  6015  003328  B4D8               	btfsc	status,2,c
  6016  00332A  EF6A  F018         	goto	l496
  6017  00332E  EF99  F019         	goto	l507
  6018  003332                     l507:
  6019  003332  0012               	return		;funcret
  6020  003334                     __end_of_touchScreenController:
  6021                           	callstack 0
  6022                           
  6023 ;; *************** function _sprintf *****************
  6024 ;; Defined at:
  6025 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  s               2   34[BANK0 ] PTR unsigned char 
  6028 ;;		 -> touchScreenController@s(20), 
  6029 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
  6030 ;;		 -> STR_11(6), STR_10(6), 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  f               6   42[BANK0 ] struct _IO_FILE
  6033 ;;  ap              2   40[BANK0 ] PTR void [1]
  6034 ;;		 -> ?_sprintf(2), 
  6035 ;;  ret             2    0        int 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  2   34[BANK0 ] int 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6045 ;;      Params:         0       6       0       0       0       0       0
  6046 ;;      Locals:         0       8       0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0
  6048 ;;      Totals:         0      14       0       0       0       0       0
  6049 ;;Total ram usage:       14 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; Hardware stack levels required when called: 11
  6052 ;; This function calls:
  6053 ;;		_vfprintf
  6054 ;; This function is called by:
  6055 ;;		_touchScreenController
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text17
  6060  005B22                     __ptext17:
  6061                           	callstack 0
  6062  005B22                     _sprintf:
  6063                           	callstack 16
  6064  005B22  0E86               	movlw	low (?_sprintf+4)
  6065  005B24  0100               	movlb	0	; () banked
  6066  005B26  6F88               	movwf	sprintf@ap& (0+255),b
  6067  005B28  0E00               	movlw	high (?_sprintf+4)
  6068  005B2A  6F89               	movwf	(sprintf@ap+1)& (0+255),b
  6069  005B2C  C082  F08A         	movff	sprintf@s,sprintf@f
  6070  005B30  C083  F08B         	movff	sprintf@s+1,sprintf@f+1
  6071  005B34                     
  6072                           ; BSR set to: 0
  6073  005B34  0E00               	movlw	0
  6074  005B36  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  6075  005B38  0E00               	movlw	0
  6076  005B3A  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  6077  005B3C                     
  6078                           ; BSR set to: 0
  6079  005B3C  0E00               	movlw	0
  6080  005B3E  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  6081  005B40  0E00               	movlw	0
  6082  005B42  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  6083  005B44                     
  6084                           ; BSR set to: 0
  6085  005B44  0E8A               	movlw	low sprintf@f
  6086  005B46  6F7A               	movwf	vfprintf@fp& (0+255),b
  6087  005B48  0E00               	movlw	high sprintf@f
  6088  005B4A  6F7B               	movwf	(vfprintf@fp+1)& (0+255),b
  6089  005B4C  C084  F07C         	movff	sprintf@fmt,vfprintf@fmt
  6090  005B50  C085  F07D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6091  005B54  0E88               	movlw	low sprintf@ap
  6092  005B56  6F7E               	movwf	vfprintf@ap& (0+255),b
  6093  005B58  0E00               	movlw	high sprintf@ap
  6094  005B5A  6F7F               	movwf	(vfprintf@ap+1)& (0+255),b
  6095  005B5C  EC05  F02D         	call	_vfprintf	;wreg free
  6096  005B60  0100               	movlb	0	; () banked
  6097  005B62  518C               	movf	(sprintf@f+2)& (0+255),w,b
  6098  005B64  2582               	addwf	sprintf@s& (0+255),w,b
  6099  005B66  6ED9               	movwf	fsr2l,c
  6100  005B68  518D               	movf	(sprintf@f+3)& (0+255),w,b
  6101  005B6A  2183               	addwfc	(sprintf@s+1)& (0+255),w,b
  6102  005B6C  6EDA               	movwf	fsr2h,c
  6103  005B6E  0E00               	movlw	0
  6104  005B70  6EDF               	movwf	indf2,c
  6105  005B72                     
  6106                           ; BSR set to: 0
  6107  005B72  0012               	return		;funcret
  6108  005B74                     __end_of_sprintf:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function _vfprintf *****************
  6112 ;; Defined at:
  6113 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  6116 ;;		 -> sprintf@f(6), 
  6117 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  6118 ;;		 -> STR_11(6), STR_10(6), 
  6119 ;;  ap              2   30[BANK0 ] PTR PTR void 
  6120 ;;		 -> sprintf@ap(2), 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  cfmt            2   32[BANK0 ] PTR unsigned char 
  6123 ;;		 -> STR_11(6), STR_10(6), 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2   26[BANK0 ] int 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6133 ;;      Params:         0       6       0       0       0       0       0
  6134 ;;      Locals:         0       2       0       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0
  6136 ;;      Totals:         0       8       0       0       0       0       0
  6137 ;;Total ram usage:        8 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; Hardware stack levels required when called: 10
  6140 ;; This function calls:
  6141 ;;		_vfpfcnvrt
  6142 ;; This function is called by:
  6143 ;;		_sprintf
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text18
  6148  005A0A                     __ptext18:
  6149                           	callstack 0
  6150  005A0A                     _vfprintf:
  6151                           	callstack 16
  6152  005A0A                     
  6153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6154  005A0A  C07C  F080         	movff	vfprintf@fmt,vfprintf@cfmt
  6155  005A0E  C07D  F081         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6156  005A12                     
  6157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6158  005A12  0E00               	movlw	0
  6159  005A14  0100               	movlb	0	; () banked
  6160  005A16  6FDC               	movwf	(_nout+1)& (0+255),b
  6161  005A18  0E00               	movlw	0
  6162  005A1A  6FDB               	movwf	_nout& (0+255),b
  6163                           
  6164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6165  005A1C  EF23  F02D         	goto	l9498
  6166  005A20                     l9496:
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6170  005A20  C07A  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  6171  005A24  C07B  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6172  005A28  0E80               	movlw	low vfprintf@cfmt
  6173  005A2A  6E41               	movwf	vfpfcnvrt@fmt^0,c
  6174  005A2C  0E00               	movlw	high vfprintf@cfmt
  6175  005A2E  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6176  005A30  C07E  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  6177  005A34  C07F  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6178  005A38  ECCD  F01B         	call	_vfpfcnvrt	;wreg free
  6179  005A3C  503F               	movf	?_vfpfcnvrt^0,w,c
  6180  005A3E  0100               	movlb	0	; () banked
  6181  005A40  27DB               	addwf	_nout& (0+255),f,b
  6182  005A42  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
  6183  005A44  23DC               	addwfc	(_nout+1)& (0+255),f,b
  6184  005A46                     l9498:
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6188  005A46  C080  FFF6         	movff	vfprintf@cfmt,tblptrl
  6189  005A4A  C081  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6190  005A4E                     	if	0	;tblptru may be non-zero
  6191  005A4E                     	endif
  6192  005A4E                     	if	0	;tblptru may be non-zero
  6193  005A4E                     	endif
  6194  005A4E  0008               	tblrd		*
  6195  005A50  50F5               	movf	tablat,w,c
  6196  005A52  0900               	iorlw	0
  6197  005A54  A4D8               	btfss	status,2,c
  6198  005A56  EF2F  F02D         	goto	u6801
  6199  005A5A  EF31  F02D         	goto	u6800
  6200  005A5E                     u6801:
  6201  005A5E  EF10  F02D         	goto	l9496
  6202  005A62                     u6800:
  6203  005A62                     
  6204                           ; BSR set to: 0
  6205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6206  005A62  C0DB  F07A         	movff	_nout,?_vfprintf
  6207  005A66  C0DC  F07B         	movff	_nout+1,?_vfprintf+1
  6208  005A6A                     
  6209                           ; BSR set to: 0
  6210  005A6A  0012               	return		;funcret
  6211  005A6C                     __end_of_vfprintf:
  6212                           	callstack 0
  6213                           
  6214 ;; *************** function _vfpfcnvrt *****************
  6215 ;; Defined at:
  6216 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  6219 ;;		 -> sprintf@f(6), 
  6220 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  6221 ;;		 -> vfprintf@cfmt(2), 
  6222 ;;  ap              2   66[COMRAM] PTR PTR void 
  6223 ;;		 -> sprintf@ap(2), 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  ll              8   18[BANK0 ] long long 
  6226 ;;  llu             8    0        unsigned long long 
  6227 ;;  f               4    0        unsigned long long 
  6228 ;;  vp              3    0        PTR void 
  6229 ;;  ct              3    0        unsigned char [3]
  6230 ;;  cp              3    0        PTR unsigned char 
  6231 ;;  i               2    0        int 
  6232 ;;  done            2    0        int 
  6233 ;;  c               1    0        unsigned char 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  2   62[COMRAM] int 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6243 ;;      Params:         6       0       0       0       0       0       0
  6244 ;;      Locals:         0       8       0       0       0       0       0
  6245 ;;      Temps:          2       0       0       0       0       0       0
  6246 ;;      Totals:         8       8       0       0       0       0       0
  6247 ;;Total ram usage:       16 bytes
  6248 ;; Hardware stack levels used: 1
  6249 ;; Hardware stack levels required when called: 9
  6250 ;; This function calls:
  6251 ;;		_dtoa
  6252 ;;		_fputc
  6253 ;; This function is called by:
  6254 ;;		_vfprintf
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text19
  6259  00379A                     __ptext19:
  6260                           	callstack 0
  6261  00379A                     _vfpfcnvrt:
  6262                           	callstack 16
  6263  00379A                     
  6264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6265  00379A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6266  00379E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6267  0037A2  CFDE FFF6          	movff	postinc2,tblptrl
  6268  0037A6  CFDD FFF7          	movff	postdec2,tblptrh
  6269  0037AA                     	if	0	;tblptru may be non-zero
  6270  0037AA                     	endif
  6271  0037AA                     	if	0	;tblptru may be non-zero
  6272  0037AA                     	endif
  6273  0037AA  0008               	tblrd		*
  6274  0037AC  50F5               	movf	tablat,w,c
  6275  0037AE  0A25               	xorlw	37
  6276  0037B0  A4D8               	btfss	status,2,c
  6277  0037B2  EFDD  F01B         	goto	u6431
  6278  0037B6  EFDF  F01B         	goto	u6430
  6279  0037BA                     u6431:
  6280  0037BA  EF8B  F01C         	goto	l9298
  6281  0037BE                     u6430:
  6282  0037BE                     
  6283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6284  0037BE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6285  0037C2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6286  0037C6  2ADE               	incf	postinc2,f,c
  6287  0037C8  0E00               	movlw	0
  6288  0037CA  22DD               	addwfc	postdec2,f,c
  6289  0037CC                     
  6290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6291  0037CC  0E00               	movlw	0
  6292  0037CE  6E48               	movwf	(_width+1)^0,c
  6293  0037D0  0E00               	movlw	0
  6294  0037D2  6E47               	movwf	_width^0,c
  6295  0037D4  C047  F04B         	movff	_width,_flags
  6296  0037D8  C048  F04C         	movff	_width+1,_flags+1
  6297  0037DC                     
  6298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6299  0037DC  6849               	setf	_prec^0,c
  6300  0037DE  684A               	setf	(_prec+1)^0,c
  6301  0037E0                     
  6302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6303  0037E0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6304  0037E4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6305  0037E8  CFDE FFF6          	movff	postinc2,tblptrl
  6306  0037EC  CFDD FFF7          	movff	postdec2,tblptrh
  6307  0037F0                     	if	0	;tblptru may be non-zero
  6308  0037F0                     	endif
  6309  0037F0                     	if	0	;tblptru may be non-zero
  6310  0037F0                     	endif
  6311  0037F0  0008               	tblrd		*
  6312  0037F2  50F5               	movf	tablat,w,c
  6313  0037F4  0A64               	xorlw	100
  6314  0037F6  B4D8               	btfsc	status,2,c
  6315  0037F8  EF00  F01C         	goto	u6441
  6316  0037FC  EF02  F01C         	goto	u6440
  6317  003800                     u6441:
  6318  003800  EF14  F01C         	goto	l9276
  6319  003804                     u6440:
  6320  003804  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6321  003808  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6322  00380C  CFDE FFF6          	movff	postinc2,tblptrl
  6323  003810  CFDD FFF7          	movff	postdec2,tblptrh
  6324  003814                     	if	0	;tblptru may be non-zero
  6325  003814                     	endif
  6326  003814                     	if	0	;tblptru may be non-zero
  6327  003814                     	endif
  6328  003814  0008               	tblrd		*
  6329  003816  50F5               	movf	tablat,w,c
  6330  003818  0A69               	xorlw	105
  6331  00381A  A4D8               	btfss	status,2,c
  6332  00381C  EF12  F01C         	goto	u6451
  6333  003820  EF14  F01C         	goto	u6450
  6334  003824                     u6451:
  6335  003824  EF55  F01C         	goto	l9282
  6336  003828                     u6450:
  6337  003828                     l9276:
  6338                           
  6339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6340  003828  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6341  00382C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6342  003830  2ADE               	incf	postinc2,f,c
  6343  003832  0E00               	movlw	0
  6344  003834  22DD               	addwfc	postdec2,f,c
  6345                           
  6346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6347  003836  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6348  00383A  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6349  00383E  CFDF F045          	movff	indf2,??_vfpfcnvrt
  6350  003842  0E02               	movlw	2
  6351  003844  26DE               	addwf	postinc2,f,c
  6352  003846  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  6353  00384A  0E00               	movlw	0
  6354  00384C  22DD               	addwfc	postdec2,f,c
  6355  00384E  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6356  003852  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6357  003856  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
  6358  00385A  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
  6359  00385E  0100               	movlb	0	; () banked
  6360  003860  0E00               	movlw	0
  6361  003862  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6362  003864  0EFF               	movlw	-1
  6363  003866  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6364  003868  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6365  00386A  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6366  00386C  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6367  00386E  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6368  003870  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6369  003872                     
  6370                           ; BSR set to: 0
  6371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6372  003872  C03F  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
  6373  003876  C040  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6374  00387A  C072  F02F         	movff	vfpfcnvrt@ll,dtoa@d
  6375  00387E  C073  F030         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6376  003882  C074  F031         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6377  003886  C075  F032         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6378  00388A  C076  F033         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6379  00388E  C077  F034         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6380  003892  C078  F035         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6381  003896  C079  F036         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6382  00389A  EC9F  F015         	call	_dtoa	;wreg free
  6383  00389E  C02D  F03F         	movff	?_dtoa,?_vfpfcnvrt
  6384  0038A2  C02E  F040         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6385  0038A6  EFA6  F01C         	goto	l1525
  6386  0038AA                     l9282:
  6387                           
  6388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6389  0038AA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6390  0038AE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6391  0038B2  CFDE FFF6          	movff	postinc2,tblptrl
  6392  0038B6  CFDD FFF7          	movff	postdec2,tblptrh
  6393  0038BA                     	if	0	;tblptru may be non-zero
  6394  0038BA                     	endif
  6395  0038BA                     	if	0	;tblptru may be non-zero
  6396  0038BA                     	endif
  6397  0038BA  0008               	tblrd		*
  6398  0038BC  50F5               	movf	tablat,w,c
  6399  0038BE  0A25               	xorlw	37
  6400  0038C0  A4D8               	btfss	status,2,c
  6401  0038C2  EF65  F01C         	goto	u6461
  6402  0038C6  EF67  F01C         	goto	u6460
  6403  0038CA                     u6461:
  6404  0038CA  EF7E  F01C         	goto	l9292
  6405  0038CE                     u6460:
  6406  0038CE                     
  6407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6408  0038CE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6409  0038D2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6410  0038D6  2ADE               	incf	postinc2,f,c
  6411  0038D8  0E00               	movlw	0
  6412  0038DA  22DD               	addwfc	postdec2,f,c
  6413  0038DC                     
  6414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6415  0038DC  0E00               	movlw	0
  6416  0038DE  6E13               	movwf	(fputc@c+1)^0,c
  6417  0038E0  0E25               	movlw	37
  6418  0038E2  6E12               	movwf	fputc@c^0,c
  6419  0038E4  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
  6420  0038E8  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6421  0038EC  EC76  F025         	call	_fputc	;wreg free
  6422  0038F0                     l9288:
  6423                           
  6424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6425  0038F0  0E00               	movlw	0
  6426  0038F2  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  6427  0038F4  0E01               	movlw	1
  6428  0038F6  6E3F               	movwf	?_vfpfcnvrt^0,c
  6429  0038F8  EFA6  F01C         	goto	l1525
  6430  0038FC                     l9292:
  6431                           
  6432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6433  0038FC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6434  003900  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6435  003904  2ADE               	incf	postinc2,f,c
  6436  003906  0E00               	movlw	0
  6437  003908  22DD               	addwfc	postdec2,f,c
  6438  00390A                     
  6439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6440  00390A  0E00               	movlw	0
  6441  00390C  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  6442  00390E  0E00               	movlw	0
  6443  003910  6E3F               	movwf	?_vfpfcnvrt^0,c
  6444  003912  EFA6  F01C         	goto	l1525
  6445  003916                     l9298:
  6446                           
  6447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6448  003916  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6449  00391A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6450  00391E  CFDE FFF6          	movff	postinc2,tblptrl
  6451  003922  CFDD FFF7          	movff	postdec2,tblptrh
  6452  003926                     	if	0	;tblptru may be non-zero
  6453  003926                     	endif
  6454  003926                     	if	0	;tblptru may be non-zero
  6455  003926                     	endif
  6456  003926  0008               	tblrd		*
  6457  003928  50F5               	movf	tablat,w,c
  6458  00392A  6E12               	movwf	fputc@c^0,c
  6459  00392C  6A13               	clrf	(fputc@c+1)^0,c
  6460  00392E  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
  6461  003932  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6462  003936  EC76  F025         	call	_fputc	;wreg free
  6463  00393A                     
  6464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6465  00393A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6466  00393E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6467  003942  2ADE               	incf	postinc2,f,c
  6468  003944  0E00               	movlw	0
  6469  003946  22DD               	addwfc	postdec2,f,c
  6470  003948  EF78  F01C         	goto	l9288
  6471  00394C                     l1525:
  6472  00394C  0012               	return		;funcret
  6473  00394E                     __end_of_vfpfcnvrt:
  6474                           	callstack 0
  6475                           
  6476 ;; *************** function _dtoa *****************
  6477 ;; Defined at:
  6478 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
  6481 ;;		 -> sprintf@f(6), 
  6482 ;;  d               8   46[COMRAM] long long 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  n               8    8[BANK0 ] long long 
  6485 ;;  i               2   16[BANK0 ] int 
  6486 ;;  s               2    6[BANK0 ] int 
  6487 ;;  w               2    4[BANK0 ] int 
  6488 ;;  p               2    2[BANK0 ] int 
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  2   44[COMRAM] int 
  6491 ;; Registers used:
  6492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6498 ;;      Params:        10       0       0       0       0       0       0
  6499 ;;      Locals:         0      18       0       0       0       0       0
  6500 ;;      Temps:          8       0       0       0       0       0       0
  6501 ;;      Totals:        18      18       0       0       0       0       0
  6502 ;;Total ram usage:       36 bytes
  6503 ;; Hardware stack levels used: 1
  6504 ;; Hardware stack levels required when called: 8
  6505 ;; This function calls:
  6506 ;;		___aodiv
  6507 ;;		___aomod
  6508 ;;		_abs
  6509 ;;		_pad
  6510 ;; This function is called by:
  6511 ;;		_vfpfcnvrt
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text20
  6516  002B3E                     __ptext20:
  6517                           	callstack 0
  6518  002B3E                     _dtoa:
  6519                           	callstack 16
  6520  002B3E                     
  6521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6522  002B3E  C02F  F068         	movff	dtoa@d,dtoa@n
  6523  002B42  C030  F069         	movff	dtoa@d+1,dtoa@n+1
  6524  002B46  C031  F06A         	movff	dtoa@d+2,dtoa@n+2
  6525  002B4A  C032  F06B         	movff	dtoa@d+3,dtoa@n+3
  6526  002B4E  C033  F06C         	movff	dtoa@d+4,dtoa@n+4
  6527  002B52  C034  F06D         	movff	dtoa@d+5,dtoa@n+5
  6528  002B56  C035  F06E         	movff	dtoa@d+6,dtoa@n+6
  6529  002B5A  C036  F06F         	movff	dtoa@d+7,dtoa@n+7
  6530  002B5E                     
  6531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6532  002B5E  0100               	movlb	0	; () banked
  6533  002B60  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
  6534  002B62  EFB5  F015         	goto	u6131
  6535  002B66  EFB8  F015         	goto	u6130
  6536  002B6A                     u6131:
  6537  002B6A  0E01               	movlw	1
  6538  002B6C  EFB9  F015         	goto	u6140
  6539  002B70                     u6130:
  6540  002B70  0E00               	movlw	0
  6541  002B72                     u6140:
  6542  002B72  6F66               	movwf	dtoa@s& (0+255),b
  6543  002B74  6B67               	clrf	(dtoa@s+1)& (0+255),b
  6544                           
  6545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6546  002B76  5166               	movf	dtoa@s& (0+255),w,b
  6547  002B78  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6548  002B7A  B4D8               	btfsc	status,2,c
  6549  002B7C  EFC2  F015         	goto	u6151
  6550  002B80  EFC4  F015         	goto	u6150
  6551  002B84                     u6151:
  6552  002B84  EFD4  F015         	goto	l9016
  6553  002B88                     u6150:
  6554  002B88                     
  6555                           ; BSR set to: 0
  6556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6557  002B88  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  6558  002B8A  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  6559  002B8C  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  6560  002B8E  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  6561  002B90  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  6562  002B92  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  6563  002B94  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  6564  002B96  6D68               	negf	dtoa@n& (0+255),b
  6565  002B98  0E00               	movlw	0
  6566  002B9A  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  6567  002B9C  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  6568  002B9E  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  6569  002BA0  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  6570  002BA2  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  6571  002BA4  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  6572  002BA6  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  6573  002BA8                     l9016:
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6577  002BA8  BE4A               	btfsc	(_prec+1)^0,7,c
  6578  002BAA  EFD9  F015         	goto	u6161
  6579  002BAE  EFDB  F015         	goto	u6160
  6580  002BB2                     u6161:
  6581  002BB2  EFDC  F015         	goto	l9020
  6582  002BB6                     u6160:
  6583  002BB6                     
  6584                           ; BSR set to: 0
  6585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6586  002BB6  924B               	bcf	_flags^0,1,c
  6587  002BB8                     l9020:
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6591  002BB8  BE4A               	btfsc	(_prec+1)^0,7,c
  6592  002BBA  EFE9  F015         	goto	u6170
  6593  002BBE  504A               	movf	(_prec+1)^0,w,c
  6594  002BC0  E106               	bnz	u6171
  6595  002BC2  0449               	decf	_prec^0,w,c
  6596  002BC4  B0D8               	btfsc	status,0,c
  6597  002BC6  EFE7  F015         	goto	u6171
  6598  002BCA  EFE9  F015         	goto	u6170
  6599  002BCE                     u6171:
  6600  002BCE  EFEF  F015         	goto	l1498
  6601  002BD2                     u6170:
  6602  002BD2                     
  6603                           ; BSR set to: 0
  6604  002BD2  0E00               	movlw	0
  6605  002BD4  6F63               	movwf	(dtoa@p+1)& (0+255),b
  6606  002BD6  0E01               	movlw	1
  6607  002BD8  6F62               	movwf	dtoa@p& (0+255),b
  6608  002BDA  EFF3  F015         	goto	l1500
  6609  002BDE                     l1498:
  6610                           
  6611                           ; BSR set to: 0
  6612  002BDE  C049  F062         	movff	_prec,dtoa@p
  6613  002BE2  C04A  F063         	movff	_prec+1,dtoa@p+1
  6614  002BE6                     l1500:
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6618  002BE6  C047  F064         	movff	_width,dtoa@w
  6619  002BEA  C048  F065         	movff	_width+1,dtoa@w+1
  6620  002BEE                     
  6621                           ; BSR set to: 0
  6622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6623  002BEE  5166               	movf	dtoa@s& (0+255),w,b
  6624  002BF0  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6625  002BF2  A4D8               	btfss	status,2,c
  6626  002BF4  EFFE  F015         	goto	u6181
  6627  002BF8  EF00  F016         	goto	u6180
  6628  002BFC                     u6181:
  6629  002BFC  EF07  F016         	goto	l9028
  6630  002C00                     u6180:
  6631  002C00                     
  6632                           ; BSR set to: 0
  6633  002C00  A44B               	btfss	_flags^0,2,c
  6634  002C02  EF05  F016         	goto	u6191
  6635  002C06  EF07  F016         	goto	u6190
  6636  002C0A                     u6191:
  6637  002C0A  EF0A  F016         	goto	l9030
  6638  002C0E                     u6190:
  6639  002C0E                     l9028:
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  6643  002C0E  0764               	decf	dtoa@w& (0+255),f,b
  6644  002C10  A0D8               	btfss	status,0,c
  6645  002C12  0765               	decf	(dtoa@w+1)& (0+255),f,b
  6646  002C14                     l9030:
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6650  002C14  0E00               	movlw	0
  6651  002C16  6F71               	movwf	(dtoa@i+1)& (0+255),b
  6652  002C18  0E1F               	movlw	31
  6653  002C1A  6F70               	movwf	dtoa@i& (0+255),b
  6654  002C1C                     
  6655                           ; BSR set to: 0
  6656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6657  002C1C  0E00               	movlw	0
  6658  002C1E  6FFF               	movwf	(_dbuf+31)& (0+255),b
  6659                           
  6660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6661  002C20  EF8F  F016         	goto	l9044
  6662  002C24                     l9034:
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  6666  002C24  0770               	decf	dtoa@i& (0+255),f,b
  6667  002C26  A0D8               	btfss	status,0,c
  6668  002C28  0771               	decf	(dtoa@i+1)& (0+255),f,b
  6669  002C2A                     
  6670                           ; BSR set to: 0
  6671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6672  002C2A  0EE0               	movlw	low _dbuf
  6673  002C2C  2570               	addwf	dtoa@i& (0+255),w,b
  6674  002C2E  6ED9               	movwf	fsr2l,c
  6675  002C30  0E00               	movlw	high _dbuf
  6676  002C32  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6677  002C34  6EDA               	movwf	fsr2h,c
  6678  002C36  C068  F012         	movff	dtoa@n,___aomod@dividend
  6679  002C3A  C069  F013         	movff	dtoa@n+1,___aomod@dividend+1
  6680  002C3E  C06A  F014         	movff	dtoa@n+2,___aomod@dividend+2
  6681  002C42  C06B  F015         	movff	dtoa@n+3,___aomod@dividend+3
  6682  002C46  C06C  F016         	movff	dtoa@n+4,___aomod@dividend+4
  6683  002C4A  C06D  F017         	movff	dtoa@n+5,___aomod@dividend+5
  6684  002C4E  C06E  F018         	movff	dtoa@n+6,___aomod@dividend+6
  6685  002C52  C06F  F019         	movff	dtoa@n+7,___aomod@dividend+7
  6686  002C56  0E0A               	movlw	10
  6687  002C58  6E1A               	movwf	___aomod@divisor^0,c
  6688  002C5A  0E00               	movlw	0
  6689  002C5C  6E1B               	movwf	(___aomod@divisor+1)^0,c
  6690  002C5E  0E00               	movlw	0
  6691  002C60  6E1C               	movwf	(___aomod@divisor+2)^0,c
  6692  002C62  0E00               	movlw	0
  6693  002C64  6E1D               	movwf	(___aomod@divisor+3)^0,c
  6694  002C66  0E00               	movlw	0
  6695  002C68  6E1E               	movwf	(___aomod@divisor+4)^0,c
  6696  002C6A  0E00               	movlw	0
  6697  002C6C  6E1F               	movwf	(___aomod@divisor+5)^0,c
  6698  002C6E  0E00               	movlw	0
  6699  002C70  6E20               	movwf	(___aomod@divisor+6)^0,c
  6700  002C72  0E00               	movlw	0
  6701  002C74  6E21               	movwf	(___aomod@divisor+7)^0,c
  6702  002C76  EC0B  F01F         	call	___aomod	;wreg free
  6703  002C7A  C012  F037         	movff	?___aomod,??_dtoa
  6704  002C7E  C013  F038         	movff	?___aomod+1,??_dtoa+1
  6705  002C82  C014  F039         	movff	?___aomod+2,??_dtoa+2
  6706  002C86  C015  F03A         	movff	?___aomod+3,??_dtoa+3
  6707  002C8A  C016  F03B         	movff	?___aomod+4,??_dtoa+4
  6708  002C8E  C017  F03C         	movff	?___aomod+5,??_dtoa+5
  6709  002C92  C018  F03D         	movff	?___aomod+6,??_dtoa+6
  6710  002C96  C019  F03E         	movff	?___aomod+7,??_dtoa+7
  6711  002C9A  C037  F024         	movff	??_dtoa,abs@a
  6712  002C9E  C039  F025         	movff	??_dtoa+2,abs@a+1
  6713  002CA2  EC74  F02E         	call	_abs	;wreg free
  6714  002CA6  5024               	movf	?_abs^0,w,c
  6715  002CA8  0F30               	addlw	48
  6716  002CAA  6EDF               	movwf	indf2,c
  6717  002CAC                     
  6718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  6719  002CAC  0100               	movlb	0	; () banked
  6720  002CAE  0762               	decf	dtoa@p& (0+255),f,b
  6721  002CB0  A0D8               	btfss	status,0,c
  6722  002CB2  0763               	decf	(dtoa@p+1)& (0+255),f,b
  6723  002CB4                     
  6724                           ; BSR set to: 0
  6725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  6726  002CB4  0764               	decf	dtoa@w& (0+255),f,b
  6727  002CB6  A0D8               	btfss	status,0,c
  6728  002CB8  0765               	decf	(dtoa@w+1)& (0+255),f,b
  6729  002CBA                     
  6730                           ; BSR set to: 0
  6731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6732  002CBA  C068  F012         	movff	dtoa@n,___aodiv@dividend
  6733  002CBE  C069  F013         	movff	dtoa@n+1,___aodiv@dividend+1
  6734  002CC2  C06A  F014         	movff	dtoa@n+2,___aodiv@dividend+2
  6735  002CC6  C06B  F015         	movff	dtoa@n+3,___aodiv@dividend+3
  6736  002CCA  C06C  F016         	movff	dtoa@n+4,___aodiv@dividend+4
  6737  002CCE  C06D  F017         	movff	dtoa@n+5,___aodiv@dividend+5
  6738  002CD2  C06E  F018         	movff	dtoa@n+6,___aodiv@dividend+6
  6739  002CD6  C06F  F019         	movff	dtoa@n+7,___aodiv@dividend+7
  6740  002CDA  0E0A               	movlw	10
  6741  002CDC  6E1A               	movwf	___aodiv@divisor^0,c
  6742  002CDE  0E00               	movlw	0
  6743  002CE0  6E1B               	movwf	(___aodiv@divisor+1)^0,c
  6744  002CE2  0E00               	movlw	0
  6745  002CE4  6E1C               	movwf	(___aodiv@divisor+2)^0,c
  6746  002CE6  0E00               	movlw	0
  6747  002CE8  6E1D               	movwf	(___aodiv@divisor+3)^0,c
  6748  002CEA  0E00               	movlw	0
  6749  002CEC  6E1E               	movwf	(___aodiv@divisor+4)^0,c
  6750  002CEE  0E00               	movlw	0
  6751  002CF0  6E1F               	movwf	(___aodiv@divisor+5)^0,c
  6752  002CF2  0E00               	movlw	0
  6753  002CF4  6E20               	movwf	(___aodiv@divisor+6)^0,c
  6754  002CF6  0E00               	movlw	0
  6755  002CF8  6E21               	movwf	(___aodiv@divisor+7)^0,c
  6756  002CFA  EC47  F01E         	call	___aodiv	;wreg free
  6757  002CFE  C012  F068         	movff	?___aodiv,dtoa@n
  6758  002D02  C013  F069         	movff	?___aodiv+1,dtoa@n+1
  6759  002D06  C014  F06A         	movff	?___aodiv+2,dtoa@n+2
  6760  002D0A  C015  F06B         	movff	?___aodiv+3,dtoa@n+3
  6761  002D0E  C016  F06C         	movff	?___aodiv+4,dtoa@n+4
  6762  002D12  C017  F06D         	movff	?___aodiv+5,dtoa@n+5
  6763  002D16  C018  F06E         	movff	?___aodiv+6,dtoa@n+6
  6764  002D1A  C019  F06F         	movff	?___aodiv+7,dtoa@n+7
  6765  002D1E                     l9044:
  6766                           
  6767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6768  002D1E  0100               	movlb	0	; () banked
  6769  002D20  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  6770  002D22  EF9B  F016         	goto	u6201
  6771  002D26  5171               	movf	(dtoa@i+1)& (0+255),w,b
  6772  002D28  E108               	bnz	u6200
  6773  002D2A  0570               	decf	dtoa@i& (0+255),w,b
  6774  002D2C  A0D8               	btfss	status,0,c
  6775  002D2E  EF9B  F016         	goto	u6201
  6776  002D32  EF9D  F016         	goto	u6200
  6777  002D36                     u6201:
  6778  002D36  EFCD  F016         	goto	l9054
  6779  002D3A                     u6200:
  6780  002D3A                     
  6781                           ; BSR set to: 0
  6782  002D3A  5168               	movf	dtoa@n& (0+255),w,b
  6783  002D3C  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  6784  002D3E  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  6785  002D40  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  6786  002D42  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  6787  002D44  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  6788  002D46  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  6789  002D48  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  6790  002D4A  A4D8               	btfss	status,2,c
  6791  002D4C  EFAA  F016         	goto	u6211
  6792  002D50  EFAC  F016         	goto	u6210
  6793  002D54                     u6211:
  6794  002D54  EF12  F016         	goto	l9034
  6795  002D58                     u6210:
  6796  002D58                     
  6797                           ; BSR set to: 0
  6798  002D58  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  6799  002D5A  EFB9  F016         	goto	u6220
  6800  002D5E  5163               	movf	(dtoa@p+1)& (0+255),w,b
  6801  002D60  E106               	bnz	u6221
  6802  002D62  0562               	decf	dtoa@p& (0+255),w,b
  6803  002D64  B0D8               	btfsc	status,0,c
  6804  002D66  EFB7  F016         	goto	u6221
  6805  002D6A  EFB9  F016         	goto	u6220
  6806  002D6E                     u6221:
  6807  002D6E  EF12  F016         	goto	l9034
  6808  002D72                     u6220:
  6809  002D72                     
  6810                           ; BSR set to: 0
  6811  002D72  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  6812  002D74  EFC4  F016         	goto	u6231
  6813  002D78  5165               	movf	(dtoa@w+1)& (0+255),w,b
  6814  002D7A  E108               	bnz	u6230
  6815  002D7C  0564               	decf	dtoa@w& (0+255),w,b
  6816  002D7E  A0D8               	btfss	status,0,c
  6817  002D80  EFC4  F016         	goto	u6231
  6818  002D84  EFC6  F016         	goto	u6230
  6819  002D88                     u6231:
  6820  002D88  EFCD  F016         	goto	l9054
  6821  002D8C                     u6230:
  6822  002D8C                     
  6823                           ; BSR set to: 0
  6824  002D8C  B24B               	btfsc	_flags^0,1,c
  6825  002D8E  EFCB  F016         	goto	u6241
  6826  002D92  EFCD  F016         	goto	u6240
  6827  002D96                     u6241:
  6828  002D96  EF12  F016         	goto	l9034
  6829  002D9A                     u6240:
  6830  002D9A                     l9054:
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6834  002D9A  5166               	movf	dtoa@s& (0+255),w,b
  6835  002D9C  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6836  002D9E  A4D8               	btfss	status,2,c
  6837  002DA0  EFD4  F016         	goto	u6251
  6838  002DA4  EFD6  F016         	goto	u6250
  6839  002DA8                     u6251:
  6840  002DA8  EFDD  F016         	goto	l9058
  6841  002DAC                     u6250:
  6842  002DAC                     
  6843                           ; BSR set to: 0
  6844  002DAC  A44B               	btfss	_flags^0,2,c
  6845  002DAE  EFDB  F016         	goto	u6261
  6846  002DB2  EFDD  F016         	goto	u6260
  6847  002DB6                     u6261:
  6848  002DB6  EFFB  F016         	goto	l9068
  6849  002DBA                     u6260:
  6850  002DBA                     l9058:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  6854  002DBA  0770               	decf	dtoa@i& (0+255),f,b
  6855  002DBC  A0D8               	btfss	status,0,c
  6856  002DBE  0771               	decf	(dtoa@i+1)& (0+255),f,b
  6857  002DC0                     
  6858                           ; BSR set to: 0
  6859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6860  002DC0  5166               	movf	dtoa@s& (0+255),w,b
  6861  002DC2  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  6862  002DC4  A4D8               	btfss	status,2,c
  6863  002DC6  EFE7  F016         	goto	u6271
  6864  002DCA  EFE9  F016         	goto	u6270
  6865  002DCE                     u6271:
  6866  002DCE  EFEF  F016         	goto	l9064
  6867  002DD2                     u6270:
  6868  002DD2                     
  6869                           ; BSR set to: 0
  6870  002DD2  0E00               	movlw	0
  6871  002DD4  6F61               	movwf	(_dtoa$4328+1)& (0+255),b
  6872  002DD6  0E2B               	movlw	43
  6873  002DD8  6F60               	movwf	_dtoa$4328& (0+255),b
  6874  002DDA  EFF3  F016         	goto	l9066
  6875  002DDE                     l9064:
  6876                           
  6877                           ; BSR set to: 0
  6878  002DDE  0E00               	movlw	0
  6879  002DE0  6F61               	movwf	(_dtoa$4328+1)& (0+255),b
  6880  002DE2  0E2D               	movlw	45
  6881  002DE4  6F60               	movwf	_dtoa$4328& (0+255),b
  6882  002DE6                     l9066:
  6883                           
  6884                           ; BSR set to: 0
  6885  002DE6  0EE0               	movlw	low _dbuf
  6886  002DE8  2570               	addwf	dtoa@i& (0+255),w,b
  6887  002DEA  6ED9               	movwf	fsr2l,c
  6888  002DEC  0E00               	movlw	high _dbuf
  6889  002DEE  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6890  002DF0  6EDA               	movwf	fsr2h,c
  6891  002DF2  C060  FFDF         	movff	_dtoa$4328,indf2
  6892  002DF6                     l9068:
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6896  002DF6  C02D  F022         	movff	dtoa@fp,pad@fp
  6897  002DFA  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
  6898  002DFE  0EE0               	movlw	low _dbuf
  6899  002E00  2570               	addwf	dtoa@i& (0+255),w,b
  6900  002E02  6E24               	movwf	pad@buf^0,c
  6901  002E04  0E00               	movlw	high _dbuf
  6902  002E06  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  6903  002E08  6E25               	movwf	(pad@buf+1)^0,c
  6904  002E0A  C064  F026         	movff	dtoa@w,pad@p
  6905  002E0E  C065  F027         	movff	dtoa@w+1,pad@p+1
  6906  002E12  ECA2  F026         	call	_pad	;wreg free
  6907  002E16  C022  F02D         	movff	?_pad,?_dtoa
  6908  002E1A  C023  F02E         	movff	?_pad+1,?_dtoa+1
  6909  002E1E  0012               	return		;funcret
  6910  002E20                     __end_of_dtoa:
  6911                           	callstack 0
  6912                           
  6913 ;; *************** function _pad *****************
  6914 ;; Defined at:
  6915 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6918 ;;		 -> sprintf@f(6), 
  6919 ;;  buf             2   35[COMRAM] PTR unsigned char 
  6920 ;;		 -> dbuf(32), 
  6921 ;;  p               2   37[COMRAM] int 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;  w               2   42[COMRAM] int 
  6924 ;;  i               2   40[COMRAM] int 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  2   33[COMRAM] int 
  6927 ;; Registers used:
  6928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6934 ;;      Params:         6       0       0       0       0       0       0
  6935 ;;      Locals:         4       0       0       0       0       0       0
  6936 ;;      Temps:          1       0       0       0       0       0       0
  6937 ;;      Totals:        11       0       0       0       0       0       0
  6938 ;;Total ram usage:       11 bytes
  6939 ;; Hardware stack levels used: 1
  6940 ;; Hardware stack levels required when called: 7
  6941 ;; This function calls:
  6942 ;;		_fputc
  6943 ;;		_fputs
  6944 ;;		_strlen
  6945 ;; This function is called by:
  6946 ;;		_dtoa
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           	psect	text21
  6951  004D44                     __ptext21:
  6952                           	callstack 0
  6953  004D44                     _pad:
  6954                           	callstack 16
  6955  004D44                     
  6956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6957  004D44  A04B               	btfss	_flags^0,0,c
  6958  004D46  EFA7  F026         	goto	u5791
  6959  004D4A  EFA9  F026         	goto	u5790
  6960  004D4E                     u5791:
  6961  004D4E  EFB3  F026         	goto	l8446
  6962  004D52                     u5790:
  6963  004D52                     
  6964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6965  004D52  C024  F01B         	movff	pad@buf,fputs@s
  6966  004D56  C025  F01C         	movff	pad@buf+1,fputs@s+1
  6967  004D5A  C022  F01D         	movff	pad@fp,fputs@fp
  6968  004D5E  C023  F01E         	movff	pad@fp+1,fputs@fp+1
  6969  004D62  EC30  F02E         	call	_fputs	;wreg free
  6970  004D66                     l8446:
  6971                           
  6972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6973  004D66  BE27               	btfsc	(pad@p+1)^0,7,c
  6974  004D68  EFB8  F026         	goto	u5801
  6975  004D6C  EFBA  F026         	goto	u5800
  6976  004D70                     u5801:
  6977  004D70  EFC0  F026         	goto	l8450
  6978  004D74                     u5800:
  6979  004D74  C026  F02B         	movff	pad@p,pad@w
  6980  004D78  C027  F02C         	movff	pad@p+1,pad@w+1
  6981  004D7C  EFC4  F026         	goto	l1487
  6982  004D80                     l8450:
  6983  004D80  0E00               	movlw	0
  6984  004D82  6E2C               	movwf	(pad@w+1)^0,c
  6985  004D84  0E00               	movlw	0
  6986  004D86  6E2B               	movwf	pad@w^0,c
  6987  004D88                     l1487:
  6988                           
  6989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6990  004D88  0E00               	movlw	0
  6991  004D8A  6E2A               	movwf	(pad@i+1)^0,c
  6992  004D8C  0E00               	movlw	0
  6993  004D8E  6E29               	movwf	pad@i^0,c
  6994                           
  6995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6996  004D90  EFD6  F026         	goto	l8456
  6997  004D94                     l8452:
  6998                           
  6999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7000  004D94  0E00               	movlw	0
  7001  004D96  6E13               	movwf	(fputc@c+1)^0,c
  7002  004D98  0E20               	movlw	32
  7003  004D9A  6E12               	movwf	fputc@c^0,c
  7004  004D9C  C022  F014         	movff	pad@fp,fputc@fp
  7005  004DA0  C023  F015         	movff	pad@fp+1,fputc@fp+1
  7006  004DA4  EC76  F025         	call	_fputc	;wreg free
  7007  004DA8                     
  7008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7009  004DA8  4A29               	infsnz	pad@i^0,f,c
  7010  004DAA  2A2A               	incf	(pad@i+1)^0,f,c
  7011  004DAC                     l8456:
  7012                           
  7013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7014  004DAC  502B               	movf	pad@w^0,w,c
  7015  004DAE  5C29               	subwf	pad@i^0,w,c
  7016  004DB0  502A               	movf	(pad@i+1)^0,w,c
  7017  004DB2  0A80               	xorlw	128
  7018  004DB4  6E28               	movwf	??_pad^0,c
  7019  004DB6  502C               	movf	(pad@w+1)^0,w,c
  7020  004DB8  0A80               	xorlw	128
  7021  004DBA  5828               	subwfb	??_pad^0,w,c
  7022  004DBC  A0D8               	btfss	status,0,c
  7023  004DBE  EFE3  F026         	goto	u5811
  7024  004DC2  EFE5  F026         	goto	u5810
  7025  004DC6                     u5811:
  7026  004DC6  EFCA  F026         	goto	l8452
  7027  004DCA                     u5810:
  7028  004DCA                     
  7029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7030  004DCA  B04B               	btfsc	_flags^0,0,c
  7031  004DCC  EFEA  F026         	goto	u5821
  7032  004DD0  EFEC  F026         	goto	u5820
  7033  004DD4                     u5821:
  7034  004DD4  EFF6  F026         	goto	l8460
  7035  004DD8                     u5820:
  7036  004DD8                     
  7037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7038  004DD8  C024  F01B         	movff	pad@buf,fputs@s
  7039  004DDC  C025  F01C         	movff	pad@buf+1,fputs@s+1
  7040  004DE0  C022  F01D         	movff	pad@fp,fputs@fp
  7041  004DE4  C023  F01E         	movff	pad@fp+1,fputs@fp+1
  7042  004DE8  EC30  F02E         	call	_fputs	;wreg free
  7043  004DEC                     l8460:
  7044                           
  7045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7046  004DEC  C024  F012         	movff	pad@buf,strlen@s
  7047  004DF0  C025  F013         	movff	pad@buf+1,strlen@s+1
  7048  004DF4  EC09  F02E         	call	_strlen	;wreg free
  7049  004DF8  502B               	movf	pad@w^0,w,c
  7050  004DFA  2412               	addwf	?_strlen^0,w,c
  7051  004DFC  6E22               	movwf	?_pad^0,c
  7052  004DFE  502C               	movf	(pad@w+1)^0,w,c
  7053  004E00  2013               	addwfc	(?_strlen+1)^0,w,c
  7054  004E02  6E23               	movwf	(?_pad+1)^0,c
  7055  004E04  0012               	return		;funcret
  7056  004E06                     __end_of_pad:
  7057                           	callstack 0
  7058                           
  7059 ;; *************** function _fputs *****************
  7060 ;; Defined at:
  7061 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  s               2   26[COMRAM] PTR const unsigned char 
  7064 ;;		 -> dbuf(32), 
  7065 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  7066 ;;		 -> sprintf@f(6), 
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;  i               2   31[COMRAM] int 
  7069 ;;  c               1   30[COMRAM] unsigned char 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  2   26[COMRAM] int 
  7072 ;; Registers used:
  7073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7079 ;;      Params:         4       0       0       0       0       0       0
  7080 ;;      Locals:         3       0       0       0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0
  7082 ;;      Totals:         7       0       0       0       0       0       0
  7083 ;;Total ram usage:        7 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 6
  7086 ;; This function calls:
  7087 ;;		_fputc
  7088 ;; This function is called by:
  7089 ;;		_pad
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           	psect	text22
  7094  005C60                     __ptext22:
  7095                           	callstack 0
  7096  005C60                     _fputs:
  7097                           	callstack 16
  7098  005C60  0E00               	movlw	0
  7099  005C62  6E21               	movwf	(fputs@i+1)^0,c
  7100  005C64  0E00               	movlw	0
  7101  005C66  6E20               	movwf	fputs@i^0,c
  7102  005C68  EF41  F02E         	goto	l7844
  7103  005C6C                     l7840:
  7104  005C6C  C01F  F012         	movff	fputs@c,fputc@c
  7105  005C70  6A13               	clrf	(fputc@c+1)^0,c
  7106  005C72  C01D  F014         	movff	fputs@fp,fputc@fp
  7107  005C76  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
  7108  005C7A  EC76  F025         	call	_fputc	;wreg free
  7109  005C7E  4A20               	infsnz	fputs@i^0,f,c
  7110  005C80  2A21               	incf	(fputs@i+1)^0,f,c
  7111  005C82                     l7844:
  7112  005C82  5020               	movf	fputs@i^0,w,c
  7113  005C84  241B               	addwf	fputs@s^0,w,c
  7114  005C86  6ED9               	movwf	fsr2l,c
  7115  005C88  5021               	movf	(fputs@i+1)^0,w,c
  7116  005C8A  201C               	addwfc	(fputs@s+1)^0,w,c
  7117  005C8C  6EDA               	movwf	fsr2h,c
  7118  005C8E  50DF               	movf	indf2,w,c
  7119  005C90  6E1F               	movwf	fputs@c^0,c
  7120  005C92  501F               	movf	fputs@c^0,w,c
  7121  005C94  A4D8               	btfss	status,2,c
  7122  005C96  EF4F  F02E         	goto	u5401
  7123  005C9A  EF51  F02E         	goto	u5400
  7124  005C9E                     u5401:
  7125  005C9E  EF36  F02E         	goto	l7840
  7126  005CA2                     u5400:
  7127  005CA2  0012               	return		;funcret
  7128  005CA4                     __end_of_fputs:
  7129                           	callstack 0
  7130                           
  7131 ;; *************** function _fputc *****************
  7132 ;; Defined at:
  7133 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  c               2   17[COMRAM] int 
  7136 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  7137 ;;		 -> sprintf@f(6), 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;		None
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  2   17[COMRAM] int 
  7142 ;; Registers used:
  7143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7149 ;;      Params:         4       0       0       0       0       0       0
  7150 ;;      Locals:         0       0       0       0       0       0       0
  7151 ;;      Temps:          5       0       0       0       0       0       0
  7152 ;;      Totals:         9       0       0       0       0       0       0
  7153 ;;Total ram usage:        9 bytes
  7154 ;; Hardware stack levels used: 1
  7155 ;; Hardware stack levels required when called: 5
  7156 ;; This function calls:
  7157 ;;		_putch
  7158 ;; This function is called by:
  7159 ;;		_pad
  7160 ;;		_vfpfcnvrt
  7161 ;;		_fputs
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text23
  7166  004AEC                     __ptext23:
  7167                           	callstack 0
  7168  004AEC                     _fputc:
  7169                           	callstack 19
  7170  004AEC  5014               	movf	fputc@fp^0,w,c
  7171  004AEE  1015               	iorwf	(fputc@fp+1)^0,w,c
  7172  004AF0  B4D8               	btfsc	status,2,c
  7173  004AF2  EF7D  F025         	goto	u5341
  7174  004AF6  EF7F  F025         	goto	u5340
  7175  004AFA                     u5341:
  7176  004AFA  EF88  F025         	goto	l7818
  7177  004AFE                     u5340:
  7178  004AFE  5014               	movf	fputc@fp^0,w,c
  7179  004B00  1015               	iorwf	(fputc@fp+1)^0,w,c
  7180  004B02  A4D8               	btfss	status,2,c
  7181  004B04  EF86  F025         	goto	u5351
  7182  004B08  EF88  F025         	goto	u5350
  7183  004B0C                     u5351:
  7184  004B0C  EF8D  F025         	goto	l7820
  7185  004B10                     u5350:
  7186  004B10                     l7818:
  7187  004B10  5012               	movf	fputc@c^0,w,c
  7188  004B12  ECB5  F02F         	call	_putch
  7189  004B16  EFDA  F025         	goto	l1551
  7190  004B1A                     l7820:
  7191  004B1A  EE20 F004          	lfsr	2,4
  7192  004B1E  5014               	movf	fputc@fp^0,w,c
  7193  004B20  26D9               	addwf	fsr2l,f,c
  7194  004B22  5015               	movf	(fputc@fp+1)^0,w,c
  7195  004B24  22DA               	addwfc	fsr2h,f,c
  7196  004B26  50DE               	movf	postinc2,w,c
  7197  004B28  10DE               	iorwf	postinc2,w,c
  7198  004B2A  B4D8               	btfsc	status,2,c
  7199  004B2C  EF9A  F025         	goto	u5361
  7200  004B30  EF9C  F025         	goto	u5360
  7201  004B34                     u5361:
  7202  004B34  EFB7  F025         	goto	l7824
  7203  004B38                     u5360:
  7204  004B38  EE20 F004          	lfsr	2,4
  7205  004B3C  5014               	movf	fputc@fp^0,w,c
  7206  004B3E  26D9               	addwf	fsr2l,f,c
  7207  004B40  5015               	movf	(fputc@fp+1)^0,w,c
  7208  004B42  22DA               	addwfc	fsr2h,f,c
  7209  004B44  EE10 F002          	lfsr	1,2
  7210  004B48  5014               	movf	fputc@fp^0,w,c
  7211  004B4A  26E1               	addwf	fsr1l,f,c
  7212  004B4C  5015               	movf	(fputc@fp+1)^0,w,c
  7213  004B4E  22E2               	addwfc	fsr1h,f,c
  7214  004B50  50DE               	movf	postinc2,w,c
  7215  004B52  5CE6               	subwf	postinc1,w,c
  7216  004B54  50E6               	movf	postinc1,w,c
  7217  004B56  0A80               	xorlw	128
  7218  004B58  6E1A               	movwf	(??_fputc+4)^0,c
  7219  004B5A  50DE               	movf	postinc2,w,c
  7220  004B5C  0A80               	xorlw	128
  7221  004B5E  581A               	subwfb	(??_fputc+4)^0,w,c
  7222  004B60  B0D8               	btfsc	status,0,c
  7223  004B62  EFB5  F025         	goto	u5371
  7224  004B66  EFB7  F025         	goto	u5370
  7225  004B6A                     u5371:
  7226  004B6A  EFDA  F025         	goto	l1551
  7227  004B6E                     u5370:
  7228  004B6E                     l7824:
  7229  004B6E  EE20 F002          	lfsr	2,2
  7230  004B72  5014               	movf	fputc@fp^0,w,c
  7231  004B74  26D9               	addwf	fsr2l,f,c
  7232  004B76  5015               	movf	(fputc@fp+1)^0,w,c
  7233  004B78  22DA               	addwfc	fsr2h,f,c
  7234  004B7A  CFDE F016          	movff	postinc2,??_fputc
  7235  004B7E  CFDD F017          	movff	postdec2,??_fputc+1
  7236  004B82  C014  FFD9         	movff	fputc@fp,fsr2l
  7237  004B86  C015  FFDA         	movff	fputc@fp+1,fsr2h
  7238  004B8A  CFDE F018          	movff	postinc2,??_fputc+2
  7239  004B8E  CFDD F019          	movff	postdec2,??_fputc+3
  7240  004B92  5016               	movf	??_fputc^0,w,c
  7241  004B94  2418               	addwf	(??_fputc+2)^0,w,c
  7242  004B96  6ED9               	movwf	fsr2l,c
  7243  004B98  5017               	movf	(??_fputc+1)^0,w,c
  7244  004B9A  2019               	addwfc	(??_fputc+3)^0,w,c
  7245  004B9C  6EDA               	movwf	fsr2h,c
  7246  004B9E  C012  FFDF         	movff	fputc@c,indf2
  7247  004BA2  EE20 F002          	lfsr	2,2
  7248  004BA6  5014               	movf	fputc@fp^0,w,c
  7249  004BA8  26D9               	addwf	fsr2l,f,c
  7250  004BAA  5015               	movf	(fputc@fp+1)^0,w,c
  7251  004BAC  22DA               	addwfc	fsr2h,f,c
  7252  004BAE  2ADE               	incf	postinc2,f,c
  7253  004BB0  0E00               	movlw	0
  7254  004BB2  22DD               	addwfc	postdec2,f,c
  7255  004BB4                     l1551:
  7256  004BB4  0012               	return		;funcret
  7257  004BB6                     __end_of_fputc:
  7258                           	callstack 0
  7259                           
  7260 ;; *************** function _putch *****************
  7261 ;; Defined at:
  7262 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  c               1    wreg     unsigned char 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  c               1    0[COMRAM] unsigned char 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      void 
  7269 ;; Registers used:
  7270 ;;		wreg
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7276 ;;      Params:         0       0       0       0       0       0       0
  7277 ;;      Locals:         0       0       0       0       0       0       0
  7278 ;;      Temps:          0       0       0       0       0       0       0
  7279 ;;      Totals:         0       0       0       0       0       0       0
  7280 ;;Total ram usage:        0 bytes
  7281 ;; Hardware stack levels used: 1
  7282 ;; Hardware stack levels required when called: 4
  7283 ;; This function calls:
  7284 ;;		Nothing
  7285 ;; This function is called by:
  7286 ;;		_fputc
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text24
  7291  005F6A                     __ptext24:
  7292                           	callstack 0
  7293  005F6A                     _putch:
  7294                           	callstack 19
  7295  005F6A  0012               	return		;funcret
  7296  005F6C                     __end_of_putch:
  7297                           	callstack 0
  7298                           
  7299 ;; *************** function _abs *****************
  7300 ;; Defined at:
  7301 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  a               2   35[COMRAM] int 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;		None
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  2   35[COMRAM] int 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7315 ;;      Params:         2       0       0       0       0       0       0
  7316 ;;      Locals:         0       0       0       0       0       0       0
  7317 ;;      Temps:          2       0       0       0       0       0       0
  7318 ;;      Totals:         4       0       0       0       0       0       0
  7319 ;;Total ram usage:        4 bytes
  7320 ;; Hardware stack levels used: 1
  7321 ;; Hardware stack levels required when called: 4
  7322 ;; This function calls:
  7323 ;;		Nothing
  7324 ;; This function is called by:
  7325 ;;		_dtoa
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text25
  7330  005CE8                     __ptext25:
  7331                           	callstack 0
  7332  005CE8                     _abs:
  7333                           	callstack 19
  7334  005CE8  BE25               	btfsc	(abs@a+1)^0,7,c
  7335  005CEA  EF81  F02E         	goto	u5830
  7336  005CEE  5025               	movf	(abs@a+1)^0,w,c
  7337  005CF0  E106               	bnz	u5831
  7338  005CF2  0424               	decf	abs@a^0,w,c
  7339  005CF4  B0D8               	btfsc	status,0,c
  7340  005CF6  EF7F  F02E         	goto	u5831
  7341  005CFA  EF81  F02E         	goto	u5830
  7342  005CFE                     u5831:
  7343  005CFE  EF8F  F02E         	goto	l1536
  7344  005D02                     u5830:
  7345  005D02  C024  F026         	movff	abs@a,??_abs
  7346  005D06  C025  F027         	movff	abs@a+1,??_abs+1
  7347  005D0A  1E26               	comf	??_abs^0,f,c
  7348  005D0C  1E27               	comf	(??_abs+1)^0,f,c
  7349  005D0E  4A26               	infsnz	??_abs^0,f,c
  7350  005D10  2A27               	incf	(??_abs+1)^0,f,c
  7351  005D12  C026  F024         	movff	??_abs,?_abs
  7352  005D16  C027  F025         	movff	??_abs+1,?_abs+1
  7353  005D1A  EF93  F02E         	goto	l1539
  7354  005D1E                     l1536:
  7355  005D1E  C024  F024         	movff	abs@a,?_abs
  7356  005D22  C025  F025         	movff	abs@a+1,?_abs+1
  7357  005D26                     l1539:
  7358  005D26  0012               	return		;funcret
  7359  005D28                     __end_of_abs:
  7360                           	callstack 0
  7361                           
  7362 ;; *************** function ___aomod *****************
  7363 ;; Defined at:
  7364 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  dividend        8   17[COMRAM] long long 
  7367 ;;  divisor         8   25[COMRAM] long long 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;  sign            1   34[COMRAM] unsigned char 
  7370 ;;  counter         1   33[COMRAM] unsigned char 
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  8   17[COMRAM] long long 
  7373 ;; Registers used:
  7374 ;;		wreg, status,2, status,0
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7380 ;;      Params:        16       0       0       0       0       0       0
  7381 ;;      Locals:         2       0       0       0       0       0       0
  7382 ;;      Temps:          0       0       0       0       0       0       0
  7383 ;;      Totals:        18       0       0       0       0       0       0
  7384 ;;Total ram usage:       18 bytes
  7385 ;; Hardware stack levels used: 1
  7386 ;; Hardware stack levels required when called: 4
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_dtoa
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text26
  7395  003E16                     __ptext26:
  7396                           	callstack 0
  7397  003E16                     ___aomod:
  7398                           	callstack 19
  7399  003E16  0E00               	movlw	0
  7400  003E18  6E23               	movwf	___aomod@sign^0,c
  7401  003E1A  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
  7402  003E1C  EF14  F01F         	goto	u5610
  7403  003E20  EF12  F01F         	goto	u5611
  7404  003E24                     u5611:
  7405  003E24  EF26  F01F         	goto	l8332
  7406  003E28                     u5610:
  7407  003E28  1E19               	comf	(___aomod@dividend+7)^0,f,c
  7408  003E2A  1E18               	comf	(___aomod@dividend+6)^0,f,c
  7409  003E2C  1E17               	comf	(___aomod@dividend+5)^0,f,c
  7410  003E2E  1E16               	comf	(___aomod@dividend+4)^0,f,c
  7411  003E30  1E15               	comf	(___aomod@dividend+3)^0,f,c
  7412  003E32  1E14               	comf	(___aomod@dividend+2)^0,f,c
  7413  003E34  1E13               	comf	(___aomod@dividend+1)^0,f,c
  7414  003E36  6C12               	negf	___aomod@dividend^0,c
  7415  003E38  0E00               	movlw	0
  7416  003E3A  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  7417  003E3C  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  7418  003E3E  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  7419  003E40  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  7420  003E42  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  7421  003E44  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  7422  003E46  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  7423  003E48  0E01               	movlw	1
  7424  003E4A  6E23               	movwf	___aomod@sign^0,c
  7425  003E4C                     l8332:
  7426  003E4C  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
  7427  003E4E  EF2D  F01F         	goto	u5620
  7428  003E52  EF2B  F01F         	goto	u5621
  7429  003E56                     u5621:
  7430  003E56  EF3D  F01F         	goto	l8336
  7431  003E5A                     u5620:
  7432  003E5A  1E21               	comf	(___aomod@divisor+7)^0,f,c
  7433  003E5C  1E20               	comf	(___aomod@divisor+6)^0,f,c
  7434  003E5E  1E1F               	comf	(___aomod@divisor+5)^0,f,c
  7435  003E60  1E1E               	comf	(___aomod@divisor+4)^0,f,c
  7436  003E62  1E1D               	comf	(___aomod@divisor+3)^0,f,c
  7437  003E64  1E1C               	comf	(___aomod@divisor+2)^0,f,c
  7438  003E66  1E1B               	comf	(___aomod@divisor+1)^0,f,c
  7439  003E68  6C1A               	negf	___aomod@divisor^0,c
  7440  003E6A  0E00               	movlw	0
  7441  003E6C  221B               	addwfc	(___aomod@divisor+1)^0,f,c
  7442  003E6E  221C               	addwfc	(___aomod@divisor+2)^0,f,c
  7443  003E70  221D               	addwfc	(___aomod@divisor+3)^0,f,c
  7444  003E72  221E               	addwfc	(___aomod@divisor+4)^0,f,c
  7445  003E74  221F               	addwfc	(___aomod@divisor+5)^0,f,c
  7446  003E76  2220               	addwfc	(___aomod@divisor+6)^0,f,c
  7447  003E78  2221               	addwfc	(___aomod@divisor+7)^0,f,c
  7448  003E7A                     l8336:
  7449  003E7A  501A               	movf	___aomod@divisor^0,w,c
  7450  003E7C  101B               	iorwf	(___aomod@divisor+1)^0,w,c
  7451  003E7E  101C               	iorwf	(___aomod@divisor+2)^0,w,c
  7452  003E80  101D               	iorwf	(___aomod@divisor+3)^0,w,c
  7453  003E82  101E               	iorwf	(___aomod@divisor+4)^0,w,c
  7454  003E84  101F               	iorwf	(___aomod@divisor+5)^0,w,c
  7455  003E86  1020               	iorwf	(___aomod@divisor+6)^0,w,c
  7456  003E88  1021               	iorwf	(___aomod@divisor+7)^0,w,c
  7457  003E8A  B4D8               	btfsc	status,2,c
  7458  003E8C  EF4A  F01F         	goto	u5631
  7459  003E90  EF4C  F01F         	goto	u5630
  7460  003E94                     u5631:
  7461  003E94  EF94  F01F         	goto	l8352
  7462  003E98                     u5630:
  7463  003E98  0E01               	movlw	1
  7464  003E9A  6E22               	movwf	___aomod@counter^0,c
  7465  003E9C  EF5A  F01F         	goto	l8342
  7466  003EA0                     l8340:
  7467  003EA0  90D8               	bcf	status,0,c
  7468  003EA2  361A               	rlcf	___aomod@divisor^0,f,c
  7469  003EA4  361B               	rlcf	(___aomod@divisor+1)^0,f,c
  7470  003EA6  361C               	rlcf	(___aomod@divisor+2)^0,f,c
  7471  003EA8  361D               	rlcf	(___aomod@divisor+3)^0,f,c
  7472  003EAA  361E               	rlcf	(___aomod@divisor+4)^0,f,c
  7473  003EAC  361F               	rlcf	(___aomod@divisor+5)^0,f,c
  7474  003EAE  3620               	rlcf	(___aomod@divisor+6)^0,f,c
  7475  003EB0  3621               	rlcf	(___aomod@divisor+7)^0,f,c
  7476  003EB2  2A22               	incf	___aomod@counter^0,f,c
  7477  003EB4                     l8342:
  7478  003EB4  AE21               	btfss	(___aomod@divisor+7)^0,7,c
  7479  003EB6  EF5F  F01F         	goto	u5641
  7480  003EBA  EF61  F01F         	goto	u5640
  7481  003EBE                     u5641:
  7482  003EBE  EF50  F01F         	goto	l8340
  7483  003EC2                     u5640:
  7484  003EC2                     l8344:
  7485  003EC2  501A               	movf	___aomod@divisor^0,w,c
  7486  003EC4  5C12               	subwf	___aomod@dividend^0,w,c
  7487  003EC6  501B               	movf	(___aomod@divisor+1)^0,w,c
  7488  003EC8  5813               	subwfb	(___aomod@dividend+1)^0,w,c
  7489  003ECA  501C               	movf	(___aomod@divisor+2)^0,w,c
  7490  003ECC  5814               	subwfb	(___aomod@dividend+2)^0,w,c
  7491  003ECE  501D               	movf	(___aomod@divisor+3)^0,w,c
  7492  003ED0  5815               	subwfb	(___aomod@dividend+3)^0,w,c
  7493  003ED2  501E               	movf	(___aomod@divisor+4)^0,w,c
  7494  003ED4  5816               	subwfb	(___aomod@dividend+4)^0,w,c
  7495  003ED6  501F               	movf	(___aomod@divisor+5)^0,w,c
  7496  003ED8  5817               	subwfb	(___aomod@dividend+5)^0,w,c
  7497  003EDA  5020               	movf	(___aomod@divisor+6)^0,w,c
  7498  003EDC  5818               	subwfb	(___aomod@dividend+6)^0,w,c
  7499  003EDE  5021               	movf	(___aomod@divisor+7)^0,w,c
  7500  003EE0  5819               	subwfb	(___aomod@dividend+7)^0,w,c
  7501  003EE2  A0D8               	btfss	status,0,c
  7502  003EE4  EF76  F01F         	goto	u5651
  7503  003EE8  EF78  F01F         	goto	u5650
  7504  003EEC                     u5651:
  7505  003EEC  EF88  F01F         	goto	l8348
  7506  003EF0                     u5650:
  7507  003EF0  501A               	movf	___aomod@divisor^0,w,c
  7508  003EF2  5E12               	subwf	___aomod@dividend^0,f,c
  7509  003EF4  501B               	movf	(___aomod@divisor+1)^0,w,c
  7510  003EF6  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
  7511  003EF8  501C               	movf	(___aomod@divisor+2)^0,w,c
  7512  003EFA  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
  7513  003EFC  501D               	movf	(___aomod@divisor+3)^0,w,c
  7514  003EFE  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
  7515  003F00  501E               	movf	(___aomod@divisor+4)^0,w,c
  7516  003F02  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
  7517  003F04  501F               	movf	(___aomod@divisor+5)^0,w,c
  7518  003F06  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
  7519  003F08  5020               	movf	(___aomod@divisor+6)^0,w,c
  7520  003F0A  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
  7521  003F0C  5021               	movf	(___aomod@divisor+7)^0,w,c
  7522  003F0E  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
  7523  003F10                     l8348:
  7524  003F10  90D8               	bcf	status,0,c
  7525  003F12  3221               	rrcf	(___aomod@divisor+7)^0,f,c
  7526  003F14  3220               	rrcf	(___aomod@divisor+6)^0,f,c
  7527  003F16  321F               	rrcf	(___aomod@divisor+5)^0,f,c
  7528  003F18  321E               	rrcf	(___aomod@divisor+4)^0,f,c
  7529  003F1A  321D               	rrcf	(___aomod@divisor+3)^0,f,c
  7530  003F1C  321C               	rrcf	(___aomod@divisor+2)^0,f,c
  7531  003F1E  321B               	rrcf	(___aomod@divisor+1)^0,f,c
  7532  003F20  321A               	rrcf	___aomod@divisor^0,f,c
  7533  003F22  2E22               	decfsz	___aomod@counter^0,f,c
  7534  003F24  EF61  F01F         	goto	l8344
  7535  003F28                     l8352:
  7536  003F28  5023               	movf	___aomod@sign^0,w,c
  7537  003F2A  B4D8               	btfsc	status,2,c
  7538  003F2C  EF9A  F01F         	goto	u5661
  7539  003F30  EF9C  F01F         	goto	u5660
  7540  003F34                     u5661:
  7541  003F34  EFAC  F01F         	goto	l8356
  7542  003F38                     u5660:
  7543  003F38  1E19               	comf	(___aomod@dividend+7)^0,f,c
  7544  003F3A  1E18               	comf	(___aomod@dividend+6)^0,f,c
  7545  003F3C  1E17               	comf	(___aomod@dividend+5)^0,f,c
  7546  003F3E  1E16               	comf	(___aomod@dividend+4)^0,f,c
  7547  003F40  1E15               	comf	(___aomod@dividend+3)^0,f,c
  7548  003F42  1E14               	comf	(___aomod@dividend+2)^0,f,c
  7549  003F44  1E13               	comf	(___aomod@dividend+1)^0,f,c
  7550  003F46  6C12               	negf	___aomod@dividend^0,c
  7551  003F48  0E00               	movlw	0
  7552  003F4A  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  7553  003F4C  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  7554  003F4E  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  7555  003F50  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  7556  003F52  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  7557  003F54  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  7558  003F56  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  7559  003F58                     l8356:
  7560  003F58  C012  F012         	movff	___aomod@dividend,?___aomod
  7561  003F5C  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
  7562  003F60  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
  7563  003F64  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
  7564  003F68  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
  7565  003F6C  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
  7566  003F70  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
  7567  003F74  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
  7568  003F78  0012               	return		;funcret
  7569  003F7A                     __end_of___aomod:
  7570                           	callstack 0
  7571                           
  7572 ;; *************** function ___aodiv *****************
  7573 ;; Defined at:
  7574 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  dividend        8   17[COMRAM] long long 
  7577 ;;  divisor         8   25[COMRAM] long long 
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;  quotient        8   35[COMRAM] long long 
  7580 ;;  sign            1   34[COMRAM] unsigned char 
  7581 ;;  counter         1   33[COMRAM] unsigned char 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  8   17[COMRAM] long long 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7591 ;;      Params:        16       0       0       0       0       0       0
  7592 ;;      Locals:        10       0       0       0       0       0       0
  7593 ;;      Temps:          0       0       0       0       0       0       0
  7594 ;;      Totals:        26       0       0       0       0       0       0
  7595 ;;Total ram usage:       26 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; Hardware stack levels required when called: 4
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_dtoa
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           	psect	text27
  7606  003C8E                     __ptext27:
  7607                           	callstack 0
  7608  003C8E                     ___aodiv:
  7609                           	callstack 19
  7610  003C8E  0E00               	movlw	0
  7611  003C90  6E23               	movwf	___aodiv@sign^0,c
  7612  003C92  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
  7613  003C94  EF50  F01E         	goto	u5540
  7614  003C98  EF4E  F01E         	goto	u5541
  7615  003C9C                     u5541:
  7616  003C9C  EF62  F01E         	goto	l8288
  7617  003CA0                     u5540:
  7618  003CA0  1E21               	comf	(___aodiv@divisor+7)^0,f,c
  7619  003CA2  1E20               	comf	(___aodiv@divisor+6)^0,f,c
  7620  003CA4  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
  7621  003CA6  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
  7622  003CA8  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
  7623  003CAA  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
  7624  003CAC  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
  7625  003CAE  6C1A               	negf	___aodiv@divisor^0,c
  7626  003CB0  0E00               	movlw	0
  7627  003CB2  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
  7628  003CB4  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
  7629  003CB6  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
  7630  003CB8  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
  7631  003CBA  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
  7632  003CBC  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
  7633  003CBE  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
  7634  003CC0  0E01               	movlw	1
  7635  003CC2  6E23               	movwf	___aodiv@sign^0,c
  7636  003CC4                     l8288:
  7637  003CC4  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
  7638  003CC6  EF69  F01E         	goto	u5550
  7639  003CCA  EF67  F01E         	goto	u5551
  7640  003CCE                     u5551:
  7641  003CCE  EF7B  F01E         	goto	l8294
  7642  003CD2                     u5550:
  7643  003CD2  1E19               	comf	(___aodiv@dividend+7)^0,f,c
  7644  003CD4  1E18               	comf	(___aodiv@dividend+6)^0,f,c
  7645  003CD6  1E17               	comf	(___aodiv@dividend+5)^0,f,c
  7646  003CD8  1E16               	comf	(___aodiv@dividend+4)^0,f,c
  7647  003CDA  1E15               	comf	(___aodiv@dividend+3)^0,f,c
  7648  003CDC  1E14               	comf	(___aodiv@dividend+2)^0,f,c
  7649  003CDE  1E13               	comf	(___aodiv@dividend+1)^0,f,c
  7650  003CE0  6C12               	negf	___aodiv@dividend^0,c
  7651  003CE2  0E00               	movlw	0
  7652  003CE4  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
  7653  003CE6  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
  7654  003CE8  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
  7655  003CEA  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
  7656  003CEC  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
  7657  003CEE  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
  7658  003CF0  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
  7659  003CF2  0E01               	movlw	1
  7660  003CF4  1A23               	xorwf	___aodiv@sign^0,f,c
  7661  003CF6                     l8294:
  7662  003CF6  EE20  F024         	lfsr	2,___aodiv@quotient
  7663  003CFA  0E07               	movlw	7
  7664  003CFC                     u5561:
  7665  003CFC  6ADE               	clrf	postinc2,c
  7666  003CFE  06E8               	decf	wreg,f,c
  7667  003D00  E2FD               	bc	u5561
  7668  003D02  501A               	movf	___aodiv@divisor^0,w,c
  7669  003D04  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
  7670  003D06  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
  7671  003D08  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
  7672  003D0A  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
  7673  003D0C  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
  7674  003D0E  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
  7675  003D10  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
  7676  003D12  B4D8               	btfsc	status,2,c
  7677  003D14  EF8E  F01E         	goto	u5571
  7678  003D18  EF90  F01E         	goto	u5570
  7679  003D1C                     u5571:
  7680  003D1C  EFE2  F01E         	goto	l8316
  7681  003D20                     u5570:
  7682  003D20  0E01               	movlw	1
  7683  003D22  6E22               	movwf	___aodiv@counter^0,c
  7684  003D24  EF9E  F01E         	goto	l8302
  7685  003D28                     l8300:
  7686  003D28  90D8               	bcf	status,0,c
  7687  003D2A  361A               	rlcf	___aodiv@divisor^0,f,c
  7688  003D2C  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
  7689  003D2E  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
  7690  003D30  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
  7691  003D32  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
  7692  003D34  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
  7693  003D36  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
  7694  003D38  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
  7695  003D3A  2A22               	incf	___aodiv@counter^0,f,c
  7696  003D3C                     l8302:
  7697  003D3C  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
  7698  003D3E  EFA3  F01E         	goto	u5581
  7699  003D42  EFA5  F01E         	goto	u5580
  7700  003D46                     u5581:
  7701  003D46  EF94  F01E         	goto	l8300
  7702  003D4A                     u5580:
  7703  003D4A                     l8304:
  7704  003D4A  90D8               	bcf	status,0,c
  7705  003D4C  3624               	rlcf	___aodiv@quotient^0,f,c
  7706  003D4E  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
  7707  003D50  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
  7708  003D52  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
  7709  003D54  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
  7710  003D56  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
  7711  003D58  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
  7712  003D5A  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
  7713  003D5C  501A               	movf	___aodiv@divisor^0,w,c
  7714  003D5E  5C12               	subwf	___aodiv@dividend^0,w,c
  7715  003D60  501B               	movf	(___aodiv@divisor+1)^0,w,c
  7716  003D62  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
  7717  003D64  501C               	movf	(___aodiv@divisor+2)^0,w,c
  7718  003D66  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
  7719  003D68  501D               	movf	(___aodiv@divisor+3)^0,w,c
  7720  003D6A  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
  7721  003D6C  501E               	movf	(___aodiv@divisor+4)^0,w,c
  7722  003D6E  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
  7723  003D70  501F               	movf	(___aodiv@divisor+5)^0,w,c
  7724  003D72  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
  7725  003D74  5020               	movf	(___aodiv@divisor+6)^0,w,c
  7726  003D76  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
  7727  003D78  5021               	movf	(___aodiv@divisor+7)^0,w,c
  7728  003D7A  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
  7729  003D7C  A0D8               	btfss	status,0,c
  7730  003D7E  EFC3  F01E         	goto	u5591
  7731  003D82  EFC5  F01E         	goto	u5590
  7732  003D86                     u5591:
  7733  003D86  EFD6  F01E         	goto	l8312
  7734  003D8A                     u5590:
  7735  003D8A  501A               	movf	___aodiv@divisor^0,w,c
  7736  003D8C  5E12               	subwf	___aodiv@dividend^0,f,c
  7737  003D8E  501B               	movf	(___aodiv@divisor+1)^0,w,c
  7738  003D90  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
  7739  003D92  501C               	movf	(___aodiv@divisor+2)^0,w,c
  7740  003D94  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
  7741  003D96  501D               	movf	(___aodiv@divisor+3)^0,w,c
  7742  003D98  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
  7743  003D9A  501E               	movf	(___aodiv@divisor+4)^0,w,c
  7744  003D9C  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
  7745  003D9E  501F               	movf	(___aodiv@divisor+5)^0,w,c
  7746  003DA0  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
  7747  003DA2  5020               	movf	(___aodiv@divisor+6)^0,w,c
  7748  003DA4  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
  7749  003DA6  5021               	movf	(___aodiv@divisor+7)^0,w,c
  7750  003DA8  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
  7751  003DAA  8024               	bsf	___aodiv@quotient^0,0,c
  7752  003DAC                     l8312:
  7753  003DAC  90D8               	bcf	status,0,c
  7754  003DAE  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
  7755  003DB0  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
  7756  003DB2  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
  7757  003DB4  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
  7758  003DB6  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
  7759  003DB8  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
  7760  003DBA  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
  7761  003DBC  321A               	rrcf	___aodiv@divisor^0,f,c
  7762  003DBE  2E22               	decfsz	___aodiv@counter^0,f,c
  7763  003DC0  EFA5  F01E         	goto	l8304
  7764  003DC4                     l8316:
  7765  003DC4  5023               	movf	___aodiv@sign^0,w,c
  7766  003DC6  B4D8               	btfsc	status,2,c
  7767  003DC8  EFE8  F01E         	goto	u5601
  7768  003DCC  EFEA  F01E         	goto	u5600
  7769  003DD0                     u5601:
  7770  003DD0  EFFA  F01E         	goto	l8320
  7771  003DD4                     u5600:
  7772  003DD4  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
  7773  003DD6  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
  7774  003DD8  1E29               	comf	(___aodiv@quotient+5)^0,f,c
  7775  003DDA  1E28               	comf	(___aodiv@quotient+4)^0,f,c
  7776  003DDC  1E27               	comf	(___aodiv@quotient+3)^0,f,c
  7777  003DDE  1E26               	comf	(___aodiv@quotient+2)^0,f,c
  7778  003DE0  1E25               	comf	(___aodiv@quotient+1)^0,f,c
  7779  003DE2  6C24               	negf	___aodiv@quotient^0,c
  7780  003DE4  0E00               	movlw	0
  7781  003DE6  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
  7782  003DE8  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
  7783  003DEA  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
  7784  003DEC  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
  7785  003DEE  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
  7786  003DF0  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
  7787  003DF2  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
  7788  003DF4                     l8320:
  7789  003DF4  C024  F012         	movff	___aodiv@quotient,?___aodiv
  7790  003DF8  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
  7791  003DFC  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
  7792  003E00  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
  7793  003E04  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
  7794  003E08  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
  7795  003E0C  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
  7796  003E10  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
  7797  003E14  0012               	return		;funcret
  7798  003E16                     __end_of___aodiv:
  7799                           	callstack 0
  7800                           
  7801 ;; *************** function _configTouch *****************
  7802 ;; Defined at:
  7803 ;;		line 118 in file "stateMachine/touchScreenSM.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;		None
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;		None
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg, status,2
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7817 ;;      Params:         0       0       0       0       0       0       0
  7818 ;;      Locals:         0       0       0       0       0       0       0
  7819 ;;      Temps:          0       0       0       0       0       0       0
  7820 ;;      Totals:         0       0       0       0       0       0       0
  7821 ;;Total ram usage:        0 bytes
  7822 ;; Hardware stack levels used: 1
  7823 ;; Hardware stack levels required when called: 4
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_touchScreenInit
  7828 ;;		_touchScreenController
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text28
  7833  005E88                     __ptext28:
  7834                           	callstack 0
  7835  005E88                     _configTouch:
  7836                           	callstack 23
  7837  005E88                     
  7838                           ;stateMachine/touchScreenSM.c: 120:     ANSB1=0;
  7839  005E88  010F               	movlb	15	; () banked
  7840  005E8A  9339               	bcf	57,1,b	;volatile
  7841                           
  7842                           ;stateMachine/touchScreenSM.c: 121:     ANSB2=0;
  7843  005E8C  9539               	bcf	57,2,b	;volatile
  7844                           
  7845                           ;stateMachine/touchScreenSM.c: 122:     TRISB2=0;
  7846  005E8E  9493               	bcf	3987,2,c	;volatile
  7847                           
  7848                           ;stateMachine/touchScreenSM.c: 123:     LATB2=0;
  7849  005E90  948A               	bcf	3978,2,c	;volatile
  7850                           
  7851                           ;stateMachine/touchScreenSM.c: 124:     TRISB1=1;
  7852  005E92  8293               	bsf	3987,1,c	;volatile
  7853                           
  7854                           ;stateMachine/touchScreenSM.c: 125:     RBPU=0;
  7855  005E94  9EF1               	bcf	4081,7,c	;volatile
  7856  005E96                     
  7857                           ; BSR set to: 15
  7858                           ;stateMachine/touchScreenSM.c: 126:     WPUB=0b00000010;
  7859  005E96  0E02               	movlw	2
  7860  005E98  6E61               	movwf	97,c	;volatile
  7861  005E9A                     
  7862                           ; BSR set to: 15
  7863                           ;stateMachine/touchScreenSM.c: 127:     INTEDG1=0;
  7864  005E9A  9AF1               	bcf	4081,5,c	;volatile
  7865  005E9C                     
  7866                           ; BSR set to: 15
  7867                           ;stateMachine/touchScreenSM.c: 128:     TRISB3=1;
  7868  005E9C  8693               	bsf	3987,3,c	;volatile
  7869  005E9E                     
  7870                           ; BSR set to: 15
  7871                           ;stateMachine/touchScreenSM.c: 129:     TRISB4=1;
  7872  005E9E  8893               	bsf	3987,4,c	;volatile
  7873  005EA0                     
  7874                           ; BSR set to: 15
  7875                           ;stateMachine/touchScreenSM.c: 130:     INT1IE=1;
  7876  005EA0  86F0               	bsf	4080,3,c	;volatile
  7877  005EA2                     
  7878                           ; BSR set to: 15
  7879  005EA2  0012               	return		;funcret
  7880  005EA4                     __end_of_configTouch:
  7881                           	callstack 0
  7882                           
  7883 ;; *************** function _configMeasure *****************
  7884 ;; Defined at:
  7885 ;;		line 132 in file "stateMachine/touchScreenSM.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  channel         1    wreg     _Bool 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  channel         1   17[COMRAM] _Bool 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7899 ;;      Params:         0       0       0       0       0       0       0
  7900 ;;      Locals:         1       0       0       0       0       0       0
  7901 ;;      Temps:          0       0       0       0       0       0       0
  7902 ;;      Totals:         1       0       0       0       0       0       0
  7903 ;;Total ram usage:        1 bytes
  7904 ;; Hardware stack levels used: 1
  7905 ;; Hardware stack levels required when called: 4
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_touchScreenController
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text29
  7914  005B74                     __ptext29:
  7915                           	callstack 0
  7916  005B74                     _configMeasure:
  7917                           	callstack 23
  7918                           
  7919                           ; BSR set to: 15
  7920                           ;incstack = 0
  7921                           ;configMeasure@channel stored from wreg
  7922  005B74  6E12               	movwf	configMeasure@channel^0,c
  7923  005B76                     
  7924                           ;stateMachine/touchScreenSM.c: 132: void configMeasure(_Bool channel);stateMachine/touch
      +                          ScreenSM.c: 133: {;stateMachine/touchScreenSM.c: 134:     if(channel==0)
  7925  005B76  5012               	movf	configMeasure@channel^0,w,c
  7926  005B78  A4D8               	btfss	status,2,c
  7927  005B7A  EFC1  F02D         	goto	u6841
  7928  005B7E  EFC3  F02D         	goto	u6840
  7929  005B82                     u6841:
  7930  005B82  EFCE  F02D         	goto	l9542
  7931  005B86                     u6840:
  7932  005B86                     
  7933                           ;stateMachine/touchScreenSM.c: 135:     {;stateMachine/touchScreenSM.c: 136:         ANS
      +                          B1=0;
  7934  005B86  010F               	movlb	15	; () banked
  7935  005B88  9339               	bcf	57,1,b	;volatile
  7936                           
  7937                           ;stateMachine/touchScreenSM.c: 137:         TRISB1=0;
  7938  005B8A  9293               	bcf	3987,1,c	;volatile
  7939                           
  7940                           ;stateMachine/touchScreenSM.c: 138:         LATB1=0;
  7941  005B8C  928A               	bcf	3978,1,c	;volatile
  7942                           
  7943                           ;stateMachine/touchScreenSM.c: 139:         TRISB3=0;
  7944  005B8E  9693               	bcf	3987,3,c	;volatile
  7945                           
  7946                           ;stateMachine/touchScreenSM.c: 140:         LATB3=1;
  7947  005B90  868A               	bsf	3978,3,c	;volatile
  7948                           
  7949                           ;stateMachine/touchScreenSM.c: 141:         TRISB4=1;
  7950  005B92  8893               	bsf	3987,4,c	;volatile
  7951                           
  7952                           ;stateMachine/touchScreenSM.c: 142:         TRISB2=1;
  7953  005B94  8493               	bsf	3987,2,c	;volatile
  7954                           
  7955                           ;stateMachine/touchScreenSM.c: 143:         ANSB2=1;
  7956  005B96  8539               	bsf	57,2,b	;volatile
  7957  005B98                     
  7958                           ; BSR set to: 15
  7959                           ;stateMachine/touchScreenSM.c: 144:         ADCON0=0b00100011;
  7960  005B98  0E23               	movlw	35
  7961  005B9A  6EC2               	movwf	194,c	;volatile
  7962  005B9C                     l9542:
  7963                           
  7964                           ;stateMachine/touchScreenSM.c: 146:     if(channel==1)
  7965  005B9C  0412               	decf	configMeasure@channel^0,w,c
  7966  005B9E  A4D8               	btfss	status,2,c
  7967  005BA0  EFD4  F02D         	goto	u6851
  7968  005BA4  EFD6  F02D         	goto	u6850
  7969  005BA8                     u6851:
  7970  005BA8  EFE1  F02D         	goto	l515
  7971  005BAC                     u6850:
  7972  005BAC                     
  7973                           ;stateMachine/touchScreenSM.c: 147:     {;stateMachine/touchScreenSM.c: 148:         ANS
      +                          B2=0;
  7974  005BAC  010F               	movlb	15	; () banked
  7975  005BAE  9539               	bcf	57,2,b	;volatile
  7976                           
  7977                           ;stateMachine/touchScreenSM.c: 149:         TRISB2=0;
  7978  005BB0  9493               	bcf	3987,2,c	;volatile
  7979                           
  7980                           ;stateMachine/touchScreenSM.c: 150:         LATB2=0;
  7981  005BB2  948A               	bcf	3978,2,c	;volatile
  7982                           
  7983                           ;stateMachine/touchScreenSM.c: 151:         TRISB4=0;
  7984  005BB4  9893               	bcf	3987,4,c	;volatile
  7985                           
  7986                           ;stateMachine/touchScreenSM.c: 152:         LATB4=1;
  7987  005BB6  888A               	bsf	3978,4,c	;volatile
  7988                           
  7989                           ;stateMachine/touchScreenSM.c: 153:         TRISB3=1;
  7990  005BB8  8693               	bsf	3987,3,c	;volatile
  7991                           
  7992                           ;stateMachine/touchScreenSM.c: 154:         TRISB1=1;
  7993  005BBA  8293               	bsf	3987,1,c	;volatile
  7994                           
  7995                           ;stateMachine/touchScreenSM.c: 155:         ANSB1=1;
  7996  005BBC  8339               	bsf	57,1,b	;volatile
  7997  005BBE                     
  7998                           ; BSR set to: 15
  7999                           ;stateMachine/touchScreenSM.c: 156:         ADCON0=0b00101011;
  8000  005BBE  0E2B               	movlw	43
  8001  005BC0  6EC2               	movwf	194,c	;volatile
  8002  005BC2                     l515:
  8003  005BC2  0012               	return		;funcret
  8004  005BC4                     __end_of_configMeasure:
  8005                           	callstack 0
  8006                           
  8007 ;; *************** function ___xxtofl *****************
  8008 ;; Defined at:
  8009 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;  sign            1    wreg     unsigned char 
  8012 ;;  val             4   17[COMRAM] long 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  sign            1   25[COMRAM] unsigned char 
  8015 ;;  arg             4   27[COMRAM] unsigned long 
  8016 ;;  exp             1   26[COMRAM] unsigned char 
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  4   17[COMRAM] unsigned char 
  8019 ;; Registers used:
  8020 ;;		wreg, status,2, status,0
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8026 ;;      Params:         4       0       0       0       0       0       0
  8027 ;;      Locals:         6       0       0       0       0       0       0
  8028 ;;      Temps:          4       0       0       0       0       0       0
  8029 ;;      Totals:        14       0       0       0       0       0       0
  8030 ;;Total ram usage:       14 bytes
  8031 ;; Hardware stack levels used: 1
  8032 ;; Hardware stack levels required when called: 4
  8033 ;; This function calls:
  8034 ;;		Nothing
  8035 ;; This function is called by:
  8036 ;;		_touchScreenController
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text30
  8041  00394E                     __ptext30:
  8042                           	callstack 0
  8043  00394E                     ___xxtofl:
  8044                           	callstack 23
  8045                           
  8046                           ;incstack = 0
  8047                           ;___xxtofl@sign stored from wreg
  8048  00394E  6E1A               	movwf	___xxtofl@sign^0,c
  8049  003950  501A               	movf	___xxtofl@sign^0,w,c
  8050  003952  B4D8               	btfsc	status,2,c
  8051  003954  EFAE  F01C         	goto	u7391
  8052  003958  EFB0  F01C         	goto	u7390
  8053  00395C                     u7391:
  8054  00395C  EFD2  F01C         	goto	l1437
  8055  003960                     u7390:
  8056  003960  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  8057  003962  EFB7  F01C         	goto	u7400
  8058  003966  EFB5  F01C         	goto	u7401
  8059  00396A                     u7401:
  8060  00396A  EFD2  F01C         	goto	l1437
  8061  00396E                     u7400:
  8062  00396E  C012  F016         	movff	___xxtofl@val,??___xxtofl
  8063  003972  C013  F017         	movff	___xxtofl@val+1,??___xxtofl+1
  8064  003976  C014  F018         	movff	___xxtofl@val+2,??___xxtofl+2
  8065  00397A  C015  F019         	movff	___xxtofl@val+3,??___xxtofl+3
  8066  00397E  1E16               	comf	??___xxtofl^0,f,c
  8067  003980  1E17               	comf	(??___xxtofl+1)^0,f,c
  8068  003982  1E18               	comf	(??___xxtofl+2)^0,f,c
  8069  003984  1E19               	comf	(??___xxtofl+3)^0,f,c
  8070  003986  2A16               	incf	??___xxtofl^0,f,c
  8071  003988  0E00               	movlw	0
  8072  00398A  2217               	addwfc	(??___xxtofl+1)^0,f,c
  8073  00398C  2218               	addwfc	(??___xxtofl+2)^0,f,c
  8074  00398E  2219               	addwfc	(??___xxtofl+3)^0,f,c
  8075  003990  C016  F01C         	movff	??___xxtofl,___xxtofl@arg
  8076  003994  C017  F01D         	movff	??___xxtofl+1,___xxtofl@arg+1
  8077  003998  C018  F01E         	movff	??___xxtofl+2,___xxtofl@arg+2
  8078  00399C  C019  F01F         	movff	??___xxtofl+3,___xxtofl@arg+3
  8079  0039A0  EFDA  F01C         	goto	l9864
  8080  0039A4                     l1437:
  8081  0039A4  C012  F01C         	movff	___xxtofl@val,___xxtofl@arg
  8082  0039A8  C013  F01D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8083  0039AC  C014  F01E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8084  0039B0  C015  F01F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8085  0039B4                     l9864:
  8086  0039B4  5012               	movf	___xxtofl@val^0,w,c
  8087  0039B6  1013               	iorwf	(___xxtofl@val+1)^0,w,c
  8088  0039B8  1014               	iorwf	(___xxtofl@val+2)^0,w,c
  8089  0039BA  1015               	iorwf	(___xxtofl@val+3)^0,w,c
  8090  0039BC  A4D8               	btfss	status,2,c
  8091  0039BE  EFE3  F01C         	goto	u7411
  8092  0039C2  EFE5  F01C         	goto	u7410
  8093  0039C6                     u7411:
  8094  0039C6  EFEF  F01C         	goto	l9870
  8095  0039CA                     u7410:
  8096  0039CA  0E00               	movlw	0
  8097  0039CC  6E12               	movwf	?___xxtofl^0,c
  8098  0039CE  0E00               	movlw	0
  8099  0039D0  6E13               	movwf	(?___xxtofl+1)^0,c
  8100  0039D2  0E00               	movlw	0
  8101  0039D4  6E14               	movwf	(?___xxtofl+2)^0,c
  8102  0039D6  0E00               	movlw	0
  8103  0039D8  6E15               	movwf	(?___xxtofl+3)^0,c
  8104  0039DA  EF80  F01D         	goto	l1440
  8105  0039DE                     l9870:
  8106  0039DE  0E96               	movlw	150
  8107  0039E0  6E1B               	movwf	___xxtofl@exp^0,c
  8108  0039E2  EFF9  F01C         	goto	l9874
  8109  0039E6                     l9872:
  8110  0039E6  2A1B               	incf	___xxtofl@exp^0,f,c
  8111  0039E8  90D8               	bcf	status,0,c
  8112  0039EA  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  8113  0039EC  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  8114  0039EE  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  8115  0039F0  321C               	rrcf	___xxtofl@arg^0,f,c
  8116  0039F2                     l9874:
  8117  0039F2  0E00               	movlw	0
  8118  0039F4  141C               	andwf	___xxtofl@arg^0,w,c
  8119  0039F6  6E16               	movwf	??___xxtofl^0,c
  8120  0039F8  0E00               	movlw	0
  8121  0039FA  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  8122  0039FC  6E17               	movwf	(??___xxtofl+1)^0,c
  8123  0039FE  0E00               	movlw	0
  8124  003A00  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  8125  003A02  6E18               	movwf	(??___xxtofl+2)^0,c
  8126  003A04  0EFE               	movlw	254
  8127  003A06  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  8128  003A08  6E19               	movwf	(??___xxtofl+3)^0,c
  8129  003A0A  5016               	movf	??___xxtofl^0,w,c
  8130  003A0C  1017               	iorwf	(??___xxtofl+1)^0,w,c
  8131  003A0E  1018               	iorwf	(??___xxtofl+2)^0,w,c
  8132  003A10  1019               	iorwf	(??___xxtofl+3)^0,w,c
  8133  003A12  A4D8               	btfss	status,2,c
  8134  003A14  EF0E  F01D         	goto	u7421
  8135  003A18  EF10  F01D         	goto	u7420
  8136  003A1C                     u7421:
  8137  003A1C  EFF3  F01C         	goto	l9872
  8138  003A20                     u7420:
  8139  003A20  EF1E  F01D         	goto	l1444
  8140  003A24                     l9876:
  8141  003A24  2A1B               	incf	___xxtofl@exp^0,f,c
  8142  003A26  0E01               	movlw	1
  8143  003A28  261C               	addwf	___xxtofl@arg^0,f,c
  8144  003A2A  0E00               	movlw	0
  8145  003A2C  221D               	addwfc	(___xxtofl@arg+1)^0,f,c
  8146  003A2E  221E               	addwfc	(___xxtofl@arg+2)^0,f,c
  8147  003A30  221F               	addwfc	(___xxtofl@arg+3)^0,f,c
  8148  003A32  90D8               	bcf	status,0,c
  8149  003A34  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  8150  003A36  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  8151  003A38  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  8152  003A3A  321C               	rrcf	___xxtofl@arg^0,f,c
  8153  003A3C                     l1444:
  8154  003A3C  0E00               	movlw	0
  8155  003A3E  141C               	andwf	___xxtofl@arg^0,w,c
  8156  003A40  6E16               	movwf	??___xxtofl^0,c
  8157  003A42  0E00               	movlw	0
  8158  003A44  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  8159  003A46  6E17               	movwf	(??___xxtofl+1)^0,c
  8160  003A48  0E00               	movlw	0
  8161  003A4A  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  8162  003A4C  6E18               	movwf	(??___xxtofl+2)^0,c
  8163  003A4E  0EFF               	movlw	255
  8164  003A50  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  8165  003A52  6E19               	movwf	(??___xxtofl+3)^0,c
  8166  003A54  5016               	movf	??___xxtofl^0,w,c
  8167  003A56  1017               	iorwf	(??___xxtofl+1)^0,w,c
  8168  003A58  1018               	iorwf	(??___xxtofl+2)^0,w,c
  8169  003A5A  1019               	iorwf	(??___xxtofl+3)^0,w,c
  8170  003A5C  A4D8               	btfss	status,2,c
  8171  003A5E  EF33  F01D         	goto	u7431
  8172  003A62  EF35  F01D         	goto	u7430
  8173  003A66                     u7431:
  8174  003A66  EF12  F01D         	goto	l9876
  8175  003A6A                     u7430:
  8176  003A6A  EF3D  F01D         	goto	l9884
  8177  003A6E                     l9882:
  8178  003A6E  061B               	decf	___xxtofl@exp^0,f,c
  8179  003A70  90D8               	bcf	status,0,c
  8180  003A72  361C               	rlcf	___xxtofl@arg^0,f,c
  8181  003A74  361D               	rlcf	(___xxtofl@arg+1)^0,f,c
  8182  003A76  361E               	rlcf	(___xxtofl@arg+2)^0,f,c
  8183  003A78  361F               	rlcf	(___xxtofl@arg+3)^0,f,c
  8184  003A7A                     l9884:
  8185  003A7A  BE1E               	btfsc	(___xxtofl@arg+2)^0,7,c
  8186  003A7C  EF42  F01D         	goto	u7441
  8187  003A80  EF44  F01D         	goto	u7440
  8188  003A84                     u7441:
  8189  003A84  EF4C  F01D         	goto	l1451
  8190  003A88                     u7440:
  8191  003A88  0E02               	movlw	2
  8192  003A8A  601B               	cpfslt	___xxtofl@exp^0,c
  8193  003A8C  EF4A  F01D         	goto	u7451
  8194  003A90  EF4C  F01D         	goto	u7450
  8195  003A94                     u7451:
  8196  003A94  EF37  F01D         	goto	l9882
  8197  003A98                     u7450:
  8198  003A98                     l1451:
  8199  003A98  B01B               	btfsc	___xxtofl@exp^0,0,c
  8200  003A9A  EF51  F01D         	goto	u7461
  8201  003A9E  EF53  F01D         	goto	u7460
  8202  003AA2                     u7461:
  8203  003AA2  EF54  F01D         	goto	l9890
  8204  003AA6                     u7460:
  8205  003AA6  9E1E               	bcf	(___xxtofl@arg+2)^0,7,c
  8206  003AA8                     l9890:
  8207  003AA8  90D8               	bcf	status,0,c
  8208  003AAA  321B               	rrcf	___xxtofl@exp^0,f,c
  8209  003AAC  C01B  F016         	movff	___xxtofl@exp,??___xxtofl
  8210  003AB0  6A17               	clrf	(??___xxtofl+1)^0,c
  8211  003AB2  6A18               	clrf	(??___xxtofl+2)^0,c
  8212  003AB4  6A19               	clrf	(??___xxtofl+3)^0,c
  8213  003AB6  C016  F019         	movff	??___xxtofl,??___xxtofl+3
  8214  003ABA  6A18               	clrf	(??___xxtofl+2)^0,c
  8215  003ABC  6A17               	clrf	(??___xxtofl+1)^0,c
  8216  003ABE  6A16               	clrf	??___xxtofl^0,c
  8217  003AC0  5016               	movf	??___xxtofl^0,w,c
  8218  003AC2  121C               	iorwf	___xxtofl@arg^0,f,c
  8219  003AC4  5017               	movf	(??___xxtofl+1)^0,w,c
  8220  003AC6  121D               	iorwf	(___xxtofl@arg+1)^0,f,c
  8221  003AC8  5018               	movf	(??___xxtofl+2)^0,w,c
  8222  003ACA  121E               	iorwf	(___xxtofl@arg+2)^0,f,c
  8223  003ACC  5019               	movf	(??___xxtofl+3)^0,w,c
  8224  003ACE  121F               	iorwf	(___xxtofl@arg+3)^0,f,c
  8225  003AD0  501A               	movf	___xxtofl@sign^0,w,c
  8226  003AD2  B4D8               	btfsc	status,2,c
  8227  003AD4  EF6E  F01D         	goto	u7471
  8228  003AD8  EF70  F01D         	goto	u7470
  8229  003ADC                     u7471:
  8230  003ADC  EF78  F01D         	goto	l9900
  8231  003AE0                     u7470:
  8232  003AE0  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  8233  003AE2  EF77  F01D         	goto	u7480
  8234  003AE6  EF75  F01D         	goto	u7481
  8235  003AEA                     u7481:
  8236  003AEA  EF78  F01D         	goto	l9900
  8237  003AEE                     u7480:
  8238  003AEE  8E1F               	bsf	(___xxtofl@arg+3)^0,7,c
  8239  003AF0                     l9900:
  8240  003AF0  C01C  F012         	movff	___xxtofl@arg,?___xxtofl
  8241  003AF4  C01D  F013         	movff	___xxtofl@arg+1,?___xxtofl+1
  8242  003AF8  C01E  F014         	movff	___xxtofl@arg+2,?___xxtofl+2
  8243  003AFC  C01F  F015         	movff	___xxtofl@arg+3,?___xxtofl+3
  8244  003B00                     l1440:
  8245  003B00  0012               	return		;funcret
  8246  003B02                     __end_of___xxtofl:
  8247                           	callstack 0
  8248                           
  8249 ;; *************** function ___fltol *****************
  8250 ;; Defined at:
  8251 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  f1              4   56[COMRAM] unsigned char 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  exp1            1   65[COMRAM] unsigned char 
  8256 ;;  sign1           1   64[COMRAM] unsigned char 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  4   56[COMRAM] long 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8266 ;;      Params:         4       0       0       0       0       0       0
  8267 ;;      Locals:         2       0       0       0       0       0       0
  8268 ;;      Temps:          4       0       0       0       0       0       0
  8269 ;;      Totals:        10       0       0       0       0       0       0
  8270 ;;Total ram usage:       10 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; Hardware stack levels required when called: 4
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_touchScreenController
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text31
  8281  004548                     __ptext31:
  8282                           	callstack 0
  8283  004548                     ___fltol:
  8284                           	callstack 23
  8285  004548  343B               	rlcf	(___fltol@f1+2)^0,w,c
  8286  00454A  343C               	rlcf	(___fltol@f1+3)^0,w,c
  8287  00454C  6E42               	movwf	___fltol@exp1^0,c
  8288  00454E  5042               	movf	___fltol@exp1^0,w,c
  8289  004550  A4D8               	btfss	status,2,c
  8290  004552  EFAD  F022         	goto	u7321
  8291  004556  EFAF  F022         	goto	u7320
  8292  00455A                     u7321:
  8293  00455A  EFB9  F022         	goto	l9820
  8294  00455E                     u7320:
  8295  00455E                     l9816:
  8296  00455E  0E00               	movlw	0
  8297  004560  6E39               	movwf	?___fltol^0,c
  8298  004562  0E00               	movlw	0
  8299  004564  6E3A               	movwf	(?___fltol+1)^0,c
  8300  004566  0E00               	movlw	0
  8301  004568  6E3B               	movwf	(?___fltol+2)^0,c
  8302  00456A  0E00               	movlw	0
  8303  00456C  6E3C               	movwf	(?___fltol+3)^0,c
  8304  00456E  EF26  F023         	goto	l1079
  8305  004572                     l9820:
  8306  004572  C039  F03D         	movff	___fltol@f1,??___fltol
  8307  004576  C03A  F03E         	movff	___fltol@f1+1,??___fltol+1
  8308  00457A  C03B  F03F         	movff	___fltol@f1+2,??___fltol+2
  8309  00457E  C03C  F040         	movff	___fltol@f1+3,??___fltol+3
  8310  004582  0E20               	movlw	32
  8311  004584  EFC9  F022         	goto	u7330
  8312  004588                     u7335:
  8313  004588  90D8               	bcf	status,0,c
  8314  00458A  3240               	rrcf	(??___fltol+3)^0,f,c
  8315  00458C  323F               	rrcf	(??___fltol+2)^0,f,c
  8316  00458E  323E               	rrcf	(??___fltol+1)^0,f,c
  8317  004590  323D               	rrcf	??___fltol^0,f,c
  8318  004592                     u7330:
  8319  004592  2EE8               	decfsz	wreg,f,c
  8320  004594  EFC4  F022         	goto	u7335
  8321  004598  503D               	movf	??___fltol^0,w,c
  8322  00459A  6E41               	movwf	___fltol@sign1^0,c
  8323  00459C  8E3B               	bsf	(___fltol@f1+2)^0,7,c
  8324  00459E  0EFF               	movlw	255
  8325  0045A0  1639               	andwf	___fltol@f1^0,f,c
  8326  0045A2  0EFF               	movlw	255
  8327  0045A4  163A               	andwf	(___fltol@f1+1)^0,f,c
  8328  0045A6  0EFF               	movlw	255
  8329  0045A8  163B               	andwf	(___fltol@f1+2)^0,f,c
  8330  0045AA  0E00               	movlw	0
  8331  0045AC  163C               	andwf	(___fltol@f1+3)^0,f,c
  8332  0045AE  0E96               	movlw	150
  8333  0045B0  5E42               	subwf	___fltol@exp1^0,f,c
  8334  0045B2  BE42               	btfsc	___fltol@exp1^0,7,c
  8335  0045B4  EFE0  F022         	goto	u7340
  8336  0045B8  EFDE  F022         	goto	u7341
  8337  0045BC                     u7341:
  8338  0045BC  EFF6  F022         	goto	l9840
  8339  0045C0                     u7340:
  8340  0045C0  5042               	movf	___fltol@exp1^0,w,c
  8341  0045C2  0A80               	xorlw	128
  8342  0045C4  0F97               	addlw	151
  8343  0045C6  B0D8               	btfsc	status,0,c
  8344  0045C8  EFE8  F022         	goto	u7351
  8345  0045CC  EFEA  F022         	goto	u7350
  8346  0045D0                     u7351:
  8347  0045D0  EFEC  F022         	goto	l9836
  8348  0045D4                     u7350:
  8349  0045D4  EFAF  F022         	goto	l9816
  8350  0045D8                     l9836:
  8351  0045D8  90D8               	bcf	status,0,c
  8352  0045DA  323C               	rrcf	(___fltol@f1+3)^0,f,c
  8353  0045DC  323B               	rrcf	(___fltol@f1+2)^0,f,c
  8354  0045DE  323A               	rrcf	(___fltol@f1+1)^0,f,c
  8355  0045E0  3239               	rrcf	___fltol@f1^0,f,c
  8356  0045E2  3E42               	incfsz	___fltol@exp1^0,f,c
  8357  0045E4  EFEC  F022         	goto	l9836
  8358  0045E8  EF0E  F023         	goto	l9850
  8359  0045EC                     l9840:
  8360  0045EC  0E1F               	movlw	31
  8361  0045EE  6442               	cpfsgt	___fltol@exp1^0,c
  8362  0045F0  EFFC  F022         	goto	u7361
  8363  0045F4  EFFE  F022         	goto	u7360
  8364  0045F8                     u7361:
  8365  0045F8  EF06  F023         	goto	l9848
  8366  0045FC                     u7360:
  8367  0045FC  EFAF  F022         	goto	l9816
  8368  004600                     l9846:
  8369  004600  90D8               	bcf	status,0,c
  8370  004602  3639               	rlcf	___fltol@f1^0,f,c
  8371  004604  363A               	rlcf	(___fltol@f1+1)^0,f,c
  8372  004606  363B               	rlcf	(___fltol@f1+2)^0,f,c
  8373  004608  363C               	rlcf	(___fltol@f1+3)^0,f,c
  8374  00460A  0642               	decf	___fltol@exp1^0,f,c
  8375  00460C                     l9848:
  8376  00460C  5042               	movf	___fltol@exp1^0,w,c
  8377  00460E  A4D8               	btfss	status,2,c
  8378  004610  EF0C  F023         	goto	u7371
  8379  004614  EF0E  F023         	goto	u7370
  8380  004618                     u7371:
  8381  004618  EF00  F023         	goto	l9846
  8382  00461C                     u7370:
  8383  00461C                     l9850:
  8384  00461C  5041               	movf	___fltol@sign1^0,w,c
  8385  00461E  B4D8               	btfsc	status,2,c
  8386  004620  EF14  F023         	goto	u7381
  8387  004624  EF16  F023         	goto	u7380
  8388  004628                     u7381:
  8389  004628  EF1E  F023         	goto	l9854
  8390  00462C                     u7380:
  8391  00462C  1E3C               	comf	(___fltol@f1+3)^0,f,c
  8392  00462E  1E3B               	comf	(___fltol@f1+2)^0,f,c
  8393  004630  1E3A               	comf	(___fltol@f1+1)^0,f,c
  8394  004632  6C39               	negf	___fltol@f1^0,c
  8395  004634  0E00               	movlw	0
  8396  004636  223A               	addwfc	(___fltol@f1+1)^0,f,c
  8397  004638  223B               	addwfc	(___fltol@f1+2)^0,f,c
  8398  00463A  223C               	addwfc	(___fltol@f1+3)^0,f,c
  8399  00463C                     l9854:
  8400  00463C  C039  F039         	movff	___fltol@f1,?___fltol
  8401  004640  C03A  F03A         	movff	___fltol@f1+1,?___fltol+1
  8402  004644  C03B  F03B         	movff	___fltol@f1+2,?___fltol+2
  8403  004648  C03C  F03C         	movff	___fltol@f1+3,?___fltol+3
  8404  00464C                     l1079:
  8405  00464C  0012               	return		;funcret
  8406  00464E                     __end_of___fltol:
  8407                           	callstack 0
  8408                           
  8409 ;; *************** function ___fldiv *****************
  8410 ;; Defined at:
  8411 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;  b               4   31[COMRAM] long 
  8414 ;;  a               4   35[COMRAM] long 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  grs             4   50[COMRAM] unsigned long 
  8417 ;;  rem             4   43[COMRAM] unsigned long 
  8418 ;;  new_exp         2   48[COMRAM] short 
  8419 ;;  aexp            1   55[COMRAM] unsigned char 
  8420 ;;  bexp            1   54[COMRAM] unsigned char 
  8421 ;;  sign            1   47[COMRAM] unsigned char 
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  4   31[COMRAM] unsigned char 
  8424 ;; Registers used:
  8425 ;;		wreg, status,2, status,0
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8431 ;;      Params:         8       0       0       0       0       0       0
  8432 ;;      Locals:        13       0       0       0       0       0       0
  8433 ;;      Temps:          4       0       0       0       0       0       0
  8434 ;;      Totals:        25       0       0       0       0       0       0
  8435 ;;Total ram usage:       25 bytes
  8436 ;; Hardware stack levels used: 1
  8437 ;; Hardware stack levels required when called: 4
  8438 ;; This function calls:
  8439 ;;		Nothing
  8440 ;; This function is called by:
  8441 ;;		_touchScreenController
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text32
  8446  002100                     __ptext32:
  8447                           	callstack 0
  8448  002100                     ___fldiv:
  8449                           	callstack 23
  8450  002100  5023               	movf	(___fldiv@b+3)^0,w,c
  8451  002102  0B80               	andlw	128
  8452  002104  6E30               	movwf	___fldiv@sign^0,c
  8453  002106  5023               	movf	(___fldiv@b+3)^0,w,c
  8454  002108  2423               	addwf	(___fldiv@b+3)^0,w,c
  8455  00210A  6E37               	movwf	___fldiv@bexp^0,c
  8456  00210C  AE22               	btfss	(___fldiv@b+2)^0,7,c
  8457  00210E  EF8B  F010         	goto	u7091
  8458  002112  EF8D  F010         	goto	u7090
  8459  002116                     u7091:
  8460  002116  EF8E  F010         	goto	l9682
  8461  00211A                     u7090:
  8462  00211A  8037               	bsf	___fldiv@bexp^0,0,c
  8463  00211C                     l9682:
  8464  00211C  5037               	movf	___fldiv@bexp^0,w,c
  8465  00211E  B4D8               	btfsc	status,2,c
  8466  002120  EF94  F010         	goto	u7101
  8467  002124  EF96  F010         	goto	u7100
  8468  002128                     u7101:
  8469  002128  EFAB  F010         	goto	l9692
  8470  00212C                     u7100:
  8471  00212C  2837               	incf	___fldiv@bexp^0,w,c
  8472  00212E  A4D8               	btfss	status,2,c
  8473  002130  EF9C  F010         	goto	u7111
  8474  002134  EF9E  F010         	goto	u7110
  8475  002138                     u7111:
  8476  002138  EFA6  F010         	goto	l9688
  8477  00213C                     u7110:
  8478  00213C  0E00               	movlw	0
  8479  00213E  6E20               	movwf	___fldiv@b^0,c
  8480  002140  0E00               	movlw	0
  8481  002142  6E21               	movwf	(___fldiv@b+1)^0,c
  8482  002144  0E00               	movlw	0
  8483  002146  6E22               	movwf	(___fldiv@b+2)^0,c
  8484  002148  0E00               	movlw	0
  8485  00214A  6E23               	movwf	(___fldiv@b+3)^0,c
  8486  00214C                     l9688:
  8487  00214C  8E22               	bsf	(___fldiv@b+2)^0,7,c
  8488  00214E  0E00               	movlw	0
  8489  002150  6E23               	movwf	(___fldiv@b+3)^0,c
  8490  002152  EFB3  F010         	goto	l9694
  8491  002156                     l9692:
  8492  002156  0E00               	movlw	0
  8493  002158  6E20               	movwf	___fldiv@b^0,c
  8494  00215A  0E00               	movlw	0
  8495  00215C  6E21               	movwf	(___fldiv@b+1)^0,c
  8496  00215E  0E00               	movlw	0
  8497  002160  6E22               	movwf	(___fldiv@b+2)^0,c
  8498  002162  0E00               	movlw	0
  8499  002164  6E23               	movwf	(___fldiv@b+3)^0,c
  8500  002166                     l9694:
  8501  002166  5027               	movf	(___fldiv@a+3)^0,w,c
  8502  002168  0B80               	andlw	128
  8503  00216A  1A30               	xorwf	___fldiv@sign^0,f,c
  8504  00216C  5027               	movf	(___fldiv@a+3)^0,w,c
  8505  00216E  2427               	addwf	(___fldiv@a+3)^0,w,c
  8506  002170  6E38               	movwf	___fldiv@aexp^0,c
  8507  002172  AE26               	btfss	(___fldiv@a+2)^0,7,c
  8508  002174  EFBE  F010         	goto	u7121
  8509  002178  EFC0  F010         	goto	u7120
  8510  00217C                     u7121:
  8511  00217C  EFC1  F010         	goto	l9702
  8512  002180                     u7120:
  8513  002180  8038               	bsf	___fldiv@aexp^0,0,c
  8514  002182                     l9702:
  8515  002182  5038               	movf	___fldiv@aexp^0,w,c
  8516  002184  B4D8               	btfsc	status,2,c
  8517  002186  EFC7  F010         	goto	u7131
  8518  00218A  EFC9  F010         	goto	u7130
  8519  00218E                     u7131:
  8520  00218E  EFDE  F010         	goto	l9712
  8521  002192                     u7130:
  8522  002192  2838               	incf	___fldiv@aexp^0,w,c
  8523  002194  A4D8               	btfss	status,2,c
  8524  002196  EFCF  F010         	goto	u7141
  8525  00219A  EFD1  F010         	goto	u7140
  8526  00219E                     u7141:
  8527  00219E  EFD9  F010         	goto	l9708
  8528  0021A2                     u7140:
  8529  0021A2  0E00               	movlw	0
  8530  0021A4  6E24               	movwf	___fldiv@a^0,c
  8531  0021A6  0E00               	movlw	0
  8532  0021A8  6E25               	movwf	(___fldiv@a+1)^0,c
  8533  0021AA  0E00               	movlw	0
  8534  0021AC  6E26               	movwf	(___fldiv@a+2)^0,c
  8535  0021AE  0E00               	movlw	0
  8536  0021B0  6E27               	movwf	(___fldiv@a+3)^0,c
  8537  0021B2                     l9708:
  8538  0021B2  8E26               	bsf	(___fldiv@a+2)^0,7,c
  8539  0021B4  0E00               	movlw	0
  8540  0021B6  6E27               	movwf	(___fldiv@a+3)^0,c
  8541  0021B8  EFE6  F010         	goto	l9714
  8542  0021BC                     l9712:
  8543  0021BC  0E00               	movlw	0
  8544  0021BE  6E24               	movwf	___fldiv@a^0,c
  8545  0021C0  0E00               	movlw	0
  8546  0021C2  6E25               	movwf	(___fldiv@a+1)^0,c
  8547  0021C4  0E00               	movlw	0
  8548  0021C6  6E26               	movwf	(___fldiv@a+2)^0,c
  8549  0021C8  0E00               	movlw	0
  8550  0021CA  6E27               	movwf	(___fldiv@a+3)^0,c
  8551  0021CC                     l9714:
  8552  0021CC  5024               	movf	___fldiv@a^0,w,c
  8553  0021CE  1025               	iorwf	(___fldiv@a+1)^0,w,c
  8554  0021D0  1026               	iorwf	(___fldiv@a+2)^0,w,c
  8555  0021D2  1027               	iorwf	(___fldiv@a+3)^0,w,c
  8556  0021D4  A4D8               	btfss	status,2,c
  8557  0021D6  EFEF  F010         	goto	u7151
  8558  0021DA  EFF1  F010         	goto	u7150
  8559  0021DE                     u7151:
  8560  0021DE  EF09  F011         	goto	l9726
  8561  0021E2                     u7150:
  8562  0021E2  0E00               	movlw	0
  8563  0021E4  6E20               	movwf	___fldiv@b^0,c
  8564  0021E6  0E00               	movlw	0
  8565  0021E8  6E21               	movwf	(___fldiv@b+1)^0,c
  8566  0021EA  0E00               	movlw	0
  8567  0021EC  6E22               	movwf	(___fldiv@b+2)^0,c
  8568  0021EE  0E00               	movlw	0
  8569  0021F0  6E23               	movwf	(___fldiv@b+3)^0,c
  8570  0021F2  0E80               	movlw	128
  8571  0021F4  1222               	iorwf	(___fldiv@b+2)^0,f,c
  8572  0021F6  0E7F               	movlw	127
  8573  0021F8  1223               	iorwf	(___fldiv@b+3)^0,f,c
  8574  0021FA                     l9720:
  8575  0021FA  5030               	movf	___fldiv@sign^0,w,c
  8576  0021FC  1223               	iorwf	(___fldiv@b+3)^0,f,c
  8577  0021FE  C020  F020         	movff	___fldiv@b,?___fldiv
  8578  002202  C021  F021         	movff	___fldiv@b+1,?___fldiv+1
  8579  002206  C022  F022         	movff	___fldiv@b+2,?___fldiv+2
  8580  00220A  C023  F023         	movff	___fldiv@b+3,?___fldiv+3
  8581  00220E  EF4C  F012         	goto	l1364
  8582  002212                     l9726:
  8583  002212  5037               	movf	___fldiv@bexp^0,w,c
  8584  002214  A4D8               	btfss	status,2,c
  8585  002216  EF0F  F011         	goto	u7161
  8586  00221A  EF11  F011         	goto	u7160
  8587  00221E                     u7161:
  8588  00221E  EF1B  F011         	goto	l9734
  8589  002222                     u7160:
  8590  002222  0E00               	movlw	0
  8591  002224  6E20               	movwf	?___fldiv^0,c
  8592  002226  0E00               	movlw	0
  8593  002228  6E21               	movwf	(?___fldiv+1)^0,c
  8594  00222A  0E00               	movlw	0
  8595  00222C  6E22               	movwf	(?___fldiv+2)^0,c
  8596  00222E  0E00               	movlw	0
  8597  002230  6E23               	movwf	(?___fldiv+3)^0,c
  8598  002232  EF4C  F012         	goto	l1364
  8599  002236                     l9734:
  8600  002236  5038               	movf	___fldiv@aexp^0,w,c
  8601  002238  C037  F028         	movff	___fldiv@bexp,??___fldiv
  8602  00223C  6A29               	clrf	(??___fldiv+1)^0,c
  8603  00223E  5E28               	subwf	??___fldiv^0,f,c
  8604  002240  0E00               	movlw	0
  8605  002242  5A29               	subwfb	(??___fldiv+1)^0,f,c
  8606  002244  0E7F               	movlw	127
  8607  002246  2428               	addwf	??___fldiv^0,w,c
  8608  002248  6E31               	movwf	___fldiv@new_exp^0,c
  8609  00224A  0E00               	movlw	0
  8610  00224C  2029               	addwfc	(??___fldiv+1)^0,w,c
  8611  00224E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  8612  002250  C020  F02C         	movff	___fldiv@b,___fldiv@rem
  8613  002254  C021  F02D         	movff	___fldiv@b+1,___fldiv@rem+1
  8614  002258  C022  F02E         	movff	___fldiv@b+2,___fldiv@rem+2
  8615  00225C  C023  F02F         	movff	___fldiv@b+3,___fldiv@rem+3
  8616  002260  0E00               	movlw	0
  8617  002262  6E20               	movwf	___fldiv@b^0,c
  8618  002264  0E00               	movlw	0
  8619  002266  6E21               	movwf	(___fldiv@b+1)^0,c
  8620  002268  0E00               	movlw	0
  8621  00226A  6E22               	movwf	(___fldiv@b+2)^0,c
  8622  00226C  0E00               	movlw	0
  8623  00226E  6E23               	movwf	(___fldiv@b+3)^0,c
  8624  002270  0E00               	movlw	0
  8625  002272  6E33               	movwf	___fldiv@grs^0,c
  8626  002274  0E00               	movlw	0
  8627  002276  6E34               	movwf	(___fldiv@grs+1)^0,c
  8628  002278  0E00               	movlw	0
  8629  00227A  6E35               	movwf	(___fldiv@grs+2)^0,c
  8630  00227C  0E00               	movlw	0
  8631  00227E  6E36               	movwf	(___fldiv@grs+3)^0,c
  8632  002280  0E00               	movlw	0
  8633  002282  6E38               	movwf	___fldiv@aexp^0,c
  8634  002284  EF7C  F011         	goto	l1366
  8635  002288                     l9744:
  8636  002288  5038               	movf	___fldiv@aexp^0,w,c
  8637  00228A  B4D8               	btfsc	status,2,c
  8638  00228C  EF4A  F011         	goto	u7171
  8639  002290  EF4C  F011         	goto	u7170
  8640  002294                     u7171:
  8641  002294  EF63  F011         	goto	l9752
  8642  002298                     u7170:
  8643  002298  90D8               	bcf	status,0,c
  8644  00229A  362C               	rlcf	___fldiv@rem^0,f,c
  8645  00229C  362D               	rlcf	(___fldiv@rem+1)^0,f,c
  8646  00229E  362E               	rlcf	(___fldiv@rem+2)^0,f,c
  8647  0022A0  362F               	rlcf	(___fldiv@rem+3)^0,f,c
  8648  0022A2  90D8               	bcf	status,0,c
  8649  0022A4  3620               	rlcf	___fldiv@b^0,f,c
  8650  0022A6  3621               	rlcf	(___fldiv@b+1)^0,f,c
  8651  0022A8  3622               	rlcf	(___fldiv@b+2)^0,f,c
  8652  0022AA  3623               	rlcf	(___fldiv@b+3)^0,f,c
  8653  0022AC  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  8654  0022AE  EF5B  F011         	goto	u7181
  8655  0022B2  EF5D  F011         	goto	u7180
  8656  0022B6                     u7181:
  8657  0022B6  EF5E  F011         	goto	l1369
  8658  0022BA                     u7180:
  8659  0022BA  8020               	bsf	___fldiv@b^0,0,c
  8660  0022BC                     l1369:
  8661  0022BC  90D8               	bcf	status,0,c
  8662  0022BE  3633               	rlcf	___fldiv@grs^0,f,c
  8663  0022C0  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  8664  0022C2  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  8665  0022C4  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  8666  0022C6                     l9752:
  8667  0022C6  5024               	movf	___fldiv@a^0,w,c
  8668  0022C8  5C2C               	subwf	___fldiv@rem^0,w,c
  8669  0022CA  5025               	movf	(___fldiv@a+1)^0,w,c
  8670  0022CC  582D               	subwfb	(___fldiv@rem+1)^0,w,c
  8671  0022CE  5026               	movf	(___fldiv@a+2)^0,w,c
  8672  0022D0  582E               	subwfb	(___fldiv@rem+2)^0,w,c
  8673  0022D2  5027               	movf	(___fldiv@a+3)^0,w,c
  8674  0022D4  582F               	subwfb	(___fldiv@rem+3)^0,w,c
  8675  0022D6  A0D8               	btfss	status,0,c
  8676  0022D8  EF70  F011         	goto	u7191
  8677  0022DC  EF72  F011         	goto	u7190
  8678  0022E0                     u7191:
  8679  0022E0  EF7B  F011         	goto	l9758
  8680  0022E4                     u7190:
  8681  0022E4  8C36               	bsf	(___fldiv@grs+3)^0,6,c
  8682  0022E6  5024               	movf	___fldiv@a^0,w,c
  8683  0022E8  5E2C               	subwf	___fldiv@rem^0,f,c
  8684  0022EA  5025               	movf	(___fldiv@a+1)^0,w,c
  8685  0022EC  5A2D               	subwfb	(___fldiv@rem+1)^0,f,c
  8686  0022EE  5026               	movf	(___fldiv@a+2)^0,w,c
  8687  0022F0  5A2E               	subwfb	(___fldiv@rem+2)^0,f,c
  8688  0022F2  5027               	movf	(___fldiv@a+3)^0,w,c
  8689  0022F4  5A2F               	subwfb	(___fldiv@rem+3)^0,f,c
  8690  0022F6                     l9758:
  8691  0022F6  2A38               	incf	___fldiv@aexp^0,f,c
  8692  0022F8                     l1366:
  8693  0022F8  0E19               	movlw	25
  8694  0022FA  6438               	cpfsgt	___fldiv@aexp^0,c
  8695  0022FC  EF82  F011         	goto	u7201
  8696  002300  EF84  F011         	goto	u7200
  8697  002304                     u7201:
  8698  002304  EF44  F011         	goto	l9744
  8699  002308                     u7200:
  8700  002308  502C               	movf	___fldiv@rem^0,w,c
  8701  00230A  102D               	iorwf	(___fldiv@rem+1)^0,w,c
  8702  00230C  102E               	iorwf	(___fldiv@rem+2)^0,w,c
  8703  00230E  102F               	iorwf	(___fldiv@rem+3)^0,w,c
  8704  002310  B4D8               	btfsc	status,2,c
  8705  002312  EF8D  F011         	goto	u7211
  8706  002316  EF8F  F011         	goto	u7210
  8707  00231A                     u7211:
  8708  00231A  EFA7  F011         	goto	l9770
  8709  00231E                     u7210:
  8710  00231E  8033               	bsf	___fldiv@grs^0,0,c
  8711  002320  EFA7  F011         	goto	l9770
  8712  002324                     l9764:
  8713  002324  90D8               	bcf	status,0,c
  8714  002326  3620               	rlcf	___fldiv@b^0,f,c
  8715  002328  3621               	rlcf	(___fldiv@b+1)^0,f,c
  8716  00232A  3622               	rlcf	(___fldiv@b+2)^0,f,c
  8717  00232C  3623               	rlcf	(___fldiv@b+3)^0,f,c
  8718  00232E  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  8719  002330  EF9C  F011         	goto	u7221
  8720  002334  EF9E  F011         	goto	u7220
  8721  002338                     u7221:
  8722  002338  EF9F  F011         	goto	l1375
  8723  00233C                     u7220:
  8724  00233C  8020               	bsf	___fldiv@b^0,0,c
  8725  00233E                     l1375:
  8726  00233E  90D8               	bcf	status,0,c
  8727  002340  3633               	rlcf	___fldiv@grs^0,f,c
  8728  002342  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  8729  002344  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  8730  002346  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  8731  002348  0631               	decf	___fldiv@new_exp^0,f,c
  8732  00234A  A0D8               	btfss	status,0,c
  8733  00234C  0632               	decf	(___fldiv@new_exp+1)^0,f,c
  8734  00234E                     l9770:
  8735  00234E  AE22               	btfss	(___fldiv@b+2)^0,7,c
  8736  002350  EFAC  F011         	goto	u7231
  8737  002354  EFAE  F011         	goto	u7230
  8738  002358                     u7231:
  8739  002358  EF92  F011         	goto	l9764
  8740  00235C                     u7230:
  8741  00235C  0E00               	movlw	0
  8742  00235E  6E38               	movwf	___fldiv@aexp^0,c
  8743  002360  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  8744  002362  EFB5  F011         	goto	u7241
  8745  002366  EFB7  F011         	goto	u7240
  8746  00236A                     u7241:
  8747  00236A  EFDB  F011         	goto	l1377
  8748  00236E                     u7240:
  8749  00236E  0EFF               	movlw	255
  8750  002370  1433               	andwf	___fldiv@grs^0,w,c
  8751  002372  6E28               	movwf	??___fldiv^0,c
  8752  002374  0EFF               	movlw	255
  8753  002376  1434               	andwf	(___fldiv@grs+1)^0,w,c
  8754  002378  6E29               	movwf	(??___fldiv+1)^0,c
  8755  00237A  0EFF               	movlw	255
  8756  00237C  1435               	andwf	(___fldiv@grs+2)^0,w,c
  8757  00237E  6E2A               	movwf	(??___fldiv+2)^0,c
  8758  002380  0E7F               	movlw	127
  8759  002382  1436               	andwf	(___fldiv@grs+3)^0,w,c
  8760  002384  6E2B               	movwf	(??___fldiv+3)^0,c
  8761  002386  5028               	movf	??___fldiv^0,w,c
  8762  002388  1029               	iorwf	(??___fldiv+1)^0,w,c
  8763  00238A  102A               	iorwf	(??___fldiv+2)^0,w,c
  8764  00238C  102B               	iorwf	(??___fldiv+3)^0,w,c
  8765  00238E  B4D8               	btfsc	status,2,c
  8766  002390  EFCC  F011         	goto	u7251
  8767  002394  EFCE  F011         	goto	u7250
  8768  002398                     u7251:
  8769  002398  EFD2  F011         	goto	l1378
  8770  00239C                     u7250:
  8771  00239C                     l9778:
  8772  00239C  0E01               	movlw	1
  8773  00239E  6E38               	movwf	___fldiv@aexp^0,c
  8774  0023A0  EFDB  F011         	goto	l1377
  8775  0023A4                     l1378:
  8776  0023A4  A020               	btfss	___fldiv@b^0,0,c
  8777  0023A6  EFD7  F011         	goto	u7261
  8778  0023AA  EFD9  F011         	goto	u7260
  8779  0023AE                     u7261:
  8780  0023AE  EFDB  F011         	goto	l1377
  8781  0023B2                     u7260:
  8782  0023B2  EFCE  F011         	goto	l9778
  8783  0023B6                     l1377:
  8784  0023B6  5038               	movf	___fldiv@aexp^0,w,c
  8785  0023B8  B4D8               	btfsc	status,2,c
  8786  0023BA  EFE1  F011         	goto	u7271
  8787  0023BE  EFE3  F011         	goto	u7270
  8788  0023C2                     u7271:
  8789  0023C2  EF07  F012         	goto	l9790
  8790  0023C6                     u7270:
  8791  0023C6  0E01               	movlw	1
  8792  0023C8  2620               	addwf	___fldiv@b^0,f,c
  8793  0023CA  0E00               	movlw	0
  8794  0023CC  2221               	addwfc	(___fldiv@b+1)^0,f,c
  8795  0023CE  2222               	addwfc	(___fldiv@b+2)^0,f,c
  8796  0023D0  2223               	addwfc	(___fldiv@b+3)^0,f,c
  8797  0023D2  A023               	btfss	(___fldiv@b+3)^0,0,c
  8798  0023D4  EFEE  F011         	goto	u7281
  8799  0023D8  EFF0  F011         	goto	u7280
  8800  0023DC                     u7281:
  8801  0023DC  EF07  F012         	goto	l9790
  8802  0023E0                     u7280:
  8803  0023E0  C020  F028         	movff	___fldiv@b,??___fldiv
  8804  0023E4  C021  F029         	movff	___fldiv@b+1,??___fldiv+1
  8805  0023E8  C022  F02A         	movff	___fldiv@b+2,??___fldiv+2
  8806  0023EC  C023  F02B         	movff	___fldiv@b+3,??___fldiv+3
  8807  0023F0  342B               	rlcf	(??___fldiv+3)^0,w,c
  8808  0023F2  322B               	rrcf	(??___fldiv+3)^0,f,c
  8809  0023F4  322A               	rrcf	(??___fldiv+2)^0,f,c
  8810  0023F6  3229               	rrcf	(??___fldiv+1)^0,f,c
  8811  0023F8  3228               	rrcf	??___fldiv^0,f,c
  8812  0023FA  C028  F020         	movff	??___fldiv,___fldiv@b
  8813  0023FE  C029  F021         	movff	??___fldiv+1,___fldiv@b+1
  8814  002402  C02A  F022         	movff	??___fldiv+2,___fldiv@b+2
  8815  002406  C02B  F023         	movff	??___fldiv+3,___fldiv@b+3
  8816  00240A  4A31               	infsnz	___fldiv@new_exp^0,f,c
  8817  00240C  2A32               	incf	(___fldiv@new_exp+1)^0,f,c
  8818  00240E                     l9790:
  8819  00240E  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8820  002410  EF12  F012         	goto	u7291
  8821  002414  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  8822  002416  E108               	bnz	u7290
  8823  002418  2831               	incf	___fldiv@new_exp^0,w,c
  8824  00241A  A0D8               	btfss	status,0,c
  8825  00241C  EF12  F012         	goto	u7291
  8826  002420  EF14  F012         	goto	u7290
  8827  002424                     u7291:
  8828  002424  EF1F  F012         	goto	l9794
  8829  002428                     u7290:
  8830  002428  0E00               	movlw	0
  8831  00242A  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  8832  00242C  6831               	setf	___fldiv@new_exp^0,c
  8833  00242E  0E00               	movlw	0
  8834  002430  6E20               	movwf	___fldiv@b^0,c
  8835  002432  0E00               	movlw	0
  8836  002434  6E21               	movwf	(___fldiv@b+1)^0,c
  8837  002436  0E00               	movlw	0
  8838  002438  6E22               	movwf	(___fldiv@b+2)^0,c
  8839  00243A  0E00               	movlw	0
  8840  00243C  6E23               	movwf	(___fldiv@b+3)^0,c
  8841  00243E                     l9794:
  8842  00243E  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8843  002440  EF2C  F012         	goto	u7300
  8844  002444  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  8845  002446  E106               	bnz	u7301
  8846  002448  0431               	decf	___fldiv@new_exp^0,w,c
  8847  00244A  B0D8               	btfsc	status,0,c
  8848  00244C  EF2A  F012         	goto	u7301
  8849  002450  EF2C  F012         	goto	u7300
  8850  002454                     u7301:
  8851  002454  EF3A  F012         	goto	l9798
  8852  002458                     u7300:
  8853  002458  0E00               	movlw	0
  8854  00245A  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  8855  00245C  0E00               	movlw	0
  8856  00245E  6E31               	movwf	___fldiv@new_exp^0,c
  8857  002460  0E00               	movlw	0
  8858  002462  6E20               	movwf	___fldiv@b^0,c
  8859  002464  0E00               	movlw	0
  8860  002466  6E21               	movwf	(___fldiv@b+1)^0,c
  8861  002468  0E00               	movlw	0
  8862  00246A  6E22               	movwf	(___fldiv@b+2)^0,c
  8863  00246C  0E00               	movlw	0
  8864  00246E  6E23               	movwf	(___fldiv@b+3)^0,c
  8865  002470  0E00               	movlw	0
  8866  002472  6E30               	movwf	___fldiv@sign^0,c
  8867  002474                     l9798:
  8868  002474  C031  F037         	movff	___fldiv@new_exp,___fldiv@bexp
  8869  002478  A037               	btfss	___fldiv@bexp^0,0,c
  8870  00247A  EF41  F012         	goto	u7311
  8871  00247E  EF43  F012         	goto	u7310
  8872  002482                     u7311:
  8873  002482  EF46  F012         	goto	l9804
  8874  002486                     u7310:
  8875  002486  8E22               	bsf	(___fldiv@b+2)^0,7,c
  8876  002488  EF47  F012         	goto	l9806
  8877  00248C                     l9804:
  8878  00248C  9E22               	bcf	(___fldiv@b+2)^0,7,c
  8879  00248E                     l9806:
  8880  00248E  90D8               	bcf	status,0,c
  8881  002490  3037               	rrcf	___fldiv@bexp^0,w,c
  8882  002492  6E23               	movwf	(___fldiv@b+3)^0,c
  8883  002494  EFFD  F010         	goto	l9720
  8884  002498                     l1364:
  8885  002498  0012               	return		;funcret
  8886  00249A                     __end_of___fldiv:
  8887                           	callstack 0
  8888                           
  8889 ;; *************** function _XF_scheduleTimer *****************
  8890 ;; Defined at:
  8891 ;;		line 96 in file "xf/xf.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;  tm              2   18[COMRAM] unsigned short 
  8894 ;;  ev              1   20[COMRAM] unsigned char 
  8895 ;;  inISR           1   21[COMRAM] _Bool 
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;  i               1   22[COMRAM] unsigned char 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      unsigned char 
  8900 ;; Registers used:
  8901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8907 ;;      Params:         4       0       0       0       0       0       0
  8908 ;;      Locals:         1       0       0       0       0       0       0
  8909 ;;      Temps:          0       0       0       0       0       0       0
  8910 ;;      Totals:         5       0       0       0       0       0       0
  8911 ;;Total ram usage:        5 bytes
  8912 ;; Hardware stack levels used: 1
  8913 ;; Hardware stack levels required when called: 5
  8914 ;; This function calls:
  8915 ;;		_ENTERCRITICAL
  8916 ;;		_LEAVECRITICAL
  8917 ;; This function is called by:
  8918 ;;		_touchScreenController
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text33
  8923  0056B2                     __ptext33:
  8924                           	callstack 0
  8925  0056B2                     _XF_scheduleTimer:
  8926                           	callstack 22
  8927  0056B2                     
  8928                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
  8929  0056B2  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  8930  0056B4  EC73  F02F         	call	_ENTERCRITICAL
  8931  0056B8                     
  8932                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
  8933  0056B8  0E00               	movlw	0
  8934  0056BA  6E17               	movwf	XF_scheduleTimer@i^0,c
  8935  0056BC                     l9556:
  8936                           
  8937                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
  8938  0056BC  5017               	movf	XF_scheduleTimer@i^0,w,c
  8939  0056BE  0D03               	mullw	3
  8940  0056C0  0EB7               	movlw	low (_theXF+2)
  8941  0056C2  24F3               	addwf	243,w,c
  8942  0056C4  6ED9               	movwf	fsr2l,c
  8943  0056C6  0E00               	movlw	high (_theXF+2)
  8944  0056C8  20F4               	addwfc	prodh,w,c
  8945  0056CA  6EDA               	movwf	fsr2h,c
  8946  0056CC  50DF               	movf	indf2,w,c
  8947  0056CE  A4D8               	btfss	status,2,c
  8948  0056D0  EF6C  F02B         	goto	u6861
  8949  0056D4  EF6E  F02B         	goto	u6860
  8950  0056D8                     u6861:
  8951  0056D8  EF86  F02B         	goto	l9560
  8952  0056DC                     u6860:
  8953  0056DC                     
  8954                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
  8955  0056DC  5017               	movf	XF_scheduleTimer@i^0,w,c
  8956  0056DE  0D03               	mullw	3
  8957  0056E0  0EB5               	movlw	low _theXF
  8958  0056E2  24F3               	addwf	243,w,c
  8959  0056E4  6ED9               	movwf	fsr2l,c
  8960  0056E6  0E00               	movlw	high _theXF
  8961  0056E8  20F4               	addwfc	prodh,w,c
  8962  0056EA  6EDA               	movwf	fsr2h,c
  8963  0056EC  C013  FFDE         	movff	XF_scheduleTimer@tm,postinc2
  8964  0056F0  C014  FFDD         	movff	XF_scheduleTimer@tm+1,postdec2
  8965                           
  8966                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
  8967  0056F4  5017               	movf	XF_scheduleTimer@i^0,w,c
  8968  0056F6  0D03               	mullw	3
  8969  0056F8  0EB7               	movlw	low (_theXF+2)
  8970  0056FA  24F3               	addwf	243,w,c
  8971  0056FC  6ED9               	movwf	fsr2l,c
  8972  0056FE  0E00               	movlw	high (_theXF+2)
  8973  005700  20F4               	addwfc	prodh,w,c
  8974  005702  6EDA               	movwf	fsr2h,c
  8975  005704  C015  FFDF         	movff	XF_scheduleTimer@ev,indf2
  8976                           
  8977                           ;xf/xf.c: 107:             break;
  8978  005708  EF8F  F02B         	goto	l9564
  8979  00570C                     l9560:
  8980                           
  8981                           ;xf/xf.c: 109:     }
  8982  00570C  2A17               	incf	XF_scheduleTimer@i^0,f,c
  8983  00570E  0E07               	movlw	7
  8984  005710  6417               	cpfsgt	XF_scheduleTimer@i^0,c
  8985  005712  EF8D  F02B         	goto	u6871
  8986  005716  EF8F  F02B         	goto	u6870
  8987  00571A                     u6871:
  8988  00571A  EF5E  F02B         	goto	l9556
  8989  00571E                     u6870:
  8990  00571E                     l9564:
  8991                           
  8992                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
  8993  00571E  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  8994  005720  EC68  F02F         	call	_LEAVECRITICAL
  8995  005724  0012               	return		;funcret
  8996  005726                     __end_of_XF_scheduleTimer:
  8997                           	callstack 0
  8998                           
  8999 ;; *************** function _GameParameters_setY *****************
  9000 ;; Defined at:
  9001 ;;		line 50 in file "class/gameParameters.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9004 ;;		 -> g1(201), 
  9005 ;;  value           2   19[COMRAM] unsigned short 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      void 
  9010 ;; Registers used:
  9011 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9017 ;;      Params:         4       0       0       0       0       0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0
  9020 ;;      Totals:         4       0       0       0       0       0       0
  9021 ;;Total ram usage:        4 bytes
  9022 ;; Hardware stack levels used: 1
  9023 ;; Hardware stack levels required when called: 4
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		_touchScreenController
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text34
  9032  005EA4                     __ptext34:
  9033                           	callstack 0
  9034  005EA4                     _GameParameters_setY:
  9035                           	callstack 23
  9036  005EA4                     
  9037                           ;class/gameParameters.c: 50: void GameParameters_setY(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 51: {;class/gameParameters.c: 52:     s->y=value;
  9038  005EA4  EE20 F006          	lfsr	2,6
  9039  005EA8  5012               	movf	GameParameters_setY@s^0,w,c
  9040  005EAA  26D9               	addwf	fsr2l,f,c
  9041  005EAC  5013               	movf	(GameParameters_setY@s+1)^0,w,c
  9042  005EAE  22DA               	addwfc	fsr2h,f,c
  9043  005EB0  C014  FFDE         	movff	GameParameters_setY@value,postinc2
  9044  005EB4  C015  FFDD         	movff	GameParameters_setY@value+1,postdec2
  9045  005EB8  0012               	return		;funcret
  9046  005EBA                     __end_of_GameParameters_setY:
  9047                           	callstack 0
  9048                           
  9049 ;; *************** function _GameParameters_setX *****************
  9050 ;; Defined at:
  9051 ;;		line 46 in file "class/gameParameters.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9054 ;;		 -> g1(201), 
  9055 ;;  value           2   19[COMRAM] unsigned short 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;		None
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      void 
  9060 ;; Registers used:
  9061 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9067 ;;      Params:         4       0       0       0       0       0       0
  9068 ;;      Locals:         0       0       0       0       0       0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0
  9070 ;;      Totals:         4       0       0       0       0       0       0
  9071 ;;Total ram usage:        4 bytes
  9072 ;; Hardware stack levels used: 1
  9073 ;; Hardware stack levels required when called: 4
  9074 ;; This function calls:
  9075 ;;		Nothing
  9076 ;; This function is called by:
  9077 ;;		_touchScreenController
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text35
  9082  005EBA                     __ptext35:
  9083                           	callstack 0
  9084  005EBA                     _GameParameters_setX:
  9085                           	callstack 23
  9086  005EBA                     
  9087                           ;class/gameParameters.c: 46: void GameParameters_setX(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 47: {;class/gameParameters.c: 48:     s->x=value;
  9088  005EBA  EE20 F004          	lfsr	2,4
  9089  005EBE  5012               	movf	GameParameters_setX@s^0,w,c
  9090  005EC0  26D9               	addwf	fsr2l,f,c
  9091  005EC2  5013               	movf	(GameParameters_setX@s+1)^0,w,c
  9092  005EC4  22DA               	addwfc	fsr2h,f,c
  9093  005EC6  C014  FFDE         	movff	GameParameters_setX@value,postinc2
  9094  005ECA  C015  FFDD         	movff	GameParameters_setX@value+1,postdec2
  9095  005ECE  0012               	return		;funcret
  9096  005ED0                     __end_of_GameParameters_setX:
  9097                           	callstack 0
  9098                           
  9099 ;; *************** function _sleepSM *****************
  9100 ;; Defined at:
  9101 ;;		line 19 in file "stateMachine/sleepSM.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;  ev              1    wreg     unsigned char 
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;  ev              1   21[COMRAM] unsigned char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9115 ;;      Params:         0       0       0       0       0       0       0
  9116 ;;      Locals:         1       0       0       0       0       0       0
  9117 ;;      Temps:          2       0       0       0       0       0       0
  9118 ;;      Totals:         3       0       0       0       0       0       0
  9119 ;;Total ram usage:        3 bytes
  9120 ;; Hardware stack levels used: 1
  9121 ;; Hardware stack levels required when called: 5
  9122 ;; This function calls:
  9123 ;;		_sleepController
  9124 ;; This function is called by:
  9125 ;;		_Factory_exec
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text36
  9130  005254                     __ptext36:
  9131                           	callstack 0
  9132  005254                     _sleepSM:
  9133                           	callstack 24
  9134                           
  9135                           ;incstack = 0
  9136                           ;sleepSM@ev stored from wreg
  9137  005254  6E16               	movwf	sleepSM@ev^0,c
  9138  005256                     
  9139                           ;stateMachine/sleepSM.c: 19: void sleepSM(Event ev);stateMachine/sleepSM.c: 20: {;stateM
      +                          achine/sleepSM.c: 21:    switch(sleepState)
  9140  005256  EF60  F029         	goto	l10076
  9141  00525A                     l10050:
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;stateMachine/sleepSM.c: 24:             if(ev==evTimer30)
  9145  00525A  0E03               	movlw	3
  9146  00525C  1816               	xorwf	sleepSM@ev^0,w,c
  9147  00525E  A4D8               	btfss	status,2,c
  9148  005260  EF34  F029         	goto	u7591
  9149  005264  EF36  F029         	goto	u7590
  9150  005268                     u7591:
  9151  005268  EF7A  F029         	goto	l409
  9152  00526C                     u7590:
  9153  00526C                     
  9154                           ; BSR set to: 0
  9155                           ;stateMachine/sleepSM.c: 25:             {;stateMachine/sleepSM.c: 26:                sl
      +                          eepState=BACKLIGHTOFF;
  9156  00526C  0E01               	movlw	1
  9157  00526E  6FDF               	movwf	_sleepState& (0+255),b
  9158  005270                     l10054:
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;stateMachine/sleepSM.c: 27:                sleepController();
  9162  005270  ECB2  F02E         	call	_sleepController	;wreg free
  9163  005274  EF7A  F029         	goto	l409
  9164  005278                     l10056:
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;stateMachine/sleepSM.c: 31:             if(ev==evTimer30)
  9168  005278  0E03               	movlw	3
  9169  00527A  1816               	xorwf	sleepSM@ev^0,w,c
  9170  00527C  A4D8               	btfss	status,2,c
  9171  00527E  EF43  F029         	goto	u7601
  9172  005282  EF45  F029         	goto	u7600
  9173  005286                     u7601:
  9174  005286  EF49  F029         	goto	l10062
  9175  00528A                     u7600:
  9176  00528A                     
  9177                           ; BSR set to: 0
  9178                           ;stateMachine/sleepSM.c: 32:             {;stateMachine/sleepSM.c: 33:                sl
      +                          eepState=SLEEP;
  9179  00528A  0E02               	movlw	2
  9180  00528C  6FDF               	movwf	_sleepState& (0+255),b
  9181  00528E                     
  9182                           ; BSR set to: 0
  9183                           ;stateMachine/sleepSM.c: 34:                sleepController();
  9184  00528E  ECB2  F02E         	call	_sleepController	;wreg free
  9185  005292                     l10062:
  9186                           
  9187                           ;stateMachine/sleepSM.c: 36:             if(ev==evPress)
  9188  005292  0416               	decf	sleepSM@ev^0,w,c
  9189  005294  A4D8               	btfss	status,2,c
  9190  005296  EF4F  F029         	goto	u7611
  9191  00529A  EF51  F029         	goto	u7610
  9192  00529E                     u7611:
  9193  00529E  EF7A  F029         	goto	l409
  9194  0052A2                     u7610:
  9195  0052A2                     l10064:
  9196                           
  9197                           ;stateMachine/sleepSM.c: 37:             {;stateMachine/sleepSM.c: 38:                sl
      +                          eepState=WAKEUP;
  9198  0052A2  0E00               	movlw	0
  9199  0052A4  0100               	movlb	0	; () banked
  9200  0052A6  6FDF               	movwf	_sleepState& (0+255),b
  9201  0052A8  EF38  F029         	goto	l10054
  9202  0052AC                     l10068:
  9203                           
  9204                           ; BSR set to: 0
  9205                           ;stateMachine/sleepSM.c: 43:             if(ev==evPress)
  9206  0052AC  0416               	decf	sleepSM@ev^0,w,c
  9207  0052AE  A4D8               	btfss	status,2,c
  9208  0052B0  EF5C  F029         	goto	u7621
  9209  0052B4  EF5E  F029         	goto	u7620
  9210  0052B8                     u7621:
  9211  0052B8  EF7A  F029         	goto	l409
  9212  0052BC                     u7620:
  9213  0052BC  EF51  F029         	goto	l10064
  9214  0052C0                     l10076:
  9215  0052C0  0100               	movlb	0	; () banked
  9216  0052C2  51DF               	movf	_sleepState& (0+255),w,b
  9217  0052C4  6E14               	movwf	??_sleepSM^0,c
  9218  0052C6  6A15               	clrf	(??_sleepSM+1)^0,c
  9219                           
  9220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9221                           ; Switch size 1, requested type "simple"
  9222                           ; Number of cases is 1, Range of values is 0 to 0
  9223                           ; switch strategies available:
  9224                           ; Name         Instructions Cycles
  9225                           ; simple_byte            4     3 (average)
  9226                           ;	Chosen strategy is simple_byte
  9227  0052C8  5015               	movf	(??_sleepSM+1)^0,w,c
  9228  0052CA  0A00               	xorlw	0	; case 0
  9229  0052CC  B4D8               	btfsc	status,2,c
  9230  0052CE  EF6B  F029         	goto	l10478
  9231  0052D2  EF7A  F029         	goto	l409
  9232  0052D6                     l10478:
  9233                           
  9234                           ; BSR set to: 0
  9235                           ; Switch size 1, requested type "simple"
  9236                           ; Number of cases is 3, Range of values is 0 to 2
  9237                           ; switch strategies available:
  9238                           ; Name         Instructions Cycles
  9239                           ; simple_byte           10     6 (average)
  9240                           ;	Chosen strategy is simple_byte
  9241  0052D6  5014               	movf	??_sleepSM^0,w,c
  9242  0052D8  0A00               	xorlw	0	; case 0
  9243  0052DA  B4D8               	btfsc	status,2,c
  9244  0052DC  EF2D  F029         	goto	l10050
  9245  0052E0  0A01               	xorlw	1	; case 1
  9246  0052E2  B4D8               	btfsc	status,2,c
  9247  0052E4  EF3C  F029         	goto	l10056
  9248  0052E8  0A03               	xorlw	3	; case 2
  9249  0052EA  B4D8               	btfsc	status,2,c
  9250  0052EC  EF56  F029         	goto	l10068
  9251  0052F0  EF7A  F029         	goto	l409
  9252  0052F4                     l409:
  9253  0052F4  0012               	return		;funcret
  9254  0052F6                     __end_of_sleepSM:
  9255                           	callstack 0
  9256                           
  9257 ;; *************** function _sleepController *****************
  9258 ;; Defined at:
  9259 ;;		line 53 in file "stateMachine/sleepSM.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9273 ;;      Params:         0       0       0       0       0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0
  9275 ;;      Temps:          2       0       0       0       0       0       0
  9276 ;;      Totals:         2       0       0       0       0       0       0
  9277 ;;Total ram usage:        2 bytes
  9278 ;; Hardware stack levels used: 1
  9279 ;; Hardware stack levels required when called: 4
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_sleepInit
  9284 ;;		_sleepSM
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text37
  9289  005D64                     __ptext37:
  9290                           	callstack 0
  9291  005D64                     _sleepController:
  9292                           	callstack 24
  9293  005D64  0100               	movlb	0	; () banked
  9294  005D66  51DF               	movf	_sleepState& (0+255),w,b
  9295  005D68  6E12               	movwf	??_sleepController^0,c
  9296  005D6A  6A13               	clrf	(??_sleepController+1)^0,c
  9297                           
  9298                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9299                           ; Switch size 1, requested type "simple"
  9300                           ; Number of cases is 1, Range of values is 0 to 0
  9301                           ; switch strategies available:
  9302                           ; Name         Instructions Cycles
  9303                           ; simple_byte            4     3 (average)
  9304                           ;	Chosen strategy is simple_byte
  9305  005D6C  5013               	movf	(??_sleepController+1)^0,w,c
  9306  005D6E  0A00               	xorlw	0	; case 0
  9307  005D70  B4D8               	btfsc	status,2,c
  9308  005D72  EFBD  F02E         	goto	l10480
  9309  005D76  EFCC  F02E         	goto	l418
  9310  005D7A                     l10480:
  9311                           
  9312                           ; BSR set to: 0
  9313                           ; Switch size 1, requested type "simple"
  9314                           ; Number of cases is 3, Range of values is 0 to 2
  9315                           ; switch strategies available:
  9316                           ; Name         Instructions Cycles
  9317                           ; simple_byte           10     6 (average)
  9318                           ;	Chosen strategy is simple_byte
  9319  005D7A  5012               	movf	??_sleepController^0,w,c
  9320  005D7C  0A00               	xorlw	0	; case 0
  9321  005D7E  B4D8               	btfsc	status,2,c
  9322  005D80  EFCC  F02E         	goto	l418
  9323  005D84  0A01               	xorlw	1	; case 1
  9324  005D86  B4D8               	btfsc	status,2,c
  9325  005D88  EFCC  F02E         	goto	l418
  9326  005D8C  0A03               	xorlw	3	; case 2
  9327  005D8E  B4D8               	btfsc	status,2,c
  9328  005D90  EFCC  F02E         	goto	l418
  9329  005D94  EFCC  F02E         	goto	l418
  9330  005D98                     l418:
  9331                           
  9332                           ; BSR set to: 0
  9333  005D98  0012               	return		;funcret
  9334  005D9A                     __end_of_sleepController:
  9335                           	callstack 0
  9336                           
  9337 ;; *************** function _gameControllerSM *****************
  9338 ;; Defined at:
  9339 ;;		line 20 in file "stateMachine/gameController.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;  ev              1    wreg     unsigned char 
  9342 ;;  g               2   58[COMRAM] PTR struct GameParameter
  9343 ;;		 -> g1(201), 
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;  ev              1   64[COMRAM] unsigned char 
  9346 ;;  s              20    0        unsigned char [20]
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9356 ;;      Params:         2       0       0       0       0       0       0
  9357 ;;      Locals:         1       0       0       0       0       0       0
  9358 ;;      Temps:          4       0       0       0       0       0       0
  9359 ;;      Totals:         7       0       0       0       0       0       0
  9360 ;;Total ram usage:        7 bytes
  9361 ;; Hardware stack levels used: 1
  9362 ;; Hardware stack levels required when called: 8
  9363 ;; This function calls:
  9364 ;;		_LCD_DrawRect
  9365 ;;		_Paddle_draw
  9366 ;;		_gameControllerController
  9367 ;;		_mooveBall
  9368 ;;		_moovePaddle
  9369 ;; This function is called by:
  9370 ;;		_Factory_exec
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text38
  9375  003B02                     __ptext38:
  9376                           	callstack 0
  9377  003B02                     _gameControllerSM:
  9378                           	callstack 21
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;incstack = 0
  9382                           ;gameControllerSM@ev stored from wreg
  9383  003B02  6E41               	movwf	gameControllerSM@ev^0,c
  9384  003B04                     
  9385                           ;stateMachine/gameController.c: 20: void gameControllerSM(Event ev,GameParameters* g);st
      +                          ateMachine/gameController.c: 21: {;stateMachine/gameController.c: 22:    char s[20];;sta
      +                          teMachine/gameController.c: 23:    switch(gameControllerState)
  9386  003B04  EF29  F01E         	goto	l10184
  9387  003B08                     l10148:
  9388                           
  9389                           ;stateMachine/gameController.c: 26:             gameControllerController(g);
  9390  003B08  C03B  F037         	movff	gameControllerSM@g,gameControllerController@g
  9391  003B0C  C03C  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  9392  003B10  ECB5  F01A         	call	_gameControllerController	;wreg free
  9393  003B14                     
  9394                           ;stateMachine/gameController.c: 27:             if(ev==evParameters)
  9395  003B14  0E07               	movlw	7
  9396  003B16  1841               	xorwf	gameControllerSM@ev^0,w,c
  9397  003B18  A4D8               	btfss	status,2,c
  9398  003B1A  EF91  F01D         	goto	u7711
  9399  003B1E  EF93  F01D         	goto	u7710
  9400  003B22                     u7711:
  9401  003B22  EF95  F01D         	goto	l10154
  9402  003B26                     u7710:
  9403  003B26                     
  9404                           ;stateMachine/gameController.c: 28:             {;stateMachine/gameController.c: 29:    
      +                                       gameControllerState=PARAMETERS;
  9405  003B26  0E01               	movlw	1
  9406  003B28  6E4D               	movwf	_gameControllerState^0,c
  9407  003B2A                     l10154:
  9408                           
  9409                           ;stateMachine/gameController.c: 31:             if(ev==evOnePlayer)
  9410  003B2A  0E05               	movlw	5
  9411  003B2C  1841               	xorwf	gameControllerSM@ev^0,w,c
  9412  003B2E  A4D8               	btfss	status,2,c
  9413  003B30  EF9C  F01D         	goto	u7721
  9414  003B34  EF9E  F01D         	goto	u7720
  9415  003B38                     u7721:
  9416  003B38  EF46  F01E         	goto	l604
  9417  003B3C                     u7720:
  9418  003B3C                     
  9419                           ;stateMachine/gameController.c: 32:             {;stateMachine/gameController.c: 33:    
      +                                       gameControllerState=LOCAL;
  9420  003B3C  0E02               	movlw	2
  9421  003B3E  6E4D               	movwf	_gameControllerState^0,c
  9422  003B40  EF46  F01E         	goto	l604
  9423  003B44                     l10162:
  9424                           
  9425                           ;stateMachine/gameController.c: 41:             gameControllerController(g);
  9426  003B44  C03B  F037         	movff	gameControllerSM@g,gameControllerController@g
  9427  003B48  C03C  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  9428  003B4C  ECB5  F01A         	call	_gameControllerController	;wreg free
  9429  003B50                     
  9430                           ;stateMachine/gameController.c: 42:             if(ev==evLeaveParam)
  9431  003B50  0E08               	movlw	8
  9432  003B52  1841               	xorwf	gameControllerSM@ev^0,w,c
  9433  003B54  A4D8               	btfss	status,2,c
  9434  003B56  EFAF  F01D         	goto	u7731
  9435  003B5A  EFB1  F01D         	goto	u7730
  9436  003B5E                     u7731:
  9437  003B5E  EF46  F01E         	goto	l604
  9438  003B62                     u7730:
  9439  003B62                     
  9440                           ;stateMachine/gameController.c: 43:             {;stateMachine/gameController.c: 44:    
      +                                       gameControllerState=NOGAME;
  9441  003B62  0E00               	movlw	0
  9442  003B64  6E4D               	movwf	_gameControllerState^0,c
  9443  003B66  EF46  F01E         	goto	l604
  9444  003B6A                     l10168:
  9445                           
  9446                           ;stateMachine/gameController.c: 48:             if (ev==evPress)
  9447  003B6A  0441               	decf	gameControllerSM@ev^0,w,c
  9448  003B6C  A4D8               	btfss	status,2,c
  9449  003B6E  EFBB  F01D         	goto	u7741
  9450  003B72  EFBD  F01D         	goto	u7740
  9451  003B76                     u7741:
  9452  003B76  EFC5  F01D         	goto	l10172
  9453  003B7A                     u7740:
  9454  003B7A                     
  9455                           ;stateMachine/gameController.c: 49:             {;stateMachine/gameController.c: 50:    
      +                                       moovePaddle(g);
  9456  003B7A  C03B  F02F         	movff	gameControllerSM@g,moovePaddle@g
  9457  003B7E  C03C  F030         	movff	gameControllerSM@g+1,moovePaddle@g+1
  9458  003B82  ECA4  F023         	call	_moovePaddle	;wreg free
  9459                           
  9460                           ;stateMachine/gameController.c: 52:             }
  9461  003B86  EF46  F01E         	goto	l604
  9462  003B8A                     l10172:
  9463  003B8A  0E0A               	movlw	10
  9464  003B8C  1841               	xorwf	gameControllerSM@ev^0,w,c
  9465  003B8E  A4D8               	btfss	status,2,c
  9466  003B90  EFCC  F01D         	goto	u7751
  9467  003B94  EFCE  F01D         	goto	u7750
  9468  003B98                     u7751:
  9469  003B98  EF46  F01E         	goto	l604
  9470  003B9C                     u7750:
  9471  003B9C                     
  9472                           ;stateMachine/gameController.c: 54:             {;stateMachine/gameController.c: 55:    
      +                                       mooveBall(g);
  9473  003B9C  C03B  F039         	movff	gameControllerSM@g,mooveBall@g
  9474  003BA0  C03C  F03A         	movff	gameControllerSM@g+1,mooveBall@g+1
  9475  003BA4  EC35  F02F         	call	_mooveBall	;wreg free
  9476  003BA8                     
  9477                           ;stateMachine/gameController.c: 56:                 LCD_DrawRect(g->p2.x,g->p2.y,g->p2.x
      +                          +50,g->p2.y+20,1,0b1111111111111111);
  9478  003BA8  EE20 F0BF          	lfsr	2,191
  9479  003BAC  503B               	movf	gameControllerSM@g^0,w,c
  9480  003BAE  26D9               	addwf	fsr2l,f,c
  9481  003BB0  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9482  003BB2  22DA               	addwfc	fsr2h,f,c
  9483  003BB4  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
  9484  003BB8  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
  9485  003BBC  EE20 F0C1          	lfsr	2,193
  9486  003BC0  503B               	movf	gameControllerSM@g^0,w,c
  9487  003BC2  26D9               	addwf	fsr2l,f,c
  9488  003BC4  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9489  003BC6  22DA               	addwfc	fsr2h,f,c
  9490  003BC8  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
  9491  003BCC  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
  9492  003BD0  EE20 F0BF          	lfsr	2,191
  9493  003BD4  503B               	movf	gameControllerSM@g^0,w,c
  9494  003BD6  26D9               	addwf	fsr2l,f,c
  9495  003BD8  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9496  003BDA  22DA               	addwfc	fsr2h,f,c
  9497  003BDC  CFDE F03D          	movff	postinc2,??_gameControllerSM
  9498  003BE0  CFDD F03E          	movff	postdec2,??_gameControllerSM+1
  9499  003BE4  0E32               	movlw	50
  9500  003BE6  243D               	addwf	??_gameControllerSM^0,w,c
  9501  003BE8  6E16               	movwf	LCD_DrawRect@posX2^0,c
  9502  003BEA  0E00               	movlw	0
  9503  003BEC  203E               	addwfc	(??_gameControllerSM+1)^0,w,c
  9504  003BEE  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
  9505  003BF0  EE20 F0C1          	lfsr	2,193
  9506  003BF4  503B               	movf	gameControllerSM@g^0,w,c
  9507  003BF6  26D9               	addwf	fsr2l,f,c
  9508  003BF8  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9509  003BFA  22DA               	addwfc	fsr2h,f,c
  9510  003BFC  CFDE F03F          	movff	postinc2,??_gameControllerSM+2
  9511  003C00  CFDD F040          	movff	postdec2,??_gameControllerSM+3
  9512  003C04  0E14               	movlw	20
  9513  003C06  243F               	addwf	(??_gameControllerSM+2)^0,w,c
  9514  003C08  6E18               	movwf	LCD_DrawRect@posY2^0,c
  9515  003C0A  0E00               	movlw	0
  9516  003C0C  2040               	addwfc	(??_gameControllerSM+3)^0,w,c
  9517  003C0E  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
  9518  003C10  0E01               	movlw	1
  9519  003C12  6E1A               	movwf	LCD_DrawRect@fill^0,c
  9520  003C14  0EFF               	movlw	255
  9521  003C16  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
  9522  003C18  681B               	setf	LCD_DrawRect@color^0,c
  9523  003C1A  EC02  F014         	call	_LCD_DrawRect	;wreg free
  9524  003C1E                     
  9525                           ;stateMachine/gameController.c: 57:                 g->p2.x=g->b.x;
  9526  003C1E  EE20 F0B1          	lfsr	2,177
  9527  003C22  503B               	movf	gameControllerSM@g^0,w,c
  9528  003C24  26D9               	addwf	fsr2l,f,c
  9529  003C26  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9530  003C28  22DA               	addwfc	fsr2h,f,c
  9531  003C2A  EE10 F0BF          	lfsr	1,191
  9532  003C2E  503B               	movf	gameControllerSM@g^0,w,c
  9533  003C30  26E1               	addwf	fsr1l,f,c
  9534  003C32  503C               	movf	(gameControllerSM@g+1)^0,w,c
  9535  003C34  22E2               	addwfc	fsr1h,f,c
  9536  003C36  CFDE FFE6          	movff	postinc2,postinc1
  9537  003C3A  CFDD FFE5          	movff	postdec2,postdec1
  9538  003C3E                     
  9539                           ;stateMachine/gameController.c: 58:                 Paddle_draw(&g->p2);
  9540  003C3E  0EBF               	movlw	191
  9541  003C40  243B               	addwf	gameControllerSM@g^0,w,c
  9542  003C42  6E25               	movwf	Paddle_draw@p^0,c
  9543  003C44  0E00               	movlw	0
  9544  003C46  203C               	addwfc	(gameControllerSM@g+1)^0,w,c
  9545  003C48  6E26               	movwf	(Paddle_draw@p+1)^0,c
  9546  003C4A  ECDE  F02A         	call	_Paddle_draw	;wreg free
  9547  003C4E  EF46  F01E         	goto	l604
  9548  003C52                     l10184:
  9549  003C52  504D               	movf	_gameControllerState^0,w,c
  9550  003C54  6E3D               	movwf	??_gameControllerSM^0,c
  9551  003C56  6A3E               	clrf	(??_gameControllerSM+1)^0,c
  9552                           
  9553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9554                           ; Switch size 1, requested type "simple"
  9555                           ; Number of cases is 1, Range of values is 0 to 0
  9556                           ; switch strategies available:
  9557                           ; Name         Instructions Cycles
  9558                           ; simple_byte            4     3 (average)
  9559                           ;	Chosen strategy is simple_byte
  9560  003C58  503E               	movf	(??_gameControllerSM+1)^0,w,c
  9561  003C5A  0A00               	xorlw	0	; case 0
  9562  003C5C  B4D8               	btfsc	status,2,c
  9563  003C5E  EF33  F01E         	goto	l10482
  9564  003C62  EF46  F01E         	goto	l604
  9565  003C66                     l10482:
  9566                           
  9567                           ; Switch size 1, requested type "simple"
  9568                           ; Number of cases is 4, Range of values is 0 to 3
  9569                           ; switch strategies available:
  9570                           ; Name         Instructions Cycles
  9571                           ; simple_byte           13     7 (average)
  9572                           ;	Chosen strategy is simple_byte
  9573  003C66  503D               	movf	??_gameControllerSM^0,w,c
  9574  003C68  0A00               	xorlw	0	; case 0
  9575  003C6A  B4D8               	btfsc	status,2,c
  9576  003C6C  EF84  F01D         	goto	l10148
  9577  003C70  0A01               	xorlw	1	; case 1
  9578  003C72  B4D8               	btfsc	status,2,c
  9579  003C74  EFA2  F01D         	goto	l10162
  9580  003C78  0A03               	xorlw	3	; case 2
  9581  003C7A  B4D8               	btfsc	status,2,c
  9582  003C7C  EFB5  F01D         	goto	l10168
  9583  003C80  0A01               	xorlw	1	; case 3
  9584  003C82  B4D8               	btfsc	status,2,c
  9585  003C84  EF46  F01E         	goto	l604
  9586  003C88  EF46  F01E         	goto	l604
  9587  003C8C                     l604:
  9588  003C8C  0012               	return		;funcret
  9589  003C8E                     __end_of_gameControllerSM:
  9590                           	callstack 0
  9591                           
  9592 ;; *************** function _moovePaddle *****************
  9593 ;; Defined at:
  9594 ;;		line 110 in file "stateMachine/gameController.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;  g               2   46[COMRAM] PTR struct GameParameter
  9597 ;;		 -> g1(201), 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;		None
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9609 ;;      Params:         2       0       0       0       0       0       0
  9610 ;;      Locals:         0       0       0       0       0       0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0
  9612 ;;      Totals:         2       0       0       0       0       0       0
  9613 ;;Total ram usage:        2 bytes
  9614 ;; Hardware stack levels used: 1
  9615 ;; Hardware stack levels required when called: 6
  9616 ;; This function calls:
  9617 ;;		_GameParameters_resetPos
  9618 ;;		_LCD_InButton
  9619 ;;		_Paddle_addX
  9620 ;;		_Paddle_draw
  9621 ;; This function is called by:
  9622 ;;		_gameControllerSM
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text39
  9627  004748                     __ptext39:
  9628                           	callstack 0
  9629  004748                     _moovePaddle:
  9630                           	callstack 22
  9631  004748                     
  9632                           ;stateMachine/gameController.c: 110: void moovePaddle(GameParameters* g);stateMachine/ga
      +                          meController.c: 111: {;stateMachine/gameController.c: 112:     if(LCD_InButton(&(g->btnL
      +                          eft),g->x,g->y))
  9633  004748  0E68               	movlw	104
  9634  00474A  242F               	addwf	moovePaddle@g^0,w,c
  9635  00474C  6E12               	movwf	LCD_InButton@button^0,c
  9636  00474E  0E00               	movlw	0
  9637  004750  2030               	addwfc	(moovePaddle@g+1)^0,w,c
  9638  004752  6E13               	movwf	(LCD_InButton@button+1)^0,c
  9639  004754  EE20 F004          	lfsr	2,4
  9640  004758  502F               	movf	moovePaddle@g^0,w,c
  9641  00475A  26D9               	addwf	fsr2l,f,c
  9642  00475C  5030               	movf	(moovePaddle@g+1)^0,w,c
  9643  00475E  22DA               	addwfc	fsr2h,f,c
  9644  004760  CFDE F014          	movff	postinc2,LCD_InButton@posX
  9645  004764  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  9646  004768  EE20 F006          	lfsr	2,6
  9647  00476C  502F               	movf	moovePaddle@g^0,w,c
  9648  00476E  26D9               	addwf	fsr2l,f,c
  9649  004770  5030               	movf	(moovePaddle@g+1)^0,w,c
  9650  004772  22DA               	addwfc	fsr2h,f,c
  9651  004774  CFDE F016          	movff	postinc2,LCD_InButton@posY
  9652  004778  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  9653  00477C  EC07  F025         	call	_LCD_InButton	;wreg free
  9654  004780  0900               	iorlw	0
  9655  004782  B4D8               	btfsc	status,2,c
  9656  004784  EFC6  F023         	goto	u7541
  9657  004788  EFC8  F023         	goto	u7540
  9658  00478C                     u7541:
  9659  00478C  EFDE  F023         	goto	l622
  9660  004790                     u7540:
  9661  004790                     
  9662                           ;stateMachine/gameController.c: 113:     {;stateMachine/gameController.c: 114:         G
      +                          ameParameters_resetPos(g);
  9663  004790  C02F  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  9664  004794  C030  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  9665  004798  ECE6  F02E         	call	_GameParameters_resetPos	;wreg free
  9666                           
  9667                           ;stateMachine/gameController.c: 115:         Paddle_addX(&g->p1,8,0);
  9668  00479C  0EB9               	movlw	185
  9669  00479E  242F               	addwf	moovePaddle@g^0,w,c
  9670  0047A0  6E25               	movwf	Paddle_addX@p^0,c
  9671  0047A2  0E00               	movlw	0
  9672  0047A4  2030               	addwfc	(moovePaddle@g+1)^0,w,c
  9673  0047A6  6E26               	movwf	(Paddle_addX@p+1)^0,c
  9674  0047A8  0E00               	movlw	0
  9675  0047AA  6E28               	movwf	(Paddle_addX@value+1)^0,c
  9676  0047AC  0E08               	movlw	8
  9677  0047AE  6E27               	movwf	Paddle_addX@value^0,c
  9678  0047B0  0E00               	movlw	0
  9679  0047B2  6E2A               	movwf	(Paddle_addX@add+1)^0,c
  9680  0047B4  0E00               	movlw	0
  9681  0047B6  6E29               	movwf	Paddle_addX@add^0,c
  9682  0047B8  ECBD  F01F         	call	_Paddle_addX	;wreg free
  9683  0047BC                     l622:
  9684                           
  9685                           ;stateMachine/gameController.c: 117:     if(LCD_InButton(&(g->btnRight),g->x,g->y))
  9686  0047BC  0E80               	movlw	128
  9687  0047BE  242F               	addwf	moovePaddle@g^0,w,c
  9688  0047C0  6E12               	movwf	LCD_InButton@button^0,c
  9689  0047C2  0E00               	movlw	0
  9690  0047C4  2030               	addwfc	(moovePaddle@g+1)^0,w,c
  9691  0047C6  6E13               	movwf	(LCD_InButton@button+1)^0,c
  9692  0047C8  EE20 F004          	lfsr	2,4
  9693  0047CC  502F               	movf	moovePaddle@g^0,w,c
  9694  0047CE  26D9               	addwf	fsr2l,f,c
  9695  0047D0  5030               	movf	(moovePaddle@g+1)^0,w,c
  9696  0047D2  22DA               	addwfc	fsr2h,f,c
  9697  0047D4  CFDE F014          	movff	postinc2,LCD_InButton@posX
  9698  0047D8  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  9699  0047DC  EE20 F006          	lfsr	2,6
  9700  0047E0  502F               	movf	moovePaddle@g^0,w,c
  9701  0047E2  26D9               	addwf	fsr2l,f,c
  9702  0047E4  5030               	movf	(moovePaddle@g+1)^0,w,c
  9703  0047E6  22DA               	addwfc	fsr2h,f,c
  9704  0047E8  CFDE F016          	movff	postinc2,LCD_InButton@posY
  9705  0047EC  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  9706  0047F0  EC07  F025         	call	_LCD_InButton	;wreg free
  9707  0047F4  0900               	iorlw	0
  9708  0047F6  B4D8               	btfsc	status,2,c
  9709  0047F8  EF00  F024         	goto	u7551
  9710  0047FC  EF02  F024         	goto	u7550
  9711  004800                     u7551:
  9712  004800  EF18  F024         	goto	l623
  9713  004804                     u7550:
  9714  004804                     
  9715                           ;stateMachine/gameController.c: 118:     {;stateMachine/gameController.c: 119:         G
      +                          ameParameters_resetPos(g);
  9716  004804  C02F  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  9717  004808  C030  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  9718  00480C  ECE6  F02E         	call	_GameParameters_resetPos	;wreg free
  9719                           
  9720                           ;stateMachine/gameController.c: 120:         Paddle_addX(&g->p1,8,1);
  9721  004810  0EB9               	movlw	185
  9722  004812  242F               	addwf	moovePaddle@g^0,w,c
  9723  004814  6E25               	movwf	Paddle_addX@p^0,c
  9724  004816  0E00               	movlw	0
  9725  004818  2030               	addwfc	(moovePaddle@g+1)^0,w,c
  9726  00481A  6E26               	movwf	(Paddle_addX@p+1)^0,c
  9727  00481C  0E00               	movlw	0
  9728  00481E  6E28               	movwf	(Paddle_addX@value+1)^0,c
  9729  004820  0E08               	movlw	8
  9730  004822  6E27               	movwf	Paddle_addX@value^0,c
  9731  004824  0E00               	movlw	0
  9732  004826  6E2A               	movwf	(Paddle_addX@add+1)^0,c
  9733  004828  0E01               	movlw	1
  9734  00482A  6E29               	movwf	Paddle_addX@add^0,c
  9735  00482C  ECBD  F01F         	call	_Paddle_addX	;wreg free
  9736  004830                     l623:
  9737                           
  9738                           ;stateMachine/gameController.c: 122:     Paddle_draw(&g->p1);
  9739  004830  0EB9               	movlw	185
  9740  004832  242F               	addwf	moovePaddle@g^0,w,c
  9741  004834  6E25               	movwf	Paddle_draw@p^0,c
  9742  004836  0E00               	movlw	0
  9743  004838  2030               	addwfc	(moovePaddle@g+1)^0,w,c
  9744  00483A  6E26               	movwf	(Paddle_draw@p+1)^0,c
  9745  00483C  ECDE  F02A         	call	_Paddle_draw	;wreg free
  9746  004840  0012               	return		;funcret
  9747  004842                     __end_of_moovePaddle:
  9748                           	callstack 0
  9749                           
  9750 ;; *************** function _Paddle_addX *****************
  9751 ;; Defined at:
  9752 ;;		line 19 in file "class/paddle.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;  p               2   36[COMRAM] PTR struct Paddle
  9755 ;;		 -> g1(201), 
  9756 ;;  value           2   38[COMRAM] unsigned short 
  9757 ;;  add             2   40[COMRAM] unsigned short 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;		None
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  1    wreg      void 
  9762 ;; Registers used:
  9763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9769 ;;      Params:         6       0       0       0       0       0       0
  9770 ;;      Locals:         0       0       0       0       0       0       0
  9771 ;;      Temps:          4       0       0       0       0       0       0
  9772 ;;      Totals:        10       0       0       0       0       0       0
  9773 ;;Total ram usage:       10 bytes
  9774 ;; Hardware stack levels used: 1
  9775 ;; Hardware stack levels required when called: 5
  9776 ;; This function calls:
  9777 ;;		_LCD_DrawRect
  9778 ;; This function is called by:
  9779 ;;		_moovePaddle
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           	psect	text40
  9784  003F7A                     __ptext40:
  9785                           	callstack 0
  9786  003F7A                     _Paddle_addX:
  9787                           	callstack 22
  9788  003F7A                     
  9789                           ;class/paddle.c: 19: void Paddle_addX(struct Paddle* p,uint16_t value,uint16_t add);clas
      +                          s/paddle.c: 20: {;class/paddle.c: 21:     LCD_DrawRect(p->x,p->y,p->x+50,p->y+20,1,0b111
      +                          1111111111111);
  9790  003F7A  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9791  003F7E  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9792  003F82  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
  9793  003F86  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
  9794  003F8A  EE20 F002          	lfsr	2,2
  9795  003F8E  5025               	movf	Paddle_addX@p^0,w,c
  9796  003F90  26D9               	addwf	fsr2l,f,c
  9797  003F92  5026               	movf	(Paddle_addX@p+1)^0,w,c
  9798  003F94  22DA               	addwfc	fsr2h,f,c
  9799  003F96  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
  9800  003F9A  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
  9801  003F9E  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9802  003FA2  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9803  003FA6  CFDE F02B          	movff	postinc2,??_Paddle_addX
  9804  003FAA  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
  9805  003FAE  0E32               	movlw	50
  9806  003FB0  242B               	addwf	??_Paddle_addX^0,w,c
  9807  003FB2  6E16               	movwf	LCD_DrawRect@posX2^0,c
  9808  003FB4  0E00               	movlw	0
  9809  003FB6  202C               	addwfc	(??_Paddle_addX+1)^0,w,c
  9810  003FB8  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
  9811  003FBA  EE20 F002          	lfsr	2,2
  9812  003FBE  5025               	movf	Paddle_addX@p^0,w,c
  9813  003FC0  26D9               	addwf	fsr2l,f,c
  9814  003FC2  5026               	movf	(Paddle_addX@p+1)^0,w,c
  9815  003FC4  22DA               	addwfc	fsr2h,f,c
  9816  003FC6  CFDE F02D          	movff	postinc2,??_Paddle_addX+2
  9817  003FCA  CFDD F02E          	movff	postdec2,??_Paddle_addX+3
  9818  003FCE  0E14               	movlw	20
  9819  003FD0  242D               	addwf	(??_Paddle_addX+2)^0,w,c
  9820  003FD2  6E18               	movwf	LCD_DrawRect@posY2^0,c
  9821  003FD4  0E00               	movlw	0
  9822  003FD6  202E               	addwfc	(??_Paddle_addX+3)^0,w,c
  9823  003FD8  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
  9824  003FDA  0E01               	movlw	1
  9825  003FDC  6E1A               	movwf	LCD_DrawRect@fill^0,c
  9826  003FDE  0EFF               	movlw	255
  9827  003FE0  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
  9828  003FE2  681B               	setf	LCD_DrawRect@color^0,c
  9829  003FE4  EC02  F014         	call	_LCD_DrawRect	;wreg free
  9830  003FE8                     
  9831                           ;class/paddle.c: 22:     if(add==1)
  9832  003FE8  0429               	decf	Paddle_addX@add^0,w,c
  9833  003FEA  102A               	iorwf	(Paddle_addX@add+1)^0,w,c
  9834  003FEC  A4D8               	btfss	status,2,c
  9835  003FEE  EFFB  F01F         	goto	u6811
  9836  003FF2  EFFD  F01F         	goto	u6810
  9837  003FF6                     u6811:
  9838  003FF6  EF32  F020         	goto	l9514
  9839  003FFA                     u6810:
  9840  003FFA                     
  9841                           ;class/paddle.c: 23:     {;class/paddle.c: 24:         p->x=(p->x)+value;
  9842  003FFA  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9843  003FFE  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9844  004002  CFDE F02B          	movff	postinc2,??_Paddle_addX
  9845  004006  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
  9846  00400A  5027               	movf	Paddle_addX@value^0,w,c
  9847  00400C  262B               	addwf	??_Paddle_addX^0,f,c
  9848  00400E  5028               	movf	(Paddle_addX@value+1)^0,w,c
  9849  004010  222C               	addwfc	(??_Paddle_addX+1)^0,f,c
  9850  004012  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9851  004016  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9852  00401A  C02B  FFDE         	movff	??_Paddle_addX,postinc2
  9853  00401E  C02C  FFDD         	movff	??_Paddle_addX+1,postdec2
  9854                           
  9855                           ;class/paddle.c: 25:         if((p->x+50)>239)
  9856  004022  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9857  004026  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9858  00402A  CFDE F02B          	movff	postinc2,??_Paddle_addX
  9859  00402E  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
  9860  004032  0E32               	movlw	50
  9861  004034  262B               	addwf	??_Paddle_addX^0,f,c
  9862  004036  0E00               	movlw	0
  9863  004038  222C               	addwfc	(??_Paddle_addX+1)^0,f,c
  9864  00403A  502C               	movf	(??_Paddle_addX+1)^0,w,c
  9865  00403C  E109               	bnz	u6820
  9866  00403E  0EF0               	movlw	240
  9867  004040  5C2B               	subwf	??_Paddle_addX^0,w,c
  9868  004042  A0D8               	btfss	status,0,c
  9869  004044  EF26  F020         	goto	u6821
  9870  004048  EF28  F020         	goto	u6820
  9871  00404C                     u6821:
  9872  00404C  EF60  F020         	goto	l28
  9873  004050                     u6820:
  9874  004050                     
  9875                           ;class/paddle.c: 26:         {;class/paddle.c: 27:             p->x=239-(50);
  9876  004050  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9877  004054  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9878  004058  0EBD               	movlw	189
  9879  00405A  6EDE               	movwf	postinc2,c
  9880  00405C  0E00               	movlw	0
  9881  00405E  6EDD               	movwf	postdec2,c
  9882  004060  EF60  F020         	goto	l28
  9883  004064                     l9514:
  9884                           
  9885                           ;class/paddle.c: 31:     {;class/paddle.c: 32:         if((p->x)<9)
  9886  004064  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9887  004068  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9888  00406C  0E01               	movlw	1
  9889  00406E  50DB               	movf	plusw2,w,c
  9890  004070  E107               	bnz	u6831
  9891  004072  0E09               	movlw	9
  9892  004074  5CDE               	subwf	postinc2,w,c
  9893  004076  B0D8               	btfsc	status,0,c
  9894  004078  EF40  F020         	goto	u6831
  9895  00407C  EF42  F020         	goto	u6830
  9896  004080                     u6831:
  9897  004080  EF4C  F020         	goto	l9518
  9898  004084                     u6830:
  9899  004084                     
  9900                           ;class/paddle.c: 33:         {;class/paddle.c: 34:             p->x=0;
  9901  004084  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9902  004088  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9903  00408C  0E00               	movlw	0
  9904  00408E  6EDE               	movwf	postinc2,c
  9905  004090  0E00               	movlw	0
  9906  004092  6EDD               	movwf	postdec2,c
  9907                           
  9908                           ;class/paddle.c: 35:         }
  9909  004094  EF60  F020         	goto	l28
  9910  004098                     l9518:
  9911                           
  9912                           ;class/paddle.c: 37:         {;class/paddle.c: 38:             p->x=(p->x)-value;
  9913  004098  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9914  00409C  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9915  0040A0  CFDE F02B          	movff	postinc2,??_Paddle_addX
  9916  0040A4  CFDD F02C          	movff	postdec2,??_Paddle_addX+1
  9917  0040A8  5027               	movf	Paddle_addX@value^0,w,c
  9918  0040AA  5E2B               	subwf	??_Paddle_addX^0,f,c
  9919  0040AC  5028               	movf	(Paddle_addX@value+1)^0,w,c
  9920  0040AE  5A2C               	subwfb	(??_Paddle_addX+1)^0,f,c
  9921  0040B0  C025  FFD9         	movff	Paddle_addX@p,fsr2l
  9922  0040B4  C026  FFDA         	movff	Paddle_addX@p+1,fsr2h
  9923  0040B8  C02B  FFDE         	movff	??_Paddle_addX,postinc2
  9924  0040BC  C02C  FFDD         	movff	??_Paddle_addX+1,postdec2
  9925  0040C0                     l28:
  9926  0040C0  0012               	return		;funcret
  9927  0040C2                     __end_of_Paddle_addX:
  9928                           	callstack 0
  9929                           
  9930 ;; *************** function _mooveBall *****************
  9931 ;; Defined at:
  9932 ;;		line 124 in file "stateMachine/gameController.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;  g               2   56[COMRAM] PTR struct GameParameter
  9935 ;;		 -> g1(201), 
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;		None
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      void 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9947 ;;      Params:         2       0       0       0       0       0       0
  9948 ;;      Locals:         0       0       0       0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0       0       0
  9950 ;;      Totals:         2       0       0       0       0       0       0
  9951 ;;Total ram usage:        2 bytes
  9952 ;; Hardware stack levels used: 1
  9953 ;; Hardware stack levels required when called: 7
  9954 ;; This function calls:
  9955 ;;		_Ball_Update
  9956 ;;		_checkCollision
  9957 ;; This function is called by:
  9958 ;;		_gameControllerSM
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           	psect	text41
  9963  005E6A                     __ptext41:
  9964                           	callstack 0
  9965  005E6A                     _mooveBall:
  9966                           	callstack 21
  9967  005E6A                     
  9968                           ;stateMachine/gameController.c: 124: void mooveBall(GameParameters* g);stateMachine/game
      +                          Controller.c: 125: {;stateMachine/gameController.c: 126:     checkCollision(g);
  9969  005E6A  C039  F012         	movff	mooveBall@g,checkCollision@g
  9970  005E6E  C03A  F013         	movff	mooveBall@g+1,checkCollision@g+1
  9971  005E72  EC64  F000         	call	_checkCollision	;wreg free
  9972  005E76                     
  9973                           ;stateMachine/gameController.c: 127:     Ball_Update(&g->b);
  9974  005E76  0EB1               	movlw	177
  9975  005E78  2439               	addwf	mooveBall@g^0,w,c
  9976  005E7A  6E2F               	movwf	Ball_Update@b^0,c
  9977  005E7C  0E00               	movlw	0
  9978  005E7E  203A               	addwfc	(mooveBall@g+1)^0,w,c
  9979  005E80  6E30               	movwf	(Ball_Update@b+1)^0,c
  9980  005E82  EC93  F021         	call	_Ball_Update	;wreg free
  9981  005E86  0012               	return		;funcret
  9982  005E88                     __end_of_mooveBall:
  9983                           	callstack 0
  9984                           
  9985 ;; *************** function _checkCollision *****************
  9986 ;; Defined at:
  9987 ;;		line 129 in file "stateMachine/gameController.c"
  9988 ;; Parameters:    Size  Location     Type
  9989 ;;  g               2   17[COMRAM] PTR struct GameParameter
  9990 ;;		 -> g1(201), 
  9991 ;; Auto vars:     Size  Location     Type
  9992 ;;		None
  9993 ;; Return value:  Size  Location     Type
  9994 ;;                  1    wreg      void 
  9995 ;; Registers used:
  9996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9997 ;; Tracked objects:
  9998 ;;		On entry : 0/0
  9999 ;;		On exit  : 0/0
 10000 ;;		Unchanged: 0/0
 10001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10002 ;;      Params:         2       0       0       0       0       0       0
 10003 ;;      Locals:         0       0       0       0       0       0       0
 10004 ;;      Temps:          6       0       0       0       0       0       0
 10005 ;;      Totals:         8       0       0       0       0       0       0
 10006 ;;Total ram usage:        8 bytes
 10007 ;; Hardware stack levels used: 1
 10008 ;; Hardware stack levels required when called: 4
 10009 ;; This function calls:
 10010 ;;		Nothing
 10011 ;; This function is called by:
 10012 ;;		_mooveBall
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           	psect	text42
 10017  0000C8                     __ptext42:
 10018                           	callstack 0
 10019  0000C8                     _checkCollision:
 10020                           	callstack 23
 10021  0000C8                     
 10022                           ;stateMachine/gameController.c: 129: void checkCollision(GameParameters* g);stateMachine
      +                          /gameController.c: 130: {;stateMachine/gameController.c: 132:     if(g->b.y+8>=g->p1.y-1
      +                          )
 10023  0000C8  0EFF               	movlw	255
 10024  0000CA  6E14               	movwf	??_checkCollision^0,c
 10025  0000CC  0EFF               	movlw	255
 10026  0000CE  6E15               	movwf	(??_checkCollision+1)^0,c
 10027  0000D0  EE20 F0BB          	lfsr	2,187
 10028  0000D4  5012               	movf	checkCollision@g^0,w,c
 10029  0000D6  26D9               	addwf	fsr2l,f,c
 10030  0000D8  5013               	movf	(checkCollision@g+1)^0,w,c
 10031  0000DA  22DA               	addwfc	fsr2h,f,c
 10032  0000DC  CFDE F016          	movff	postinc2,??_checkCollision+2
 10033  0000E0  CFDD F017          	movff	postdec2,??_checkCollision+3
 10034  0000E4  5014               	movf	??_checkCollision^0,w,c
 10035  0000E6  2616               	addwf	(??_checkCollision+2)^0,f,c
 10036  0000E8  5015               	movf	(??_checkCollision+1)^0,w,c
 10037  0000EA  2217               	addwfc	(??_checkCollision+3)^0,f,c
 10038  0000EC  EE20 F0B3          	lfsr	2,179
 10039  0000F0  5012               	movf	checkCollision@g^0,w,c
 10040  0000F2  26D9               	addwf	fsr2l,f,c
 10041  0000F4  5013               	movf	(checkCollision@g+1)^0,w,c
 10042  0000F6  22DA               	addwfc	fsr2h,f,c
 10043  0000F8  CFDE F018          	movff	postinc2,??_checkCollision+4
 10044  0000FC  CFDD F019          	movff	postdec2,??_checkCollision+5
 10045  000100  0E08               	movlw	8
 10046  000102  2618               	addwf	(??_checkCollision+4)^0,f,c
 10047  000104  0E00               	movlw	0
 10048  000106  2219               	addwfc	(??_checkCollision+5)^0,f,c
 10049  000108  5016               	movf	(??_checkCollision+2)^0,w,c
 10050  00010A  5C18               	subwf	(??_checkCollision+4)^0,w,c
 10051  00010C  5017               	movf	(??_checkCollision+3)^0,w,c
 10052  00010E  5819               	subwfb	(??_checkCollision+5)^0,w,c
 10053  000110  A0D8               	btfss	status,0,c
 10054  000112  EF8D  F000         	goto	u6931
 10055  000116  EF8F  F000         	goto	u6930
 10056  00011A                     u6931:
 10057  00011A  EF16  F002         	goto	l630
 10058  00011E                     u6930:
 10059  00011E                     
 10060                           ;stateMachine/gameController.c: 133:     {;stateMachine/gameController.c: 134:         i
      +                          f(g->b.x+8>g->p1.x)
 10061  00011E  EE20 F0B1          	lfsr	2,177
 10062  000122  5012               	movf	checkCollision@g^0,w,c
 10063  000124  26D9               	addwf	fsr2l,f,c
 10064  000126  5013               	movf	(checkCollision@g+1)^0,w,c
 10065  000128  22DA               	addwfc	fsr2h,f,c
 10066  00012A  CFDE F014          	movff	postinc2,??_checkCollision
 10067  00012E  CFDD F015          	movff	postdec2,??_checkCollision+1
 10068  000132  0E08               	movlw	8
 10069  000134  2614               	addwf	??_checkCollision^0,f,c
 10070  000136  0E00               	movlw	0
 10071  000138  2215               	addwfc	(??_checkCollision+1)^0,f,c
 10072  00013A  EE20 F0B9          	lfsr	2,185
 10073  00013E  5012               	movf	checkCollision@g^0,w,c
 10074  000140  26D9               	addwf	fsr2l,f,c
 10075  000142  5013               	movf	(checkCollision@g+1)^0,w,c
 10076  000144  22DA               	addwfc	fsr2h,f,c
 10077  000146  5014               	movf	??_checkCollision^0,w,c
 10078  000148  5CDE               	subwf	postinc2,w,c
 10079  00014A  5015               	movf	(??_checkCollision+1)^0,w,c
 10080  00014C  58DE               	subwfb	postinc2,w,c
 10081  00014E  B0D8               	btfsc	status,0,c
 10082  000150  EFAC  F000         	goto	u6941
 10083  000154  EFAE  F000         	goto	u6940
 10084  000158                     u6941:
 10085  000158  EF16  F002         	goto	l630
 10086  00015C                     u6940:
 10087  00015C                     
 10088                           ;stateMachine/gameController.c: 135:         {;stateMachine/gameController.c: 136:      
      +                                 if(g->b.x-8<g->p1.x+50)
 10089  00015C  EE20 F0B9          	lfsr	2,185
 10090  000160  5012               	movf	checkCollision@g^0,w,c
 10091  000162  26D9               	addwf	fsr2l,f,c
 10092  000164  5013               	movf	(checkCollision@g+1)^0,w,c
 10093  000166  22DA               	addwfc	fsr2h,f,c
 10094  000168  CFDE F014          	movff	postinc2,??_checkCollision
 10095  00016C  CFDD F015          	movff	postdec2,??_checkCollision+1
 10096  000170  0E32               	movlw	50
 10097  000172  2614               	addwf	??_checkCollision^0,f,c
 10098  000174  0E00               	movlw	0
 10099  000176  2215               	addwfc	(??_checkCollision+1)^0,f,c
 10100  000178  0EF8               	movlw	248
 10101  00017A  6E16               	movwf	(??_checkCollision+2)^0,c
 10102  00017C  0EFF               	movlw	255
 10103  00017E  6E17               	movwf	(??_checkCollision+3)^0,c
 10104  000180  EE20 F0B1          	lfsr	2,177
 10105  000184  5012               	movf	checkCollision@g^0,w,c
 10106  000186  26D9               	addwf	fsr2l,f,c
 10107  000188  5013               	movf	(checkCollision@g+1)^0,w,c
 10108  00018A  22DA               	addwfc	fsr2h,f,c
 10109  00018C  CFDE F018          	movff	postinc2,??_checkCollision+4
 10110  000190  CFDD F019          	movff	postdec2,??_checkCollision+5
 10111  000194  5016               	movf	(??_checkCollision+2)^0,w,c
 10112  000196  2618               	addwf	(??_checkCollision+4)^0,f,c
 10113  000198  5017               	movf	(??_checkCollision+3)^0,w,c
 10114  00019A  2219               	addwfc	(??_checkCollision+5)^0,f,c
 10115  00019C  5014               	movf	??_checkCollision^0,w,c
 10116  00019E  5C18               	subwf	(??_checkCollision+4)^0,w,c
 10117  0001A0  5015               	movf	(??_checkCollision+1)^0,w,c
 10118  0001A2  5819               	subwfb	(??_checkCollision+5)^0,w,c
 10119  0001A4  B0D8               	btfsc	status,0,c
 10120  0001A6  EFD7  F000         	goto	u6951
 10121  0001AA  EFD9  F000         	goto	u6950
 10122  0001AE                     u6951:
 10123  0001AE  EF16  F002         	goto	l630
 10124  0001B2                     u6950:
 10125  0001B2                     
 10126                           ;stateMachine/gameController.c: 137:             {;stateMachine/gameController.c: 138:  
      +                                         if(g->b.x-g->p1.x<10)
 10127  0001B2  EE20 F0B9          	lfsr	2,185
 10128  0001B6  5012               	movf	checkCollision@g^0,w,c
 10129  0001B8  26D9               	addwf	fsr2l,f,c
 10130  0001BA  5013               	movf	(checkCollision@g+1)^0,w,c
 10131  0001BC  22DA               	addwfc	fsr2h,f,c
 10132  0001BE  CFDE F014          	movff	postinc2,??_checkCollision
 10133  0001C2  CFDD F015          	movff	postdec2,??_checkCollision+1
 10134  0001C6  EE20 F0B1          	lfsr	2,177
 10135  0001CA  5012               	movf	checkCollision@g^0,w,c
 10136  0001CC  26D9               	addwf	fsr2l,f,c
 10137  0001CE  5013               	movf	(checkCollision@g+1)^0,w,c
 10138  0001D0  22DA               	addwfc	fsr2h,f,c
 10139  0001D2  CFDE F016          	movff	postinc2,??_checkCollision+2
 10140  0001D6  CFDD F017          	movff	postdec2,??_checkCollision+3
 10141  0001DA  5014               	movf	??_checkCollision^0,w,c
 10142  0001DC  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10143  0001DE  5015               	movf	(??_checkCollision+1)^0,w,c
 10144  0001E0  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10145  0001E2  5017               	movf	(??_checkCollision+3)^0,w,c
 10146  0001E4  E107               	bnz	u6961
 10147  0001E6  0E0A               	movlw	10
 10148  0001E8  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10149  0001EA  B0D8               	btfsc	status,0,c
 10150  0001EC  EFFA  F000         	goto	u6961
 10151  0001F0  EFFC  F000         	goto	u6960
 10152  0001F4                     u6961:
 10153  0001F4  EF20  F001         	goto	l9634
 10154  0001F8                     u6960:
 10155  0001F8                     
 10156                           ;stateMachine/gameController.c: 139:                 {;stateMachine/gameController.c: 14
      +                          1:                     g->b.dy=-g->b.dy;
 10157  0001F8  EE20 F0B7          	lfsr	2,183
 10158  0001FC  5012               	movf	checkCollision@g^0,w,c
 10159  0001FE  26D9               	addwf	fsr2l,f,c
 10160  000200  5013               	movf	(checkCollision@g+1)^0,w,c
 10161  000202  22DA               	addwfc	fsr2h,f,c
 10162  000204  CFDE F014          	movff	postinc2,??_checkCollision
 10163  000208  CFDD F015          	movff	postdec2,??_checkCollision+1
 10164  00020C  1E14               	comf	??_checkCollision^0,f,c
 10165  00020E  1E15               	comf	(??_checkCollision+1)^0,f,c
 10166  000210  4A14               	infsnz	??_checkCollision^0,f,c
 10167  000212  2A15               	incf	(??_checkCollision+1)^0,f,c
 10168  000214  EE20 F0B7          	lfsr	2,183
 10169  000218  5012               	movf	checkCollision@g^0,w,c
 10170  00021A  26D9               	addwf	fsr2l,f,c
 10171  00021C  5013               	movf	(checkCollision@g+1)^0,w,c
 10172  00021E  22DA               	addwfc	fsr2h,f,c
 10173  000220  C014  FFDE         	movff	??_checkCollision,postinc2
 10174  000224  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10175                           
 10176                           ;stateMachine/gameController.c: 142:                     g->b.dx=-2;
 10177  000228  EE20 F0B5          	lfsr	2,181
 10178  00022C  5012               	movf	checkCollision@g^0,w,c
 10179  00022E  26D9               	addwf	fsr2l,f,c
 10180  000230  5013               	movf	(checkCollision@g+1)^0,w,c
 10181  000232  22DA               	addwfc	fsr2h,f,c
 10182  000234  0EFE               	movlw	254
 10183  000236  6EDE               	movwf	postinc2,c
 10184  000238  0EFF               	movlw	255
 10185  00023A  6EDD               	movwf	postdec2,c
 10186                           
 10187                           ;stateMachine/gameController.c: 143:                 }
 10188  00023C  EF0D  F002         	goto	l634
 10189  000240                     l9634:
 10190  000240  EE20 F0B9          	lfsr	2,185
 10191  000244  5012               	movf	checkCollision@g^0,w,c
 10192  000246  26D9               	addwf	fsr2l,f,c
 10193  000248  5013               	movf	(checkCollision@g+1)^0,w,c
 10194  00024A  22DA               	addwfc	fsr2h,f,c
 10195  00024C  CFDE F014          	movff	postinc2,??_checkCollision
 10196  000250  CFDD F015          	movff	postdec2,??_checkCollision+1
 10197  000254  EE20 F0B1          	lfsr	2,177
 10198  000258  5012               	movf	checkCollision@g^0,w,c
 10199  00025A  26D9               	addwf	fsr2l,f,c
 10200  00025C  5013               	movf	(checkCollision@g+1)^0,w,c
 10201  00025E  22DA               	addwfc	fsr2h,f,c
 10202  000260  CFDE F016          	movff	postinc2,??_checkCollision+2
 10203  000264  CFDD F017          	movff	postdec2,??_checkCollision+3
 10204  000268  5014               	movf	??_checkCollision^0,w,c
 10205  00026A  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10206  00026C  5015               	movf	(??_checkCollision+1)^0,w,c
 10207  00026E  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10208  000270  5017               	movf	(??_checkCollision+3)^0,w,c
 10209  000272  E107               	bnz	u6971
 10210  000274  0E14               	movlw	20
 10211  000276  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10212  000278  B0D8               	btfsc	status,0,c
 10213  00027A  EF41  F001         	goto	u6971
 10214  00027E  EF43  F001         	goto	u6970
 10215  000282                     u6971:
 10216  000282  EF67  F001         	goto	l9638
 10217  000286                     u6970:
 10218  000286                     
 10219                           ;stateMachine/gameController.c: 145:                 {;stateMachine/gameController.c: 14
      +                          7:                     g->b.dy=-g->b.dy;
 10220  000286  EE20 F0B7          	lfsr	2,183
 10221  00028A  5012               	movf	checkCollision@g^0,w,c
 10222  00028C  26D9               	addwf	fsr2l,f,c
 10223  00028E  5013               	movf	(checkCollision@g+1)^0,w,c
 10224  000290  22DA               	addwfc	fsr2h,f,c
 10225  000292  CFDE F014          	movff	postinc2,??_checkCollision
 10226  000296  CFDD F015          	movff	postdec2,??_checkCollision+1
 10227  00029A  1E14               	comf	??_checkCollision^0,f,c
 10228  00029C  1E15               	comf	(??_checkCollision+1)^0,f,c
 10229  00029E  4A14               	infsnz	??_checkCollision^0,f,c
 10230  0002A0  2A15               	incf	(??_checkCollision+1)^0,f,c
 10231  0002A2  EE20 F0B7          	lfsr	2,183
 10232  0002A6  5012               	movf	checkCollision@g^0,w,c
 10233  0002A8  26D9               	addwf	fsr2l,f,c
 10234  0002AA  5013               	movf	(checkCollision@g+1)^0,w,c
 10235  0002AC  22DA               	addwfc	fsr2h,f,c
 10236  0002AE  C014  FFDE         	movff	??_checkCollision,postinc2
 10237  0002B2  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10238                           
 10239                           ;stateMachine/gameController.c: 148:                     g->b.dx=-1;
 10240  0002B6  EE20 F0B5          	lfsr	2,181
 10241  0002BA  5012               	movf	checkCollision@g^0,w,c
 10242  0002BC  26D9               	addwf	fsr2l,f,c
 10243  0002BE  5013               	movf	(checkCollision@g+1)^0,w,c
 10244  0002C0  22DA               	addwfc	fsr2h,f,c
 10245  0002C2  0EFF               	movlw	255
 10246  0002C4  6EDE               	movwf	postinc2,c
 10247  0002C6  0EFF               	movlw	255
 10248  0002C8  6EDD               	movwf	postdec2,c
 10249                           
 10250                           ;stateMachine/gameController.c: 149:                 }
 10251  0002CA  EF0D  F002         	goto	l634
 10252  0002CE                     l9638:
 10253  0002CE  EE20 F0B9          	lfsr	2,185
 10254  0002D2  5012               	movf	checkCollision@g^0,w,c
 10255  0002D4  26D9               	addwf	fsr2l,f,c
 10256  0002D6  5013               	movf	(checkCollision@g+1)^0,w,c
 10257  0002D8  22DA               	addwfc	fsr2h,f,c
 10258  0002DA  CFDE F014          	movff	postinc2,??_checkCollision
 10259  0002DE  CFDD F015          	movff	postdec2,??_checkCollision+1
 10260  0002E2  EE20 F0B1          	lfsr	2,177
 10261  0002E6  5012               	movf	checkCollision@g^0,w,c
 10262  0002E8  26D9               	addwf	fsr2l,f,c
 10263  0002EA  5013               	movf	(checkCollision@g+1)^0,w,c
 10264  0002EC  22DA               	addwfc	fsr2h,f,c
 10265  0002EE  CFDE F016          	movff	postinc2,??_checkCollision+2
 10266  0002F2  CFDD F017          	movff	postdec2,??_checkCollision+3
 10267  0002F6  5014               	movf	??_checkCollision^0,w,c
 10268  0002F8  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10269  0002FA  5015               	movf	(??_checkCollision+1)^0,w,c
 10270  0002FC  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10271  0002FE  5017               	movf	(??_checkCollision+3)^0,w,c
 10272  000300  E107               	bnz	u6981
 10273  000302  0E1E               	movlw	30
 10274  000304  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10275  000306  B0D8               	btfsc	status,0,c
 10276  000308  EF88  F001         	goto	u6981
 10277  00030C  EF8A  F001         	goto	u6980
 10278  000310                     u6981:
 10279  000310  EFA4  F001         	goto	l9642
 10280  000314                     u6980:
 10281  000314                     
 10282                           ;stateMachine/gameController.c: 153:                     g->b.dy=-g->b.dy;
 10283  000314  EE20 F0B7          	lfsr	2,183
 10284  000318  5012               	movf	checkCollision@g^0,w,c
 10285  00031A  26D9               	addwf	fsr2l,f,c
 10286  00031C  5013               	movf	(checkCollision@g+1)^0,w,c
 10287  00031E  22DA               	addwfc	fsr2h,f,c
 10288  000320  CFDE F014          	movff	postinc2,??_checkCollision
 10289  000324  CFDD F015          	movff	postdec2,??_checkCollision+1
 10290  000328  1E14               	comf	??_checkCollision^0,f,c
 10291  00032A  1E15               	comf	(??_checkCollision+1)^0,f,c
 10292  00032C  4A14               	infsnz	??_checkCollision^0,f,c
 10293  00032E  2A15               	incf	(??_checkCollision+1)^0,f,c
 10294  000330  EE20 F0B7          	lfsr	2,183
 10295  000334  5012               	movf	checkCollision@g^0,w,c
 10296  000336  26D9               	addwf	fsr2l,f,c
 10297  000338  5013               	movf	(checkCollision@g+1)^0,w,c
 10298  00033A  22DA               	addwfc	fsr2h,f,c
 10299  00033C  C014  FFDE         	movff	??_checkCollision,postinc2
 10300  000340  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10301                           
 10302                           ;stateMachine/gameController.c: 154:                 }
 10303  000344  EF0D  F002         	goto	l634
 10304  000348                     l9642:
 10305  000348  EE20 F0B9          	lfsr	2,185
 10306  00034C  5012               	movf	checkCollision@g^0,w,c
 10307  00034E  26D9               	addwf	fsr2l,f,c
 10308  000350  5013               	movf	(checkCollision@g+1)^0,w,c
 10309  000352  22DA               	addwfc	fsr2h,f,c
 10310  000354  CFDE F014          	movff	postinc2,??_checkCollision
 10311  000358  CFDD F015          	movff	postdec2,??_checkCollision+1
 10312  00035C  EE20 F0B1          	lfsr	2,177
 10313  000360  5012               	movf	checkCollision@g^0,w,c
 10314  000362  26D9               	addwf	fsr2l,f,c
 10315  000364  5013               	movf	(checkCollision@g+1)^0,w,c
 10316  000366  22DA               	addwfc	fsr2h,f,c
 10317  000368  CFDE F016          	movff	postinc2,??_checkCollision+2
 10318  00036C  CFDD F017          	movff	postdec2,??_checkCollision+3
 10319  000370  5014               	movf	??_checkCollision^0,w,c
 10320  000372  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10321  000374  5015               	movf	(??_checkCollision+1)^0,w,c
 10322  000376  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10323  000378  5017               	movf	(??_checkCollision+3)^0,w,c
 10324  00037A  E107               	bnz	u6991
 10325  00037C  0E28               	movlw	40
 10326  00037E  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10327  000380  B0D8               	btfsc	status,0,c
 10328  000382  EFC5  F001         	goto	u6991
 10329  000386  EFC7  F001         	goto	u6990
 10330  00038A                     u6991:
 10331  00038A  EFEB  F001         	goto	l9646
 10332  00038E                     u6990:
 10333  00038E                     
 10334                           ;stateMachine/gameController.c: 156:                 {;stateMachine/gameController.c: 15
      +                          8:                     g->b.dy=-g->b.dy;
 10335  00038E  EE20 F0B7          	lfsr	2,183
 10336  000392  5012               	movf	checkCollision@g^0,w,c
 10337  000394  26D9               	addwf	fsr2l,f,c
 10338  000396  5013               	movf	(checkCollision@g+1)^0,w,c
 10339  000398  22DA               	addwfc	fsr2h,f,c
 10340  00039A  CFDE F014          	movff	postinc2,??_checkCollision
 10341  00039E  CFDD F015          	movff	postdec2,??_checkCollision+1
 10342  0003A2  1E14               	comf	??_checkCollision^0,f,c
 10343  0003A4  1E15               	comf	(??_checkCollision+1)^0,f,c
 10344  0003A6  4A14               	infsnz	??_checkCollision^0,f,c
 10345  0003A8  2A15               	incf	(??_checkCollision+1)^0,f,c
 10346  0003AA  EE20 F0B7          	lfsr	2,183
 10347  0003AE  5012               	movf	checkCollision@g^0,w,c
 10348  0003B0  26D9               	addwf	fsr2l,f,c
 10349  0003B2  5013               	movf	(checkCollision@g+1)^0,w,c
 10350  0003B4  22DA               	addwfc	fsr2h,f,c
 10351  0003B6  C014  FFDE         	movff	??_checkCollision,postinc2
 10352  0003BA  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10353                           
 10354                           ;stateMachine/gameController.c: 159:                     g->b.dx=1;
 10355  0003BE  EE20 F0B5          	lfsr	2,181
 10356  0003C2  5012               	movf	checkCollision@g^0,w,c
 10357  0003C4  26D9               	addwf	fsr2l,f,c
 10358  0003C6  5013               	movf	(checkCollision@g+1)^0,w,c
 10359  0003C8  22DA               	addwfc	fsr2h,f,c
 10360  0003CA  0E01               	movlw	1
 10361  0003CC  6EDE               	movwf	postinc2,c
 10362  0003CE  0E00               	movlw	0
 10363  0003D0  6EDD               	movwf	postdec2,c
 10364                           
 10365                           ;stateMachine/gameController.c: 160:                 }
 10366  0003D2  EF0D  F002         	goto	l634
 10367  0003D6                     l9646:
 10368                           
 10369                           ;stateMachine/gameController.c: 162:                 {;stateMachine/gameController.c: 16
      +                          4:                     g->b.dy=-g->b.dy;
 10370  0003D6  EE20 F0B7          	lfsr	2,183
 10371  0003DA  5012               	movf	checkCollision@g^0,w,c
 10372  0003DC  26D9               	addwf	fsr2l,f,c
 10373  0003DE  5013               	movf	(checkCollision@g+1)^0,w,c
 10374  0003E0  22DA               	addwfc	fsr2h,f,c
 10375  0003E2  CFDE F014          	movff	postinc2,??_checkCollision
 10376  0003E6  CFDD F015          	movff	postdec2,??_checkCollision+1
 10377  0003EA  1E14               	comf	??_checkCollision^0,f,c
 10378  0003EC  1E15               	comf	(??_checkCollision+1)^0,f,c
 10379  0003EE  4A14               	infsnz	??_checkCollision^0,f,c
 10380  0003F0  2A15               	incf	(??_checkCollision+1)^0,f,c
 10381  0003F2  EE20 F0B7          	lfsr	2,183
 10382  0003F6  5012               	movf	checkCollision@g^0,w,c
 10383  0003F8  26D9               	addwf	fsr2l,f,c
 10384  0003FA  5013               	movf	(checkCollision@g+1)^0,w,c
 10385  0003FC  22DA               	addwfc	fsr2h,f,c
 10386  0003FE  C014  FFDE         	movff	??_checkCollision,postinc2
 10387  000402  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10388                           
 10389                           ;stateMachine/gameController.c: 165:                     g->b.dx=2;
 10390  000406  EE20 F0B5          	lfsr	2,181
 10391  00040A  5012               	movf	checkCollision@g^0,w,c
 10392  00040C  26D9               	addwf	fsr2l,f,c
 10393  00040E  5013               	movf	(checkCollision@g+1)^0,w,c
 10394  000410  22DA               	addwfc	fsr2h,f,c
 10395  000412  0E02               	movlw	2
 10396  000414  6EDE               	movwf	postinc2,c
 10397  000416  0E00               	movlw	0
 10398  000418  6EDD               	movwf	postdec2,c
 10399  00041A                     l634:
 10400                           
 10401                           ;stateMachine/gameController.c: 169:                 g->s1.homeScore++;
 10402  00041A  EE20 F0C5          	lfsr	2,197
 10403  00041E  5012               	movf	checkCollision@g^0,w,c
 10404  000420  26D9               	addwf	fsr2l,f,c
 10405  000422  5013               	movf	(checkCollision@g+1)^0,w,c
 10406  000424  22DA               	addwfc	fsr2h,f,c
 10407  000426  2ADE               	incf	postinc2,f,c
 10408  000428  0E00               	movlw	0
 10409  00042A  22DD               	addwfc	postdec2,f,c
 10410  00042C                     l630:
 10411                           
 10412                           ;stateMachine/gameController.c: 174:     if(g->b.y-8<=g->p2.y+20 +1)
 10413  00042C  0EF8               	movlw	248
 10414  00042E  6E14               	movwf	??_checkCollision^0,c
 10415  000430  0EFF               	movlw	255
 10416  000432  6E15               	movwf	(??_checkCollision+1)^0,c
 10417  000434  EE20 F0B3          	lfsr	2,179
 10418  000438  5012               	movf	checkCollision@g^0,w,c
 10419  00043A  26D9               	addwf	fsr2l,f,c
 10420  00043C  5013               	movf	(checkCollision@g+1)^0,w,c
 10421  00043E  22DA               	addwfc	fsr2h,f,c
 10422  000440  CFDE F016          	movff	postinc2,??_checkCollision+2
 10423  000444  CFDD F017          	movff	postdec2,??_checkCollision+3
 10424  000448  5014               	movf	??_checkCollision^0,w,c
 10425  00044A  2616               	addwf	(??_checkCollision+2)^0,f,c
 10426  00044C  5015               	movf	(??_checkCollision+1)^0,w,c
 10427  00044E  2217               	addwfc	(??_checkCollision+3)^0,f,c
 10428  000450  EE20 F0C1          	lfsr	2,193
 10429  000454  5012               	movf	checkCollision@g^0,w,c
 10430  000456  26D9               	addwf	fsr2l,f,c
 10431  000458  5013               	movf	(checkCollision@g+1)^0,w,c
 10432  00045A  22DA               	addwfc	fsr2h,f,c
 10433  00045C  CFDE F018          	movff	postinc2,??_checkCollision+4
 10434  000460  CFDD F019          	movff	postdec2,??_checkCollision+5
 10435  000464  0E15               	movlw	21
 10436  000466  2618               	addwf	(??_checkCollision+4)^0,f,c
 10437  000468  0E00               	movlw	0
 10438  00046A  2219               	addwfc	(??_checkCollision+5)^0,f,c
 10439  00046C  5016               	movf	(??_checkCollision+2)^0,w,c
 10440  00046E  5C18               	subwf	(??_checkCollision+4)^0,w,c
 10441  000470  5017               	movf	(??_checkCollision+3)^0,w,c
 10442  000472  5819               	subwfb	(??_checkCollision+5)^0,w,c
 10443  000474  A0D8               	btfss	status,0,c
 10444  000476  EF3F  F002         	goto	u7001
 10445  00047A  EF41  F002         	goto	u7000
 10446  00047E                     u7001:
 10447  00047E  EFC8  F003         	goto	l641
 10448  000482                     u7000:
 10449  000482                     
 10450                           ;stateMachine/gameController.c: 175:     {;stateMachine/gameController.c: 176:         i
      +                          f(g->b.x+8>g->p2.x)
 10451  000482  EE20 F0B1          	lfsr	2,177
 10452  000486  5012               	movf	checkCollision@g^0,w,c
 10453  000488  26D9               	addwf	fsr2l,f,c
 10454  00048A  5013               	movf	(checkCollision@g+1)^0,w,c
 10455  00048C  22DA               	addwfc	fsr2h,f,c
 10456  00048E  CFDE F014          	movff	postinc2,??_checkCollision
 10457  000492  CFDD F015          	movff	postdec2,??_checkCollision+1
 10458  000496  0E08               	movlw	8
 10459  000498  2614               	addwf	??_checkCollision^0,f,c
 10460  00049A  0E00               	movlw	0
 10461  00049C  2215               	addwfc	(??_checkCollision+1)^0,f,c
 10462  00049E  EE20 F0BF          	lfsr	2,191
 10463  0004A2  5012               	movf	checkCollision@g^0,w,c
 10464  0004A4  26D9               	addwf	fsr2l,f,c
 10465  0004A6  5013               	movf	(checkCollision@g+1)^0,w,c
 10466  0004A8  22DA               	addwfc	fsr2h,f,c
 10467  0004AA  5014               	movf	??_checkCollision^0,w,c
 10468  0004AC  5CDE               	subwf	postinc2,w,c
 10469  0004AE  5015               	movf	(??_checkCollision+1)^0,w,c
 10470  0004B0  58DE               	subwfb	postinc2,w,c
 10471  0004B2  B0D8               	btfsc	status,0,c
 10472  0004B4  EF5E  F002         	goto	u7011
 10473  0004B8  EF60  F002         	goto	u7010
 10474  0004BC                     u7011:
 10475  0004BC  EFC8  F003         	goto	l641
 10476  0004C0                     u7010:
 10477  0004C0                     
 10478                           ;stateMachine/gameController.c: 177:         {;stateMachine/gameController.c: 178:      
      +                                 if(g->b.x-8<g->p2.x+50)
 10479  0004C0  EE20 F0BF          	lfsr	2,191
 10480  0004C4  5012               	movf	checkCollision@g^0,w,c
 10481  0004C6  26D9               	addwf	fsr2l,f,c
 10482  0004C8  5013               	movf	(checkCollision@g+1)^0,w,c
 10483  0004CA  22DA               	addwfc	fsr2h,f,c
 10484  0004CC  CFDE F014          	movff	postinc2,??_checkCollision
 10485  0004D0  CFDD F015          	movff	postdec2,??_checkCollision+1
 10486  0004D4  0E32               	movlw	50
 10487  0004D6  2614               	addwf	??_checkCollision^0,f,c
 10488  0004D8  0E00               	movlw	0
 10489  0004DA  2215               	addwfc	(??_checkCollision+1)^0,f,c
 10490  0004DC  0EF8               	movlw	248
 10491  0004DE  6E16               	movwf	(??_checkCollision+2)^0,c
 10492  0004E0  0EFF               	movlw	255
 10493  0004E2  6E17               	movwf	(??_checkCollision+3)^0,c
 10494  0004E4  EE20 F0B1          	lfsr	2,177
 10495  0004E8  5012               	movf	checkCollision@g^0,w,c
 10496  0004EA  26D9               	addwf	fsr2l,f,c
 10497  0004EC  5013               	movf	(checkCollision@g+1)^0,w,c
 10498  0004EE  22DA               	addwfc	fsr2h,f,c
 10499  0004F0  CFDE F018          	movff	postinc2,??_checkCollision+4
 10500  0004F4  CFDD F019          	movff	postdec2,??_checkCollision+5
 10501  0004F8  5016               	movf	(??_checkCollision+2)^0,w,c
 10502  0004FA  2618               	addwf	(??_checkCollision+4)^0,f,c
 10503  0004FC  5017               	movf	(??_checkCollision+3)^0,w,c
 10504  0004FE  2219               	addwfc	(??_checkCollision+5)^0,f,c
 10505  000500  5014               	movf	??_checkCollision^0,w,c
 10506  000502  5C18               	subwf	(??_checkCollision+4)^0,w,c
 10507  000504  5015               	movf	(??_checkCollision+1)^0,w,c
 10508  000506  5819               	subwfb	(??_checkCollision+5)^0,w,c
 10509  000508  B0D8               	btfsc	status,0,c
 10510  00050A  EF89  F002         	goto	u7021
 10511  00050E  EF8B  F002         	goto	u7020
 10512  000512                     u7021:
 10513  000512  EFC8  F003         	goto	l641
 10514  000516                     u7020:
 10515  000516                     
 10516                           ;stateMachine/gameController.c: 179:             {;stateMachine/gameController.c: 180:  
      +                                         if(g->b.x-g->p2.x<10)
 10517  000516  EE20 F0BF          	lfsr	2,191
 10518  00051A  5012               	movf	checkCollision@g^0,w,c
 10519  00051C  26D9               	addwf	fsr2l,f,c
 10520  00051E  5013               	movf	(checkCollision@g+1)^0,w,c
 10521  000520  22DA               	addwfc	fsr2h,f,c
 10522  000522  CFDE F014          	movff	postinc2,??_checkCollision
 10523  000526  CFDD F015          	movff	postdec2,??_checkCollision+1
 10524  00052A  EE20 F0B1          	lfsr	2,177
 10525  00052E  5012               	movf	checkCollision@g^0,w,c
 10526  000530  26D9               	addwf	fsr2l,f,c
 10527  000532  5013               	movf	(checkCollision@g+1)^0,w,c
 10528  000534  22DA               	addwfc	fsr2h,f,c
 10529  000536  CFDE F016          	movff	postinc2,??_checkCollision+2
 10530  00053A  CFDD F017          	movff	postdec2,??_checkCollision+3
 10531  00053E  5014               	movf	??_checkCollision^0,w,c
 10532  000540  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10533  000542  5015               	movf	(??_checkCollision+1)^0,w,c
 10534  000544  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10535  000546  5017               	movf	(??_checkCollision+3)^0,w,c
 10536  000548  E107               	bnz	u7031
 10537  00054A  0E0A               	movlw	10
 10538  00054C  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10539  00054E  B0D8               	btfsc	status,0,c
 10540  000550  EFAC  F002         	goto	u7031
 10541  000554  EFAE  F002         	goto	u7030
 10542  000558                     u7031:
 10543  000558  EFD2  F002         	goto	l9656
 10544  00055C                     u7030:
 10545  00055C                     
 10546                           ;stateMachine/gameController.c: 181:                 {;stateMachine/gameController.c: 18
      +                          3:                     g->b.dy=-g->b.dy;
 10547  00055C  EE20 F0B7          	lfsr	2,183
 10548  000560  5012               	movf	checkCollision@g^0,w,c
 10549  000562  26D9               	addwf	fsr2l,f,c
 10550  000564  5013               	movf	(checkCollision@g+1)^0,w,c
 10551  000566  22DA               	addwfc	fsr2h,f,c
 10552  000568  CFDE F014          	movff	postinc2,??_checkCollision
 10553  00056C  CFDD F015          	movff	postdec2,??_checkCollision+1
 10554  000570  1E14               	comf	??_checkCollision^0,f,c
 10555  000572  1E15               	comf	(??_checkCollision+1)^0,f,c
 10556  000574  4A14               	infsnz	??_checkCollision^0,f,c
 10557  000576  2A15               	incf	(??_checkCollision+1)^0,f,c
 10558  000578  EE20 F0B7          	lfsr	2,183
 10559  00057C  5012               	movf	checkCollision@g^0,w,c
 10560  00057E  26D9               	addwf	fsr2l,f,c
 10561  000580  5013               	movf	(checkCollision@g+1)^0,w,c
 10562  000582  22DA               	addwfc	fsr2h,f,c
 10563  000584  C014  FFDE         	movff	??_checkCollision,postinc2
 10564  000588  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10565                           
 10566                           ;stateMachine/gameController.c: 184:                     g->b.dx=-2;
 10567  00058C  EE20 F0B5          	lfsr	2,181
 10568  000590  5012               	movf	checkCollision@g^0,w,c
 10569  000592  26D9               	addwf	fsr2l,f,c
 10570  000594  5013               	movf	(checkCollision@g+1)^0,w,c
 10571  000596  22DA               	addwfc	fsr2h,f,c
 10572  000598  0EFE               	movlw	254
 10573  00059A  6EDE               	movwf	postinc2,c
 10574  00059C  0EFF               	movlw	255
 10575  00059E  6EDD               	movwf	postdec2,c
 10576                           
 10577                           ;stateMachine/gameController.c: 185:                 }
 10578  0005A0  EFBF  F003         	goto	l645
 10579  0005A4                     l9656:
 10580  0005A4  EE20 F0BF          	lfsr	2,191
 10581  0005A8  5012               	movf	checkCollision@g^0,w,c
 10582  0005AA  26D9               	addwf	fsr2l,f,c
 10583  0005AC  5013               	movf	(checkCollision@g+1)^0,w,c
 10584  0005AE  22DA               	addwfc	fsr2h,f,c
 10585  0005B0  CFDE F014          	movff	postinc2,??_checkCollision
 10586  0005B4  CFDD F015          	movff	postdec2,??_checkCollision+1
 10587  0005B8  EE20 F0B1          	lfsr	2,177
 10588  0005BC  5012               	movf	checkCollision@g^0,w,c
 10589  0005BE  26D9               	addwf	fsr2l,f,c
 10590  0005C0  5013               	movf	(checkCollision@g+1)^0,w,c
 10591  0005C2  22DA               	addwfc	fsr2h,f,c
 10592  0005C4  CFDE F016          	movff	postinc2,??_checkCollision+2
 10593  0005C8  CFDD F017          	movff	postdec2,??_checkCollision+3
 10594  0005CC  5014               	movf	??_checkCollision^0,w,c
 10595  0005CE  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10596  0005D0  5015               	movf	(??_checkCollision+1)^0,w,c
 10597  0005D2  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10598  0005D4  5017               	movf	(??_checkCollision+3)^0,w,c
 10599  0005D6  E107               	bnz	u7041
 10600  0005D8  0E14               	movlw	20
 10601  0005DA  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10602  0005DC  B0D8               	btfsc	status,0,c
 10603  0005DE  EFF3  F002         	goto	u7041
 10604  0005E2  EFF5  F002         	goto	u7040
 10605  0005E6                     u7041:
 10606  0005E6  EF19  F003         	goto	l9660
 10607  0005EA                     u7040:
 10608  0005EA                     
 10609                           ;stateMachine/gameController.c: 187:                 {;stateMachine/gameController.c: 18
      +                          9:                     g->b.dy=-g->b.dy;
 10610  0005EA  EE20 F0B7          	lfsr	2,183
 10611  0005EE  5012               	movf	checkCollision@g^0,w,c
 10612  0005F0  26D9               	addwf	fsr2l,f,c
 10613  0005F2  5013               	movf	(checkCollision@g+1)^0,w,c
 10614  0005F4  22DA               	addwfc	fsr2h,f,c
 10615  0005F6  CFDE F014          	movff	postinc2,??_checkCollision
 10616  0005FA  CFDD F015          	movff	postdec2,??_checkCollision+1
 10617  0005FE  1E14               	comf	??_checkCollision^0,f,c
 10618  000600  1E15               	comf	(??_checkCollision+1)^0,f,c
 10619  000602  4A14               	infsnz	??_checkCollision^0,f,c
 10620  000604  2A15               	incf	(??_checkCollision+1)^0,f,c
 10621  000606  EE20 F0B7          	lfsr	2,183
 10622  00060A  5012               	movf	checkCollision@g^0,w,c
 10623  00060C  26D9               	addwf	fsr2l,f,c
 10624  00060E  5013               	movf	(checkCollision@g+1)^0,w,c
 10625  000610  22DA               	addwfc	fsr2h,f,c
 10626  000612  C014  FFDE         	movff	??_checkCollision,postinc2
 10627  000616  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10628                           
 10629                           ;stateMachine/gameController.c: 190:                     g->b.dx=-1;
 10630  00061A  EE20 F0B5          	lfsr	2,181
 10631  00061E  5012               	movf	checkCollision@g^0,w,c
 10632  000620  26D9               	addwf	fsr2l,f,c
 10633  000622  5013               	movf	(checkCollision@g+1)^0,w,c
 10634  000624  22DA               	addwfc	fsr2h,f,c
 10635  000626  0EFF               	movlw	255
 10636  000628  6EDE               	movwf	postinc2,c
 10637  00062A  0EFF               	movlw	255
 10638  00062C  6EDD               	movwf	postdec2,c
 10639                           
 10640                           ;stateMachine/gameController.c: 191:                 }
 10641  00062E  EFBF  F003         	goto	l645
 10642  000632                     l9660:
 10643  000632  EE20 F0BF          	lfsr	2,191
 10644  000636  5012               	movf	checkCollision@g^0,w,c
 10645  000638  26D9               	addwf	fsr2l,f,c
 10646  00063A  5013               	movf	(checkCollision@g+1)^0,w,c
 10647  00063C  22DA               	addwfc	fsr2h,f,c
 10648  00063E  CFDE F014          	movff	postinc2,??_checkCollision
 10649  000642  CFDD F015          	movff	postdec2,??_checkCollision+1
 10650  000646  EE20 F0B1          	lfsr	2,177
 10651  00064A  5012               	movf	checkCollision@g^0,w,c
 10652  00064C  26D9               	addwf	fsr2l,f,c
 10653  00064E  5013               	movf	(checkCollision@g+1)^0,w,c
 10654  000650  22DA               	addwfc	fsr2h,f,c
 10655  000652  CFDE F016          	movff	postinc2,??_checkCollision+2
 10656  000656  CFDD F017          	movff	postdec2,??_checkCollision+3
 10657  00065A  5014               	movf	??_checkCollision^0,w,c
 10658  00065C  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10659  00065E  5015               	movf	(??_checkCollision+1)^0,w,c
 10660  000660  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10661  000662  5017               	movf	(??_checkCollision+3)^0,w,c
 10662  000664  E107               	bnz	u7051
 10663  000666  0E1E               	movlw	30
 10664  000668  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10665  00066A  B0D8               	btfsc	status,0,c
 10666  00066C  EF3A  F003         	goto	u7051
 10667  000670  EF3C  F003         	goto	u7050
 10668  000674                     u7051:
 10669  000674  EF56  F003         	goto	l9664
 10670  000678                     u7050:
 10671  000678                     
 10672                           ;stateMachine/gameController.c: 195:                     g->b.dy=-g->b.dy;
 10673  000678  EE20 F0B7          	lfsr	2,183
 10674  00067C  5012               	movf	checkCollision@g^0,w,c
 10675  00067E  26D9               	addwf	fsr2l,f,c
 10676  000680  5013               	movf	(checkCollision@g+1)^0,w,c
 10677  000682  22DA               	addwfc	fsr2h,f,c
 10678  000684  CFDE F014          	movff	postinc2,??_checkCollision
 10679  000688  CFDD F015          	movff	postdec2,??_checkCollision+1
 10680  00068C  1E14               	comf	??_checkCollision^0,f,c
 10681  00068E  1E15               	comf	(??_checkCollision+1)^0,f,c
 10682  000690  4A14               	infsnz	??_checkCollision^0,f,c
 10683  000692  2A15               	incf	(??_checkCollision+1)^0,f,c
 10684  000694  EE20 F0B7          	lfsr	2,183
 10685  000698  5012               	movf	checkCollision@g^0,w,c
 10686  00069A  26D9               	addwf	fsr2l,f,c
 10687  00069C  5013               	movf	(checkCollision@g+1)^0,w,c
 10688  00069E  22DA               	addwfc	fsr2h,f,c
 10689  0006A0  C014  FFDE         	movff	??_checkCollision,postinc2
 10690  0006A4  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10691                           
 10692                           ;stateMachine/gameController.c: 196:                 }
 10693  0006A8  EFBF  F003         	goto	l645
 10694  0006AC                     l9664:
 10695  0006AC  EE20 F0BF          	lfsr	2,191
 10696  0006B0  5012               	movf	checkCollision@g^0,w,c
 10697  0006B2  26D9               	addwf	fsr2l,f,c
 10698  0006B4  5013               	movf	(checkCollision@g+1)^0,w,c
 10699  0006B6  22DA               	addwfc	fsr2h,f,c
 10700  0006B8  CFDE F014          	movff	postinc2,??_checkCollision
 10701  0006BC  CFDD F015          	movff	postdec2,??_checkCollision+1
 10702  0006C0  EE20 F0B1          	lfsr	2,177
 10703  0006C4  5012               	movf	checkCollision@g^0,w,c
 10704  0006C6  26D9               	addwf	fsr2l,f,c
 10705  0006C8  5013               	movf	(checkCollision@g+1)^0,w,c
 10706  0006CA  22DA               	addwfc	fsr2h,f,c
 10707  0006CC  CFDE F016          	movff	postinc2,??_checkCollision+2
 10708  0006D0  CFDD F017          	movff	postdec2,??_checkCollision+3
 10709  0006D4  5014               	movf	??_checkCollision^0,w,c
 10710  0006D6  5E16               	subwf	(??_checkCollision+2)^0,f,c
 10711  0006D8  5015               	movf	(??_checkCollision+1)^0,w,c
 10712  0006DA  5A17               	subwfb	(??_checkCollision+3)^0,f,c
 10713  0006DC  5017               	movf	(??_checkCollision+3)^0,w,c
 10714  0006DE  E107               	bnz	u7061
 10715  0006E0  0E28               	movlw	40
 10716  0006E2  5C16               	subwf	(??_checkCollision+2)^0,w,c
 10717  0006E4  B0D8               	btfsc	status,0,c
 10718  0006E6  EF77  F003         	goto	u7061
 10719  0006EA  EF79  F003         	goto	u7060
 10720  0006EE                     u7061:
 10721  0006EE  EF9D  F003         	goto	l9668
 10722  0006F2                     u7060:
 10723  0006F2                     
 10724                           ;stateMachine/gameController.c: 198:                 {;stateMachine/gameController.c: 20
      +                          0:                     g->b.dy=-g->b.dy;
 10725  0006F2  EE20 F0B7          	lfsr	2,183
 10726  0006F6  5012               	movf	checkCollision@g^0,w,c
 10727  0006F8  26D9               	addwf	fsr2l,f,c
 10728  0006FA  5013               	movf	(checkCollision@g+1)^0,w,c
 10729  0006FC  22DA               	addwfc	fsr2h,f,c
 10730  0006FE  CFDE F014          	movff	postinc2,??_checkCollision
 10731  000702  CFDD F015          	movff	postdec2,??_checkCollision+1
 10732  000706  1E14               	comf	??_checkCollision^0,f,c
 10733  000708  1E15               	comf	(??_checkCollision+1)^0,f,c
 10734  00070A  4A14               	infsnz	??_checkCollision^0,f,c
 10735  00070C  2A15               	incf	(??_checkCollision+1)^0,f,c
 10736  00070E  EE20 F0B7          	lfsr	2,183
 10737  000712  5012               	movf	checkCollision@g^0,w,c
 10738  000714  26D9               	addwf	fsr2l,f,c
 10739  000716  5013               	movf	(checkCollision@g+1)^0,w,c
 10740  000718  22DA               	addwfc	fsr2h,f,c
 10741  00071A  C014  FFDE         	movff	??_checkCollision,postinc2
 10742  00071E  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10743                           
 10744                           ;stateMachine/gameController.c: 201:                     g->b.dx=1;
 10745  000722  EE20 F0B5          	lfsr	2,181
 10746  000726  5012               	movf	checkCollision@g^0,w,c
 10747  000728  26D9               	addwf	fsr2l,f,c
 10748  00072A  5013               	movf	(checkCollision@g+1)^0,w,c
 10749  00072C  22DA               	addwfc	fsr2h,f,c
 10750  00072E  0E01               	movlw	1
 10751  000730  6EDE               	movwf	postinc2,c
 10752  000732  0E00               	movlw	0
 10753  000734  6EDD               	movwf	postdec2,c
 10754                           
 10755                           ;stateMachine/gameController.c: 202:                 }
 10756  000736  EFBF  F003         	goto	l645
 10757  00073A                     l9668:
 10758                           
 10759                           ;stateMachine/gameController.c: 204:                 {;stateMachine/gameController.c: 20
      +                          6:                     g->b.dy=-g->b.dy;
 10760  00073A  EE20 F0B7          	lfsr	2,183
 10761  00073E  5012               	movf	checkCollision@g^0,w,c
 10762  000740  26D9               	addwf	fsr2l,f,c
 10763  000742  5013               	movf	(checkCollision@g+1)^0,w,c
 10764  000744  22DA               	addwfc	fsr2h,f,c
 10765  000746  CFDE F014          	movff	postinc2,??_checkCollision
 10766  00074A  CFDD F015          	movff	postdec2,??_checkCollision+1
 10767  00074E  1E14               	comf	??_checkCollision^0,f,c
 10768  000750  1E15               	comf	(??_checkCollision+1)^0,f,c
 10769  000752  4A14               	infsnz	??_checkCollision^0,f,c
 10770  000754  2A15               	incf	(??_checkCollision+1)^0,f,c
 10771  000756  EE20 F0B7          	lfsr	2,183
 10772  00075A  5012               	movf	checkCollision@g^0,w,c
 10773  00075C  26D9               	addwf	fsr2l,f,c
 10774  00075E  5013               	movf	(checkCollision@g+1)^0,w,c
 10775  000760  22DA               	addwfc	fsr2h,f,c
 10776  000762  C014  FFDE         	movff	??_checkCollision,postinc2
 10777  000766  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10778                           
 10779                           ;stateMachine/gameController.c: 207:                     g->b.dx=2;
 10780  00076A  EE20 F0B5          	lfsr	2,181
 10781  00076E  5012               	movf	checkCollision@g^0,w,c
 10782  000770  26D9               	addwf	fsr2l,f,c
 10783  000772  5013               	movf	(checkCollision@g+1)^0,w,c
 10784  000774  22DA               	addwfc	fsr2h,f,c
 10785  000776  0E02               	movlw	2
 10786  000778  6EDE               	movwf	postinc2,c
 10787  00077A  0E00               	movlw	0
 10788  00077C  6EDD               	movwf	postdec2,c
 10789  00077E                     l645:
 10790                           
 10791                           ;stateMachine/gameController.c: 210:                 g->s1.awayScore++;
 10792  00077E  EE20 F0C7          	lfsr	2,199
 10793  000782  5012               	movf	checkCollision@g^0,w,c
 10794  000784  26D9               	addwf	fsr2l,f,c
 10795  000786  5013               	movf	(checkCollision@g+1)^0,w,c
 10796  000788  22DA               	addwfc	fsr2h,f,c
 10797  00078A  2ADE               	incf	postinc2,f,c
 10798  00078C  0E00               	movlw	0
 10799  00078E  22DD               	addwfc	postdec2,f,c
 10800  000790                     l641:
 10801                           
 10802                           ;stateMachine/gameController.c: 215:     if(g->b.x+8>=239)
 10803  000790  EE20 F0B1          	lfsr	2,177
 10804  000794  5012               	movf	checkCollision@g^0,w,c
 10805  000796  26D9               	addwf	fsr2l,f,c
 10806  000798  5013               	movf	(checkCollision@g+1)^0,w,c
 10807  00079A  22DA               	addwfc	fsr2h,f,c
 10808  00079C  CFDE F014          	movff	postinc2,??_checkCollision
 10809  0007A0  CFDD F015          	movff	postdec2,??_checkCollision+1
 10810  0007A4  0E08               	movlw	8
 10811  0007A6  2614               	addwf	??_checkCollision^0,f,c
 10812  0007A8  0E00               	movlw	0
 10813  0007AA  2215               	addwfc	(??_checkCollision+1)^0,f,c
 10814  0007AC  5015               	movf	(??_checkCollision+1)^0,w,c
 10815  0007AE  E109               	bnz	u7070
 10816  0007B0  0EEF               	movlw	239
 10817  0007B2  5C14               	subwf	??_checkCollision^0,w,c
 10818  0007B4  A0D8               	btfss	status,0,c
 10819  0007B6  EFDF  F003         	goto	u7071
 10820  0007BA  EFE1  F003         	goto	u7070
 10821  0007BE                     u7071:
 10822  0007BE  EFF9  F003         	goto	l652
 10823  0007C2                     u7070:
 10824  0007C2                     
 10825                           ;stateMachine/gameController.c: 216:     {;stateMachine/gameController.c: 217:         g
      +                          ->b.dx=-g->b.dx;
 10826  0007C2  EE20 F0B5          	lfsr	2,181
 10827  0007C6  5012               	movf	checkCollision@g^0,w,c
 10828  0007C8  26D9               	addwf	fsr2l,f,c
 10829  0007CA  5013               	movf	(checkCollision@g+1)^0,w,c
 10830  0007CC  22DA               	addwfc	fsr2h,f,c
 10831  0007CE  CFDE F014          	movff	postinc2,??_checkCollision
 10832  0007D2  CFDD F015          	movff	postdec2,??_checkCollision+1
 10833  0007D6  1E14               	comf	??_checkCollision^0,f,c
 10834  0007D8  1E15               	comf	(??_checkCollision+1)^0,f,c
 10835  0007DA  4A14               	infsnz	??_checkCollision^0,f,c
 10836  0007DC  2A15               	incf	(??_checkCollision+1)^0,f,c
 10837  0007DE  EE20 F0B5          	lfsr	2,181
 10838  0007E2  5012               	movf	checkCollision@g^0,w,c
 10839  0007E4  26D9               	addwf	fsr2l,f,c
 10840  0007E6  5013               	movf	(checkCollision@g+1)^0,w,c
 10841  0007E8  22DA               	addwfc	fsr2h,f,c
 10842  0007EA  C014  FFDE         	movff	??_checkCollision,postinc2
 10843  0007EE  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10844  0007F2                     l652:
 10845                           
 10846                           ;stateMachine/gameController.c: 219:     if(g->b.x-8<=0)
 10847  0007F2  0EF8               	movlw	248
 10848  0007F4  6E14               	movwf	??_checkCollision^0,c
 10849  0007F6  0EFF               	movlw	255
 10850  0007F8  6E15               	movwf	(??_checkCollision+1)^0,c
 10851  0007FA  EE20 F0B1          	lfsr	2,177
 10852  0007FE  5012               	movf	checkCollision@g^0,w,c
 10853  000800  26D9               	addwf	fsr2l,f,c
 10854  000802  5013               	movf	(checkCollision@g+1)^0,w,c
 10855  000804  22DA               	addwfc	fsr2h,f,c
 10856  000806  CFDE F016          	movff	postinc2,??_checkCollision+2
 10857  00080A  CFDD F017          	movff	postdec2,??_checkCollision+3
 10858  00080E  5014               	movf	??_checkCollision^0,w,c
 10859  000810  2616               	addwf	(??_checkCollision+2)^0,f,c
 10860  000812  5015               	movf	(??_checkCollision+1)^0,w,c
 10861  000814  2217               	addwfc	(??_checkCollision+3)^0,f,c
 10862  000816  5016               	movf	(??_checkCollision+2)^0,w,c
 10863  000818  1017               	iorwf	(??_checkCollision+3)^0,w,c
 10864  00081A  A4D8               	btfss	status,2,c
 10865  00081C  EF12  F004         	goto	u7081
 10866  000820  EF14  F004         	goto	u7080
 10867  000824                     u7081:
 10868  000824  EF2E  F004         	goto	l9674
 10869  000828                     u7080:
 10870  000828                     
 10871                           ;stateMachine/gameController.c: 220:     {;stateMachine/gameController.c: 221:         g
      +                          ->b.dx=-g->b.dx;
 10872  000828  EE20 F0B5          	lfsr	2,181
 10873  00082C  5012               	movf	checkCollision@g^0,w,c
 10874  00082E  26D9               	addwf	fsr2l,f,c
 10875  000830  5013               	movf	(checkCollision@g+1)^0,w,c
 10876  000832  22DA               	addwfc	fsr2h,f,c
 10877  000834  CFDE F014          	movff	postinc2,??_checkCollision
 10878  000838  CFDD F015          	movff	postdec2,??_checkCollision+1
 10879  00083C  1E14               	comf	??_checkCollision^0,f,c
 10880  00083E  1E15               	comf	(??_checkCollision+1)^0,f,c
 10881  000840  4A14               	infsnz	??_checkCollision^0,f,c
 10882  000842  2A15               	incf	(??_checkCollision+1)^0,f,c
 10883  000844  EE20 F0B5          	lfsr	2,181
 10884  000848  5012               	movf	checkCollision@g^0,w,c
 10885  00084A  26D9               	addwf	fsr2l,f,c
 10886  00084C  5013               	movf	(checkCollision@g+1)^0,w,c
 10887  00084E  22DA               	addwfc	fsr2h,f,c
 10888  000850  C014  FFDE         	movff	??_checkCollision,postinc2
 10889  000854  C015  FFDD         	movff	??_checkCollision+1,postdec2
 10890  000858  EF2E  F004         	goto	l656
 10891  00085C                     l9674:
 10892  00085C                     l656:
 10893  00085C  0012               	return		;funcret
 10894  00085E                     __end_of_checkCollision:
 10895                           	callstack 0
 10896                           
 10897 ;; *************** function _Ball_Update *****************
 10898 ;; Defined at:
 10899 ;;		line 10 in file "class/ball.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  b               2   46[COMRAM] PTR struct Ball
 10902 ;;		 -> g1(201), 
 10903 ;; Auto vars:     Size  Location     Type
 10904 ;;		None
 10905 ;; Return value:  Size  Location     Type
 10906 ;;                  1    wreg      void 
 10907 ;; Registers used:
 10908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10909 ;; Tracked objects:
 10910 ;;		On entry : 0/0
 10911 ;;		On exit  : 0/0
 10912 ;;		Unchanged: 0/0
 10913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10914 ;;      Params:         2       0       0       0       0       0       0
 10915 ;;      Locals:         0       0       0       0       0       0       0
 10916 ;;      Temps:          8       0       0       0       0       0       0
 10917 ;;      Totals:        10       0       0       0       0       0       0
 10918 ;;Total ram usage:       10 bytes
 10919 ;; Hardware stack levels used: 1
 10920 ;; Hardware stack levels required when called: 6
 10921 ;; This function calls:
 10922 ;;		_Ball_draw
 10923 ;;		_LCD_DrawRect
 10924 ;; This function is called by:
 10925 ;;		_mooveBall
 10926 ;; This function uses a non-reentrant model
 10927 ;;
 10928                           
 10929                           	psect	text43
 10930  004326                     __ptext43:
 10931                           	callstack 0
 10932  004326                     _Ball_Update:
 10933                           	callstack 21
 10934  004326                     
 10935                           ;class/ball.c: 10: void Ball_Update(struct Ball* b);class/ball.c: 11: {;class/ball.c: 12
      +                          :     LCD_DrawRect(b->x-8,b->y-8,b->x+8,b->y+8,1,0b1111111111111111);
 10936  004326  C02F  FFD9         	movff	Ball_Update@b,fsr2l
 10937  00432A  C030  FFDA         	movff	Ball_Update@b+1,fsr2h
 10938  00432E  CFDE F031          	movff	postinc2,??_Ball_Update
 10939  004332  CFDD F032          	movff	postdec2,??_Ball_Update+1
 10940  004336  0EF8               	movlw	248
 10941  004338  2431               	addwf	??_Ball_Update^0,w,c
 10942  00433A  6E12               	movwf	LCD_DrawRect@posX1^0,c
 10943  00433C  0EFF               	movlw	255
 10944  00433E  2032               	addwfc	(??_Ball_Update+1)^0,w,c
 10945  004340  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 10946  004342  EE20 F002          	lfsr	2,2
 10947  004346  502F               	movf	Ball_Update@b^0,w,c
 10948  004348  26D9               	addwf	fsr2l,f,c
 10949  00434A  5030               	movf	(Ball_Update@b+1)^0,w,c
 10950  00434C  22DA               	addwfc	fsr2h,f,c
 10951  00434E  CFDE F033          	movff	postinc2,??_Ball_Update+2
 10952  004352  CFDD F034          	movff	postdec2,??_Ball_Update+3
 10953  004356  0EF8               	movlw	248
 10954  004358  2433               	addwf	(??_Ball_Update+2)^0,w,c
 10955  00435A  6E14               	movwf	LCD_DrawRect@posY1^0,c
 10956  00435C  0EFF               	movlw	255
 10957  00435E  2034               	addwfc	(??_Ball_Update+3)^0,w,c
 10958  004360  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 10959  004362  C02F  FFD9         	movff	Ball_Update@b,fsr2l
 10960  004366  C030  FFDA         	movff	Ball_Update@b+1,fsr2h
 10961  00436A  CFDE F035          	movff	postinc2,??_Ball_Update+4
 10962  00436E  CFDD F036          	movff	postdec2,??_Ball_Update+5
 10963  004372  0E08               	movlw	8
 10964  004374  2435               	addwf	(??_Ball_Update+4)^0,w,c
 10965  004376  6E16               	movwf	LCD_DrawRect@posX2^0,c
 10966  004378  0E00               	movlw	0
 10967  00437A  2036               	addwfc	(??_Ball_Update+5)^0,w,c
 10968  00437C  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 10969  00437E  EE20 F002          	lfsr	2,2
 10970  004382  502F               	movf	Ball_Update@b^0,w,c
 10971  004384  26D9               	addwf	fsr2l,f,c
 10972  004386  5030               	movf	(Ball_Update@b+1)^0,w,c
 10973  004388  22DA               	addwfc	fsr2h,f,c
 10974  00438A  CFDE F037          	movff	postinc2,??_Ball_Update+6
 10975  00438E  CFDD F038          	movff	postdec2,??_Ball_Update+7
 10976  004392  0E08               	movlw	8
 10977  004394  2437               	addwf	(??_Ball_Update+6)^0,w,c
 10978  004396  6E18               	movwf	LCD_DrawRect@posY2^0,c
 10979  004398  0E00               	movlw	0
 10980  00439A  2038               	addwfc	(??_Ball_Update+7)^0,w,c
 10981  00439C  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 10982  00439E  0E01               	movlw	1
 10983  0043A0  6E1A               	movwf	LCD_DrawRect@fill^0,c
 10984  0043A2  0EFF               	movlw	255
 10985  0043A4  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 10986  0043A6  681B               	setf	LCD_DrawRect@color^0,c
 10987  0043A8  EC02  F014         	call	_LCD_DrawRect	;wreg free
 10988  0043AC                     
 10989                           ;class/ball.c: 13:     b->x=b->x+b->dx;
 10990  0043AC  EE20 F004          	lfsr	2,4
 10991  0043B0  502F               	movf	Ball_Update@b^0,w,c
 10992  0043B2  26D9               	addwf	fsr2l,f,c
 10993  0043B4  5030               	movf	(Ball_Update@b+1)^0,w,c
 10994  0043B6  22DA               	addwfc	fsr2h,f,c
 10995  0043B8  CFDE F031          	movff	postinc2,??_Ball_Update
 10996  0043BC  CFDD F032          	movff	postdec2,??_Ball_Update+1
 10997  0043C0  C02F  FFD9         	movff	Ball_Update@b,fsr2l
 10998  0043C4  C030  FFDA         	movff	Ball_Update@b+1,fsr2h
 10999  0043C8  CFDE F033          	movff	postinc2,??_Ball_Update+2
 11000  0043CC  CFDD F034          	movff	postdec2,??_Ball_Update+3
 11001  0043D0  5031               	movf	??_Ball_Update^0,w,c
 11002  0043D2  2633               	addwf	(??_Ball_Update+2)^0,f,c
 11003  0043D4  5032               	movf	(??_Ball_Update+1)^0,w,c
 11004  0043D6  2234               	addwfc	(??_Ball_Update+3)^0,f,c
 11005  0043D8  C02F  FFD9         	movff	Ball_Update@b,fsr2l
 11006  0043DC  C030  FFDA         	movff	Ball_Update@b+1,fsr2h
 11007  0043E0  C033  FFDE         	movff	??_Ball_Update+2,postinc2
 11008  0043E4  C034  FFDD         	movff	??_Ball_Update+3,postdec2
 11009  0043E8                     
 11010                           ;class/ball.c: 14:     b->y=b->y+b->dy;
 11011  0043E8  EE20 F006          	lfsr	2,6
 11012  0043EC  502F               	movf	Ball_Update@b^0,w,c
 11013  0043EE  26D9               	addwf	fsr2l,f,c
 11014  0043F0  5030               	movf	(Ball_Update@b+1)^0,w,c
 11015  0043F2  22DA               	addwfc	fsr2h,f,c
 11016  0043F4  CFDE F031          	movff	postinc2,??_Ball_Update
 11017  0043F8  CFDD F032          	movff	postdec2,??_Ball_Update+1
 11018  0043FC  EE20 F002          	lfsr	2,2
 11019  004400  502F               	movf	Ball_Update@b^0,w,c
 11020  004402  26D9               	addwf	fsr2l,f,c
 11021  004404  5030               	movf	(Ball_Update@b+1)^0,w,c
 11022  004406  22DA               	addwfc	fsr2h,f,c
 11023  004408  CFDE F033          	movff	postinc2,??_Ball_Update+2
 11024  00440C  CFDD F034          	movff	postdec2,??_Ball_Update+3
 11025  004410  5031               	movf	??_Ball_Update^0,w,c
 11026  004412  2633               	addwf	(??_Ball_Update+2)^0,f,c
 11027  004414  5032               	movf	(??_Ball_Update+1)^0,w,c
 11028  004416  2234               	addwfc	(??_Ball_Update+3)^0,f,c
 11029  004418  EE20 F002          	lfsr	2,2
 11030  00441C  502F               	movf	Ball_Update@b^0,w,c
 11031  00441E  26D9               	addwf	fsr2l,f,c
 11032  004420  5030               	movf	(Ball_Update@b+1)^0,w,c
 11033  004422  22DA               	addwfc	fsr2h,f,c
 11034  004424  C033  FFDE         	movff	??_Ball_Update+2,postinc2
 11035  004428  C034  FFDD         	movff	??_Ball_Update+3,postdec2
 11036                           
 11037                           ;class/ball.c: 15:     Ball_draw(b);
 11038  00442C  C02F  F025         	movff	Ball_Update@b,Ball_draw@b
 11039  004430  C030  F026         	movff	Ball_Update@b+1,Ball_draw@b+1
 11040  004434  EC14  F02A         	call	_Ball_draw	;wreg free
 11041  004438  0012               	return		;funcret
 11042  00443A                     __end_of_Ball_Update:
 11043                           	callstack 0
 11044                           
 11045 ;; *************** function _gameControllerController *****************
 11046 ;; Defined at:
 11047 ;;		line 68 in file "stateMachine/gameController.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  g               2   54[COMRAM] PTR struct GameParameter
 11050 ;;		 -> g1(201), 
 11051 ;; Auto vars:     Size  Location     Type
 11052 ;;		None
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      void 
 11055 ;; Registers used:
 11056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11062 ;;      Params:         2       0       0       0       0       0       0
 11063 ;;      Locals:         0       0       0       0       0       0       0
 11064 ;;      Temps:          2       0       0       0       0       0       0
 11065 ;;      Totals:         4       0       0       0       0       0       0
 11066 ;;Total ram usage:        4 bytes
 11067 ;; Hardware stack levels used: 1
 11068 ;; Hardware stack levels required when called: 6
 11069 ;; This function calls:
 11070 ;;		_GameParameters_resetPos
 11071 ;;		_LCD_InButton
 11072 ;;		_LCD_InSlider
 11073 ;;		_LCD_SliderUpdate
 11074 ;;		_XF_pushEvent
 11075 ;;		_backlightController
 11076 ;; This function is called by:
 11077 ;;		_gameControllerInit
 11078 ;;		_gameControllerSM
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082                           	psect	text44
 11083  00356A                     __ptext44:
 11084                           	callstack 0
 11085  00356A                     _gameControllerController:
 11086                           	callstack 21
 11087  00356A                     
 11088                           ;stateMachine/gameController.c: 68: void gameControllerController(GameParameters* g);sta
      +                          teMachine/gameController.c: 69: {;stateMachine/gameController.c: 70:     switch(gameCont
      +                          rollerState)
 11089  00356A  EFAF  F01B         	goto	l9618
 11090  00356E                     l9598:
 11091                           
 11092                           ;stateMachine/gameController.c: 73:             if(LCD_InButton(&(g->btnParam),g->x,g->y
      +                          ))
 11093  00356E  0E08               	movlw	8
 11094  003570  2437               	addwf	gameControllerController@g^0,w,c
 11095  003572  6E12               	movwf	LCD_InButton@button^0,c
 11096  003574  0E00               	movlw	0
 11097  003576  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11098  003578  6E13               	movwf	(LCD_InButton@button+1)^0,c
 11099  00357A  EE20 F004          	lfsr	2,4
 11100  00357E  5037               	movf	gameControllerController@g^0,w,c
 11101  003580  26D9               	addwf	fsr2l,f,c
 11102  003582  5038               	movf	(gameControllerController@g+1)^0,w,c
 11103  003584  22DA               	addwfc	fsr2h,f,c
 11104  003586  CFDE F014          	movff	postinc2,LCD_InButton@posX
 11105  00358A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
 11106  00358E  EE20 F006          	lfsr	2,6
 11107  003592  5037               	movf	gameControllerController@g^0,w,c
 11108  003594  26D9               	addwf	fsr2l,f,c
 11109  003596  5038               	movf	(gameControllerController@g+1)^0,w,c
 11110  003598  22DA               	addwfc	fsr2h,f,c
 11111  00359A  CFDE F016          	movff	postinc2,LCD_InButton@posY
 11112  00359E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
 11113  0035A2  EC07  F025         	call	_LCD_InButton	;wreg free
 11114  0035A6  0900               	iorlw	0
 11115  0035A8  B4D8               	btfsc	status,2,c
 11116  0035AA  EFD9  F01A         	goto	u6881
 11117  0035AE  EFDB  F01A         	goto	u6880
 11118  0035B2                     u6881:
 11119  0035B2  EFE6  F01A         	goto	l609
 11120  0035B6                     u6880:
 11121  0035B6                     
 11122                           ;stateMachine/gameController.c: 74:             {;stateMachine/gameController.c: 75:    
      +                                       XF_pushEvent(evParameters,0);
 11123  0035B6  0E00               	movlw	0
 11124  0035B8  6E18               	movwf	XF_pushEvent@inISR^0,c
 11125  0035BA  0E07               	movlw	7
 11126  0035BC  EC6F  F02C         	call	_XF_pushEvent
 11127                           
 11128                           ;stateMachine/gameController.c: 76:                 GameParameters_resetPos(g);;
 11129  0035C0  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
 11130  0035C4  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
 11131  0035C8  ECE6  F02E         	call	_GameParameters_resetPos	;wreg free
 11132  0035CC                     l609:
 11133                           
 11134                           ;stateMachine/gameController.c: 78:             if(LCD_InButton(&(g->btnOnePlayer),g->x,
      +                          g->y))
 11135  0035CC  0E20               	movlw	32
 11136  0035CE  2437               	addwf	gameControllerController@g^0,w,c
 11137  0035D0  6E12               	movwf	LCD_InButton@button^0,c
 11138  0035D2  0E00               	movlw	0
 11139  0035D4  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11140  0035D6  6E13               	movwf	(LCD_InButton@button+1)^0,c
 11141  0035D8  EE20 F004          	lfsr	2,4
 11142  0035DC  5037               	movf	gameControllerController@g^0,w,c
 11143  0035DE  26D9               	addwf	fsr2l,f,c
 11144  0035E0  5038               	movf	(gameControllerController@g+1)^0,w,c
 11145  0035E2  22DA               	addwfc	fsr2h,f,c
 11146  0035E4  CFDE F014          	movff	postinc2,LCD_InButton@posX
 11147  0035E8  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
 11148  0035EC  EE20 F006          	lfsr	2,6
 11149  0035F0  5037               	movf	gameControllerController@g^0,w,c
 11150  0035F2  26D9               	addwf	fsr2l,f,c
 11151  0035F4  5038               	movf	(gameControllerController@g+1)^0,w,c
 11152  0035F6  22DA               	addwfc	fsr2h,f,c
 11153  0035F8  CFDE F016          	movff	postinc2,LCD_InButton@posY
 11154  0035FC  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
 11155  003600  EC07  F025         	call	_LCD_InButton	;wreg free
 11156  003604  0900               	iorlw	0
 11157  003606  B4D8               	btfsc	status,2,c
 11158  003608  EF08  F01B         	goto	u6891
 11159  00360C  EF0A  F01B         	goto	u6890
 11160  003610                     u6891:
 11161  003610  EF15  F01B         	goto	l610
 11162  003614                     u6890:
 11163  003614                     
 11164                           ;stateMachine/gameController.c: 79:             {;stateMachine/gameController.c: 80:    
      +                                       XF_pushEvent(evOnePlayer,0);
 11165  003614  0E00               	movlw	0
 11166  003616  6E18               	movwf	XF_pushEvent@inISR^0,c
 11167  003618  0E05               	movlw	5
 11168  00361A  EC6F  F02C         	call	_XF_pushEvent
 11169                           
 11170                           ;stateMachine/gameController.c: 81:                 GameParameters_resetPos(g);;
 11171  00361E  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
 11172  003622  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
 11173  003626  ECE6  F02E         	call	_GameParameters_resetPos	;wreg free
 11174  00362A                     l610:
 11175                           
 11176                           ;stateMachine/gameController.c: 83:             if(LCD_InButton(&(g->btnTwoPlayer),g->x,
      +                          g->y))
 11177  00362A  0E38               	movlw	56
 11178  00362C  2437               	addwf	gameControllerController@g^0,w,c
 11179  00362E  6E12               	movwf	LCD_InButton@button^0,c
 11180  003630  0E00               	movlw	0
 11181  003632  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11182  003634  6E13               	movwf	(LCD_InButton@button+1)^0,c
 11183  003636  EE20 F004          	lfsr	2,4
 11184  00363A  5037               	movf	gameControllerController@g^0,w,c
 11185  00363C  26D9               	addwf	fsr2l,f,c
 11186  00363E  5038               	movf	(gameControllerController@g+1)^0,w,c
 11187  003640  22DA               	addwfc	fsr2h,f,c
 11188  003642  CFDE F014          	movff	postinc2,LCD_InButton@posX
 11189  003646  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
 11190  00364A  EE20 F006          	lfsr	2,6
 11191  00364E  5037               	movf	gameControllerController@g^0,w,c
 11192  003650  26D9               	addwf	fsr2l,f,c
 11193  003652  5038               	movf	(gameControllerController@g+1)^0,w,c
 11194  003654  22DA               	addwfc	fsr2h,f,c
 11195  003656  CFDE F016          	movff	postinc2,LCD_InButton@posY
 11196  00365A  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
 11197  00365E  EC07  F025         	call	_LCD_InButton	;wreg free
 11198  003662  0900               	iorlw	0
 11199  003664  B4D8               	btfsc	status,2,c
 11200  003666  EF37  F01B         	goto	u6901
 11201  00366A  EF39  F01B         	goto	u6900
 11202  00366E                     u6901:
 11203  00366E  EFCC  F01B         	goto	l619
 11204  003672                     u6900:
 11205  003672                     
 11206                           ;stateMachine/gameController.c: 84:             {;stateMachine/gameController.c: 85:    
      +                                       XF_pushEvent(evTwoPlayer,0);
 11207  003672  0E00               	movlw	0
 11208  003674  6E18               	movwf	XF_pushEvent@inISR^0,c
 11209  003676  0E06               	movlw	6
 11210  003678  EC6F  F02C         	call	_XF_pushEvent
 11211                           
 11212                           ;stateMachine/gameController.c: 86:                 GameParameters_resetPos(g);
 11213  00367C  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
 11214  003680  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
 11215  003684  ECE6  F02E         	call	_GameParameters_resetPos	;wreg free
 11216  003688  EFCC  F01B         	goto	l619
 11217  00368C                     l9606:
 11218                           
 11219                           ;stateMachine/gameController.c: 90:             if(LCD_InSlider(&(g->sldParam),g->x,g->y
      +                          ))
 11220  00368C  0E98               	movlw	152
 11221  00368E  2437               	addwf	gameControllerController@g^0,w,c
 11222  003690  6E12               	movwf	LCD_InSlider@slider^0,c
 11223  003692  0E00               	movlw	0
 11224  003694  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11225  003696  6E13               	movwf	(LCD_InSlider@slider+1)^0,c
 11226  003698  EE20 F004          	lfsr	2,4
 11227  00369C  5037               	movf	gameControllerController@g^0,w,c
 11228  00369E  26D9               	addwf	fsr2l,f,c
 11229  0036A0  5038               	movf	(gameControllerController@g+1)^0,w,c
 11230  0036A2  22DA               	addwfc	fsr2h,f,c
 11231  0036A4  CFDE F014          	movff	postinc2,LCD_InSlider@posX
 11232  0036A8  CFDD F015          	movff	postdec2,LCD_InSlider@posX+1
 11233  0036AC  EE20 F006          	lfsr	2,6
 11234  0036B0  5037               	movf	gameControllerController@g^0,w,c
 11235  0036B2  26D9               	addwf	fsr2l,f,c
 11236  0036B4  5038               	movf	(gameControllerController@g+1)^0,w,c
 11237  0036B6  22DA               	addwfc	fsr2h,f,c
 11238  0036B8  CFDE F016          	movff	postinc2,LCD_InSlider@posY
 11239  0036BC  CFDD F017          	movff	postdec2,LCD_InSlider@posY+1
 11240  0036C0  EC98  F024         	call	_LCD_InSlider	;wreg free
 11241  0036C4  0900               	iorlw	0
 11242  0036C6  B4D8               	btfsc	status,2,c
 11243  0036C8  EF68  F01B         	goto	u6911
 11244  0036CC  EF6A  F01B         	goto	u6910
 11245  0036D0                     u6911:
 11246  0036D0  EF7E  F01B         	goto	l9612
 11247  0036D4                     u6910:
 11248  0036D4                     
 11249                           ;stateMachine/gameController.c: 91:             {;stateMachine/gameController.c: 92:    
      +                                       backlightController(g);
 11250  0036D4  C037  F018         	movff	gameControllerController@g,backlightController@g
 11251  0036D8  C038  F019         	movff	gameControllerController@g+1,backlightController@g+1
 11252  0036DC  EC0C  F00C         	call	_backlightController	;wreg free
 11253                           
 11254                           ;stateMachine/gameController.c: 93:                 LCD_SliderUpdate(&(g->sldParam));
 11255  0036E0  0E98               	movlw	152
 11256  0036E2  2437               	addwf	gameControllerController@g^0,w,c
 11257  0036E4  6E27               	movwf	LCD_SliderUpdate@slider^0,c
 11258  0036E6  0E00               	movlw	0
 11259  0036E8  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11260  0036EA  6E28               	movwf	(LCD_SliderUpdate@slider+1)^0,c
 11261  0036EC  ECA1  F009         	call	_LCD_SliderUpdate	;wreg free
 11262  0036F0                     
 11263                           ;stateMachine/gameController.c: 94:                 GameParameters_resetPos(g);
 11264  0036F0  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
 11265  0036F4  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
 11266  0036F8  ECE6  F02E         	call	_GameParameters_resetPos	;wreg free
 11267  0036FC                     l9612:
 11268                           
 11269                           ;stateMachine/gameController.c: 96:             if(LCD_InButton(&(g->btnLeaveParam),g->x
      +                          ,g->y))
 11270  0036FC  0E50               	movlw	80
 11271  0036FE  2437               	addwf	gameControllerController@g^0,w,c
 11272  003700  6E12               	movwf	LCD_InButton@button^0,c
 11273  003702  0E00               	movlw	0
 11274  003704  2038               	addwfc	(gameControllerController@g+1)^0,w,c
 11275  003706  6E13               	movwf	(LCD_InButton@button+1)^0,c
 11276  003708  EE20 F004          	lfsr	2,4
 11277  00370C  5037               	movf	gameControllerController@g^0,w,c
 11278  00370E  26D9               	addwf	fsr2l,f,c
 11279  003710  5038               	movf	(gameControllerController@g+1)^0,w,c
 11280  003712  22DA               	addwfc	fsr2h,f,c
 11281  003714  CFDE F014          	movff	postinc2,LCD_InButton@posX
 11282  003718  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
 11283  00371C  EE20 F006          	lfsr	2,6
 11284  003720  5037               	movf	gameControllerController@g^0,w,c
 11285  003722  26D9               	addwf	fsr2l,f,c
 11286  003724  5038               	movf	(gameControllerController@g+1)^0,w,c
 11287  003726  22DA               	addwfc	fsr2h,f,c
 11288  003728  CFDE F016          	movff	postinc2,LCD_InButton@posY
 11289  00372C  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
 11290  003730  EC07  F025         	call	_LCD_InButton	;wreg free
 11291  003734  0900               	iorlw	0
 11292  003736  B4D8               	btfsc	status,2,c
 11293  003738  EFA0  F01B         	goto	u6921
 11294  00373C  EFA2  F01B         	goto	u6920
 11295  003740                     u6921:
 11296  003740  EFCC  F01B         	goto	l619
 11297  003744                     u6920:
 11298  003744                     
 11299                           ;stateMachine/gameController.c: 97:             {;stateMachine/gameController.c: 98:    
      +                                       XF_pushEvent(evLeaveParam,0);
 11300  003744  0E00               	movlw	0
 11301  003746  6E18               	movwf	XF_pushEvent@inISR^0,c
 11302  003748  0E08               	movlw	8
 11303  00374A  EC6F  F02C         	call	_XF_pushEvent
 11304                           
 11305                           ;stateMachine/gameController.c: 99:                 GameParameters_resetPos(g);
 11306  00374E  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
 11307  003752  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
 11308  003756  ECE6  F02E         	call	_GameParameters_resetPos	;wreg free
 11309  00375A  EFCC  F01B         	goto	l619
 11310  00375E                     l9618:
 11311  00375E  504D               	movf	_gameControllerState^0,w,c
 11312  003760  6E39               	movwf	??_gameControllerController^0,c
 11313  003762  6A3A               	clrf	(??_gameControllerController+1)^0,c
 11314                           
 11315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11316                           ; Switch size 1, requested type "simple"
 11317                           ; Number of cases is 1, Range of values is 0 to 0
 11318                           ; switch strategies available:
 11319                           ; Name         Instructions Cycles
 11320                           ; simple_byte            4     3 (average)
 11321                           ;	Chosen strategy is simple_byte
 11322  003764  503A               	movf	(??_gameControllerController+1)^0,w,c
 11323  003766  0A00               	xorlw	0	; case 0
 11324  003768  B4D8               	btfsc	status,2,c
 11325  00376A  EFB9  F01B         	goto	l10484
 11326  00376E  EFCC  F01B         	goto	l619
 11327  003772                     l10484:
 11328                           
 11329                           ; Switch size 1, requested type "simple"
 11330                           ; Number of cases is 4, Range of values is 0 to 3
 11331                           ; switch strategies available:
 11332                           ; Name         Instructions Cycles
 11333                           ; simple_byte           13     7 (average)
 11334                           ;	Chosen strategy is simple_byte
 11335  003772  5039               	movf	??_gameControllerController^0,w,c
 11336  003774  0A00               	xorlw	0	; case 0
 11337  003776  B4D8               	btfsc	status,2,c
 11338  003778  EFB7  F01A         	goto	l9598
 11339  00377C  0A01               	xorlw	1	; case 1
 11340  00377E  B4D8               	btfsc	status,2,c
 11341  003780  EF46  F01B         	goto	l9606
 11342  003784  0A03               	xorlw	3	; case 2
 11343  003786  B4D8               	btfsc	status,2,c
 11344  003788  EFCC  F01B         	goto	l619
 11345  00378C  0A01               	xorlw	1	; case 3
 11346  00378E  B4D8               	btfsc	status,2,c
 11347  003790  EFCC  F01B         	goto	l619
 11348  003794  EFCC  F01B         	goto	l619
 11349  003798                     l619:
 11350  003798  0012               	return		;funcret
 11351  00379A                     __end_of_gameControllerController:
 11352                           	callstack 0
 11353                           
 11354 ;; *************** function _backlightController *****************
 11355 ;; Defined at:
 11356 ;;		line 234 in file "stateMachine/gameController.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;  g               2   23[COMRAM] PTR struct GameParameter
 11359 ;;		 -> g1(201), 
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      void 
 11364 ;; Registers used:
 11365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11371 ;;      Params:         2       0       0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0
 11373 ;;      Temps:          2       0       0       0       0       0       0
 11374 ;;      Totals:         4       0       0       0       0       0       0
 11375 ;;Total ram usage:        4 bytes
 11376 ;; Hardware stack levels used: 1
 11377 ;; Hardware stack levels required when called: 5
 11378 ;; This function calls:
 11379 ;;		_GameParameters_setBackLight
 11380 ;; This function is called by:
 11381 ;;		_gameControllerController
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           	psect	text45
 11386  001818                     __ptext45:
 11387                           	callstack 0
 11388  001818                     _backlightController:
 11389                           	callstack 21
 11390  001818                     
 11391                           ;stateMachine/gameController.c: 234: void backlightController(GameParameters* g);stateMa
      +                          chine/gameController.c: 235: {;stateMachine/gameController.c: 236:     if(((g->x)>=50)&&
      +                          ((g->x)<64))
 11392  001818  EE20 F004          	lfsr	2,4
 11393  00181C  5018               	movf	backlightController@g^0,w,c
 11394  00181E  26D9               	addwf	fsr2l,f,c
 11395  001820  5019               	movf	(backlightController@g+1)^0,w,c
 11396  001822  22DA               	addwfc	fsr2h,f,c
 11397  001824  0E01               	movlw	1
 11398  001826  50DB               	movf	plusw2,w,c
 11399  001828  E109               	bnz	u6560
 11400  00182A  0E32               	movlw	50
 11401  00182C  5CDE               	subwf	postinc2,w,c
 11402  00182E  A0D8               	btfss	status,0,c
 11403  001830  EF1C  F00C         	goto	u6561
 11404  001834  EF1E  F00C         	goto	u6560
 11405  001838                     u6561:
 11406  001838  EF3C  F00C         	goto	l9424
 11407  00183C                     u6560:
 11408  00183C  EE20 F004          	lfsr	2,4
 11409  001840  5018               	movf	backlightController@g^0,w,c
 11410  001842  26D9               	addwf	fsr2l,f,c
 11411  001844  5019               	movf	(backlightController@g+1)^0,w,c
 11412  001846  22DA               	addwfc	fsr2h,f,c
 11413  001848  0E01               	movlw	1
 11414  00184A  50DB               	movf	plusw2,w,c
 11415  00184C  E107               	bnz	u6571
 11416  00184E  0E40               	movlw	64
 11417  001850  5CDE               	subwf	postinc2,w,c
 11418  001852  B0D8               	btfsc	status,0,c
 11419  001854  EF2E  F00C         	goto	u6571
 11420  001858  EF30  F00C         	goto	u6570
 11421  00185C                     u6571:
 11422  00185C  EF3C  F00C         	goto	l9424
 11423  001860                     u6570:
 11424  001860                     
 11425                           ;stateMachine/gameController.c: 237:     {;stateMachine/gameController.c: 238:         G
      +                          ameParameters_setBackLight(g,0);
 11426  001860  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11427  001864  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11428  001868  0E00               	movlw	0
 11429  00186A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11430  00186C  0E00               	movlw	0
 11431  00186E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11432  001870  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11433                           
 11434                           ;stateMachine/gameController.c: 239:     }
 11435  001874  EF4C  F00E         	goto	l9490
 11436  001878                     l9424:
 11437  001878  EE20 F004          	lfsr	2,4
 11438  00187C  5018               	movf	backlightController@g^0,w,c
 11439  00187E  26D9               	addwf	fsr2l,f,c
 11440  001880  5019               	movf	(backlightController@g+1)^0,w,c
 11441  001882  22DA               	addwfc	fsr2h,f,c
 11442  001884  0E01               	movlw	1
 11443  001886  50DB               	movf	plusw2,w,c
 11444  001888  E109               	bnz	u6580
 11445  00188A  0E40               	movlw	64
 11446  00188C  5CDE               	subwf	postinc2,w,c
 11447  00188E  A0D8               	btfss	status,0,c
 11448  001890  EF4C  F00C         	goto	u6581
 11449  001894  EF4E  F00C         	goto	u6580
 11450  001898                     u6581:
 11451  001898  EF6C  F00C         	goto	l9430
 11452  00189C                     u6580:
 11453  00189C  EE20 F004          	lfsr	2,4
 11454  0018A0  5018               	movf	backlightController@g^0,w,c
 11455  0018A2  26D9               	addwf	fsr2l,f,c
 11456  0018A4  5019               	movf	(backlightController@g+1)^0,w,c
 11457  0018A6  22DA               	addwfc	fsr2h,f,c
 11458  0018A8  0E01               	movlw	1
 11459  0018AA  50DB               	movf	plusw2,w,c
 11460  0018AC  E107               	bnz	u6591
 11461  0018AE  0E4E               	movlw	78
 11462  0018B0  5CDE               	subwf	postinc2,w,c
 11463  0018B2  B0D8               	btfsc	status,0,c
 11464  0018B4  EF5E  F00C         	goto	u6591
 11465  0018B8  EF60  F00C         	goto	u6590
 11466  0018BC                     u6591:
 11467  0018BC  EF6C  F00C         	goto	l9430
 11468  0018C0                     u6590:
 11469  0018C0                     
 11470                           ;stateMachine/gameController.c: 241:     {;stateMachine/gameController.c: 242:         G
      +                          ameParameters_setBackLight(g,1);
 11471  0018C0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11472  0018C4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11473  0018C8  0E00               	movlw	0
 11474  0018CA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11475  0018CC  0E01               	movlw	1
 11476  0018CE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11477  0018D0  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11478                           
 11479                           ;stateMachine/gameController.c: 243:     }
 11480  0018D4  EF4C  F00E         	goto	l9490
 11481  0018D8                     l9430:
 11482  0018D8  EE20 F004          	lfsr	2,4
 11483  0018DC  5018               	movf	backlightController@g^0,w,c
 11484  0018DE  26D9               	addwf	fsr2l,f,c
 11485  0018E0  5019               	movf	(backlightController@g+1)^0,w,c
 11486  0018E2  22DA               	addwfc	fsr2h,f,c
 11487  0018E4  0E01               	movlw	1
 11488  0018E6  50DB               	movf	plusw2,w,c
 11489  0018E8  E109               	bnz	u6600
 11490  0018EA  0E4E               	movlw	78
 11491  0018EC  5CDE               	subwf	postinc2,w,c
 11492  0018EE  A0D8               	btfss	status,0,c
 11493  0018F0  EF7C  F00C         	goto	u6601
 11494  0018F4  EF7E  F00C         	goto	u6600
 11495  0018F8                     u6601:
 11496  0018F8  EF9C  F00C         	goto	l9436
 11497  0018FC                     u6600:
 11498  0018FC  EE20 F004          	lfsr	2,4
 11499  001900  5018               	movf	backlightController@g^0,w,c
 11500  001902  26D9               	addwf	fsr2l,f,c
 11501  001904  5019               	movf	(backlightController@g+1)^0,w,c
 11502  001906  22DA               	addwfc	fsr2h,f,c
 11503  001908  0E01               	movlw	1
 11504  00190A  50DB               	movf	plusw2,w,c
 11505  00190C  E107               	bnz	u6611
 11506  00190E  0E5C               	movlw	92
 11507  001910  5CDE               	subwf	postinc2,w,c
 11508  001912  B0D8               	btfsc	status,0,c
 11509  001914  EF8E  F00C         	goto	u6611
 11510  001918  EF90  F00C         	goto	u6610
 11511  00191C                     u6611:
 11512  00191C  EF9C  F00C         	goto	l9436
 11513  001920                     u6610:
 11514  001920                     
 11515                           ;stateMachine/gameController.c: 245:     {;stateMachine/gameController.c: 246:         G
      +                          ameParameters_setBackLight(g,2);
 11516  001920  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11517  001924  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11518  001928  0E00               	movlw	0
 11519  00192A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11520  00192C  0E02               	movlw	2
 11521  00192E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11522  001930  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11523                           
 11524                           ;stateMachine/gameController.c: 247:     }
 11525  001934  EF4C  F00E         	goto	l9490
 11526  001938                     l9436:
 11527  001938  EE20 F004          	lfsr	2,4
 11528  00193C  5018               	movf	backlightController@g^0,w,c
 11529  00193E  26D9               	addwf	fsr2l,f,c
 11530  001940  5019               	movf	(backlightController@g+1)^0,w,c
 11531  001942  22DA               	addwfc	fsr2h,f,c
 11532  001944  0E01               	movlw	1
 11533  001946  50DB               	movf	plusw2,w,c
 11534  001948  E109               	bnz	u6620
 11535  00194A  0E5C               	movlw	92
 11536  00194C  5CDE               	subwf	postinc2,w,c
 11537  00194E  A0D8               	btfss	status,0,c
 11538  001950  EFAC  F00C         	goto	u6621
 11539  001954  EFAE  F00C         	goto	u6620
 11540  001958                     u6621:
 11541  001958  EFCC  F00C         	goto	l9442
 11542  00195C                     u6620:
 11543  00195C  EE20 F004          	lfsr	2,4
 11544  001960  5018               	movf	backlightController@g^0,w,c
 11545  001962  26D9               	addwf	fsr2l,f,c
 11546  001964  5019               	movf	(backlightController@g+1)^0,w,c
 11547  001966  22DA               	addwfc	fsr2h,f,c
 11548  001968  0E01               	movlw	1
 11549  00196A  50DB               	movf	plusw2,w,c
 11550  00196C  E107               	bnz	u6631
 11551  00196E  0E6A               	movlw	106
 11552  001970  5CDE               	subwf	postinc2,w,c
 11553  001972  B0D8               	btfsc	status,0,c
 11554  001974  EFBE  F00C         	goto	u6631
 11555  001978  EFC0  F00C         	goto	u6630
 11556  00197C                     u6631:
 11557  00197C  EFCC  F00C         	goto	l9442
 11558  001980                     u6630:
 11559  001980                     
 11560                           ;stateMachine/gameController.c: 249:     {;stateMachine/gameController.c: 250:         G
      +                          ameParameters_setBackLight(g,3);
 11561  001980  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11562  001984  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11563  001988  0E00               	movlw	0
 11564  00198A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11565  00198C  0E03               	movlw	3
 11566  00198E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11567  001990  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11568                           
 11569                           ;stateMachine/gameController.c: 251:     }
 11570  001994  EF4C  F00E         	goto	l9490
 11571  001998                     l9442:
 11572  001998  EE20 F004          	lfsr	2,4
 11573  00199C  5018               	movf	backlightController@g^0,w,c
 11574  00199E  26D9               	addwf	fsr2l,f,c
 11575  0019A0  5019               	movf	(backlightController@g+1)^0,w,c
 11576  0019A2  22DA               	addwfc	fsr2h,f,c
 11577  0019A4  0E01               	movlw	1
 11578  0019A6  50DB               	movf	plusw2,w,c
 11579  0019A8  E109               	bnz	u6640
 11580  0019AA  0E6A               	movlw	106
 11581  0019AC  5CDE               	subwf	postinc2,w,c
 11582  0019AE  A0D8               	btfss	status,0,c
 11583  0019B0  EFDC  F00C         	goto	u6641
 11584  0019B4  EFDE  F00C         	goto	u6640
 11585  0019B8                     u6641:
 11586  0019B8  EFFC  F00C         	goto	l9448
 11587  0019BC                     u6640:
 11588  0019BC  EE20 F004          	lfsr	2,4
 11589  0019C0  5018               	movf	backlightController@g^0,w,c
 11590  0019C2  26D9               	addwf	fsr2l,f,c
 11591  0019C4  5019               	movf	(backlightController@g+1)^0,w,c
 11592  0019C6  22DA               	addwfc	fsr2h,f,c
 11593  0019C8  0E01               	movlw	1
 11594  0019CA  50DB               	movf	plusw2,w,c
 11595  0019CC  E107               	bnz	u6651
 11596  0019CE  0E78               	movlw	120
 11597  0019D0  5CDE               	subwf	postinc2,w,c
 11598  0019D2  B0D8               	btfsc	status,0,c
 11599  0019D4  EFEE  F00C         	goto	u6651
 11600  0019D8  EFF0  F00C         	goto	u6650
 11601  0019DC                     u6651:
 11602  0019DC  EFFC  F00C         	goto	l9448
 11603  0019E0                     u6650:
 11604  0019E0                     
 11605                           ;stateMachine/gameController.c: 253:     {;stateMachine/gameController.c: 254:         G
      +                          ameParameters_setBackLight(g,4);
 11606  0019E0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11607  0019E4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11608  0019E8  0E00               	movlw	0
 11609  0019EA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11610  0019EC  0E04               	movlw	4
 11611  0019EE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11612  0019F0  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11613                           
 11614                           ;stateMachine/gameController.c: 255:     }
 11615  0019F4  EF4C  F00E         	goto	l9490
 11616  0019F8                     l9448:
 11617  0019F8  EE20 F004          	lfsr	2,4
 11618  0019FC  5018               	movf	backlightController@g^0,w,c
 11619  0019FE  26D9               	addwf	fsr2l,f,c
 11620  001A00  5019               	movf	(backlightController@g+1)^0,w,c
 11621  001A02  22DA               	addwfc	fsr2h,f,c
 11622  001A04  0E01               	movlw	1
 11623  001A06  50DB               	movf	plusw2,w,c
 11624  001A08  E109               	bnz	u6660
 11625  001A0A  0E78               	movlw	120
 11626  001A0C  5CDE               	subwf	postinc2,w,c
 11627  001A0E  A0D8               	btfss	status,0,c
 11628  001A10  EF0C  F00D         	goto	u6661
 11629  001A14  EF0E  F00D         	goto	u6660
 11630  001A18                     u6661:
 11631  001A18  EF2C  F00D         	goto	l9454
 11632  001A1C                     u6660:
 11633  001A1C  EE20 F004          	lfsr	2,4
 11634  001A20  5018               	movf	backlightController@g^0,w,c
 11635  001A22  26D9               	addwf	fsr2l,f,c
 11636  001A24  5019               	movf	(backlightController@g+1)^0,w,c
 11637  001A26  22DA               	addwfc	fsr2h,f,c
 11638  001A28  0E01               	movlw	1
 11639  001A2A  50DB               	movf	plusw2,w,c
 11640  001A2C  E107               	bnz	u6671
 11641  001A2E  0E86               	movlw	134
 11642  001A30  5CDE               	subwf	postinc2,w,c
 11643  001A32  B0D8               	btfsc	status,0,c
 11644  001A34  EF1E  F00D         	goto	u6671
 11645  001A38  EF20  F00D         	goto	u6670
 11646  001A3C                     u6671:
 11647  001A3C  EF2C  F00D         	goto	l9454
 11648  001A40                     u6670:
 11649  001A40                     
 11650                           ;stateMachine/gameController.c: 257:     {;stateMachine/gameController.c: 258:         G
      +                          ameParameters_setBackLight(g,5);
 11651  001A40  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11652  001A44  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11653  001A48  0E00               	movlw	0
 11654  001A4A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11655  001A4C  0E05               	movlw	5
 11656  001A4E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11657  001A50  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11658                           
 11659                           ;stateMachine/gameController.c: 259:     }
 11660  001A54  EF4C  F00E         	goto	l9490
 11661  001A58                     l9454:
 11662  001A58  EE20 F004          	lfsr	2,4
 11663  001A5C  5018               	movf	backlightController@g^0,w,c
 11664  001A5E  26D9               	addwf	fsr2l,f,c
 11665  001A60  5019               	movf	(backlightController@g+1)^0,w,c
 11666  001A62  22DA               	addwfc	fsr2h,f,c
 11667  001A64  0E01               	movlw	1
 11668  001A66  50DB               	movf	plusw2,w,c
 11669  001A68  E109               	bnz	u6680
 11670  001A6A  0E86               	movlw	134
 11671  001A6C  5CDE               	subwf	postinc2,w,c
 11672  001A6E  A0D8               	btfss	status,0,c
 11673  001A70  EF3C  F00D         	goto	u6681
 11674  001A74  EF3E  F00D         	goto	u6680
 11675  001A78                     u6681:
 11676  001A78  EF5C  F00D         	goto	l9460
 11677  001A7C                     u6680:
 11678  001A7C  EE20 F004          	lfsr	2,4
 11679  001A80  5018               	movf	backlightController@g^0,w,c
 11680  001A82  26D9               	addwf	fsr2l,f,c
 11681  001A84  5019               	movf	(backlightController@g+1)^0,w,c
 11682  001A86  22DA               	addwfc	fsr2h,f,c
 11683  001A88  0E01               	movlw	1
 11684  001A8A  50DB               	movf	plusw2,w,c
 11685  001A8C  E107               	bnz	u6691
 11686  001A8E  0E96               	movlw	150
 11687  001A90  5CDE               	subwf	postinc2,w,c
 11688  001A92  B0D8               	btfsc	status,0,c
 11689  001A94  EF4E  F00D         	goto	u6691
 11690  001A98  EF50  F00D         	goto	u6690
 11691  001A9C                     u6691:
 11692  001A9C  EF5C  F00D         	goto	l9460
 11693  001AA0                     u6690:
 11694  001AA0                     
 11695                           ;stateMachine/gameController.c: 261:     {;stateMachine/gameController.c: 262:         G
      +                          ameParameters_setBackLight(g,6);
 11696  001AA0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11697  001AA4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11698  001AA8  0E00               	movlw	0
 11699  001AAA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11700  001AAC  0E06               	movlw	6
 11701  001AAE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11702  001AB0  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11703                           
 11704                           ;stateMachine/gameController.c: 263:     }
 11705  001AB4  EF4C  F00E         	goto	l9490
 11706  001AB8                     l9460:
 11707  001AB8  EE20 F004          	lfsr	2,4
 11708  001ABC  5018               	movf	backlightController@g^0,w,c
 11709  001ABE  26D9               	addwf	fsr2l,f,c
 11710  001AC0  5019               	movf	(backlightController@g+1)^0,w,c
 11711  001AC2  22DA               	addwfc	fsr2h,f,c
 11712  001AC4  0E01               	movlw	1
 11713  001AC6  50DB               	movf	plusw2,w,c
 11714  001AC8  E109               	bnz	u6700
 11715  001ACA  0E96               	movlw	150
 11716  001ACC  5CDE               	subwf	postinc2,w,c
 11717  001ACE  A0D8               	btfss	status,0,c
 11718  001AD0  EF6C  F00D         	goto	u6701
 11719  001AD4  EF6E  F00D         	goto	u6700
 11720  001AD8                     u6701:
 11721  001AD8  EF8C  F00D         	goto	l9466
 11722  001ADC                     u6700:
 11723  001ADC  EE20 F004          	lfsr	2,4
 11724  001AE0  5018               	movf	backlightController@g^0,w,c
 11725  001AE2  26D9               	addwf	fsr2l,f,c
 11726  001AE4  5019               	movf	(backlightController@g+1)^0,w,c
 11727  001AE6  22DA               	addwfc	fsr2h,f,c
 11728  001AE8  0E01               	movlw	1
 11729  001AEA  50DB               	movf	plusw2,w,c
 11730  001AEC  E107               	bnz	u6711
 11731  001AEE  0EA4               	movlw	164
 11732  001AF0  5CDE               	subwf	postinc2,w,c
 11733  001AF2  B0D8               	btfsc	status,0,c
 11734  001AF4  EF7E  F00D         	goto	u6711
 11735  001AF8  EF80  F00D         	goto	u6710
 11736  001AFC                     u6711:
 11737  001AFC  EF8C  F00D         	goto	l9466
 11738  001B00                     u6710:
 11739  001B00                     
 11740                           ;stateMachine/gameController.c: 265:     {;stateMachine/gameController.c: 266:         G
      +                          ameParameters_setBackLight(g,7);
 11741  001B00  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11742  001B04  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11743  001B08  0E00               	movlw	0
 11744  001B0A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11745  001B0C  0E07               	movlw	7
 11746  001B0E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11747  001B10  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11748                           
 11749                           ;stateMachine/gameController.c: 267:     }
 11750  001B14  EF4C  F00E         	goto	l9490
 11751  001B18                     l9466:
 11752  001B18  EE20 F004          	lfsr	2,4
 11753  001B1C  5018               	movf	backlightController@g^0,w,c
 11754  001B1E  26D9               	addwf	fsr2l,f,c
 11755  001B20  5019               	movf	(backlightController@g+1)^0,w,c
 11756  001B22  22DA               	addwfc	fsr2h,f,c
 11757  001B24  0E01               	movlw	1
 11758  001B26  50DB               	movf	plusw2,w,c
 11759  001B28  E109               	bnz	u6720
 11760  001B2A  0EA4               	movlw	164
 11761  001B2C  5CDE               	subwf	postinc2,w,c
 11762  001B2E  A0D8               	btfss	status,0,c
 11763  001B30  EF9C  F00D         	goto	u6721
 11764  001B34  EF9E  F00D         	goto	u6720
 11765  001B38                     u6721:
 11766  001B38  EFBC  F00D         	goto	l9472
 11767  001B3C                     u6720:
 11768  001B3C  EE20 F004          	lfsr	2,4
 11769  001B40  5018               	movf	backlightController@g^0,w,c
 11770  001B42  26D9               	addwf	fsr2l,f,c
 11771  001B44  5019               	movf	(backlightController@g+1)^0,w,c
 11772  001B46  22DA               	addwfc	fsr2h,f,c
 11773  001B48  0E01               	movlw	1
 11774  001B4A  50DB               	movf	plusw2,w,c
 11775  001B4C  E107               	bnz	u6731
 11776  001B4E  0EB2               	movlw	178
 11777  001B50  5CDE               	subwf	postinc2,w,c
 11778  001B52  B0D8               	btfsc	status,0,c
 11779  001B54  EFAE  F00D         	goto	u6731
 11780  001B58  EFB0  F00D         	goto	u6730
 11781  001B5C                     u6731:
 11782  001B5C  EFBC  F00D         	goto	l9472
 11783  001B60                     u6730:
 11784  001B60                     
 11785                           ;stateMachine/gameController.c: 269:     {;stateMachine/gameController.c: 270:         G
      +                          ameParameters_setBackLight(g,8);
 11786  001B60  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11787  001B64  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11788  001B68  0E00               	movlw	0
 11789  001B6A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11790  001B6C  0E08               	movlw	8
 11791  001B6E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11792  001B70  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11793                           
 11794                           ;stateMachine/gameController.c: 271:     }
 11795  001B74  EF4C  F00E         	goto	l9490
 11796  001B78                     l9472:
 11797  001B78  EE20 F004          	lfsr	2,4
 11798  001B7C  5018               	movf	backlightController@g^0,w,c
 11799  001B7E  26D9               	addwf	fsr2l,f,c
 11800  001B80  5019               	movf	(backlightController@g+1)^0,w,c
 11801  001B82  22DA               	addwfc	fsr2h,f,c
 11802  001B84  0E01               	movlw	1
 11803  001B86  50DB               	movf	plusw2,w,c
 11804  001B88  E109               	bnz	u6740
 11805  001B8A  0EB2               	movlw	178
 11806  001B8C  5CDE               	subwf	postinc2,w,c
 11807  001B8E  A0D8               	btfss	status,0,c
 11808  001B90  EFCC  F00D         	goto	u6741
 11809  001B94  EFCE  F00D         	goto	u6740
 11810  001B98                     u6741:
 11811  001B98  EFEC  F00D         	goto	l9478
 11812  001B9C                     u6740:
 11813  001B9C  EE20 F004          	lfsr	2,4
 11814  001BA0  5018               	movf	backlightController@g^0,w,c
 11815  001BA2  26D9               	addwf	fsr2l,f,c
 11816  001BA4  5019               	movf	(backlightController@g+1)^0,w,c
 11817  001BA6  22DA               	addwfc	fsr2h,f,c
 11818  001BA8  0E01               	movlw	1
 11819  001BAA  50DB               	movf	plusw2,w,c
 11820  001BAC  E107               	bnz	u6751
 11821  001BAE  0EC0               	movlw	192
 11822  001BB0  5CDE               	subwf	postinc2,w,c
 11823  001BB2  B0D8               	btfsc	status,0,c
 11824  001BB4  EFDE  F00D         	goto	u6751
 11825  001BB8  EFE0  F00D         	goto	u6750
 11826  001BBC                     u6751:
 11827  001BBC  EFEC  F00D         	goto	l9478
 11828  001BC0                     u6750:
 11829  001BC0                     
 11830                           ;stateMachine/gameController.c: 273:     {;stateMachine/gameController.c: 274:         G
      +                          ameParameters_setBackLight(g,9);
 11831  001BC0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11832  001BC4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11833  001BC8  0E00               	movlw	0
 11834  001BCA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11835  001BCC  0E09               	movlw	9
 11836  001BCE  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11837  001BD0  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11838                           
 11839                           ;stateMachine/gameController.c: 275:     }
 11840  001BD4  EF4C  F00E         	goto	l9490
 11841  001BD8                     l9478:
 11842  001BD8  EE20 F004          	lfsr	2,4
 11843  001BDC  5018               	movf	backlightController@g^0,w,c
 11844  001BDE  26D9               	addwf	fsr2l,f,c
 11845  001BE0  5019               	movf	(backlightController@g+1)^0,w,c
 11846  001BE2  22DA               	addwfc	fsr2h,f,c
 11847  001BE4  0E01               	movlw	1
 11848  001BE6  50DB               	movf	plusw2,w,c
 11849  001BE8  E109               	bnz	u6760
 11850  001BEA  0EC0               	movlw	192
 11851  001BEC  5CDE               	subwf	postinc2,w,c
 11852  001BEE  A0D8               	btfss	status,0,c
 11853  001BF0  EFFC  F00D         	goto	u6761
 11854  001BF4  EFFE  F00D         	goto	u6760
 11855  001BF8                     u6761:
 11856  001BF8  EF1C  F00E         	goto	l9484
 11857  001BFC                     u6760:
 11858  001BFC  EE20 F004          	lfsr	2,4
 11859  001C00  5018               	movf	backlightController@g^0,w,c
 11860  001C02  26D9               	addwf	fsr2l,f,c
 11861  001C04  5019               	movf	(backlightController@g+1)^0,w,c
 11862  001C06  22DA               	addwfc	fsr2h,f,c
 11863  001C08  0E01               	movlw	1
 11864  001C0A  50DB               	movf	plusw2,w,c
 11865  001C0C  E107               	bnz	u6771
 11866  001C0E  0ECE               	movlw	206
 11867  001C10  5CDE               	subwf	postinc2,w,c
 11868  001C12  B0D8               	btfsc	status,0,c
 11869  001C14  EF0E  F00E         	goto	u6771
 11870  001C18  EF10  F00E         	goto	u6770
 11871  001C1C                     u6771:
 11872  001C1C  EF1C  F00E         	goto	l9484
 11873  001C20                     u6770:
 11874  001C20                     
 11875                           ;stateMachine/gameController.c: 277:     {;stateMachine/gameController.c: 278:         G
      +                          ameParameters_setBackLight(g,10);
 11876  001C20  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11877  001C24  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11878  001C28  0E00               	movlw	0
 11879  001C2A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11880  001C2C  0E0A               	movlw	10
 11881  001C2E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11882  001C30  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11883                           
 11884                           ;stateMachine/gameController.c: 279:     }
 11885  001C34  EF4C  F00E         	goto	l9490
 11886  001C38                     l9484:
 11887  001C38  EE20 F004          	lfsr	2,4
 11888  001C3C  5018               	movf	backlightController@g^0,w,c
 11889  001C3E  26D9               	addwf	fsr2l,f,c
 11890  001C40  5019               	movf	(backlightController@g+1)^0,w,c
 11891  001C42  22DA               	addwfc	fsr2h,f,c
 11892  001C44  0E01               	movlw	1
 11893  001C46  50DB               	movf	plusw2,w,c
 11894  001C48  E109               	bnz	u6780
 11895  001C4A  0ECE               	movlw	206
 11896  001C4C  5CDE               	subwf	postinc2,w,c
 11897  001C4E  A0D8               	btfss	status,0,c
 11898  001C50  EF2C  F00E         	goto	u6781
 11899  001C54  EF2E  F00E         	goto	u6780
 11900  001C58                     u6781:
 11901  001C58  EF4C  F00E         	goto	l676
 11902  001C5C                     u6780:
 11903  001C5C  EE20 F004          	lfsr	2,4
 11904  001C60  5018               	movf	backlightController@g^0,w,c
 11905  001C62  26D9               	addwf	fsr2l,f,c
 11906  001C64  5019               	movf	(backlightController@g+1)^0,w,c
 11907  001C66  22DA               	addwfc	fsr2h,f,c
 11908  001C68  0E01               	movlw	1
 11909  001C6A  50DB               	movf	plusw2,w,c
 11910  001C6C  E107               	bnz	u6791
 11911  001C6E  0ED7               	movlw	215
 11912  001C70  5CDE               	subwf	postinc2,w,c
 11913  001C72  B0D8               	btfsc	status,0,c
 11914  001C74  EF3E  F00E         	goto	u6791
 11915  001C78  EF40  F00E         	goto	u6790
 11916  001C7C                     u6791:
 11917  001C7C  EF4C  F00E         	goto	l676
 11918  001C80                     u6790:
 11919  001C80                     
 11920                           ;stateMachine/gameController.c: 281:     {;stateMachine/gameController.c: 282:         G
      +                          ameParameters_setBackLight(g,11);
 11921  001C80  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
 11922  001C84  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
 11923  001C88  0E00               	movlw	0
 11924  001C8A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
 11925  001C8C  0E0B               	movlw	11
 11926  001C8E  6E14               	movwf	GameParameters_setBackLight@value^0,c
 11927  001C90  EC52  F02E         	call	_GameParameters_setBackLight	;wreg free
 11928  001C94  EF4C  F00E         	goto	l9490
 11929  001C98                     l676:
 11930  001C98                     l9490:
 11931                           
 11932                           ;stateMachine/gameController.c: 284:     g->sldParam.value=g->backlight;
 11933  001C98  C018  FFD9         	movff	backlightController@g,fsr2l
 11934  001C9C  C019  FFDA         	movff	backlightController@g+1,fsr2h
 11935  001CA0  EE10 F0A9          	lfsr	1,169
 11936  001CA4  5018               	movf	backlightController@g^0,w,c
 11937  001CA6  26E1               	addwf	fsr1l,f,c
 11938  001CA8  5019               	movf	(backlightController@g+1)^0,w,c
 11939  001CAA  22E2               	addwfc	fsr1h,f,c
 11940  001CAC  CFDE FFE6          	movff	postinc2,postinc1
 11941  001CB0  CFDD FFE5          	movff	postdec2,postdec1
 11942  001CB4  0012               	return		;funcret
 11943  001CB6                     __end_of_backlightController:
 11944                           	callstack 0
 11945                           
 11946 ;; *************** function _GameParameters_setBackLight *****************
 11947 ;; Defined at:
 11948 ;;		line 21 in file "class/gameParameters.c"
 11949 ;; Parameters:    Size  Location     Type
 11950 ;;  s               2   17[COMRAM] PTR struct GameParameter
 11951 ;;		 -> g1(201), 
 11952 ;;  value           2   19[COMRAM] unsigned short 
 11953 ;; Auto vars:     Size  Location     Type
 11954 ;;		None
 11955 ;; Return value:  Size  Location     Type
 11956 ;;                  1    wreg      void 
 11957 ;; Registers used:
 11958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11959 ;; Tracked objects:
 11960 ;;		On entry : 0/0
 11961 ;;		On exit  : 0/0
 11962 ;;		Unchanged: 0/0
 11963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11964 ;;      Params:         4       0       0       0       0       0       0
 11965 ;;      Locals:         0       0       0       0       0       0       0
 11966 ;;      Temps:          2       0       0       0       0       0       0
 11967 ;;      Totals:         6       0       0       0       0       0       0
 11968 ;;Total ram usage:        6 bytes
 11969 ;; Hardware stack levels used: 1
 11970 ;; Hardware stack levels required when called: 4
 11971 ;; This function calls:
 11972 ;;		Nothing
 11973 ;; This function is called by:
 11974 ;;		_backlightController
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           	psect	text46
 11979  005CA4                     __ptext46:
 11980                           	callstack 0
 11981  005CA4                     _GameParameters_setBackLight:
 11982                           	callstack 21
 11983  005CA4                     
 11984                           ;class/gameParameters.c: 21: void GameParameters_setBackLight(struct GameParameters* s, 
      +                          uint16_t value);class/gameParameters.c: 22: {;class/gameParameters.c: 23:     s->backlig
      +                          ht = value;
 11985  005CA4  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
 11986  005CA8  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
 11987  005CAC  C014  FFDE         	movff	GameParameters_setBackLight@value,postinc2
 11988  005CB0  C015  FFDD         	movff	GameParameters_setBackLight@value+1,postdec2
 11989  005CB4                     
 11990                           ;class/gameParameters.c: 24:     if(s->backlight==11)
 11991  005CB4  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
 11992  005CB8  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
 11993  005CBC  0E0B               	movlw	11
 11994  005CBE  18DE               	xorwf	postinc2,w,c
 11995  005CC0  10DE               	iorwf	postinc2,w,c
 11996  005CC2  A4D8               	btfss	status,2,c
 11997  005CC4  EF66  F02E         	goto	u6301
 11998  005CC8  EF68  F02E         	goto	u6300
 11999  005CCC                     u6301:
 12000  005CCC  EF6B  F02E         	goto	l9160
 12001  005CD0                     u6300:
 12002  005CD0                     
 12003                           ;class/gameParameters.c: 25:     {;class/gameParameters.c: 26:         CCPR2L = 255;
 12004  005CD0  6867               	setf	103,c	;volatile
 12005                           
 12006                           ;class/gameParameters.c: 27:     }
 12007  005CD2  EF73  F02E         	goto	l134
 12008  005CD6                     l9160:
 12009                           
 12010                           ;class/gameParameters.c: 29:     {;class/gameParameters.c: 30:         CCPR2L=(s->backli
      +                          ght)*23;
 12011  005CD6  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
 12012  005CDA  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
 12013  005CDE  50DF               	movf	indf2,w,c
 12014  005CE0  0D17               	mullw	23
 12015  005CE2  CFF3 FF67          	movff	prodl,3943	;volatile
 12016  005CE6                     l134:
 12017  005CE6  0012               	return		;funcret
 12018  005CE8                     __end_of_GameParameters_setBackLight:
 12019                           	callstack 0
 12020                           
 12021 ;; *************** function _XF_pushEvent *****************
 12022 ;; Defined at:
 12023 ;;		line 49 in file "xf/xf.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;  ev              1    wreg     unsigned char 
 12026 ;;  inISR           1   23[COMRAM] _Bool 
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;  ev              1   24[COMRAM] unsigned char 
 12029 ;;  temp            1   25[COMRAM] unsigned char 
 12030 ;; Return value:  Size  Location     Type
 12031 ;;                  1    wreg      _Bool 
 12032 ;; Registers used:
 12033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12034 ;; Tracked objects:
 12035 ;;		On entry : 0/0
 12036 ;;		On exit  : 0/0
 12037 ;;		Unchanged: 0/0
 12038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12039 ;;      Params:         1       0       0       0       0       0       0
 12040 ;;      Locals:         2       0       0       0       0       0       0
 12041 ;;      Temps:          0       0       0       0       0       0       0
 12042 ;;      Totals:         3       0       0       0       0       0       0
 12043 ;;Total ram usage:        3 bytes
 12044 ;; Hardware stack levels used: 1
 12045 ;; Hardware stack levels required when called: 5
 12046 ;; This function calls:
 12047 ;;		_ENTERCRITICAL
 12048 ;;		_LEAVECRITICAL
 12049 ;;		___awmod
 12050 ;; This function is called by:
 12051 ;;		_gameControllerController
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           
 12055                           	psect	text47
 12056  0058DE                     __ptext47:
 12057                           	callstack 0
 12058  0058DE                     _XF_pushEvent:
 12059                           	callstack 21
 12060                           
 12061                           ;incstack = 0
 12062                           ;XF_pushEvent@ev stored from wreg
 12063  0058DE  6E19               	movwf	XF_pushEvent@ev^0,c
 12064  0058E0                     
 12065                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 12066  0058E0  5018               	movf	XF_pushEvent@inISR^0,w,c
 12067  0058E2  EC73  F02F         	call	_ENTERCRITICAL
 12068  0058E6                     
 12069                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 12070  0058E6  0E01               	movlw	1
 12071  0058E8  0100               	movlb	0	; () banked
 12072  0058EA  25D9               	addwf	(_theXF+36)& (0+255),w,b
 12073  0058EC  6E12               	movwf	___awmod@dividend^0,c
 12074  0058EE  6A13               	clrf	(___awmod@dividend+1)^0,c
 12075  0058F0  0E00               	movlw	0
 12076  0058F2  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 12077  0058F4  0E00               	movlw	0
 12078  0058F6  6E15               	movwf	(___awmod@divisor+1)^0,c
 12079  0058F8  0E0C               	movlw	12
 12080  0058FA  6E14               	movwf	___awmod@divisor^0,c
 12081  0058FC  EC7A  F028         	call	___awmod	;wreg free
 12082  005900  5012               	movf	?___awmod^0,w,c
 12083  005902  6E1A               	movwf	XF_pushEvent@temp^0,c
 12084  005904                     
 12085                           ;xf/xf.c: 55:     if(temp == theXF.out)
 12086  005904  501A               	movf	XF_pushEvent@temp^0,w,c
 12087  005906  0100               	movlb	0	; () banked
 12088  005908  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 12089  00590A  A4D8               	btfss	status,2,c
 12090  00590C  EF8A  F02C         	goto	u6551
 12091  005910  EF8C  F02C         	goto	u6550
 12092  005914                     u6551:
 12093  005914  EF92  F02C         	goto	l9408
 12094  005918                     u6550:
 12095  005918                     
 12096                           ; BSR set to: 0
 12097                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 12098  005918  5018               	movf	XF_pushEvent@inISR^0,w,c
 12099  00591A  EC68  F02F         	call	_LEAVECRITICAL
 12100  00591E                     
 12101                           ;xf/xf.c: 58:       return 0;
 12102  00591E  0E00               	movlw	0
 12103  005920  EFA0  F02C         	goto	l701
 12104  005924                     l9408:
 12105                           
 12106                           ; BSR set to: 0
 12107                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 12108  005924  0ECD               	movlw	low (_theXF+24)
 12109  005926  25D9               	addwf	(_theXF+36)& (0+255),w,b
 12110  005928  6ED9               	movwf	fsr2l,c
 12111  00592A  6ADA               	clrf	fsr2h,c
 12112  00592C  0E00               	movlw	high (_theXF+24)
 12113  00592E  22DA               	addwfc	fsr2h,f,c
 12114  005930  C019  FFDF         	movff	XF_pushEvent@ev,indf2
 12115  005934                     
 12116                           ; BSR set to: 0
 12117                           ;xf/xf.c: 61:     theXF.in = temp;
 12118  005934  C01A  F0D9         	movff	XF_pushEvent@temp,_theXF+36
 12119  005938                     
 12120                           ; BSR set to: 0
 12121                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 12122  005938  5018               	movf	XF_pushEvent@inISR^0,w,c
 12123  00593A  EC68  F02F         	call	_LEAVECRITICAL
 12124  00593E                     
 12125                           ;xf/xf.c: 63:     return 1;
 12126  00593E  0E01               	movlw	1
 12127  005940                     l701:
 12128  005940  0012               	return		;funcret
 12129  005942                     __end_of_XF_pushEvent:
 12130                           	callstack 0
 12131                           
 12132 ;; *************** function _LCD_InSlider *****************
 12133 ;; Defined at:
 12134 ;;		line 546 in file "libraries/lcd_highlevel.c"
 12135 ;; Parameters:    Size  Location     Type
 12136 ;;  slider          2   17[COMRAM] PTR struct .
 12137 ;;		 -> g1(201), 
 12138 ;;  posX            2   19[COMRAM] unsigned short 
 12139 ;;  posY            2   21[COMRAM] unsigned short 
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;		None
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  1    wreg      unsigned char 
 12144 ;; Registers used:
 12145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12146 ;; Tracked objects:
 12147 ;;		On entry : 0/0
 12148 ;;		On exit  : 0/0
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12151 ;;      Params:         6       0       0       0       0       0       0
 12152 ;;      Locals:         0       0       0       0       0       0       0
 12153 ;;      Temps:          4       0       0       0       0       0       0
 12154 ;;      Totals:        10       0       0       0       0       0       0
 12155 ;;Total ram usage:       10 bytes
 12156 ;; Hardware stack levels used: 1
 12157 ;; Hardware stack levels required when called: 4
 12158 ;; This function calls:
 12159 ;;		Nothing
 12160 ;; This function is called by:
 12161 ;;		_gameControllerController
 12162 ;; This function uses a non-reentrant model
 12163 ;;
 12164                           
 12165                           	psect	text48
 12166  004930                     __ptext48:
 12167                           	callstack 0
 12168  004930                     _LCD_InSlider:
 12169                           	callstack 22
 12170  004930                     
 12171                           ;libraries/lcd_highlevel.c: 546: uint8_t LCD_InSlider(sld_t * slider, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 547: {;libraries/lcd_highlevel.c: 549:   if(posX 
      +                          < slider->posX)
 12172  004930  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
 12173  004934  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
 12174  004938  50DE               	movf	postinc2,w,c
 12175  00493A  5C14               	subwf	LCD_InSlider@posX^0,w,c
 12176  00493C  50DE               	movf	postinc2,w,c
 12177  00493E  5815               	subwfb	(LCD_InSlider@posX+1)^0,w,c
 12178  004940  B0D8               	btfsc	status,0,c
 12179  004942  EFA5  F024         	goto	u6511
 12180  004946  EFA7  F024         	goto	u6510
 12181  00494A                     u6511:
 12182  00494A  EFAA  F024         	goto	l9374
 12183  00494E                     u6510:
 12184  00494E                     l9370:
 12185                           
 12186                           ;libraries/lcd_highlevel.c: 550:   {;libraries/lcd_highlevel.c: 551:     return 0;
 12187  00494E  0E00               	movlw	0
 12188  004950  EF06  F025         	goto	l255
 12189  004954                     l9374:
 12190                           
 12191                           ;libraries/lcd_highlevel.c: 554:   if(posX > (slider->posX + slider->width))
 12192  004954  EE20 F004          	lfsr	2,4
 12193  004958  5012               	movf	LCD_InSlider@slider^0,w,c
 12194  00495A  26D9               	addwf	fsr2l,f,c
 12195  00495C  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 12196  00495E  22DA               	addwfc	fsr2h,f,c
 12197  004960  CFDE F018          	movff	postinc2,??_LCD_InSlider
 12198  004964  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
 12199  004968  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
 12200  00496C  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
 12201  004970  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
 12202  004974  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
 12203  004978  5018               	movf	??_LCD_InSlider^0,w,c
 12204  00497A  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
 12205  00497C  5019               	movf	(??_LCD_InSlider+1)^0,w,c
 12206  00497E  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
 12207  004980  5014               	movf	LCD_InSlider@posX^0,w,c
 12208  004982  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
 12209  004984  5015               	movf	(LCD_InSlider@posX+1)^0,w,c
 12210  004986  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
 12211  004988  B0D8               	btfsc	status,0,c
 12212  00498A  EFC9  F024         	goto	u6521
 12213  00498E  EFCB  F024         	goto	u6520
 12214  004992                     u6521:
 12215  004992  EFCD  F024         	goto	l9380
 12216  004996                     u6520:
 12217  004996  EFA7  F024         	goto	l9370
 12218  00499A                     l9380:
 12219                           
 12220                           ;libraries/lcd_highlevel.c: 559:   if(posY < slider->posY)
 12221  00499A  EE20 F002          	lfsr	2,2
 12222  00499E  5012               	movf	LCD_InSlider@slider^0,w,c
 12223  0049A0  26D9               	addwf	fsr2l,f,c
 12224  0049A2  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 12225  0049A4  22DA               	addwfc	fsr2h,f,c
 12226  0049A6  50DE               	movf	postinc2,w,c
 12227  0049A8  5C16               	subwf	LCD_InSlider@posY^0,w,c
 12228  0049AA  50DE               	movf	postinc2,w,c
 12229  0049AC  5817               	subwfb	(LCD_InSlider@posY+1)^0,w,c
 12230  0049AE  B0D8               	btfsc	status,0,c
 12231  0049B0  EFDC  F024         	goto	u6531
 12232  0049B4  EFDE  F024         	goto	u6530
 12233  0049B8                     u6531:
 12234  0049B8  EFE0  F024         	goto	l9386
 12235  0049BC                     u6530:
 12236  0049BC  EFA7  F024         	goto	l9370
 12237  0049C0                     l9386:
 12238                           
 12239                           ;libraries/lcd_highlevel.c: 564:   if(posY > (slider->posY + slider->height))
 12240  0049C0  EE20 F006          	lfsr	2,6
 12241  0049C4  5012               	movf	LCD_InSlider@slider^0,w,c
 12242  0049C6  26D9               	addwf	fsr2l,f,c
 12243  0049C8  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 12244  0049CA  22DA               	addwfc	fsr2h,f,c
 12245  0049CC  CFDE F018          	movff	postinc2,??_LCD_InSlider
 12246  0049D0  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
 12247  0049D4  EE20 F002          	lfsr	2,2
 12248  0049D8  5012               	movf	LCD_InSlider@slider^0,w,c
 12249  0049DA  26D9               	addwf	fsr2l,f,c
 12250  0049DC  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 12251  0049DE  22DA               	addwfc	fsr2h,f,c
 12252  0049E0  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
 12253  0049E4  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
 12254  0049E8  5018               	movf	??_LCD_InSlider^0,w,c
 12255  0049EA  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
 12256  0049EC  5019               	movf	(??_LCD_InSlider+1)^0,w,c
 12257  0049EE  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
 12258  0049F0  5016               	movf	LCD_InSlider@posY^0,w,c
 12259  0049F2  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
 12260  0049F4  5017               	movf	(LCD_InSlider@posY+1)^0,w,c
 12261  0049F6  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
 12262  0049F8  B0D8               	btfsc	status,0,c
 12263  0049FA  EF01  F025         	goto	u6541
 12264  0049FE  EF03  F025         	goto	u6540
 12265  004A02                     u6541:
 12266  004A02  EF05  F025         	goto	l9392
 12267  004A06                     u6540:
 12268  004A06  EFA7  F024         	goto	l9370
 12269  004A0A                     l9392:
 12270                           
 12271                           ;libraries/lcd_highlevel.c: 568:   return 1;
 12272  004A0A  0E01               	movlw	1
 12273  004A0C                     l255:
 12274  004A0C  0012               	return		;funcret
 12275  004A0E                     __end_of_LCD_InSlider:
 12276                           	callstack 0
 12277                           
 12278 ;; *************** function _LCD_InButton *****************
 12279 ;; Defined at:
 12280 ;;		line 514 in file "libraries/lcd_highlevel.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  button          2   17[COMRAM] PTR struct .
 12283 ;;		 -> g1(201), 
 12284 ;;  posX            2   19[COMRAM] unsigned short 
 12285 ;;  posY            2   21[COMRAM] unsigned short 
 12286 ;; Auto vars:     Size  Location     Type
 12287 ;;		None
 12288 ;; Return value:  Size  Location     Type
 12289 ;;                  1    wreg      unsigned char 
 12290 ;; Registers used:
 12291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12297 ;;      Params:         6       0       0       0       0       0       0
 12298 ;;      Locals:         0       0       0       0       0       0       0
 12299 ;;      Temps:          4       0       0       0       0       0       0
 12300 ;;      Totals:        10       0       0       0       0       0       0
 12301 ;;Total ram usage:       10 bytes
 12302 ;; Hardware stack levels used: 1
 12303 ;; Hardware stack levels required when called: 4
 12304 ;; This function calls:
 12305 ;;		Nothing
 12306 ;; This function is called by:
 12307 ;;		_gameControllerController
 12308 ;;		_moovePaddle
 12309 ;; This function uses a non-reentrant model
 12310 ;;
 12311                           
 12312                           	psect	text49
 12313  004A0E                     __ptext49:
 12314                           	callstack 0
 12315  004A0E                     _LCD_InButton:
 12316                           	callstack 22
 12317  004A0E                     
 12318                           ;libraries/lcd_highlevel.c: 514: uint8_t LCD_InButton(btn_t * button, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 515: {;libraries/lcd_highlevel.c: 517:   if(posX 
      +                          < button->posX)
 12319  004A0E  C012  FFD9         	movff	LCD_InButton@button,fsr2l
 12320  004A12  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
 12321  004A16  50DE               	movf	postinc2,w,c
 12322  004A18  5C14               	subwf	LCD_InButton@posX^0,w,c
 12323  004A1A  50DE               	movf	postinc2,w,c
 12324  004A1C  5815               	subwfb	(LCD_InButton@posX+1)^0,w,c
 12325  004A1E  B0D8               	btfsc	status,0,c
 12326  004A20  EF14  F025         	goto	u6471
 12327  004A24  EF16  F025         	goto	u6470
 12328  004A28                     u6471:
 12329  004A28  EF19  F025         	goto	l9346
 12330  004A2C                     u6470:
 12331  004A2C                     l9342:
 12332                           
 12333                           ;libraries/lcd_highlevel.c: 518:   {;libraries/lcd_highlevel.c: 519:     return 0;
 12334  004A2C  0E00               	movlw	0
 12335  004A2E  EF75  F025         	goto	l248
 12336  004A32                     l9346:
 12337                           
 12338                           ;libraries/lcd_highlevel.c: 522:   if(posX > (button->posX + button->width))
 12339  004A32  EE20 F004          	lfsr	2,4
 12340  004A36  5012               	movf	LCD_InButton@button^0,w,c
 12341  004A38  26D9               	addwf	fsr2l,f,c
 12342  004A3A  5013               	movf	(LCD_InButton@button+1)^0,w,c
 12343  004A3C  22DA               	addwfc	fsr2h,f,c
 12344  004A3E  CFDE F018          	movff	postinc2,??_LCD_InButton
 12345  004A42  CFDD F019          	movff	postdec2,??_LCD_InButton+1
 12346  004A46  C012  FFD9         	movff	LCD_InButton@button,fsr2l
 12347  004A4A  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
 12348  004A4E  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
 12349  004A52  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
 12350  004A56  5018               	movf	??_LCD_InButton^0,w,c
 12351  004A58  261A               	addwf	(??_LCD_InButton+2)^0,f,c
 12352  004A5A  5019               	movf	(??_LCD_InButton+1)^0,w,c
 12353  004A5C  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
 12354  004A5E  5014               	movf	LCD_InButton@posX^0,w,c
 12355  004A60  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
 12356  004A62  5015               	movf	(LCD_InButton@posX+1)^0,w,c
 12357  004A64  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
 12358  004A66  B0D8               	btfsc	status,0,c
 12359  004A68  EF38  F025         	goto	u6481
 12360  004A6C  EF3A  F025         	goto	u6480
 12361  004A70                     u6481:
 12362  004A70  EF3C  F025         	goto	l9352
 12363  004A74                     u6480:
 12364  004A74  EF16  F025         	goto	l9342
 12365  004A78                     l9352:
 12366                           
 12367                           ;libraries/lcd_highlevel.c: 527:   if(posY < button->posY)
 12368  004A78  EE20 F002          	lfsr	2,2
 12369  004A7C  5012               	movf	LCD_InButton@button^0,w,c
 12370  004A7E  26D9               	addwf	fsr2l,f,c
 12371  004A80  5013               	movf	(LCD_InButton@button+1)^0,w,c
 12372  004A82  22DA               	addwfc	fsr2h,f,c
 12373  004A84  50DE               	movf	postinc2,w,c
 12374  004A86  5C16               	subwf	LCD_InButton@posY^0,w,c
 12375  004A88  50DE               	movf	postinc2,w,c
 12376  004A8A  5817               	subwfb	(LCD_InButton@posY+1)^0,w,c
 12377  004A8C  B0D8               	btfsc	status,0,c
 12378  004A8E  EF4B  F025         	goto	u6491
 12379  004A92  EF4D  F025         	goto	u6490
 12380  004A96                     u6491:
 12381  004A96  EF4F  F025         	goto	l9358
 12382  004A9A                     u6490:
 12383  004A9A  EF16  F025         	goto	l9342
 12384  004A9E                     l9358:
 12385                           
 12386                           ;libraries/lcd_highlevel.c: 532:   if(posY > (button->posY + button->height))
 12387  004A9E  EE20 F006          	lfsr	2,6
 12388  004AA2  5012               	movf	LCD_InButton@button^0,w,c
 12389  004AA4  26D9               	addwf	fsr2l,f,c
 12390  004AA6  5013               	movf	(LCD_InButton@button+1)^0,w,c
 12391  004AA8  22DA               	addwfc	fsr2h,f,c
 12392  004AAA  CFDE F018          	movff	postinc2,??_LCD_InButton
 12393  004AAE  CFDD F019          	movff	postdec2,??_LCD_InButton+1
 12394  004AB2  EE20 F002          	lfsr	2,2
 12395  004AB6  5012               	movf	LCD_InButton@button^0,w,c
 12396  004AB8  26D9               	addwf	fsr2l,f,c
 12397  004ABA  5013               	movf	(LCD_InButton@button+1)^0,w,c
 12398  004ABC  22DA               	addwfc	fsr2h,f,c
 12399  004ABE  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
 12400  004AC2  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
 12401  004AC6  5018               	movf	??_LCD_InButton^0,w,c
 12402  004AC8  261A               	addwf	(??_LCD_InButton+2)^0,f,c
 12403  004ACA  5019               	movf	(??_LCD_InButton+1)^0,w,c
 12404  004ACC  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
 12405  004ACE  5016               	movf	LCD_InButton@posY^0,w,c
 12406  004AD0  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
 12407  004AD2  5017               	movf	(LCD_InButton@posY+1)^0,w,c
 12408  004AD4  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
 12409  004AD6  B0D8               	btfsc	status,0,c
 12410  004AD8  EF70  F025         	goto	u6501
 12411  004ADC  EF72  F025         	goto	u6500
 12412  004AE0                     u6501:
 12413  004AE0  EF74  F025         	goto	l9364
 12414  004AE4                     u6500:
 12415  004AE4  EF16  F025         	goto	l9342
 12416  004AE8                     l9364:
 12417                           
 12418                           ;libraries/lcd_highlevel.c: 536:   return 1;
 12419  004AE8  0E01               	movlw	1
 12420  004AEA                     l248:
 12421  004AEA  0012               	return		;funcret
 12422  004AEC                     __end_of_LCD_InButton:
 12423                           	callstack 0
 12424                           
 12425 ;; *************** function _GameParameters_resetPos *****************
 12426 ;; Defined at:
 12427 ;;		line 41 in file "class/gameParameters.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  s               2   17[COMRAM] PTR struct GameParameter
 12430 ;;		 -> g1(201), 
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;		None
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12442 ;;      Params:         2       0       0       0       0       0       0
 12443 ;;      Locals:         0       0       0       0       0       0       0
 12444 ;;      Temps:          0       0       0       0       0       0       0
 12445 ;;      Totals:         2       0       0       0       0       0       0
 12446 ;;Total ram usage:        2 bytes
 12447 ;; Hardware stack levels used: 1
 12448 ;; Hardware stack levels required when called: 4
 12449 ;; This function calls:
 12450 ;;		Nothing
 12451 ;; This function is called by:
 12452 ;;		_gameControllerController
 12453 ;;		_moovePaddle
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           	psect	text50
 12458  005DCC                     __ptext50:
 12459                           	callstack 0
 12460  005DCC                     _GameParameters_resetPos:
 12461                           	callstack 22
 12462  005DCC                     
 12463                           ;class/gameParameters.c: 41: void GameParameters_resetPos(struct GameParameters* s);clas
      +                          s/gameParameters.c: 42: {;class/gameParameters.c: 43:     s->x=0;
 12464  005DCC  EE20 F004          	lfsr	2,4
 12465  005DD0  5012               	movf	GameParameters_resetPos@s^0,w,c
 12466  005DD2  26D9               	addwf	fsr2l,f,c
 12467  005DD4  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
 12468  005DD6  22DA               	addwfc	fsr2h,f,c
 12469  005DD8  0E00               	movlw	0
 12470  005DDA  6EDE               	movwf	postinc2,c
 12471  005DDC  0E00               	movlw	0
 12472  005DDE  6EDD               	movwf	postdec2,c
 12473                           
 12474                           ;class/gameParameters.c: 44:     s->y=0;
 12475  005DE0  EE20 F006          	lfsr	2,6
 12476  005DE4  5012               	movf	GameParameters_resetPos@s^0,w,c
 12477  005DE6  26D9               	addwf	fsr2l,f,c
 12478  005DE8  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
 12479  005DEA  22DA               	addwfc	fsr2h,f,c
 12480  005DEC  0E00               	movlw	0
 12481  005DEE  6EDE               	movwf	postinc2,c
 12482  005DF0  0E00               	movlw	0
 12483  005DF2  6EDD               	movwf	postdec2,c
 12484  005DF4  0012               	return		;funcret
 12485  005DF6                     __end_of_GameParameters_resetPos:
 12486                           	callstack 0
 12487                           
 12488 ;; *************** function _displaySM *****************
 12489 ;; Defined at:
 12490 ;;		line 18 in file "stateMachine/display.c"
 12491 ;; Parameters:    Size  Location     Type
 12492 ;;  ev              1    wreg     unsigned char 
 12493 ;;  g               2   64[BANK0 ] PTR struct GameParameter
 12494 ;;		 -> g1(201), 
 12495 ;; Auto vars:     Size  Location     Type
 12496 ;;  ev              1   68[BANK0 ] unsigned char 
 12497 ;; Return value:  Size  Location     Type
 12498 ;;                  1    wreg      void 
 12499 ;; Registers used:
 12500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12501 ;; Tracked objects:
 12502 ;;		On entry : 0/0
 12503 ;;		On exit  : 0/0
 12504 ;;		Unchanged: 0/0
 12505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12506 ;;      Params:         0       2       0       0       0       0       0
 12507 ;;      Locals:         0       1       0       0       0       0       0
 12508 ;;      Temps:          0       2       0       0       0       0       0
 12509 ;;      Totals:         0       5       0       0       0       0       0
 12510 ;;Total ram usage:        5 bytes
 12511 ;; Hardware stack levels used: 1
 12512 ;; Hardware stack levels required when called: 9
 12513 ;; This function calls:
 12514 ;;		_displayController
 12515 ;; This function is called by:
 12516 ;;		_Factory_exec
 12517 ;; This function uses a non-reentrant model
 12518 ;;
 12519                           
 12520                           	psect	text51
 12521  004BB6                     __ptext51:
 12522                           	callstack 0
 12523  004BB6                     _displaySM:
 12524                           	callstack 20
 12525                           
 12526                           ;incstack = 0
 12527                           ;displaySM@ev stored from wreg
 12528  004BB6  0100               	movlb	0	; () banked
 12529  004BB8  6FA4               	movwf	displaySM@ev& (0+255),b
 12530  004BBA                     
 12531                           ;stateMachine/display.c: 18: void displaySM(Event ev, GameParameters* g);stateMachine/di
      +                          splay.c: 19: {;stateMachine/display.c: 20:    switch(displayState)
 12532  004BBA  EF25  F026         	goto	l10140
 12533  004BBE                     l10112:
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;stateMachine/display.c: 23:             if((ev==evOnePlayer)||(ev==evTwoPlayer))
 12537  004BBE  0E05               	movlw	5
 12538  004BC0  19A4               	xorwf	displaySM@ev& (0+255),w,b
 12539  004BC2  B4D8               	btfsc	status,2,c
 12540  004BC4  EFE6  F025         	goto	u7661
 12541  004BC8  EFE8  F025         	goto	u7660
 12542  004BCC                     u7661:
 12543  004BCC  EFF1  F025         	goto	l10116
 12544  004BD0                     u7660:
 12545  004BD0                     
 12546                           ; BSR set to: 0
 12547  004BD0  0E06               	movlw	6
 12548  004BD2  19A4               	xorwf	displaySM@ev& (0+255),w,b
 12549  004BD4  A4D8               	btfss	status,2,c
 12550  004BD6  EFEF  F025         	goto	u7671
 12551  004BDA  EFF1  F025         	goto	u7670
 12552  004BDE                     u7671:
 12553  004BDE  EFF9  F025         	goto	l10120
 12554  004BE2                     u7670:
 12555  004BE2                     l10116:
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;stateMachine/display.c: 24:             {;stateMachine/display.c: 25:                 d
      +                          isplayState=INGAME;
 12559  004BE2  0E02               	movlw	2
 12560  004BE4  6FDD               	movwf	_displayState& (0+255),b
 12561  004BE6                     
 12562                           ; BSR set to: 0
 12563                           ;stateMachine/display.c: 26:                 displayController(g);
 12564  004BE6  C0A0  F09E         	movff	displaySM@g,displayController@g
 12565  004BEA  C0A1  F09F         	movff	displaySM@g+1,displayController@g+1
 12566  004BEE  EC07  F02C         	call	_displayController	;wreg free
 12567  004BF2                     l10120:
 12568                           
 12569                           ;stateMachine/display.c: 28:             if(ev==evParameters)
 12570  004BF2  0E07               	movlw	7
 12571  004BF4  0100               	movlb	0	; () banked
 12572  004BF6  19A4               	xorwf	displaySM@ev& (0+255),w,b
 12573  004BF8  A4D8               	btfss	status,2,c
 12574  004BFA  EF01  F026         	goto	u7681
 12575  004BFE  EF03  F026         	goto	u7680
 12576  004C02                     u7681:
 12577  004C02  EF3F  F026         	goto	l543
 12578  004C06                     u7680:
 12579  004C06                     
 12580                           ; BSR set to: 0
 12581                           ;stateMachine/display.c: 29:             {;stateMachine/display.c: 30:                 d
      +                          isplayState=PARAMETERS;
 12582  004C06  0E01               	movlw	1
 12583  004C08  6FDD               	movwf	_displayState& (0+255),b
 12584  004C0A                     l10124:
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;stateMachine/display.c: 31:                 displayController(g);
 12588  004C0A  C0A0  F09E         	movff	displaySM@g,displayController@g
 12589  004C0E  C0A1  F09F         	movff	displaySM@g+1,displayController@g+1
 12590  004C12  EC07  F02C         	call	_displayController	;wreg free
 12591  004C16  EF3F  F026         	goto	l543
 12592  004C1A                     l10126:
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;stateMachine/display.c: 35:             if(ev==evLeaveParam)
 12596  004C1A  0E08               	movlw	8
 12597  004C1C  19A4               	xorwf	displaySM@ev& (0+255),w,b
 12598  004C1E  A4D8               	btfss	status,2,c
 12599  004C20  EF14  F026         	goto	u7691
 12600  004C24  EF16  F026         	goto	u7690
 12601  004C28                     u7691:
 12602  004C28  EF3F  F026         	goto	l543
 12603  004C2C                     u7690:
 12604  004C2C                     l10128:
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;stateMachine/display.c: 36:             {;stateMachine/display.c: 37:                 d
      +                          isplayState=WELCOME;
 12608  004C2C  0E00               	movlw	0
 12609  004C2E  6FDD               	movwf	_displayState& (0+255),b
 12610  004C30  EF05  F026         	goto	l10124
 12611  004C34                     l10132:
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;stateMachine/display.c: 42:             if(ev==evNewGame)
 12615  004C34  0E09               	movlw	9
 12616  004C36  19A4               	xorwf	displaySM@ev& (0+255),w,b
 12617  004C38  A4D8               	btfss	status,2,c
 12618  004C3A  EF21  F026         	goto	u7701
 12619  004C3E  EF23  F026         	goto	u7700
 12620  004C42                     u7701:
 12621  004C42  EF3F  F026         	goto	l543
 12622  004C46                     u7700:
 12623  004C46  EF16  F026         	goto	l10128
 12624  004C4A                     l10140:
 12625  004C4A  0100               	movlb	0	; () banked
 12626  004C4C  51DD               	movf	_displayState& (0+255),w,b
 12627  004C4E  6FA2               	movwf	??_displaySM& (0+255),b
 12628  004C50  6BA3               	clrf	(??_displaySM+1)& (0+255),b
 12629                           
 12630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12631                           ; Switch size 1, requested type "simple"
 12632                           ; Number of cases is 1, Range of values is 0 to 0
 12633                           ; switch strategies available:
 12634                           ; Name         Instructions Cycles
 12635                           ; simple_byte            4     3 (average)
 12636                           ;	Chosen strategy is simple_byte
 12637  004C52  51A3               	movf	(??_displaySM+1)& (0+255),w,b
 12638  004C54  0A00               	xorlw	0	; case 0
 12639  004C56  B4D8               	btfsc	status,2,c
 12640  004C58  EF30  F026         	goto	l10486
 12641  004C5C  EF3F  F026         	goto	l543
 12642  004C60                     l10486:
 12643                           
 12644                           ; BSR set to: 0
 12645                           ; Switch size 1, requested type "simple"
 12646                           ; Number of cases is 3, Range of values is 0 to 2
 12647                           ; switch strategies available:
 12648                           ; Name         Instructions Cycles
 12649                           ; simple_byte           10     6 (average)
 12650                           ;	Chosen strategy is simple_byte
 12651  004C60  51A2               	movf	??_displaySM& (0+255),w,b
 12652  004C62  0A00               	xorlw	0	; case 0
 12653  004C64  B4D8               	btfsc	status,2,c
 12654  004C66  EFDF  F025         	goto	l10112
 12655  004C6A  0A01               	xorlw	1	; case 1
 12656  004C6C  B4D8               	btfsc	status,2,c
 12657  004C6E  EF0D  F026         	goto	l10126
 12658  004C72  0A03               	xorlw	3	; case 2
 12659  004C74  B4D8               	btfsc	status,2,c
 12660  004C76  EF1A  F026         	goto	l10132
 12661  004C7A  EF3F  F026         	goto	l543
 12662  004C7E                     l543:
 12663  004C7E  0012               	return		;funcret
 12664  004C80                     __end_of_displaySM:
 12665                           	callstack 0
 12666                           
 12667 ;; *************** function _displayController *****************
 12668 ;; Defined at:
 12669 ;;		line 52 in file "stateMachine/display.c"
 12670 ;; Parameters:    Size  Location     Type
 12671 ;;  g               2   62[BANK0 ] PTR struct GameParameter
 12672 ;;		 -> g1(201), 
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;		None
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12684 ;;      Params:         0       2       0       0       0       0       0
 12685 ;;      Locals:         0       0       0       0       0       0       0
 12686 ;;      Temps:          2       0       0       0       0       0       0
 12687 ;;      Totals:         2       2       0       0       0       0       0
 12688 ;;Total ram usage:        4 bytes
 12689 ;; Hardware stack levels used: 1
 12690 ;; Hardware stack levels required when called: 8
 12691 ;; This function calls:
 12692 ;;		_Menu_inGameDraw
 12693 ;;		_Menu_parametersDraw
 12694 ;;		_Menu_welcomeDraw
 12695 ;; This function is called by:
 12696 ;;		_displayInit
 12697 ;;		_displaySM
 12698 ;; This function uses a non-reentrant model
 12699 ;;
 12700                           
 12701                           	psect	text52
 12702  00580E                     __ptext52:
 12703                           	callstack 0
 12704  00580E                     _displayController:
 12705                           	callstack 19
 12706  00580E                     
 12707                           ;stateMachine/display.c: 52: void displayController(GameParameters* g);stateMachine/disp
      +                          lay.c: 53: {;stateMachine/display.c: 54:     switch(displayState)
 12708  00580E  EF21  F02C         	goto	l9590
 12709  005812                     l9582:
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;stateMachine/display.c: 58:             Menu_welcomeDraw(g);
 12713  005812  C09E  F09C         	movff	displayController@g,Menu_welcomeDraw@g
 12714  005816  C09F  F09D         	movff	displayController@g+1,Menu_welcomeDraw@g+1
 12715  00581A  EC1D  F02B         	call	_Menu_welcomeDraw	;wreg free
 12716                           
 12717                           ;stateMachine/display.c: 59:             break;
 12718  00581E  EF3B  F02C         	goto	l552
 12719  005822                     l9584:
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;stateMachine/display.c: 62:             Menu_parametersDraw(g);
 12723  005822  C09E  F09C         	movff	displayController@g,Menu_parametersDraw@g
 12724  005826  C09F  F09D         	movff	displayController@g+1,Menu_parametersDraw@g+1
 12725  00582A  EC9D  F02A         	call	_Menu_parametersDraw	;wreg free
 12726                           
 12727                           ;stateMachine/display.c: 63:             break;
 12728  00582E  EF3B  F02C         	goto	l552
 12729  005832                     l9586:
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;stateMachine/display.c: 68:             Menu_inGameDraw(g);
 12733  005832  C09E  F09C         	movff	displayController@g,Menu_inGameDraw@g
 12734  005836  C09F  F09D         	movff	displayController@g+1,Menu_inGameDraw@g+1
 12735  00583A  EC3C  F02C         	call	_Menu_inGameDraw	;wreg free
 12736                           
 12737                           ;stateMachine/display.c: 69:             break;
 12738  00583E  EF3B  F02C         	goto	l552
 12739  005842                     l9590:
 12740  005842  0100               	movlb	0	; () banked
 12741  005844  51DD               	movf	_displayState& (0+255),w,b
 12742  005846  6E45               	movwf	??_displayController^0,c
 12743  005848  6A46               	clrf	(??_displayController+1)^0,c
 12744                           
 12745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12746                           ; Switch size 1, requested type "simple"
 12747                           ; Number of cases is 1, Range of values is 0 to 0
 12748                           ; switch strategies available:
 12749                           ; Name         Instructions Cycles
 12750                           ; simple_byte            4     3 (average)
 12751                           ;	Chosen strategy is simple_byte
 12752  00584A  5046               	movf	(??_displayController+1)^0,w,c
 12753  00584C  0A00               	xorlw	0	; case 0
 12754  00584E  B4D8               	btfsc	status,2,c
 12755  005850  EF2C  F02C         	goto	l10488
 12756  005854  EF3B  F02C         	goto	l552
 12757  005858                     l10488:
 12758                           
 12759                           ; BSR set to: 0
 12760                           ; Switch size 1, requested type "simple"
 12761                           ; Number of cases is 3, Range of values is 0 to 2
 12762                           ; switch strategies available:
 12763                           ; Name         Instructions Cycles
 12764                           ; simple_byte           10     6 (average)
 12765                           ;	Chosen strategy is simple_byte
 12766  005858  5045               	movf	??_displayController^0,w,c
 12767  00585A  0A00               	xorlw	0	; case 0
 12768  00585C  B4D8               	btfsc	status,2,c
 12769  00585E  EF09  F02C         	goto	l9582
 12770  005862  0A01               	xorlw	1	; case 1
 12771  005864  B4D8               	btfsc	status,2,c
 12772  005866  EF11  F02C         	goto	l9584
 12773  00586A  0A03               	xorlw	3	; case 2
 12774  00586C  B4D8               	btfsc	status,2,c
 12775  00586E  EF19  F02C         	goto	l9586
 12776  005872  EF3B  F02C         	goto	l552
 12777  005876                     l552:
 12778  005876  0012               	return		;funcret
 12779  005878                     __end_of_displayController:
 12780                           	callstack 0
 12781                           
 12782 ;; *************** function _Menu_welcomeDraw *****************
 12783 ;; Defined at:
 12784 ;;		line 3 in file "class/menu.c"
 12785 ;; Parameters:    Size  Location     Type
 12786 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12787 ;;		 -> g1(201), 
 12788 ;; Auto vars:     Size  Location     Type
 12789 ;;		None
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  1    wreg      void 
 12792 ;; Registers used:
 12793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12799 ;;      Params:         0       2       0       0       0       0       0
 12800 ;;      Locals:         0       0       0       0       0       0       0
 12801 ;;      Temps:          0       0       0       0       0       0       0
 12802 ;;      Totals:         0       2       0       0       0       0       0
 12803 ;;Total ram usage:        2 bytes
 12804 ;; Hardware stack levels used: 1
 12805 ;; Hardware stack levels required when called: 7
 12806 ;; This function calls:
 12807 ;;		_LCD_ButtonDraw
 12808 ;;		_LCD_DrawText
 12809 ;;		_LCD_Fill
 12810 ;; This function is called by:
 12811 ;;		_displayController
 12812 ;; This function uses a non-reentrant model
 12813 ;;
 12814                           
 12815                           	psect	text53
 12816  00563A                     __ptext53:
 12817                           	callstack 0
 12818  00563A                     _Menu_welcomeDraw:
 12819                           	callstack 19
 12820  00563A                     
 12821                           ;class/menu.c: 3: void Menu_welcomeDraw(GameParameters* g);class/menu.c: 4: {;class/menu
      +                          .c: 5:     LCD_Fill(0b1111111111111111);
 12822  00563A  0EFF               	movlw	255
 12823  00563C  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12824  00563E  6812               	setf	LCD_Fill@color^0,c
 12825  005640  EC03  F027         	call	_LCD_Fill	;wreg free
 12826  005644                     
 12827                           ;class/menu.c: 6:     LCD_DrawText("WELCOME",&arialNarrow_12ptFontInfo,A_CENTER,50,50,0b
      +                          0000000000000000,0b1111111111111111);
 12828  005644  0EDA               	movlw	low STR_8
 12829  005646  6E20               	movwf	LCD_DrawText@msg^0,c
 12830  005648  0E7F               	movlw	high STR_8
 12831  00564A  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12832  00564C  0EA1               	movlw	low _arialNarrow_12ptFontInfo
 12833  00564E  6E22               	movwf	LCD_DrawText@font^0,c
 12834  005650  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12835  005652  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12836  005654  0E02               	movlw	2
 12837  005656  6E24               	movwf	LCD_DrawText@align^0,c
 12838  005658  0E00               	movlw	0
 12839  00565A  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12840  00565C  0E32               	movlw	50
 12841  00565E  6E25               	movwf	LCD_DrawText@posX^0,c
 12842  005660  0E00               	movlw	0
 12843  005662  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12844  005664  0E32               	movlw	50
 12845  005666  6E27               	movwf	LCD_DrawText@posY^0,c
 12846  005668  0E00               	movlw	0
 12847  00566A  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12848  00566C  0E00               	movlw	0
 12849  00566E  6E29               	movwf	LCD_DrawText@color^0,c
 12850  005670  0EFF               	movlw	255
 12851  005672  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12852  005674  682B               	setf	LCD_DrawText@bg_color^0,c
 12853  005676  EC5B  F00E         	call	_LCD_DrawText	;wreg free
 12854  00567A                     
 12855                           ;class/menu.c: 7:     LCD_ButtonDraw(&(g->btnParam));
 12856  00567A  0E08               	movlw	8
 12857  00567C  0100               	movlb	0	; () banked
 12858  00567E  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 12859  005680  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12860  005682  0E00               	movlw	0
 12861  005684  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 12862  005686  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12863  005688  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 12864  00568C                     
 12865                           ;class/menu.c: 8:     LCD_ButtonDraw(&(g->btnOnePlayer));
 12866  00568C  0E20               	movlw	32
 12867  00568E  0100               	movlb	0	; () banked
 12868  005690  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 12869  005692  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12870  005694  0E00               	movlw	0
 12871  005696  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 12872  005698  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12873  00569A  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 12874  00569E                     
 12875                           ;class/menu.c: 9:     LCD_ButtonDraw(&(g->btnTwoPlayer));
 12876  00569E  0E38               	movlw	56
 12877  0056A0  0100               	movlb	0	; () banked
 12878  0056A2  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 12879  0056A4  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12880  0056A6  0E00               	movlw	0
 12881  0056A8  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 12882  0056AA  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12883  0056AC  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 12884  0056B0  0012               	return		;funcret
 12885  0056B2                     __end_of_Menu_welcomeDraw:
 12886                           	callstack 0
 12887                           
 12888 ;; *************** function _Menu_parametersDraw *****************
 12889 ;; Defined at:
 12890 ;;		line 11 in file "class/menu.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12893 ;;		 -> g1(201), 
 12894 ;; Auto vars:     Size  Location     Type
 12895 ;;		None
 12896 ;; Return value:  Size  Location     Type
 12897 ;;                  1    wreg      void 
 12898 ;; Registers used:
 12899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12900 ;; Tracked objects:
 12901 ;;		On entry : 0/0
 12902 ;;		On exit  : 0/0
 12903 ;;		Unchanged: 0/0
 12904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12905 ;;      Params:         0       2       0       0       0       0       0
 12906 ;;      Locals:         0       0       0       0       0       0       0
 12907 ;;      Temps:          0       0       0       0       0       0       0
 12908 ;;      Totals:         0       2       0       0       0       0       0
 12909 ;;Total ram usage:        2 bytes
 12910 ;; Hardware stack levels used: 1
 12911 ;; Hardware stack levels required when called: 7
 12912 ;; This function calls:
 12913 ;;		_LCD_ButtonDraw
 12914 ;;		_LCD_DrawText
 12915 ;;		_LCD_Fill
 12916 ;;		_LCD_SliderDraw
 12917 ;; This function is called by:
 12918 ;;		_displayController
 12919 ;; This function uses a non-reentrant model
 12920 ;;
 12921                           
 12922                           	psect	text54
 12923  00553A                     __ptext54:
 12924                           	callstack 0
 12925  00553A                     _Menu_parametersDraw:
 12926                           	callstack 19
 12927  00553A                     
 12928                           ;class/menu.c: 11: void Menu_parametersDraw(GameParameters* g);class/menu.c: 12: {;class
      +                          /menu.c: 13:     LCD_Fill(0b1111111111111111);
 12929  00553A  0EFF               	movlw	255
 12930  00553C  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12931  00553E  6812               	setf	LCD_Fill@color^0,c
 12932  005540  EC03  F027         	call	_LCD_Fill	;wreg free
 12933  005544                     
 12934                           ;class/menu.c: 14:     LCD_DrawText("PARAMETERS",&arialNarrow_12ptFontInfo,A_CENTER,50,5
      +                          0,0b0000000000000000,0b1111111111111111);
 12935  005544  0EA8               	movlw	low STR_9
 12936  005546  6E20               	movwf	LCD_DrawText@msg^0,c
 12937  005548  0E7F               	movlw	high STR_9
 12938  00554A  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12939  00554C  0EA1               	movlw	low _arialNarrow_12ptFontInfo
 12940  00554E  6E22               	movwf	LCD_DrawText@font^0,c
 12941  005550  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12942  005552  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12943  005554  0E02               	movlw	2
 12944  005556  6E24               	movwf	LCD_DrawText@align^0,c
 12945  005558  0E00               	movlw	0
 12946  00555A  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12947  00555C  0E32               	movlw	50
 12948  00555E  6E25               	movwf	LCD_DrawText@posX^0,c
 12949  005560  0E00               	movlw	0
 12950  005562  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12951  005564  0E32               	movlw	50
 12952  005566  6E27               	movwf	LCD_DrawText@posY^0,c
 12953  005568  0E00               	movlw	0
 12954  00556A  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12955  00556C  0E00               	movlw	0
 12956  00556E  6E29               	movwf	LCD_DrawText@color^0,c
 12957  005570  0EFF               	movlw	255
 12958  005572  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12959  005574  682B               	setf	LCD_DrawText@bg_color^0,c
 12960  005576  EC5B  F00E         	call	_LCD_DrawText	;wreg free
 12961  00557A                     
 12962                           ;class/menu.c: 15:     LCD_ButtonDraw(&(g->btnLeaveParam));
 12963  00557A  0E50               	movlw	80
 12964  00557C  0100               	movlb	0	; () banked
 12965  00557E  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 12966  005580  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12967  005582  0E00               	movlw	0
 12968  005584  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 12969  005586  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12970  005588  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 12971  00558C                     
 12972                           ;class/menu.c: 16:     g->sldParam.value=g->backlight;
 12973  00558C  C09C  FFD9         	movff	Menu_parametersDraw@g,fsr2l
 12974  005590  C09D  FFDA         	movff	Menu_parametersDraw@g+1,fsr2h
 12975  005594  0100               	movlb	0	; () banked
 12976  005596  EE10 F0A9          	lfsr	1,169
 12977  00559A  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 12978  00559C  26E1               	addwf	fsr1l,f,c
 12979  00559E  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 12980  0055A0  22E2               	addwfc	fsr1h,f,c
 12981  0055A2  CFDE FFE6          	movff	postinc2,postinc1
 12982  0055A6  CFDD FFE5          	movff	postdec2,postdec1
 12983  0055AA                     
 12984                           ; BSR set to: 0
 12985                           ;class/menu.c: 17:     LCD_SliderDraw(&(g->sldParam));
 12986  0055AA  0E98               	movlw	152
 12987  0055AC  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 12988  0055AE  6E37               	movwf	LCD_SliderDraw@slider^0,c
 12989  0055B0  0E00               	movlw	0
 12990  0055B2  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 12991  0055B4  6E38               	movwf	(LCD_SliderDraw@slider+1)^0,c
 12992  0055B6  EC1D  F022         	call	_LCD_SliderDraw	;wreg free
 12993  0055BA  0012               	return		;funcret
 12994  0055BC                     __end_of_Menu_parametersDraw:
 12995                           	callstack 0
 12996                           
 12997 ;; *************** function _LCD_SliderDraw *****************
 12998 ;; Defined at:
 12999 ;;		line 371 in file "libraries/lcd_highlevel.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;  slider          2   54[COMRAM] PTR struct .
 13002 ;;		 -> g1(201), 
 13003 ;; Auto vars:     Size  Location     Type
 13004 ;;  y2              2   66[COMRAM] unsigned short 
 13005 ;;  y1              2   64[COMRAM] unsigned short 
 13006 ;;  x2              2   62[COMRAM] unsigned short 
 13007 ;;  x1              2   60[COMRAM] unsigned short 
 13008 ;; Return value:  Size  Location     Type
 13009 ;;                  1    wreg      void 
 13010 ;; Registers used:
 13011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13012 ;; Tracked objects:
 13013 ;;		On entry : 0/0
 13014 ;;		On exit  : 0/0
 13015 ;;		Unchanged: 0/0
 13016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13017 ;;      Params:         2       0       0       0       0       0       0
 13018 ;;      Locals:         8       0       0       0       0       0       0
 13019 ;;      Temps:          4       0       0       0       0       0       0
 13020 ;;      Totals:        14       0       0       0       0       0       0
 13021 ;;Total ram usage:       14 bytes
 13022 ;; Hardware stack levels used: 1
 13023 ;; Hardware stack levels required when called: 6
 13024 ;; This function calls:
 13025 ;;		_LCD_DrawRect
 13026 ;;		_LCD_SliderUpdate
 13027 ;; This function is called by:
 13028 ;;		_Menu_parametersDraw
 13029 ;; This function uses a non-reentrant model
 13030 ;;
 13031                           
 13032                           	psect	text55
 13033  00443A                     __ptext55:
 13034                           	callstack 0
 13035  00443A                     _LCD_SliderDraw:
 13036                           	callstack 19
 13037  00443A                     
 13038                           ;libraries/lcd_highlevel.c: 371: void LCD_SliderDraw(sld_t * slider);libraries/lcd_highl
      +                          evel.c: 372: {;libraries/lcd_highlevel.c: 373:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 375:   x1 = slider->posX;
 13039  00443A  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 13040  00443E  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 13041  004442  CFDE F03D          	movff	postinc2,LCD_SliderDraw@x1
 13042  004446  CFDD F03E          	movff	postdec2,LCD_SliderDraw@x1+1
 13043  00444A                     
 13044                           ;libraries/lcd_highlevel.c: 376:   x2 = slider->posX + slider->width;
 13045  00444A  EE20 F004          	lfsr	2,4
 13046  00444E  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13047  004450  26D9               	addwf	fsr2l,f,c
 13048  004452  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13049  004454  22DA               	addwfc	fsr2h,f,c
 13050  004456  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 13051  00445A  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 13052  00445E  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 13053  004462  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 13054  004466  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 13055  00446A  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 13056  00446E  5039               	movf	??_LCD_SliderDraw^0,w,c
 13057  004470  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 13058  004472  6E3F               	movwf	LCD_SliderDraw@x2^0,c
 13059  004474  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 13060  004476  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 13061  004478  6E40               	movwf	(LCD_SliderDraw@x2+1)^0,c
 13062  00447A                     
 13063                           ;libraries/lcd_highlevel.c: 377:   y1 = slider->posY;
 13064  00447A  EE20 F002          	lfsr	2,2
 13065  00447E  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13066  004480  26D9               	addwf	fsr2l,f,c
 13067  004482  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13068  004484  22DA               	addwfc	fsr2h,f,c
 13069  004486  CFDE F041          	movff	postinc2,LCD_SliderDraw@y1
 13070  00448A  CFDD F042          	movff	postdec2,LCD_SliderDraw@y1+1
 13071  00448E                     
 13072                           ;libraries/lcd_highlevel.c: 378:   y2 = slider->posY + slider->height;
 13073  00448E  EE20 F006          	lfsr	2,6
 13074  004492  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13075  004494  26D9               	addwf	fsr2l,f,c
 13076  004496  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13077  004498  22DA               	addwfc	fsr2h,f,c
 13078  00449A  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 13079  00449E  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 13080  0044A2  EE20 F002          	lfsr	2,2
 13081  0044A6  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13082  0044A8  26D9               	addwf	fsr2l,f,c
 13083  0044AA  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13084  0044AC  22DA               	addwfc	fsr2h,f,c
 13085  0044AE  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 13086  0044B2  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 13087  0044B6  5039               	movf	??_LCD_SliderDraw^0,w,c
 13088  0044B8  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 13089  0044BA  6E43               	movwf	LCD_SliderDraw@y2^0,c
 13090  0044BC  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 13091  0044BE  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 13092  0044C0  6E44               	movwf	(LCD_SliderDraw@y2+1)^0,c
 13093  0044C2                     
 13094                           ;libraries/lcd_highlevel.c: 379:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->bgColor);
 13095  0044C2  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 13096  0044C6  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 13097  0044CA  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 13098  0044CE  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 13099  0044D2  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 13100  0044D6  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 13101  0044DA  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 13102  0044DE  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 13103  0044E2  0E01               	movlw	1
 13104  0044E4  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13105  0044E6  EE20 F00A          	lfsr	2,10
 13106  0044EA  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13107  0044EC  26D9               	addwf	fsr2l,f,c
 13108  0044EE  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13109  0044F0  22DA               	addwfc	fsr2h,f,c
 13110  0044F2  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13111  0044F6  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13112  0044FA  EC02  F014         	call	_LCD_DrawRect	;wreg free
 13113  0044FE                     
 13114                           ;libraries/lcd_highlevel.c: 380:   LCD_DrawRect(x1, y1, x2, y2, 0, slider->borderColor);
 13115  0044FE  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 13116  004502  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 13117  004506  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 13118  00450A  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 13119  00450E  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 13120  004512  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 13121  004516  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 13122  00451A  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 13123  00451E  0E00               	movlw	0
 13124  004520  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13125  004522  EE20 F00C          	lfsr	2,12
 13126  004526  5037               	movf	LCD_SliderDraw@slider^0,w,c
 13127  004528  26D9               	addwf	fsr2l,f,c
 13128  00452A  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 13129  00452C  22DA               	addwfc	fsr2h,f,c
 13130  00452E  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13131  004532  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13132  004536  EC02  F014         	call	_LCD_DrawRect	;wreg free
 13133  00453A                     
 13134                           ;libraries/lcd_highlevel.c: 381:   LCD_SliderUpdate(slider);
 13135  00453A  C037  F027         	movff	LCD_SliderDraw@slider,LCD_SliderUpdate@slider
 13136  00453E  C038  F028         	movff	LCD_SliderDraw@slider+1,LCD_SliderUpdate@slider+1
 13137  004542  ECA1  F009         	call	_LCD_SliderUpdate	;wreg free
 13138  004546  0012               	return		;funcret
 13139  004548                     __end_of_LCD_SliderDraw:
 13140                           	callstack 0
 13141                           
 13142 ;; *************** function _LCD_SliderUpdate *****************
 13143 ;; Defined at:
 13144 ;;		line 319 in file "libraries/lcd_highlevel.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;  slider          2   38[COMRAM] PTR struct .
 13147 ;;		 -> g1(201), 
 13148 ;; Auto vars:     Size  Location     Type
 13149 ;;  x1              2   52[COMRAM] unsigned short 
 13150 ;;  y2              2   50[COMRAM] unsigned short 
 13151 ;;  y1              2   48[COMRAM] unsigned short 
 13152 ;;  x2              2   46[COMRAM] unsigned short 
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  1    wreg      void 
 13155 ;; Registers used:
 13156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13157 ;; Tracked objects:
 13158 ;;		On entry : 0/0
 13159 ;;		On exit  : 0/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13162 ;;      Params:         2       0       0       0       0       0       0
 13163 ;;      Locals:         8       0       0       0       0       0       0
 13164 ;;      Temps:          6       0       0       0       0       0       0
 13165 ;;      Totals:        16       0       0       0       0       0       0
 13166 ;;Total ram usage:       16 bytes
 13167 ;; Hardware stack levels used: 1
 13168 ;; Hardware stack levels required when called: 5
 13169 ;; This function calls:
 13170 ;;		_LCD_DrawRect
 13171 ;;		___lwdiv
 13172 ;;		___wmul
 13173 ;; This function is called by:
 13174 ;;		_LCD_SliderDraw
 13175 ;;		_gameControllerController
 13176 ;; This function uses a non-reentrant model
 13177 ;;
 13178                           
 13179                           	psect	text56
 13180  001342                     __ptext56:
 13181                           	callstack 0
 13182  001342                     _LCD_SliderUpdate:
 13183                           	callstack 21
 13184  001342                     
 13185                           ;libraries/lcd_highlevel.c: 319: void LCD_SliderUpdate(sld_t * slider);libraries/lcd_hig
      +                          hlevel.c: 320: {;libraries/lcd_highlevel.c: 321:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 325:   if(slider->cursorWidth != 0)
 13186  001342  EE20 F00E          	lfsr	2,14
 13187  001346  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13188  001348  26D9               	addwf	fsr2l,f,c
 13189  00134A  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13190  00134C  22DA               	addwfc	fsr2h,f,c
 13191  00134E  50DE               	movf	postinc2,w,c
 13192  001350  10DE               	iorwf	postinc2,w,c
 13193  001352  B4D8               	btfsc	status,2,c
 13194  001354  EFAE  F009         	goto	u5961
 13195  001358  EFB0  F009         	goto	u5960
 13196  00135C                     u5961:
 13197  00135C  EF3C  F00A         	goto	l8656
 13198  001360                     u5960:
 13199  001360                     
 13200                           ;libraries/lcd_highlevel.c: 326:   {;libraries/lcd_highlevel.c: 327:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->oldValue)/ slider->steps);
 13201  001360  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13202  001364  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13203  001368  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13204  00136C  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13205  001370  EE20 F00E          	lfsr	2,14
 13206  001374  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13207  001376  26D9               	addwf	fsr2l,f,c
 13208  001378  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13209  00137A  22DA               	addwfc	fsr2h,f,c
 13210  00137C  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13211  001380  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13212  001384  EE20 F004          	lfsr	2,4
 13213  001388  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13214  00138A  26D9               	addwf	fsr2l,f,c
 13215  00138C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13216  00138E  22DA               	addwfc	fsr2h,f,c
 13217  001390  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 13218  001394  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 13219  001398  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 13220  00139A  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 13221  00139C  6E1A               	movwf	___wmul@multiplier^0,c
 13222  00139E  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 13223  0013A0  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 13224  0013A2  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 13225  0013A4  EE20 F013          	lfsr	2,19
 13226  0013A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13227  0013AA  26D9               	addwf	fsr2l,f,c
 13228  0013AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13229  0013AE  22DA               	addwfc	fsr2h,f,c
 13230  0013B0  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 13231  0013B4  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 13232  0013B8  EC0F  F02F         	call	___wmul	;wreg free
 13233  0013BC  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 13234  0013C0  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 13235  0013C4  EE20 F015          	lfsr	2,21
 13236  0013C8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13237  0013CA  26D9               	addwf	fsr2l,f,c
 13238  0013CC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13239  0013CE  22DA               	addwfc	fsr2h,f,c
 13240  0013D0  CFDE F022          	movff	postinc2,___lwdiv@divisor
 13241  0013D4  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 13242  0013D8  EC93  F02B         	call	___lwdiv	;wreg free
 13243  0013DC  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13244  0013DE  2620               	addwf	?___lwdiv^0,f,c
 13245  0013E0  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13246  0013E2  2221               	addwfc	(?___lwdiv+1)^0,f,c
 13247  0013E4  0E01               	movlw	1
 13248  0013E6  2420               	addwf	?___lwdiv^0,w,c
 13249  0013E8  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 13250  0013EA  0E00               	movlw	0
 13251  0013EC  2021               	addwfc	(?___lwdiv+1)^0,w,c
 13252  0013EE  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 13253  0013F0                     
 13254                           ;libraries/lcd_highlevel.c: 328:     x2 = x1 + slider->cursorWidth-2;
 13255  0013F0  EE20 F00E          	lfsr	2,14
 13256  0013F4  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13257  0013F6  26D9               	addwf	fsr2l,f,c
 13258  0013F8  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13259  0013FA  22DA               	addwfc	fsr2h,f,c
 13260  0013FC  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13261  001400  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13262  001404  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 13263  001406  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 13264  001408  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 13265  00140A  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 13266  00140C  0EFE               	movlw	254
 13267  00140E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13268  001410  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 13269  001412  0EFF               	movlw	255
 13270  001414  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13271  001416  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 13272  001418                     
 13273                           ;libraries/lcd_highlevel.c: 329:     y1 = slider->posY + 2;
 13274  001418  EE20 F002          	lfsr	2,2
 13275  00141C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13276  00141E  26D9               	addwf	fsr2l,f,c
 13277  001420  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13278  001422  22DA               	addwfc	fsr2h,f,c
 13279  001424  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13280  001428  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13281  00142C  0E02               	movlw	2
 13282  00142E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13283  001430  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 13284  001432  0E00               	movlw	0
 13285  001434  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13286  001436  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 13287  001438                     
 13288                           ;libraries/lcd_highlevel.c: 330:     y2 = slider->posY + slider->height - 2;
 13289  001438  EE20 F006          	lfsr	2,6
 13290  00143C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13291  00143E  26D9               	addwf	fsr2l,f,c
 13292  001440  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13293  001442  22DA               	addwfc	fsr2h,f,c
 13294  001444  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13295  001448  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13296  00144C  EE20 F002          	lfsr	2,2
 13297  001450  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13298  001452  26D9               	addwf	fsr2l,f,c
 13299  001454  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13300  001456  22DA               	addwfc	fsr2h,f,c
 13301  001458  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13302  00145C  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13303  001460  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13304  001462  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 13305  001464  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13306  001466  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 13307  001468  0EFE               	movlw	254
 13308  00146A  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 13309  00146C  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 13310  00146E  0EFF               	movlw	255
 13311  001470  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 13312  001472  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 13313                           
 13314                           ;libraries/lcd_highlevel.c: 331:   }
 13315  001474  EFB0  F00A         	goto	l8664
 13316  001478                     l8656:
 13317                           
 13318                           ;libraries/lcd_highlevel.c: 333:   {;libraries/lcd_highlevel.c: 334:     x1 = slider->po
      +                          sX + 1;
 13319  001478  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13320  00147C  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13321  001480  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13322  001484  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13323  001488  0E01               	movlw	1
 13324  00148A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13325  00148C  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 13326  00148E  0E00               	movlw	0
 13327  001490  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13328  001492  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 13329  001494                     
 13330                           ;libraries/lcd_highlevel.c: 335:     x2 = slider->posX - 1 + ((slider->width * slider->o
      +                          ldValue)/ slider->steps);
 13331  001494  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13332  001498  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13333  00149C  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13334  0014A0  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13335  0014A4  EE20 F004          	lfsr	2,4
 13336  0014A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13337  0014AA  26D9               	addwf	fsr2l,f,c
 13338  0014AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13339  0014AE  22DA               	addwfc	fsr2h,f,c
 13340  0014B0  CFDE F01A          	movff	postinc2,___wmul@multiplier
 13341  0014B4  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 13342  0014B8  EE20 F013          	lfsr	2,19
 13343  0014BC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13344  0014BE  26D9               	addwf	fsr2l,f,c
 13345  0014C0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13346  0014C2  22DA               	addwfc	fsr2h,f,c
 13347  0014C4  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 13348  0014C8  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 13349  0014CC  EC0F  F02F         	call	___wmul	;wreg free
 13350  0014D0  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 13351  0014D4  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 13352  0014D8  EE20 F015          	lfsr	2,21
 13353  0014DC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13354  0014DE  26D9               	addwf	fsr2l,f,c
 13355  0014E0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13356  0014E2  22DA               	addwfc	fsr2h,f,c
 13357  0014E4  CFDE F022          	movff	postinc2,___lwdiv@divisor
 13358  0014E8  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 13359  0014EC  EC93  F02B         	call	___lwdiv	;wreg free
 13360  0014F0  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13361  0014F2  2620               	addwf	?___lwdiv^0,f,c
 13362  0014F4  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13363  0014F6  2221               	addwfc	(?___lwdiv+1)^0,f,c
 13364  0014F8  0EFF               	movlw	255
 13365  0014FA  2420               	addwf	?___lwdiv^0,w,c
 13366  0014FC  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 13367  0014FE  0EFF               	movlw	255
 13368  001500  2021               	addwfc	(?___lwdiv+1)^0,w,c
 13369  001502  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 13370  001504                     
 13371                           ;libraries/lcd_highlevel.c: 336:     y1 = slider->posY + 2;
 13372  001504  EE20 F002          	lfsr	2,2
 13373  001508  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13374  00150A  26D9               	addwf	fsr2l,f,c
 13375  00150C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13376  00150E  22DA               	addwfc	fsr2h,f,c
 13377  001510  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13378  001514  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13379  001518  0E02               	movlw	2
 13380  00151A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13381  00151C  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 13382  00151E  0E00               	movlw	0
 13383  001520  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13384  001522  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 13385  001524                     
 13386                           ;libraries/lcd_highlevel.c: 337:     y2 = slider->posY + slider->height - 2;
 13387  001524  EE20 F006          	lfsr	2,6
 13388  001528  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13389  00152A  26D9               	addwf	fsr2l,f,c
 13390  00152C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13391  00152E  22DA               	addwfc	fsr2h,f,c
 13392  001530  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13393  001534  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13394  001538  EE20 F002          	lfsr	2,2
 13395  00153C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13396  00153E  26D9               	addwf	fsr2l,f,c
 13397  001540  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13398  001542  22DA               	addwfc	fsr2h,f,c
 13399  001544  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13400  001548  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13401  00154C  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13402  00154E  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 13403  001550  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13404  001552  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 13405  001554  0EFE               	movlw	254
 13406  001556  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 13407  001558  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 13408  00155A  0EFF               	movlw	255
 13409  00155C  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 13410  00155E  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 13411  001560                     l8664:
 13412                           
 13413                           ;libraries/lcd_highlevel.c: 339:   LCD_DrawRect(x1,
 13414  001560  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 13415  001564  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 13416  001568  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 13417  00156C  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 13418  001570  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 13419  001574  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 13420  001578  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 13421  00157C  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 13422  001580  0E01               	movlw	1
 13423  001582  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13424  001584  EE20 F00A          	lfsr	2,10
 13425  001588  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13426  00158A  26D9               	addwf	fsr2l,f,c
 13427  00158C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13428  00158E  22DA               	addwfc	fsr2h,f,c
 13429  001590  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13430  001594  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13431  001598  EC02  F014         	call	_LCD_DrawRect	;wreg free
 13432  00159C                     
 13433                           ;libraries/lcd_highlevel.c: 344:   slider->oldValue = slider->value;
 13434  00159C  EE20 F011          	lfsr	2,17
 13435  0015A0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13436  0015A2  26D9               	addwf	fsr2l,f,c
 13437  0015A4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13438  0015A6  22DA               	addwfc	fsr2h,f,c
 13439  0015A8  EE10 F013          	lfsr	1,19
 13440  0015AC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13441  0015AE  26E1               	addwf	fsr1l,f,c
 13442  0015B0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13443  0015B2  22E2               	addwfc	fsr1h,f,c
 13444  0015B4  CFDE FFE6          	movff	postinc2,postinc1
 13445  0015B8  CFDD FFE5          	movff	postdec2,postdec1
 13446  0015BC                     
 13447                           ;libraries/lcd_highlevel.c: 347:   if(slider->cursorWidth == 0)
 13448  0015BC  EE20 F00E          	lfsr	2,14
 13449  0015C0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13450  0015C2  26D9               	addwf	fsr2l,f,c
 13451  0015C4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13452  0015C6  22DA               	addwfc	fsr2h,f,c
 13453  0015C8  50DE               	movf	postinc2,w,c
 13454  0015CA  10DE               	iorwf	postinc2,w,c
 13455  0015CC  A4D8               	btfss	status,2,c
 13456  0015CE  EFEB  F00A         	goto	u5971
 13457  0015D2  EFED  F00A         	goto	u5970
 13458  0015D6                     u5971:
 13459  0015D6  EF63  F00B         	goto	l8678
 13460  0015DA                     u5970:
 13461  0015DA                     
 13462                           ;libraries/lcd_highlevel.c: 348:   {;libraries/lcd_highlevel.c: 349:     x1 = slider->po
      +                          sX + 1;
 13463  0015DA  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13464  0015DE  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13465  0015E2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13466  0015E6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13467  0015EA  0E01               	movlw	1
 13468  0015EC  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13469  0015EE  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 13470  0015F0  0E00               	movlw	0
 13471  0015F2  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13472  0015F4  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 13473  0015F6                     
 13474                           ;libraries/lcd_highlevel.c: 350:     x2 = slider->posX - 1 + ((slider->width * slider->v
      +                          alue)/ slider->steps);
 13475  0015F6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13476  0015FA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13477  0015FE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13478  001602  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13479  001606  EE20 F004          	lfsr	2,4
 13480  00160A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13481  00160C  26D9               	addwf	fsr2l,f,c
 13482  00160E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13483  001610  22DA               	addwfc	fsr2h,f,c
 13484  001612  CFDE F01A          	movff	postinc2,___wmul@multiplier
 13485  001616  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 13486  00161A  EE20 F011          	lfsr	2,17
 13487  00161E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13488  001620  26D9               	addwf	fsr2l,f,c
 13489  001622  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13490  001624  22DA               	addwfc	fsr2h,f,c
 13491  001626  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 13492  00162A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 13493  00162E  EC0F  F02F         	call	___wmul	;wreg free
 13494  001632  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 13495  001636  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 13496  00163A  EE20 F015          	lfsr	2,21
 13497  00163E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13498  001640  26D9               	addwf	fsr2l,f,c
 13499  001642  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13500  001644  22DA               	addwfc	fsr2h,f,c
 13501  001646  CFDE F022          	movff	postinc2,___lwdiv@divisor
 13502  00164A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 13503  00164E  EC93  F02B         	call	___lwdiv	;wreg free
 13504  001652  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13505  001654  2620               	addwf	?___lwdiv^0,f,c
 13506  001656  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13507  001658  2221               	addwfc	(?___lwdiv+1)^0,f,c
 13508  00165A  0EFF               	movlw	255
 13509  00165C  2420               	addwf	?___lwdiv^0,w,c
 13510  00165E  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 13511  001660  0EFF               	movlw	255
 13512  001662  2021               	addwfc	(?___lwdiv+1)^0,w,c
 13513  001664  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 13514  001666                     
 13515                           ;libraries/lcd_highlevel.c: 351:     y1 = slider->posY + 2;
 13516  001666  EE20 F002          	lfsr	2,2
 13517  00166A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13518  00166C  26D9               	addwf	fsr2l,f,c
 13519  00166E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13520  001670  22DA               	addwfc	fsr2h,f,c
 13521  001672  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13522  001676  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13523  00167A  0E02               	movlw	2
 13524  00167C  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13525  00167E  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 13526  001680  0E00               	movlw	0
 13527  001682  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13528  001684  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 13529  001686                     
 13530                           ;libraries/lcd_highlevel.c: 352:     y2 = slider->posY + slider->height - 2;
 13531  001686  EE20 F006          	lfsr	2,6
 13532  00168A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13533  00168C  26D9               	addwf	fsr2l,f,c
 13534  00168E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13535  001690  22DA               	addwfc	fsr2h,f,c
 13536  001692  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13537  001696  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13538  00169A  EE20 F002          	lfsr	2,2
 13539  00169E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13540  0016A0  26D9               	addwf	fsr2l,f,c
 13541  0016A2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13542  0016A4  22DA               	addwfc	fsr2h,f,c
 13543  0016A6  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13544  0016AA  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13545  0016AE  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13546  0016B0  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 13547  0016B2  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13548  0016B4  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 13549  0016B6  0EFE               	movlw	254
 13550  0016B8  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 13551  0016BA  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 13552  0016BC  0EFF               	movlw	255
 13553  0016BE  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 13554  0016C0  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 13555                           
 13556                           ;libraries/lcd_highlevel.c: 353:   }
 13557  0016C2  EFED  F00B         	goto	l8686
 13558  0016C6                     l8678:
 13559                           
 13560                           ;libraries/lcd_highlevel.c: 357:   {;libraries/lcd_highlevel.c: 358:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->value)/ slider->steps);
 13561  0016C6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 13562  0016CA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 13563  0016CE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13564  0016D2  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13565  0016D6  EE20 F00E          	lfsr	2,14
 13566  0016DA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13567  0016DC  26D9               	addwf	fsr2l,f,c
 13568  0016DE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13569  0016E0  22DA               	addwfc	fsr2h,f,c
 13570  0016E2  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13571  0016E6  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13572  0016EA  EE20 F004          	lfsr	2,4
 13573  0016EE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13574  0016F0  26D9               	addwf	fsr2l,f,c
 13575  0016F2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13576  0016F4  22DA               	addwfc	fsr2h,f,c
 13577  0016F6  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 13578  0016FA  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 13579  0016FE  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 13580  001700  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 13581  001702  6E1A               	movwf	___wmul@multiplier^0,c
 13582  001704  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 13583  001706  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 13584  001708  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 13585  00170A  EE20 F011          	lfsr	2,17
 13586  00170E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13587  001710  26D9               	addwf	fsr2l,f,c
 13588  001712  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13589  001714  22DA               	addwfc	fsr2h,f,c
 13590  001716  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 13591  00171A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 13592  00171E  EC0F  F02F         	call	___wmul	;wreg free
 13593  001722  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 13594  001726  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 13595  00172A  EE20 F015          	lfsr	2,21
 13596  00172E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13597  001730  26D9               	addwf	fsr2l,f,c
 13598  001732  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13599  001734  22DA               	addwfc	fsr2h,f,c
 13600  001736  CFDE F022          	movff	postinc2,___lwdiv@divisor
 13601  00173A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 13602  00173E  EC93  F02B         	call	___lwdiv	;wreg free
 13603  001742  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13604  001744  2620               	addwf	?___lwdiv^0,f,c
 13605  001746  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13606  001748  2221               	addwfc	(?___lwdiv+1)^0,f,c
 13607  00174A  0E01               	movlw	1
 13608  00174C  2420               	addwf	?___lwdiv^0,w,c
 13609  00174E  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 13610  001750  0E00               	movlw	0
 13611  001752  2021               	addwfc	(?___lwdiv+1)^0,w,c
 13612  001754  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 13613  001756                     
 13614                           ;libraries/lcd_highlevel.c: 359:     x2 = x1 + slider->cursorWidth-2;
 13615  001756  EE20 F00E          	lfsr	2,14
 13616  00175A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13617  00175C  26D9               	addwf	fsr2l,f,c
 13618  00175E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13619  001760  22DA               	addwfc	fsr2h,f,c
 13620  001762  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13621  001766  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13622  00176A  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 13623  00176C  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 13624  00176E  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 13625  001770  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 13626  001772  0EFE               	movlw	254
 13627  001774  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13628  001776  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 13629  001778  0EFF               	movlw	255
 13630  00177A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13631  00177C  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 13632  00177E                     
 13633                           ;libraries/lcd_highlevel.c: 360:     y1 = slider->posY + 2;
 13634  00177E  EE20 F002          	lfsr	2,2
 13635  001782  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13636  001784  26D9               	addwf	fsr2l,f,c
 13637  001786  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13638  001788  22DA               	addwfc	fsr2h,f,c
 13639  00178A  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13640  00178E  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13641  001792  0E02               	movlw	2
 13642  001794  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 13643  001796  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 13644  001798  0E00               	movlw	0
 13645  00179A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 13646  00179C  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 13647  00179E                     
 13648                           ;libraries/lcd_highlevel.c: 361:     y2 = slider->posY + slider->height - 2;
 13649  00179E  EE20 F006          	lfsr	2,6
 13650  0017A2  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13651  0017A4  26D9               	addwf	fsr2l,f,c
 13652  0017A6  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13653  0017A8  22DA               	addwfc	fsr2h,f,c
 13654  0017AA  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 13655  0017AE  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 13656  0017B2  EE20 F002          	lfsr	2,2
 13657  0017B6  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13658  0017B8  26D9               	addwf	fsr2l,f,c
 13659  0017BA  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13660  0017BC  22DA               	addwfc	fsr2h,f,c
 13661  0017BE  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 13662  0017C2  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 13663  0017C6  5029               	movf	??_LCD_SliderUpdate^0,w,c
 13664  0017C8  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 13665  0017CA  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 13666  0017CC  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 13667  0017CE  0EFE               	movlw	254
 13668  0017D0  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 13669  0017D2  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 13670  0017D4  0EFF               	movlw	255
 13671  0017D6  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 13672  0017D8  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 13673  0017DA                     l8686:
 13674                           
 13675                           ;libraries/lcd_highlevel.c: 363:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->sldColor);
 13676  0017DA  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 13677  0017DE  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 13678  0017E2  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 13679  0017E6  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 13680  0017EA  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 13681  0017EE  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 13682  0017F2  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 13683  0017F6  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 13684  0017FA  0E01               	movlw	1
 13685  0017FC  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13686  0017FE  EE20 F008          	lfsr	2,8
 13687  001802  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 13688  001804  26D9               	addwf	fsr2l,f,c
 13689  001806  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 13690  001808  22DA               	addwfc	fsr2h,f,c
 13691  00180A  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13692  00180E  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13693  001812  EC02  F014         	call	_LCD_DrawRect	;wreg free
 13694  001816  0012               	return		;funcret
 13695  001818                     __end_of_LCD_SliderUpdate:
 13696                           	callstack 0
 13697                           
 13698 ;; *************** function _Menu_inGameDraw *****************
 13699 ;; Defined at:
 13700 ;;		line 19 in file "class/menu.c"
 13701 ;; Parameters:    Size  Location     Type
 13702 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 13703 ;;		 -> g1(201), 
 13704 ;; Auto vars:     Size  Location     Type
 13705 ;;		None
 13706 ;; Return value:  Size  Location     Type
 13707 ;;                  1    wreg      void 
 13708 ;; Registers used:
 13709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13710 ;; Tracked objects:
 13711 ;;		On entry : 0/0
 13712 ;;		On exit  : 0/0
 13713 ;;		Unchanged: 0/0
 13714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13715 ;;      Params:         0       2       0       0       0       0       0
 13716 ;;      Locals:         0       0       0       0       0       0       0
 13717 ;;      Temps:          0       0       0       0       0       0       0
 13718 ;;      Totals:         0       2       0       0       0       0       0
 13719 ;;Total ram usage:        2 bytes
 13720 ;; Hardware stack levels used: 1
 13721 ;; Hardware stack levels required when called: 7
 13722 ;; This function calls:
 13723 ;;		_Ball_draw
 13724 ;;		_LCD_ButtonDraw
 13725 ;;		_LCD_Fill
 13726 ;;		_Paddle_draw
 13727 ;; This function is called by:
 13728 ;;		_displayController
 13729 ;; This function uses a non-reentrant model
 13730 ;;
 13731                           
 13732                           	psect	text57
 13733  005878                     __ptext57:
 13734                           	callstack 0
 13735  005878                     _Menu_inGameDraw:
 13736                           	callstack 19
 13737  005878                     
 13738                           ;class/menu.c: 19: void Menu_inGameDraw(GameParameters* g);class/menu.c: 20: {;class/men
      +                          u.c: 21:     LCD_Fill(0b1111111111111111);
 13739  005878  0EFF               	movlw	255
 13740  00587A  6E13               	movwf	(LCD_Fill@color+1)^0,c
 13741  00587C  6812               	setf	LCD_Fill@color^0,c
 13742  00587E  EC03  F027         	call	_LCD_Fill	;wreg free
 13743  005882                     
 13744                           ;class/menu.c: 22:     LCD_ButtonDraw(&(g->btnRight));
 13745  005882  0E80               	movlw	128
 13746  005884  0100               	movlb	0	; () banked
 13747  005886  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 13748  005888  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 13749  00588A  0E00               	movlw	0
 13750  00588C  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 13751  00588E  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 13752  005890  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 13753  005894                     
 13754                           ;class/menu.c: 23:     LCD_ButtonDraw(&(g->btnLeft));
 13755  005894  0E68               	movlw	104
 13756  005896  0100               	movlb	0	; () banked
 13757  005898  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 13758  00589A  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 13759  00589C  0E00               	movlw	0
 13760  00589E  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 13761  0058A0  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 13762  0058A2  EC2A  F007         	call	_LCD_ButtonDraw	;wreg free
 13763  0058A6                     
 13764                           ;class/menu.c: 24:     Paddle_draw(&g->p1);
 13765  0058A6  0EB9               	movlw	185
 13766  0058A8  0100               	movlb	0	; () banked
 13767  0058AA  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 13768  0058AC  6E25               	movwf	Paddle_draw@p^0,c
 13769  0058AE  0E00               	movlw	0
 13770  0058B0  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 13771  0058B2  6E26               	movwf	(Paddle_draw@p+1)^0,c
 13772  0058B4  ECDE  F02A         	call	_Paddle_draw	;wreg free
 13773  0058B8                     
 13774                           ;class/menu.c: 25:     Paddle_draw(&g->p2);
 13775  0058B8  0EBF               	movlw	191
 13776  0058BA  0100               	movlb	0	; () banked
 13777  0058BC  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 13778  0058BE  6E25               	movwf	Paddle_draw@p^0,c
 13779  0058C0  0E00               	movlw	0
 13780  0058C2  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 13781  0058C4  6E26               	movwf	(Paddle_draw@p+1)^0,c
 13782  0058C6  ECDE  F02A         	call	_Paddle_draw	;wreg free
 13783  0058CA                     
 13784                           ;class/menu.c: 26:     Ball_draw(&g->b);
 13785  0058CA  0EB1               	movlw	177
 13786  0058CC  0100               	movlb	0	; () banked
 13787  0058CE  259C               	addwf	Menu_inGameDraw@g& (0+255),w,b
 13788  0058D0  6E25               	movwf	Ball_draw@b^0,c
 13789  0058D2  0E00               	movlw	0
 13790  0058D4  219D               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 13791  0058D6  6E26               	movwf	(Ball_draw@b+1)^0,c
 13792  0058D8  EC14  F02A         	call	_Ball_draw	;wreg free
 13793  0058DC  0012               	return		;funcret
 13794  0058DE                     __end_of_Menu_inGameDraw:
 13795                           	callstack 0
 13796                           
 13797 ;; *************** function _Paddle_draw *****************
 13798 ;; Defined at:
 13799 ;;		line 43 in file "class/paddle.c"
 13800 ;; Parameters:    Size  Location     Type
 13801 ;;  p               2   36[COMRAM] PTR struct Paddle
 13802 ;;		 -> g1(201), 
 13803 ;; Auto vars:     Size  Location     Type
 13804 ;;		None
 13805 ;; Return value:  Size  Location     Type
 13806 ;;                  1    wreg      void 
 13807 ;; Registers used:
 13808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13809 ;; Tracked objects:
 13810 ;;		On entry : 0/0
 13811 ;;		On exit  : 0/0
 13812 ;;		Unchanged: 0/0
 13813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13814 ;;      Params:         2       0       0       0       0       0       0
 13815 ;;      Locals:         0       0       0       0       0       0       0
 13816 ;;      Temps:          4       0       0       0       0       0       0
 13817 ;;      Totals:         6       0       0       0       0       0       0
 13818 ;;Total ram usage:        6 bytes
 13819 ;; Hardware stack levels used: 1
 13820 ;; Hardware stack levels required when called: 5
 13821 ;; This function calls:
 13822 ;;		_LCD_DrawRect
 13823 ;; This function is called by:
 13824 ;;		_Menu_inGameDraw
 13825 ;;		_gameControllerSM
 13826 ;;		_moovePaddle
 13827 ;; This function uses a non-reentrant model
 13828 ;;
 13829                           
 13830                           	psect	text58
 13831  0055BC                     __ptext58:
 13832                           	callstack 0
 13833  0055BC                     _Paddle_draw:
 13834                           	callstack 20
 13835  0055BC                     
 13836                           ;class/paddle.c: 43: void Paddle_draw(struct Paddle* p);class/paddle.c: 44: {;class/padd
      +                          le.c: 46:     LCD_DrawRect(p->x,p->y,p->x+50,p->y+20,1,p->color);
 13837  0055BC  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 13838  0055C0  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 13839  0055C4  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 13840  0055C8  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 13841  0055CC  EE20 F002          	lfsr	2,2
 13842  0055D0  5025               	movf	Paddle_draw@p^0,w,c
 13843  0055D2  26D9               	addwf	fsr2l,f,c
 13844  0055D4  5026               	movf	(Paddle_draw@p+1)^0,w,c
 13845  0055D6  22DA               	addwfc	fsr2h,f,c
 13846  0055D8  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 13847  0055DC  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 13848  0055E0  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 13849  0055E4  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 13850  0055E8  CFDE F027          	movff	postinc2,??_Paddle_draw
 13851  0055EC  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 13852  0055F0  0E32               	movlw	50
 13853  0055F2  2427               	addwf	??_Paddle_draw^0,w,c
 13854  0055F4  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13855  0055F6  0E00               	movlw	0
 13856  0055F8  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 13857  0055FA  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13858  0055FC  EE20 F002          	lfsr	2,2
 13859  005600  5025               	movf	Paddle_draw@p^0,w,c
 13860  005602  26D9               	addwf	fsr2l,f,c
 13861  005604  5026               	movf	(Paddle_draw@p+1)^0,w,c
 13862  005606  22DA               	addwfc	fsr2h,f,c
 13863  005608  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 13864  00560C  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 13865  005610  0E14               	movlw	20
 13866  005612  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 13867  005614  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13868  005616  0E00               	movlw	0
 13869  005618  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 13870  00561A  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13871  00561C  0E01               	movlw	1
 13872  00561E  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13873  005620  EE20 F004          	lfsr	2,4
 13874  005624  5025               	movf	Paddle_draw@p^0,w,c
 13875  005626  26D9               	addwf	fsr2l,f,c
 13876  005628  5026               	movf	(Paddle_draw@p+1)^0,w,c
 13877  00562A  22DA               	addwfc	fsr2h,f,c
 13878  00562C  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13879  005630  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13880  005634  EC02  F014         	call	_LCD_DrawRect	;wreg free
 13881  005638  0012               	return		;funcret
 13882  00563A                     __end_of_Paddle_draw:
 13883                           	callstack 0
 13884                           
 13885 ;; *************** function _LCD_Fill *****************
 13886 ;; Defined at:
 13887 ;;		line 218 in file "libraries/lcd_highlevel.c"
 13888 ;; Parameters:    Size  Location     Type
 13889 ;;  color           2   17[COMRAM] unsigned short 
 13890 ;; Auto vars:     Size  Location     Type
 13891 ;;  page            2   23[COMRAM] unsigned short 
 13892 ;;  column          2   21[COMRAM] unsigned short 
 13893 ;;  colorL          1   20[COMRAM] unsigned char 
 13894 ;;  colorH          1   19[COMRAM] unsigned char 
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  1    wreg      void 
 13897 ;; Registers used:
 13898 ;;		wreg, status,2, status,0
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13904 ;;      Params:         2       0       0       0       0       0       0
 13905 ;;      Locals:         6       0       0       0       0       0       0
 13906 ;;      Temps:          0       0       0       0       0       0       0
 13907 ;;      Totals:         8       0       0       0       0       0       0
 13908 ;;Total ram usage:        8 bytes
 13909 ;; Hardware stack levels used: 1
 13910 ;; Hardware stack levels required when called: 4
 13911 ;; This function calls:
 13912 ;;		Nothing
 13913 ;; This function is called by:
 13914 ;;		_Factory_init
 13915 ;;		_Menu_welcomeDraw
 13916 ;;		_Menu_parametersDraw
 13917 ;;		_Menu_inGameDraw
 13918 ;; This function uses a non-reentrant model
 13919 ;;
 13920                           
 13921                           	psect	text59
 13922  004E06                     __ptext59:
 13923                           	callstack 0
 13924  004E06                     _LCD_Fill:
 13925                           	callstack 21
 13926  004E06                     
 13927                           ;libraries/lcd_highlevel.c: 218: void LCD_Fill(uint16_t color);libraries/lcd_highlevel.c
      +                          : 219: {;libraries/lcd_highlevel.c: 220:   uint16_t column;;libraries/lcd_highlevel.c: 2
      +                          21:   uint16_t page;;libraries/lcd_highlevel.c: 222:   uint8_t colorH, colorL;;libraries
      +                          /lcd_highlevel.c: 223:   colorH = color >> 8;
 13928  004E06  5013               	movf	(LCD_Fill@color+1)^0,w,c
 13929  004E08  6E14               	movwf	LCD_Fill@colorH^0,c
 13930  004E0A                     
 13931                           ;libraries/lcd_highlevel.c: 224:   colorL = color;
 13932  004E0A  C012  F015         	movff	LCD_Fill@color,LCD_Fill@colorL
 13933                           
 13934                           ;libraries/lcd_highlevel.c: 226:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13935  004E0E  0E2A               	movlw	42
 13936  004E10  6E80               	movwf	128,c	;volatile
 13937  004E12  988B               	bcf	3979,4,c	;volatile
 13938  004E14  968B               	bcf	3979,3,c	;volatile
 13939  004E16  868B               	bsf	3979,3,c	;volatile
 13940  004E18  888B               	bsf	3979,4,c	;volatile
 13941                           
 13942                           ;libraries/lcd_highlevel.c: 227:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 13943  004E1A  0E00               	movlw	0
 13944  004E1C  6E80               	movwf	128,c	;volatile
 13945  004E1E  968B               	bcf	3979,3,c	;volatile
 13946  004E20  868B               	bsf	3979,3,c	;volatile
 13947                           
 13948                           ;libraries/lcd_highlevel.c: 228:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 13949  004E22  0E00               	movlw	0
 13950  004E24  6E80               	movwf	128,c	;volatile
 13951  004E26  968B               	bcf	3979,3,c	;volatile
 13952  004E28  868B               	bsf	3979,3,c	;volatile
 13953                           
 13954                           ;libraries/lcd_highlevel.c: 229:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13955  004E2A  0E00               	movlw	0
 13956  004E2C  6E80               	movwf	128,c	;volatile
 13957  004E2E  968B               	bcf	3979,3,c	;volatile
 13958  004E30  868B               	bsf	3979,3,c	;volatile
 13959                           
 13960                           ;libraries/lcd_highlevel.c: 230:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 13961  004E32  0EEF               	movlw	239
 13962  004E34  6E80               	movwf	128,c	;volatile
 13963  004E36  968B               	bcf	3979,3,c	;volatile
 13964  004E38  868B               	bsf	3979,3,c	;volatile
 13965                           
 13966                           ;libraries/lcd_highlevel.c: 232:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13967  004E3A  0E2B               	movlw	43
 13968  004E3C  6E80               	movwf	128,c	;volatile
 13969  004E3E  988B               	bcf	3979,4,c	;volatile
 13970  004E40  968B               	bcf	3979,3,c	;volatile
 13971  004E42  868B               	bsf	3979,3,c	;volatile
 13972  004E44  888B               	bsf	3979,4,c	;volatile
 13973                           
 13974                           ;libraries/lcd_highlevel.c: 233:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 13975  004E46  0E00               	movlw	0
 13976  004E48  6E80               	movwf	128,c	;volatile
 13977  004E4A  968B               	bcf	3979,3,c	;volatile
 13978  004E4C  868B               	bsf	3979,3,c	;volatile
 13979                           
 13980                           ;libraries/lcd_highlevel.c: 234:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 13981  004E4E  0E00               	movlw	0
 13982  004E50  6E80               	movwf	128,c	;volatile
 13983  004E52  968B               	bcf	3979,3,c	;volatile
 13984  004E54  868B               	bsf	3979,3,c	;volatile
 13985                           
 13986                           ;libraries/lcd_highlevel.c: 235:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13987  004E56  0E01               	movlw	1
 13988  004E58  6E80               	movwf	128,c	;volatile
 13989  004E5A  968B               	bcf	3979,3,c	;volatile
 13990  004E5C  868B               	bsf	3979,3,c	;volatile
 13991                           
 13992                           ;libraries/lcd_highlevel.c: 236:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 13993  004E5E  0E3F               	movlw	63
 13994  004E60  6E80               	movwf	128,c	;volatile
 13995  004E62  968B               	bcf	3979,3,c	;volatile
 13996  004E64  868B               	bsf	3979,3,c	;volatile
 13997                           
 13998                           ;libraries/lcd_highlevel.c: 238:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13999  004E66  0E2C               	movlw	44
 14000  004E68  6E80               	movwf	128,c	;volatile
 14001  004E6A  988B               	bcf	3979,4,c	;volatile
 14002  004E6C  968B               	bcf	3979,3,c	;volatile
 14003  004E6E  868B               	bsf	3979,3,c	;volatile
 14004  004E70  888B               	bsf	3979,4,c	;volatile
 14005                           
 14006                           ;libraries/lcd_highlevel.c: 239:   for(column=0; column<320; column++)
 14007  004E72  0E00               	movlw	0
 14008  004E74  6E17               	movwf	(LCD_Fill@column+1)^0,c
 14009  004E76  0E00               	movlw	0
 14010  004E78  6E16               	movwf	LCD_Fill@column^0,c
 14011  004E7A                     l9140:
 14012                           
 14013                           ;libraries/lcd_highlevel.c: 240:   {;libraries/lcd_highlevel.c: 241:     for(page=0; pag
      +                          e<240; page++)
 14014  004E7A  0E00               	movlw	0
 14015  004E7C  6E19               	movwf	(LCD_Fill@page+1)^0,c
 14016  004E7E  0E00               	movlw	0
 14017  004E80  6E18               	movwf	LCD_Fill@page^0,c
 14018  004E82                     l208:
 14019                           
 14020                           ;libraries/lcd_highlevel.c: 242:     {;libraries/lcd_highlevel.c: 243:       PORTA = col
      +                          orH;
 14021  004E82  C014  FF80         	movff	LCD_Fill@colorH,3968	;volatile
 14022                           
 14023                           ;libraries/lcd_highlevel.c: 244:       LATC3 = 0;
 14024  004E86  968B               	bcf	3979,3,c	;volatile
 14025                           
 14026                           ;libraries/lcd_highlevel.c: 245:       LATC3 = 1;
 14027  004E88  868B               	bsf	3979,3,c	;volatile
 14028                           
 14029                           ;libraries/lcd_highlevel.c: 246:       PORTA = colorL;
 14030  004E8A  C015  FF80         	movff	LCD_Fill@colorL,3968	;volatile
 14031                           
 14032                           ;libraries/lcd_highlevel.c: 247:       LATC3 = 0;
 14033  004E8E  968B               	bcf	3979,3,c	;volatile
 14034                           
 14035                           ;libraries/lcd_highlevel.c: 248:       LATC3 = 1;
 14036  004E90  868B               	bsf	3979,3,c	;volatile
 14037  004E92                     
 14038                           ;libraries/lcd_highlevel.c: 249:     }
 14039  004E92  4A18               	infsnz	LCD_Fill@page^0,f,c
 14040  004E94  2A19               	incf	(LCD_Fill@page+1)^0,f,c
 14041  004E96  5019               	movf	(LCD_Fill@page+1)^0,w,c
 14042  004E98  E109               	bnz	u6280
 14043  004E9A  0EF0               	movlw	240
 14044  004E9C  5C18               	subwf	LCD_Fill@page^0,w,c
 14045  004E9E  A0D8               	btfss	status,0,c
 14046  004EA0  EF54  F027         	goto	u6281
 14047  004EA4  EF56  F027         	goto	u6280
 14048  004EA8                     u6281:
 14049  004EA8  EF41  F027         	goto	l208
 14050  004EAC                     u6280:
 14051  004EAC                     
 14052                           ;libraries/lcd_highlevel.c: 250:   }
 14053  004EAC  4A16               	infsnz	LCD_Fill@column^0,f,c
 14054  004EAE  2A17               	incf	(LCD_Fill@column+1)^0,f,c
 14055  004EB0  0E40               	movlw	64
 14056  004EB2  5C16               	subwf	LCD_Fill@column^0,w,c
 14057  004EB4  0E01               	movlw	1
 14058  004EB6  5817               	subwfb	(LCD_Fill@column+1)^0,w,c
 14059  004EB8  A0D8               	btfss	status,0,c
 14060  004EBA  EF61  F027         	goto	u6291
 14061  004EBE  EF63  F027         	goto	u6290
 14062  004EC2                     u6291:
 14063  004EC2  EF3D  F027         	goto	l9140
 14064  004EC6                     u6290:
 14065  004EC6  0012               	return		;funcret
 14066  004EC8                     __end_of_LCD_Fill:
 14067                           	callstack 0
 14068                           
 14069 ;; *************** function _LCD_ButtonDraw *****************
 14070 ;; Defined at:
 14071 ;;		line 462 in file "libraries/lcd_highlevel.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;  button          2   28[BANK0 ] PTR struct .
 14074 ;;		 -> g1(201), 
 14075 ;; Auto vars:     Size  Location     Type
 14076 ;;  bmpPtr          2   58[BANK0 ] PTR struct .
 14077 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 14078 ;;		 -> STR_3(9), STR_2(11), 
 14079 ;;  yText           2   55[BANK0 ] unsigned short 
 14080 ;;  xText           2   53[BANK0 ] unsigned short 
 14081 ;;  y2              2   51[BANK0 ] unsigned short 
 14082 ;;  y1              2   49[BANK0 ] unsigned short 
 14083 ;;  x2              2   47[BANK0 ] unsigned short 
 14084 ;;  x1              2   45[BANK0 ] unsigned short 
 14085 ;;  width           2   43[BANK0 ] unsigned short 
 14086 ;;  i               1   57[BANK0 ] unsigned char 
 14087 ;;  tempChar        1   42[BANK0 ] unsigned char 
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  1    wreg      void 
 14090 ;; Registers used:
 14091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14097 ;;      Params:         0       2       0       0       0       0       0
 14098 ;;      Locals:         0      18       0       0       0       0       0
 14099 ;;      Temps:          0      12       0       0       0       0       0
 14100 ;;      Totals:         0      32       0       0       0       0       0
 14101 ;;Total ram usage:       32 bytes
 14102 ;; Hardware stack levels used: 1
 14103 ;; Hardware stack levels required when called: 6
 14104 ;; This function calls:
 14105 ;;		_LCD_Bitmap
 14106 ;;		_LCD_ButtonUpdate
 14107 ;;		_LCD_DrawRect
 14108 ;;		_LCD_DrawText
 14109 ;;		___awdiv
 14110 ;;		_strlen
 14111 ;; This function is called by:
 14112 ;;		_Menu_welcomeDraw
 14113 ;;		_Menu_parametersDraw
 14114 ;;		_Menu_inGameDraw
 14115 ;; This function uses a non-reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text60
 14119  000E54                     __ptext60:
 14120                           	callstack 0
 14121  000E54                     _LCD_ButtonDraw:
 14122                           	callstack 19
 14123  000E54                     
 14124                           ;libraries/lcd_highlevel.c: 462: void LCD_ButtonDraw(btn_t * button);libraries/lcd_highl
      +                          evel.c: 463: {;libraries/lcd_highlevel.c: 464:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 465:   uint16_t xText,yText;;libraries/lcd_highlevel.c: 466:   uint8_t i, temp
      +                          Char;;libraries/lcd_highlevel.c: 467:   uint16_t width=0;
 14125  000E54  0E00               	movlw	0
 14126  000E56  0100               	movlb	0	; () banked
 14127  000E58  6F8C               	movwf	(LCD_ButtonDraw@width+1)& (0+255),b
 14128  000E5A  0E00               	movlw	0
 14129  000E5C  6F8B               	movwf	LCD_ButtonDraw@width& (0+255),b
 14130  000E5E                     
 14131                           ; BSR set to: 0
 14132                           ;libraries/lcd_highlevel.c: 468:   BMP_STRUCT *bmpPtr;;libraries/lcd_highlevel.c: 470:  
      +                           x1 = button->posX;
 14133  000E5E  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 14134  000E62  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 14135  000E66  CFDE F08D          	movff	postinc2,LCD_ButtonDraw@x1
 14136  000E6A  CFDD F08E          	movff	postdec2,LCD_ButtonDraw@x1+1
 14137  000E6E                     
 14138                           ; BSR set to: 0
 14139                           ;libraries/lcd_highlevel.c: 471:   x2 = button->posX + button->width;
 14140  000E6E  EE20 F004          	lfsr	2,4
 14141  000E72  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14142  000E74  26D9               	addwf	fsr2l,f,c
 14143  000E76  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14144  000E78  22DA               	addwfc	fsr2h,f,c
 14145  000E7A  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14146  000E7E  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14147  000E82  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 14148  000E86  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 14149  000E8A  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 14150  000E8E  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 14151  000E92  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14152  000E94  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 14153  000E96  6F8F               	movwf	LCD_ButtonDraw@x2& (0+255),b
 14154  000E98  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14155  000E9A  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 14156  000E9C  6F90               	movwf	(LCD_ButtonDraw@x2+1)& (0+255),b
 14157  000E9E                     
 14158                           ; BSR set to: 0
 14159                           ;libraries/lcd_highlevel.c: 472:   y1 = button->posY;
 14160  000E9E  EE20 F002          	lfsr	2,2
 14161  000EA2  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14162  000EA4  26D9               	addwf	fsr2l,f,c
 14163  000EA6  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14164  000EA8  22DA               	addwfc	fsr2h,f,c
 14165  000EAA  CFDE F091          	movff	postinc2,LCD_ButtonDraw@y1
 14166  000EAE  CFDD F092          	movff	postdec2,LCD_ButtonDraw@y1+1
 14167  000EB2                     
 14168                           ; BSR set to: 0
 14169                           ;libraries/lcd_highlevel.c: 473:   y2 = button->posY + button->height;
 14170  000EB2  EE20 F006          	lfsr	2,6
 14171  000EB6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14172  000EB8  26D9               	addwf	fsr2l,f,c
 14173  000EBA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14174  000EBC  22DA               	addwfc	fsr2h,f,c
 14175  000EBE  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14176  000EC2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14177  000EC6  EE20 F002          	lfsr	2,2
 14178  000ECA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14179  000ECC  26D9               	addwf	fsr2l,f,c
 14180  000ECE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14181  000ED0  22DA               	addwfc	fsr2h,f,c
 14182  000ED2  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 14183  000ED6  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 14184  000EDA  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14185  000EDC  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 14186  000EDE  6F93               	movwf	LCD_ButtonDraw@y2& (0+255),b
 14187  000EE0  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14188  000EE2  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 14189  000EE4  6F94               	movwf	(LCD_ButtonDraw@y2+1)& (0+255),b
 14190  000EE6                     
 14191                           ; BSR set to: 0
 14192                           ;libraries/lcd_highlevel.c: 474:   if(button->bgColor != button->txtColor)
 14193  000EE6  EE20 F008          	lfsr	2,8
 14194  000EEA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14195  000EEC  26D9               	addwf	fsr2l,f,c
 14196  000EEE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14197  000EF0  22DA               	addwfc	fsr2h,f,c
 14198  000EF2  EE10 F00A          	lfsr	1,10
 14199  000EF6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14200  000EF8  26E1               	addwf	fsr1l,f,c
 14201  000EFA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14202  000EFC  22E2               	addwfc	fsr1h,f,c
 14203  000EFE  50DE               	movf	postinc2,w,c
 14204  000F00  18E6               	xorwf	postinc1,w,c
 14205  000F02  E109               	bnz	u6310
 14206  000F04  50DE               	movf	postinc2,w,c
 14207  000F06  18E6               	xorwf	postinc1,w,c
 14208  000F08  B4D8               	btfsc	status,2,c
 14209  000F0A  EF89  F007         	goto	u6311
 14210  000F0E  EF8B  F007         	goto	u6310
 14211  000F12                     u6311:
 14212  000F12  EFC8  F007         	goto	l9176
 14213  000F16                     u6310:
 14214  000F16                     
 14215                           ; BSR set to: 0
 14216                           ;libraries/lcd_highlevel.c: 475:   {;libraries/lcd_highlevel.c: 476:     LCD_DrawRect(x1
      +                          , y1, x2, y2, 1, button->bgColor);
 14217  000F16  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 14218  000F1A  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 14219  000F1E  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 14220  000F22  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 14221  000F26  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 14222  000F2A  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 14223  000F2E  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 14224  000F32  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 14225  000F36  0E01               	movlw	1
 14226  000F38  6E1A               	movwf	LCD_DrawRect@fill^0,c
 14227  000F3A  EE20 F00A          	lfsr	2,10
 14228  000F3E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14229  000F40  26D9               	addwf	fsr2l,f,c
 14230  000F42  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14231  000F44  22DA               	addwfc	fsr2h,f,c
 14232  000F46  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 14233  000F4A  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 14234  000F4E  EC02  F014         	call	_LCD_DrawRect	;wreg free
 14235                           
 14236                           ;libraries/lcd_highlevel.c: 477:     LCD_DrawRect(x1, y1, x2, y2, 0, button->txtColor);
 14237  000F52  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 14238  000F56  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 14239  000F5A  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 14240  000F5E  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 14241  000F62  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 14242  000F66  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 14243  000F6A  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 14244  000F6E  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 14245  000F72  0E00               	movlw	0
 14246  000F74  6E1A               	movwf	LCD_DrawRect@fill^0,c
 14247  000F76  0100               	movlb	0	; () banked
 14248  000F78  EE20 F008          	lfsr	2,8
 14249  000F7C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14250  000F7E  26D9               	addwf	fsr2l,f,c
 14251  000F80  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14252  000F82  22DA               	addwfc	fsr2h,f,c
 14253  000F84  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 14254  000F88  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 14255  000F8C  EC02  F014         	call	_LCD_DrawRect	;wreg free
 14256  000F90                     l9176:
 14257                           
 14258                           ;libraries/lcd_highlevel.c: 482:   if((button->text[0] == 'B')&&(button->text[1] == 'M')
      +                          )
 14259  000F90  0100               	movlb	0	; () banked
 14260  000F92  EE20 F00C          	lfsr	2,12
 14261  000F96  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14262  000F98  26D9               	addwf	fsr2l,f,c
 14263  000F9A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14264  000F9C  22DA               	addwfc	fsr2h,f,c
 14265  000F9E  CFDE FFF6          	movff	postinc2,tblptrl
 14266  000FA2  CFDD FFF7          	movff	postdec2,tblptrh
 14267  000FA6                     	if	0	;tblptru may be non-zero
 14268  000FA6                     	endif
 14269  000FA6                     	if	0	;tblptru may be non-zero
 14270  000FA6                     	endif
 14271  000FA6  0008               	tblrd		*
 14272  000FA8  50F5               	movf	tablat,w,c
 14273  000FAA  0A42               	xorlw	66
 14274  000FAC  A4D8               	btfss	status,2,c
 14275  000FAE  EFDB  F007         	goto	u6321
 14276  000FB2  EFDD  F007         	goto	u6320
 14277  000FB6                     u6321:
 14278  000FB6  EF8D  F008         	goto	l9188
 14279  000FBA                     u6320:
 14280  000FBA                     
 14281                           ; BSR set to: 0
 14282  000FBA  EE20 F00C          	lfsr	2,12
 14283  000FBE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14284  000FC0  26D9               	addwf	fsr2l,f,c
 14285  000FC2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14286  000FC4  22DA               	addwfc	fsr2h,f,c
 14287  000FC6  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14288  000FCA  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14289  000FCE  0E01               	movlw	1
 14290  000FD0  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 14291  000FD2  0E00               	movlw	0
 14292  000FD4  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 14293  000FD6  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 14294  000FDA  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 14295  000FDE                     	if	0	;tblptru may be non-zero
 14296  000FDE                     	endif
 14297  000FDE                     	if	0	;tblptru may be non-zero
 14298  000FDE                     	endif
 14299  000FDE  0008               	tblrd		*
 14300  000FE0  50F5               	movf	tablat,w,c
 14301  000FE2  0A4D               	xorlw	77
 14302  000FE4  A4D8               	btfss	status,2,c
 14303  000FE6  EFF7  F007         	goto	u6331
 14304  000FEA  EFF9  F007         	goto	u6330
 14305  000FEE                     u6331:
 14306  000FEE  EF8D  F008         	goto	l9188
 14307  000FF2                     u6330:
 14308  000FF2                     
 14309                           ; BSR set to: 0
 14310                           ;libraries/lcd_highlevel.c: 483:   {;libraries/lcd_highlevel.c: 484:     bmpPtr = (BMP_S
      +                          TRUCT *)button->text;
 14311  000FF2  EE20 F00C          	lfsr	2,12
 14312  000FF6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14313  000FF8  26D9               	addwf	fsr2l,f,c
 14314  000FFA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14315  000FFC  22DA               	addwfc	fsr2h,f,c
 14316  000FFE  CFDE F09A          	movff	postinc2,LCD_ButtonDraw@bmpPtr
 14317  001002  CFDD F09B          	movff	postdec2,LCD_ButtonDraw@bmpPtr+1
 14318  001006                     
 14319                           ; BSR set to: 0
 14320                           ;libraries/lcd_highlevel.c: 485:     yText = button->height / 2 + button->posY - (bmpPtr
      +                          ->biHeight / 2);
 14321  001006  EE20 F002          	lfsr	2,2
 14322  00100A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14323  00100C  26D9               	addwf	fsr2l,f,c
 14324  00100E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14325  001010  22DA               	addwfc	fsr2h,f,c
 14326  001012  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14327  001016  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14328  00101A  0E16               	movlw	22
 14329  00101C  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 14330  00101E  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 14331  001020  0E00               	movlw	0
 14332  001022  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 14333  001024  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 14334  001026  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 14335  00102A  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 14336  00102E                     	if	0	;tblptru may be non-zero
 14337  00102E                     	endif
 14338  00102E                     	if	0	;tblptru may be non-zero
 14339  00102E                     	endif
 14340  00102E  0009               	tblrd		*+
 14341  001030  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 14342  001034  0009               	tblrd		*+
 14343  001036  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 14344  00103A  0009               	tblrd		*+
 14345  00103C  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 14346  001040  0009               	tblrd		*+
 14347  001042  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 14348  001046  90D8               	bcf	status,0,c
 14349  001048  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 14350  00104A  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 14351  00104C  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 14352  00104E  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 14353  001050  EE20 F006          	lfsr	2,6
 14354  001054  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14355  001056  26D9               	addwf	fsr2l,f,c
 14356  001058  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14357  00105A  22DA               	addwfc	fsr2h,f,c
 14358  00105C  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 14359  001060  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 14360  001064  90D8               	bcf	status,0,c
 14361  001066  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 14362  001068  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 14363  00106A  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 14364  00106C  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 14365  00106E  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 14366  001070  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 14367  001072  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14368  001074  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 14369  001076  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14370  001078  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 14371  00107A  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 14372  00107C  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14373  00107E  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 14374  001080  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 14375  001082                     
 14376                           ; BSR set to: 0
 14377                           ;libraries/lcd_highlevel.c: 486:     xText = button->width / 2 + button->posX - (bmpPtr-
      +                          >biWidth / 2);
 14378  001082  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 14379  001086  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 14380  00108A  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14381  00108E  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14382  001092  0E12               	movlw	18
 14383  001094  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 14384  001096  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 14385  001098  0E00               	movlw	0
 14386  00109A  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 14387  00109C  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 14388  00109E  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 14389  0010A2  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 14390  0010A6                     	if	0	;tblptru may be non-zero
 14391  0010A6                     	endif
 14392  0010A6                     	if	0	;tblptru may be non-zero
 14393  0010A6                     	endif
 14394  0010A6  0009               	tblrd		*+
 14395  0010A8  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 14396  0010AC  0009               	tblrd		*+
 14397  0010AE  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 14398  0010B2  0009               	tblrd		*+
 14399  0010B4  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 14400  0010B8  0009               	tblrd		*+
 14401  0010BA  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 14402  0010BE  90D8               	bcf	status,0,c
 14403  0010C0  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 14404  0010C2  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 14405  0010C4  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 14406  0010C6  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 14407  0010C8  EE20 F004          	lfsr	2,4
 14408  0010CC  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14409  0010CE  26D9               	addwf	fsr2l,f,c
 14410  0010D0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14411  0010D2  22DA               	addwfc	fsr2h,f,c
 14412  0010D4  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 14413  0010D8  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 14414  0010DC  90D8               	bcf	status,0,c
 14415  0010DE  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 14416  0010E0  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 14417  0010E2  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 14418  0010E4  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 14419  0010E6  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 14420  0010E8  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 14421  0010EA  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14422  0010EC  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 14423  0010EE  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14424  0010F0  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 14425  0010F2  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 14426  0010F4  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14427  0010F6  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 14428  0010F8  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 14429  0010FA                     
 14430                           ; BSR set to: 0
 14431                           ;libraries/lcd_highlevel.c: 487:     LCD_Bitmap((const uint8_t *)bmpPtr,xText,yText);
 14432  0010FA  C09A  F027         	movff	LCD_ButtonDraw@bmpPtr,LCD_Bitmap@bmpPtr
 14433  0010FE  C09B  F028         	movff	LCD_ButtonDraw@bmpPtr+1,LCD_Bitmap@bmpPtr+1
 14434  001102  C095  F029         	movff	LCD_ButtonDraw@xText,LCD_Bitmap@posX
 14435  001106  C096  F02A         	movff	LCD_ButtonDraw@xText+1,LCD_Bitmap@posX+1
 14436  00110A  C097  F02B         	movff	LCD_ButtonDraw@yText,LCD_Bitmap@posY
 14437  00110E  C098  F02C         	movff	LCD_ButtonDraw@yText+1,LCD_Bitmap@posY+1
 14438  001112  EC2F  F004         	call	_LCD_Bitmap	;wreg free
 14439                           
 14440                           ;libraries/lcd_highlevel.c: 488:   }
 14441  001116  EF9A  F009         	goto	l9204
 14442  00111A                     l9188:
 14443                           
 14444                           ; BSR set to: 0
 14445                           ;libraries/lcd_highlevel.c: 493:   {;libraries/lcd_highlevel.c: 494:     yText = button-
      +                          >height / 2 + button->posY - (button->font->height / 2);
 14446  00111A  EE20 F002          	lfsr	2,2
 14447  00111E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14448  001120  26D9               	addwf	fsr2l,f,c
 14449  001122  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14450  001124  22DA               	addwfc	fsr2h,f,c
 14451  001126  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14452  00112A  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14453  00112E  EE20 F00E          	lfsr	2,14
 14454  001132  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14455  001134  26D9               	addwf	fsr2l,f,c
 14456  001136  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14457  001138  22DA               	addwfc	fsr2h,f,c
 14458  00113A  CFDE FFF6          	movff	postinc2,tblptrl
 14459  00113E  CFDD FFF7          	movff	postdec2,tblptrh
 14460  001142                     	if	0	;tblptru may be non-zero
 14461  001142                     	endif
 14462  001142                     	if	0	;tblptru may be non-zero
 14463  001142                     	endif
 14464  001142  0008               	tblrd		*
 14465  001144  50F5               	movf	tablat,w,c
 14466  001146  6E12               	movwf	___awdiv@dividend^0,c
 14467  001148  6A13               	clrf	(___awdiv@dividend+1)^0,c
 14468  00114A  0E00               	movlw	0
 14469  00114C  6E15               	movwf	(___awdiv@divisor+1)^0,c
 14470  00114E  0E02               	movlw	2
 14471  001150  6E14               	movwf	___awdiv@divisor^0,c
 14472  001152  EC40  F026         	call	___awdiv	;wreg free
 14473  001156  0100               	movlb	0	; () banked
 14474  001158  EE20 F006          	lfsr	2,6
 14475  00115C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14476  00115E  26D9               	addwf	fsr2l,f,c
 14477  001160  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14478  001162  22DA               	addwfc	fsr2h,f,c
 14479  001164  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 14480  001168  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 14481  00116C  90D8               	bcf	status,0,c
 14482  00116E  3181               	rrcf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 14483  001170  6F83               	movwf	(??_LCD_ButtonDraw+5)& (0+255),b
 14484  001172  3180               	rrcf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 14485  001174  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 14486  001176  5012               	movf	?___awdiv^0,w,c
 14487  001178  5F82               	subwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 14488  00117A  5013               	movf	(?___awdiv+1)^0,w,c
 14489  00117C  5B83               	subwfb	(??_LCD_ButtonDraw+5)& (0+255),f,b
 14490  00117E  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14491  001180  2582               	addwf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 14492  001182  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 14493  001184  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14494  001186  2183               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14495  001188  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 14496  00118A                     
 14497                           ; BSR set to: 0
 14498                           ;libraries/lcd_highlevel.c: 495:     for(i=0;i<strlen(button->text);i++)
 14499  00118A  0E00               	movlw	0
 14500  00118C  6F99               	movwf	LCD_ButtonDraw@i& (0+255),b
 14501  00118E  EF25  F009         	goto	l9198
 14502  001192                     l9192:
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;libraries/lcd_highlevel.c: 496:     {;libraries/lcd_highlevel.c: 497:       tempChar = 
      +                          (button->text[i]) - button->font->start_char;
 14506  001192  EE20 F00E          	lfsr	2,14
 14507  001196  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14508  001198  26D9               	addwf	fsr2l,f,c
 14509  00119A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14510  00119C  22DA               	addwfc	fsr2h,f,c
 14511  00119E  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14512  0011A2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14513  0011A6  0E01               	movlw	1
 14514  0011A8  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 14515  0011AA  0E00               	movlw	0
 14516  0011AC  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 14517  0011AE  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 14518  0011B2  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 14519  0011B6                     	if	0	;tblptru may be non-zero
 14520  0011B6                     	endif
 14521  0011B6                     	if	0	;tblptru may be non-zero
 14522  0011B6                     	endif
 14523  0011B6  0008               	tblrd		*
 14524  0011B8  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 14525  0011BC  EE20 F00C          	lfsr	2,12
 14526  0011C0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14527  0011C2  26D9               	addwf	fsr2l,f,c
 14528  0011C4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14529  0011C6  22DA               	addwfc	fsr2h,f,c
 14530  0011C8  CFDE F081          	movff	postinc2,??_LCD_ButtonDraw+3
 14531  0011CC  CFDD F082          	movff	postdec2,??_LCD_ButtonDraw+4
 14532  0011D0  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 14533  0011D2  2781               	addwf	(??_LCD_ButtonDraw+3)& (0+255),f,b
 14534  0011D4  0E00               	movlw	0
 14535  0011D6  2382               	addwfc	(??_LCD_ButtonDraw+4)& (0+255),f,b
 14536  0011D8  C081  FFF6         	movff	??_LCD_ButtonDraw+3,tblptrl
 14537  0011DC  C082  FFF7         	movff	??_LCD_ButtonDraw+4,tblptrh
 14538  0011E0                     	if	0	;tblptru may be non-zero
 14539  0011E0                     	endif
 14540  0011E0                     	if	0	;tblptru may be non-zero
 14541  0011E0                     	endif
 14542  0011E0  0008               	tblrd		*
 14543  0011E2  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 14544  0011E6  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 14545  0011E8  5D83               	subwf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14546  0011EA  6F8A               	movwf	LCD_ButtonDraw@tempChar& (0+255),b
 14547  0011EC                     
 14548                           ; BSR set to: 0
 14549                           ;libraries/lcd_highlevel.c: 498:       width += button->font->descriptor[tempChar].width
      +                          +2;
 14550  0011EC  518A               	movf	LCD_ButtonDraw@tempChar& (0+255),w,b
 14551  0011EE  0D03               	mullw	3
 14552  0011F0  EE20 F00E          	lfsr	2,14
 14553  0011F4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14554  0011F6  26D9               	addwf	fsr2l,f,c
 14555  0011F8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14556  0011FA  22DA               	addwfc	fsr2h,f,c
 14557  0011FC  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14558  001200  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14559  001204  0E03               	movlw	3
 14560  001206  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 14561  001208  0E00               	movlw	0
 14562  00120A  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 14563  00120C  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 14564  001210  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 14565  001214                     	if	0	;tblptru may be non-zero
 14566  001214                     	endif
 14567  001214                     	if	0	;tblptru may be non-zero
 14568  001214                     	endif
 14569  001214  0009               	tblrd		*+
 14570  001216  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 14571  00121A  0009               	tblrd		*+
 14572  00121C  CFF5 F081          	movff	tablat,??_LCD_ButtonDraw+3
 14573  001220  50F3               	movf	243,w,c
 14574  001222  2780               	addwf	(??_LCD_ButtonDraw+2)& (0+255),f,b
 14575  001224  50F4               	movf	244,w,c
 14576  001226  2381               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),f,b
 14577  001228  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 14578  00122C  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 14579  001230                     	if	0	;tblptru may be non-zero
 14580  001230                     	endif
 14581  001230                     	if	0	;tblptru may be non-zero
 14582  001230                     	endif
 14583  001230  0008               	tblrd		*
 14584  001232  50F5               	movf	tablat,w,c
 14585  001234  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 14586  001236  6B83               	clrf	(??_LCD_ButtonDraw+5)& (0+255),b
 14587  001238  0E02               	movlw	2
 14588  00123A  2782               	addwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 14589  00123C  0E00               	movlw	0
 14590  00123E  2383               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),f,b
 14591  001240  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 14592  001242  278B               	addwf	LCD_ButtonDraw@width& (0+255),f,b
 14593  001244  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14594  001246  238C               	addwfc	(LCD_ButtonDraw@width+1)& (0+255),f,b
 14595  001248                     
 14596                           ; BSR set to: 0
 14597                           ;libraries/lcd_highlevel.c: 499:     }
 14598  001248  2B99               	incf	LCD_ButtonDraw@i& (0+255),f,b
 14599  00124A                     l9198:
 14600                           
 14601                           ; BSR set to: 0
 14602  00124A  EE20 F00C          	lfsr	2,12
 14603  00124E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14604  001250  26D9               	addwf	fsr2l,f,c
 14605  001252  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14606  001254  22DA               	addwfc	fsr2h,f,c
 14607  001256  CFDE F012          	movff	postinc2,strlen@s
 14608  00125A  CFDD F013          	movff	postdec2,strlen@s+1
 14609  00125E  EC09  F02E         	call	_strlen	;wreg free
 14610  001262  0100               	movlb	0	; () banked
 14611  001264  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 14612  001266  6F7E               	movwf	??_LCD_ButtonDraw& (0+255),b
 14613  001268  6B7F               	clrf	(??_LCD_ButtonDraw+1)& (0+255),b
 14614  00126A  5012               	movf	?_strlen^0,w,c
 14615  00126C  5D7E               	subwf	??_LCD_ButtonDraw& (0+255),w,b
 14616  00126E  5013               	movf	(?_strlen+1)^0,w,c
 14617  001270  597F               	subwfb	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14618  001272  A0D8               	btfss	status,0,c
 14619  001274  EF3E  F009         	goto	u6341
 14620  001278  EF40  F009         	goto	u6340
 14621  00127C                     u6341:
 14622  00127C  EFC9  F008         	goto	l9192
 14623  001280                     u6340:
 14624  001280                     
 14625                           ; BSR set to: 0
 14626                           ;libraries/lcd_highlevel.c: 500:     xText = button->width / 2 + button->posX - (width /
      +                           2);
 14627  001280  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 14628  001284  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 14629  001288  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 14630  00128C  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 14631  001290  90D8               	bcf	status,0,c
 14632  001292  318C               	rrcf	(LCD_ButtonDraw@width+1)& (0+255),w,b
 14633  001294  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 14634  001296  318B               	rrcf	LCD_ButtonDraw@width& (0+255),w,b
 14635  001298  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 14636  00129A  EE20 F004          	lfsr	2,4
 14637  00129E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14638  0012A0  26D9               	addwf	fsr2l,f,c
 14639  0012A2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14640  0012A4  22DA               	addwfc	fsr2h,f,c
 14641  0012A6  CFDE F082          	movff	postinc2,??_LCD_ButtonDraw+4
 14642  0012AA  CFDD F083          	movff	postdec2,??_LCD_ButtonDraw+5
 14643  0012AE  90D8               	bcf	status,0,c
 14644  0012B0  3183               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 14645  0012B2  6F85               	movwf	(??_LCD_ButtonDraw+7)& (0+255),b
 14646  0012B4  3182               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 14647  0012B6  6F84               	movwf	(??_LCD_ButtonDraw+6)& (0+255),b
 14648  0012B8  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 14649  0012BA  5F84               	subwf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 14650  0012BC  5181               	movf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 14651  0012BE  5B85               	subwfb	(??_LCD_ButtonDraw+7)& (0+255),f,b
 14652  0012C0  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 14653  0012C2  2584               	addwf	(??_LCD_ButtonDraw+6)& (0+255),w,b
 14654  0012C4  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 14655  0012C6  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 14656  0012C8  2185               	addwfc	(??_LCD_ButtonDraw+7)& (0+255),w,b
 14657  0012CA  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 14658  0012CC                     
 14659                           ; BSR set to: 0
 14660                           ;libraries/lcd_highlevel.c: 501:     LCD_DrawText(button->text, button->font,A_LEFT,
 14661  0012CC  EE20 F00C          	lfsr	2,12
 14662  0012D0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14663  0012D2  26D9               	addwf	fsr2l,f,c
 14664  0012D4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14665  0012D6  22DA               	addwfc	fsr2h,f,c
 14666  0012D8  CFDE F020          	movff	postinc2,LCD_DrawText@msg
 14667  0012DC  CFDD F021          	movff	postdec2,LCD_DrawText@msg+1
 14668  0012E0  EE20 F00E          	lfsr	2,14
 14669  0012E4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14670  0012E6  26D9               	addwf	fsr2l,f,c
 14671  0012E8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14672  0012EA  22DA               	addwfc	fsr2h,f,c
 14673  0012EC  CFDE F022          	movff	postinc2,LCD_DrawText@font
 14674  0012F0  CFDD F023          	movff	postdec2,LCD_DrawText@font+1
 14675  0012F4  0E00               	movlw	0
 14676  0012F6  6E24               	movwf	LCD_DrawText@align^0,c
 14677  0012F8  C095  F025         	movff	LCD_ButtonDraw@xText,LCD_DrawText@posX
 14678  0012FC  C096  F026         	movff	LCD_ButtonDraw@xText+1,LCD_DrawText@posX+1
 14679  001300  C097  F027         	movff	LCD_ButtonDraw@yText,LCD_DrawText@posY
 14680  001304  C098  F028         	movff	LCD_ButtonDraw@yText+1,LCD_DrawText@posY+1
 14681  001308  EE20 F008          	lfsr	2,8
 14682  00130C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14683  00130E  26D9               	addwf	fsr2l,f,c
 14684  001310  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14685  001312  22DA               	addwfc	fsr2h,f,c
 14686  001314  CFDE F029          	movff	postinc2,LCD_DrawText@color
 14687  001318  CFDD F02A          	movff	postdec2,LCD_DrawText@color+1
 14688  00131C  EE20 F00A          	lfsr	2,10
 14689  001320  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 14690  001322  26D9               	addwf	fsr2l,f,c
 14691  001324  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 14692  001326  22DA               	addwfc	fsr2h,f,c
 14693  001328  CFDE F02B          	movff	postinc2,LCD_DrawText@bg_color
 14694  00132C  CFDD F02C          	movff	postdec2,LCD_DrawText@bg_color+1
 14695  001330  EC5B  F00E         	call	_LCD_DrawText	;wreg free
 14696  001334                     l9204:
 14697                           
 14698                           ;libraries/lcd_highlevel.c: 504:   LCD_ButtonUpdate(button);
 14699  001334  C07C  F025         	movff	LCD_ButtonDraw@button,LCD_ButtonUpdate@button
 14700  001338  C07D  F026         	movff	LCD_ButtonDraw@button+1,LCD_ButtonUpdate@button+1
 14701  00133C  EC9A  F019         	call	_LCD_ButtonUpdate	;wreg free
 14702  001340  0012               	return		;funcret
 14703  001342                     __end_of_LCD_ButtonDraw:
 14704                           	callstack 0
 14705                           
 14706 ;; *************** function _LCD_DrawText *****************
 14707 ;; Defined at:
 14708 ;;		line 713 in file "libraries/lcd_highlevel.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;  msg             2   31[COMRAM] PTR const unsigned char 
 14711 ;;		 -> touchScreenController@s(20), STR_9(11), STR_8(8), STR_7(4), 
 14712 ;;		 -> STR_6(4), STR_5(8), STR_4(9), STR_3(9), 
 14713 ;;		 -> STR_2(11), STR_1(10), 
 14714 ;;  font            2   33[COMRAM] PTR const struct .
 14715 ;;		 -> arialNarrow_12ptFontInfo(7), 
 14716 ;;  align           1   35[COMRAM] enum E355
 14717 ;;  posX            2   36[COMRAM] unsigned short 
 14718 ;;  posY            2   38[COMRAM] unsigned short 
 14719 ;;  color           2   40[COMRAM] unsigned short 
 14720 ;;  bg_color        2   42[COMRAM] unsigned short 
 14721 ;; Auto vars:     Size  Location     Type
 14722 ;;  posXEnd         2   58[COMRAM] unsigned short 
 14723 ;;  posYEnd         2   56[COMRAM] unsigned short 
 14724 ;;  yOffset         2   52[COMRAM] unsigned short 
 14725 ;;  offset          2   50[COMRAM] unsigned short 
 14726 ;;  width           1   64[COMRAM] unsigned char 
 14727 ;;  x               1   63[COMRAM] unsigned char 
 14728 ;;  tempChar        1   62[COMRAM] char 
 14729 ;;  i               1   61[COMRAM] unsigned char 
 14730 ;;  y               1   60[COMRAM] unsigned char 
 14731 ;;  fontPixel       1   55[COMRAM] unsigned char 
 14732 ;;  fontByte        1   54[COMRAM] unsigned char 
 14733 ;; Return value:  Size  Location     Type
 14734 ;;                  1    wreg      void 
 14735 ;; Registers used:
 14736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/0
 14739 ;;		On exit  : 0/0
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14742 ;;      Params:        13       0       0       0       0       0       0
 14743 ;;      Locals:        15       0       0       0       0       0       0
 14744 ;;      Temps:          6       0       0       0       0       0       0
 14745 ;;      Totals:        34       0       0       0       0       0       0
 14746 ;;Total ram usage:       34 bytes
 14747 ;; Hardware stack levels used: 1
 14748 ;; Hardware stack levels required when called: 5
 14749 ;; This function calls:
 14750 ;;		___awdiv
 14751 ;;		___wmul
 14752 ;;		_strlen
 14753 ;; This function is called by:
 14754 ;;		_Factory_init
 14755 ;;		_Menu_welcomeDraw
 14756 ;;		_Menu_parametersDraw
 14757 ;;		_LCD_ButtonDraw
 14758 ;;		_touchScreenController
 14759 ;; This function uses a non-reentrant model
 14760 ;;
 14761                           
 14762                           	psect	text61
 14763  001CB6                     __ptext61:
 14764                           	callstack 0
 14765  001CB6                     _LCD_DrawText:
 14766                           	callstack 20
 14767  001CB6                     
 14768                           ;libraries/lcd_highlevel.c: 713: void LCD_DrawText(const uint8_t * msg,const FONT_INFO *
      +                           font, ALIGN align,;libraries/lcd_highlevel.c: 714:         uint16_t posX, uint16_t posY
      +                          , uint16_t color, uint16_t bg_color);libraries/lcd_highlevel.c: 715: {;libraries/lcd_hig
      +                          hlevel.c: 716:   uint8_t x,y,i;;libraries/lcd_highlevel.c: 717:   int8_t tempChar;;libra
      +                          ries/lcd_highlevel.c: 718:   uint16_t offset;;libraries/lcd_highlevel.c: 719:   uint8_t 
      +                          width=0;
 14769  001CB6  0E00               	movlw	0
 14770  001CB8  6E41               	movwf	LCD_DrawText@width^0,c
 14771                           
 14772                           ;libraries/lcd_highlevel.c: 720:   uint8_t fontByte,fontPixel;;libraries/lcd_highlevel.c
      +                          : 721:   uint16_t posYEnd, posXEnd, yOffset;;libraries/lcd_highlevel.c: 725:   for(i=0;i
      +                          <strlen(msg);i++)
 14773  001CBA  0E00               	movlw	0
 14774  001CBC  6E3E               	movwf	LCD_DrawText@i^0,c
 14775  001CBE  EFB0  F00E         	goto	l8476
 14776  001CC2                     l8470:
 14777                           
 14778                           ;libraries/lcd_highlevel.c: 726:   {;libraries/lcd_highlevel.c: 727:     tempChar = (msg
      +                          [i]) - font->start_char;
 14779  001CC2  0E01               	movlw	1
 14780  001CC4  2422               	addwf	LCD_DrawText@font^0,w,c
 14781  001CC6  6E2D               	movwf	??_LCD_DrawText^0,c
 14782  001CC8  0E00               	movlw	0
 14783  001CCA  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 14784  001CCC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 14785  001CCE  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 14786  001CD2  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 14787  001CD6                     	if	0	;tblptru may be non-zero
 14788  001CD6                     	endif
 14789  001CD6                     	if	0	;tblptru may be non-zero
 14790  001CD6                     	endif
 14791  001CD6  0008               	tblrd		*
 14792  001CD8  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 14793  001CDC  503E               	movf	LCD_DrawText@i^0,w,c
 14794  001CDE  2420               	addwf	LCD_DrawText@msg^0,w,c
 14795  001CE0  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 14796  001CE2  0E00               	movlw	0
 14797  001CE4  2021               	addwfc	(LCD_DrawText@msg+1)^0,w,c
 14798  001CE6  6E31               	movwf	(??_LCD_DrawText+4)^0,c
 14799  001CE8  C030  FFF6         	movff	??_LCD_DrawText+3,tblptrl
 14800  001CEC  C031  FFF7         	movff	??_LCD_DrawText+4,tblptrh
 14801  001CF0  6AF8               	clrf	tblptru,c
 14802  001CF2  0E05               	movlw	(high __ramtop+-1)
 14803  001CF4  64F7               	cpfsgt	tblptrh,c
 14804  001CF6  D003               	bra	u5847
 14805  001CF8  0008               	tblrd		*
 14806  001CFA  50F5               	movf	tablat,w,c
 14807  001CFC  D005               	bra	u5840
 14808  001CFE                     u5847:
 14809  001CFE  CFF6 FFE1          	movff	tblptrl,fsr1l
 14810  001D02  CFF7 FFE2          	movff	tblptrh,fsr1h
 14811  001D06  50E7               	movf	indf1,w,c
 14812  001D08                     u5840:
 14813  001D08  6E32               	movwf	(??_LCD_DrawText+5)^0,c
 14814  001D0A  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 14815  001D0C  5C32               	subwf	(??_LCD_DrawText+5)^0,w,c
 14816  001D0E  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 14817  001D10                     
 14818                           ;libraries/lcd_highlevel.c: 728:     width += font->descriptor[tempChar].width+2;
 14819  001D10  503F               	movf	LCD_DrawText@tempChar^0,w,c
 14820  001D12  6E1A               	movwf	___wmul@multiplier^0,c
 14821  001D14  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14822  001D16  BE1A               	btfsc	___wmul@multiplier^0,7,c
 14823  001D18  061B               	decf	(___wmul@multiplier+1)^0,f,c
 14824  001D1A  0E00               	movlw	0
 14825  001D1C  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 14826  001D1E  0E03               	movlw	3
 14827  001D20  6E1C               	movwf	___wmul@multiplicand^0,c
 14828  001D22  EC0F  F02F         	call	___wmul	;wreg free
 14829  001D26  0E03               	movlw	3
 14830  001D28  2422               	addwf	LCD_DrawText@font^0,w,c
 14831  001D2A  6E2D               	movwf	??_LCD_DrawText^0,c
 14832  001D2C  0E00               	movlw	0
 14833  001D2E  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 14834  001D30  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 14835  001D32  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 14836  001D36  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 14837  001D3A                     	if	0	;tblptru may be non-zero
 14838  001D3A                     	endif
 14839  001D3A                     	if	0	;tblptru may be non-zero
 14840  001D3A                     	endif
 14841  001D3A  0009               	tblrd		*+
 14842  001D3C  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 14843  001D40  0009               	tblrd		*+
 14844  001D42  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 14845  001D46  501A               	movf	?___wmul^0,w,c
 14846  001D48  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 14847  001D4A  501B               	movf	(?___wmul+1)^0,w,c
 14848  001D4C  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 14849  001D4E  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 14850  001D52  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 14851  001D56                     	if	0	;tblptru may be non-zero
 14852  001D56                     	endif
 14853  001D56                     	if	0	;tblptru may be non-zero
 14854  001D56                     	endif
 14855  001D56  0008               	tblrd		*
 14856  001D58  50F5               	movf	tablat,w,c
 14857  001D5A  0F02               	addlw	2
 14858  001D5C  2641               	addwf	LCD_DrawText@width^0,f,c
 14859  001D5E                     
 14860                           ;libraries/lcd_highlevel.c: 729:   }
 14861  001D5E  2A3E               	incf	LCD_DrawText@i^0,f,c
 14862  001D60                     l8476:
 14863  001D60  C020  F012         	movff	LCD_DrawText@msg,strlen@s
 14864  001D64  C021  F013         	movff	LCD_DrawText@msg+1,strlen@s+1
 14865  001D68  EC09  F02E         	call	_strlen	;wreg free
 14866  001D6C  503E               	movf	LCD_DrawText@i^0,w,c
 14867  001D6E  6E2D               	movwf	??_LCD_DrawText^0,c
 14868  001D70  6A2E               	clrf	(??_LCD_DrawText+1)^0,c
 14869  001D72  5012               	movf	?_strlen^0,w,c
 14870  001D74  5C2D               	subwf	??_LCD_DrawText^0,w,c
 14871  001D76  5013               	movf	(?_strlen+1)^0,w,c
 14872  001D78  582E               	subwfb	(??_LCD_DrawText+1)^0,w,c
 14873  001D7A  A0D8               	btfss	status,0,c
 14874  001D7C  EFC2  F00E         	goto	u5851
 14875  001D80  EFC4  F00E         	goto	u5850
 14876  001D84                     u5851:
 14877  001D84  EF61  F00E         	goto	l8470
 14878  001D88                     u5850:
 14879  001D88                     
 14880                           ;libraries/lcd_highlevel.c: 730:   if(align == A_RIGHT)
 14881  001D88  0424               	decf	LCD_DrawText@align^0,w,c
 14882  001D8A  A4D8               	btfss	status,2,c
 14883  001D8C  EFCA  F00E         	goto	u5861
 14884  001D90  EFCC  F00E         	goto	u5860
 14885  001D94                     u5861:
 14886  001D94  EFD5  F00E         	goto	l8482
 14887  001D98                     u5860:
 14888  001D98                     
 14889                           ;libraries/lcd_highlevel.c: 731:   {;libraries/lcd_highlevel.c: 732:     posX = posX - w
      +                          idth;
 14890  001D98  5041               	movf	LCD_DrawText@width^0,w,c
 14891  001D9A  5C25               	subwf	LCD_DrawText@posX^0,w,c
 14892  001D9C  6E25               	movwf	LCD_DrawText@posX^0,c
 14893  001D9E  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 14894  001DA0  A0D8               	btfss	status,0,c
 14895  001DA2  0426               	decf	(LCD_DrawText@posX+1)^0,w,c
 14896  001DA4  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 14897                           
 14898                           ;libraries/lcd_highlevel.c: 733:   }
 14899  001DA6  EFED  F00E         	goto	l8486
 14900  001DAA                     l8482:
 14901  001DAA  0E02               	movlw	2
 14902  001DAC  1824               	xorwf	LCD_DrawText@align^0,w,c
 14903  001DAE  A4D8               	btfss	status,2,c
 14904  001DB0  EFDC  F00E         	goto	u5871
 14905  001DB4  EFDE  F00E         	goto	u5870
 14906  001DB8                     u5871:
 14907  001DB8  EFED  F00E         	goto	l8486
 14908  001DBC                     u5870:
 14909  001DBC                     
 14910                           ;libraries/lcd_highlevel.c: 735:   {;libraries/lcd_highlevel.c: 736:     posX = posX - w
      +                          idth / 2;
 14911  001DBC  C041  F012         	movff	LCD_DrawText@width,___awdiv@dividend
 14912  001DC0  6A13               	clrf	(___awdiv@dividend+1)^0,c
 14913  001DC2  0E00               	movlw	0
 14914  001DC4  6E15               	movwf	(___awdiv@divisor+1)^0,c
 14915  001DC6  0E02               	movlw	2
 14916  001DC8  6E14               	movwf	___awdiv@divisor^0,c
 14917  001DCA  EC40  F026         	call	___awdiv	;wreg free
 14918  001DCE  5012               	movf	?___awdiv^0,w,c
 14919  001DD0  5C25               	subwf	LCD_DrawText@posX^0,w,c
 14920  001DD2  6E25               	movwf	LCD_DrawText@posX^0,c
 14921  001DD4  5013               	movf	(?___awdiv+1)^0,w,c
 14922  001DD6  5826               	subwfb	(LCD_DrawText@posX+1)^0,w,c
 14923  001DD8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 14924  001DDA                     l8486:
 14925                           
 14926                           ;libraries/lcd_highlevel.c: 740:   {;libraries/lcd_highlevel.c: 741:     tempChar = (*ms
      +                          g) - font->start_char;
 14927  001DDA  0E01               	movlw	1
 14928  001DDC  2422               	addwf	LCD_DrawText@font^0,w,c
 14929  001DDE  6E2D               	movwf	??_LCD_DrawText^0,c
 14930  001DE0  0E00               	movlw	0
 14931  001DE2  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 14932  001DE4  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 14933  001DE6  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 14934  001DEA  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 14935  001DEE                     	if	0	;tblptru may be non-zero
 14936  001DEE                     	endif
 14937  001DEE                     	if	0	;tblptru may be non-zero
 14938  001DEE                     	endif
 14939  001DEE  0008               	tblrd		*
 14940  001DF0  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 14941  001DF4  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 14942  001DF8  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 14943  001DFC  6AF8               	clrf	tblptru,c
 14944  001DFE  0E05               	movlw	(high __ramtop+-1)
 14945  001E00  64F7               	cpfsgt	tblptrh,c
 14946  001E02  D003               	bra	u5887
 14947  001E04  0008               	tblrd		*
 14948  001E06  50F5               	movf	tablat,w,c
 14949  001E08  D005               	bra	u5880
 14950  001E0A                     u5887:
 14951  001E0A  CFF6 FFE1          	movff	tblptrl,fsr1l
 14952  001E0E  CFF7 FFE2          	movff	tblptrh,fsr1h
 14953  001E12  50E7               	movf	indf1,w,c
 14954  001E14                     u5880:
 14955  001E14  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 14956  001E16  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 14957  001E18  5C30               	subwf	(??_LCD_DrawText+3)^0,w,c
 14958  001E1A  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 14959  001E1C                     
 14960                           ;libraries/lcd_highlevel.c: 742:     offset = font->descriptor[tempChar].offset;
 14961  001E1C  503F               	movf	LCD_DrawText@tempChar^0,w,c
 14962  001E1E  6E1A               	movwf	___wmul@multiplier^0,c
 14963  001E20  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14964  001E22  BE1A               	btfsc	___wmul@multiplier^0,7,c
 14965  001E24  061B               	decf	(___wmul@multiplier+1)^0,f,c
 14966  001E26  0E00               	movlw	0
 14967  001E28  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 14968  001E2A  0E03               	movlw	3
 14969  001E2C  6E1C               	movwf	___wmul@multiplicand^0,c
 14970  001E2E  EC0F  F02F         	call	___wmul	;wreg free
 14971  001E32  0E03               	movlw	3
 14972  001E34  2422               	addwf	LCD_DrawText@font^0,w,c
 14973  001E36  6E2D               	movwf	??_LCD_DrawText^0,c
 14974  001E38  0E00               	movlw	0
 14975  001E3A  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 14976  001E3C  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 14977  001E3E  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 14978  001E42  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 14979  001E46                     	if	0	;tblptru may be non-zero
 14980  001E46                     	endif
 14981  001E46                     	if	0	;tblptru may be non-zero
 14982  001E46                     	endif
 14983  001E46  0009               	tblrd		*+
 14984  001E48  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 14985  001E4C  0009               	tblrd		*+
 14986  001E4E  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 14987  001E52  501A               	movf	?___wmul^0,w,c
 14988  001E54  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 14989  001E56  501B               	movf	(?___wmul+1)^0,w,c
 14990  001E58  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 14991  001E5A  0E01               	movlw	1
 14992  001E5C  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 14993  001E5E  0E00               	movlw	0
 14994  001E60  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 14995  001E62  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 14996  001E66  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 14997  001E6A                     	if	0	;tblptru may be non-zero
 14998  001E6A                     	endif
 14999  001E6A                     	if	0	;tblptru may be non-zero
 15000  001E6A                     	endif
 15001  001E6A  0009               	tblrd		*+
 15002  001E6C  CFF5 F033          	movff	tablat,LCD_DrawText@offset
 15003  001E70  000A               	tblrd		*-
 15004  001E72  CFF5 F034          	movff	tablat,LCD_DrawText@offset+1
 15005  001E76                     
 15006                           ;libraries/lcd_highlevel.c: 743:     width = font->descriptor[tempChar].width;
 15007  001E76  503F               	movf	LCD_DrawText@tempChar^0,w,c
 15008  001E78  6E1A               	movwf	___wmul@multiplier^0,c
 15009  001E7A  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 15010  001E7C  BE1A               	btfsc	___wmul@multiplier^0,7,c
 15011  001E7E  061B               	decf	(___wmul@multiplier+1)^0,f,c
 15012  001E80  0E00               	movlw	0
 15013  001E82  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 15014  001E84  0E03               	movlw	3
 15015  001E86  6E1C               	movwf	___wmul@multiplicand^0,c
 15016  001E88  EC0F  F02F         	call	___wmul	;wreg free
 15017  001E8C  0E03               	movlw	3
 15018  001E8E  2422               	addwf	LCD_DrawText@font^0,w,c
 15019  001E90  6E2D               	movwf	??_LCD_DrawText^0,c
 15020  001E92  0E00               	movlw	0
 15021  001E94  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 15022  001E96  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15023  001E98  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 15024  001E9C  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 15025  001EA0                     	if	0	;tblptru may be non-zero
 15026  001EA0                     	endif
 15027  001EA0                     	if	0	;tblptru may be non-zero
 15028  001EA0                     	endif
 15029  001EA0  0009               	tblrd		*+
 15030  001EA2  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 15031  001EA6  0009               	tblrd		*+
 15032  001EA8  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 15033  001EAC  501A               	movf	?___wmul^0,w,c
 15034  001EAE  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15035  001EB0  501B               	movf	(?___wmul+1)^0,w,c
 15036  001EB2  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15037  001EB4  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 15038  001EB8  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 15039  001EBC                     	if	0	;tblptru may be non-zero
 15040  001EBC                     	endif
 15041  001EBC                     	if	0	;tblptru may be non-zero
 15042  001EBC                     	endif
 15043  001EBC  0008               	tblrd		*
 15044  001EBE  CFF5 F041          	movff	tablat,LCD_DrawText@width
 15045  001EC2                     
 15046                           ;libraries/lcd_highlevel.c: 748:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 15047  001EC2  0E2A               	movlw	42
 15048  001EC4  6E80               	movwf	128,c	;volatile
 15049  001EC6  988B               	bcf	3979,4,c	;volatile
 15050  001EC8  968B               	bcf	3979,3,c	;volatile
 15051  001ECA  868B               	bsf	3979,3,c	;volatile
 15052  001ECC  888B               	bsf	3979,4,c	;volatile
 15053  001ECE                     
 15054                           ;libraries/lcd_highlevel.c: 749:     PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 15055  001ECE  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 15056  001ED0  6E80               	movwf	128,c	;volatile
 15057  001ED2  968B               	bcf	3979,3,c	;volatile
 15058  001ED4  868B               	bsf	3979,3,c	;volatile
 15059  001ED6                     
 15060                           ;libraries/lcd_highlevel.c: 750:     PORTA = posX; LATC3 = 0; LATC3 = 1;;
 15061  001ED6  C025  FF80         	movff	LCD_DrawText@posX,3968	;volatile
 15062  001EDA  968B               	bcf	3979,3,c	;volatile
 15063  001EDC  868B               	bsf	3979,3,c	;volatile
 15064  001EDE                     
 15065                           ;libraries/lcd_highlevel.c: 751:     posXEnd = posX+width-1+2;
 15066  001EDE  5041               	movf	LCD_DrawText@width^0,w,c
 15067  001EE0  2425               	addwf	LCD_DrawText@posX^0,w,c
 15068  001EE2  6E2D               	movwf	??_LCD_DrawText^0,c
 15069  001EE4  0E00               	movlw	0
 15070  001EE6  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 15071  001EE8  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15072  001EEA  0E01               	movlw	1
 15073  001EEC  242D               	addwf	??_LCD_DrawText^0,w,c
 15074  001EEE  6E3B               	movwf	LCD_DrawText@posXEnd^0,c
 15075  001EF0  0E00               	movlw	0
 15076  001EF2  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 15077  001EF4  6E3C               	movwf	(LCD_DrawText@posXEnd+1)^0,c
 15078  001EF6                     
 15079                           ;libraries/lcd_highlevel.c: 752:     PORTA = posXEnd>>8; LATC3 = 0; LATC3 = 1;;
 15080  001EF6  503C               	movf	(LCD_DrawText@posXEnd+1)^0,w,c
 15081  001EF8  6E80               	movwf	128,c	;volatile
 15082  001EFA  968B               	bcf	3979,3,c	;volatile
 15083  001EFC  868B               	bsf	3979,3,c	;volatile
 15084  001EFE                     
 15085                           ;libraries/lcd_highlevel.c: 753:     PORTA = posXEnd; LATC3 = 0; LATC3 = 1;;
 15086  001EFE  C03B  FF80         	movff	LCD_DrawText@posXEnd,3968	;volatile
 15087  001F02  968B               	bcf	3979,3,c	;volatile
 15088  001F04  868B               	bsf	3979,3,c	;volatile
 15089  001F06                     
 15090                           ;libraries/lcd_highlevel.c: 755:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 15091  001F06  0E2B               	movlw	43
 15092  001F08  6E80               	movwf	128,c	;volatile
 15093  001F0A  988B               	bcf	3979,4,c	;volatile
 15094  001F0C  968B               	bcf	3979,3,c	;volatile
 15095  001F0E  868B               	bsf	3979,3,c	;volatile
 15096  001F10  888B               	bsf	3979,4,c	;volatile
 15097  001F12                     
 15098                           ;libraries/lcd_highlevel.c: 756:     PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 15099  001F12  5028               	movf	(LCD_DrawText@posY+1)^0,w,c
 15100  001F14  6E80               	movwf	128,c	;volatile
 15101  001F16  968B               	bcf	3979,3,c	;volatile
 15102  001F18  868B               	bsf	3979,3,c	;volatile
 15103  001F1A                     
 15104                           ;libraries/lcd_highlevel.c: 757:     PORTA = posY; LATC3 = 0; LATC3 = 1;;
 15105  001F1A  C027  FF80         	movff	LCD_DrawText@posY,3968	;volatile
 15106  001F1E  968B               	bcf	3979,3,c	;volatile
 15107  001F20  868B               	bsf	3979,3,c	;volatile
 15108  001F22                     
 15109                           ;libraries/lcd_highlevel.c: 758:     posYEnd = posY + font->height-1;
 15110  001F22  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 15111  001F26  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 15112  001F2A                     	if	0	;tblptru may be non-zero
 15113  001F2A                     	endif
 15114  001F2A                     	if	0	;tblptru may be non-zero
 15115  001F2A                     	endif
 15116  001F2A  0008               	tblrd		*
 15117  001F2C  50F5               	movf	tablat,w,c
 15118  001F2E  2427               	addwf	LCD_DrawText@posY^0,w,c
 15119  001F30  6E2D               	movwf	??_LCD_DrawText^0,c
 15120  001F32  0E00               	movlw	0
 15121  001F34  2028               	addwfc	(LCD_DrawText@posY+1)^0,w,c
 15122  001F36  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15123  001F38  0EFF               	movlw	255
 15124  001F3A  242D               	addwf	??_LCD_DrawText^0,w,c
 15125  001F3C  6E39               	movwf	LCD_DrawText@posYEnd^0,c
 15126  001F3E  0EFF               	movlw	255
 15127  001F40  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 15128  001F42  6E3A               	movwf	(LCD_DrawText@posYEnd+1)^0,c
 15129  001F44                     
 15130                           ;libraries/lcd_highlevel.c: 759:     PORTA = posYEnd>>8; LATC3 = 0; LATC3 = 1;;
 15131  001F44  503A               	movf	(LCD_DrawText@posYEnd+1)^0,w,c
 15132  001F46  6E80               	movwf	128,c	;volatile
 15133  001F48  968B               	bcf	3979,3,c	;volatile
 15134  001F4A  868B               	bsf	3979,3,c	;volatile
 15135  001F4C                     
 15136                           ;libraries/lcd_highlevel.c: 760:     PORTA = posYEnd; LATC3 = 0; LATC3 = 1;;
 15137  001F4C  C039  FF80         	movff	LCD_DrawText@posYEnd,3968	;volatile
 15138  001F50  968B               	bcf	3979,3,c	;volatile
 15139  001F52  868B               	bsf	3979,3,c	;volatile
 15140  001F54                     
 15141                           ;libraries/lcd_highlevel.c: 761:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 15142  001F54  0E2C               	movlw	44
 15143  001F56  6E80               	movwf	128,c	;volatile
 15144  001F58  988B               	bcf	3979,4,c	;volatile
 15145  001F5A  968B               	bcf	3979,3,c	;volatile
 15146  001F5C  868B               	bsf	3979,3,c	;volatile
 15147  001F5E  888B               	bsf	3979,4,c	;volatile
 15148  001F60                     
 15149                           ;libraries/lcd_highlevel.c: 763:     for(y=0;y<font->height;y++)
 15150  001F60  0E00               	movlw	0
 15151  001F62  6E3D               	movwf	LCD_DrawText@y^0,c
 15152  001F64  EF4B  F010         	goto	l8638
 15153  001F68                     l8576:
 15154                           
 15155                           ;libraries/lcd_highlevel.c: 764:     {;libraries/lcd_highlevel.c: 765:       yOffset = o
      +                          ffset + (y * ((width+7)/8));
 15156  001F68  C03D  F01A         	movff	LCD_DrawText@y,___wmul@multiplier
 15157  001F6C  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 15158  001F6E  0E00               	movlw	0
 15159  001F70  6E15               	movwf	(___awdiv@divisor+1)^0,c
 15160  001F72  0E08               	movlw	8
 15161  001F74  6E14               	movwf	___awdiv@divisor^0,c
 15162  001F76  0E07               	movlw	7
 15163  001F78  2441               	addwf	LCD_DrawText@width^0,w,c
 15164  001F7A  6E12               	movwf	___awdiv@dividend^0,c
 15165  001F7C  6A13               	clrf	(___awdiv@dividend+1)^0,c
 15166  001F7E  0E00               	movlw	0
 15167  001F80  2213               	addwfc	(___awdiv@dividend+1)^0,f,c
 15168  001F82  EC40  F026         	call	___awdiv	;wreg free
 15169  001F86  C012  F01C         	movff	?___awdiv,___wmul@multiplicand
 15170  001F8A  C013  F01D         	movff	?___awdiv+1,___wmul@multiplicand+1
 15171  001F8E  EC0F  F02F         	call	___wmul	;wreg free
 15172  001F92  5033               	movf	LCD_DrawText@offset^0,w,c
 15173  001F94  241A               	addwf	?___wmul^0,w,c
 15174  001F96  6E35               	movwf	LCD_DrawText@yOffset^0,c
 15175  001F98  5034               	movf	(LCD_DrawText@offset+1)^0,w,c
 15176  001F9A  201B               	addwfc	(?___wmul+1)^0,w,c
 15177  001F9C  6E36               	movwf	(LCD_DrawText@yOffset+1)^0,c
 15178  001F9E                     
 15179                           ;libraries/lcd_highlevel.c: 766:       for(x=0;x<width;x++)
 15180  001F9E  0E00               	movlw	0
 15181  001FA0  6E40               	movwf	LCD_DrawText@x^0,c
 15182  001FA2  EF2A  F010         	goto	l8612
 15183  001FA6                     l8580:
 15184                           
 15185                           ;libraries/lcd_highlevel.c: 767:       {;libraries/lcd_highlevel.c: 768:         fontByt
      +                          e = font->bitmap[yOffset + (x/8)];
 15186  001FA6  C040  F012         	movff	LCD_DrawText@x,___awdiv@dividend
 15187  001FAA  6A13               	clrf	(___awdiv@dividend+1)^0,c
 15188  001FAC  0E00               	movlw	0
 15189  001FAE  6E15               	movwf	(___awdiv@divisor+1)^0,c
 15190  001FB0  0E08               	movlw	8
 15191  001FB2  6E14               	movwf	___awdiv@divisor^0,c
 15192  001FB4  EC40  F026         	call	___awdiv	;wreg free
 15193  001FB8  0E05               	movlw	5
 15194  001FBA  2422               	addwf	LCD_DrawText@font^0,w,c
 15195  001FBC  6E2D               	movwf	??_LCD_DrawText^0,c
 15196  001FBE  0E00               	movlw	0
 15197  001FC0  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 15198  001FC2  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15199  001FC4  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 15200  001FC8  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 15201  001FCC                     	if	0	;tblptru may be non-zero
 15202  001FCC                     	endif
 15203  001FCC                     	if	0	;tblptru may be non-zero
 15204  001FCC                     	endif
 15205  001FCC  0009               	tblrd		*+
 15206  001FCE  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 15207  001FD2  0009               	tblrd		*+
 15208  001FD4  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 15209  001FD8  5012               	movf	?___awdiv^0,w,c
 15210  001FDA  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15211  001FDC  5013               	movf	(?___awdiv+1)^0,w,c
 15212  001FDE  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15213  001FE0  5035               	movf	LCD_DrawText@yOffset^0,w,c
 15214  001FE2  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 15215  001FE4  5036               	movf	(LCD_DrawText@yOffset+1)^0,w,c
 15216  001FE6  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 15217  001FE8  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 15218  001FEC  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 15219  001FF0                     	if	0	;tblptru may be non-zero
 15220  001FF0                     	endif
 15221  001FF0                     	if	0	;tblptru may be non-zero
 15222  001FF0                     	endif
 15223  001FF0  0008               	tblrd		*
 15224  001FF2  CFF5 F037          	movff	tablat,LCD_DrawText@fontByte
 15225  001FF6                     
 15226                           ;libraries/lcd_highlevel.c: 769:         fontPixel = fontByte & (0x80 >> (x%8));
 15227  001FF6  C040  F02D         	movff	LCD_DrawText@x,??_LCD_DrawText
 15228  001FFA  0E07               	movlw	7
 15229  001FFC  162D               	andwf	??_LCD_DrawText^0,f,c
 15230  001FFE  0E80               	movlw	128
 15231  002000  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15232  002002  0E00               	movlw	0
 15233  002004  6E2F               	movwf	(??_LCD_DrawText+2)^0,c
 15234  002006  2A2D               	incf	??_LCD_DrawText^0,f,c
 15235  002008  EF09  F010         	goto	u5894
 15236  00200C                     u5895:
 15237  00200C  342F               	rlcf	(??_LCD_DrawText+2)^0,w,c
 15238  00200E  322F               	rrcf	(??_LCD_DrawText+2)^0,f,c
 15239  002010  322E               	rrcf	(??_LCD_DrawText+1)^0,f,c
 15240  002012                     u5894:
 15241  002012  2E2D               	decfsz	??_LCD_DrawText^0,f,c
 15242  002014  EF06  F010         	goto	u5895
 15243  002018  502E               	movf	(??_LCD_DrawText+1)^0,w,c
 15244  00201A  1437               	andwf	LCD_DrawText@fontByte^0,w,c
 15245  00201C  6E38               	movwf	LCD_DrawText@fontPixel^0,c
 15246  00201E                     
 15247                           ;libraries/lcd_highlevel.c: 770:         if(fontPixel != 0)
 15248  00201E  5038               	movf	LCD_DrawText@fontPixel^0,w,c
 15249  002020  B4D8               	btfsc	status,2,c
 15250  002022  EF15  F010         	goto	u5901
 15251  002026  EF17  F010         	goto	u5900
 15252  00202A                     u5901:
 15253  00202A  EF21  F010         	goto	l8598
 15254  00202E                     u5900:
 15255  00202E                     
 15256                           ;libraries/lcd_highlevel.c: 771:         {;libraries/lcd_highlevel.c: 772:           POR
      +                          TA = color>>8; LATC3 = 0; LATC3 = 1;;
 15257  00202E  502A               	movf	(LCD_DrawText@color+1)^0,w,c
 15258  002030  6E80               	movwf	128,c	;volatile
 15259  002032  968B               	bcf	3979,3,c	;volatile
 15260  002034  868B               	bsf	3979,3,c	;volatile
 15261  002036                     
 15262                           ;libraries/lcd_highlevel.c: 773:           PORTA = color; LATC3 = 0; LATC3 = 1;;
 15263  002036  C029  FF80         	movff	LCD_DrawText@color,3968	;volatile
 15264  00203A                     l8594:
 15265  00203A  968B               	bcf	3979,3,c	;volatile
 15266  00203C  868B               	bsf	3979,3,c	;volatile
 15267                           
 15268                           ;libraries/lcd_highlevel.c: 774:         }
 15269  00203E  EF29  F010         	goto	l8610
 15270  002042                     l8598:
 15271                           
 15272                           ;libraries/lcd_highlevel.c: 776:         {;libraries/lcd_highlevel.c: 777:           POR
      +                          TA = bg_color>>8; LATC3 = 0; LATC3 = 1;;
 15273  002042  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 15274  002044  6E80               	movwf	128,c	;volatile
 15275  002046  968B               	bcf	3979,3,c	;volatile
 15276  002048  868B               	bsf	3979,3,c	;volatile
 15277  00204A                     
 15278                           ;libraries/lcd_highlevel.c: 778:           PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 15279  00204A  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 15280  00204E  EF1D  F010         	goto	l8594
 15281  002052                     l8610:
 15282                           
 15283                           ;libraries/lcd_highlevel.c: 780:       }
 15284  002052  2A40               	incf	LCD_DrawText@x^0,f,c
 15285  002054                     l8612:
 15286  002054  5041               	movf	LCD_DrawText@width^0,w,c
 15287  002056  5C40               	subwf	LCD_DrawText@x^0,w,c
 15288  002058  A0D8               	btfss	status,0,c
 15289  00205A  EF31  F010         	goto	u5911
 15290  00205E  EF33  F010         	goto	u5910
 15291  002062                     u5911:
 15292  002062  EFD3  F00F         	goto	l8580
 15293  002066                     u5910:
 15294  002066                     
 15295                           ;libraries/lcd_highlevel.c: 781:       for(x=0;x<2;x++)
 15296  002066  0E00               	movlw	0
 15297  002068  6E40               	movwf	LCD_DrawText@x^0,c
 15298  00206A                     l8616:
 15299  00206A  0E01               	movlw	1
 15300  00206C  6440               	cpfsgt	LCD_DrawText@x^0,c
 15301  00206E  EF3B  F010         	goto	u5921
 15302  002072  EF3D  F010         	goto	u5920
 15303  002076                     u5921:
 15304  002076  EF3F  F010         	goto	l8620
 15305  00207A                     u5920:
 15306  00207A  EF4A  F010         	goto	l8636
 15307  00207E                     l8620:
 15308                           
 15309                           ;libraries/lcd_highlevel.c: 782:       {;libraries/lcd_highlevel.c: 783:         PORTA =
      +                           bg_color>>8; LATC3 = 0; LATC3 = 1;;
 15310  00207E  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 15311  002080  6E80               	movwf	128,c	;volatile
 15312  002082  968B               	bcf	3979,3,c	;volatile
 15313  002084  868B               	bsf	3979,3,c	;volatile
 15314  002086                     
 15315                           ;libraries/lcd_highlevel.c: 784:         PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 15316  002086  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 15317  00208A  968B               	bcf	3979,3,c	;volatile
 15318  00208C  868B               	bsf	3979,3,c	;volatile
 15319  00208E                     
 15320                           ;libraries/lcd_highlevel.c: 785:       }
 15321  00208E  2A40               	incf	LCD_DrawText@x^0,f,c
 15322  002090  EF35  F010         	goto	l8616
 15323  002094                     l8636:
 15324                           
 15325                           ;libraries/lcd_highlevel.c: 786:     }
 15326  002094  2A3D               	incf	LCD_DrawText@y^0,f,c
 15327  002096                     l8638:
 15328  002096  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 15329  00209A  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 15330  00209E                     	if	0	;tblptru may be non-zero
 15331  00209E                     	endif
 15332  00209E                     	if	0	;tblptru may be non-zero
 15333  00209E                     	endif
 15334  00209E  0009               	tblrd		*+
 15335  0020A0  50F5               	movf	tablat,w,c
 15336  0020A2  5C3D               	subwf	LCD_DrawText@y^0,w,c
 15337  0020A4  A0D8               	btfss	status,0,c
 15338  0020A6  EF57  F010         	goto	u5931
 15339  0020AA  EF59  F010         	goto	u5930
 15340  0020AE                     u5931:
 15341  0020AE  EFB4  F00F         	goto	l8576
 15342  0020B2                     u5930:
 15343  0020B2                     
 15344                           ;libraries/lcd_highlevel.c: 787:     posX = posX + 2 + width;
 15345  0020B2  5041               	movf	LCD_DrawText@width^0,w,c
 15346  0020B4  2425               	addwf	LCD_DrawText@posX^0,w,c
 15347  0020B6  6E2D               	movwf	??_LCD_DrawText^0,c
 15348  0020B8  0E00               	movlw	0
 15349  0020BA  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 15350  0020BC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 15351  0020BE  0E02               	movlw	2
 15352  0020C0  242D               	addwf	??_LCD_DrawText^0,w,c
 15353  0020C2  6E25               	movwf	LCD_DrawText@posX^0,c
 15354  0020C4  0E00               	movlw	0
 15355  0020C6  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 15356  0020C8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15357  0020CA                     
 15358                           ;libraries/lcd_highlevel.c: 788:     msg++;
 15359  0020CA  4A20               	infsnz	LCD_DrawText@msg^0,f,c
 15360  0020CC  2A21               	incf	(LCD_DrawText@msg+1)^0,f,c
 15361  0020CE                     
 15362                           ;libraries/lcd_highlevel.c: 789:  }while(*msg != 0);
 15363  0020CE  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 15364  0020D2  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 15365  0020D6  6AF8               	clrf	tblptru,c
 15366  0020D8  0E05               	movlw	(high __ramtop+-1)
 15367  0020DA  64F7               	cpfsgt	tblptrh,c
 15368  0020DC  D003               	bra	u5947
 15369  0020DE  0008               	tblrd		*
 15370  0020E0  50F5               	movf	tablat,w,c
 15371  0020E2  D005               	bra	u5940
 15372  0020E4                     u5947:
 15373  0020E4  CFF6 FFE1          	movff	tblptrl,fsr1l
 15374  0020E8  CFF7 FFE2          	movff	tblptrh,fsr1h
 15375  0020EC  50E7               	movf	indf1,w,c
 15376  0020EE                     u5940:
 15377  0020EE  0900               	iorlw	0
 15378  0020F0  A4D8               	btfss	status,2,c
 15379  0020F2  EF7D  F010         	goto	u5951
 15380  0020F6  EF7F  F010         	goto	u5950
 15381  0020FA                     u5951:
 15382  0020FA  EFED  F00E         	goto	l8486
 15383  0020FE                     u5950:
 15384  0020FE  0012               	return		;funcret
 15385  002100                     __end_of_LCD_DrawText:
 15386                           	callstack 0
 15387                           
 15388 ;; *************** function _strlen *****************
 15389 ;; Defined at:
 15390 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 15391 ;; Parameters:    Size  Location     Type
 15392 ;;  s               2   17[COMRAM] PTR const unsigned char 
 15393 ;;		 -> dbuf(32), touchScreenController@s(20), STR_9(11), STR_8(8), 
 15394 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 15395 ;;		 -> STR_3(9), STR_2(11), STR_1(10), 
 15396 ;; Auto vars:     Size  Location     Type
 15397 ;;  a               2   19[COMRAM] PTR const unsigned char 
 15398 ;;		 -> dbuf(32), touchScreenController@s(20), STR_9(11), STR_8(8), 
 15399 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 15400 ;;		 -> STR_3(9), STR_2(11), STR_1(10), 
 15401 ;; Return value:  Size  Location     Type
 15402 ;;                  2   17[COMRAM] unsigned int 
 15403 ;; Registers used:
 15404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 15405 ;; Tracked objects:
 15406 ;;		On entry : 0/0
 15407 ;;		On exit  : 0/0
 15408 ;;		Unchanged: 0/0
 15409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15410 ;;      Params:         2       0       0       0       0       0       0
 15411 ;;      Locals:         2       0       0       0       0       0       0
 15412 ;;      Temps:          0       0       0       0       0       0       0
 15413 ;;      Totals:         4       0       0       0       0       0       0
 15414 ;;Total ram usage:        4 bytes
 15415 ;; Hardware stack levels used: 1
 15416 ;; Hardware stack levels required when called: 4
 15417 ;; This function calls:
 15418 ;;		Nothing
 15419 ;; This function is called by:
 15420 ;;		_LCD_ButtonDraw
 15421 ;;		_LCD_DrawText
 15422 ;;		_pad
 15423 ;; This function uses a non-reentrant model
 15424 ;;
 15425                           
 15426                           	psect	text62
 15427  005C12                     __ptext62:
 15428                           	callstack 0
 15429  005C12                     _strlen:
 15430                           	callstack 20
 15431  005C12  C012  F014         	movff	strlen@s,strlen@a
 15432  005C16  C013  F015         	movff	strlen@s+1,strlen@a+1
 15433  005C1A  EF11  F02E         	goto	l7832
 15434  005C1E                     l7830:
 15435  005C1E  4A12               	infsnz	strlen@s^0,f,c
 15436  005C20  2A13               	incf	(strlen@s+1)^0,f,c
 15437  005C22                     l7832:
 15438  005C22  C012  FFF6         	movff	strlen@s,tblptrl
 15439  005C26  C013  FFF7         	movff	strlen@s+1,tblptrh
 15440  005C2A  6AF8               	clrf	tblptru,c
 15441  005C2C  0E05               	movlw	(high __ramtop+-1)
 15442  005C2E  64F7               	cpfsgt	tblptrh,c
 15443  005C30  D003               	bra	u5387
 15444  005C32  0008               	tblrd		*
 15445  005C34  50F5               	movf	tablat,w,c
 15446  005C36  D005               	bra	u5380
 15447  005C38                     u5387:
 15448  005C38  CFF6 FFE1          	movff	tblptrl,fsr1l
 15449  005C3C  CFF7 FFE2          	movff	tblptrh,fsr1h
 15450  005C40  50E7               	movf	indf1,w,c
 15451  005C42                     u5380:
 15452  005C42  0900               	iorlw	0
 15453  005C44  A4D8               	btfss	status,2,c
 15454  005C46  EF27  F02E         	goto	u5391
 15455  005C4A  EF29  F02E         	goto	u5390
 15456  005C4E                     u5391:
 15457  005C4E  EF0F  F02E         	goto	l7830
 15458  005C52                     u5390:
 15459  005C52  5014               	movf	strlen@a^0,w,c
 15460  005C54  5C12               	subwf	strlen@s^0,w,c
 15461  005C56  6E12               	movwf	?_strlen^0,c
 15462  005C58  5015               	movf	(strlen@a+1)^0,w,c
 15463  005C5A  5813               	subwfb	(strlen@s+1)^0,w,c
 15464  005C5C  6E13               	movwf	(?_strlen+1)^0,c
 15465  005C5E  0012               	return		;funcret
 15466  005C60                     __end_of_strlen:
 15467                           	callstack 0
 15468                           
 15469 ;; *************** function ___awdiv *****************
 15470 ;; Defined at:
 15471 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 15472 ;; Parameters:    Size  Location     Type
 15473 ;;  dividend        2   17[COMRAM] int 
 15474 ;;  divisor         2   19[COMRAM] int 
 15475 ;; Auto vars:     Size  Location     Type
 15476 ;;  quotient        2   23[COMRAM] int 
 15477 ;;  sign            1   22[COMRAM] unsigned char 
 15478 ;;  counter         1   21[COMRAM] unsigned char 
 15479 ;; Return value:  Size  Location     Type
 15480 ;;                  2   17[COMRAM] int 
 15481 ;; Registers used:
 15482 ;;		wreg, status,2, status,0
 15483 ;; Tracked objects:
 15484 ;;		On entry : 0/0
 15485 ;;		On exit  : 0/0
 15486 ;;		Unchanged: 0/0
 15487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15488 ;;      Params:         4       0       0       0       0       0       0
 15489 ;;      Locals:         4       0       0       0       0       0       0
 15490 ;;      Temps:          0       0       0       0       0       0       0
 15491 ;;      Totals:         8       0       0       0       0       0       0
 15492 ;;Total ram usage:        8 bytes
 15493 ;; Hardware stack levels used: 1
 15494 ;; Hardware stack levels required when called: 4
 15495 ;; This function calls:
 15496 ;;		Nothing
 15497 ;; This function is called by:
 15498 ;;		_LCD_ButtonDraw
 15499 ;;		_LCD_DrawText
 15500 ;; This function uses a non-reentrant model
 15501 ;;
 15502                           
 15503                           	psect	text63
 15504  004C80                     __ptext63:
 15505                           	callstack 0
 15506  004C80                     ___awdiv:
 15507                           	callstack 20
 15508  004C80  0E00               	movlw	0
 15509  004C82  6E17               	movwf	___awdiv@sign^0,c
 15510  004C84  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
 15511  004C86  EF49  F026         	goto	u5670
 15512  004C8A  EF47  F026         	goto	u5671
 15513  004C8E                     u5671:
 15514  004C8E  EF4F  F026         	goto	l8368
 15515  004C92                     u5670:
 15516  004C92  6C14               	negf	___awdiv@divisor^0,c
 15517  004C94  1E15               	comf	(___awdiv@divisor+1)^0,f,c
 15518  004C96  B0D8               	btfsc	status,0,c
 15519  004C98  2A15               	incf	(___awdiv@divisor+1)^0,f,c
 15520  004C9A  0E01               	movlw	1
 15521  004C9C  6E17               	movwf	___awdiv@sign^0,c
 15522  004C9E                     l8368:
 15523  004C9E  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
 15524  004CA0  EF56  F026         	goto	u5680
 15525  004CA4  EF54  F026         	goto	u5681
 15526  004CA8                     u5681:
 15527  004CA8  EF5C  F026         	goto	l8374
 15528  004CAC                     u5680:
 15529  004CAC  6C12               	negf	___awdiv@dividend^0,c
 15530  004CAE  1E13               	comf	(___awdiv@dividend+1)^0,f,c
 15531  004CB0  B0D8               	btfsc	status,0,c
 15532  004CB2  2A13               	incf	(___awdiv@dividend+1)^0,f,c
 15533  004CB4  0E01               	movlw	1
 15534  004CB6  1A17               	xorwf	___awdiv@sign^0,f,c
 15535  004CB8                     l8374:
 15536  004CB8  0E00               	movlw	0
 15537  004CBA  6E19               	movwf	(___awdiv@quotient+1)^0,c
 15538  004CBC  0E00               	movlw	0
 15539  004CBE  6E18               	movwf	___awdiv@quotient^0,c
 15540  004CC0  5014               	movf	___awdiv@divisor^0,w,c
 15541  004CC2  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
 15542  004CC4  B4D8               	btfsc	status,2,c
 15543  004CC6  EF67  F026         	goto	u5691
 15544  004CCA  EF69  F026         	goto	u5690
 15545  004CCE                     u5691:
 15546  004CCE  EF91  F026         	goto	l8396
 15547  004CD2                     u5690:
 15548  004CD2  0E01               	movlw	1
 15549  004CD4  6E16               	movwf	___awdiv@counter^0,c
 15550  004CD6  EF71  F026         	goto	l8382
 15551  004CDA                     l8380:
 15552  004CDA  90D8               	bcf	status,0,c
 15553  004CDC  3614               	rlcf	___awdiv@divisor^0,f,c
 15554  004CDE  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
 15555  004CE0  2A16               	incf	___awdiv@counter^0,f,c
 15556  004CE2                     l8382:
 15557  004CE2  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
 15558  004CE4  EF76  F026         	goto	u5701
 15559  004CE8  EF78  F026         	goto	u5700
 15560  004CEC                     u5701:
 15561  004CEC  EF6D  F026         	goto	l8380
 15562  004CF0                     u5700:
 15563  004CF0                     l8384:
 15564  004CF0  90D8               	bcf	status,0,c
 15565  004CF2  3618               	rlcf	___awdiv@quotient^0,f,c
 15566  004CF4  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
 15567  004CF6  5014               	movf	___awdiv@divisor^0,w,c
 15568  004CF8  5C12               	subwf	___awdiv@dividend^0,w,c
 15569  004CFA  5015               	movf	(___awdiv@divisor+1)^0,w,c
 15570  004CFC  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
 15571  004CFE  A0D8               	btfss	status,0,c
 15572  004D00  EF84  F026         	goto	u5711
 15573  004D04  EF86  F026         	goto	u5710
 15574  004D08                     u5711:
 15575  004D08  EF8B  F026         	goto	l8392
 15576  004D0C                     u5710:
 15577  004D0C  5014               	movf	___awdiv@divisor^0,w,c
 15578  004D0E  5E12               	subwf	___awdiv@dividend^0,f,c
 15579  004D10  5015               	movf	(___awdiv@divisor+1)^0,w,c
 15580  004D12  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
 15581  004D14  8018               	bsf	___awdiv@quotient^0,0,c
 15582  004D16                     l8392:
 15583  004D16  90D8               	bcf	status,0,c
 15584  004D18  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
 15585  004D1A  3214               	rrcf	___awdiv@divisor^0,f,c
 15586  004D1C  2E16               	decfsz	___awdiv@counter^0,f,c
 15587  004D1E  EF78  F026         	goto	l8384
 15588  004D22                     l8396:
 15589  004D22  5017               	movf	___awdiv@sign^0,w,c
 15590  004D24  B4D8               	btfsc	status,2,c
 15591  004D26  EF97  F026         	goto	u5721
 15592  004D2A  EF99  F026         	goto	u5720
 15593  004D2E                     u5721:
 15594  004D2E  EF9D  F026         	goto	l8400
 15595  004D32                     u5720:
 15596  004D32  6C18               	negf	___awdiv@quotient^0,c
 15597  004D34  1E19               	comf	(___awdiv@quotient+1)^0,f,c
 15598  004D36  B0D8               	btfsc	status,0,c
 15599  004D38  2A19               	incf	(___awdiv@quotient+1)^0,f,c
 15600  004D3A                     l8400:
 15601  004D3A  C018  F012         	movff	___awdiv@quotient,?___awdiv
 15602  004D3E  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
 15603  004D42  0012               	return		;funcret
 15604  004D44                     __end_of___awdiv:
 15605                           	callstack 0
 15606                           
 15607 ;; *************** function _LCD_ButtonUpdate *****************
 15608 ;; Defined at:
 15609 ;;		line 425 in file "libraries/lcd_highlevel.c"
 15610 ;; Parameters:    Size  Location     Type
 15611 ;;  button          2   36[COMRAM] PTR struct .
 15612 ;;		 -> g1(201), 
 15613 ;; Auto vars:     Size  Location     Type
 15614 ;;  y2              2   52[COMRAM] unsigned short 
 15615 ;;  x1              2   50[COMRAM] unsigned short 
 15616 ;;  y1              2   48[COMRAM] unsigned short 
 15617 ;;  x2              2   46[COMRAM] unsigned short 
 15618 ;;  colorIn         2   44[COMRAM] unsigned short 
 15619 ;;  colorOut        2   42[COMRAM] unsigned short 
 15620 ;; Return value:  Size  Location     Type
 15621 ;;                  1    wreg      void 
 15622 ;; Registers used:
 15623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15624 ;; Tracked objects:
 15625 ;;		On entry : 0/0
 15626 ;;		On exit  : 0/0
 15627 ;;		Unchanged: 0/0
 15628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15629 ;;      Params:         2       0       0       0       0       0       0
 15630 ;;      Locals:        12       0       0       0       0       0       0
 15631 ;;      Temps:          4       0       0       0       0       0       0
 15632 ;;      Totals:        18       0       0       0       0       0       0
 15633 ;;Total ram usage:       18 bytes
 15634 ;; Hardware stack levels used: 1
 15635 ;; Hardware stack levels required when called: 5
 15636 ;; This function calls:
 15637 ;;		_LCD_DrawRect
 15638 ;;		_LCD_Read
 15639 ;; This function is called by:
 15640 ;;		_LCD_ButtonDraw
 15641 ;; This function uses a non-reentrant model
 15642 ;;
 15643                           
 15644                           	psect	text64
 15645  003334                     __ptext64:
 15646                           	callstack 0
 15647  003334                     _LCD_ButtonUpdate:
 15648                           	callstack 19
 15649  003334                     
 15650                           ;libraries/lcd_highlevel.c: 425: void LCD_ButtonUpdate(btn_t * button);libraries/lcd_hig
      +                          hlevel.c: 426: {;libraries/lcd_highlevel.c: 427:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 428:   uint16_t colorOut, colorIn;;libraries/lcd_highlevel.c: 430:   x1 = bu
      +                          tton->posX;
 15651  003334  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 15652  003338  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 15653  00333C  CFDE F033          	movff	postinc2,LCD_ButtonUpdate@x1
 15654  003340  CFDD F034          	movff	postdec2,LCD_ButtonUpdate@x1+1
 15655  003344                     
 15656                           ;libraries/lcd_highlevel.c: 431:   x2 = button->posX + button->width;
 15657  003344  EE20 F004          	lfsr	2,4
 15658  003348  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15659  00334A  26D9               	addwf	fsr2l,f,c
 15660  00334C  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15661  00334E  22DA               	addwfc	fsr2h,f,c
 15662  003350  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 15663  003354  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 15664  003358  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 15665  00335C  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 15666  003360  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 15667  003364  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 15668  003368  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 15669  00336A  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 15670  00336C  6E2F               	movwf	LCD_ButtonUpdate@x2^0,c
 15671  00336E  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 15672  003370  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 15673  003372  6E30               	movwf	(LCD_ButtonUpdate@x2+1)^0,c
 15674  003374                     
 15675                           ;libraries/lcd_highlevel.c: 432:   y1 = button->posY;
 15676  003374  EE20 F002          	lfsr	2,2
 15677  003378  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15678  00337A  26D9               	addwf	fsr2l,f,c
 15679  00337C  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15680  00337E  22DA               	addwfc	fsr2h,f,c
 15681  003380  CFDE F031          	movff	postinc2,LCD_ButtonUpdate@y1
 15682  003384  CFDD F032          	movff	postdec2,LCD_ButtonUpdate@y1+1
 15683  003388                     
 15684                           ;libraries/lcd_highlevel.c: 433:   y2 = button->posY + button->height;
 15685  003388  EE20 F006          	lfsr	2,6
 15686  00338C  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15687  00338E  26D9               	addwf	fsr2l,f,c
 15688  003390  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15689  003392  22DA               	addwfc	fsr2h,f,c
 15690  003394  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 15691  003398  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 15692  00339C  EE20 F002          	lfsr	2,2
 15693  0033A0  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15694  0033A2  26D9               	addwf	fsr2l,f,c
 15695  0033A4  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15696  0033A6  22DA               	addwfc	fsr2h,f,c
 15697  0033A8  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 15698  0033AC  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 15699  0033B0  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 15700  0033B2  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 15701  0033B4  6E35               	movwf	LCD_ButtonUpdate@y2^0,c
 15702  0033B6  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 15703  0033B8  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 15704  0033BA  6E36               	movwf	(LCD_ButtonUpdate@y2+1)^0,c
 15705  0033BC                     
 15706                           ;libraries/lcd_highlevel.c: 435:   if(button->pressed == 0)
 15707  0033BC  EE20 F010          	lfsr	2,16
 15708  0033C0  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15709  0033C2  26D9               	addwf	fsr2l,f,c
 15710  0033C4  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15711  0033C6  22DA               	addwfc	fsr2h,f,c
 15712  0033C8  50DF               	movf	indf2,w,c
 15713  0033CA  A4D8               	btfss	status,2,c
 15714  0033CC  EFEA  F019         	goto	u5981
 15715  0033D0  EFEC  F019         	goto	u5980
 15716  0033D4                     u5981:
 15717  0033D4  EF02  F01A         	goto	l8700
 15718  0033D8                     u5980:
 15719  0033D8                     
 15720                           ;libraries/lcd_highlevel.c: 436:   {;libraries/lcd_highlevel.c: 437:     colorOut = butt
      +                          on->txtColor;
 15721  0033D8  EE20 F008          	lfsr	2,8
 15722  0033DC  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15723  0033DE  26D9               	addwf	fsr2l,f,c
 15724  0033E0  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15725  0033E2  22DA               	addwfc	fsr2h,f,c
 15726  0033E4  CFDE F02B          	movff	postinc2,LCD_ButtonUpdate@colorOut
 15727  0033E8  CFDD F02C          	movff	postdec2,LCD_ButtonUpdate@colorOut+1
 15728                           
 15729                           ;libraries/lcd_highlevel.c: 438:     colorIn = button->bgColor;
 15730  0033EC  EE20 F00A          	lfsr	2,10
 15731  0033F0  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15732  0033F2  26D9               	addwf	fsr2l,f,c
 15733  0033F4  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15734  0033F6  22DA               	addwfc	fsr2h,f,c
 15735  0033F8  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 15736  0033FC  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 15737                           
 15738                           ;libraries/lcd_highlevel.c: 439:   }
 15739  003400  EF1C  F01A         	goto	l8704
 15740  003404                     l8700:
 15741                           
 15742                           ;libraries/lcd_highlevel.c: 441:   {;libraries/lcd_highlevel.c: 443:     colorOut = LCD_
      +                          Read(x1,y2+1);
 15743  003404  C033  F012         	movff	LCD_ButtonUpdate@x1,LCD_Read@posX
 15744  003408  C034  F013         	movff	LCD_ButtonUpdate@x1+1,LCD_Read@posX+1
 15745  00340C  0E01               	movlw	1
 15746  00340E  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 15747  003410  6E14               	movwf	LCD_Read@posY^0,c
 15748  003412  0E00               	movlw	0
 15749  003414  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 15750  003416  6E15               	movwf	(LCD_Read@posY+1)^0,c
 15751  003418  EC61  F020         	call	_LCD_Read	;wreg free
 15752  00341C  C012  F02B         	movff	?_LCD_Read,LCD_ButtonUpdate@colorOut
 15753  003420  C013  F02C         	movff	?_LCD_Read+1,LCD_ButtonUpdate@colorOut+1
 15754  003424                     
 15755                           ;libraries/lcd_highlevel.c: 444:     colorIn = button->txtColor;
 15756  003424  EE20 F008          	lfsr	2,8
 15757  003428  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15758  00342A  26D9               	addwf	fsr2l,f,c
 15759  00342C  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15760  00342E  22DA               	addwfc	fsr2h,f,c
 15761  003430  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 15762  003434  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 15763  003438                     l8704:
 15764                           
 15765                           ;libraries/lcd_highlevel.c: 446:   if(button->bgColor != button->txtColor)
 15766  003438  EE20 F008          	lfsr	2,8
 15767  00343C  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15768  00343E  26D9               	addwf	fsr2l,f,c
 15769  003440  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15770  003442  22DA               	addwfc	fsr2h,f,c
 15771  003444  EE10 F00A          	lfsr	1,10
 15772  003448  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 15773  00344A  26E1               	addwf	fsr1l,f,c
 15774  00344C  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 15775  00344E  22E2               	addwfc	fsr1h,f,c
 15776  003450  50DE               	movf	postinc2,w,c
 15777  003452  18E6               	xorwf	postinc1,w,c
 15778  003454  E109               	bnz	u5990
 15779  003456  50DE               	movf	postinc2,w,c
 15780  003458  18E6               	xorwf	postinc1,w,c
 15781  00345A  B4D8               	btfsc	status,2,c
 15782  00345C  EF32  F01A         	goto	u5991
 15783  003460  EF34  F01A         	goto	u5990
 15784  003464                     u5991:
 15785  003464  EFB4  F01A         	goto	l235
 15786  003468                     u5990:
 15787  003468                     
 15788                           ;libraries/lcd_highlevel.c: 447:   {;libraries/lcd_highlevel.c: 449:     LCD_DrawRect(x1
      +                          +3, y2+1, x2+3, y2+3, 1, colorOut);
 15789  003468  0E03               	movlw	3
 15790  00346A  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 15791  00346C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 15792  00346E  0E00               	movlw	0
 15793  003470  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 15794  003472  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 15795  003474  0E01               	movlw	1
 15796  003476  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 15797  003478  6E14               	movwf	LCD_DrawRect@posY1^0,c
 15798  00347A  0E00               	movlw	0
 15799  00347C  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 15800  00347E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 15801  003480  0E03               	movlw	3
 15802  003482  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 15803  003484  6E16               	movwf	LCD_DrawRect@posX2^0,c
 15804  003486  0E00               	movlw	0
 15805  003488  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 15806  00348A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 15807  00348C  0E03               	movlw	3
 15808  00348E  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 15809  003490  6E18               	movwf	LCD_DrawRect@posY2^0,c
 15810  003492  0E00               	movlw	0
 15811  003494  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 15812  003496  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 15813  003498  0E01               	movlw	1
 15814  00349A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 15815  00349C  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 15816  0034A0  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 15817  0034A4  EC02  F014         	call	_LCD_DrawRect	;wreg free
 15818                           
 15819                           ;libraries/lcd_highlevel.c: 450:     LCD_DrawRect(x2+1, y1+3, x2+3, y2+3, 1, colorOut);
 15820  0034A8  0E01               	movlw	1
 15821  0034AA  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 15822  0034AC  6E12               	movwf	LCD_DrawRect@posX1^0,c
 15823  0034AE  0E00               	movlw	0
 15824  0034B0  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 15825  0034B2  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 15826  0034B4  0E03               	movlw	3
 15827  0034B6  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 15828  0034B8  6E14               	movwf	LCD_DrawRect@posY1^0,c
 15829  0034BA  0E00               	movlw	0
 15830  0034BC  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 15831  0034BE  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 15832  0034C0  0E03               	movlw	3
 15833  0034C2  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 15834  0034C4  6E16               	movwf	LCD_DrawRect@posX2^0,c
 15835  0034C6  0E00               	movlw	0
 15836  0034C8  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 15837  0034CA  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 15838  0034CC  0E03               	movlw	3
 15839  0034CE  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 15840  0034D0  6E18               	movwf	LCD_DrawRect@posY2^0,c
 15841  0034D2  0E00               	movlw	0
 15842  0034D4  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 15843  0034D6  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 15844  0034D8  0E01               	movlw	1
 15845  0034DA  6E1A               	movwf	LCD_DrawRect@fill^0,c
 15846  0034DC  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 15847  0034E0  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 15848  0034E4  EC02  F014         	call	_LCD_DrawRect	;wreg free
 15849                           
 15850                           ;libraries/lcd_highlevel.c: 451:     LCD_DrawRect(x1+1, y1+1, x2-1, y1+2, 1, colorIn);
 15851  0034E8  0E01               	movlw	1
 15852  0034EA  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 15853  0034EC  6E12               	movwf	LCD_DrawRect@posX1^0,c
 15854  0034EE  0E00               	movlw	0
 15855  0034F0  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 15856  0034F2  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 15857  0034F4  0E01               	movlw	1
 15858  0034F6  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 15859  0034F8  6E14               	movwf	LCD_DrawRect@posY1^0,c
 15860  0034FA  0E00               	movlw	0
 15861  0034FC  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 15862  0034FE  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 15863  003500  0EFF               	movlw	255
 15864  003502  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 15865  003504  6E16               	movwf	LCD_DrawRect@posX2^0,c
 15866  003506  0EFF               	movlw	255
 15867  003508  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 15868  00350A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 15869  00350C  0E02               	movlw	2
 15870  00350E  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 15871  003510  6E18               	movwf	LCD_DrawRect@posY2^0,c
 15872  003512  0E00               	movlw	0
 15873  003514  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 15874  003516  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 15875  003518  0E01               	movlw	1
 15876  00351A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 15877  00351C  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 15878  003520  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 15879  003524  EC02  F014         	call	_LCD_DrawRect	;wreg free
 15880                           
 15881                           ;libraries/lcd_highlevel.c: 452:     LCD_DrawRect(x1+1, y1+1, x1+2, y2-1, 1, colorIn);
 15882  003528  0E01               	movlw	1
 15883  00352A  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 15884  00352C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 15885  00352E  0E00               	movlw	0
 15886  003530  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 15887  003532  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 15888  003534  0E01               	movlw	1
 15889  003536  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 15890  003538  6E14               	movwf	LCD_DrawRect@posY1^0,c
 15891  00353A  0E00               	movlw	0
 15892  00353C  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 15893  00353E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 15894  003540  0E02               	movlw	2
 15895  003542  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 15896  003544  6E16               	movwf	LCD_DrawRect@posX2^0,c
 15897  003546  0E00               	movlw	0
 15898  003548  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 15899  00354A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 15900  00354C  0EFF               	movlw	255
 15901  00354E  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 15902  003550  6E18               	movwf	LCD_DrawRect@posY2^0,c
 15903  003552  0EFF               	movlw	255
 15904  003554  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 15905  003556  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 15906  003558  0E01               	movlw	1
 15907  00355A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 15908  00355C  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 15909  003560  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 15910  003564  EC02  F014         	call	_LCD_DrawRect	;wreg free
 15911  003568                     l235:
 15912  003568  0012               	return		;funcret
 15913  00356A                     __end_of_LCD_ButtonUpdate:
 15914                           	callstack 0
 15915                           
 15916 ;; *************** function _LCD_Read *****************
 15917 ;; Defined at:
 15918 ;;		line 64 in file "libraries/lcd_lowlevel.c"
 15919 ;; Parameters:    Size  Location     Type
 15920 ;;  posX            2   17[COMRAM] unsigned short 
 15921 ;;  posY            2   19[COMRAM] unsigned short 
 15922 ;; Auto vars:     Size  Location     Type
 15923 ;;  temp16          2   25[COMRAM] unsigned short 
 15924 ;;  color           2   23[COMRAM] unsigned short 
 15925 ;; Return value:  Size  Location     Type
 15926 ;;                  2   17[COMRAM] unsigned short 
 15927 ;; Registers used:
 15928 ;;		wreg, status,2, status,0
 15929 ;; Tracked objects:
 15930 ;;		On entry : 0/0
 15931 ;;		On exit  : 0/0
 15932 ;;		Unchanged: 0/0
 15933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15934 ;;      Params:         4       0       0       0       0       0       0
 15935 ;;      Locals:         4       0       0       0       0       0       0
 15936 ;;      Temps:          2       0       0       0       0       0       0
 15937 ;;      Totals:        10       0       0       0       0       0       0
 15938 ;;Total ram usage:       10 bytes
 15939 ;; Hardware stack levels used: 1
 15940 ;; Hardware stack levels required when called: 4
 15941 ;; This function calls:
 15942 ;;		Nothing
 15943 ;; This function is called by:
 15944 ;;		_LCD_ButtonUpdate
 15945 ;; This function uses a non-reentrant model
 15946 ;;
 15947                           
 15948                           	psect	text65
 15949  0040C2                     __ptext65:
 15950                           	callstack 0
 15951  0040C2                     _LCD_Read:
 15952                           	callstack 19
 15953  0040C2                     
 15954                           ;libraries/lcd_lowlevel.c: 64: uint16_t LCD_Read(uint16_t posX, uint16_t posY);libraries
      +                          /lcd_lowlevel.c: 65: {;libraries/lcd_lowlevel.c: 66:  uint16_t temp16;;libraries/lcd_low
      +                          level.c: 67:   uint16_t color;;libraries/lcd_lowlevel.c: 70:   PORTA = 0x2A; LATC4 = 0; 
      +                          LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 15955  0040C2  0E2A               	movlw	42
 15956  0040C4  6E80               	movwf	128,c	;volatile
 15957  0040C6  988B               	bcf	3979,4,c	;volatile
 15958  0040C8  968B               	bcf	3979,3,c	;volatile
 15959  0040CA  868B               	bsf	3979,3,c	;volatile
 15960  0040CC  888B               	bsf	3979,4,c	;volatile
 15961                           
 15962                           ;libraries/lcd_lowlevel.c: 71:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 15963  0040CE  5013               	movf	(LCD_Read@posX+1)^0,w,c
 15964  0040D0  6E80               	movwf	128,c	;volatile
 15965  0040D2  968B               	bcf	3979,3,c	;volatile
 15966  0040D4  868B               	bsf	3979,3,c	;volatile
 15967  0040D6                     
 15968                           ;libraries/lcd_lowlevel.c: 72:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 15969  0040D6  C012  FF80         	movff	LCD_Read@posX,3968	;volatile
 15970  0040DA  968B               	bcf	3979,3,c	;volatile
 15971  0040DC  868B               	bsf	3979,3,c	;volatile
 15972                           
 15973                           ;libraries/lcd_lowlevel.c: 73:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 15974  0040DE  0E00               	movlw	0
 15975  0040E0  6E80               	movwf	128,c	;volatile
 15976  0040E2  968B               	bcf	3979,3,c	;volatile
 15977  0040E4  868B               	bsf	3979,3,c	;volatile
 15978                           
 15979                           ;libraries/lcd_lowlevel.c: 74:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 15980  0040E6  0EEF               	movlw	239
 15981  0040E8  6E80               	movwf	128,c	;volatile
 15982  0040EA  968B               	bcf	3979,3,c	;volatile
 15983  0040EC  868B               	bsf	3979,3,c	;volatile
 15984                           
 15985                           ;libraries/lcd_lowlevel.c: 76:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 15986  0040EE  0E2B               	movlw	43
 15987  0040F0  6E80               	movwf	128,c	;volatile
 15988  0040F2  988B               	bcf	3979,4,c	;volatile
 15989  0040F4  968B               	bcf	3979,3,c	;volatile
 15990  0040F6  868B               	bsf	3979,3,c	;volatile
 15991  0040F8  888B               	bsf	3979,4,c	;volatile
 15992                           
 15993                           ;libraries/lcd_lowlevel.c: 77:   PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 15994  0040FA  5015               	movf	(LCD_Read@posY+1)^0,w,c
 15995  0040FC  6E80               	movwf	128,c	;volatile
 15996  0040FE  968B               	bcf	3979,3,c	;volatile
 15997  004100  868B               	bsf	3979,3,c	;volatile
 15998  004102                     
 15999                           ;libraries/lcd_lowlevel.c: 78:   PORTA = posY; LATC3 = 0; LATC3 = 1;;
 16000  004102  C014  FF80         	movff	LCD_Read@posY,3968	;volatile
 16001  004106  968B               	bcf	3979,3,c	;volatile
 16002  004108  868B               	bsf	3979,3,c	;volatile
 16003                           
 16004                           ;libraries/lcd_lowlevel.c: 79:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 16005  00410A  0E01               	movlw	1
 16006  00410C  6E80               	movwf	128,c	;volatile
 16007  00410E  968B               	bcf	3979,3,c	;volatile
 16008  004110  868B               	bsf	3979,3,c	;volatile
 16009                           
 16010                           ;libraries/lcd_lowlevel.c: 80:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 16011  004112  0E3F               	movlw	63
 16012  004114  6E80               	movwf	128,c	;volatile
 16013  004116  968B               	bcf	3979,3,c	;volatile
 16014  004118  868B               	bsf	3979,3,c	;volatile
 16015                           
 16016                           ;libraries/lcd_lowlevel.c: 82:   PORTA = 0x2E; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 16017  00411A  0E2E               	movlw	46
 16018  00411C  6E80               	movwf	128,c	;volatile
 16019  00411E  988B               	bcf	3979,4,c	;volatile
 16020  004120  968B               	bcf	3979,3,c	;volatile
 16021  004122  868B               	bsf	3979,3,c	;volatile
 16022  004124  888B               	bsf	3979,4,c	;volatile
 16023  004126                     
 16024                           ;libraries/lcd_lowlevel.c: 83:  TRISA = 0xFF;
 16025  004126  6892               	setf	146,c	;volatile
 16026  004128                     
 16027                           ;libraries/lcd_lowlevel.c: 84:  LATC2 = 0;
 16028  004128  948B               	bcf	3979,2,c	;volatile
 16029  00412A                     
 16030                           ;libraries/lcd_lowlevel.c: 85:   __nop();
 16031  00412A  F000               	nop	
 16032  00412C                     
 16033                           ;libraries/lcd_lowlevel.c: 86:  LATC2 = 1;
 16034  00412C  848B               	bsf	3979,2,c	;volatile
 16035  00412E                     
 16036                           ;libraries/lcd_lowlevel.c: 87:  TRISA = 0xFF;
 16037  00412E  6892               	setf	146,c	;volatile
 16038  004130                     
 16039                           ;libraries/lcd_lowlevel.c: 88:  LATC2 = 0;
 16040  004130  948B               	bcf	3979,2,c	;volatile
 16041  004132                     
 16042                           ;libraries/lcd_lowlevel.c: 89:   __nop();
 16043  004132  F000               	nop	
 16044  004134                     
 16045                           ;libraries/lcd_lowlevel.c: 90:  temp16 = PORTA;
 16046  004134  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 16047  004138  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 16048  00413A                     
 16049                           ;libraries/lcd_lowlevel.c: 91:  LATC2 = 1;
 16050  00413A  848B               	bsf	3979,2,c	;volatile
 16051  00413C                     
 16052                           ;libraries/lcd_lowlevel.c: 92:   temp16 = temp16 >> 3;
 16053  00413C  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 16054  004140  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 16055  004144  90D8               	bcf	status,0,c
 16056  004146  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16057  004148  3216               	rrcf	??_LCD_Read^0,f,c
 16058  00414A  90D8               	bcf	status,0,c
 16059  00414C  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16060  00414E  3216               	rrcf	??_LCD_Read^0,f,c
 16061  004150  90D8               	bcf	status,0,c
 16062  004152  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16063  004154  3216               	rrcf	??_LCD_Read^0,f,c
 16064  004156  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 16065  00415A  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 16066  00415E                     
 16067                           ;libraries/lcd_lowlevel.c: 93:   color = temp16 << 11;
 16068  00415E  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 16069  004162  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 16070  004166  0E0B               	movlw	11
 16071  004168                     u5505:
 16072  004168  90D8               	bcf	status,0,c
 16073  00416A  3616               	rlcf	??_LCD_Read^0,f,c
 16074  00416C  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 16075  00416E  2EE8               	decfsz	wreg,f,c
 16076  004170  EFB4  F020         	goto	u5505
 16077  004174  C016  F018         	movff	??_LCD_Read,LCD_Read@color
 16078  004178  C017  F019         	movff	??_LCD_Read+1,LCD_Read@color+1
 16079  00417C                     
 16080                           ;libraries/lcd_lowlevel.c: 94:  LATC2 = 0;
 16081  00417C  948B               	bcf	3979,2,c	;volatile
 16082  00417E                     
 16083                           ;libraries/lcd_lowlevel.c: 95:   __nop();
 16084  00417E  F000               	nop	
 16085  004180                     
 16086                           ;libraries/lcd_lowlevel.c: 96:  temp16 = PORTA;
 16087  004180  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 16088  004184  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 16089  004186                     
 16090                           ;libraries/lcd_lowlevel.c: 97:  LATC2 = 1;
 16091  004186  848B               	bsf	3979,2,c	;volatile
 16092  004188                     
 16093                           ;libraries/lcd_lowlevel.c: 98:   temp16 = temp16 >> 2;
 16094  004188  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 16095  00418C  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 16096  004190  90D8               	bcf	status,0,c
 16097  004192  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16098  004194  3216               	rrcf	??_LCD_Read^0,f,c
 16099  004196  90D8               	bcf	status,0,c
 16100  004198  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16101  00419A  3216               	rrcf	??_LCD_Read^0,f,c
 16102  00419C  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 16103  0041A0  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 16104  0041A4                     
 16105                           ;libraries/lcd_lowlevel.c: 99:   color |= temp16 << 5;
 16106  0041A4  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 16107  0041A8  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 16108  0041AC  0E05               	movlw	5
 16109  0041AE                     u5515:
 16110  0041AE  90D8               	bcf	status,0,c
 16111  0041B0  3616               	rlcf	??_LCD_Read^0,f,c
 16112  0041B2  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 16113  0041B4  2EE8               	decfsz	wreg,f,c
 16114  0041B6  EFD7  F020         	goto	u5515
 16115  0041BA  5016               	movf	??_LCD_Read^0,w,c
 16116  0041BC  1218               	iorwf	LCD_Read@color^0,f,c
 16117  0041BE  5017               	movf	(??_LCD_Read+1)^0,w,c
 16118  0041C0  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 16119  0041C2                     
 16120                           ;libraries/lcd_lowlevel.c: 100:  LATC2 = 0;
 16121  0041C2  948B               	bcf	3979,2,c	;volatile
 16122  0041C4                     
 16123                           ;libraries/lcd_lowlevel.c: 101:   __nop();
 16124  0041C4  F000               	nop	
 16125  0041C6                     
 16126                           ;libraries/lcd_lowlevel.c: 102:  temp16 |= PORTA;
 16127  0041C6  5080               	movf	128,w,c	;volatile
 16128  0041C8  121A               	iorwf	LCD_Read@temp16^0,f,c
 16129  0041CA                     
 16130                           ;libraries/lcd_lowlevel.c: 103:  LATC2 = 1;
 16131  0041CA  848B               	bsf	3979,2,c	;volatile
 16132  0041CC                     
 16133                           ;libraries/lcd_lowlevel.c: 104:   temp16 = temp16 >> 3;
 16134  0041CC  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 16135  0041D0  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 16136  0041D4  90D8               	bcf	status,0,c
 16137  0041D6  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16138  0041D8  3216               	rrcf	??_LCD_Read^0,f,c
 16139  0041DA  90D8               	bcf	status,0,c
 16140  0041DC  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16141  0041DE  3216               	rrcf	??_LCD_Read^0,f,c
 16142  0041E0  90D8               	bcf	status,0,c
 16143  0041E2  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 16144  0041E4  3216               	rrcf	??_LCD_Read^0,f,c
 16145  0041E6  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 16146  0041EA  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 16147  0041EE                     
 16148                           ;libraries/lcd_lowlevel.c: 105:   color |= temp16;
 16149  0041EE  501A               	movf	LCD_Read@temp16^0,w,c
 16150  0041F0  1218               	iorwf	LCD_Read@color^0,f,c
 16151  0041F2  501B               	movf	(LCD_Read@temp16+1)^0,w,c
 16152  0041F4  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 16153  0041F6                     
 16154                           ;libraries/lcd_lowlevel.c: 106:  TRISA = 0x00;
 16155  0041F6  0E00               	movlw	0
 16156  0041F8  6E92               	movwf	146,c	;volatile
 16157  0041FA                     
 16158                           ;libraries/lcd_lowlevel.c: 107:  return color;
 16159  0041FA  C018  F012         	movff	LCD_Read@color,?_LCD_Read
 16160  0041FE  C019  F013         	movff	LCD_Read@color+1,?_LCD_Read+1
 16161  004202  0012               	return		;funcret
 16162  004204                     __end_of_LCD_Read:
 16163                           	callstack 0
 16164                           
 16165 ;; *************** function _LCD_Bitmap *****************
 16166 ;; Defined at:
 16167 ;;		line 823 in file "libraries/lcd_highlevel.c"
 16168 ;; Parameters:    Size  Location     Type
 16169 ;;  bmpPtr          2   38[COMRAM] PTR const unsigned char 
 16170 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 16171 ;;		 -> STR_3(9), STR_2(11), 
 16172 ;;  posX            2   40[COMRAM] unsigned short 
 16173 ;;  posY            2   42[COMRAM] unsigned short 
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;  bfOffBits       4    0[BANK0 ] unsigned long 
 16176 ;;  i               2   26[BANK0 ] unsigned short 
 16177 ;;  jumpColor       2   24[BANK0 ] unsigned short 
 16178 ;;  biWidth         2   22[BANK0 ] unsigned short 
 16179 ;;  newY            2   19[BANK0 ] unsigned short 
 16180 ;;  strPtr          2   17[BANK0 ] PTR struct .
 16181 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 16182 ;;		 -> STR_3(9), STR_2(11), 
 16183 ;;  curXPos         2   15[BANK0 ] unsigned short 
 16184 ;;  color           2   13[BANK0 ] unsigned short 
 16185 ;;  biHeight        2   11[BANK0 ] unsigned short 
 16186 ;;  colorTablePt    2    9[BANK0 ] PTR unsigned char 
 16187 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 16188 ;;		 -> STR_3(9), STR_2(11), 
 16189 ;;  curYPos         2    7[BANK0 ] unsigned short 
 16190 ;;  jumpCount       2    5[BANK0 ] unsigned short 
 16191 ;;  pixelCount      1   21[BANK0 ] unsigned char 
 16192 ;;  endOfImage      1    4[BANK0 ] unsigned char 
 16193 ;; Return value:  Size  Location     Type
 16194 ;;                  1    wreg      unsigned char 
 16195 ;; Registers used:
 16196 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16197 ;; Tracked objects:
 16198 ;;		On entry : 0/0
 16199 ;;		On exit  : 0/0
 16200 ;;		Unchanged: 0/0
 16201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16202 ;;      Params:         6       0       0       0       0       0       0
 16203 ;;      Locals:         0      28       0       0       0       0       0
 16204 ;;      Temps:          4       0       0       0       0       0       0
 16205 ;;      Totals:        10      28       0       0       0       0       0
 16206 ;;Total ram usage:       38 bytes
 16207 ;; Hardware stack levels used: 1
 16208 ;; Hardware stack levels required when called: 5
 16209 ;; This function calls:
 16210 ;;		_RGB2LCD
 16211 ;;		___lwdiv
 16212 ;;		___lwmod
 16213 ;;		___wmul
 16214 ;; This function is called by:
 16215 ;;		_LCD_ButtonDraw
 16216 ;; This function uses a non-reentrant model
 16217 ;;
 16218                           
 16219                           	psect	text66
 16220  00085E                     __ptext66:
 16221                           	callstack 0
 16222  00085E                     _LCD_Bitmap:
 16223                           	callstack 19
 16224  00085E                     
 16225                           ;libraries/lcd_highlevel.c: 823: uint8_t LCD_Bitmap(const uint8_t * bmpPtr, uint16_t pos
      +                          X, uint16_t posY);libraries/lcd_highlevel.c: 824: {;libraries/lcd_highlevel.c: 825:   ui
      +                          nt32_t bfOffBits;;libraries/lcd_highlevel.c: 826:   uint16_t biWidth, biHeight;;librarie
      +                          s/lcd_highlevel.c: 827:   uint8_t * colorTablePtr;;libraries/lcd_highlevel.c: 828:   uin
      +                          t8_t endOfImage;;libraries/lcd_highlevel.c: 829:   uint16_t i,curXPos,curYPos;;libraries
      +                          /lcd_highlevel.c: 830:   uint8_t pixelCount;;libraries/lcd_highlevel.c: 831:   uint16_t 
      +                          color;
 16226  00085E  C027  F071         	movff	LCD_Bitmap@bmpPtr,LCD_Bitmap@strPtr
 16227  000862  C028  F072         	movff	LCD_Bitmap@bmpPtr+1,LCD_Bitmap@strPtr+1
 16228  000866                     
 16229                           ;libraries/lcd_highlevel.c: 839:   bfOffBits = strPtr->bfOffBits;
 16230  000866  0E0A               	movlw	10
 16231  000868  0100               	movlb	0	; () banked
 16232  00086A  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 16233  00086C  6E2D               	movwf	??_LCD_Bitmap^0,c
 16234  00086E  0E00               	movlw	0
 16235  000870  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 16236  000872  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16237  000874  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16238  000878  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16239  00087C                     	if	0	;tblptru may be non-zero
 16240  00087C                     	endif
 16241  00087C                     	if	0	;tblptru may be non-zero
 16242  00087C                     	endif
 16243  00087C  0009               	tblrd		*+
 16244  00087E  CFF5 F060          	movff	tablat,LCD_Bitmap@bfOffBits
 16245  000882  0009               	tblrd		*+
 16246  000884  CFF5 F061          	movff	tablat,LCD_Bitmap@bfOffBits+1
 16247  000888  0009               	tblrd		*+
 16248  00088A  CFF5 F062          	movff	tablat,LCD_Bitmap@bfOffBits+2
 16249  00088E  000A               	tblrd		*-
 16250  000890  CFF5 F063          	movff	tablat,LCD_Bitmap@bfOffBits+3
 16251  000894                     
 16252                           ; BSR set to: 0
 16253                           ;libraries/lcd_highlevel.c: 840:   biWidth = strPtr->biWidth;
 16254  000894  0E12               	movlw	18
 16255  000896  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 16256  000898  6E2D               	movwf	??_LCD_Bitmap^0,c
 16257  00089A  0E00               	movlw	0
 16258  00089C  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 16259  00089E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16260  0008A0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16261  0008A4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16262  0008A8                     	if	0	;tblptru may be non-zero
 16263  0008A8                     	endif
 16264  0008A8                     	if	0	;tblptru may be non-zero
 16265  0008A8                     	endif
 16266  0008A8  0009               	tblrd		*+
 16267  0008AA  CFF5 F076          	movff	tablat,LCD_Bitmap@biWidth
 16268  0008AE  000A               	tblrd		*-
 16269  0008B0  CFF5 F077          	movff	tablat,LCD_Bitmap@biWidth+1
 16270  0008B4                     
 16271                           ; BSR set to: 0
 16272                           ;libraries/lcd_highlevel.c: 841:   biHeight = strPtr->biHeight;
 16273  0008B4  0E16               	movlw	22
 16274  0008B6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 16275  0008B8  6E2D               	movwf	??_LCD_Bitmap^0,c
 16276  0008BA  0E00               	movlw	0
 16277  0008BC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 16278  0008BE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16279  0008C0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16280  0008C4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16281  0008C8                     	if	0	;tblptru may be non-zero
 16282  0008C8                     	endif
 16283  0008C8                     	if	0	;tblptru may be non-zero
 16284  0008C8                     	endif
 16285  0008C8  0009               	tblrd		*+
 16286  0008CA  CFF5 F06B          	movff	tablat,LCD_Bitmap@biHeight
 16287  0008CE  000A               	tblrd		*-
 16288  0008D0  CFF5 F06C          	movff	tablat,LCD_Bitmap@biHeight+1
 16289  0008D4                     
 16290                           ; BSR set to: 0
 16291                           ;libraries/lcd_highlevel.c: 842:   if((strPtr->biBitCount != 8) ||
 16292  0008D4  0E1C               	movlw	28
 16293  0008D6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 16294  0008D8  6E2D               	movwf	??_LCD_Bitmap^0,c
 16295  0008DA  0E00               	movlw	0
 16296  0008DC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 16297  0008DE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16298  0008E0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16299  0008E4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16300  0008E8                     	if	0	;tblptru may be non-zero
 16301  0008E8                     	endif
 16302  0008E8                     	if	0	;tblptru may be non-zero
 16303  0008E8                     	endif
 16304  0008E8  0009               	tblrd		*+
 16305  0008EA  0E08               	movlw	8
 16306  0008EC  18F5               	xorwf	tablat,w,c
 16307  0008EE  0009               	tblrd		*+
 16308  0008F0  10F5               	iorwf	tablat,w,c
 16309  0008F2  A4D8               	btfss	status,2,c
 16310  0008F4  EF7E  F004         	goto	u6001
 16311  0008F8  EF80  F004         	goto	u6000
 16312  0008FC                     u6001:
 16313  0008FC  EF29  F007         	goto	l313
 16314  000900                     u6000:
 16315  000900                     
 16316                           ; BSR set to: 0
 16317  000900  0E1E               	movlw	30
 16318  000902  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 16319  000904  6E2D               	movwf	??_LCD_Bitmap^0,c
 16320  000906  0E00               	movlw	0
 16321  000908  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 16322  00090A  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16323  00090C  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16324  000910  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16325  000914                     	if	0	;tblptru may be non-zero
 16326  000914                     	endif
 16327  000914                     	if	0	;tblptru may be non-zero
 16328  000914                     	endif
 16329  000914  0009               	tblrd		*+
 16330  000916  04F5               	decf	tablat,w,c
 16331  000918  0009               	tblrd		*+
 16332  00091A  10F5               	iorwf	tablat,w,c
 16333  00091C  0009               	tblrd		*+
 16334  00091E  10F5               	iorwf	tablat,w,c
 16335  000920  0009               	tblrd		*+
 16336  000922  10F5               	iorwf	tablat,w,c
 16337  000924  B4D8               	btfsc	status,2,c
 16338  000926  EF97  F004         	goto	u6011
 16339  00092A  EF99  F004         	goto	u6010
 16340  00092E                     u6011:
 16341  00092E  EF9B  F004         	goto	l8720
 16342  000932                     u6010:
 16343  000932  EF29  F007         	goto	l313
 16344  000936                     l8720:
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;libraries/lcd_highlevel.c: 847:   if(((posX + biWidth) > (240)) ||
 16348  000936  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 16349  000938  2429               	addwf	LCD_Bitmap@posX^0,w,c
 16350  00093A  6E2D               	movwf	??_LCD_Bitmap^0,c
 16351  00093C  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 16352  00093E  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 16353  000940  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16354  000942  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 16355  000944  E107               	bnz	u6021
 16356  000946  0EF1               	movlw	241
 16357  000948  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 16358  00094A  B0D8               	btfsc	status,0,c
 16359  00094C  EFAA  F004         	goto	u6021
 16360  000950  EFAC  F004         	goto	u6020
 16361  000954                     u6021:
 16362  000954  EF29  F007         	goto	l313
 16363  000958                     u6020:
 16364  000958                     
 16365                           ; BSR set to: 0
 16366  000958  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 16367  00095A  242B               	addwf	LCD_Bitmap@posY^0,w,c
 16368  00095C  6E2D               	movwf	??_LCD_Bitmap^0,c
 16369  00095E  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 16370  000960  202C               	addwfc	(LCD_Bitmap@posY+1)^0,w,c
 16371  000962  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16372  000964  0E41               	movlw	65
 16373  000966  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 16374  000968  0E01               	movlw	1
 16375  00096A  582E               	subwfb	(??_LCD_Bitmap+1)^0,w,c
 16376  00096C  A0D8               	btfss	status,0,c
 16377  00096E  EFBB  F004         	goto	u6031
 16378  000972  EFBD  F004         	goto	u6030
 16379  000976                     u6031:
 16380  000976  EFBF  F004         	goto	l8724
 16381  00097A                     u6030:
 16382  00097A  EF29  F007         	goto	l313
 16383  00097E                     l8724:
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;libraries/lcd_highlevel.c: 853:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 16387  00097E  0E36               	movlw	54
 16388  000980  6E80               	movwf	128,c	;volatile
 16389  000982                     
 16390                           ; BSR set to: 0
 16391  000982  988B               	bcf	3979,4,c	;volatile
 16392  000984                     
 16393                           ; BSR set to: 0
 16394  000984  968B               	bcf	3979,3,c	;volatile
 16395  000986                     
 16396                           ; BSR set to: 0
 16397  000986  868B               	bsf	3979,3,c	;volatile
 16398  000988                     
 16399                           ; BSR set to: 0
 16400  000988  888B               	bsf	3979,4,c	;volatile
 16401                           
 16402                           ;libraries/lcd_highlevel.c: 855:   PORTA = 0b10000000; LATC3 = 0; LATC3 = 1;;
 16403  00098A  0E80               	movlw	128
 16404  00098C  6E80               	movwf	128,c	;volatile
 16405  00098E                     
 16406                           ; BSR set to: 0
 16407  00098E  968B               	bcf	3979,3,c	;volatile
 16408  000990                     
 16409                           ; BSR set to: 0
 16410  000990  868B               	bsf	3979,3,c	;volatile
 16411  000992                     
 16412                           ; BSR set to: 0
 16413                           ;libraries/lcd_highlevel.c: 857:   colorTablePtr = (uint8_t *)bmpPtr + 54;
 16414  000992  0E36               	movlw	54
 16415  000994  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 16416  000996  6F69               	movwf	LCD_Bitmap@colorTablePtr& (0+255),b
 16417  000998  0E00               	movlw	0
 16418  00099A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 16419  00099C  6F6A               	movwf	(LCD_Bitmap@colorTablePtr+1)& (0+255),b
 16420  00099E                     
 16421                           ; BSR set to: 0
 16422                           ;libraries/lcd_highlevel.c: 858:   bmpPtr += bfOffBits;
 16423  00099E  5160               	movf	LCD_Bitmap@bfOffBits& (0+255),w,b
 16424  0009A0  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 16425  0009A2  5161               	movf	(LCD_Bitmap@bfOffBits+1)& (0+255),w,b
 16426  0009A4  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 16427                           
 16428                           ;libraries/lcd_highlevel.c: 859:   endOfImage = 0;
 16429  0009A6  0E00               	movlw	0
 16430  0009A8  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 16431  0009AA                     
 16432                           ; BSR set to: 0
 16433                           ;libraries/lcd_highlevel.c: 860:   jumpColor = RGB2LCD(colorTablePtr);
 16434  0009AA  C069  F012         	movff	LCD_Bitmap@colorTablePtr,RGB2LCD@colorTableEntry
 16435  0009AE  C06A  F013         	movff	LCD_Bitmap@colorTablePtr+1,RGB2LCD@colorTableEntry+1
 16436  0009B2  EC64  F027         	call	_RGB2LCD	;wreg free
 16437  0009B6  C012  F078         	movff	?_RGB2LCD,LCD_Bitmap@jumpColor
 16438  0009BA  C013  F079         	movff	?_RGB2LCD+1,LCD_Bitmap@jumpColor+1
 16439  0009BE                     
 16440                           ;libraries/lcd_highlevel.c: 862:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 16441  0009BE  0E2A               	movlw	42
 16442  0009C0  6E80               	movwf	128,c	;volatile
 16443  0009C2  988B               	bcf	3979,4,c	;volatile
 16444  0009C4  968B               	bcf	3979,3,c	;volatile
 16445  0009C6  868B               	bsf	3979,3,c	;volatile
 16446  0009C8  888B               	bsf	3979,4,c	;volatile
 16447  0009CA                     
 16448                           ;libraries/lcd_highlevel.c: 863:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 16449  0009CA  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 16450  0009CC  6E80               	movwf	128,c	;volatile
 16451  0009CE  968B               	bcf	3979,3,c	;volatile
 16452  0009D0  868B               	bsf	3979,3,c	;volatile
 16453  0009D2                     
 16454                           ;libraries/lcd_highlevel.c: 864:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 16455  0009D2  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 16456  0009D6  968B               	bcf	3979,3,c	;volatile
 16457  0009D8  868B               	bsf	3979,3,c	;volatile
 16458  0009DA                     
 16459                           ;libraries/lcd_highlevel.c: 865:   posX = posX + biWidth-1;
 16460  0009DA  0100               	movlb	0	; () banked
 16461  0009DC  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 16462  0009DE  2429               	addwf	LCD_Bitmap@posX^0,w,c
 16463  0009E0  6E2D               	movwf	??_LCD_Bitmap^0,c
 16464  0009E2  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 16465  0009E4  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 16466  0009E6  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16467  0009E8  0EFF               	movlw	255
 16468  0009EA  242D               	addwf	??_LCD_Bitmap^0,w,c
 16469  0009EC  6E29               	movwf	LCD_Bitmap@posX^0,c
 16470  0009EE  0EFF               	movlw	255
 16471  0009F0  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 16472  0009F2  6E2A               	movwf	(LCD_Bitmap@posX+1)^0,c
 16473  0009F4                     
 16474                           ; BSR set to: 0
 16475                           ;libraries/lcd_highlevel.c: 866:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 16476  0009F4  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 16477  0009F6  6E80               	movwf	128,c	;volatile
 16478  0009F8                     
 16479                           ; BSR set to: 0
 16480  0009F8  968B               	bcf	3979,3,c	;volatile
 16481  0009FA                     
 16482                           ; BSR set to: 0
 16483  0009FA  868B               	bsf	3979,3,c	;volatile
 16484  0009FC                     
 16485                           ; BSR set to: 0
 16486                           ;libraries/lcd_highlevel.c: 867:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 16487  0009FC  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 16488  000A00                     
 16489                           ; BSR set to: 0
 16490  000A00  968B               	bcf	3979,3,c	;volatile
 16491  000A02                     
 16492                           ; BSR set to: 0
 16493  000A02  868B               	bsf	3979,3,c	;volatile
 16494  000A04                     
 16495                           ; BSR set to: 0
 16496                           ;libraries/lcd_highlevel.c: 869:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 16497  000A04  0E2B               	movlw	43
 16498  000A06  6E80               	movwf	128,c	;volatile
 16499  000A08                     
 16500                           ; BSR set to: 0
 16501  000A08  988B               	bcf	3979,4,c	;volatile
 16502  000A0A                     
 16503                           ; BSR set to: 0
 16504  000A0A  968B               	bcf	3979,3,c	;volatile
 16505  000A0C                     
 16506                           ; BSR set to: 0
 16507  000A0C  868B               	bsf	3979,3,c	;volatile
 16508  000A0E                     
 16509                           ; BSR set to: 0
 16510  000A0E  888B               	bsf	3979,4,c	;volatile
 16511  000A10                     
 16512                           ; BSR set to: 0
 16513                           ;libraries/lcd_highlevel.c: 870:   newY = 320 - posY - biHeight;
 16514  000A10  C02B  F02D         	movff	LCD_Bitmap@posY,??_LCD_Bitmap
 16515  000A14  C02C  F02E         	movff	LCD_Bitmap@posY+1,??_LCD_Bitmap+1
 16516  000A18  1E2D               	comf	??_LCD_Bitmap^0,f,c
 16517  000A1A  1E2E               	comf	(??_LCD_Bitmap+1)^0,f,c
 16518  000A1C  4A2D               	infsnz	??_LCD_Bitmap^0,f,c
 16519  000A1E  2A2E               	incf	(??_LCD_Bitmap+1)^0,f,c
 16520  000A20  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 16521  000A22  5E2D               	subwf	??_LCD_Bitmap^0,f,c
 16522  000A24  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 16523  000A26  5A2E               	subwfb	(??_LCD_Bitmap+1)^0,f,c
 16524  000A28  0E40               	movlw	64
 16525  000A2A  242D               	addwf	??_LCD_Bitmap^0,w,c
 16526  000A2C  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 16527  000A2E  0E01               	movlw	1
 16528  000A30  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 16529  000A32  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 16530  000A34                     
 16531                           ; BSR set to: 0
 16532                           ;libraries/lcd_highlevel.c: 871:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 16533  000A34  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 16534  000A36  6E80               	movwf	128,c	;volatile
 16535  000A38                     
 16536                           ; BSR set to: 0
 16537  000A38  968B               	bcf	3979,3,c	;volatile
 16538  000A3A                     
 16539                           ; BSR set to: 0
 16540  000A3A  868B               	bsf	3979,3,c	;volatile
 16541  000A3C                     
 16542                           ; BSR set to: 0
 16543                           ;libraries/lcd_highlevel.c: 872:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 16544  000A3C  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 16545  000A40                     
 16546                           ; BSR set to: 0
 16547  000A40  968B               	bcf	3979,3,c	;volatile
 16548  000A42                     
 16549                           ; BSR set to: 0
 16550  000A42  868B               	bsf	3979,3,c	;volatile
 16551  000A44                     
 16552                           ; BSR set to: 0
 16553                           ;libraries/lcd_highlevel.c: 873:   newY = newY + biHeight-1;
 16554  000A44  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 16555  000A46  2573               	addwf	LCD_Bitmap@newY& (0+255),w,b
 16556  000A48  6E2D               	movwf	??_LCD_Bitmap^0,c
 16557  000A4A  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 16558  000A4C  2174               	addwfc	(LCD_Bitmap@newY+1)& (0+255),w,b
 16559  000A4E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16560  000A50  0EFF               	movlw	255
 16561  000A52  242D               	addwf	??_LCD_Bitmap^0,w,c
 16562  000A54  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 16563  000A56  0EFF               	movlw	255
 16564  000A58  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 16565  000A5A  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 16566  000A5C                     
 16567                           ; BSR set to: 0
 16568                           ;libraries/lcd_highlevel.c: 874:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 16569  000A5C  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 16570  000A5E  6E80               	movwf	128,c	;volatile
 16571  000A60                     
 16572                           ; BSR set to: 0
 16573  000A60  968B               	bcf	3979,3,c	;volatile
 16574  000A62                     
 16575                           ; BSR set to: 0
 16576  000A62  868B               	bsf	3979,3,c	;volatile
 16577  000A64                     
 16578                           ; BSR set to: 0
 16579                           ;libraries/lcd_highlevel.c: 875:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 16580  000A64  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 16581  000A68                     
 16582                           ; BSR set to: 0
 16583  000A68  968B               	bcf	3979,3,c	;volatile
 16584  000A6A                     
 16585                           ; BSR set to: 0
 16586  000A6A  868B               	bsf	3979,3,c	;volatile
 16587  000A6C                     
 16588                           ; BSR set to: 0
 16589                           ;libraries/lcd_highlevel.c: 877:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 16590  000A6C  0E2C               	movlw	44
 16591  000A6E  6E80               	movwf	128,c	;volatile
 16592  000A70                     
 16593                           ; BSR set to: 0
 16594  000A70  988B               	bcf	3979,4,c	;volatile
 16595  000A72                     
 16596                           ; BSR set to: 0
 16597  000A72  968B               	bcf	3979,3,c	;volatile
 16598  000A74                     
 16599                           ; BSR set to: 0
 16600  000A74  868B               	bsf	3979,3,c	;volatile
 16601  000A76                     
 16602                           ; BSR set to: 0
 16603  000A76  888B               	bsf	3979,4,c	;volatile
 16604  000A78                     
 16605                           ; BSR set to: 0
 16606                           ;libraries/lcd_highlevel.c: 878:   curXPos = 0;
 16607  000A78  0E00               	movlw	0
 16608  000A7A  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 16609  000A7C  0E00               	movlw	0
 16610  000A7E  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 16611  000A80                     
 16612                           ; BSR set to: 0
 16613                           ;libraries/lcd_highlevel.c: 879:   curYPos = 0;
 16614  000A80  0E00               	movlw	0
 16615  000A82  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 16616  000A84  0E00               	movlw	0
 16617  000A86  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 16618  000A88                     l8832:
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;libraries/lcd_highlevel.c: 881:   {;libraries/lcd_highlevel.c: 882:     if(bmpPtr[0] ==
      +                           0)
 16622  000A88  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 16623  000A8C  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 16624  000A90                     	if	0	;tblptru may be non-zero
 16625  000A90                     	endif
 16626  000A90                     	if	0	;tblptru may be non-zero
 16627  000A90                     	endif
 16628  000A90  0008               	tblrd		*
 16629  000A92  50F5               	movf	tablat,w,c
 16630  000A94  0900               	iorlw	0
 16631  000A96  A4D8               	btfss	status,2,c
 16632  000A98  EF50  F005         	goto	u6041
 16633  000A9C  EF52  F005         	goto	u6040
 16634  000AA0                     u6041:
 16635  000AA0  EFCD  F006         	goto	l8958
 16636  000AA4                     u6040:
 16637  000AA4  EFA9  F006         	goto	l8956
 16638  000AA8                     l8836:
 16639                           
 16640                           ; BSR set to: 0
 16641                           ;libraries/lcd_highlevel.c: 887:           bmpPtr += 2;
 16642  000AA8  0E02               	movlw	2
 16643  000AAA  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 16644  000AAC  0E00               	movlw	0
 16645  000AAE  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 16646  000AB0                     
 16647                           ; BSR set to: 0
 16648                           ;libraries/lcd_highlevel.c: 888:           for(i=0;i<biWidth - curXPos;i++)
 16649  000AB0  0E00               	movlw	0
 16650  000AB2  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 16651  000AB4  0E00               	movlw	0
 16652  000AB6  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 16653  000AB8  EF68  F005         	goto	l8854
 16654  000ABC                     l8840:
 16655                           
 16656                           ; BSR set to: 0
 16657                           ;libraries/lcd_highlevel.c: 889:           {;libraries/lcd_highlevel.c: 890:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 16658  000ABC  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 16659  000ABE  6E80               	movwf	128,c	;volatile
 16660  000AC0                     
 16661                           ; BSR set to: 0
 16662  000AC0  968B               	bcf	3979,3,c	;volatile
 16663  000AC2                     
 16664                           ; BSR set to: 0
 16665  000AC2  868B               	bsf	3979,3,c	;volatile
 16666  000AC4                     
 16667                           ; BSR set to: 0
 16668                           ;libraries/lcd_highlevel.c: 891:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 16669  000AC4  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 16670  000AC8                     
 16671                           ; BSR set to: 0
 16672  000AC8  968B               	bcf	3979,3,c	;volatile
 16673  000ACA                     
 16674                           ; BSR set to: 0
 16675  000ACA  868B               	bsf	3979,3,c	;volatile
 16676  000ACC                     
 16677                           ; BSR set to: 0
 16678                           ;libraries/lcd_highlevel.c: 892:           }
 16679  000ACC  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 16680  000ACE  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 16681  000AD0                     l8854:
 16682                           
 16683                           ; BSR set to: 0
 16684  000AD0  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 16685  000AD2  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 16686  000AD4  6E2D               	movwf	??_LCD_Bitmap^0,c
 16687  000AD6  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 16688  000AD8  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 16689  000ADA  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16690  000ADC  502D               	movf	??_LCD_Bitmap^0,w,c
 16691  000ADE  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 16692  000AE0  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 16693  000AE2  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 16694  000AE4  A0D8               	btfss	status,0,c
 16695  000AE6  EF77  F005         	goto	u6051
 16696  000AEA  EF79  F005         	goto	u6050
 16697  000AEE                     u6051:
 16698  000AEE  EF5E  F005         	goto	l8840
 16699  000AF2                     u6050:
 16700  000AF2                     
 16701                           ; BSR set to: 0
 16702                           ;libraries/lcd_highlevel.c: 893:           curXPos = 0;
 16703  000AF2  0E00               	movlw	0
 16704  000AF4  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 16705  000AF6  0E00               	movlw	0
 16706  000AF8  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 16707  000AFA                     
 16708                           ; BSR set to: 0
 16709                           ;libraries/lcd_highlevel.c: 894:           curYPos++;
 16710  000AFA  4B67               	infsnz	LCD_Bitmap@curYPos& (0+255),f,b
 16711  000AFC  2B68               	incf	(LCD_Bitmap@curYPos+1)& (0+255),f,b
 16712                           
 16713                           ;libraries/lcd_highlevel.c: 895:         break;
 16714  000AFE  EF16  F007         	goto	l8984
 16715  000B02                     l8860:
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;libraries/lcd_highlevel.c: 897:           for(i=0;i<biWidth - curXPos;i++)
 16719  000B02  0E00               	movlw	0
 16720  000B04  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 16721  000B06  0E00               	movlw	0
 16722  000B08  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 16723  000B0A  EF91  F005         	goto	l8876
 16724  000B0E                     l8862:
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;libraries/lcd_highlevel.c: 898:           {;libraries/lcd_highlevel.c: 899:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 16728  000B0E  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 16729  000B10  6E80               	movwf	128,c	;volatile
 16730  000B12                     
 16731                           ; BSR set to: 0
 16732  000B12  968B               	bcf	3979,3,c	;volatile
 16733  000B14                     
 16734                           ; BSR set to: 0
 16735  000B14  868B               	bsf	3979,3,c	;volatile
 16736  000B16                     
 16737                           ; BSR set to: 0
 16738                           ;libraries/lcd_highlevel.c: 900:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 16739  000B16  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 16740  000B1A                     
 16741                           ; BSR set to: 0
 16742  000B1A  968B               	bcf	3979,3,c	;volatile
 16743  000B1C                     
 16744                           ; BSR set to: 0
 16745  000B1C  868B               	bsf	3979,3,c	;volatile
 16746  000B1E                     
 16747                           ; BSR set to: 0
 16748                           ;libraries/lcd_highlevel.c: 901:           }
 16749  000B1E  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 16750  000B20  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 16751  000B22                     l8876:
 16752                           
 16753                           ; BSR set to: 0
 16754  000B22  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 16755  000B24  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 16756  000B26  6E2D               	movwf	??_LCD_Bitmap^0,c
 16757  000B28  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 16758  000B2A  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 16759  000B2C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16760  000B2E  502D               	movf	??_LCD_Bitmap^0,w,c
 16761  000B30  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 16762  000B32  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 16763  000B34  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 16764  000B36  A0D8               	btfss	status,0,c
 16765  000B38  EFA0  F005         	goto	u6061
 16766  000B3C  EFA2  F005         	goto	u6060
 16767  000B40                     u6061:
 16768  000B40  EF87  F005         	goto	l8862
 16769  000B44                     u6060:
 16770  000B44                     
 16771                           ; BSR set to: 0
 16772                           ;libraries/lcd_highlevel.c: 902:           for(i=0;i<(biHeight - curYPos -1)*biWidth;i++
      +                          )
 16773  000B44  0E00               	movlw	0
 16774  000B46  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 16775  000B48  0E00               	movlw	0
 16776  000B4A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 16777  000B4C  EFB2  F005         	goto	l8894
 16778  000B50                     l8880:
 16779                           
 16780                           ; BSR set to: 0
 16781                           ;libraries/lcd_highlevel.c: 903:           {;libraries/lcd_highlevel.c: 904:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 16782  000B50  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 16783  000B52  6E80               	movwf	128,c	;volatile
 16784  000B54                     
 16785                           ; BSR set to: 0
 16786  000B54  968B               	bcf	3979,3,c	;volatile
 16787  000B56                     
 16788                           ; BSR set to: 0
 16789  000B56  868B               	bsf	3979,3,c	;volatile
 16790  000B58                     
 16791                           ; BSR set to: 0
 16792                           ;libraries/lcd_highlevel.c: 905:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 16793  000B58  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 16794  000B5C                     
 16795                           ; BSR set to: 0
 16796  000B5C  968B               	bcf	3979,3,c	;volatile
 16797  000B5E                     
 16798                           ; BSR set to: 0
 16799  000B5E  868B               	bsf	3979,3,c	;volatile
 16800  000B60                     
 16801                           ; BSR set to: 0
 16802                           ;libraries/lcd_highlevel.c: 906:           }
 16803  000B60  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 16804  000B62  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 16805  000B64                     l8894:
 16806                           
 16807                           ; BSR set to: 0
 16808  000B64  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 16809  000B66  5D6B               	subwf	LCD_Bitmap@biHeight& (0+255),w,b
 16810  000B68  6E2D               	movwf	??_LCD_Bitmap^0,c
 16811  000B6A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 16812  000B6C  596C               	subwfb	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 16813  000B6E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16814  000B70  0EFF               	movlw	255
 16815  000B72  242D               	addwf	??_LCD_Bitmap^0,w,c
 16816  000B74  6E1A               	movwf	___wmul@multiplier^0,c
 16817  000B76  0EFF               	movlw	255
 16818  000B78  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 16819  000B7A  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 16820  000B7C  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 16821  000B80  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 16822  000B84  EC0F  F02F         	call	___wmul	;wreg free
 16823  000B88  501A               	movf	?___wmul^0,w,c
 16824  000B8A  0100               	movlb	0	; () banked
 16825  000B8C  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 16826  000B8E  501B               	movf	(?___wmul+1)^0,w,c
 16827  000B90  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 16828  000B92  A0D8               	btfss	status,0,c
 16829  000B94  EFCE  F005         	goto	u6071
 16830  000B98  EFD0  F005         	goto	u6070
 16831  000B9C                     u6071:
 16832  000B9C  EFA8  F005         	goto	l8880
 16833  000BA0                     u6070:
 16834  000BA0                     
 16835                           ; BSR set to: 0
 16836                           ;libraries/lcd_highlevel.c: 907:           endOfImage = 1;
 16837  000BA0  0E01               	movlw	1
 16838  000BA2  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 16839                           
 16840                           ;libraries/lcd_highlevel.c: 908:         break;
 16841  000BA4  EF16  F007         	goto	l8984
 16842  000BA8                     l8898:
 16843                           
 16844                           ; BSR set to: 0
 16845                           ;libraries/lcd_highlevel.c: 910:           jumpCount = bmpPtr[2] + (bmpPtr[3]*biWidth);
 16846  000BA8  0E03               	movlw	3
 16847  000BAA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 16848  000BAC  6E2D               	movwf	??_LCD_Bitmap^0,c
 16849  000BAE  0E00               	movlw	0
 16850  000BB0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 16851  000BB2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16852  000BB4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16853  000BB8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16854  000BBC                     	if	0	;tblptru may be non-zero
 16855  000BBC                     	endif
 16856  000BBC                     	if	0	;tblptru may be non-zero
 16857  000BBC                     	endif
 16858  000BBC  0008               	tblrd		*
 16859  000BBE  50F5               	movf	tablat,w,c
 16860  000BC0  6E1A               	movwf	___wmul@multiplier^0,c
 16861  000BC2  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 16862  000BC4  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 16863  000BC8  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 16864  000BCC  EC0F  F02F         	call	___wmul	;wreg free
 16865  000BD0  0E02               	movlw	2
 16866  000BD2  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 16867  000BD4  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 16868  000BD6  0E00               	movlw	0
 16869  000BD8  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 16870  000BDA  6E30               	movwf	(??_LCD_Bitmap+3)^0,c
 16871  000BDC  C02F  FFF6         	movff	??_LCD_Bitmap+2,tblptrl
 16872  000BE0  C030  FFF7         	movff	??_LCD_Bitmap+3,tblptrh
 16873  000BE4                     	if	0	;tblptru may be non-zero
 16874  000BE4                     	endif
 16875  000BE4                     	if	0	;tblptru may be non-zero
 16876  000BE4                     	endif
 16877  000BE4  0008               	tblrd		*
 16878  000BE6  50F5               	movf	tablat,w,c
 16879  000BE8  241A               	addwf	?___wmul^0,w,c
 16880  000BEA  0100               	movlb	0	; () banked
 16881  000BEC  6F65               	movwf	LCD_Bitmap@jumpCount& (0+255),b
 16882  000BEE  0E00               	movlw	0
 16883  000BF0  201B               	addwfc	(?___wmul+1)^0,w,c
 16884  000BF2  6F66               	movwf	(LCD_Bitmap@jumpCount+1)& (0+255),b
 16885  000BF4                     
 16886                           ; BSR set to: 0
 16887                           ;libraries/lcd_highlevel.c: 911:           for(i=0;i<jumpCount;i++)
 16888  000BF4  0E00               	movlw	0
 16889  000BF6  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 16890  000BF8  0E00               	movlw	0
 16891  000BFA  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 16892  000BFC  EF0C  F006         	goto	l8918
 16893  000C00                     l8902:
 16894                           
 16895                           ; BSR set to: 0
 16896                           ;libraries/lcd_highlevel.c: 912:           {;libraries/lcd_highlevel.c: 913:            
      +                           curXPos++;
 16897  000C00  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 16898  000C02  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 16899  000C04                     
 16900                           ; BSR set to: 0
 16901                           ;libraries/lcd_highlevel.c: 914:             PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 
      +                          1;;
 16902  000C04  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 16903  000C06  6E80               	movwf	128,c	;volatile
 16904  000C08                     
 16905                           ; BSR set to: 0
 16906  000C08  968B               	bcf	3979,3,c	;volatile
 16907  000C0A                     
 16908                           ; BSR set to: 0
 16909  000C0A  868B               	bsf	3979,3,c	;volatile
 16910  000C0C                     
 16911                           ; BSR set to: 0
 16912                           ;libraries/lcd_highlevel.c: 915:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 16913  000C0C  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 16914  000C10                     
 16915                           ; BSR set to: 0
 16916  000C10  968B               	bcf	3979,3,c	;volatile
 16917  000C12                     
 16918                           ; BSR set to: 0
 16919  000C12  868B               	bsf	3979,3,c	;volatile
 16920  000C14                     
 16921                           ; BSR set to: 0
 16922                           ;libraries/lcd_highlevel.c: 916:           }
 16923  000C14  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 16924  000C16  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 16925  000C18                     l8918:
 16926                           
 16927                           ; BSR set to: 0
 16928  000C18  5165               	movf	LCD_Bitmap@jumpCount& (0+255),w,b
 16929  000C1A  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 16930  000C1C  5166               	movf	(LCD_Bitmap@jumpCount+1)& (0+255),w,b
 16931  000C1E  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 16932  000C20  A0D8               	btfss	status,0,c
 16933  000C22  EF15  F006         	goto	u6081
 16934  000C26  EF17  F006         	goto	u6080
 16935  000C2A                     u6081:
 16936  000C2A  EF00  F006         	goto	l8902
 16937  000C2E                     u6080:
 16938  000C2E                     
 16939                           ; BSR set to: 0
 16940                           ;libraries/lcd_highlevel.c: 917:           curYPos = curYPos + (jumpCount / biWidth);
 16941  000C2E  C065  F020         	movff	LCD_Bitmap@jumpCount,___lwdiv@dividend
 16942  000C32  C066  F021         	movff	LCD_Bitmap@jumpCount+1,___lwdiv@dividend+1
 16943  000C36  C076  F022         	movff	LCD_Bitmap@biWidth,___lwdiv@divisor
 16944  000C3A  C077  F023         	movff	LCD_Bitmap@biWidth+1,___lwdiv@divisor+1
 16945  000C3E  EC93  F02B         	call	___lwdiv	;wreg free
 16946  000C42  0100               	movlb	0	; () banked
 16947  000C44  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 16948  000C46  2420               	addwf	?___lwdiv^0,w,c
 16949  000C48  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 16950  000C4A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 16951  000C4C  2021               	addwfc	(?___lwdiv+1)^0,w,c
 16952  000C4E  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 16953                           
 16954                           ;libraries/lcd_highlevel.c: 918:           curXPos = curXPos % biWidth;
 16955  000C50  C06F  F012         	movff	LCD_Bitmap@curXPos,___lwmod@dividend
 16956  000C54  C070  F013         	movff	LCD_Bitmap@curXPos+1,___lwmod@dividend+1
 16957  000C58  C076  F014         	movff	LCD_Bitmap@biWidth,___lwmod@divisor
 16958  000C5C  C077  F015         	movff	LCD_Bitmap@biWidth+1,___lwmod@divisor+1
 16959  000C60  ECA1  F02C         	call	___lwmod	;wreg free
 16960  000C64  C012  F06F         	movff	?___lwmod,LCD_Bitmap@curXPos
 16961  000C68  C013  F070         	movff	?___lwmod+1,LCD_Bitmap@curXPos+1
 16962  000C6C                     
 16963                           ;libraries/lcd_highlevel.c: 919:           bmpPtr += 4;
 16964  000C6C  0E04               	movlw	4
 16965  000C6E  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 16966  000C70  0E00               	movlw	0
 16967  000C72  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 16968                           
 16969                           ;libraries/lcd_highlevel.c: 920:         break;
 16970  000C74  EF16  F007         	goto	l8984
 16971  000C78                     l8924:
 16972                           
 16973                           ; BSR set to: 0
 16974                           ;libraries/lcd_highlevel.c: 922:           pixelCount = bmpPtr[1];
 16975  000C78  0E01               	movlw	1
 16976  000C7A  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 16977  000C7C  6E2D               	movwf	??_LCD_Bitmap^0,c
 16978  000C7E  0E00               	movlw	0
 16979  000C80  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 16980  000C82  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 16981  000C84  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 16982  000C88  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 16983  000C8C                     	if	0	;tblptru may be non-zero
 16984  000C8C                     	endif
 16985  000C8C                     	if	0	;tblptru may be non-zero
 16986  000C8C                     	endif
 16987  000C8C  0008               	tblrd		*
 16988  000C8E  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 16989  000C92                     
 16990                           ; BSR set to: 0
 16991                           ;libraries/lcd_highlevel.c: 923:           for(i=0;i < pixelCount;i++)
 16992  000C92  0E00               	movlw	0
 16993  000C94  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 16994  000C96  0E00               	movlw	0
 16995  000C98  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 16996  000C9A  EF7D  F006         	goto	l8946
 16997  000C9E                     l8928:
 16998                           
 16999                           ; BSR set to: 0
 17000                           ;libraries/lcd_highlevel.c: 924:           {;libraries/lcd_highlevel.c: 925:            
      +                           color = RGB2LCD(colorTablePtr+(bmpPtr[2+i]*4));
 17001  000C9E  517A               	movf	LCD_Bitmap@i& (0+255),w,b
 17002  000CA0  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 17003  000CA2  6E2D               	movwf	??_LCD_Bitmap^0,c
 17004  000CA4  517B               	movf	(LCD_Bitmap@i+1)& (0+255),w,b
 17005  000CA6  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 17006  000CA8  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 17007  000CAA  0E02               	movlw	2
 17008  000CAC  262D               	addwf	??_LCD_Bitmap^0,f,c
 17009  000CAE  0E00               	movlw	0
 17010  000CB0  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 17011  000CB2  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 17012  000CB6  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 17013  000CBA                     	if	0	;tblptru may be non-zero
 17014  000CBA                     	endif
 17015  000CBA                     	if	0	;tblptru may be non-zero
 17016  000CBA                     	endif
 17017  000CBA  0008               	tblrd		*
 17018  000CBC  50F5               	movf	tablat,w,c
 17019  000CBE  0D04               	mullw	4
 17020  000CC0  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 17021  000CC4  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 17022  000CC8  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 17023  000CCA  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 17024  000CCC  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 17025  000CCE  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 17026  000CD0  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 17027  000CD2  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 17028  000CD4  EC64  F027         	call	_RGB2LCD	;wreg free
 17029  000CD8  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 17030  000CDC  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 17031  000CE0                     
 17032                           ;libraries/lcd_highlevel.c: 926:             curXPos++;
 17033  000CE0  0100               	movlb	0	; () banked
 17034  000CE2  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 17035  000CE4  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 17036  000CE6                     
 17037                           ; BSR set to: 0
 17038                           ;libraries/lcd_highlevel.c: 927:             PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 17039  000CE6  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 17040  000CE8  6E80               	movwf	128,c	;volatile
 17041  000CEA                     
 17042                           ; BSR set to: 0
 17043  000CEA  968B               	bcf	3979,3,c	;volatile
 17044  000CEC                     
 17045                           ; BSR set to: 0
 17046  000CEC  868B               	bsf	3979,3,c	;volatile
 17047  000CEE                     
 17048                           ; BSR set to: 0
 17049                           ;libraries/lcd_highlevel.c: 928:             PORTA = color; LATC3 = 0; LATC3 = 1;;
 17050  000CEE  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 17051  000CF2                     
 17052                           ; BSR set to: 0
 17053  000CF2  968B               	bcf	3979,3,c	;volatile
 17054  000CF4                     
 17055                           ; BSR set to: 0
 17056  000CF4  868B               	bsf	3979,3,c	;volatile
 17057  000CF6                     
 17058                           ; BSR set to: 0
 17059                           ;libraries/lcd_highlevel.c: 929:           }
 17060  000CF6  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 17061  000CF8  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 17062  000CFA                     l8946:
 17063                           
 17064                           ; BSR set to: 0
 17065  000CFA  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 17066  000CFC  6E2D               	movwf	??_LCD_Bitmap^0,c
 17067  000CFE  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 17068  000D00  502D               	movf	??_LCD_Bitmap^0,w,c
 17069  000D02  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 17070  000D04  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 17071  000D06  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 17072  000D08  A0D8               	btfss	status,0,c
 17073  000D0A  EF89  F006         	goto	u6091
 17074  000D0E  EF8B  F006         	goto	u6090
 17075  000D12                     u6091:
 17076  000D12  EF4F  F006         	goto	l8928
 17077  000D16                     u6090:
 17078  000D16                     
 17079                           ; BSR set to: 0
 17080                           ;libraries/lcd_highlevel.c: 930:           if(pixelCount < 255)
 17081  000D16  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 17082  000D18  B4D8               	btfsc	status,2,c
 17083  000D1A  EF91  F006         	goto	u6101
 17084  000D1E  EF93  F006         	goto	u6100
 17085  000D22                     u6101:
 17086  000D22  EFA3  F006         	goto	l8952
 17087  000D26                     u6100:
 17088  000D26                     
 17089                           ; BSR set to: 0
 17090                           ;libraries/lcd_highlevel.c: 931:           {;libraries/lcd_highlevel.c: 932:            
      +                           pixelCount = (pixelCount+1) & 0xFE;
 17091  000D26  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 17092  000D28  0BFE               	andlw	254
 17093  000D2A  6F75               	movwf	LCD_Bitmap@pixelCount& (0+255),b
 17094                           
 17095                           ;libraries/lcd_highlevel.c: 933:             bmpPtr+=pixelCount+2;
 17096  000D2C  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 17097  000D2E  6E2D               	movwf	??_LCD_Bitmap^0,c
 17098  000D30  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 17099  000D32  0E02               	movlw	2
 17100  000D34  262D               	addwf	??_LCD_Bitmap^0,f,c
 17101  000D36  0E00               	movlw	0
 17102  000D38  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 17103  000D3A  502D               	movf	??_LCD_Bitmap^0,w,c
 17104  000D3C  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 17105  000D3E  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 17106  000D40  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 17107                           
 17108                           ;libraries/lcd_highlevel.c: 934:           }
 17109  000D42  EF16  F007         	goto	l8984
 17110  000D46                     l8952:
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;libraries/lcd_highlevel.c: 936:           {;libraries/lcd_highlevel.c: 937:            
      +                             bmpPtr += 258;
 17114  000D46  0E02               	movlw	2
 17115  000D48  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 17116  000D4A  0E01               	movlw	1
 17117  000D4C  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 17118  000D4E  EF16  F007         	goto	l8984
 17119  000D52                     l8956:
 17120                           
 17121                           ; BSR set to: 0
 17122  000D52  0E01               	movlw	1
 17123  000D54  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 17124  000D56  6E2D               	movwf	??_LCD_Bitmap^0,c
 17125  000D58  0E00               	movlw	0
 17126  000D5A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 17127  000D5C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 17128  000D5E  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 17129  000D62  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 17130  000D66                     	if	0	;tblptru may be non-zero
 17131  000D66                     	endif
 17132  000D66                     	if	0	;tblptru may be non-zero
 17133  000D66                     	endif
 17134  000D66  0008               	tblrd		*
 17135  000D68  50F5               	movf	tablat,w,c
 17136  000D6A  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 17137  000D6C  6A30               	clrf	(??_LCD_Bitmap+3)^0,c
 17138                           
 17139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17140                           ; Switch size 1, requested type "simple"
 17141                           ; Number of cases is 1, Range of values is 0 to 0
 17142                           ; switch strategies available:
 17143                           ; Name         Instructions Cycles
 17144                           ; simple_byte            4     3 (average)
 17145                           ;	Chosen strategy is simple_byte
 17146  000D6E  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 17147  000D70  0A00               	xorlw	0	; case 0
 17148  000D72  B4D8               	btfsc	status,2,c
 17149  000D74  EFBE  F006         	goto	l10490
 17150  000D78  EF3C  F006         	goto	l8924
 17151  000D7C                     l10490:
 17152                           
 17153                           ; BSR set to: 0
 17154                           ; Switch size 1, requested type "simple"
 17155                           ; Number of cases is 3, Range of values is 0 to 2
 17156                           ; switch strategies available:
 17157                           ; Name         Instructions Cycles
 17158                           ; simple_byte           10     6 (average)
 17159                           ;	Chosen strategy is simple_byte
 17160  000D7C  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 17161  000D7E  0A00               	xorlw	0	; case 0
 17162  000D80  B4D8               	btfsc	status,2,c
 17163  000D82  EF54  F005         	goto	l8836
 17164  000D86  0A01               	xorlw	1	; case 1
 17165  000D88  B4D8               	btfsc	status,2,c
 17166  000D8A  EF81  F005         	goto	l8860
 17167  000D8E  0A03               	xorlw	3	; case 2
 17168  000D90  B4D8               	btfsc	status,2,c
 17169  000D92  EFD4  F005         	goto	l8898
 17170  000D96  EF3C  F006         	goto	l8924
 17171  000D9A                     l8958:
 17172                           
 17173                           ; BSR set to: 0
 17174                           ;libraries/lcd_highlevel.c: 943:     {;libraries/lcd_highlevel.c: 944:       pixelCount 
      +                          = bmpPtr[0];
 17175  000D9A  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 17176  000D9E  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 17177  000DA2                     	if	0	;tblptru may be non-zero
 17178  000DA2                     	endif
 17179  000DA2                     	if	0	;tblptru may be non-zero
 17180  000DA2                     	endif
 17181  000DA2  0008               	tblrd		*
 17182  000DA4  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 17183  000DA8                     
 17184                           ; BSR set to: 0
 17185                           ;libraries/lcd_highlevel.c: 945:       color = RGB2LCD(colorTablePtr+(bmpPtr[1]*4));
 17186  000DA8  0E01               	movlw	1
 17187  000DAA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 17188  000DAC  6E2D               	movwf	??_LCD_Bitmap^0,c
 17189  000DAE  0E00               	movlw	0
 17190  000DB0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 17191  000DB2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 17192  000DB4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 17193  000DB8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 17194  000DBC                     	if	0	;tblptru may be non-zero
 17195  000DBC                     	endif
 17196  000DBC                     	if	0	;tblptru may be non-zero
 17197  000DBC                     	endif
 17198  000DBC  0008               	tblrd		*
 17199  000DBE  50F5               	movf	tablat,w,c
 17200  000DC0  0D04               	mullw	4
 17201  000DC2  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 17202  000DC6  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 17203  000DCA  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 17204  000DCC  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 17205  000DCE  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 17206  000DD0  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 17207  000DD2  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 17208  000DD4  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 17209  000DD6  EC64  F027         	call	_RGB2LCD	;wreg free
 17210  000DDA  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 17211  000DDE  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 17212  000DE2                     
 17213                           ;libraries/lcd_highlevel.c: 946:       for(i=0;i < pixelCount;i++)
 17214  000DE2  0E00               	movlw	0
 17215  000DE4  0100               	movlb	0	; () banked
 17216  000DE6  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 17217  000DE8  0E00               	movlw	0
 17218  000DEA  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 17219  000DEC  EF04  F007         	goto	l8980
 17220  000DF0                     l8964:
 17221                           
 17222                           ; BSR set to: 0
 17223                           ;libraries/lcd_highlevel.c: 947:       {;libraries/lcd_highlevel.c: 948:         curXPos
      +                          ++;
 17224  000DF0  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 17225  000DF2  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 17226  000DF4                     
 17227                           ; BSR set to: 0
 17228                           ;libraries/lcd_highlevel.c: 949:         PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 17229  000DF4  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 17230  000DF6  6E80               	movwf	128,c	;volatile
 17231  000DF8                     
 17232                           ; BSR set to: 0
 17233  000DF8  968B               	bcf	3979,3,c	;volatile
 17234  000DFA                     
 17235                           ; BSR set to: 0
 17236  000DFA  868B               	bsf	3979,3,c	;volatile
 17237  000DFC                     
 17238                           ; BSR set to: 0
 17239                           ;libraries/lcd_highlevel.c: 950:         PORTA = color; LATC3 = 0; LATC3 = 1;;
 17240  000DFC  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 17241  000E00                     
 17242                           ; BSR set to: 0
 17243  000E00  968B               	bcf	3979,3,c	;volatile
 17244  000E02                     
 17245                           ; BSR set to: 0
 17246  000E02  868B               	bsf	3979,3,c	;volatile
 17247  000E04                     
 17248                           ; BSR set to: 0
 17249                           ;libraries/lcd_highlevel.c: 951:       }
 17250  000E04  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 17251  000E06  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 17252  000E08                     l8980:
 17253                           
 17254                           ; BSR set to: 0
 17255  000E08  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 17256  000E0A  6E2D               	movwf	??_LCD_Bitmap^0,c
 17257  000E0C  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 17258  000E0E  502D               	movf	??_LCD_Bitmap^0,w,c
 17259  000E10  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 17260  000E12  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 17261  000E14  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 17262  000E16  A0D8               	btfss	status,0,c
 17263  000E18  EF10  F007         	goto	u6111
 17264  000E1C  EF12  F007         	goto	u6110
 17265  000E20                     u6111:
 17266  000E20  EFF8  F006         	goto	l8964
 17267  000E24                     u6110:
 17268  000E24                     
 17269                           ; BSR set to: 0
 17270                           ;libraries/lcd_highlevel.c: 952:       bmpPtr+=2;
 17271  000E24  0E02               	movlw	2
 17272  000E26  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 17273  000E28  0E00               	movlw	0
 17274  000E2A  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 17275  000E2C                     l8984:
 17276                           
 17277                           ;libraries/lcd_highlevel.c: 954:   }while(endOfImage == 0);
 17278  000E2C  0100               	movlb	0	; () banked
 17279  000E2E  5164               	movf	LCD_Bitmap@endOfImage& (0+255),w,b
 17280  000E30  B4D8               	btfsc	status,2,c
 17281  000E32  EF1D  F007         	goto	u6121
 17282  000E36  EF1F  F007         	goto	u6120
 17283  000E3A                     u6121:
 17284  000E3A  EF44  F005         	goto	l8832
 17285  000E3E                     u6120:
 17286  000E3E                     
 17287                           ; BSR set to: 0
 17288                           ;libraries/lcd_highlevel.c: 955:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 17289  000E3E  0E36               	movlw	54
 17290  000E40  6E80               	movwf	128,c	;volatile
 17291  000E42                     
 17292                           ; BSR set to: 0
 17293  000E42  988B               	bcf	3979,4,c	;volatile
 17294  000E44                     
 17295                           ; BSR set to: 0
 17296  000E44  968B               	bcf	3979,3,c	;volatile
 17297  000E46                     
 17298                           ; BSR set to: 0
 17299  000E46  868B               	bsf	3979,3,c	;volatile
 17300  000E48                     
 17301                           ; BSR set to: 0
 17302  000E48  888B               	bsf	3979,4,c	;volatile
 17303                           
 17304                           ;libraries/lcd_highlevel.c: 957:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
 17305  000E4A  0E00               	movlw	0
 17306  000E4C  6E80               	movwf	128,c	;volatile
 17307  000E4E                     
 17308                           ; BSR set to: 0
 17309  000E4E  968B               	bcf	3979,3,c	;volatile
 17310  000E50                     
 17311                           ; BSR set to: 0
 17312  000E50  868B               	bsf	3979,3,c	;volatile
 17313  000E52                     l313:
 17314                           
 17315                           ; BSR set to: 0
 17316  000E52  0012               	return		;funcret
 17317  000E54                     __end_of_LCD_Bitmap:
 17318                           	callstack 0
 17319                           
 17320 ;; *************** function ___wmul *****************
 17321 ;; Defined at:
 17322 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 17323 ;; Parameters:    Size  Location     Type
 17324 ;;  multiplier      2   25[COMRAM] unsigned int 
 17325 ;;  multiplicand    2   27[COMRAM] unsigned int 
 17326 ;; Auto vars:     Size  Location     Type
 17327 ;;  product         2   29[COMRAM] unsigned int 
 17328 ;; Return value:  Size  Location     Type
 17329 ;;                  2   25[COMRAM] unsigned int 
 17330 ;; Registers used:
 17331 ;;		wreg, status,2, status,0, prodl, prodh
 17332 ;; Tracked objects:
 17333 ;;		On entry : 0/0
 17334 ;;		On exit  : 0/0
 17335 ;;		Unchanged: 0/0
 17336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17337 ;;      Params:         4       0       0       0       0       0       0
 17338 ;;      Locals:         2       0       0       0       0       0       0
 17339 ;;      Temps:          0       0       0       0       0       0       0
 17340 ;;      Totals:         6       0       0       0       0       0       0
 17341 ;;Total ram usage:        6 bytes
 17342 ;; Hardware stack levels used: 1
 17343 ;; Hardware stack levels required when called: 4
 17344 ;; This function calls:
 17345 ;;		Nothing
 17346 ;; This function is called by:
 17347 ;;		_LCD_SliderUpdate
 17348 ;;		_LCD_DrawText
 17349 ;;		_LCD_Bitmap
 17350 ;;		_XF_init
 17351 ;; This function uses a non-reentrant model
 17352 ;;
 17353                           
 17354                           	psect	text67
 17355  005E1E                     __ptext67:
 17356                           	callstack 0
 17357  005E1E                     ___wmul:
 17358                           	callstack 21
 17359  005E1E  501A               	movf	___wmul@multiplier^0,w,c
 17360  005E20  021C               	mulwf	___wmul@multiplicand^0,c
 17361  005E22  CFF3 F01E          	movff	prodl,___wmul@product
 17362  005E26  CFF4 F01F          	movff	prodh,___wmul@product+1
 17363  005E2A  501A               	movf	___wmul@multiplier^0,w,c
 17364  005E2C  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 17365  005E2E  50F3               	movf	243,w,c
 17366  005E30  261F               	addwf	(___wmul@product+1)^0,f,c
 17367  005E32  501B               	movf	(___wmul@multiplier+1)^0,w,c
 17368  005E34  021C               	mulwf	___wmul@multiplicand^0,c
 17369  005E36  50F3               	movf	243,w,c
 17370  005E38  261F               	addwf	(___wmul@product+1)^0,f,c
 17371  005E3A  C01E  F01A         	movff	___wmul@product,?___wmul
 17372  005E3E  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 17373  005E42  0012               	return		;funcret
 17374  005E44                     __end_of___wmul:
 17375                           	callstack 0
 17376                           
 17377 ;; *************** function ___lwmod *****************
 17378 ;; Defined at:
 17379 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 17380 ;; Parameters:    Size  Location     Type
 17381 ;;  dividend        2   17[COMRAM] unsigned int 
 17382 ;;  divisor         2   19[COMRAM] unsigned int 
 17383 ;; Auto vars:     Size  Location     Type
 17384 ;;  counter         1   21[COMRAM] unsigned char 
 17385 ;; Return value:  Size  Location     Type
 17386 ;;                  2   17[COMRAM] unsigned int 
 17387 ;; Registers used:
 17388 ;;		wreg, status,2, status,0
 17389 ;; Tracked objects:
 17390 ;;		On entry : 0/0
 17391 ;;		On exit  : 0/0
 17392 ;;		Unchanged: 0/0
 17393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17394 ;;      Params:         4       0       0       0       0       0       0
 17395 ;;      Locals:         1       0       0       0       0       0       0
 17396 ;;      Temps:          0       0       0       0       0       0       0
 17397 ;;      Totals:         5       0       0       0       0       0       0
 17398 ;;Total ram usage:        5 bytes
 17399 ;; Hardware stack levels used: 1
 17400 ;; Hardware stack levels required when called: 4
 17401 ;; This function calls:
 17402 ;;		Nothing
 17403 ;; This function is called by:
 17404 ;;		_LCD_Bitmap
 17405 ;; This function uses a non-reentrant model
 17406 ;;
 17407                           
 17408                           	psect	text68
 17409  005942                     __ptext68:
 17410                           	callstack 0
 17411  005942                     ___lwmod:
 17412                           	callstack 19
 17413  005942  5014               	movf	___lwmod@divisor^0,w,c
 17414  005944  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
 17415  005946  B4D8               	btfsc	status,2,c
 17416  005948  EFA8  F02C         	goto	u5761
 17417  00594C  EFAA  F02C         	goto	u5760
 17418  005950                     u5761:
 17419  005950  EFCE  F02C         	goto	l1283
 17420  005954                     u5760:
 17421  005954  0E01               	movlw	1
 17422  005956  6E16               	movwf	___lwmod@counter^0,c
 17423  005958  EFB2  F02C         	goto	l8432
 17424  00595C                     l8430:
 17425  00595C  90D8               	bcf	status,0,c
 17426  00595E  3614               	rlcf	___lwmod@divisor^0,f,c
 17427  005960  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
 17428  005962  2A16               	incf	___lwmod@counter^0,f,c
 17429  005964                     l8432:
 17430  005964  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
 17431  005966  EFB7  F02C         	goto	u5771
 17432  00596A  EFB9  F02C         	goto	u5770
 17433  00596E                     u5771:
 17434  00596E  EFAE  F02C         	goto	l8430
 17435  005972                     u5770:
 17436  005972                     l8434:
 17437  005972  5014               	movf	___lwmod@divisor^0,w,c
 17438  005974  5C12               	subwf	___lwmod@dividend^0,w,c
 17439  005976  5015               	movf	(___lwmod@divisor+1)^0,w,c
 17440  005978  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
 17441  00597A  A0D8               	btfss	status,0,c
 17442  00597C  EFC2  F02C         	goto	u5781
 17443  005980  EFC4  F02C         	goto	u5780
 17444  005984                     u5781:
 17445  005984  EFC8  F02C         	goto	l8438
 17446  005988                     u5780:
 17447  005988  5014               	movf	___lwmod@divisor^0,w,c
 17448  00598A  5E12               	subwf	___lwmod@dividend^0,f,c
 17449  00598C  5015               	movf	(___lwmod@divisor+1)^0,w,c
 17450  00598E  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
 17451  005990                     l8438:
 17452  005990  90D8               	bcf	status,0,c
 17453  005992  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
 17454  005994  3214               	rrcf	___lwmod@divisor^0,f,c
 17455  005996  2E16               	decfsz	___lwmod@counter^0,f,c
 17456  005998  EFB9  F02C         	goto	l8434
 17457  00599C                     l1283:
 17458  00599C  C012  F012         	movff	___lwmod@dividend,?___lwmod
 17459  0059A0  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
 17460  0059A4  0012               	return		;funcret
 17461  0059A6                     __end_of___lwmod:
 17462                           	callstack 0
 17463                           
 17464 ;; *************** function ___lwdiv *****************
 17465 ;; Defined at:
 17466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 17467 ;; Parameters:    Size  Location     Type
 17468 ;;  dividend        2   31[COMRAM] unsigned int 
 17469 ;;  divisor         2   33[COMRAM] unsigned int 
 17470 ;; Auto vars:     Size  Location     Type
 17471 ;;  quotient        2   36[COMRAM] unsigned int 
 17472 ;;  counter         1   35[COMRAM] unsigned char 
 17473 ;; Return value:  Size  Location     Type
 17474 ;;                  2   31[COMRAM] unsigned int 
 17475 ;; Registers used:
 17476 ;;		wreg, status,2, status,0
 17477 ;; Tracked objects:
 17478 ;;		On entry : 0/0
 17479 ;;		On exit  : 0/0
 17480 ;;		Unchanged: 0/0
 17481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17482 ;;      Params:         4       0       0       0       0       0       0
 17483 ;;      Locals:         3       0       0       0       0       0       0
 17484 ;;      Temps:          0       0       0       0       0       0       0
 17485 ;;      Totals:         7       0       0       0       0       0       0
 17486 ;;Total ram usage:        7 bytes
 17487 ;; Hardware stack levels used: 1
 17488 ;; Hardware stack levels required when called: 4
 17489 ;; This function calls:
 17490 ;;		Nothing
 17491 ;; This function is called by:
 17492 ;;		_LCD_SliderUpdate
 17493 ;;		_LCD_Bitmap
 17494 ;; This function uses a non-reentrant model
 17495 ;;
 17496                           
 17497                           	psect	text69
 17498  005726                     __ptext69:
 17499                           	callstack 0
 17500  005726                     ___lwdiv:
 17501                           	callstack 21
 17502  005726  0E00               	movlw	0
 17503  005728  6E26               	movwf	(___lwdiv@quotient+1)^0,c
 17504  00572A  0E00               	movlw	0
 17505  00572C  6E25               	movwf	___lwdiv@quotient^0,c
 17506  00572E  5022               	movf	___lwdiv@divisor^0,w,c
 17507  005730  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
 17508  005732  B4D8               	btfsc	status,2,c
 17509  005734  EF9E  F02B         	goto	u5731
 17510  005738  EFA0  F02B         	goto	u5730
 17511  00573C                     u5731:
 17512  00573C  EFC8  F02B         	goto	l1273
 17513  005740                     u5730:
 17514  005740  0E01               	movlw	1
 17515  005742  6E24               	movwf	___lwdiv@counter^0,c
 17516  005744  EFA8  F02B         	goto	l8412
 17517  005748                     l8410:
 17518  005748  90D8               	bcf	status,0,c
 17519  00574A  3622               	rlcf	___lwdiv@divisor^0,f,c
 17520  00574C  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
 17521  00574E  2A24               	incf	___lwdiv@counter^0,f,c
 17522  005750                     l8412:
 17523  005750  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
 17524  005752  EFAD  F02B         	goto	u5741
 17525  005756  EFAF  F02B         	goto	u5740
 17526  00575A                     u5741:
 17527  00575A  EFA4  F02B         	goto	l8410
 17528  00575E                     u5740:
 17529  00575E                     l8414:
 17530  00575E  90D8               	bcf	status,0,c
 17531  005760  3625               	rlcf	___lwdiv@quotient^0,f,c
 17532  005762  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
 17533  005764  5022               	movf	___lwdiv@divisor^0,w,c
 17534  005766  5C20               	subwf	___lwdiv@dividend^0,w,c
 17535  005768  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 17536  00576A  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
 17537  00576C  A0D8               	btfss	status,0,c
 17538  00576E  EFBB  F02B         	goto	u5751
 17539  005772  EFBD  F02B         	goto	u5750
 17540  005776                     u5751:
 17541  005776  EFC2  F02B         	goto	l8422
 17542  00577A                     u5750:
 17543  00577A  5022               	movf	___lwdiv@divisor^0,w,c
 17544  00577C  5E20               	subwf	___lwdiv@dividend^0,f,c
 17545  00577E  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 17546  005780  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
 17547  005782  8025               	bsf	___lwdiv@quotient^0,0,c
 17548  005784                     l8422:
 17549  005784  90D8               	bcf	status,0,c
 17550  005786  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
 17551  005788  3222               	rrcf	___lwdiv@divisor^0,f,c
 17552  00578A  2E24               	decfsz	___lwdiv@counter^0,f,c
 17553  00578C  EFAF  F02B         	goto	l8414
 17554  005790                     l1273:
 17555  005790  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 17556  005794  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17557  005798  0012               	return		;funcret
 17558  00579A                     __end_of___lwdiv:
 17559                           	callstack 0
 17560                           
 17561 ;; *************** function _RGB2LCD *****************
 17562 ;; Defined at:
 17563 ;;		line 799 in file "libraries/lcd_highlevel.c"
 17564 ;; Parameters:    Size  Location     Type
 17565 ;;  colorTableEn    2   17[COMRAM] PTR unsigned char 
 17566 ;;		 -> STR_7(4), STR_6(4), STR_5(8), STR_4(9), 
 17567 ;;		 -> STR_3(9), STR_2(11), 
 17568 ;; Auto vars:     Size  Location     Type
 17569 ;;  color           2   29[COMRAM] unsigned short 
 17570 ;;  blue            2   27[COMRAM] unsigned short 
 17571 ;;  green           2   25[COMRAM] unsigned short 
 17572 ;;  red             2   23[COMRAM] unsigned short 
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  2   17[COMRAM] unsigned short 
 17575 ;; Registers used:
 17576 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17577 ;; Tracked objects:
 17578 ;;		On entry : 0/0
 17579 ;;		On exit  : 0/0
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17582 ;;      Params:         2       0       0       0       0       0       0
 17583 ;;      Locals:         8       0       0       0       0       0       0
 17584 ;;      Temps:          4       0       0       0       0       0       0
 17585 ;;      Totals:        14       0       0       0       0       0       0
 17586 ;;Total ram usage:       14 bytes
 17587 ;; Hardware stack levels used: 1
 17588 ;; Hardware stack levels required when called: 4
 17589 ;; This function calls:
 17590 ;;		Nothing
 17591 ;; This function is called by:
 17592 ;;		_LCD_Bitmap
 17593 ;; This function uses a non-reentrant model
 17594 ;;
 17595                           
 17596                           	psect	text70
 17597  004EC8                     __ptext70:
 17598                           	callstack 0
 17599  004EC8                     _RGB2LCD:
 17600                           	callstack 19
 17601  004EC8                     
 17602                           ;libraries/lcd_highlevel.c: 799: uint16_t RGB2LCD(uint8_t * colorTableEntry);libraries/l
      +                          cd_highlevel.c: 800: {;libraries/lcd_highlevel.c: 801:     uint16_t red,green,blue;;libr
      +                          aries/lcd_highlevel.c: 802:     uint16_t color;;libraries/lcd_highlevel.c: 804:     red 
      +                          = colorTableEntry[2] >> 3;
 17603  004EC8  0E02               	movlw	2
 17604  004ECA  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 17605  004ECC  6E14               	movwf	??_RGB2LCD^0,c
 17606  004ECE  0E00               	movlw	0
 17607  004ED0  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 17608  004ED2  6E15               	movwf	(??_RGB2LCD+1)^0,c
 17609  004ED4  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 17610  004ED8  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 17611  004EDC                     	if	0	;tblptru may be non-zero
 17612  004EDC                     	endif
 17613  004EDC                     	if	0	;tblptru may be non-zero
 17614  004EDC                     	endif
 17615  004EDC  0008               	tblrd		*
 17616  004EDE  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 17617  004EE2  90D8               	bcf	status,0,c
 17618  004EE4  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 17619  004EE6  90D8               	bcf	status,0,c
 17620  004EE8  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 17621  004EEA  90D8               	bcf	status,0,c
 17622  004EEC  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 17623  004EEE  5016               	movf	(??_RGB2LCD+2)^0,w,c
 17624  004EF0  6E18               	movwf	RGB2LCD@red^0,c
 17625  004EF2  6A19               	clrf	(RGB2LCD@red+1)^0,c
 17626                           
 17627                           ;libraries/lcd_highlevel.c: 805:     green = colorTableEntry[1] >> 2;
 17628  004EF4  0E01               	movlw	1
 17629  004EF6  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 17630  004EF8  6E14               	movwf	??_RGB2LCD^0,c
 17631  004EFA  0E00               	movlw	0
 17632  004EFC  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 17633  004EFE  6E15               	movwf	(??_RGB2LCD+1)^0,c
 17634  004F00  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 17635  004F04  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 17636  004F08                     	if	0	;tblptru may be non-zero
 17637  004F08                     	endif
 17638  004F08                     	if	0	;tblptru may be non-zero
 17639  004F08                     	endif
 17640  004F08  0008               	tblrd		*
 17641  004F0A  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 17642  004F0E  90D8               	bcf	status,0,c
 17643  004F10  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 17644  004F12  90D8               	bcf	status,0,c
 17645  004F14  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 17646  004F16  5016               	movf	(??_RGB2LCD+2)^0,w,c
 17647  004F18  6E1A               	movwf	RGB2LCD@green^0,c
 17648  004F1A  6A1B               	clrf	(RGB2LCD@green+1)^0,c
 17649                           
 17650                           ;libraries/lcd_highlevel.c: 806:     blue = colorTableEntry[0] >> 3;
 17651  004F1C  C012  FFF6         	movff	RGB2LCD@colorTableEntry,tblptrl
 17652  004F20  C013  FFF7         	movff	RGB2LCD@colorTableEntry+1,tblptrh
 17653  004F24                     	if	0	;tblptru may be non-zero
 17654  004F24                     	endif
 17655  004F24                     	if	0	;tblptru may be non-zero
 17656  004F24                     	endif
 17657  004F24  0008               	tblrd		*
 17658  004F26  CFF5 F014          	movff	tablat,??_RGB2LCD
 17659  004F2A  90D8               	bcf	status,0,c
 17660  004F2C  3214               	rrcf	??_RGB2LCD^0,f,c
 17661  004F2E  90D8               	bcf	status,0,c
 17662  004F30  3214               	rrcf	??_RGB2LCD^0,f,c
 17663  004F32  90D8               	bcf	status,0,c
 17664  004F34  3214               	rrcf	??_RGB2LCD^0,f,c
 17665  004F36  5014               	movf	??_RGB2LCD^0,w,c
 17666  004F38  6E1C               	movwf	RGB2LCD@blue^0,c
 17667  004F3A  6A1D               	clrf	(RGB2LCD@blue+1)^0,c
 17668  004F3C                     
 17669                           ;libraries/lcd_highlevel.c: 807:     color = (red << 11) | (green << 5) | (blue << 0);
 17670  004F3C  C01A  F014         	movff	RGB2LCD@green,??_RGB2LCD
 17671  004F40  C01B  F015         	movff	RGB2LCD@green+1,??_RGB2LCD+1
 17672  004F44  0E05               	movlw	5
 17673  004F46                     u5525:
 17674  004F46  90D8               	bcf	status,0,c
 17675  004F48  3614               	rlcf	??_RGB2LCD^0,f,c
 17676  004F4A  3615               	rlcf	(??_RGB2LCD+1)^0,f,c
 17677  004F4C  2EE8               	decfsz	wreg,f,c
 17678  004F4E  EFA3  F027         	goto	u5525
 17679  004F52  C018  F016         	movff	RGB2LCD@red,??_RGB2LCD+2
 17680  004F56  C019  F017         	movff	RGB2LCD@red+1,??_RGB2LCD+3
 17681  004F5A  0E0B               	movlw	11
 17682  004F5C                     u5535:
 17683  004F5C  90D8               	bcf	status,0,c
 17684  004F5E  3616               	rlcf	(??_RGB2LCD+2)^0,f,c
 17685  004F60  3617               	rlcf	(??_RGB2LCD+3)^0,f,c
 17686  004F62  2EE8               	decfsz	wreg,f,c
 17687  004F64  EFAE  F027         	goto	u5535
 17688  004F68  5014               	movf	??_RGB2LCD^0,w,c
 17689  004F6A  1216               	iorwf	(??_RGB2LCD+2)^0,f,c
 17690  004F6C  5015               	movf	(??_RGB2LCD+1)^0,w,c
 17691  004F6E  1217               	iorwf	(??_RGB2LCD+3)^0,f,c
 17692  004F70  501C               	movf	RGB2LCD@blue^0,w,c
 17693  004F72  1016               	iorwf	(??_RGB2LCD+2)^0,w,c
 17694  004F74  6E1E               	movwf	RGB2LCD@color^0,c
 17695  004F76  501D               	movf	(RGB2LCD@blue+1)^0,w,c
 17696  004F78  1017               	iorwf	(??_RGB2LCD+3)^0,w,c
 17697  004F7A  6E1F               	movwf	(RGB2LCD@color+1)^0,c
 17698  004F7C                     
 17699                           ;libraries/lcd_highlevel.c: 808:     return color;
 17700  004F7C  C01E  F012         	movff	RGB2LCD@color,?_RGB2LCD
 17701  004F80  C01F  F013         	movff	RGB2LCD@color+1,?_RGB2LCD+1
 17702  004F84  0012               	return		;funcret
 17703  004F86                     __end_of_RGB2LCD:
 17704                           	callstack 0
 17705                           
 17706 ;; *************** function _Ball_draw *****************
 17707 ;; Defined at:
 17708 ;;		line 17 in file "class/ball.c"
 17709 ;; Parameters:    Size  Location     Type
 17710 ;;  b               2   36[COMRAM] PTR struct Ball
 17711 ;;		 -> g1(201), 
 17712 ;; Auto vars:     Size  Location     Type
 17713 ;;		None
 17714 ;; Return value:  Size  Location     Type
 17715 ;;                  1    wreg      void 
 17716 ;; Registers used:
 17717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17718 ;; Tracked objects:
 17719 ;;		On entry : 0/0
 17720 ;;		On exit  : 0/0
 17721 ;;		Unchanged: 0/0
 17722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17723 ;;      Params:         2       0       0       0       0       0       0
 17724 ;;      Locals:         0       0       0       0       0       0       0
 17725 ;;      Temps:          8       0       0       0       0       0       0
 17726 ;;      Totals:        10       0       0       0       0       0       0
 17727 ;;Total ram usage:       10 bytes
 17728 ;; Hardware stack levels used: 1
 17729 ;; Hardware stack levels required when called: 5
 17730 ;; This function calls:
 17731 ;;		_LCD_DrawRect
 17732 ;; This function is called by:
 17733 ;;		_Ball_Update
 17734 ;;		_Menu_inGameDraw
 17735 ;; This function uses a non-reentrant model
 17736 ;;
 17737                           
 17738                           	psect	text71
 17739  005428                     __ptext71:
 17740                           	callstack 0
 17741  005428                     _Ball_draw:
 17742                           	callstack 20
 17743  005428                     
 17744                           ;class/ball.c: 17: void Ball_draw(struct Ball* b);class/ball.c: 18: {;class/ball.c: 19: 
      +                              LCD_DrawRect(b->x-8,b->y-8,b->x+8,b->y+8,1,0b1111100000000000);
 17745  005428  C025  FFD9         	movff	Ball_draw@b,fsr2l
 17746  00542C  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 17747  005430  CFDE F027          	movff	postinc2,??_Ball_draw
 17748  005434  CFDD F028          	movff	postdec2,??_Ball_draw+1
 17749  005438  0EF8               	movlw	248
 17750  00543A  2427               	addwf	??_Ball_draw^0,w,c
 17751  00543C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 17752  00543E  0EFF               	movlw	255
 17753  005440  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 17754  005442  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 17755  005444  EE20 F002          	lfsr	2,2
 17756  005448  5025               	movf	Ball_draw@b^0,w,c
 17757  00544A  26D9               	addwf	fsr2l,f,c
 17758  00544C  5026               	movf	(Ball_draw@b+1)^0,w,c
 17759  00544E  22DA               	addwfc	fsr2h,f,c
 17760  005450  CFDE F029          	movff	postinc2,??_Ball_draw+2
 17761  005454  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 17762  005458  0EF8               	movlw	248
 17763  00545A  2429               	addwf	(??_Ball_draw+2)^0,w,c
 17764  00545C  6E14               	movwf	LCD_DrawRect@posY1^0,c
 17765  00545E  0EFF               	movlw	255
 17766  005460  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 17767  005462  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 17768  005464  C025  FFD9         	movff	Ball_draw@b,fsr2l
 17769  005468  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 17770  00546C  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 17771  005470  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 17772  005474  0E08               	movlw	8
 17773  005476  242B               	addwf	(??_Ball_draw+4)^0,w,c
 17774  005478  6E16               	movwf	LCD_DrawRect@posX2^0,c
 17775  00547A  0E00               	movlw	0
 17776  00547C  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 17777  00547E  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 17778  005480  EE20 F002          	lfsr	2,2
 17779  005484  5025               	movf	Ball_draw@b^0,w,c
 17780  005486  26D9               	addwf	fsr2l,f,c
 17781  005488  5026               	movf	(Ball_draw@b+1)^0,w,c
 17782  00548A  22DA               	addwfc	fsr2h,f,c
 17783  00548C  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 17784  005490  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 17785  005494  0E08               	movlw	8
 17786  005496  242D               	addwf	(??_Ball_draw+6)^0,w,c
 17787  005498  6E18               	movwf	LCD_DrawRect@posY2^0,c
 17788  00549A  0E00               	movlw	0
 17789  00549C  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 17790  00549E  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 17791  0054A0  0E01               	movlw	1
 17792  0054A2  6E1A               	movwf	LCD_DrawRect@fill^0,c
 17793  0054A4  0EF8               	movlw	248
 17794  0054A6  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 17795  0054A8  0E00               	movlw	0
 17796  0054AA  6E1B               	movwf	LCD_DrawRect@color^0,c
 17797  0054AC  EC02  F014         	call	_LCD_DrawRect	;wreg free
 17798  0054B0  0012               	return		;funcret
 17799  0054B2                     __end_of_Ball_draw:
 17800                           	callstack 0
 17801                           
 17802 ;; *************** function _LCD_DrawRect *****************
 17803 ;; Defined at:
 17804 ;;		line 584 in file "libraries/lcd_highlevel.c"
 17805 ;; Parameters:    Size  Location     Type
 17806 ;;  posX1           2   17[COMRAM] unsigned short 
 17807 ;;  posY1           2   19[COMRAM] unsigned short 
 17808 ;;  posX2           2   21[COMRAM] unsigned short 
 17809 ;;  posY2           2   23[COMRAM] unsigned short 
 17810 ;;  fill            1   25[COMRAM] unsigned char 
 17811 ;;  color           2   26[COMRAM] unsigned short 
 17812 ;; Auto vars:     Size  Location     Type
 17813 ;;  i               2   34[COMRAM] unsigned short 
 17814 ;;  temp            2   30[COMRAM] unsigned short 
 17815 ;;  j               2   28[COMRAM] unsigned short 
 17816 ;;  colorL          1   33[COMRAM] unsigned char 
 17817 ;;  colorH          1   32[COMRAM] unsigned char 
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  1    wreg      void 
 17820 ;; Registers used:
 17821 ;;		wreg, status,2, status,0
 17822 ;; Tracked objects:
 17823 ;;		On entry : 0/0
 17824 ;;		On exit  : 0/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17827 ;;      Params:        11       0       0       0       0       0       0
 17828 ;;      Locals:         8       0       0       0       0       0       0
 17829 ;;      Temps:          0       0       0       0       0       0       0
 17830 ;;      Totals:        19       0       0       0       0       0       0
 17831 ;;Total ram usage:       19 bytes
 17832 ;; Hardware stack levels used: 1
 17833 ;; Hardware stack levels required when called: 4
 17834 ;; This function calls:
 17835 ;;		Nothing
 17836 ;; This function is called by:
 17837 ;;		_Ball_Update
 17838 ;;		_Ball_draw
 17839 ;;		_Paddle_addX
 17840 ;;		_Paddle_draw
 17841 ;;		_LCD_SliderUpdate
 17842 ;;		_LCD_SliderDraw
 17843 ;;		_LCD_ButtonUpdate
 17844 ;;		_LCD_ButtonDraw
 17845 ;;		_gameControllerSM
 17846 ;; This function uses a non-reentrant model
 17847 ;;
 17848                           
 17849                           	psect	text72
 17850  002804                     __ptext72:
 17851                           	callstack 0
 17852  002804                     _LCD_DrawRect:
 17853                           	callstack 21
 17854  002804                     
 17855                           ;libraries/lcd_highlevel.c: 584: void LCD_DrawRect(uint16_t posX1,uint16_t posY1, uint16
      +                          _t posX2,;libraries/lcd_highlevel.c: 585:   uint16_t posY2,uint8_t fill,uint16_t color);
      +                          libraries/lcd_highlevel.c: 586: {;libraries/lcd_highlevel.c: 587:   uint16_t i;;librarie
      +                          s/lcd_highlevel.c: 588:   uint16_t j;;libraries/lcd_highlevel.c: 589:   uint16_t temp;;l
      +                          ibraries/lcd_highlevel.c: 590:   uint8_t colorH,colorL;;libraries/lcd_highlevel.c: 592: 
      +                            colorH = color>>8;
 17856  002804  501C               	movf	(LCD_DrawRect@color+1)^0,w,c
 17857  002806  6E21               	movwf	LCD_DrawRect@colorH^0,c
 17858  002808                     
 17859                           ;libraries/lcd_highlevel.c: 593:   colorL = color;
 17860  002808  C01B  F022         	movff	LCD_DrawRect@color,LCD_DrawRect@colorL
 17861  00280C                     
 17862                           ;libraries/lcd_highlevel.c: 597:   if(posX1 > posX2)
 17863  00280C  5012               	movf	LCD_DrawRect@posX1^0,w,c
 17864  00280E  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 17865  002810  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 17866  002812  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 17867  002814  B0D8               	btfsc	status,0,c
 17868  002816  EF0F  F014         	goto	u5411
 17869  00281A  EF11  F014         	goto	u5410
 17870  00281E                     u5411:
 17871  00281E  EF1D  F014         	goto	l7854
 17872  002822                     u5410:
 17873  002822                     
 17874                           ;libraries/lcd_highlevel.c: 598:   {;libraries/lcd_highlevel.c: 599:     temp = posX1;
 17875  002822  C012  F01F         	movff	LCD_DrawRect@posX1,LCD_DrawRect@temp
 17876  002826  C013  F020         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@temp+1
 17877                           
 17878                           ;libraries/lcd_highlevel.c: 600:     posX1 = posX2;
 17879  00282A  C016  F012         	movff	LCD_DrawRect@posX2,LCD_DrawRect@posX1
 17880  00282E  C017  F013         	movff	LCD_DrawRect@posX2+1,LCD_DrawRect@posX1+1
 17881                           
 17882                           ;libraries/lcd_highlevel.c: 601:     posX2 = temp;
 17883  002832  C01F  F016         	movff	LCD_DrawRect@temp,LCD_DrawRect@posX2
 17884  002836  C020  F017         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posX2+1
 17885  00283A                     l7854:
 17886                           
 17887                           ;libraries/lcd_highlevel.c: 603:   if(posY1 > posY2)
 17888  00283A  5014               	movf	LCD_DrawRect@posY1^0,w,c
 17889  00283C  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 17890  00283E  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 17891  002840  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 17892  002842  B0D8               	btfsc	status,0,c
 17893  002844  EF26  F014         	goto	u5421
 17894  002848  EF28  F014         	goto	u5420
 17895  00284C                     u5421:
 17896  00284C  EF34  F014         	goto	l7858
 17897  002850                     u5420:
 17898  002850                     
 17899                           ;libraries/lcd_highlevel.c: 604:   {;libraries/lcd_highlevel.c: 605:     temp = posY1;
 17900  002850  C014  F01F         	movff	LCD_DrawRect@posY1,LCD_DrawRect@temp
 17901  002854  C015  F020         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@temp+1
 17902                           
 17903                           ;libraries/lcd_highlevel.c: 606:     posY1 = posY2;
 17904  002858  C018  F014         	movff	LCD_DrawRect@posY2,LCD_DrawRect@posY1
 17905  00285C  C019  F015         	movff	LCD_DrawRect@posY2+1,LCD_DrawRect@posY1+1
 17906                           
 17907                           ;libraries/lcd_highlevel.c: 607:     posY2 = temp;
 17908  002860  C01F  F018         	movff	LCD_DrawRect@temp,LCD_DrawRect@posY2
 17909  002864  C020  F019         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posY2+1
 17910  002868                     l7858:
 17911                           
 17912                           ;libraries/lcd_highlevel.c: 610:   if(fill==1)
 17913  002868  041A               	decf	LCD_DrawRect@fill^0,w,c
 17914  00286A  A4D8               	btfss	status,2,c
 17915  00286C  EF3A  F014         	goto	u5431
 17916  002870  EF3C  F014         	goto	u5430
 17917  002874                     u5431:
 17918  002874  EF9E  F014         	goto	l7934
 17919  002878                     u5430:
 17920  002878                     
 17921                           ;libraries/lcd_highlevel.c: 611:   {;libraries/lcd_highlevel.c: 613:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 17922  002878  0E2A               	movlw	42
 17923  00287A  6E80               	movwf	128,c	;volatile
 17924  00287C  988B               	bcf	3979,4,c	;volatile
 17925  00287E  968B               	bcf	3979,3,c	;volatile
 17926  002880  868B               	bsf	3979,3,c	;volatile
 17927  002882  888B               	bsf	3979,4,c	;volatile
 17928                           
 17929                           ;libraries/lcd_highlevel.c: 614:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 17930  002884  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 17931  002886  6E80               	movwf	128,c	;volatile
 17932  002888  968B               	bcf	3979,3,c	;volatile
 17933  00288A  868B               	bsf	3979,3,c	;volatile
 17934  00288C                     
 17935                           ;libraries/lcd_highlevel.c: 615:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 17936  00288C  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 17937  002890  968B               	bcf	3979,3,c	;volatile
 17938  002892  868B               	bsf	3979,3,c	;volatile
 17939                           
 17940                           ;libraries/lcd_highlevel.c: 616:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 17941  002894  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 17942  002896  6E80               	movwf	128,c	;volatile
 17943  002898  968B               	bcf	3979,3,c	;volatile
 17944  00289A  868B               	bsf	3979,3,c	;volatile
 17945  00289C                     
 17946                           ;libraries/lcd_highlevel.c: 617:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 17947  00289C  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 17948  0028A0  968B               	bcf	3979,3,c	;volatile
 17949  0028A2  868B               	bsf	3979,3,c	;volatile
 17950                           
 17951                           ;libraries/lcd_highlevel.c: 619:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17952  0028A4  0E2B               	movlw	43
 17953  0028A6  6E80               	movwf	128,c	;volatile
 17954  0028A8  988B               	bcf	3979,4,c	;volatile
 17955  0028AA  968B               	bcf	3979,3,c	;volatile
 17956  0028AC  868B               	bsf	3979,3,c	;volatile
 17957  0028AE  888B               	bsf	3979,4,c	;volatile
 17958                           
 17959                           ;libraries/lcd_highlevel.c: 620:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 17960  0028B0  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 17961  0028B2  6E80               	movwf	128,c	;volatile
 17962  0028B4  968B               	bcf	3979,3,c	;volatile
 17963  0028B6  868B               	bsf	3979,3,c	;volatile
 17964  0028B8                     
 17965                           ;libraries/lcd_highlevel.c: 621:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 17966  0028B8  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 17967  0028BC  968B               	bcf	3979,3,c	;volatile
 17968  0028BE  868B               	bsf	3979,3,c	;volatile
 17969                           
 17970                           ;libraries/lcd_highlevel.c: 622:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 17971  0028C0  0E01               	movlw	1
 17972  0028C2  6E80               	movwf	128,c	;volatile
 17973  0028C4  968B               	bcf	3979,3,c	;volatile
 17974  0028C6  868B               	bsf	3979,3,c	;volatile
 17975                           
 17976                           ;libraries/lcd_highlevel.c: 623:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 17977  0028C8  0E3F               	movlw	63
 17978  0028CA  6E80               	movwf	128,c	;volatile
 17979  0028CC  968B               	bcf	3979,3,c	;volatile
 17980  0028CE  868B               	bsf	3979,3,c	;volatile
 17981                           
 17982                           ;libraries/lcd_highlevel.c: 625:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17983  0028D0  0E2C               	movlw	44
 17984  0028D2  6E80               	movwf	128,c	;volatile
 17985  0028D4  988B               	bcf	3979,4,c	;volatile
 17986  0028D6  968B               	bcf	3979,3,c	;volatile
 17987  0028D8  868B               	bsf	3979,3,c	;volatile
 17988  0028DA  888B               	bsf	3979,4,c	;volatile
 17989  0028DC                     
 17990                           ;libraries/lcd_highlevel.c: 626:     for(i=posX1;i<=posX2;i++)
 17991  0028DC  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 17992  0028E0  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 17993  0028E4  EF91  F014         	goto	l7932
 17994  0028E8                     l265:
 17995                           
 17996                           ;libraries/lcd_highlevel.c: 627:     {;libraries/lcd_highlevel.c: 628:       for(j=posY1
      +                          ;j<=posY2;j++)
 17997  0028E8  C014  F01D         	movff	LCD_DrawRect@posY1,LCD_DrawRect@j
 17998  0028EC  C015  F01E         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@j+1
 17999  0028F0  EF84  F014         	goto	l7928
 18000  0028F4                     l267:
 18001                           
 18002                           ;libraries/lcd_highlevel.c: 629:       {;libraries/lcd_highlevel.c: 630:         PORTA =
      +                           colorH; LATC3 = 0; LATC3 = 1;;
 18003  0028F4  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18004  0028F8  968B               	bcf	3979,3,c	;volatile
 18005  0028FA  868B               	bsf	3979,3,c	;volatile
 18006                           
 18007                           ;libraries/lcd_highlevel.c: 631:         PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18008  0028FC  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18009  002900  968B               	bcf	3979,3,c	;volatile
 18010  002902  868B               	bsf	3979,3,c	;volatile
 18011  002904                     
 18012                           ;libraries/lcd_highlevel.c: 632:       }
 18013  002904  4A1D               	infsnz	LCD_DrawRect@j^0,f,c
 18014  002906  2A1E               	incf	(LCD_DrawRect@j+1)^0,f,c
 18015  002908                     l7928:
 18016  002908  501D               	movf	LCD_DrawRect@j^0,w,c
 18017  00290A  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18018  00290C  501E               	movf	(LCD_DrawRect@j+1)^0,w,c
 18019  00290E  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18020  002910  B0D8               	btfsc	status,0,c
 18021  002912  EF8D  F014         	goto	u5441
 18022  002916  EF8F  F014         	goto	u5440
 18023  00291A                     u5441:
 18024  00291A  EF7A  F014         	goto	l267
 18025  00291E                     u5440:
 18026  00291E                     
 18027                           ;libraries/lcd_highlevel.c: 633:     }
 18028  00291E  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18029  002920  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18030  002922                     l7932:
 18031  002922  5023               	movf	LCD_DrawRect@i^0,w,c
 18032  002924  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18033  002926  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18034  002928  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18035  00292A  B0D8               	btfsc	status,0,c
 18036  00292C  EF9A  F014         	goto	u5451
 18037  002930  EF9C  F014         	goto	u5450
 18038  002934                     u5451:
 18039  002934  EF74  F014         	goto	l265
 18040  002938                     u5450:
 18041  002938  EF9E  F015         	goto	l283
 18042  00293C                     l7934:
 18043                           
 18044                           ;libraries/lcd_highlevel.c: 637:   {;libraries/lcd_highlevel.c: 639:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18045  00293C  0E2A               	movlw	42
 18046  00293E  6E80               	movwf	128,c	;volatile
 18047  002940  988B               	bcf	3979,4,c	;volatile
 18048  002942  968B               	bcf	3979,3,c	;volatile
 18049  002944  868B               	bsf	3979,3,c	;volatile
 18050  002946  888B               	bsf	3979,4,c	;volatile
 18051                           
 18052                           ;libraries/lcd_highlevel.c: 640:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18053  002948  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18054  00294A  6E80               	movwf	128,c	;volatile
 18055  00294C  968B               	bcf	3979,3,c	;volatile
 18056  00294E  868B               	bsf	3979,3,c	;volatile
 18057  002950                     
 18058                           ;libraries/lcd_highlevel.c: 641:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18059  002950  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18060  002954  968B               	bcf	3979,3,c	;volatile
 18061  002956  868B               	bsf	3979,3,c	;volatile
 18062                           
 18063                           ;libraries/lcd_highlevel.c: 642:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18064  002958  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18065  00295A  6E80               	movwf	128,c	;volatile
 18066  00295C  968B               	bcf	3979,3,c	;volatile
 18067  00295E  868B               	bsf	3979,3,c	;volatile
 18068  002960                     
 18069                           ;libraries/lcd_highlevel.c: 643:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18070  002960  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18071  002964  968B               	bcf	3979,3,c	;volatile
 18072  002966  868B               	bsf	3979,3,c	;volatile
 18073                           
 18074                           ;libraries/lcd_highlevel.c: 645:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18075  002968  0E2B               	movlw	43
 18076  00296A  6E80               	movwf	128,c	;volatile
 18077  00296C  988B               	bcf	3979,4,c	;volatile
 18078  00296E  968B               	bcf	3979,3,c	;volatile
 18079  002970  868B               	bsf	3979,3,c	;volatile
 18080  002972  888B               	bsf	3979,4,c	;volatile
 18081                           
 18082                           ;libraries/lcd_highlevel.c: 646:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18083  002974  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18084  002976  6E80               	movwf	128,c	;volatile
 18085  002978  968B               	bcf	3979,3,c	;volatile
 18086  00297A  868B               	bsf	3979,3,c	;volatile
 18087  00297C                     
 18088                           ;libraries/lcd_highlevel.c: 647:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18089  00297C  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18090  002980  968B               	bcf	3979,3,c	;volatile
 18091  002982  868B               	bsf	3979,3,c	;volatile
 18092                           
 18093                           ;libraries/lcd_highlevel.c: 648:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18094  002984  0E01               	movlw	1
 18095  002986  6E80               	movwf	128,c	;volatile
 18096  002988  968B               	bcf	3979,3,c	;volatile
 18097  00298A  868B               	bsf	3979,3,c	;volatile
 18098                           
 18099                           ;libraries/lcd_highlevel.c: 649:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18100  00298C  0E3F               	movlw	63
 18101  00298E  6E80               	movwf	128,c	;volatile
 18102  002990  968B               	bcf	3979,3,c	;volatile
 18103  002992  868B               	bsf	3979,3,c	;volatile
 18104                           
 18105                           ;libraries/lcd_highlevel.c: 651:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18106  002994  0E2C               	movlw	44
 18107  002996  6E80               	movwf	128,c	;volatile
 18108  002998  988B               	bcf	3979,4,c	;volatile
 18109  00299A  968B               	bcf	3979,3,c	;volatile
 18110  00299C  868B               	bsf	3979,3,c	;volatile
 18111  00299E  888B               	bsf	3979,4,c	;volatile
 18112  0029A0                     
 18113                           ;libraries/lcd_highlevel.c: 653:     for(i=posX1;i<=posX2;i++)
 18114  0029A0  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18115  0029A4  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18116  0029A8  EFE0  F014         	goto	l8002
 18117  0029AC                     l272:
 18118                           
 18119                           ;libraries/lcd_highlevel.c: 654:     {;libraries/lcd_highlevel.c: 655:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18120  0029AC  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18121  0029B0  968B               	bcf	3979,3,c	;volatile
 18122  0029B2  868B               	bsf	3979,3,c	;volatile
 18123                           
 18124                           ;libraries/lcd_highlevel.c: 656:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18125  0029B4  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18126  0029B8  968B               	bcf	3979,3,c	;volatile
 18127  0029BA  868B               	bsf	3979,3,c	;volatile
 18128  0029BC                     
 18129                           ;libraries/lcd_highlevel.c: 657:     }
 18130  0029BC  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18131  0029BE  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18132  0029C0                     l8002:
 18133  0029C0  5023               	movf	LCD_DrawRect@i^0,w,c
 18134  0029C2  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18135  0029C4  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18136  0029C6  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18137  0029C8  B0D8               	btfsc	status,0,c
 18138  0029CA  EFE9  F014         	goto	u5461
 18139  0029CE  EFEB  F014         	goto	u5460
 18140  0029D2                     u5461:
 18141  0029D2  EFD6  F014         	goto	l272
 18142  0029D6                     u5460:
 18143  0029D6                     
 18144                           ;libraries/lcd_highlevel.c: 659:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18145  0029D6  0E2B               	movlw	43
 18146  0029D8  6E80               	movwf	128,c	;volatile
 18147  0029DA  988B               	bcf	3979,4,c	;volatile
 18148  0029DC  968B               	bcf	3979,3,c	;volatile
 18149  0029DE  868B               	bsf	3979,3,c	;volatile
 18150  0029E0  888B               	bsf	3979,4,c	;volatile
 18151                           
 18152                           ;libraries/lcd_highlevel.c: 660:     PORTA = posY2>>8; LATC3 = 0; LATC3 = 1;;
 18153  0029E2  5019               	movf	(LCD_DrawRect@posY2+1)^0,w,c
 18154  0029E4  6E80               	movwf	128,c	;volatile
 18155  0029E6  968B               	bcf	3979,3,c	;volatile
 18156  0029E8  868B               	bsf	3979,3,c	;volatile
 18157  0029EA                     
 18158                           ;libraries/lcd_highlevel.c: 661:     PORTA = posY2; LATC3 = 0; LATC3 = 1;;
 18159  0029EA  C018  FF80         	movff	LCD_DrawRect@posY2,3968	;volatile
 18160  0029EE  968B               	bcf	3979,3,c	;volatile
 18161  0029F0  868B               	bsf	3979,3,c	;volatile
 18162                           
 18163                           ;libraries/lcd_highlevel.c: 662:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18164  0029F2  0E2C               	movlw	44
 18165  0029F4  6E80               	movwf	128,c	;volatile
 18166  0029F6  988B               	bcf	3979,4,c	;volatile
 18167  0029F8  968B               	bcf	3979,3,c	;volatile
 18168  0029FA  868B               	bsf	3979,3,c	;volatile
 18169  0029FC  888B               	bsf	3979,4,c	;volatile
 18170  0029FE                     
 18171                           ;libraries/lcd_highlevel.c: 663:     for(i=posX1;i<=posX2;i++)
 18172  0029FE  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18173  002A02  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18174  002A06  EF0F  F015         	goto	l8036
 18175  002A0A                     l275:
 18176                           
 18177                           ;libraries/lcd_highlevel.c: 664:     {;libraries/lcd_highlevel.c: 665:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18178  002A0A  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18179  002A0E  968B               	bcf	3979,3,c	;volatile
 18180  002A10  868B               	bsf	3979,3,c	;volatile
 18181                           
 18182                           ;libraries/lcd_highlevel.c: 666:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18183  002A12  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18184  002A16  968B               	bcf	3979,3,c	;volatile
 18185  002A18  868B               	bsf	3979,3,c	;volatile
 18186  002A1A                     
 18187                           ;libraries/lcd_highlevel.c: 667:     }
 18188  002A1A  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18189  002A1C  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18190  002A1E                     l8036:
 18191  002A1E  5023               	movf	LCD_DrawRect@i^0,w,c
 18192  002A20  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18193  002A22  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18194  002A24  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18195  002A26  B0D8               	btfsc	status,0,c
 18196  002A28  EF18  F015         	goto	u5471
 18197  002A2C  EF1A  F015         	goto	u5470
 18198  002A30                     u5471:
 18199  002A30  EF05  F015         	goto	l275
 18200  002A34                     u5470:
 18201  002A34                     
 18202                           ;libraries/lcd_highlevel.c: 669:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18203  002A34  0E2A               	movlw	42
 18204  002A36  6E80               	movwf	128,c	;volatile
 18205  002A38  988B               	bcf	3979,4,c	;volatile
 18206  002A3A  968B               	bcf	3979,3,c	;volatile
 18207  002A3C  868B               	bsf	3979,3,c	;volatile
 18208  002A3E  888B               	bsf	3979,4,c	;volatile
 18209                           
 18210                           ;libraries/lcd_highlevel.c: 670:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18211  002A40  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18212  002A42  6E80               	movwf	128,c	;volatile
 18213  002A44  968B               	bcf	3979,3,c	;volatile
 18214  002A46  868B               	bsf	3979,3,c	;volatile
 18215  002A48                     
 18216                           ;libraries/lcd_highlevel.c: 671:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18217  002A48  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18218  002A4C  968B               	bcf	3979,3,c	;volatile
 18219  002A4E  868B               	bsf	3979,3,c	;volatile
 18220                           
 18221                           ;libraries/lcd_highlevel.c: 672:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18222  002A50  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18223  002A52  6E80               	movwf	128,c	;volatile
 18224  002A54  968B               	bcf	3979,3,c	;volatile
 18225  002A56  868B               	bsf	3979,3,c	;volatile
 18226  002A58                     
 18227                           ;libraries/lcd_highlevel.c: 673:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18228  002A58  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18229  002A5C  968B               	bcf	3979,3,c	;volatile
 18230  002A5E  868B               	bsf	3979,3,c	;volatile
 18231                           
 18232                           ;libraries/lcd_highlevel.c: 675:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18233  002A60  0E2B               	movlw	43
 18234  002A62  6E80               	movwf	128,c	;volatile
 18235  002A64  988B               	bcf	3979,4,c	;volatile
 18236  002A66  968B               	bcf	3979,3,c	;volatile
 18237  002A68  868B               	bsf	3979,3,c	;volatile
 18238  002A6A  888B               	bsf	3979,4,c	;volatile
 18239                           
 18240                           ;libraries/lcd_highlevel.c: 676:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18241  002A6C  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18242  002A6E  6E80               	movwf	128,c	;volatile
 18243  002A70  968B               	bcf	3979,3,c	;volatile
 18244  002A72  868B               	bsf	3979,3,c	;volatile
 18245  002A74                     
 18246                           ;libraries/lcd_highlevel.c: 677:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18247  002A74  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18248  002A78  968B               	bcf	3979,3,c	;volatile
 18249  002A7A  868B               	bsf	3979,3,c	;volatile
 18250                           
 18251                           ;libraries/lcd_highlevel.c: 678:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18252  002A7C  0E01               	movlw	1
 18253  002A7E  6E80               	movwf	128,c	;volatile
 18254  002A80  968B               	bcf	3979,3,c	;volatile
 18255  002A82  868B               	bsf	3979,3,c	;volatile
 18256                           
 18257                           ;libraries/lcd_highlevel.c: 679:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18258  002A84  0E3F               	movlw	63
 18259  002A86  6E80               	movwf	128,c	;volatile
 18260  002A88  968B               	bcf	3979,3,c	;volatile
 18261  002A8A  868B               	bsf	3979,3,c	;volatile
 18262                           
 18263                           ;libraries/lcd_highlevel.c: 680:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18264  002A8C  0E2C               	movlw	44
 18265  002A8E  6E80               	movwf	128,c	;volatile
 18266  002A90  988B               	bcf	3979,4,c	;volatile
 18267  002A92  968B               	bcf	3979,3,c	;volatile
 18268  002A94  868B               	bsf	3979,3,c	;volatile
 18269  002A96  888B               	bsf	3979,4,c	;volatile
 18270  002A98                     
 18271                           ;libraries/lcd_highlevel.c: 681:     for(i=posY1;i<=posY2;i++)
 18272  002A98  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 18273  002A9C  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 18274  002AA0  EF5C  F015         	goto	l8106
 18275  002AA4                     l278:
 18276                           
 18277                           ;libraries/lcd_highlevel.c: 682:     {;libraries/lcd_highlevel.c: 683:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18278  002AA4  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18279  002AA8  968B               	bcf	3979,3,c	;volatile
 18280  002AAA  868B               	bsf	3979,3,c	;volatile
 18281                           
 18282                           ;libraries/lcd_highlevel.c: 684:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18283  002AAC  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18284  002AB0  968B               	bcf	3979,3,c	;volatile
 18285  002AB2  868B               	bsf	3979,3,c	;volatile
 18286  002AB4                     
 18287                           ;libraries/lcd_highlevel.c: 685:     }
 18288  002AB4  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18289  002AB6  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18290  002AB8                     l8106:
 18291  002AB8  5023               	movf	LCD_DrawRect@i^0,w,c
 18292  002ABA  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18293  002ABC  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18294  002ABE  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18295  002AC0  B0D8               	btfsc	status,0,c
 18296  002AC2  EF65  F015         	goto	u5481
 18297  002AC6  EF67  F015         	goto	u5480
 18298  002ACA                     u5481:
 18299  002ACA  EF52  F015         	goto	l278
 18300  002ACE                     u5480:
 18301  002ACE                     
 18302                           ;libraries/lcd_highlevel.c: 687:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18303  002ACE  0E2A               	movlw	42
 18304  002AD0  6E80               	movwf	128,c	;volatile
 18305  002AD2  988B               	bcf	3979,4,c	;volatile
 18306  002AD4  968B               	bcf	3979,3,c	;volatile
 18307  002AD6  868B               	bsf	3979,3,c	;volatile
 18308  002AD8  888B               	bsf	3979,4,c	;volatile
 18309                           
 18310                           ;libraries/lcd_highlevel.c: 688:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18311  002ADA  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18312  002ADC  6E80               	movwf	128,c	;volatile
 18313  002ADE  968B               	bcf	3979,3,c	;volatile
 18314  002AE0  868B               	bsf	3979,3,c	;volatile
 18315  002AE2                     
 18316                           ;libraries/lcd_highlevel.c: 689:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18317  002AE2  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18318  002AE6  968B               	bcf	3979,3,c	;volatile
 18319  002AE8  868B               	bsf	3979,3,c	;volatile
 18320                           
 18321                           ;libraries/lcd_highlevel.c: 690:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18322  002AEA  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18323  002AEC  6E80               	movwf	128,c	;volatile
 18324  002AEE  968B               	bcf	3979,3,c	;volatile
 18325  002AF0  868B               	bsf	3979,3,c	;volatile
 18326  002AF2                     
 18327                           ;libraries/lcd_highlevel.c: 691:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18328  002AF2  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18329  002AF6  968B               	bcf	3979,3,c	;volatile
 18330  002AF8  868B               	bsf	3979,3,c	;volatile
 18331                           
 18332                           ;libraries/lcd_highlevel.c: 692:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18333  002AFA  0E2C               	movlw	44
 18334  002AFC  6E80               	movwf	128,c	;volatile
 18335  002AFE  988B               	bcf	3979,4,c	;volatile
 18336  002B00  968B               	bcf	3979,3,c	;volatile
 18337  002B02  868B               	bsf	3979,3,c	;volatile
 18338  002B04  888B               	bsf	3979,4,c	;volatile
 18339  002B06                     
 18340                           ;libraries/lcd_highlevel.c: 693:     for(i=posY1;i<=posY2;i++)
 18341  002B06  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 18342  002B0A  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 18343  002B0E  EF93  F015         	goto	l8150
 18344  002B12                     l281:
 18345                           
 18346                           ;libraries/lcd_highlevel.c: 694:     {;libraries/lcd_highlevel.c: 695:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18347  002B12  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18348  002B16  968B               	bcf	3979,3,c	;volatile
 18349  002B18  868B               	bsf	3979,3,c	;volatile
 18350                           
 18351                           ;libraries/lcd_highlevel.c: 696:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18352  002B1A  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18353  002B1E  968B               	bcf	3979,3,c	;volatile
 18354  002B20  868B               	bsf	3979,3,c	;volatile
 18355  002B22                     
 18356                           ;libraries/lcd_highlevel.c: 697:     }
 18357  002B22  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18358  002B24  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18359  002B26                     l8150:
 18360  002B26  5023               	movf	LCD_DrawRect@i^0,w,c
 18361  002B28  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18362  002B2A  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18363  002B2C  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18364  002B2E  B0D8               	btfsc	status,0,c
 18365  002B30  EF9C  F015         	goto	u5491
 18366  002B34  EF9E  F015         	goto	u5490
 18367  002B38                     u5491:
 18368  002B38  EF89  F015         	goto	l281
 18369  002B3C                     u5490:
 18370  002B3C                     l283:
 18371  002B3C  0012               	return		;funcret
 18372  002B3E                     __end_of_LCD_DrawRect:
 18373                           	callstack 0
 18374                           
 18375 ;; *************** function _XF_popEvent *****************
 18376 ;; Defined at:
 18377 ;;		line 72 in file "xf/xf.c"
 18378 ;; Parameters:    Size  Location     Type
 18379 ;;  inISR           1    wreg     _Bool 
 18380 ;; Auto vars:     Size  Location     Type
 18381 ;;  inISR           1   24[COMRAM] _Bool 
 18382 ;;  ev              1   23[COMRAM] unsigned char 
 18383 ;; Return value:  Size  Location     Type
 18384 ;;                  1    wreg      unsigned char 
 18385 ;; Registers used:
 18386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18387 ;; Tracked objects:
 18388 ;;		On entry : 0/0
 18389 ;;		On exit  : 0/0
 18390 ;;		Unchanged: 0/0
 18391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18392 ;;      Params:         0       0       0       0       0       0       0
 18393 ;;      Locals:         2       0       0       0       0       0       0
 18394 ;;      Temps:          0       0       0       0       0       0       0
 18395 ;;      Totals:         2       0       0       0       0       0       0
 18396 ;;Total ram usage:        2 bytes
 18397 ;; Hardware stack levels used: 1
 18398 ;; Hardware stack levels required when called: 5
 18399 ;; This function calls:
 18400 ;;		_ENTERCRITICAL
 18401 ;;		_LEAVECRITICAL
 18402 ;;		___awmod
 18403 ;; This function is called by:
 18404 ;;		_Factory_exec
 18405 ;; This function uses a non-reentrant model
 18406 ;;
 18407                           
 18408                           	psect	text73
 18409  005A6C                     __ptext73:
 18410                           	callstack 0
 18411  005A6C                     _XF_popEvent:
 18412                           	callstack 24
 18413                           
 18414                           ;incstack = 0
 18415                           ;XF_popEvent@inISR stored from wreg
 18416  005A6C  6E19               	movwf	XF_popEvent@inISR^0,c
 18417  005A6E                     
 18418                           ;xf/xf.c: 76:     ENTERCRITICAL(inISR);
 18419  005A6E  5019               	movf	XF_popEvent@inISR^0,w,c
 18420  005A70  EC73  F02F         	call	_ENTERCRITICAL
 18421  005A74                     
 18422                           ;xf/xf.c: 77:     if(theXF.in == theXF.out)
 18423  005A74  0100               	movlb	0	; () banked
 18424  005A76  51DA               	movf	(_theXF+37)& (0+255),w,b
 18425  005A78  19D9               	xorwf	(_theXF+36)& (0+255),w,b
 18426  005A7A  A4D8               	btfss	status,2,c
 18427  005A7C  EF42  F02D         	goto	u7581
 18428  005A80  EF44  F02D         	goto	u7580
 18429  005A84                     u7581:
 18430  005A84  EF4A  F02D         	goto	l10038
 18431  005A88                     u7580:
 18432  005A88                     
 18433                           ; BSR set to: 0
 18434                           ;xf/xf.c: 78:     {;xf/xf.c: 79:       LEAVECRITICAL(inISR);
 18435  005A88  5019               	movf	XF_popEvent@inISR^0,w,c
 18436  005A8A  EC68  F02F         	call	_LEAVECRITICAL
 18437  005A8E                     
 18438                           ;xf/xf.c: 80:       return ev;
 18439  005A8E  0E00               	movlw	0
 18440  005A90  EF65  F02D         	goto	l705
 18441  005A94                     l10038:
 18442                           
 18443                           ; BSR set to: 0
 18444                           ;xf/xf.c: 82:     ev = theXF.eventQueue[theXF.out];
 18445  005A94  0ECD               	movlw	low (_theXF+24)
 18446  005A96  25DA               	addwf	(_theXF+37)& (0+255),w,b
 18447  005A98  6ED9               	movwf	fsr2l,c
 18448  005A9A  6ADA               	clrf	fsr2h,c
 18449  005A9C  0E00               	movlw	high (_theXF+24)
 18450  005A9E  22DA               	addwfc	fsr2h,f,c
 18451  005AA0  50DF               	movf	indf2,w,c
 18452  005AA2  6E18               	movwf	XF_popEvent@ev^0,c
 18453  005AA4                     
 18454                           ; BSR set to: 0
 18455                           ;xf/xf.c: 83:     theXF.out = (theXF.out + 1)%(uint8_t)sizeof(theXF.eventQueue);
 18456  005AA4  0E01               	movlw	1
 18457  005AA6  25DA               	addwf	(_theXF+37)& (0+255),w,b
 18458  005AA8  6E12               	movwf	___awmod@dividend^0,c
 18459  005AAA  6A13               	clrf	(___awmod@dividend+1)^0,c
 18460  005AAC  0E00               	movlw	0
 18461  005AAE  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 18462  005AB0  0E00               	movlw	0
 18463  005AB2  6E15               	movwf	(___awmod@divisor+1)^0,c
 18464  005AB4  0E0C               	movlw	12
 18465  005AB6  6E14               	movwf	___awmod@divisor^0,c
 18466  005AB8  EC7A  F028         	call	___awmod	;wreg free
 18467  005ABC  5012               	movf	?___awmod^0,w,c
 18468  005ABE  0100               	movlb	0	; () banked
 18469  005AC0  6FDA               	movwf	(_theXF+37)& (0+255),b
 18470  005AC2                     
 18471                           ; BSR set to: 0
 18472                           ;xf/xf.c: 84:     LEAVECRITICAL(inISR);
 18473  005AC2  5019               	movf	XF_popEvent@inISR^0,w,c
 18474  005AC4  EC68  F02F         	call	_LEAVECRITICAL
 18475  005AC8                     
 18476                           ;xf/xf.c: 85:     return ev;
 18477  005AC8  5018               	movf	XF_popEvent@ev^0,w,c
 18478  005ACA                     l705:
 18479  005ACA  0012               	return		;funcret
 18480  005ACC                     __end_of_XF_popEvent:
 18481                           	callstack 0
 18482                           
 18483 ;; *************** function ___awmod *****************
 18484 ;; Defined at:
 18485 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 18486 ;; Parameters:    Size  Location     Type
 18487 ;;  dividend        2   17[COMRAM] int 
 18488 ;;  divisor         2   19[COMRAM] int 
 18489 ;; Auto vars:     Size  Location     Type
 18490 ;;  sign            1   22[COMRAM] unsigned char 
 18491 ;;  counter         1   21[COMRAM] unsigned char 
 18492 ;; Return value:  Size  Location     Type
 18493 ;;                  2   17[COMRAM] int 
 18494 ;; Registers used:
 18495 ;;		wreg, status,2, status,0
 18496 ;; Tracked objects:
 18497 ;;		On entry : 0/0
 18498 ;;		On exit  : 0/0
 18499 ;;		Unchanged: 0/0
 18500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18501 ;;      Params:         4       0       0       0       0       0       0
 18502 ;;      Locals:         2       0       0       0       0       0       0
 18503 ;;      Temps:          0       0       0       0       0       0       0
 18504 ;;      Totals:         6       0       0       0       0       0       0
 18505 ;;Total ram usage:        6 bytes
 18506 ;; Hardware stack levels used: 1
 18507 ;; Hardware stack levels required when called: 4
 18508 ;; This function calls:
 18509 ;;		Nothing
 18510 ;; This function is called by:
 18511 ;;		_XF_pushEvent
 18512 ;;		_XF_popEvent
 18513 ;; This function uses a non-reentrant model
 18514 ;;
 18515                           
 18516                           	psect	text74
 18517  0050F4                     __ptext74:
 18518                           	callstack 0
 18519  0050F4                     ___awmod:
 18520                           	callstack 21
 18521  0050F4  0E00               	movlw	0
 18522  0050F6  6E17               	movwf	___awmod@sign^0,c
 18523  0050F8  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
 18524  0050FA  EF83  F028         	goto	u6370
 18525  0050FE  EF81  F028         	goto	u6371
 18526  005102                     u6371:
 18527  005102  EF89  F028         	goto	l9236
 18528  005106                     u6370:
 18529  005106  6C12               	negf	___awmod@dividend^0,c
 18530  005108  1E13               	comf	(___awmod@dividend+1)^0,f,c
 18531  00510A  B0D8               	btfsc	status,0,c
 18532  00510C  2A13               	incf	(___awmod@dividend+1)^0,f,c
 18533  00510E  0E01               	movlw	1
 18534  005110  6E17               	movwf	___awmod@sign^0,c
 18535  005112                     l9236:
 18536  005112  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
 18537  005114  EF90  F028         	goto	u6380
 18538  005118  EF8E  F028         	goto	u6381
 18539  00511C                     u6381:
 18540  00511C  EF94  F028         	goto	l9240
 18541  005120                     u6380:
 18542  005120  6C14               	negf	___awmod@divisor^0,c
 18543  005122  1E15               	comf	(___awmod@divisor+1)^0,f,c
 18544  005124  B0D8               	btfsc	status,0,c
 18545  005126  2A15               	incf	(___awmod@divisor+1)^0,f,c
 18546  005128                     l9240:
 18547  005128  5014               	movf	___awmod@divisor^0,w,c
 18548  00512A  1015               	iorwf	(___awmod@divisor+1)^0,w,c
 18549  00512C  B4D8               	btfsc	status,2,c
 18550  00512E  EF9B  F028         	goto	u6391
 18551  005132  EF9D  F028         	goto	u6390
 18552  005136                     u6391:
 18553  005136  EFC1  F028         	goto	l9256
 18554  00513A                     u6390:
 18555  00513A  0E01               	movlw	1
 18556  00513C  6E16               	movwf	___awmod@counter^0,c
 18557  00513E  EFA5  F028         	goto	l9246
 18558  005142                     l9244:
 18559  005142  90D8               	bcf	status,0,c
 18560  005144  3614               	rlcf	___awmod@divisor^0,f,c
 18561  005146  3615               	rlcf	(___awmod@divisor+1)^0,f,c
 18562  005148  2A16               	incf	___awmod@counter^0,f,c
 18563  00514A                     l9246:
 18564  00514A  AE15               	btfss	(___awmod@divisor+1)^0,7,c
 18565  00514C  EFAA  F028         	goto	u6401
 18566  005150  EFAC  F028         	goto	u6400
 18567  005154                     u6401:
 18568  005154  EFA1  F028         	goto	l9244
 18569  005158                     u6400:
 18570  005158                     l9248:
 18571  005158  5014               	movf	___awmod@divisor^0,w,c
 18572  00515A  5C12               	subwf	___awmod@dividend^0,w,c
 18573  00515C  5015               	movf	(___awmod@divisor+1)^0,w,c
 18574  00515E  5813               	subwfb	(___awmod@dividend+1)^0,w,c
 18575  005160  A0D8               	btfss	status,0,c
 18576  005162  EFB5  F028         	goto	u6411
 18577  005166  EFB7  F028         	goto	u6410
 18578  00516A                     u6411:
 18579  00516A  EFBB  F028         	goto	l9252
 18580  00516E                     u6410:
 18581  00516E  5014               	movf	___awmod@divisor^0,w,c
 18582  005170  5E12               	subwf	___awmod@dividend^0,f,c
 18583  005172  5015               	movf	(___awmod@divisor+1)^0,w,c
 18584  005174  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
 18585  005176                     l9252:
 18586  005176  90D8               	bcf	status,0,c
 18587  005178  3215               	rrcf	(___awmod@divisor+1)^0,f,c
 18588  00517A  3214               	rrcf	___awmod@divisor^0,f,c
 18589  00517C  2E16               	decfsz	___awmod@counter^0,f,c
 18590  00517E  EFAC  F028         	goto	l9248
 18591  005182                     l9256:
 18592  005182  5017               	movf	___awmod@sign^0,w,c
 18593  005184  B4D8               	btfsc	status,2,c
 18594  005186  EFC7  F028         	goto	u6421
 18595  00518A  EFC9  F028         	goto	u6420
 18596  00518E                     u6421:
 18597  00518E  EFCD  F028         	goto	l9260
 18598  005192                     u6420:
 18599  005192  6C12               	negf	___awmod@dividend^0,c
 18600  005194  1E13               	comf	(___awmod@dividend+1)^0,f,c
 18601  005196  B0D8               	btfsc	status,0,c
 18602  005198  2A13               	incf	(___awmod@dividend+1)^0,f,c
 18603  00519A                     l9260:
 18604  00519A  C012  F012         	movff	___awmod@dividend,?___awmod
 18605  00519E  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
 18606  0051A2  0012               	return		;funcret
 18607  0051A4                     __end_of___awmod:
 18608                           	callstack 0
 18609                           
 18610 ;; *************** function _LEAVECRITICAL *****************
 18611 ;; Defined at:
 18612 ;;		line 186 in file "xf/xf.c"
 18613 ;; Parameters:    Size  Location     Type
 18614 ;;  inISR           1    wreg     _Bool 
 18615 ;; Auto vars:     Size  Location     Type
 18616 ;;  inISR           1   17[COMRAM] _Bool 
 18617 ;; Return value:  Size  Location     Type
 18618 ;;                  1    wreg      void 
 18619 ;; Registers used:
 18620 ;;		wreg, status,2
 18621 ;; Tracked objects:
 18622 ;;		On entry : 0/0
 18623 ;;		On exit  : 0/0
 18624 ;;		Unchanged: 0/0
 18625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18626 ;;      Params:         0       0       0       0       0       0       0
 18627 ;;      Locals:         1       0       0       0       0       0       0
 18628 ;;      Temps:          0       0       0       0       0       0       0
 18629 ;;      Totals:         1       0       0       0       0       0       0
 18630 ;;Total ram usage:        1 bytes
 18631 ;; Hardware stack levels used: 1
 18632 ;; Hardware stack levels required when called: 4
 18633 ;; This function calls:
 18634 ;;		Nothing
 18635 ;; This function is called by:
 18636 ;;		_XF_pushEvent
 18637 ;;		_XF_popEvent
 18638 ;;		_XF_scheduleTimer
 18639 ;; This function uses a non-reentrant model
 18640 ;;
 18641                           
 18642                           	psect	text75
 18643  005ED0                     __ptext75:
 18644                           	callstack 0
 18645  005ED0                     _LEAVECRITICAL:
 18646                           	callstack 21
 18647                           
 18648                           ;incstack = 0
 18649                           ;LEAVECRITICAL@inISR stored from wreg
 18650  005ED0  6E12               	movwf	LEAVECRITICAL@inISR^0,c
 18651  005ED2                     
 18652                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 18653  005ED2  5012               	movf	LEAVECRITICAL@inISR^0,w,c
 18654  005ED4  A4D8               	btfss	status,2,c
 18655  005ED6  EF6F  F02F         	goto	u6361
 18656  005EDA  EF71  F02F         	goto	u6360
 18657  005EDE                     u6361:
 18658  005EDE  EF72  F02F         	goto	l731
 18659  005EE2                     u6360:
 18660  005EE2                     
 18661                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 18662  005EE2  8EF2               	bsf	4082,7,c	;volatile
 18663  005EE4                     l731:
 18664  005EE4  0012               	return		;funcret
 18665  005EE6                     __end_of_LEAVECRITICAL:
 18666                           	callstack 0
 18667                           
 18668 ;; *************** function _ENTERCRITICAL *****************
 18669 ;; Defined at:
 18670 ;;		line 172 in file "xf/xf.c"
 18671 ;; Parameters:    Size  Location     Type
 18672 ;;  inISR           1    wreg     _Bool 
 18673 ;; Auto vars:     Size  Location     Type
 18674 ;;  inISR           1   17[COMRAM] _Bool 
 18675 ;; Return value:  Size  Location     Type
 18676 ;;                  1    wreg      void 
 18677 ;; Registers used:
 18678 ;;		wreg, status,2
 18679 ;; Tracked objects:
 18680 ;;		On entry : 0/0
 18681 ;;		On exit  : 0/0
 18682 ;;		Unchanged: 0/0
 18683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18684 ;;      Params:         0       0       0       0       0       0       0
 18685 ;;      Locals:         1       0       0       0       0       0       0
 18686 ;;      Temps:          0       0       0       0       0       0       0
 18687 ;;      Totals:         1       0       0       0       0       0       0
 18688 ;;Total ram usage:        1 bytes
 18689 ;; Hardware stack levels used: 1
 18690 ;; Hardware stack levels required when called: 4
 18691 ;; This function calls:
 18692 ;;		Nothing
 18693 ;; This function is called by:
 18694 ;;		_XF_pushEvent
 18695 ;;		_XF_popEvent
 18696 ;;		_XF_scheduleTimer
 18697 ;; This function uses a non-reentrant model
 18698 ;;
 18699                           
 18700                           	psect	text76
 18701  005EE6                     __ptext76:
 18702                           	callstack 0
 18703  005EE6                     _ENTERCRITICAL:
 18704                           	callstack 21
 18705                           
 18706                           ;incstack = 0
 18707                           ;ENTERCRITICAL@inISR stored from wreg
 18708  005EE6  6E12               	movwf	ENTERCRITICAL@inISR^0,c
 18709  005EE8                     
 18710                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 18711  005EE8  5012               	movf	ENTERCRITICAL@inISR^0,w,c
 18712  005EEA  A4D8               	btfss	status,2,c
 18713  005EEC  EF7A  F02F         	goto	u6351
 18714  005EF0  EF7C  F02F         	goto	u6350
 18715  005EF4                     u6351:
 18716  005EF4  EF7D  F02F         	goto	l727
 18717  005EF8                     u6350:
 18718  005EF8                     
 18719                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 18720  005EF8  9EF2               	bcf	4082,7,c	;volatile
 18721  005EFA                     l727:
 18722  005EFA  0012               	return		;funcret
 18723  005EFC                     __end_of_ENTERCRITICAL:
 18724                           	callstack 0
 18725                           
 18726 ;; *************** function _isr *****************
 18727 ;; Defined at:
 18728 ;;		line 19 in file "main.c"
 18729 ;; Parameters:    Size  Location     Type
 18730 ;;		None
 18731 ;; Auto vars:     Size  Location     Type
 18732 ;;		None
 18733 ;; Return value:  Size  Location     Type
 18734 ;;                  1    wreg      void 
 18735 ;; Registers used:
 18736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18737 ;; Tracked objects:
 18738 ;;		On entry : 0/0
 18739 ;;		On exit  : 0/0
 18740 ;;		Unchanged: 0/0
 18741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18742 ;;      Params:         0       0       0       0       0       0       0
 18743 ;;      Locals:         0       0       0       0       0       0       0
 18744 ;;      Temps:          4       0       0       0       0       0       0
 18745 ;;      Totals:         4       0       0       0       0       0       0
 18746 ;;Total ram usage:        4 bytes
 18747 ;; Hardware stack levels used: 1
 18748 ;; Hardware stack levels required when called: 3
 18749 ;; This function calls:
 18750 ;;		_XF_decrementAndQueueTimers
 18751 ;;		i2_XF_pushEvent
 18752 ;;		i2_XF_scheduleTimer
 18753 ;; This function is called by:
 18754 ;;		Interrupt level 2
 18755 ;; This function uses a non-reentrant model
 18756 ;;
 18757                           
 18758                           	psect	intcode
 18759  000008                     __pintcode:
 18760                           	callstack 0
 18761  000008                     _isr:
 18762                           	callstack 16
 18763                           
 18764                           ;incstack = 0
 18765  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 18766  00000A  CFD9 F00E          	movff	fsr2l,??_isr
 18767  00000E  CFDA F00F          	movff	fsr2h,??_isr+1
 18768  000012  CFF3 F010          	movff	prodl,??_isr+2
 18769  000016  CFF4 F011          	movff	prodh,??_isr+3
 18770  00001A                     
 18771                           ;main.c: 21:     if((INT1IF==1)&&(INT1IE==1))
 18772  00001A  A0F0               	btfss	4080,0,c	;volatile
 18773  00001C  EF12  F000         	goto	i2u528_41
 18774  000020  EF14  F000         	goto	i2u528_40
 18775  000024                     i2u528_41:
 18776  000024  EF39  F000         	goto	i2l7580
 18777  000028                     i2u528_40:
 18778  000028  A6F0               	btfss	4080,3,c	;volatile
 18779  00002A  EF19  F000         	goto	i2u529_41
 18780  00002E  EF1B  F000         	goto	i2u529_40
 18781  000032                     i2u529_41:
 18782  000032  EF39  F000         	goto	i2l7580
 18783  000036                     i2u529_40:
 18784  000036                     
 18785                           ;main.c: 22:     {;main.c: 23:         if(INTEDG1==0)
 18786  000036  BAF1               	btfsc	4081,5,c	;volatile
 18787  000038  EF20  F000         	goto	i2u530_41
 18788  00003C  EF22  F000         	goto	i2u530_40
 18789  000040                     i2u530_41:
 18790  000040  EF2B  F000         	goto	i2l767
 18791  000044                     i2u530_40:
 18792  000044                     
 18793                           ;main.c: 24:         {;main.c: 25:             INTEDG1=1;
 18794  000044  8AF1               	bsf	4081,5,c	;volatile
 18795                           
 18796                           ;main.c: 26:             INT1IF=0;
 18797  000046  90F0               	bcf	4080,0,c	;volatile
 18798  000048                     
 18799                           ;main.c: 27:             XF_pushEvent(evPress,1);
 18800  000048  0E01               	movlw	1
 18801  00004A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 18802  00004C  0E01               	movlw	1
 18803  00004E  ECD3  F02C         	call	i2_XF_pushEvent
 18804                           
 18805                           ;main.c: 29:         }
 18806  000052  EF39  F000         	goto	i2l7580
 18807  000056                     i2l767:
 18808  000056  AAF1               	btfss	4081,5,c	;volatile
 18809  000058  EF30  F000         	goto	i2u531_41
 18810  00005C  EF32  F000         	goto	i2u531_40
 18811  000060                     i2u531_41:
 18812  000060  EF39  F000         	goto	i2l7580
 18813  000064                     i2u531_40:
 18814  000064                     
 18815                           ;main.c: 31:         {;main.c: 32:             INTEDG1=0;
 18816  000064  9AF1               	bcf	4081,5,c	;volatile
 18817                           
 18818                           ;main.c: 33:             INT1IF=0;
 18819  000066  90F0               	bcf	4080,0,c	;volatile
 18820  000068                     
 18821                           ;main.c: 34:             XF_pushEvent(evRelease,1);
 18822  000068  0E01               	movlw	1
 18823  00006A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 18824  00006C  0E02               	movlw	2
 18825  00006E  ECD3  F02C         	call	i2_XF_pushEvent
 18826  000072                     i2l7580:
 18827                           
 18828                           ;main.c: 40:     if((TMR0IF==1)&&(TMR0IE==1))
 18829  000072  A4F2               	btfss	4082,2,c	;volatile
 18830  000074  EF3E  F000         	goto	i2u532_41
 18831  000078  EF40  F000         	goto	i2u532_40
 18832  00007C                     i2u532_41:
 18833  00007C  EF58  F000         	goto	i2l771
 18834  000080                     i2u532_40:
 18835  000080  AAF2               	btfss	4082,5,c	;volatile
 18836  000082  EF45  F000         	goto	i2u533_41
 18837  000086  EF47  F000         	goto	i2u533_40
 18838  00008A                     i2u533_41:
 18839  00008A  EF58  F000         	goto	i2l771
 18840  00008E                     i2u533_40:
 18841  00008E                     
 18842                           ;main.c: 41:     {;main.c: 42:         XF_decrementAndQueueTimers();
 18843  00008E  EC02  F021         	call	_XF_decrementAndQueueTimers	;wreg free
 18844                           
 18845                           ;main.c: 43:         XF_scheduleTimer(5,evGameUpdate,1);
 18846  000092  0E00               	movlw	0
 18847  000094  6E03               	movwf	(i2XF_scheduleTimer@tm+1)^0,c
 18848  000096  0E05               	movlw	5
 18849  000098  6E02               	movwf	i2XF_scheduleTimer@tm^0,c
 18850  00009A  0E0A               	movlw	10
 18851  00009C  6E04               	movwf	i2XF_scheduleTimer@ev^0,c
 18852  00009E  0E01               	movlw	1
 18853  0000A0  6E05               	movwf	i2XF_scheduleTimer@inISR^0,c
 18854  0000A2  ECCD  F02B         	call	i2_XF_scheduleTimer	;wreg free
 18855  0000A6                     
 18856                           ;main.c: 44:         TMR0H=0xFB;
 18857  0000A6  0EFB               	movlw	251
 18858  0000A8  6ED7               	movwf	215,c	;volatile
 18859  0000AA                     
 18860                           ;main.c: 45:         TMR0L=0x1D;
 18861  0000AA  0E1D               	movlw	29
 18862  0000AC  6ED6               	movwf	214,c	;volatile
 18863  0000AE                     
 18864                           ;main.c: 46:         TMR0IF=0;
 18865  0000AE  94F2               	bcf	4082,2,c	;volatile
 18866  0000B0                     i2l771:
 18867  0000B0  C011  FFF4         	movff	??_isr+3,prodh
 18868  0000B4  C010  FFF3         	movff	??_isr+2,prodl
 18869  0000B8  C00F  FFDA         	movff	??_isr+1,fsr2h
 18870  0000BC  C00E  FFD9         	movff	??_isr,fsr2l
 18871  0000C0  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 18872  0000C2  0011               	retfie		f
 18873  0000C4                     __end_of_isr:
 18874                           	callstack 0
 18875                           
 18876 ;; *************** function i2_XF_scheduleTimer *****************
 18877 ;; Defined at:
 18878 ;;		line 96 in file "xf/xf.c"
 18879 ;; Parameters:    Size  Location     Type
 18880 ;;  tm              2    1[COMRAM] unsigned short 
 18881 ;;  ev              1    3[COMRAM] unsigned char 
 18882 ;;  inISR           1    4[COMRAM] _Bool 
 18883 ;; Auto vars:     Size  Location     Type
 18884 ;;  i               1    5[COMRAM] unsigned char 
 18885 ;; Return value:  Size  Location     Type
 18886 ;;                  1    wreg      unsigned char 
 18887 ;; Registers used:
 18888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18889 ;; Tracked objects:
 18890 ;;		On entry : 0/0
 18891 ;;		On exit  : 0/0
 18892 ;;		Unchanged: 0/0
 18893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18894 ;;      Params:         4       0       0       0       0       0       0
 18895 ;;      Locals:         1       0       0       0       0       0       0
 18896 ;;      Temps:          0       0       0       0       0       0       0
 18897 ;;      Totals:         5       0       0       0       0       0       0
 18898 ;;Total ram usage:        5 bytes
 18899 ;; Hardware stack levels used: 1
 18900 ;; Hardware stack levels required when called: 1
 18901 ;; This function calls:
 18902 ;;		i2_ENTERCRITICAL
 18903 ;;		i2_LEAVECRITICAL
 18904 ;; This function is called by:
 18905 ;;		_isr
 18906 ;; This function uses a non-reentrant model
 18907 ;;
 18908                           
 18909                           	psect	text78
 18910  00579A                     __ptext78:
 18911                           	callstack 0
 18912  00579A                     i2_XF_scheduleTimer:
 18913                           	callstack 17
 18914  00579A                     
 18915                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
 18916  00579A  5005               	movf	i2XF_scheduleTimer@inISR^0,w,c
 18917  00579C  EC89  F02F         	call	i2_ENTERCRITICAL
 18918  0057A0                     
 18919                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
 18920  0057A0  0E00               	movlw	0
 18921  0057A2  6E06               	movwf	i2XF_scheduleTimer@i^0,c
 18922  0057A4                     i2l7554:
 18923                           
 18924                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
 18925  0057A4  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 18926  0057A6  0D03               	mullw	3
 18927  0057A8  0EB7               	movlw	low (_theXF+2)
 18928  0057AA  24F3               	addwf	243,w,c
 18929  0057AC  6ED9               	movwf	fsr2l,c
 18930  0057AE  0E00               	movlw	high (_theXF+2)
 18931  0057B0  20F4               	addwfc	prodh,w,c
 18932  0057B2  6EDA               	movwf	fsr2h,c
 18933  0057B4  50DF               	movf	indf2,w,c
 18934  0057B6  A4D8               	btfss	status,2,c
 18935  0057B8  EFE0  F02B         	goto	i2u526_41
 18936  0057BC  EFE2  F02B         	goto	i2u526_40
 18937  0057C0                     i2u526_41:
 18938  0057C0  EFFA  F02B         	goto	i2l7558
 18939  0057C4                     i2u526_40:
 18940  0057C4                     
 18941                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
 18942  0057C4  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 18943  0057C6  0D03               	mullw	3
 18944  0057C8  0EB5               	movlw	low _theXF
 18945  0057CA  24F3               	addwf	243,w,c
 18946  0057CC  6ED9               	movwf	fsr2l,c
 18947  0057CE  0E00               	movlw	high _theXF
 18948  0057D0  20F4               	addwfc	prodh,w,c
 18949  0057D2  6EDA               	movwf	fsr2h,c
 18950  0057D4  C002  FFDE         	movff	i2XF_scheduleTimer@tm,postinc2
 18951  0057D8  C003  FFDD         	movff	i2XF_scheduleTimer@tm+1,postdec2
 18952                           
 18953                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
 18954  0057DC  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 18955  0057DE  0D03               	mullw	3
 18956  0057E0  0EB7               	movlw	low (_theXF+2)
 18957  0057E2  24F3               	addwf	243,w,c
 18958  0057E4  6ED9               	movwf	fsr2l,c
 18959  0057E6  0E00               	movlw	high (_theXF+2)
 18960  0057E8  20F4               	addwfc	prodh,w,c
 18961  0057EA  6EDA               	movwf	fsr2h,c
 18962  0057EC  C004  FFDF         	movff	i2XF_scheduleTimer@ev,indf2
 18963                           
 18964                           ;xf/xf.c: 107:             break;
 18965  0057F0  EF03  F02C         	goto	i2l7562
 18966  0057F4                     i2l7558:
 18967                           
 18968                           ;xf/xf.c: 109:     }
 18969  0057F4  2A06               	incf	i2XF_scheduleTimer@i^0,f,c
 18970  0057F6  0E07               	movlw	7
 18971  0057F8  6406               	cpfsgt	i2XF_scheduleTimer@i^0,c
 18972  0057FA  EF01  F02C         	goto	i2u527_41
 18973  0057FE  EF03  F02C         	goto	i2u527_40
 18974  005802                     i2u527_41:
 18975  005802  EFD2  F02B         	goto	i2l7554
 18976  005806                     i2u527_40:
 18977  005806                     i2l7562:
 18978                           
 18979                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
 18980  005806  5005               	movf	i2XF_scheduleTimer@inISR^0,w,c
 18981  005808  EC7E  F02F         	call	i2_LEAVECRITICAL
 18982  00580C  0012               	return		;funcret
 18983  00580E                     __end_ofi2_XF_scheduleTimer:
 18984                           	callstack 0
 18985                           
 18986 ;; *************** function _XF_decrementAndQueueTimers *****************
 18987 ;; Defined at:
 18988 ;;		line 139 in file "xf/xf.c"
 18989 ;; Parameters:    Size  Location     Type
 18990 ;;		None
 18991 ;; Auto vars:     Size  Location     Type
 18992 ;;  i               2   11[COMRAM] int 
 18993 ;; Return value:  Size  Location     Type
 18994 ;;                  1    wreg      void 
 18995 ;; Registers used:
 18996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18997 ;; Tracked objects:
 18998 ;;		On entry : 0/0
 18999 ;;		On exit  : 0/0
 19000 ;;		Unchanged: 0/0
 19001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19002 ;;      Params:         0       0       0       0       0       0       0
 19003 ;;      Locals:         2       0       0       0       0       0       0
 19004 ;;      Temps:          2       0       0       0       0       0       0
 19005 ;;      Totals:         4       0       0       0       0       0       0
 19006 ;;Total ram usage:        4 bytes
 19007 ;; Hardware stack levels used: 1
 19008 ;; Hardware stack levels required when called: 2
 19009 ;; This function calls:
 19010 ;;		_XF_unscheduleTimer
 19011 ;;		i2_XF_pushEvent
 19012 ;;		i2___wmul
 19013 ;; This function is called by:
 19014 ;;		_isr
 19015 ;; This function uses a non-reentrant model
 19016 ;;
 19017                           
 19018                           	psect	text79
 19019  004204                     __ptext79:
 19020                           	callstack 0
 19021  004204                     _XF_decrementAndQueueTimers:
 19022                           	callstack 16
 19023  004204                     
 19024                           ;xf/xf.c: 141:     int i;;xf/xf.c: 142:     for (i=0; i<8; i++)
 19025  004204  0E00               	movlw	0
 19026  004206  6E0D               	movwf	(XF_decrementAndQueueTimers@i+1)^0,c
 19027  004208  0E00               	movlw	0
 19028  00420A  6E0C               	movwf	XF_decrementAndQueueTimers@i^0,c
 19029  00420C                     i2l7532:
 19030                           
 19031                           ;xf/xf.c: 143:     {;xf/xf.c: 144:         if (theXF.timerList[i].ev != NULLEVENT)
 19032  00420C  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19033  004210  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19034  004214  0E00               	movlw	0
 19035  004216  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19036  004218  0E03               	movlw	3
 19037  00421A  6E03               	movwf	i2___wmul@multiplicand^0,c
 19038  00421C  EC22  F02F         	call	i2___wmul	;wreg free
 19039  004220  0EB7               	movlw	low (_theXF+2)
 19040  004222  2401               	addwf	?i2___wmul^0,w,c
 19041  004224  6ED9               	movwf	fsr2l,c
 19042  004226  0E00               	movlw	high (_theXF+2)
 19043  004228  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19044  00422A  6EDA               	movwf	fsr2h,c
 19045  00422C  50DF               	movf	indf2,w,c
 19046  00422E  B4D8               	btfsc	status,2,c
 19047  004230  EF1C  F021         	goto	i2u522_41
 19048  004234  EF1E  F021         	goto	i2u522_40
 19049  004238                     i2u522_41:
 19050  004238  EF82  F021         	goto	i2l7542
 19051  00423C                     i2u522_40:
 19052  00423C                     
 19053                           ;xf/xf.c: 145:         {;xf/xf.c: 147:             theXF.timerList[i].tm-=1;
 19054  00423C  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19055  004240  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19056  004244  0E00               	movlw	0
 19057  004246  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19058  004248  0E03               	movlw	3
 19059  00424A  6E03               	movwf	i2___wmul@multiplicand^0,c
 19060  00424C  EC22  F02F         	call	i2___wmul	;wreg free
 19061  004250  0EB5               	movlw	low _theXF
 19062  004252  2401               	addwf	?i2___wmul^0,w,c
 19063  004254  6ED9               	movwf	fsr2l,c
 19064  004256  0E00               	movlw	high _theXF
 19065  004258  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19066  00425A  6EDA               	movwf	fsr2h,c
 19067  00425C  06DE               	decf	postinc2,f,c
 19068  00425E  0E00               	movlw	0
 19069  004260  5ADD               	subwfb	postdec2,f,c
 19070                           
 19071                           ;xf/xf.c: 148:             if (theXF.timerList[i].tm ==0)
 19072  004262  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19073  004266  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19074  00426A  0E00               	movlw	0
 19075  00426C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19076  00426E  0E03               	movlw	3
 19077  004270  6E03               	movwf	i2___wmul@multiplicand^0,c
 19078  004272  EC22  F02F         	call	i2___wmul	;wreg free
 19079  004276  0EB5               	movlw	low _theXF
 19080  004278  2401               	addwf	?i2___wmul^0,w,c
 19081  00427A  6ED9               	movwf	fsr2l,c
 19082  00427C  0E00               	movlw	high _theXF
 19083  00427E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19084  004280  6EDA               	movwf	fsr2h,c
 19085  004282  50DE               	movf	postinc2,w,c
 19086  004284  10DE               	iorwf	postinc2,w,c
 19087  004286  A4D8               	btfss	status,2,c
 19088  004288  EF48  F021         	goto	i2u523_41
 19089  00428C  EF4A  F021         	goto	i2u523_40
 19090  004290                     i2u523_41:
 19091  004290  EF82  F021         	goto	i2l7542
 19092  004294                     i2u523_40:
 19093  004294                     
 19094                           ;xf/xf.c: 149:             {;xf/xf.c: 150:                 if(XF_pushEvent(theXF.timerLi
      +                          st[i].ev, 1) == 1)
 19095  004294  0E01               	movlw	1
 19096  004296  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19097  004298  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19098  00429C  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19099  0042A0  0E00               	movlw	0
 19100  0042A2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19101  0042A4  0E03               	movlw	3
 19102  0042A6  6E03               	movwf	i2___wmul@multiplicand^0,c
 19103  0042A8  EC22  F02F         	call	i2___wmul	;wreg free
 19104  0042AC  0EB7               	movlw	low (_theXF+2)
 19105  0042AE  2401               	addwf	?i2___wmul^0,w,c
 19106  0042B0  6ED9               	movwf	fsr2l,c
 19107  0042B2  0E00               	movlw	high (_theXF+2)
 19108  0042B4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19109  0042B6  6EDA               	movwf	fsr2h,c
 19110  0042B8  50DF               	movf	indf2,w,c
 19111  0042BA  ECD3  F02C         	call	i2_XF_pushEvent
 19112  0042BE  06E8               	decf	wreg,f,c
 19113  0042C0  A4D8               	btfss	status,2,c
 19114  0042C2  EF65  F021         	goto	i2u524_41
 19115  0042C6  EF67  F021         	goto	i2u524_40
 19116  0042CA                     i2u524_41:
 19117  0042CA  EF6E  F021         	goto	i2l7540
 19118  0042CE                     i2u524_40:
 19119  0042CE                     
 19120                           ;xf/xf.c: 151:                 {;xf/xf.c: 152:                   XF_unscheduleTimer(i, 1
      +                          );
 19121  0042CE  0E01               	movlw	1
 19122  0042D0  6E02               	movwf	XF_unscheduleTimer@inISR^0,c
 19123  0042D2  500C               	movf	XF_decrementAndQueueTimers@i^0,w,c
 19124  0042D4  EC94  F02E         	call	_XF_unscheduleTimer
 19125                           
 19126                           ;xf/xf.c: 153:                 }
 19127  0042D8  EF82  F021         	goto	i2l7542
 19128  0042DC                     i2l7540:
 19129                           
 19130                           ;xf/xf.c: 155:                 {;xf/xf.c: 156:                   theXF.timerList[i].tm=1
      +                          ;
 19131  0042DC  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19132  0042E0  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19133  0042E4  0E00               	movlw	0
 19134  0042E6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19135  0042E8  0E03               	movlw	3
 19136  0042EA  6E03               	movwf	i2___wmul@multiplicand^0,c
 19137  0042EC  EC22  F02F         	call	i2___wmul	;wreg free
 19138  0042F0  0EB5               	movlw	low _theXF
 19139  0042F2  2401               	addwf	?i2___wmul^0,w,c
 19140  0042F4  6ED9               	movwf	fsr2l,c
 19141  0042F6  0E00               	movlw	high _theXF
 19142  0042F8  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19143  0042FA  6EDA               	movwf	fsr2h,c
 19144  0042FC  0E01               	movlw	1
 19145  0042FE  6EDE               	movwf	postinc2,c
 19146  004300  0E00               	movlw	0
 19147  004302  6EDD               	movwf	postdec2,c
 19148  004304                     i2l7542:
 19149                           
 19150                           ;xf/xf.c: 160:     }
 19151  004304  4A0C               	infsnz	XF_decrementAndQueueTimers@i^0,f,c
 19152  004306  2A0D               	incf	(XF_decrementAndQueueTimers@i+1)^0,f,c
 19153  004308  BE0D               	btfsc	(XF_decrementAndQueueTimers@i+1)^0,7,c
 19154  00430A  EF90  F021         	goto	i2u525_41
 19155  00430E  500D               	movf	(XF_decrementAndQueueTimers@i+1)^0,w,c
 19156  004310  E109               	bnz	i2u525_40
 19157  004312  0E08               	movlw	8
 19158  004314  5C0C               	subwf	XF_decrementAndQueueTimers@i^0,w,c
 19159  004316  A0D8               	btfss	status,0,c
 19160  004318  EF90  F021         	goto	i2u525_41
 19161  00431C  EF92  F021         	goto	i2u525_40
 19162  004320                     i2u525_41:
 19163  004320  EF06  F021         	goto	i2l7532
 19164  004324                     i2u525_40:
 19165  004324  0012               	return		;funcret
 19166  004326                     __end_of_XF_decrementAndQueueTimers:
 19167                           	callstack 0
 19168                           
 19169 ;; *************** function i2___wmul *****************
 19170 ;; Defined at:
 19171 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 19172 ;; Parameters:    Size  Location     Type
 19173 ;;  multiplier      2    0[COMRAM] unsigned int 
 19174 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19175 ;; Auto vars:     Size  Location     Type
 19176 ;;  product         2    4[COMRAM] unsigned int 
 19177 ;; Return value:  Size  Location     Type
 19178 ;;                  2    0[COMRAM] unsigned int 
 19179 ;; Registers used:
 19180 ;;		wreg, status,2, status,0, prodl, prodh
 19181 ;; Tracked objects:
 19182 ;;		On entry : 0/0
 19183 ;;		On exit  : 0/0
 19184 ;;		Unchanged: 0/0
 19185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19186 ;;      Params:         4       0       0       0       0       0       0
 19187 ;;      Locals:         2       0       0       0       0       0       0
 19188 ;;      Temps:          0       0       0       0       0       0       0
 19189 ;;      Totals:         6       0       0       0       0       0       0
 19190 ;;Total ram usage:        6 bytes
 19191 ;; Hardware stack levels used: 1
 19192 ;; This function calls:
 19193 ;;		Nothing
 19194 ;; This function is called by:
 19195 ;;		_XF_decrementAndQueueTimers
 19196 ;; This function uses a non-reentrant model
 19197 ;;
 19198                           
 19199                           	psect	text80
 19200  005E44                     __ptext80:
 19201                           	callstack 0
 19202  005E44                     i2___wmul:
 19203                           	callstack 17
 19204  005E44  5001               	movf	i2___wmul@multiplier^0,w,c
 19205  005E46  0203               	mulwf	i2___wmul@multiplicand^0,c
 19206  005E48  CFF3 F005          	movff	prodl,i2___wmul@product
 19207  005E4C  CFF4 F006          	movff	prodh,i2___wmul@product+1
 19208  005E50  5001               	movf	i2___wmul@multiplier^0,w,c
 19209  005E52  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 19210  005E54  50F3               	movf	243,w,c
 19211  005E56  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19212  005E58  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 19213  005E5A  0203               	mulwf	i2___wmul@multiplicand^0,c
 19214  005E5C  50F3               	movf	243,w,c
 19215  005E5E  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19216  005E60  C005  F001         	movff	i2___wmul@product,?i2___wmul
 19217  005E64  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 19218  005E68  0012               	return		;funcret
 19219  005E6A                     __end_ofi2___wmul:
 19220                           	callstack 0
 19221                           
 19222 ;; *************** function i2_XF_pushEvent *****************
 19223 ;; Defined at:
 19224 ;;		line 49 in file "xf/xf.c"
 19225 ;; Parameters:    Size  Location     Type
 19226 ;;  ev              1    wreg     unsigned char 
 19227 ;;  inISR           1    6[COMRAM] _Bool 
 19228 ;; Auto vars:     Size  Location     Type
 19229 ;;  ev              1    7[COMRAM] unsigned char 
 19230 ;;  temp            1    8[COMRAM] unsigned char 
 19231 ;; Return value:  Size  Location     Type
 19232 ;;                  1    wreg      _Bool 
 19233 ;; Registers used:
 19234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19235 ;; Tracked objects:
 19236 ;;		On entry : 0/0
 19237 ;;		On exit  : 0/0
 19238 ;;		Unchanged: 0/0
 19239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19240 ;;      Params:         1       0       0       0       0       0       0
 19241 ;;      Locals:         2       0       0       0       0       0       0
 19242 ;;      Temps:          0       0       0       0       0       0       0
 19243 ;;      Totals:         3       0       0       0       0       0       0
 19244 ;;Total ram usage:        3 bytes
 19245 ;; Hardware stack levels used: 1
 19246 ;; Hardware stack levels required when called: 1
 19247 ;; This function calls:
 19248 ;;		i2_ENTERCRITICAL
 19249 ;;		i2_LEAVECRITICAL
 19250 ;;		i2___awmod
 19251 ;; This function is called by:
 19252 ;;		_XF_decrementAndQueueTimers
 19253 ;;		_isr
 19254 ;; This function uses a non-reentrant model
 19255 ;;
 19256                           
 19257                           	psect	text81
 19258  0059A6                     __ptext81:
 19259                           	callstack 0
 19260  0059A6                     i2_XF_pushEvent:
 19261                           	callstack 17
 19262                           
 19263                           ;incstack = 0
 19264                           ;i2XF_pushEvent@ev stored from wreg
 19265  0059A6  6E08               	movwf	i2XF_pushEvent@ev^0,c
 19266  0059A8                     
 19267                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 19268  0059A8  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 19269  0059AA  EC89  F02F         	call	i2_ENTERCRITICAL
 19270  0059AE                     
 19271                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 19272  0059AE  0E01               	movlw	1
 19273  0059B0  0100               	movlb	0	; () banked
 19274  0059B2  25D9               	addwf	(_theXF+36)& (0+255),w,b
 19275  0059B4  6E01               	movwf	i2___awmod@dividend^0,c
 19276  0059B6  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 19277  0059B8  0E00               	movlw	0
 19278  0059BA  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
 19279  0059BC  0E00               	movlw	0
 19280  0059BE  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 19281  0059C0  0E0C               	movlw	12
 19282  0059C2  6E03               	movwf	i2___awmod@divisor^0,c
 19283  0059C4  ECD2  F028         	call	i2___awmod	;wreg free
 19284  0059C8  5001               	movf	?i2___awmod^0,w,c
 19285  0059CA  6E09               	movwf	i2XF_pushEvent@temp^0,c
 19286  0059CC                     
 19287                           ;xf/xf.c: 55:     if(temp == theXF.out)
 19288  0059CC  5009               	movf	i2XF_pushEvent@temp^0,w,c
 19289  0059CE  0100               	movlb	0	; () banked
 19290  0059D0  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 19291  0059D2  A4D8               	btfss	status,2,c
 19292  0059D4  EFEE  F02C         	goto	i2u520_41
 19293  0059D8  EFF0  F02C         	goto	i2u520_40
 19294  0059DC                     i2u520_41:
 19295  0059DC  EFF6  F02C         	goto	i2l7448
 19296  0059E0                     i2u520_40:
 19297  0059E0                     
 19298                           ; BSR set to: 0
 19299                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 19300  0059E0  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 19301  0059E2  EC7E  F02F         	call	i2_LEAVECRITICAL
 19302  0059E6                     
 19303                           ;xf/xf.c: 58:       return 0;
 19304  0059E6  0E00               	movlw	0
 19305  0059E8  EF04  F02D         	goto	i2l701
 19306  0059EC                     i2l7448:
 19307                           
 19308                           ; BSR set to: 0
 19309                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 19310  0059EC  0ECD               	movlw	low (_theXF+24)
 19311  0059EE  25D9               	addwf	(_theXF+36)& (0+255),w,b
 19312  0059F0  6ED9               	movwf	fsr2l,c
 19313  0059F2  6ADA               	clrf	fsr2h,c
 19314  0059F4  0E00               	movlw	high (_theXF+24)
 19315  0059F6  22DA               	addwfc	fsr2h,f,c
 19316  0059F8  C008  FFDF         	movff	i2XF_pushEvent@ev,indf2
 19317  0059FC                     
 19318                           ; BSR set to: 0
 19319                           ;xf/xf.c: 61:     theXF.in = temp;
 19320  0059FC  C009  F0D9         	movff	i2XF_pushEvent@temp,_theXF+36
 19321  005A00                     
 19322                           ; BSR set to: 0
 19323                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 19324  005A00  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 19325  005A02  EC7E  F02F         	call	i2_LEAVECRITICAL
 19326  005A06                     
 19327                           ;xf/xf.c: 63:     return 1;
 19328  005A06  0E01               	movlw	1
 19329  005A08                     i2l701:
 19330  005A08  0012               	return		;funcret
 19331  005A0A                     __end_ofi2_XF_pushEvent:
 19332                           	callstack 0
 19333                           
 19334 ;; *************** function i2___awmod *****************
 19335 ;; Defined at:
 19336 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 19337 ;; Parameters:    Size  Location     Type
 19338 ;;  dividend        2    0[COMRAM] int 
 19339 ;;  divisor         2    2[COMRAM] int 
 19340 ;; Auto vars:     Size  Location     Type
 19341 ;;  sign            1    5[COMRAM] unsigned char 
 19342 ;;  counter         1    4[COMRAM] unsigned char 
 19343 ;; Return value:  Size  Location     Type
 19344 ;;                  2    0[COMRAM] int 
 19345 ;; Registers used:
 19346 ;;		wreg, status,2, status,0
 19347 ;; Tracked objects:
 19348 ;;		On entry : 0/0
 19349 ;;		On exit  : 0/0
 19350 ;;		Unchanged: 0/0
 19351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19352 ;;      Params:         4       0       0       0       0       0       0
 19353 ;;      Locals:         2       0       0       0       0       0       0
 19354 ;;      Temps:          0       0       0       0       0       0       0
 19355 ;;      Totals:         6       0       0       0       0       0       0
 19356 ;;Total ram usage:        6 bytes
 19357 ;; Hardware stack levels used: 1
 19358 ;; This function calls:
 19359 ;;		Nothing
 19360 ;; This function is called by:
 19361 ;;		i2_XF_pushEvent
 19362 ;; This function uses a non-reentrant model
 19363 ;;
 19364                           
 19365                           	psect	text82
 19366  0051A4                     __ptext82:
 19367                           	callstack 0
 19368  0051A4                     i2___awmod:
 19369                           	callstack 17
 19370  0051A4  0E00               	movlw	0
 19371  0051A6  6E06               	movwf	i2___awmod@sign^0,c
 19372  0051A8  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 19373  0051AA  EFDB  F028         	goto	i2u494_40
 19374  0051AE  EFD9  F028         	goto	i2u494_41
 19375  0051B2                     i2u494_41:
 19376  0051B2  EFE1  F028         	goto	i2l7168
 19377  0051B6                     i2u494_40:
 19378  0051B6  6C01               	negf	i2___awmod@dividend^0,c
 19379  0051B8  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 19380  0051BA  B0D8               	btfsc	status,0,c
 19381  0051BC  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 19382  0051BE  0E01               	movlw	1
 19383  0051C0  6E06               	movwf	i2___awmod@sign^0,c
 19384  0051C2                     i2l7168:
 19385  0051C2  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 19386  0051C4  EFE8  F028         	goto	i2u495_40
 19387  0051C8  EFE6  F028         	goto	i2u495_41
 19388  0051CC                     i2u495_41:
 19389  0051CC  EFEC  F028         	goto	i2l7172
 19390  0051D0                     i2u495_40:
 19391  0051D0  6C03               	negf	i2___awmod@divisor^0,c
 19392  0051D2  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 19393  0051D4  B0D8               	btfsc	status,0,c
 19394  0051D6  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 19395  0051D8                     i2l7172:
 19396  0051D8  5003               	movf	i2___awmod@divisor^0,w,c
 19397  0051DA  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 19398  0051DC  B4D8               	btfsc	status,2,c
 19399  0051DE  EFF3  F028         	goto	i2u496_41
 19400  0051E2  EFF5  F028         	goto	i2u496_40
 19401  0051E6                     i2u496_41:
 19402  0051E6  EF19  F029         	goto	i2l7188
 19403  0051EA                     i2u496_40:
 19404  0051EA  0E01               	movlw	1
 19405  0051EC  6E05               	movwf	i2___awmod@counter^0,c
 19406  0051EE  EFFD  F028         	goto	i2l7178
 19407  0051F2                     i2l7176:
 19408  0051F2  90D8               	bcf	status,0,c
 19409  0051F4  3603               	rlcf	i2___awmod@divisor^0,f,c
 19410  0051F6  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 19411  0051F8  2A05               	incf	i2___awmod@counter^0,f,c
 19412  0051FA                     i2l7178:
 19413  0051FA  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 19414  0051FC  EF02  F029         	goto	i2u497_41
 19415  005200  EF04  F029         	goto	i2u497_40
 19416  005204                     i2u497_41:
 19417  005204  EFF9  F028         	goto	i2l7176
 19418  005208                     i2u497_40:
 19419  005208                     i2l7180:
 19420  005208  5003               	movf	i2___awmod@divisor^0,w,c
 19421  00520A  5C01               	subwf	i2___awmod@dividend^0,w,c
 19422  00520C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 19423  00520E  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 19424  005210  A0D8               	btfss	status,0,c
 19425  005212  EF0D  F029         	goto	i2u498_41
 19426  005216  EF0F  F029         	goto	i2u498_40
 19427  00521A                     i2u498_41:
 19428  00521A  EF13  F029         	goto	i2l7184
 19429  00521E                     i2u498_40:
 19430  00521E  5003               	movf	i2___awmod@divisor^0,w,c
 19431  005220  5E01               	subwf	i2___awmod@dividend^0,f,c
 19432  005222  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 19433  005224  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 19434  005226                     i2l7184:
 19435  005226  90D8               	bcf	status,0,c
 19436  005228  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 19437  00522A  3203               	rrcf	i2___awmod@divisor^0,f,c
 19438  00522C  2E05               	decfsz	i2___awmod@counter^0,f,c
 19439  00522E  EF04  F029         	goto	i2l7180
 19440  005232                     i2l7188:
 19441  005232  5006               	movf	i2___awmod@sign^0,w,c
 19442  005234  B4D8               	btfsc	status,2,c
 19443  005236  EF1F  F029         	goto	i2u499_41
 19444  00523A  EF21  F029         	goto	i2u499_40
 19445  00523E                     i2u499_41:
 19446  00523E  EF25  F029         	goto	i2l7192
 19447  005242                     i2u499_40:
 19448  005242  6C01               	negf	i2___awmod@dividend^0,c
 19449  005244  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 19450  005246  B0D8               	btfsc	status,0,c
 19451  005248  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 19452  00524A                     i2l7192:
 19453  00524A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 19454  00524E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 19455  005252  0012               	return		;funcret
 19456  005254                     __end_ofi2___awmod:
 19457                           	callstack 0
 19458                           
 19459 ;; *************** function _XF_unscheduleTimer *****************
 19460 ;; Defined at:
 19461 ;;		line 125 in file "xf/xf.c"
 19462 ;; Parameters:    Size  Location     Type
 19463 ;;  id              1    wreg     unsigned char 
 19464 ;;  inISR           1    1[COMRAM] _Bool 
 19465 ;; Auto vars:     Size  Location     Type
 19466 ;;  id              1    2[COMRAM] unsigned char 
 19467 ;; Return value:  Size  Location     Type
 19468 ;;                  1    wreg      void 
 19469 ;; Registers used:
 19470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19471 ;; Tracked objects:
 19472 ;;		On entry : 0/0
 19473 ;;		On exit  : 0/0
 19474 ;;		Unchanged: 0/0
 19475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19476 ;;      Params:         1       0       0       0       0       0       0
 19477 ;;      Locals:         1       0       0       0       0       0       0
 19478 ;;      Temps:          0       0       0       0       0       0       0
 19479 ;;      Totals:         2       0       0       0       0       0       0
 19480 ;;Total ram usage:        2 bytes
 19481 ;; Hardware stack levels used: 1
 19482 ;; Hardware stack levels required when called: 1
 19483 ;; This function calls:
 19484 ;;		i2_ENTERCRITICAL
 19485 ;;		i2_LEAVECRITICAL
 19486 ;; This function is called by:
 19487 ;;		_XF_decrementAndQueueTimers
 19488 ;; This function uses a non-reentrant model
 19489 ;;
 19490                           
 19491                           	psect	text83
 19492  005D28                     __ptext83:
 19493                           	callstack 0
 19494  005D28                     _XF_unscheduleTimer:
 19495                           	callstack 16
 19496                           
 19497                           ;incstack = 0
 19498                           ;XF_unscheduleTimer@id stored from wreg
 19499  005D28  6E03               	movwf	XF_unscheduleTimer@id^0,c
 19500  005D2A                     
 19501                           ;xf/xf.c: 125: void XF_unscheduleTimer(TimerID id, _Bool inISR);xf/xf.c: 126: {;xf/xf.c:
      +                           127:     ENTERCRITICAL(inISR);
 19502  005D2A  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 19503  005D2C  EC89  F02F         	call	i2_ENTERCRITICAL
 19504  005D30                     
 19505                           ;xf/xf.c: 128:     theXF.timerList[id].tm = 0;
 19506  005D30  5003               	movf	XF_unscheduleTimer@id^0,w,c
 19507  005D32  0D03               	mullw	3
 19508  005D34  0EB5               	movlw	low _theXF
 19509  005D36  24F3               	addwf	243,w,c
 19510  005D38  6ED9               	movwf	fsr2l,c
 19511  005D3A  0E00               	movlw	high _theXF
 19512  005D3C  20F4               	addwfc	prodh,w,c
 19513  005D3E  6EDA               	movwf	fsr2h,c
 19514  005D40  0E00               	movlw	0
 19515  005D42  6EDE               	movwf	postinc2,c
 19516  005D44  0E00               	movlw	0
 19517  005D46  6EDD               	movwf	postdec2,c
 19518  005D48                     
 19519                           ;xf/xf.c: 129:     theXF.timerList[id].ev = NULLEVENT;
 19520  005D48  5003               	movf	XF_unscheduleTimer@id^0,w,c
 19521  005D4A  0D03               	mullw	3
 19522  005D4C  0EB7               	movlw	low (_theXF+2)
 19523  005D4E  24F3               	addwf	243,w,c
 19524  005D50  6ED9               	movwf	fsr2l,c
 19525  005D52  0E00               	movlw	high (_theXF+2)
 19526  005D54  20F4               	addwfc	prodh,w,c
 19527  005D56  6EDA               	movwf	fsr2h,c
 19528  005D58  0E00               	movlw	0
 19529  005D5A  6EDF               	movwf	indf2,c
 19530                           
 19531                           ;xf/xf.c: 130:     LEAVECRITICAL(inISR);
 19532  005D5C  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 19533  005D5E  EC7E  F02F         	call	i2_LEAVECRITICAL
 19534  005D62  0012               	return		;funcret
 19535  005D64                     __end_of_XF_unscheduleTimer:
 19536                           	callstack 0
 19537                           
 19538 ;; *************** function i2_LEAVECRITICAL *****************
 19539 ;; Defined at:
 19540 ;;		line 186 in file "xf/xf.c"
 19541 ;; Parameters:    Size  Location     Type
 19542 ;;  inISR           1    wreg     _Bool 
 19543 ;; Auto vars:     Size  Location     Type
 19544 ;;  inISR           1    0[COMRAM] _Bool 
 19545 ;; Return value:  Size  Location     Type
 19546 ;;                  1    wreg      void 
 19547 ;; Registers used:
 19548 ;;		wreg, status,2
 19549 ;; Tracked objects:
 19550 ;;		On entry : 0/0
 19551 ;;		On exit  : 0/0
 19552 ;;		Unchanged: 0/0
 19553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19554 ;;      Params:         0       0       0       0       0       0       0
 19555 ;;      Locals:         1       0       0       0       0       0       0
 19556 ;;      Temps:          0       0       0       0       0       0       0
 19557 ;;      Totals:         1       0       0       0       0       0       0
 19558 ;;Total ram usage:        1 bytes
 19559 ;; Hardware stack levels used: 1
 19560 ;; This function calls:
 19561 ;;		Nothing
 19562 ;; This function is called by:
 19563 ;;		_XF_unscheduleTimer
 19564 ;;		i2_XF_pushEvent
 19565 ;;		i2_XF_scheduleTimer
 19566 ;; This function uses a non-reentrant model
 19567 ;;
 19568                           
 19569                           	psect	text84
 19570  005EFC                     __ptext84:
 19571                           	callstack 0
 19572  005EFC                     i2_LEAVECRITICAL:
 19573                           	callstack 17
 19574                           
 19575                           ;incstack = 0
 19576                           ;i2LEAVECRITICAL@inISR stored from wreg
 19577  005EFC  6E01               	movwf	i2LEAVECRITICAL@inISR^0,c
 19578  005EFE                     
 19579                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 19580  005EFE  5001               	movf	i2LEAVECRITICAL@inISR^0,w,c
 19581  005F00  A4D8               	btfss	status,2,c
 19582  005F02  EF85  F02F         	goto	i2u493_41
 19583  005F06  EF87  F02F         	goto	i2u493_40
 19584  005F0A                     i2u493_41:
 19585  005F0A  EF88  F02F         	goto	i2l731
 19586  005F0E                     i2u493_40:
 19587  005F0E                     
 19588                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 19589  005F0E  8EF2               	bsf	4082,7,c	;volatile
 19590  005F10                     i2l731:
 19591  005F10  0012               	return		;funcret
 19592  005F12                     __end_ofi2_LEAVECRITICAL:
 19593                           	callstack 0
 19594                           
 19595 ;; *************** function i2_ENTERCRITICAL *****************
 19596 ;; Defined at:
 19597 ;;		line 172 in file "xf/xf.c"
 19598 ;; Parameters:    Size  Location     Type
 19599 ;;  inISR           1    wreg     _Bool 
 19600 ;; Auto vars:     Size  Location     Type
 19601 ;;  inISR           1    0[COMRAM] _Bool 
 19602 ;; Return value:  Size  Location     Type
 19603 ;;                  1    wreg      void 
 19604 ;; Registers used:
 19605 ;;		wreg, status,2
 19606 ;; Tracked objects:
 19607 ;;		On entry : 0/0
 19608 ;;		On exit  : 0/0
 19609 ;;		Unchanged: 0/0
 19610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19611 ;;      Params:         0       0       0       0       0       0       0
 19612 ;;      Locals:         1       0       0       0       0       0       0
 19613 ;;      Temps:          0       0       0       0       0       0       0
 19614 ;;      Totals:         1       0       0       0       0       0       0
 19615 ;;Total ram usage:        1 bytes
 19616 ;; Hardware stack levels used: 1
 19617 ;; This function calls:
 19618 ;;		Nothing
 19619 ;; This function is called by:
 19620 ;;		_XF_unscheduleTimer
 19621 ;;		i2_XF_pushEvent
 19622 ;;		i2_XF_scheduleTimer
 19623 ;; This function uses a non-reentrant model
 19624 ;;
 19625                           
 19626                           	psect	text85
 19627  005F12                     __ptext85:
 19628                           	callstack 0
 19629  005F12                     i2_ENTERCRITICAL:
 19630                           	callstack 17
 19631                           
 19632                           ;incstack = 0
 19633                           ;i2ENTERCRITICAL@inISR stored from wreg
 19634  005F12  6E01               	movwf	i2ENTERCRITICAL@inISR^0,c
 19635  005F14                     
 19636                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 19637  005F14  5001               	movf	i2ENTERCRITICAL@inISR^0,w,c
 19638  005F16  A4D8               	btfss	status,2,c
 19639  005F18  EF90  F02F         	goto	i2u492_41
 19640  005F1C  EF92  F02F         	goto	i2u492_40
 19641  005F20                     i2u492_41:
 19642  005F20  EF93  F02F         	goto	i2l727
 19643  005F24                     i2u492_40:
 19644  005F24                     
 19645                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 19646  005F24  9EF2               	bcf	4082,7,c	;volatile
 19647  005F26                     i2l727:
 19648  005F26  0012               	return		;funcret
 19649  005F28                     __end_ofi2_ENTERCRITICAL:
 19650                           	callstack 0
 19651                           
 19652                           	psect	rparam
 19653  0000                     
 19654                           	psect	temp
 19655  00004E                     btemp:
 19656                           	callstack 0
 19657  00004E                     	ds	1
 19658  0000                     int$flags	set	btemp
 19659  0000                     wtemp8	set	btemp+1
 19660  0000                     ttemp5	set	btemp+1
 19661  0000                     ttemp6	set	btemp+4
 19662  0000                     ttemp7	set	btemp+8
 19663                           
 19664                           	psect	idloc
 19665                           
 19666                           ;Config register IDLOC0 @ 0x200000
 19667                           ;	unspecified, using default values
 19668  200000                     	org	2097152
 19669  200000  FF                 	db	255
 19670                           
 19671                           ;Config register IDLOC1 @ 0x200001
 19672                           ;	unspecified, using default values
 19673  200001                     	org	2097153
 19674  200001  FF                 	db	255
 19675                           
 19676                           ;Config register IDLOC2 @ 0x200002
 19677                           ;	unspecified, using default values
 19678  200002                     	org	2097154
 19679  200002  FF                 	db	255
 19680                           
 19681                           ;Config register IDLOC3 @ 0x200003
 19682                           ;	unspecified, using default values
 19683  200003                     	org	2097155
 19684  200003  FF                 	db	255
 19685                           
 19686                           ;Config register IDLOC4 @ 0x200004
 19687                           ;	unspecified, using default values
 19688  200004                     	org	2097156
 19689  200004  FF                 	db	255
 19690                           
 19691                           ;Config register IDLOC5 @ 0x200005
 19692                           ;	unspecified, using default values
 19693  200005                     	org	2097157
 19694  200005  FF                 	db	255
 19695                           
 19696                           ;Config register IDLOC6 @ 0x200006
 19697                           ;	unspecified, using default values
 19698  200006                     	org	2097158
 19699  200006  FF                 	db	255
 19700                           
 19701                           ;Config register IDLOC7 @ 0x200007
 19702                           ;	unspecified, using default values
 19703  200007                     	org	2097159
 19704  200007  FF                 	db	255
 19705                           
 19706                           	psect	config
 19707                           
 19708                           ; Padding undefined space
 19709  300000                     	org	3145728
 19710  300000  FF                 	db	255
 19711                           
 19712                           ;Config register CONFIG1H @ 0x300001
 19713                           ;	Oscillator Selection bits
 19714                           ;	FOSC = INTIO67, Internal oscillator block
 19715                           ;	4X PLL Enable
 19716                           ;	PLLCFG = ON, Oscillator multiplied by 4
 19717                           ;	Primary clock enable bit
 19718                           ;	PRICLKEN = ON, Primary clock is always enabled
 19719                           ;	Fail-Safe Clock Monitor Enable bit
 19720                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 19721                           ;	Internal/External Oscillator Switchover bit
 19722                           ;	IESO = OFF, Oscillator Switchover mode disabled
 19723  300001                     	org	3145729
 19724  300001  38                 	db	56
 19725                           
 19726                           ;Config register CONFIG2L @ 0x300002
 19727                           ;	Power-up Timer Enable bit
 19728                           ;	PWRTEN = OFF, Power up timer disabled
 19729                           ;	Brown-out Reset Enable bits
 19730                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 19731                           ;	Brown Out Reset Voltage bits
 19732                           ;	BORV = 190, VBOR set to 1.90 V nominal
 19733  300002                     	org	3145730
 19734  300002  1F                 	db	31
 19735                           
 19736                           ;Config register CONFIG2H @ 0x300003
 19737                           ;	Watchdog Timer Enable bits
 19738                           ;	WDTEN = SWON, WDT is controlled by SWDTEN bit of the WDTCON register
 19739                           ;	Watchdog Timer Postscale Select bits
 19740                           ;	WDTPS = 32768, 1:32768
 19741  300003                     	org	3145731
 19742  300003  3E                 	db	62
 19743                           
 19744                           ; Padding undefined space
 19745  300004                     	org	3145732
 19746  300004  FF                 	db	255
 19747                           
 19748                           ;Config register CONFIG3H @ 0x300005
 19749                           ;	CCP2 MUX bit
 19750                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 19751                           ;	PORTB A/D Enable bit
 19752                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 19753                           ;	P3A/CCP3 Mux bit
 19754                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 19755                           ;	HFINTOSC Fast Start-up
 19756                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 19757                           ;	Timer3 Clock input mux bit
 19758                           ;	T3CMX = PORTC0, T3CKI is on RC0
 19759                           ;	ECCP2 B output mux bit
 19760                           ;	P2BMX = PORTB5, P2B is on RB5
 19761                           ;	MCLR Pin Enable bit
 19762                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 19763  300005                     	org	3145733
 19764  300005  BD                 	db	189
 19765                           
 19766                           ;Config register CONFIG4L @ 0x300006
 19767                           ;	Stack Full/Underflow Reset Enable bit
 19768                           ;	STVREN = ON, Stack full/underflow will cause Reset
 19769                           ;	Single-Supply ICSP Enable bit
 19770                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 19771                           ;	Extended Instruction Set Enable bit
 19772                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 19773                           ;	Background Debug
 19774                           ;	DEBUG = 0x1, unprogrammed default
 19775  300006                     	org	3145734
 19776  300006  85                 	db	133
 19777                           
 19778                           ; Padding undefined space
 19779  300007                     	org	3145735
 19780  300007  FF                 	db	255
 19781                           
 19782                           ;Config register CONFIG5L @ 0x300008
 19783                           ;	Code Protection Block 0
 19784                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 19785                           ;	Code Protection Block 1
 19786                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 19787                           ;	Code Protection Block 2
 19788                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 19789                           ;	Code Protection Block 3
 19790                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 19791  300008                     	org	3145736
 19792  300008  0F                 	db	15
 19793                           
 19794                           ;Config register CONFIG5H @ 0x300009
 19795                           ;	Boot Block Code Protection bit
 19796                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 19797                           ;	Data EEPROM Code Protection bit
 19798                           ;	CPD = OFF, Data EEPROM not code-protected
 19799  300009                     	org	3145737
 19800  300009  C0                 	db	192
 19801                           
 19802                           ;Config register CONFIG6L @ 0x30000A
 19803                           ;	Write Protection Block 0
 19804                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 19805                           ;	Write Protection Block 1
 19806                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 19807                           ;	Write Protection Block 2
 19808                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 19809                           ;	Write Protection Block 3
 19810                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 19811  30000A                     	org	3145738
 19812  30000A  0F                 	db	15
 19813                           
 19814                           ;Config register CONFIG6H @ 0x30000B
 19815                           ;	Configuration Register Write Protection bit
 19816                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 19817                           ;	Boot Block Write Protection bit
 19818                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 19819                           ;	Data EEPROM Write Protection bit
 19820                           ;	WRTD = OFF, Data EEPROM not write-protected
 19821  30000B                     	org	3145739
 19822  30000B  E0                 	db	224
 19823                           
 19824                           ;Config register CONFIG7L @ 0x30000C
 19825                           ;	Table Read Protection Block 0
 19826                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 19827                           ;	Table Read Protection Block 1
 19828                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 19829                           ;	Table Read Protection Block 2
 19830                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 19831                           ;	Table Read Protection Block 3
 19832                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 19833  30000C                     	org	3145740
 19834  30000C  0F                 	db	15
 19835                           
 19836                           ;Config register CONFIG7H @ 0x30000D
 19837                           ;	Boot Block Table Read Protection bit
 19838                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 19839  30000D                     	org	3145741
 19840  30000D  40                 	db	64
 19841                           tosu	equ	0xFFF
 19842                           tosh	equ	0xFFE
 19843                           tosl	equ	0xFFD
 19844                           stkptr	equ	0xFFC
 19845                           pclatu	equ	0xFFB
 19846                           pclath	equ	0xFFA
 19847                           pcl	equ	0xFF9
 19848                           tblptru	equ	0xFF8
 19849                           tblptrh	equ	0xFF7
 19850                           tblptrl	equ	0xFF6
 19851                           tablat	equ	0xFF5
 19852                           prodh	equ	0xFF4
 19853                           prodl	equ	0xFF3
 19854                           indf0	equ	0xFEF
 19855                           postinc0	equ	0xFEE
 19856                           postdec0	equ	0xFED
 19857                           preinc0	equ	0xFEC
 19858                           plusw0	equ	0xFEB
 19859                           fsr0h	equ	0xFEA
 19860                           fsr0l	equ	0xFE9
 19861                           wreg	equ	0xFE8
 19862                           indf1	equ	0xFE7
 19863                           postinc1	equ	0xFE6
 19864                           postdec1	equ	0xFE5
 19865                           preinc1	equ	0xFE4
 19866                           plusw1	equ	0xFE3
 19867                           fsr1h	equ	0xFE2
 19868                           fsr1l	equ	0xFE1
 19869                           bsr	equ	0xFE0
 19870                           indf2	equ	0xFDF
 19871                           postinc2	equ	0xFDE
 19872                           postdec2	equ	0xFDD
 19873                           preinc2	equ	0xFDC
 19874                           plusw2	equ	0xFDB
 19875                           fsr2h	equ	0xFDA
 19876                           fsr2l	equ	0xFD9
 19877                           status	equ	0xFD8

Data Sizes:
    Strings     86
    Constant    1867
    Data        0
    BSS         283
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      77
    BANK0           160     85     160
    BANK1           256      1     202
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    g1.font.bitmap	PTR const unsigned char  size(2) Largest target is 0
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    g1.font.descriptor	PTR const struct . size(2) Largest target is 0
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    g1.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.font	PTR struct . size(2) Largest target is 0
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.text	PTR const unsigned char  size(2) Largest target is 0
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.fpPress	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_9(CODE[11]), STR_8(CODE[8]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_9(CODE[11]), STR_8(CODE[8]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), STR_1(CODE[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_11(CODE[6]), STR_10(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_11(CODE[6]), STR_10(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_11(CODE[6]), STR_10(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S4259_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), 

    backlightController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    backlightController@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    checkCollision@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    checkCollision@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    mooveBall@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    mooveBall@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    moovePaddle@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    moovePaddle@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    gameControllerController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerController@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    gameControllerSM@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    gameControllerSM@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    gameControllerInit@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    displayController@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    displaySM@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    displayInit@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    touchScreenController@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    touchScreenSM@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    sleepInit@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_Bitmap@colorTablePtr	PTR unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_Bitmap@bmpPtr	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_Bitmap@strPtr	PTR struct . size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    RGB2LCD@colorTableEntry	PTR unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_DrawText@font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_DrawText@font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_DrawText@font	PTR const struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_DrawText@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> touchScreenController@s(BANK0[20]), STR_9(CODE[11]), STR_8(CODE[8]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), STR_3(CODE[9]), 
		 -> STR_2(CODE[11]), STR_1(CODE[10]), 

    LCD_InSlider@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InSlider@slider	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_InButton@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_InButton@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_InButton@button	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_ButtonDraw@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonDraw@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonDraw@bmpPtr	PTR struct . size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_ButtonDraw@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonDraw@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_ButtonDraw@button	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_ButtonUpdate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonUpdate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_ButtonUpdate@button	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_ButtonCreate@fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonCreate@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonCreate@font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@textOrBmp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_ButtonCreate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    LCD_ButtonCreate@button	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_SliderDraw@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderDraw@slider	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_SliderUpdate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderUpdate@slider	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    LCD_SliderCreate@fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider	PTR struct . size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Menu_inGameDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_inGameDraw@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Menu_parametersDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_parametersDraw@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Menu_welcomeDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    Menu_welcomeDraw@g	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    GameParameters_setY@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setY@s	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    GameParameters_setX@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setX@s	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    GameParameters_resetPos@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_resetPos@s	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    GameParameters_setPlayer@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setPlayer@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setPlayer@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setPlayer@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setPlayer@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_setBackLight@s	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    GameParameters_init@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    GameParameters_init@s	PTR struct GameParameters size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    S124$fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    S97$fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S97$fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S97$fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S97$font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    S97$text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    g1.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), 

    S88$bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    arialNarrow_12ptFontInfo.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    S88$descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    arialNarrow_12ptFontInfo.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    Paddle_draw@p	PTR struct Paddle size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Paddle_addX@p	PTR struct Paddle size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Paddle_init@p	PTR struct Paddle size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Ball_draw@b	PTR struct Ball size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Ball_Update@b	PTR struct Ball size(2) Largest target is 213
		 -> g1(BANK1[201]), 

    Ball_init@b	PTR struct Ball size(2) Largest target is 213
		 -> g1(BANK1[201]), 


Critical Paths under _main in COMRAM

    _gameControllerInit->_gameControllerController
    _displayInit->_displayController
    _XF_init->___wmul
    _LCD_Init->_LCD_Lowlevel_Init
    _GameParameters_init->_LCD_ButtonCreate
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _XF_scheduleTimer->_ENTERCRITICAL
    _XF_scheduleTimer->_LEAVECRITICAL
    _sleepSM->_sleepController
    _gameControllerSM->_gameControllerController
    _gameControllerSM->_mooveBall
    _moovePaddle->_Paddle_addX
    _Paddle_addX->_LCD_DrawRect
    _mooveBall->_Ball_Update
    _Ball_Update->_Ball_draw
    _gameControllerController->_LCD_SliderUpdate
    _backlightController->_GameParameters_setBackLight
    _XF_pushEvent->___awmod
    _displaySM->_displayController
    _Menu_welcomeDraw->_LCD_DrawText
    _Menu_parametersDraw->_LCD_SliderDraw
    _LCD_SliderDraw->_LCD_SliderUpdate
    _LCD_SliderUpdate->___lwdiv
    _Paddle_draw->_LCD_DrawRect
    _LCD_ButtonDraw->_LCD_DrawText
    _LCD_DrawText->___wmul
    _LCD_ButtonUpdate->_LCD_DrawRect
    _LCD_Bitmap->___lwdiv
    ___wmul->___awdiv
    ___lwdiv->___wmul
    _Ball_draw->_LCD_DrawRect
    _XF_popEvent->___awmod

Critical Paths under _isr in COMRAM

    _isr->_XF_decrementAndQueueTimers
    i2_XF_scheduleTimer->i2_ENTERCRITICAL
    i2_XF_scheduleTimer->i2_LEAVECRITICAL
    _XF_decrementAndQueueTimers->i2_XF_pushEvent
    i2_XF_pushEvent->i2___awmod
    i2_XF_pushEvent->i2___wmul
    _XF_unscheduleTimer->i2_ENTERCRITICAL
    _XF_unscheduleTimer->i2_LEAVECRITICAL

Critical Paths under _main in BANK0

    _Factory_init->_sleepInit
    _sleepInit->_displayInit
    _displayInit->_displayController
    _Factory_exec->_touchScreenSM
    _touchScreenSM->_touchScreenController
    _touchScreenController->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _displaySM->_displayController
    _displayController->_Menu_inGameDraw
    _displayController->_Menu_parametersDraw
    _displayController->_Menu_welcomeDraw
    _Menu_welcomeDraw->_LCD_ButtonDraw
    _Menu_parametersDraw->_LCD_ButtonDraw
    _Menu_inGameDraw->_LCD_ButtonDraw
    _LCD_ButtonDraw->_LCD_Bitmap

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Factory_exec

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  566644
                       _Factory_exec
                       _Factory_init
 ---------------------------------------------------------------------------------
 (1) _Factory_init                                         2     2      0  246959
                                             68 BANK0      2     2      0
                _GameParameters_init
                       _LCD_DrawText
                           _LCD_Fill
                           _LCD_Init
                            _XF_init
                          _sleepInit
 ---------------------------------------------------------------------------------
 (2) _sleepInit                                            2     0      2  224547
                                             66 BANK0      2     0      2
                        _displayInit
                 _gameControllerInit
                    _sleepController
                    _touchScreenInit
 ---------------------------------------------------------------------------------
 (3) _touchScreenInit                                      0     0      0       0
                        _configTouch
 ---------------------------------------------------------------------------------
 (3) _gameControllerInit                                   2     0      2   25052
                                             58 COMRAM     2     0      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (3) _displayInit                                          2     0      2  199343
                                             64 BANK0      2     0      2
                  _displayController
 ---------------------------------------------------------------------------------
 (2) _XF_init                                              2     2      0    3031
                                             31 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      90
                                             22 COMRAM     2     2      0
                  _LCD_Lowlevel_Init
 ---------------------------------------------------------------------------------
 (3) _LCD_Lowlevel_Init                                    5     5      0      60
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GameParameters_init                                  2     0      2    8804
                                             42 COMRAM     2     0      2
                          _Ball_init
                   _LCD_ButtonCreate
                   _LCD_SliderCreate
                        _Paddle_init
 ---------------------------------------------------------------------------------
 (3) _Paddle_init                                          4     0      4     458
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _LCD_SliderCreate                                    22     0     22    1320
                                             17 COMRAM    22     0     22
 ---------------------------------------------------------------------------------
 (3) _LCD_ButtonCreate                                    25     0     25    6478
                                             17 COMRAM    25     0     25
 ---------------------------------------------------------------------------------
 (3) _Ball_init                                            2     0      2     164
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Factory_exec                                         1     1      0  319685
                                              0 BANK1      1     1      0
                        _XF_popEvent
                          _displaySM
                   _gameControllerSM
                            _sleepSM
                      _touchScreenSM
 ---------------------------------------------------------------------------------
 (2) _touchScreenSM                                        5     3      2   24025
                                             80 BANK0      5     3      2
              _touchScreenController
 ---------------------------------------------------------------------------------
 (3) _touchScreenController                               32    30      2   23749
                                             48 BANK0     32    30      2
                _GameParameters_setX
                _GameParameters_setY
                       _LCD_DrawText
                   _XF_scheduleTimer
                            ___fldiv
                            ___fltol
                           ___xxtofl
                      _configMeasure
                        _configTouch
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             16    10      6    8777
                                             34 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6    8111
                                             26 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           42    36      6    7638
                                             62 COMRAM     8     2      6
                                             18 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5863
                                             44 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3597
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1537
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     183
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     613
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     625
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _configTouch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _configMeasure                                        1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     566
                                             17 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             56 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2003
                                             31 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _XF_scheduleTimer                                     5     1      4     789
                                             18 COMRAM     5     1      4
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setY                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setX                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sleepSM                                              3     3      0     124
                                             19 COMRAM     3     3      0
                    _sleepController
 ---------------------------------------------------------------------------------
 (3) _sleepController                                      2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _gameControllerSM                                    27    25      2   94771
                                             58 COMRAM     7     5      2
                       _LCD_DrawRect
                        _Paddle_draw
           _gameControllerController
                          _mooveBall
                        _moovePaddle
 ---------------------------------------------------------------------------------
 (3) _moovePaddle                                          2     0      2   24923
                                             46 COMRAM     2     0      2
            _GameParameters_resetPos
                       _LCD_InButton
                        _Paddle_addX
                        _Paddle_draw
 ---------------------------------------------------------------------------------
 (4) _Paddle_addX                                         10     4      6   11180
                                             36 COMRAM    10     4      6
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (3) _mooveBall                                            2     0      2   23435
                                             56 COMRAM     2     0      2
                        _Ball_Update
                     _checkCollision
 ---------------------------------------------------------------------------------
 (4) _checkCollision                                       8     6      2    2198
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _Ball_Update                                         10     8      2   21085
                                             46 COMRAM    10     8      2
                          _Ball_draw
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (4) _gameControllerController                             4     2      2   24931
                                             54 COMRAM     4     2      2
            _GameParameters_resetPos
                       _LCD_InButton
                       _LCD_InSlider
                   _LCD_SliderUpdate
                       _XF_pushEvent
                _backlightController
 ---------------------------------------------------------------------------------
 (5) _backlightController                                  4     2      2    3552
                                             23 COMRAM     4     2      2
        _GameParameters_setBackLight
 ---------------------------------------------------------------------------------
 (6) _GameParameters_setBackLight                          6     2      4    2284
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _XF_pushEvent                                         3     2      1    1569
                                             23 COMRAM     3     2      1
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) _LCD_InSlider                                        10     4      6     580
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _LCD_InButton                                        10     4      6    1930
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _GameParameters_resetPos                              2     0      2     692
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _displaySM                                            5     3      2  199591
                                             64 BANK0      5     3      2
                  _displayController
 ---------------------------------------------------------------------------------
 (4) _displayController                                    4     2      2  199222
                                             68 COMRAM     2     2      0
                                             62 BANK0      2     0      2
                    _Menu_inGameDraw
                _Menu_parametersDraw
                   _Menu_welcomeDraw
 ---------------------------------------------------------------------------------
 (5) _Menu_welcomeDraw                                     2     0      2   53606
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (5) _Menu_parametersDraw                                  2     0      2   80097
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
                     _LCD_SliderDraw
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderDraw                                      14    12      2   26460
                                             54 COMRAM    14    12      2
                       _LCD_DrawRect
                   _LCD_SliderUpdate
 ---------------------------------------------------------------------------------
 (5) _LCD_SliderUpdate                                    16    14      2   15656
                                             38 COMRAM    16    14      2
                       _LCD_DrawRect
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _Menu_inGameDraw                                      2     0      2   64976
                                             60 BANK0      2     0      2
                          _Ball_draw
                     _LCD_ButtonDraw
                           _LCD_Fill
                        _Paddle_draw
 ---------------------------------------------------------------------------------
 (6) _Paddle_draw                                          6     4      2   10690
                                             36 COMRAM     6     4      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_Fill                                             8     6      2     626
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonDraw                                      32    30      2   42936
                                             28 BANK0     32    30      2
                         _LCD_Bitmap
                   _LCD_ButtonUpdate
                       _LCD_DrawRect
                       _LCD_DrawText
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawText                                        34    21     13    9861
                                             31 COMRAM    34    21     13
                            ___awdiv
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     400
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1105
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _LCD_ButtonUpdate                                    18    16      2   11891
                                             36 COMRAM    18    16      2
                       _LCD_DrawRect
                           _LCD_Read
 ---------------------------------------------------------------------------------
 (8) _LCD_Read                                            10     6      4     548
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _LCD_Bitmap                                          38    32      6    7372
                                             38 COMRAM    10     4      6
                                              0 BANK0     28    28      0
                            _RGB2LCD
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2802
                                             25 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     901
                                             31 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _RGB2LCD                                             14    12      2     499
                                             17 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (6) _Ball_draw                                           10     8      2   10479
                                             36 COMRAM    10     8      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawRect                                        19     8     11   10175
                                             17 COMRAM    19     8     11
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                          2     2      0    1016
                                             23 COMRAM     2     2      0
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     793
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _LEAVECRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ENTERCRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 4     4      0    2339
                                             13 COMRAM     4     4      0
         _XF_decrementAndQueueTimers
                     i2_XF_pushEvent
                 i2_XF_scheduleTimer
 ---------------------------------------------------------------------------------
 (13) i2_XF_scheduleTimer                                  5     1      4     328
                                              1 COMRAM     5     1      4
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (13) _XF_decrementAndQueueTimers                          4     4      0    1408
                                              9 COMRAM     4     4      0
                 _XF_unscheduleTimer
                     i2_XF_pushEvent
                           i2___wmul
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4     419
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) i2_XF_pushEvent                                      3     2      1     603
                                              6 COMRAM     3     2      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
                          i2___awmod
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) _XF_unscheduleTimer                                  2     1      1     208
                                              1 COMRAM     2     1      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (14) i2_LEAVECRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_ENTERCRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Factory_exec
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _displaySM
       _displayController
         _Menu_inGameDraw
           _Ball_draw
             _LCD_DrawRect
           _LCD_ButtonDraw
             _LCD_Bitmap
               _RGB2LCD
               ___lwdiv
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___lwmod
               ___wmul
             _LCD_ButtonUpdate
               _LCD_DrawRect
               _LCD_Read
             _LCD_DrawRect
             _LCD_DrawText
               ___awdiv
               ___wmul
               _strlen
             ___awdiv
             _strlen
           _LCD_Fill
           _Paddle_draw
             _LCD_DrawRect
         _Menu_parametersDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
           _LCD_SliderDraw
             _LCD_DrawRect
             _LCD_SliderUpdate
               _LCD_DrawRect
               ___lwdiv
               ___wmul
         _Menu_welcomeDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
     _gameControllerSM
       _LCD_DrawRect
       _Paddle_draw
       _gameControllerController
         _GameParameters_resetPos
         _LCD_InButton
         _LCD_InSlider
         _LCD_SliderUpdate
         _XF_pushEvent
           _ENTERCRITICAL
           _LEAVECRITICAL
           ___awmod
         _backlightController
           _GameParameters_setBackLight
       _mooveBall
         _Ball_Update
           _Ball_draw
           _LCD_DrawRect
         _checkCollision
       _moovePaddle
         _GameParameters_resetPos
         _LCD_InButton
         _Paddle_addX
           _LCD_DrawRect
         _Paddle_draw
     _sleepSM
       _sleepController
     _touchScreenSM
       _touchScreenController
         _GameParameters_setX
         _GameParameters_setY
         _LCD_DrawText
         _XF_scheduleTimer
           _ENTERCRITICAL
           _LEAVECRITICAL
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _configMeasure
         _configTouch
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
   _Factory_init
     _GameParameters_init
       _Ball_init
       _LCD_ButtonCreate
       _LCD_SliderCreate
       _Paddle_init
     _LCD_DrawText
     _LCD_Fill
     _LCD_Init
       _LCD_Lowlevel_Init
     _XF_init
       ___wmul
     _sleepInit
       _displayInit
         _displayController
       _gameControllerInit
         _gameControllerController
       _sleepController
       _touchScreenInit
         _configTouch

 _isr (ROOT)
   _XF_decrementAndQueueTimers
     _XF_unscheduleTimer
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
     i2_XF_pushEvent
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
       i2___awmod
       i2___wmul (ARG)
     i2___wmul
   i2_XF_pushEvent
   i2_XF_scheduleTimer
     i2_ENTERCRITICAL
     i2_LEAVECRITICAL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      1      CA       6       78.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     55      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4D       1       81.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B7       9        0.0%
DATA                 0      0     1B7      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Sep 03 12:59:35 2021

                      _LCD_ButtonDraw 0E54                           ?_LCD_Bitmap 0027  
                                   l7 5C10                          ___fldiv@aexp 0038  
                        ___fldiv@bexp 0037                      _LCD_ButtonCreate 464E  
                        ___fldiv@sign 0030                          ?_displayInit 00A0  
                __end_of_Factory_exec 5B22                  __end_of_Factory_init 50F4  
                                  l10 4438                                    l20 5538  
                                  l13 54B0                                    l31 5638  
                                  l28 40C0                                    l98 50F2  
                                  _g1 0100                          ___awdiv@sign 0017  
             __end_of_sleepController 5D9A                     ??i2_ENTERCRITICAL 0001  
            __end_of_Menu_welcomeDraw 56B2                   ___wmul@multiplicand 001C  
                backlightController@g 0018                      _LCD_ButtonUpdate 3334  
                       ?_LCD_InButton 0012                         ?_LCD_InSlider 0012  
                       ?_LCD_DrawRect 0012                         ?_LCD_DrawText 0020  
                                 l102 5B20                                   l210 4EC6  
                                 l203 30C6                                   l134 5CE6  
                                 l223 1816                                   l143 5DF4  
                                 l304 20FE                                   l208 4E82  
                                 l216 492E                                   l313 0E52  
                                 l129 2802                                   l226 4546  
                                 l146 5ECE                                   l307 4F84  
                                 l235 3568                                   l244 1340  
                                 l172 58DC                                   l149 5EB8  
                                 l501 319E                                   l229 4746  
                                 l166 56B0                                   l510 5EA2  
                                 l255 4A0C                                   l272 29AC  
                                 l248 4AEA                                   l281 2B12  
                                 l265 28E8                                   l169 55BA  
                                 l409 52F4                                   l610 362A  
                                 l418 5D98                                   l275 2A0A  
                                 l283 2B3C                                   l267 28F4  
                                 l515 5BC2                                   l507 3332  
                                 l604 3C8C                                   l701 5940  
                                 l278 2AA4                                   l630 042C  
                                 l622 47BC                                   l383 4202  
                                 l543 4C7E                                   l623 4830  
                                 l711 5724                                   l552 5876  
                                 l624 4840                                   l528 5F3A  
                                 l705 5ACA                                   l609 35CC  
                                 l641 0790                                   l377 5392  
                                 l634 041A                                   l490 5426  
                                 l731 5EE4                                   l619 3798  
                                 l627 5E86                                   l652 07F2  
                                 l396 5E1C                                   l645 077E  
                                 l727 5EFA                                   l479 5F68  
                                 l656 085C                                   l496 30D4  
                                 l497 30DC                                   l682 1CB4  
                                 l587 5F4C                                   l676 1C98  
                                 l909 3F78                                   l782 5E42  
                                 l776 5F52                                   l697 503C  
                                 l896 3E14                                   _GIE 007F97  
                                 _PR2 000FBB                                   _abs 5CE8  
                                 _pad 4D44                                   _isr 0008  
                configMeasure@channel 0012                       ??_ENTERCRITICAL 0012  
                        ___awmod@sign 0017                                   prod 000FF3  
                                 wreg 000FE8                __size_of_touchScreenSM 0094  
                     __end_of_RGB2LCD 4F86                          ___fltol@exp1 0042  
                    _touchScreenState 00DE                           _Ball_Update 4326  
                       ??_Paddle_addX 002B                                  l1013 4D42  
                                l1026 51A2                                  ?_abs 0024  
                                l1500 2BE6                                  l1079 464C  
                                l1280 5798                                  l1440 3B00  
                                l4000 2EEA                                  l1273 5790  
                                l1290 59A4                                  l4010 2EF8  
                                l4002 2EEC                                  l1283 599C  
                                l1451 3A98                                  l1531 5A62  
                                l1364 2498                                  l1444 3A3C  
                                l1532 5A6A                                  l1460 5B72  
                                l4100 2F96                                  l4020 2F06  
                                l4012 2EFA                                  l4004 2EEE  
                                l1437 39A4                                  l1525 394C  
                                l1366 22F8                                  l1518 2E1E  
                                l4110 2FA8                                  l4102 2F98  
                                l4030 2F18                                  l4022 2F08  
                                l4014 2EFC                                  l4006 2EF4  
                                l1375 233E                                  l1551 4BB4  
                                l1536 5D1E                                  l4200 3056  
                                l4120 2FBE                                  l4112 2FAE  
                                l4104 2F9E                                  l4040 2F2A  
                                l4032 2F1A                                  l4024 2F0E  
                                l4016 2F02                                  l4008 2EF6  
                                l1377 23B6                                  l1369 22BC  
                                l1378 23A4                                  l1562 5F6A  
                                l1490 4DCA                                  l4210 3068  
                                l4202 3058                                  l4130 2FD0  
                                l4122 2FC0                                  l4114 2FB0  
                                l4106 2FA0                                  l4050 2F38  
                                l4042 2F2C                                  l4034 2F1C  
                                l4026 2F10                                  l4018 2F04  
                                l1539 5D26                                  l1492 4E04  
                                l4220 307E                                  l4212 306E  
                                l4204 305E                                  l4140 2FE2  
                                l4132 2FD6                                  l4124 2FC6  
                                l4116 2FB6                                  l4108 2FA6  
                                l4060 2F4A                                  l4052 2F3E  
                                l4044 2F2E                                  l4036 2F22  
                                l4028 2F16                                  l4230 308C  
                                l4222 3080                                  l4214 3070  
                                l4206 3060                                  l4150 2FF4  
                                l4142 2FE4                                  l4134 2FD8  
                                l4126 2FC8                                  l4118 2FB8  
                                l4070 2F5C                                  l4062 2F4C  
                                l4054 2F40                                  l4046 2F30  
                                l4038 2F24                                  l1559 5CA2  
                                l1487 4D88                                  l1568 5C5E  
                                l4240 30A2                                  l4232 3092  
                                l4224 3082                                  l4216 3076  
                                l4208 3066                                  l4160 300A  
                                l4152 2FFA                                  l4144 2FEA  
                                l4136 2FDA                                  l4128 2FCE  
                                l4080 2F6E                                  l4072 2F5E  
                                l4064 2F52                                  l4056 2F42  
                                l4048 2F36                                  l1498 2BDE  
                                l4250 30B0                                  l4242 30A4  
                                l4234 3094                                  l4226 3084  
                                l4218 3078                                  l4170 301C  
                                l4162 300C                                  l4154 2FFC  
                                l4146 2FEC                                  l4138 2FDC  
                                l4090 2F80                                  l4082 2F70  
                                l4074 2F60                                  l4066 2F54  
                                l4058 2F44                                  l4260 30C2  
                                l4252 30B6                                  l4244 30AA  
                                l4236 309A                                  l4228 308A  
                                l4180 3032                                  l4172 3022  
                                l4164 3012                                  l4156 3002  
                                l4148 2FF2                                  l4092 2F86  
                                l4084 2F76                                  l4076 2F66  
                                l4068 2F5A                                  l4262 30C4  
                                l4254 30B8                                  l4246 30AC  
                                l4238 309C                                  l4190 3044  
                                l4182 3034                                  l4174 3024  
                                l4166 3014                                  l4158 3004  
                                l4094 2F88                                  l4086 2F78  
                                l4078 2F68                                  l7000 5BFC  
                                l4256 30BE                                  l4248 30AE  
                                l4192 304A                                  l4184 303A  
                                l4176 302A                                  l4168 301A  
                                l4096 2F8E                                  l4088 2F7E  
                                l7010 5500                                  l7002 54B2  
                                l3730 52FE                                  l4258 30C0  
                                l4194 304C                                  l4186 303C  
                                l4178 302C                                  l4098 2F90  
                                l7020 4672                                  l7012 5510  
                                l7004 54C4                                  l3732 5302  
                                l4196 3052                                  l4188 3042  
                                l3900 2E2E                                  l7030 46D6  
                                l7022 4686                                  l7014 5524  
                                l7006 54D4                                  l3750 534E  
                                l3734 5304                                  l4198 3054  
                                l3910 2E42                                  l3902 2E30  
                                ?_pad 0022                                  l8000 29BC  
                                l7040 4736                                  l7032 46EA  
                                l7024 469A                                  l7016 464E  
                                l7008 54E8                                  l3760 5378  
                                l3744 531A                                  l3736 5306  
                                l3728 52F6                                  l3920 2E5E  
                                l3912 2E54                                  l8010 29DE  
                                l8002 29C0                                  l7034 46FE  
                                l7026 46AE                                  l7018 465E  
                                l7050 488E                                  l7042 4842  
                                l3746 5328                                  l3738 5308  
                                l3930 2E70                                  l3922 2E64  
                                l3914 2E58                                  l8100 2A96  
                                l8020 29EE                                  l8012 29E0  
                                l8004 29D6                                  l7036 4712  
                                l7028 46C2                                  l7060 48F2  
                                l7052 48A2                                  l7044 4852  
                                l3756 535E                                  l3748 5334  
                                l3940 2E82                                  l3932 2E72  
                                l3924 2E66                                  l3916 2E5A  
                                l3908 2E34                                  l8110 2AD2  
                                l8102 2A98                                  l8030 29FC  
                                l8022 29F0                                  l8014 29E6  
                                l8006 29DA                                  l7038 4726  
                                l7062 4906                                  l7054 48B6  
                                l7046 4866                                  l7230 24D4  
                                l7222 249A                                  l3758 536C  
                                l3950 2E94                                  l3942 2E84  
                                l3934 2E78                                  l3926 2E6C  
                                l3918 2E5C                                  l8120 2AE0  
                                l8112 2AD4                                  l8104 2AB4  
                                l8040 2A38                                  l8032 29FE  
                                l8024 29F6                                  l8016 29E8  
                                l8008 29DC                                  l8200 4110  
                                l7064 491A                                  l7056 48CA  
                                l7048 487A                                  l7240 2592  
                                l7232 24E8                                  l7224 24AA  
                                l3960 2EA6                                  l3952 2E96  
                                l3944 2E86                                  l3936 2E7A  
                                l3928 2E6E                                  l8130 2AF0  
                                l8122 2AE2                                  l8114 2AD6  
                                l8106 2AB8                                  l8050 2A46  
                                l8042 2A3A                                  l8034 2A1A  
                                l8026 29F8                                  l8018 29EA  
                                l8210 4122                                  l8202 4116  
                                l9010 2B3E                                  l7058 48DE  
                                l7250 27A4                                  l7242 25FC  
                                l7234 24F8                                  l7226 24AC  
                                l3970 2EB8                                  l3962 2EAC  
                                l3954 2E9C                                  l3946 2E8C  
                                l3938 2E80                                  l3890 2E20  
                                l8140 2B00                                  l8132 2AF2  
                                l8124 2AE6                                  l8116 2AD8  
                                l8108 2ACE                                  l8060 2A56  
                                l8052 2A48                                  l8044 2A3C  
                                l8036 2A1E                                  l8028 29FA  
                                l8220 412C                                  l8212 4124  
                                l8204 4118                                  l9100 4E36  
                                l8300 3D28                                  l9020 2BB8  
                                l9012 2B5E                                  l7244 2666  
                                l7236 2510                                  l7228 24C0  
                                l3980 2EC6                                  l3972 2EBA  
                                l3964 2EAE                                  l3956 2E9E  
                                l3948 2E8E                                  l3892 2E24  
                                l8150 2B26                                  l8142 2B02  
                                l8134 2AF6                                  l8126 2AE8  
                                l8118 2ADE                                  l8070 2A66  
                                l8062 2A58                                  l8054 2A4C  
                                l8046 2A3E                                  l8038 2A34  
                                l8230 413A                                  l8222 412E  
                                l8214 4126                                  l8206 411E  
                                l9110 4E44                                  l9102 4E38  
                                l8310 3DAA                                  l8302 3D3C  
                                l9030 2C14                                  l9022 2BD2  
                                l9014 2B88                                  l7246 26D0  
                                l7238 2528                                  l3990 2ED8  
                                l3982 2ECC                                  l3974 2EC0  
                                l3966 2EB0                                  l3958 2EA4  
                                l3894 2E28                                  l8144 2B04  
                                l8136 2AF8                                  l8128 2AEE  
                                l8080 2A74                                  l8072 2A68  
                                l8064 2A5C                                  l8056 2A4E  
                                l8048 2A44                                  l8240 4180  
                                l8232 413C                                  l8224 4130  
                                l8216 4128                                  l8208 4120  
                                l8160 40CC                                  l8152 40C2  
                                l8400 4D3A                                  l9200 1280  
                                l9120 4E5A                                  l9112 4E4A  
                                l9104 4E3E                                  l8320 3DF4  
                                l8312 3DAC                                  l8304 3D4A  
                                l9040 2CB4                                  l9032 2C1C  
                                l9024 2BEE                                  l9016 2BA8  
                                l7248 273A                                  l3992 2EDA  
                                l3984 2ECE                                  l3976 2EC2  
                                l3968 2EB2                                  l3896 2E2A  
                                l8146 2B06                                  l8138 2AFE  
                                l8090 2A88                                  l8082 2A78  
                                l8074 2A6A                                  l8066 2A5E  
                                l8058 2A54                                  l8410 5748  
                                l8250 41C4                                  l8242 4186  
                                l8234 415E                                  l8226 4132  
                                l8218 412A                                  l8170 40DC  
                                l8162 40D2                                  l8154 40C6  
                                l9202 12CC                                  l9130 4E6C  
                                l9122 4E5C                                  l9114 4E4C  
                                l9106 4E40                                  l9210 447A  
                                l8314 3DBE                                  l8306 3D5C  
                                l8330 3E48                                  l9050 2D72  
                                l9042 2CBA                                  l9034 2C24  
                                l9026 2C00                                  l9018 2BB6  
                                l3994 2EE0                                  l3986 2ED4  
                                l3978 2EC4                                  l3898 2E2C  
                                l9220 5EE8                                  l8148 2B22  
                                l8092 2A8A                                  l8084 2A7A  
                                l8076 2A70                                  l8068 2A64  
                                l8420 5782                                  l8412 5750  
                                l8404 5726                                  l8260 41F6  
                                l8252 41C6                                  l8244 4188  
                                l8236 417C                                  l8228 4134  
                                l8180 40F2                                  l8172 40E2  
                                l8164 40D4                                  l8156 40C8  
                                l8500 1ECC                                  l9204 1334  
                                l9140 4E7A                                  l9132 4E6E  
                                l9124 4E62                                  l9116 4E52  
                                l9108 4E42                                  l9212 448E  
                                l8308 3D8A                                  l8316 3DC4  
                                l8340 3EA0                                  l8332 3E4C  
                                l8324 3E16                                  l9060 2DC0  
                                l9052 2D8C                                  l9036 2C2A  
                                l9044 2D1E                                  l9028 2C0E  
                                l9300 393A                                  l3996 2EE2  
                                l3988 2ED6                                  ?_isr 0001  
                                l9222 5EF8                                  l9230 50F8  
                                l8094 2A90                                  l8086 2A80  
                                l8078 2A72                                  l8270 4F7C  
                                l8422 5784                                  l8414 575E  
                                l8406 572E                                  l8430 595C  
                                l8262 41FA                                  l8254 41CA  
                                l8246 41A4                                  l8238 417E  
                                l8190 4100                                  l8182 40F4  
                                l8174 40E4                                  l8166 40D6  
                                l8158 40CA                                  l8510 1EDA  
                                l8502 1ECE                                  l9150 4EAC  
                                l9134 4E70                                  l9126 4E64  
                                l9118 4E54                                  l9214 44C2  
                                l9206 443A                                  l9310 5644  
                                l8318 3DD4                                  l8350 3F22  
                                l8342 3EB4                                  l8334 3E5A  
                                l8326 3E1A                                  l9062 2DD2  
                                l9046 2D3A                                  l9054 2D9A  
                                l9038 2CAC                                  l3998 2EE8  
                                l9224 5ED2                                  l9240 5128  
                                l9232 5106                                  l8096 2A92  
                                l8088 2A82                                  l9072 5428  
                                l8424 578A                                  l8416 5764  
                                l8408 5740                                  l8440 5996  
                                l8432 5964                                  l8256 41CC  
                                l8248 41C2                                  l8192 4102  
                                l8184 40F6                                  l8176 40EA  
                                l8168 40DA                                  l8360 4C80  
                                l8600 2046                                  l8520 1EFC  
                                l8512 1EDC                                  l8504 1ED2  
                                l9152 4EB0                                  l9128 4E6A  
                                l9080 4E12                                  l9216 44FE  
                                l9208 444A                                  l9320 5544  
                                l9312 567A                                  l9400 5904  
                                l9160 5CD6                                  l8280 3C8E  
                                l8344 3EC2                                  l8352 3F28  
                                l8336 3E7A                                  l8328 3E28  
                                l9064 2DDE                                  l9056 2DAC  
                                l9048 2D58                                  l9226 5EE2  
                                l9250 516E                                  l9242 513A  
                                l9234 510E                                  l8098 2A94  
                                l8266 4EC8                                  l8418 577A  
                                l8434 5972                                  l8426 5942  
                                l8274 5E1E                                  l8258 41EE  
                                l8194 4106                                  l8186 40F8  
                                l8178 40EC                                  l8370 4CAC  
                                l8362 4C84                                  l8602 2048  
                                l8610 2052                                  l8530 1F0A  
                                l8522 1EFE                                  l8514 1EDE  
                                l8506 1ED4                                  l9170 0EB2  
                                l9162 0E54                                  l9146 4E92  
                                l9090 4E20                                  l9082 4E14  
                                l9074 55BC                                  l9330 5882  
                                l9218 453A                                  l9322 557A  
                                l9314 568C                                  l9306 5DCC  
                                l9410 5934                                  l9402 5918  
                                l9154 5CA4                                  l8290 3CD2  
                                l8282 3C92                                  l8354 3F38  
                                l8346 3EF0                                  l8338 3E98  
                                l8450 4D80                                  l8442 4D44  
                                l9066 2DE6                                  l9058 2DBA  
                                l9260 519A                                  l9252 5176  
                                l9244 5142                                  l9236 5112  
                                l9228 50F4                                  l7900 28B6  
                                l8268 4F3C                                  l8436 5988  
                                l8428 5954                                  l8276 5E3A  
                                l8196 4108                                  l8188 40FE  
                                l8700 3404                                  l8380 4CDA  
                                l8372 4CB4                                  l8364 4C92  
                                l8620 207E                                  l8604 204A  
                                l8612 2054                                  l8540 1F16  
                                l8532 1F0C                                  l8524 1F02  
                                l8516 1EF6                                  l8508 1ED6  
                                l9180 0FF2                                  l9172 0EE6  
                                l9164 0E5E                                  l9148 4E96  
                                l9092 4E26                                  l9084 4E16  
                                l9076 4E06                                  l9332 5894  
                                l9324 558C                                  l9316 569E  
                                l9308 563A                                  l9340 4A0E  
                                l9412 5938                                  l9404 591E  
                                l9156 5CB4                                  l9420 183C  
                                l9500 4326                                  l8292 3CF2  
                                l8284 3CA0                                  l8356 3F58  
                                l8348 3F10                                  l7820 4B1A  
                                l8460 4DEC                                  l8452 4D94  
                                l8444 4D52                                  l9068 2DF6  
                                l9254 517C                                  l9246 514A  
                                l9238 5120                                  l7910 28C6  
                                l7902 28B8                                  l8438 5990  
                                l8710 0866                                  l8198 410E  
                                l8702 3424                                  l8390 4D14  
                                l8382 4CE2                                  l8374 4CB8  
                                l8366 4C9A                                  l7830 5C1E  
                                l8630 208C                                  l8622 2082  
                                l8614 2066                                  l8550 1F22  
                                l8542 1F18                                  l8534 1F0E  
                                l8526 1F04                                  l8518 1EFA  
                                l8470 1CC2                                  l9190 118A  
                                l9182 1006                                  l9174 0F16  
                                l9166 0E6E                                  l9094 4E28  
                                l9086 4E18                                  l9078 4E0A  
                                l9334 58A6                                  l9326 55AA  
                                l9318 553A                                  l9342 4A2C  
                                l9414 593E                                  l9158 5CD0  
                                l9430 18D8                                  l9422 1860  
                                l9502 43AC                                  l9510 3FFA  
                                l8294 3CF6                                  l8286 3CC0  
                                l7822 4B38                                  l7814 4AEC  
                                l8454 4DA8                                  l8446 4D66  
                                l9270 37DC                                  l9248 5158  
                                l9256 5182                                  l7920 28D8  
                                l7912 28CC                                  l7904 28BC  
                                l8800 0A40                                  l8720 0936  
                                l8712 0894                                  l8704 3438  
                                l8392 4D16                                  l8384 4CF0  
                                l8376 4CC0                                  l8368 4C9E  
                                l7832 5C22                                  l8640 20B2  
                                l8632 208E                                  l8624 2084  
                                l8616 206A                                  l8560 1F50  
                                l8552 1F44                                  l8544 1F1A  
                                l8536 1F10                                  l8528 1F06  
                                l8480 1D98                                  l8472 1D10  
                                l9192 1192                                  l9184 1082  
                                l9176 0F90                                  l9168 0E9E  
                                l9096 4E2E                                  l9088 4E1E  
                                l9336 58B8                                  l9328 5878  
                                l9352 4A78                                  l9408 5924  
                                l9440 1980                                  l9432 18FC  
                                l9424 1878                                  l9600 35B6  
                                l9504 43E8                                  l9512 4050  
                                l9520 5EBA                                  l8296 3D02  
                                l8288 3CC4                                  l8464 5CE8  
                                l7824 4B6E                                  l7816 4AFE  
                                l7840 5C6C                                  l8456 4DAC  
                                l8448 4D74                                  l9272 37E0  
                                l9264 379A                                  l9258 5192  
                                l7930 291E                                  l7922 28DA  
                                l7914 28CE                                  l7906 28BE  
                                l7850 280C                                  l8810 0A62  
                                l8802 0A42                                  l8730 0986  
                                l8722 0958                                  l8714 08B4  
                                l8706 3468                                  l8394 4D1C  
                                l8386 4CF6                                  l8378 4CD2  
                                l7834 5C52                                  l8642 20CA  
                                l8626 2086                                  l8570 1F5C  
                                l8562 1F52                                  l8554 1F48  
                                l8546 1F1E                                  l8538 1F12  
                                l8490 1E76                                  l8482 1DAA  
                                l8474 1D5E                                  l9194 11EC  
                                l9186 10FA                                  l9178 0FBA  
                                l9098 4E30                                  l9338 58CA  
                                l8650 13F0                                  l9346 4A32  
                                l9370 494E                                  l9450 1A1C  
                                l9442 1998                                  l9434 1920  
                                l9426 189C                                  l9418 1818  
                                l9610 36F0                                  l9602 3614  
                                l9514 4064                                  l9506 3F7A  
                                l9522 5EA4                                  l9530 5E9C  
                                l8298 3D20                                  l8466 5D02  
                                l7818 4B10                                  l7842 5C7E  
                                l8458 4DD8                                  l9282 38AA  
                                l9274 3804                                  l9266 37BE  
                                l7940 2944                                  l7932 2922  
                                l7924 28DC                                  l7916 28D4  
                                l7908 28C4                                  l7860 2878  
                                l7852 2822                                  l8900 0BF4  
                                l8820 0A70                                  l8812 0A64  
                                l8804 0A44                                  l8740 099E  
                                l8732 0988                                  l8724 097E  
                                l8716 08D4                                  l8708 085E  
                                l8388 4D0C                                  l8396 4D22  
                                l7828 5C12                                  l8644 20CE  
                                l8628 208A                                  l8636 2094  
                                l8580 1FA6                                  l8572 1F5E  
                                l8564 1F54                                  l8556 1F4A  
                                l8548 1F20                                  l8492 1EC2  
                                l8484 1DBC                                  l8476 1D60  
                                l8468 1CB6                                  l9196 1248  
                                l9188 111A                                  l8660 1504  
                                l8652 1418                                  l9364 4AE8  
                                l9380 499A                                  l9460 1AB8  
                                l9452 1A40                                  l9444 19BC  
                                l9436 1938                                  l9428 18C0  
                                l9612 36FC                                  l9604 3672  
                                l9516 4084                                  l9508 3FE8  
                                l9700 2180                                  l9540 5B98  
                                l9532 5E9E                                  l9524 5E88  
                                l7844 5C82                                  l9284 38CE  
                                l9292 38FC                                  l9276 3828  
                                l9268 37CC                                  l7950 2954  
                                l7942 2946                                  l7926 2904  
                                l7918 28D6                                  l7870 2888  
                                l7862 287C                                  l7934 293C  
                                l7854 283A                                  l7846 2804  
                                l8910 0C0C                                  l8902 0C00  
                                l8830 0A80                                  l8822 0A72  
                                l8814 0A68                                  l8806 0A5C  
                                l8750 09C6                                  l8742 09AA  
                                l8734 098E                                  l8726 0982  
                                l8718 0900                                  l8398 4D32  
                                l8590 2034                                  l8582 1FF6  
                                l8638 2096                                  l8574 1F60  
                                l8566 1F58                                  l8558 1F4C  
                                l8494 1EC6                                  l8486 1DDA  
                                l8478 1D88                                  l9198 124A  
                                l8670 15DA                                  l8662 1524  
                                l8654 1438                                  l8646 1342  
                                l9358 4A9E                                  l9374 4954  
                                l9470 1B60                                  l9462 1ADC  
                                l9454 1A58                                  l9446 19E0  
                                l9438 195C                                  l9614 3744  
                                l9606 368C                                  l9630 01B2  
                                l9518 4098                                  l9550 56B8  
                                l9710 21B4                                  l9702 2182  
                                l9542 5B9C                                  l9534 5EA0  
                                l9526 5E96                                  l7838 5C60  
                                l9294 390A                                  l9286 38DC  
                                l9278 3872                                  l7960 2964  
                                l7952 2956                                  l7944 294C  
                                l7936 2940                                  l7928 2908  
                                l7880 2898                                  l7872 288A  
                                l7864 287E                                  l7856 2850  
                                l7848 2808                                  l8920 0C2E  
                                l8912 0C10                                  l8904 0C04  
                                l8840 0ABC                                  l8832 0A88  
                                l8824 0A74                                  l8816 0A6A  
                                l8808 0A60                                  l8760 09D2  
                                l8752 09C8                                  l8744 09BE  
                                l8736 0990                                  l8728 0984  
                                l8592 2036                                  l8584 201E  
                                l8576 1F68                                  l8568 1F5A  
                                l8496 1EC8                                  l8488 1E1C  
                                l8680 1756                                  l8672 15F6  
                                l8664 1560                                  l8648 1360  
                                l8656 1478                                  l9392 4A0A  
                                l9368 4930                                  l9480 1BFC  
                                l9472 1B78                                  l9464 1B00  
                                l9456 1A7C                                  l9448 19F8  
                                l9608 36D4                                  l9640 0314  
                                l9632 01F8                                  l9624 00C8  
                                l9560 570C                                  l9800 2478  
                                l9720 21FA                                  l9704 2192  
                                l9712 21BC                                  l9544 5BAC  
                                l9536 5B76                                  l9528 5E9A  
                                l9288 38F0                                  l7970 2972  
                                l7962 2966                                  l7954 295C  
                                l7946 294E                                  l7938 2942  
                                l7890 28A8                                  l7882 289A  
                                l7874 288C                                  l7866 2880  
                                l7858 2868                                  l8930 0CE0  
                                l8922 0C6C                                  l8914 0C12  
                                l8906 0C08                                  l8850 0ACA  
                                l8842 0AC0                                  l8826 0A76  
                                l8818 0A6C                                  l8770 09F8  
                                l8762 09D6                                  l8754 09CA  
                                l8746 09C2                                  l8738 0992  
                                l8690 3344                                  l8594 203A  
                                l8586 202E                                  l8578 1F9E  
                                l8498 1ECA                                  l8682 177E  
                                l8674 1666                                  l8666 159C  
                                l8658 1494                                  l9386 49C0  
                                l9482 1C20                                  l9474 1B9C  
                                l9466 1B18                                  l9458 1AA0  
                                l9490 1C98                                  l9618 375E  
                                l9650 04C0                                  l9642 0348  
                                l9634 0240                                  l9626 011E  
                                l9562 570E                                  l9802 2486  
                                l9730 2222                                  l9722 21FE  
                                l9714 21CC                                  l9706 21A2  
                                l9546 5BBE                                  l9538 5B86  
                                l9298 3916                                  l9570 5B34  
                                l6994 5BC4                         ??_Paddle_draw 0027  
                                l7980 2982                                  l7972 2978  
                                l7964 296C                                  l7956 295E  
                                l7948 2950                                  l7892 28AA  
                                l7884 289C                                  l7876 2890  
                                l7868 2882                                  l8940 0CF2  
                                l8932 0CE6                                  l8924 0C78  
                                l8916 0C14                                  l8908 0C0A  
                                l8860 0B02                                  l8852 0ACC  
                                l8844 0AC2                                  l8836 0AA8  
                                l8828 0A78                                  l8780 0A04  
                                l8772 09FA                                  l8764 09D8  
                                l8756 09CE                                  l8748 09C4  
                                l8692 3374                                  l8596 203C  
                                l8588 2032                                  l8684 179E  
                                l8676 1686                                  l8668 15BC  
                                l9580 580E                                  l9396 58E0  
                                l9484 1C38                                  l9476 1BC0  
                                l9468 1B3C                                  l9660 0632  
                                l9652 0516                                  l9644 038E  
                                l9636 0286                                  l9628 015C  
                                l9564 571E                                  l9556 56BC  
                                l9548 56B2                                  l9804 248C  
                                l9740 2270                                  l9716 21E2  
                                l9708 21B2                                  l9820 4572  
                                l9900 3AF0                                  l9492 5A0A  
                                l9572 5B3C                                  l6996 5BD4  
                                l7990 2998                                  l7982 2988  
                                l7974 297A                                  l7966 296E  
                                l7958 2960                                  l7894 28AC  
                                l7886 28A0                                  l7878 2892  
                                l8950 0D26                                  l8942 0CF4  
                                l8934 0CEA                                  l8926 0C92  
                                l8918 0C18                                  l8870 0B1A  
                                l8862 0B0E                                  l8846 0AC4  
                                l8854 0AD0                                  l8838 0AB0  
                                l8790 0A10                                  l8782 0A08  
                                l8774 09FC                                  l8766 09DA  
                                l8758 09D0                                  l8694 3388  
                                l8598 2042                                  l8686 17DA  
                                l8678 16C6                                  l9582 5812  
                                l9590 5842                                  l9398 58E6  
                                l9486 1C5C                                  l9478 1BD8  
                                l9670 07C2                                  l9662 0678  
                                l9654 055C                                  l9646 03D6  
                                l9638 02CE                                  l9558 56DC  
                                l9806 248E                                  l9750 22BA  
                                l9742 2280                                  l9734 2236  
                                l9718 21F2                                  l9726 2212  
                                l9830 45C0                                  l9822 459C  
                                l9814 4548                                  l9494 5A12  
                                l9574 5B44                                  l6998 5BE8  
                                l9910 5F40                                  l7992 299A  
                                l7984 298A                                  l7976 297C  
                                l7968 2970                                  l7896 28AE  
                                l7888 28A2                                  l8960 0DA8  
                                l8952 0D46                                  l8944 0CF6  
                                l8936 0CEC                                  l8928 0C9E  
                                l8880 0B50                                  l8872 0B1C  
                                l8864 0B12                                  l8856 0AF2  
                                l8848 0AC8                                  l8792 0A34  
                                l8784 0A0A                                  l8776 0A00  
                                l8768 09F4                                  l8696 33BC  
                                l8688 3334                                  l9584 5822  
                                l9488 1C80                                  l9672 0828  
                                l9664 06AC                                  l9656 05A4  
                                l9648 0482                                  l9920 5D64  
                                l9760 2308                                  l9752 22C6  
                                l9744 2288                                  l9736 2250  
                                l9728 2222                                  l9680 211A  
                                l9840 45EC                                  l9824 459E  
                                l9816 455E                                  l9496 5A20  
                                l9576 5B60                                  l9568 5B22  
                                l9904 5F28                                  l9912 5F5E  
                                l7994 299C                                  l7986 2990  
                                l7978 2980                                  l7898 28B4  
                                l8970 0DFA                                  l8962 0DE2  
                                l8938 0CEE                                  l8946 0CFA  
                                l8890 0B5E                                  l8882 0B54  
                                l8874 0B1E                                  l8866 0B14  
                                l8858 0AFA                                  l8794 0A38  
                                l8786 0A0C                                  l8778 0A02  
                                l8698 33D8                                  l9586 5832  
                                l9674 085C                                  l9666 06F2  
                                l9658 05EA                                  l9762 231E  
                                l9770 234E                                  l9754 22E4  
                                l9746 2298                                  l9738 2260  
                                l9690 214E                                  l9682 211C  
                                l9850 461C                                  l9826 45AE  
                                l9498 5A46                                  l9930 30D6  
                                l9906 5F2E                                  l9914 5F64  
                                l7996 299E                                  l7988 2992  
                                l8972 0DFC                                  l8964 0DF0  
                                l8980 0E08                                  l8948 0D16  
                                l8892 0B60                                  l8884 0B56  
                                l8868 0B16                                  l8876 0B22  
                                l8956 0D52                                  l8796 0A3A  
                                l8788 0A0E                                  l9596 356A  
                                l9668 073A                                  l9916 5D64  
                                l9772 235C                                  l9764 2324  
                                l9756 22E6                                  l9748 22AC  
                                l9684 212C                                  l9692 2156  
                                l9676 2100                                  l9852 462C  
                                l9836 45D8                                  l9828 45B2  
                                l9860 3960                                  l9940 3198  
                                l9932 30EA                                  l9908 5F3C  
                                l7998 29A0                                  l8990 0E44  
                                l8982 0E24                                  l8974 0E00  
                                l8966 0DF4                                  l8886 0B58  
                                l8894 0B64                                  l8878 0B44  
                                l8958 0D9A                                  l8798 0A3C  
                                l9598 356E                                  l9782 23C6  
                                l9790 240E                                  l9774 2360  
                                l9766 232E                                  l9758 22F6  
                                l9694 2166                                  l9686 213C  
                                l9678 210C                                  l9854 463C  
                                l9846 4600                                  l9838 45E2  
                                l9870 39DE                                  l9862 396E  
                                l9950 3218                                  l9942 31AC  
                                l9934 3114                                  l9926 30C8  
                 __end_of_XF_popEvent 5ACC                                  STR_1 7FBE  
                                l8992 0E46                                  l8976 0E02  
                                l8968 0DF8                                  l8896 0BA0  
                                l8888 0B5C                                  l8984 0E2C  
                                l9792 2428                                  l9784 23D2  
                                l9776 236E                                  l9768 233C  
                                l9696 216C                                  l9688 214C  
                                l9848 460C                                  l9880 3A32  
                                l9872 39E6                                  l9864 39B4  
                                l9960 3232                                  l9952 321C  
                                l9944 31D6                                  l9936 311C  
                                l9928 30CC                                  STR_2 7FB3  
                                STR_3 7FC8                                  l8994 0E48  
                                l8986 0E3E                                  l8978 0E04  
                                l8898 0BA8                                  l9794 243E  
                                l9786 23E0                                  l9778 239C  
                                l9698 2172                                  l9890 3AA8  
                                l9882 3A6E                                  l9874 39F2  
                                l9866 39CA                                  l9858 3950  
                                l9962 3250                                  l9954 3220  
                                l9946 31DE                                  l9938 3186  
                                STR_4 7FD1                                  STR_5 7FE2  
                                l8996 0E4E                                  l8988 0E42  
                                l9980 4748                                  l9796 2458  
                                l9788 240A                                  l9892 3AAC  
                                l9884 3A7A                                  l9876 3A24  
                                l9964 3286                                  l9956 3222  
                                l9948 3204                                  l9972 3306  
                                STR_6 7FF6                                  STR_7 7FFA  
                                l8998 0E50                                  l9982 4790  
                                l9798 2474                                  l9894 3AD0  
                                l9886 3A88                                  l9878 3A26  
                                l9966 329A                                  l9958 3224  
                                l9990 4F86                                  STR_8 7FDA  
                                STR_9 7FA8                                  l9984 4804  
                                l9896 3AE0                                  l9888 3AA6  
                                l9968 32B8                                  l9986 5E6A  
                                l9898 3AEE                                  l9988 5E76  
                                l9996 4F8E                                  l9998 4F9E  
                       ??_Paddle_init 0016                                  u2170 534E  
                                u2171 534A                                  u2180 5392  
                                u2340 2E54                                  u2181 538E  
                                u2341 2E50                                  u6000 0900  
                                u6001 08FC                                  u6010 0932  
                                u6011 092E                                  u6100 0D26  
                                u6020 0958                                  u6101 0D22  
                                u6021 0954                                  u6110 0E24  
                                u6030 097A                                  u6111 0E20  
                                u6031 0976                                  u6120 0E3E  
                                u6040 0AA4                                  u7000 0482  
                                u5400 5CA2                                  u6200 2D3A  
                                u6121 0E3A                                  u6041 0AA0  
                                u7001 047E                                  u5401 5C9E  
                                u6201 2D36                                  u5410 2822  
                                u6050 0AF2                                  u7010 04C0  
                                u6210 2D58                                  u6130 2B70  
                                u5411 281E                                  u6051 0AEE  
                                u7011 04BC                                  u6211 2D54  
                                u6131 2B6A                                  u5420 2850  
                                u6060 0B44                                  u6300 5CD0  
                                u7020 0516                                  u7100 212C  
                                u5340 4AFE                                  u6220 2D72  
                                u6140 2B72                                  u5421 284C  
                                u6061 0B40                                  u6301 5CCC  
                                u7021 0512                                  u7101 2128  
                                u5341 4AFA                                  u6221 2D6E  
                                u5430 2878                                  u6070 0BA0  
                                u6310 0F16                                  u7030 055C  
                                u7110 213C                                  u5350 4B10  
                                u6230 2D8C                                  u6150 2B88  
                                u5431 2874                                  u6071 0B9C  
                                u6311 0F12                                  u7031 0558  
                                u7111 2138                                  u5351 4B0C  
                                u6231 2D88                                  u6151 2B84  
                                u6400 5158                                  u5440 291E  
                                u6080 0C2E                                  u6320 0FBA  
                                u7040 05EA                                  u7200 2308  
                                u7120 2180                                  u5600 3DD4  
                                u5360 4B38                                  u6240 2D9A  
                                u6160 2BB6                                  u6401 5154  
                                u5441 291A                                  u6081 0C2A  
                                u5505 4168                                  u6321 0FB6  
                                u7041 05E6                                  u7201 2304  
                                u7121 217C                                  u5601 3DD0  
                                u5361 4B34                                  u6241 2D96  
                                u6161 2BB2                                  u6410 516E  
                                u5450 2938                                  u6090 0D16  
                                u6330 0FF2                                  u7050 0678  
                                u7210 231E                                  u7130 2192  
                                u5610 3E28                                  u5370 4B6E  
                                u6250 2DAC                                  u6170 2BD2  
                                u6411 516A                                  u5451 2934  
                                u6091 0D12                                  u5515 41AE  
                                u6331 0FEE                                  u7051 0674  
                                u7211 231A                                  u7131 218E  
                                u5611 3E24                                  u5371 4B6A  
                                u6251 2DA8                                  u6171 2BCE  
                                u6420 5192                                  u5460 29D6  
                                u5700 4CF0                                  u5380 5C42  
                                u6340 1280                                  u6500 4AE4  
                                u7060 06F2                                  u7300 2458  
                                u7220 233C                                  u7140 21A2  
                                u5540 3CA0                                  u5620 3E5A  
                                u6260 2DBA                                  u6180 2C00  
                                u6421 518E                                  u5461 29D2  
                                u5525 4F46                                  u5701 4CEC  
                                u6341 127C                                  u6501 4AE0  
                                u7061 06EE                                  u7301 2454  
                                u7221 2338                                  u7141 219E  
                                u5541 3C9C                                  u5621 3E56  
                                u6261 2DB6                                  u6181 2BFC  
                                u6350 5EF8                                  u5470 2A34  
                                u5710 4D0C                                  u5390 5C52  
                                u6510 494E                                  u7070 07C2  
                                u7310 2486                                  u7230 235C  
                                u7150 21E2                                  u5550 3CD2  
                                u5630 3E98                                  u6270 2DD2  
                                u6190 2C0E                                  u6430 37BE  
                                u6351 5EF4                                  u5471 2A30  
                                u5535 4F5C                                  u5711 4D08  
                                u5391 5C4E                                  u6511 494A  
                                u7071 07BE                                  u7311 2482  
                                u7231 2358                                  u7151 21DE  
                                u5551 3CCE                                  u5631 3E94  
                                u6271 2DCE                                  u6191 2C0A  
                                u6431 37BA                                  u6360 5EE2  
                                u5480 2ACE                                  u5720 4D32  
                                u6280 4EAC                                  u6520 4996  
                                u6600 18FC                                  u7080 0828  
                                u7240 236E                                  u7160 2222  
                                u7320 455E                                  u7400 396E  
                                u5640 3EC2                                  u5800 4D74  
                                u6440 3804                                  u4840 54C4  
                                u6361 5EDE                                  u5481 2ACA  
                                u5721 4D2E                                  u6281 4EA8  
                                u6521 4992                                  u6601 18F8  
                                u7081 0824                                  u7241 236A  
                                u7161 221E                                  u7321 455A  
                                u7401 396A                                  u5561 3CFC  
                                u5641 3EBE                                  u5801 4D70  
                                u6441 3800                                  u4841 54C0  
                                u6370 5106                                  u5490 2B3C  
                                u5730 5740                                  u6290 4EC6  
                                u6530 49BC                                  u6610 1920  
                                u7250 239C                                  u7170 2298  
                                u7090 211A                                  u7330 4592  
                                u7410 39CA                                  u5570 3D20  
                                u5650 3EF0                                  u5810 4DCA  
                                u6450 3828                                  u6371 5102  
                                u5491 2B38                                  u5731 573C  
                                u5387 5C38                                  u6291 4EC2  
                                u6531 49B8                                  u6611 191C  
                                u7251 2398                                  u7171 2294  
                                u7091 2116                                  u7411 39C6  
                                u5571 3D1C                                  u5651 3EEC  
                                u5811 4DC6                                  u6451 3824  
                                u6380 5120                                  u5740 575E  
                                u5900 202E                                  u6540 4A06  
                                u6700 1ADC                                  u6620 195C  
                                u7260 23B2                                  u7180 22BA  
                                u7340 45C0                                  u7420 3A20  
                                u5580 3D4A                                  u5660 3F38  
                                u5820 4DD8                                  u6460 38CE  
                                u7500 3114                                  u6381 511C  
                                u5741 575A                                  u5901 202A  
                                u6541 4A02                                  u6701 1AD8  
                                u6621 1958                                  u7261 23AE  
                                u7181 22B6                                  u7341 45BC  
                                u7421 3A1C                                  u5581 3D46  
                                u5661 3F34                                  u5821 4DD4  
                                u6461 38CA                                  u7501 3110  
                                u6390 513A                                  u5750 577A  
                                u5670 4C92                                  u5910 2066  
                                u6470 4A2C                                  u6550 5918  
                                u6710 1B00                                  u6630 1980  
                                u7270 23C6                                  u7190 22E4  
                                u7350 45D4                                  u7430 3A6A  
                                u5590 3D8A                                  u5830 5D02  
                                u7510 31AC                                  u6391 5136  
                                u5751 5776                                  u5671 4C8E  
                                u5911 2062                                  u6471 4A28  
                                u6551 5914                                  u6711 1AFC  
                                u6631 197C                                  u7271 23C2  
                                u7191 22E0                                  u7351 45D0  
                                u7335 4588                                  u7431 3A66  
                                u5591 3D86                                  u5831 5CFE  
                                u7511 31A8                                  u5760 5954  
                                u5680 4CAC                                  u5920 207A  
                                u5840 1D08                                  u6480 4A74  
                                u6720 1B3C                                  u6640 19BC  
                                u6560 183C                                  u7600 528A  
                                u7280 23E0                                  u7360 45FC  
                                u7440 3A88                                  u6800 5A62  
                                u7520 31D6                                  u5761 5950  
                                u5681 4CA8                                  u5921 2076  
                                u6481 4A70                                  u6721 1B38  
                                u6641 19B8                                  u6561 1838  
                                u7601 5286                                  u7281 23DC  
                                u7361 45F8                                  u7441 3A84  
                                u6801 5A5E                                  u7521 31D2  
                                u5770 5972                                  u5690 4CD2  
                                u5930 20B2                                  u5850 1D88  
                                u6490 4A9A                                  u6730 1B60  
                                u6650 19E0                                  u6570 1860  
                                u6810 3FFA                                  u7610 52A2  
                                u7290 2428                                  u7370 461C  
                                u7450 3A98                                  u7530 3232  
                                u5771 596E                                  u5691 4CCE  
                                u5931 20AE                                  u5851 1D84  
                                u6491 4A96                                  u6731 1B5C  
                                u6651 19DC                                  u6571 185C  
                                u6811 3FF6                                  u7611 529E  
                                u7291 2424                                  u7371 4618  
                                u7451 3A94                                  u7531 322E  
                                u5780 5988                                  u5940 20EE  
                                u5860 1D98                                  u7700 4C46  
                                u6740 1B9C                                  u6660 1A1C  
                                u6580 189C                                  u6900 3672  
                                u6820 4050                                  u7540 4790  
                                u7620 52BC                                  u7380 462C  
                                u7460 3AA6                                  u5781 5984  
                                u5861 1D94                                  u7701 4C42  
                                u6741 1B98                                  u6661 1A18  
                                u6581 1898                                  u6901 366E  
                                u6821 404C                                  u7541 478C  
                                u7621 52B8                                  u7381 4628  
                                u7461 3AA2                                  u5950 20FE  
                                u5870 1DBC                                  u6750 1BC0  
                                u6670 1A40                                  u6590 18C0  
                                u6910 36D4                                  u6830 4084  
                                u7550 4804                                  u7710 3B26  
                                u7470 3AE0                                  u7390 3960  
                                u5790 4D52                                  u7630 53AC  
                                u5951 20FA                                  u5871 1DB8  
                                u5847 1CFE                                  u6751 1BBC  
                                u6671 1A3C                                  u6591 18BC  
                                u6911 36D0                                  u6831 4080  
                                u7551 4800                                  u7711 3B22  
                                u7471 3ADC                                  u7391 395C  
                                u5791 4D4E                                  u7631 53A8  
                                u5880 1E14                                  u5960 1360  
                                u6760 1BFC                                  u6680 1A7C  
                                u6920 3744                                  u7720 3B3C  
                                u7480 3AEE                                  u6840 5B86  
                                u7640 53D2                                  u7560 4FBE  
                                u5961 135C                                  u6761 1BF8  
                                u6681 1A78                                  u6921 3740  
                                u7721 3B38                                  u7481 3AEA  
                                u6841 5B82                                  u7641 53CE  
                                u7561 4FBA                                  u5970 15DA  
                                u6770 1C20                                  u6690 1AA0  
                                u6930 011E                                  u7730 3B62  
                                u6850 5BAC                                  u7490 30EA  
                                u7650 53F6                                  u7570 5032  
                                u5947 20E4                                  u5971 15D6  
                                u6771 1C1C                                  u6691 1A9C  
                                u6931 011A                                  u7731 3B5E  
                                u6851 5BA8                                  u7491 30E6  
                                u7651 53F2                                  u7571 502E  
                                u7580 5A88                                  u5980 33D8  
                                u7660 4BD0                                  u6780 1C5C  
                                u6940 015C                                  u7740 3B7A  
                                u6860 56DC                                  u7581 5A84  
                                u5981 33D4                                  u7661 4BCC  
                                u6781 1C58                                  u6941 0158  
                                u7741 3B76                                  u6861 56D8  
                                _RBPU 007F8F                                  u5990 3468  
                                u5894 2012                                  u7670 4BE2  
                                u6790 1C80                                  u6950 01B2  
                                u7750 3B9C                                  u7590 526C  
                                u6870 571E                                  u5991 3464  
                                u5895 200C                                  u5887 1E0A  
                                u7671 4BDE                                  u6791 1C7C  
                                u6951 01AE                                  u7751 3B98  
                                u7591 5268                                  u6871 571A  
                                u7807 5364                                  u7680 4C06  
                                u6880 35B6                                  u6960 01F8  
                                u7760 5AE6                                  u7681 4C02  
                                u6881 35B2                                  u6961 01F4  
                                u7761 5AE2                                  u7690 4C2C  
                                u6890 3614                                  u6970 0286  
                                u7691 4C28                                  u6891 3610  
                                u6971 0282                                  u6980 0314  
                                u6981 0310                                  u6990 038E  
                                u6991 038A                                  u7777 5050  
                                u7787 2E3A                                  u7797 5320  
                                _WPUB 000F61                           displaySM@ev 00A4  
                         LCD_Bitmap@i 007A                                  abs@a 0024  
                                _dbuf 00E0                       ?_checkCollision 0012  
           __size_of_LCD_SliderCreate 00EE                                  _main 5F4E  
                                _dtoa 2B3E                      _XF_scheduleTimer 56B2  
                                _prec 0049                                  _nout 00DB  
                                pad@i 0029                                  pad@p 0026  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 002B  
                                fsr2l 000FD9                                  btemp 004E  
                    Menu_inGameDraw@g 009C                        touchScreenSM@g 00B0  
                                prodh 000FF4                                  prodl 000FF3  
    __end_of_arialNarrow_12ptFontInfo 7FA8                                  start 00C4  
                         RGB2LCD@blue 001C                __end_of_LCD_ButtonDraw 1342  
           __size_of_LCD_SliderUpdate 04D6                       ___fldiv@new_exp 0031  
                      _LCD_SliderDraw 443A                    LCD_InSlider@slider 0012  
                     __end_of_XF_init 503E                          ___param_bank 000000  
              LCD_ButtonCreate@height 0018                    XF_scheduleTimer@ev 0015  
                  XF_scheduleTimer@tm 0013                LCD_ButtonCreate@button 0028  
                               ??_abs 0026                                 ??_pad 0028  
                               ??_isr 000E                      __end_of_LCD_Fill 4EC8  
                      ??_LCD_InButton 0018                      __end_of_LCD_Init 30C8  
                    __end_of_LCD_Read 4204                        ??_LCD_InSlider 0018  
                      ??_LCD_DrawRect 001D           LCD_SliderCreate@cursorWidth 0020  
                               l10000 4FA2                                 l10010 5012  
                               l10002 4FBE                                 l10012 5016  
                               l10020 5E08                                 l10030 5A74  
                               l10110 4BBA                                 l10014 5032  
                               l10022 5E14                                 l10040 5AA4  
                               l10032 5A88                                 l10120 4BF2  
                               l10112 4BBE                                 l10104 53FA  
                               l10008 4FC6                                 l10024 5E18  
                               l10016 5DF6                                 l10200 506E  
                               l10042 5AC2                                 l10034 5A8E  
                               l10026 5A6E                                 l10122 4C06  
                               l10114 4BD0                                 l10050 525A  
                               l10018 5DFC                                 l10210 50B0  
                               l10202 50A4                                 l10044 5AC8  
                               l10028 5A6E                                 l10132 4C34  
                               l10124 4C0A                                 l10116 4BE2  
                               l10140 4C4A                                 l10060 528E  
                               l10052 526C                                 l10220 50C2  
                               l10212 50B4                                 l10204 50A6  
                               l10038 5A94                                 l10126 4C1A  
                               l10118 4BE6                                 l10150 3B14  
                               l10062 5292                                 l10054 5270  
                               l10230 50CE                                 l10222 50C4  
                               l10214 50B6                                 l10206 50A8  
                               l10128 4C2C                                 l10152 3B26  
                               l10064 52A2                                 l10056 5278  
                               l10048 5256                                 l10240 5ACC  
                               l10232 50D0                                 l10224 50C8  
                               l10216 50B8                                 l10208 50AC  
                               l10170 3B7A                                 l10162 3B44  
                               l10154 3B2A                                 l10146 3B04  
                               l10058 528A                                 l10090 53B0  
                               l10250 5B10                                 l10242 5AD6  
                               l10234 50D4                                 l10226 50CA  
                               l10218 50BA                                 l10180 3C3E  
                               l10172 3B8A                                 l10164 3B50  
                               l10156 3B3C                                 l10148 3B08  
                               l10068 52AC                                 l10076 52C0  
                               l10092 53C0                                 l10084 5398  
                               l10244 5AE6                                 l10236 50D8  
                               l10228 50CC                                 l10252 5F4E  
                               l10174 3B9C                                 l10166 3B62  
                               l10094 53D2                                 l10086 539C  
                               l10246 5AEC                                 l10238 50E4  
                               l10190 503E                                 l10176 3BA8  
                               l10168 3B6A                                 l10184 3C52  
                               l10096 53D6                                 l10088 53AC  
                               l10248 5AFE                                 l10192 5040  
                               l10178 3C1E                                 l10098 53E2  
                               l10194 5044                                 l10196 505E  
                               l10198 5062                                 l10480 5D7A  
                               l10490 0D7C                                 l10482 3C66  
                               l10474 5410                                 l10484 3772  
                               l10476 331C                                 l10486 4C60  
                               l10478 52D6                        ??_LCD_DrawText 002D  
                               l10488 5858                         ___fltol@sign1 0041  
                     __end_of___aodiv 3E16                                 ?_main 0001  
                               ?_dtoa 002D                       __end_of___aomod 3F7A  
                     LCD_ButtonDraw@i 0099                       __end_of___fldiv 249A  
                     __end_of___awdiv 4D44                                 STR_10 7FEA  
                               STR_11 7FF0                       __end_of___awmod 51A4  
                               _ANSB1 0079C9                                 _ANSB2 0079CA  
                     __end_of___fltol 464E                                 _T0CON 000FD5  
                     ___awdiv@divisor 0014                                 _LATB1 007C51  
                               _LATB2 007C52                                 _LATB3 007C53  
                               _LATC2 007C5A                                 _LATB4 007C54  
                               _LATC3 007C5B                                 _LATC4 007C5C  
                               _LATC5 007C5D                       __end_of___lwdiv 579A  
                     __end_of___lwmod 59A6                                 i2l701 5A08  
                               i2l711 580C                                 i2l714 5D62  
                               i2l731 5F10                                 i2l723 4324  
                               i2l727 5F26                                 i2l771 00B0  
                               i2l782 5E68                                 i2l767 0056  
                     ___awdiv@counter 0016                                 _PLLEN 007CDE  
                        vfpfcnvrt@fmt 0041                                 _TMR0H 000FD7  
                               _TMR0L 000FD6                                 _PORTA 000F80  
                     ??_configMeasure 0012                                 _TRISA 000F92  
                 LCD_Bitmap@bfOffBits 0060                          LCD_Fill@page 0018  
                               _flags 004B                          displayInit@g 00A0  
                               _fputc 4AEC                                 _theXF 00B5  
                               _fputs 5C60                LCD_ButtonDraw@tempChar 008A  
                 __size_of_LCD_Bitmap 05F6                                 pad@fp 0022  
                               _width 0047                                 _putch 5F6A  
                               dtoa@d 002F                                 dtoa@i 0070  
                               dtoa@n 0068                                 dtoa@p 0062  
                               dtoa@s 0066                                 dtoa@w 0064  
          __end_ofi2_XF_scheduleTimer 580E                  __end_of_XF_pushEvent 5942  
                     __end_of_sleepSM 52F6                          Paddle_addX@p 0025  
                               tablat 000FF5            ??_gameControllerController 0039  
                     touchScreenSM@ev 00B4                      __end_ofi2___wmul 5E6A  
                               plusw2 000FDB           ?_XF_decrementAndQueueTimers 0001  
                               ttemp5 004F                                 ttemp6 0052  
                               ttemp7 0056                                 status 000FD8  
                               wtemp8 004F                          Paddle_draw@p 0025  
                     __end_of_sprintf 5B74                          RGB2LCD@color 001E  
                        RGB2LCD@green 001A                __end_of_LCD_SliderDraw 4548  
                        Paddle_init@p 0012              __size_of_touchScreenInit 000C  
             LCD_ButtonCreate@bgColor 001C                    __size_ofi2___awmod 00B0  
                 __end_of_Paddle_addX 40C2                       ?_LCD_ButtonDraw 007C  
                   ?_gameControllerSM 003B                   __end_of_Paddle_draw 563A  
                       _touchScreenSM 5394                   __end_of_Paddle_init 553A  
                  __size_of_Ball_draw 008A                          LCD_Read@posX 0012  
                        LCD_Read@posY 0014                    __size_of_Ball_init 004E  
                     __initialization 5D9A                    ??_gameControllerSM 003D  
                        __end_of_main 5F5E                          __end_of_dtoa 2E20  
             LCD_ButtonCreate@fpPress 0022                touchScreenController@g 0090  
              touchScreenController@s 0098                      ?_sleepController 0001  
                    i2XF_pushEvent@ev 0008                                ??_main 0047  
                              ??_dtoa 0037                         __activetblptr 000002  
                           ??_RGB2LCD 0014                           _XF_popEvent 5A6C  
                              _ADCON0 000FC2                                _ADCON2 000FC0  
                    LCD_ButtonDraw@x1 008D                      LCD_ButtonDraw@x2 008F  
                    LCD_ButtonDraw@y1 0091                      LCD_ButtonDraw@y2 0093  
                              ?_fputc 0012                                ?_fputs 001B  
                              _ADRESH 000FC4                                _ADRESL 000FC3  
                              _CCPR2L 000F67                      ___awdiv@dividend 0012  
                              ?_putch 0001                                _INT1IE 007F83  
                              _INT1IF 007F80                    LCD_DrawRect@colorH 0021  
                  LCD_DrawRect@colorL 0022               _GameParameters_resetPos 5DCC  
                              i2l1026 5252                                i2l7152 5F14  
                              i2l7160 51A4                                i2l7154 5F24  
                              i2l7170 51D0                                i2l7162 51A8  
                              i2l7156 5EFE                                i2l7180 5208  
                              i2l7172 51D8                                i2l7164 51B6  
                              i2l7158 5F0E                                i2l7430 5D2A  
                              i2l7190 5242                                i2l7182 521E  
                              i2l7174 51EA                                i2l7166 51BE  
                              i2l7432 5D30                                i2l7192 524A  
                              i2l7184 5226                                i2l7176 51F2  
                              i2l7168 51C2                                i2l7440 59CC  
                              i2l7434 5D48                                i2l7186 522C  
                              i2l7178 51FA                                i2l7450 59FC  
                              i2l7442 59E0                                i2l7188 5232  
                              i2l7452 5A00                                i2l7444 59E6  
                              i2l7436 59A8                                i2l7460 5E60  
                              i2l7540 42DC                                i2l7532 420C  
                              i2l7454 5A06                                i2l7438 59AE  
                              i2l7534 423C                                i2l7542 4304  
                              i2l7526 4204                                i2l7448 59EC  
                              i2l7544 4308                                i2l7536 4294  
                              i2l7560 57F6                                i2l7458 5E44  
                              i2l7538 42CE                                i2l7562 5806  
                              i2l7554 57A4                                i2l7546 579A  
                              i2l7570 0036                                i2l7556 57C4  
                              i2l7548 57A0                                i2l7572 0044  
                              i2l7580 0072                                i2l7558 57F4  
                              i2l7590 00AE                                i2l7582 0080  
                              i2l7574 0048                                i2l7566 001A  
                              i2l7584 008E                                i2l7576 0064  
                              i2l7568 0028                                i2l7586 00A6  
                              i2l7578 0068                                i2l7588 00AA  
                              _OSCCON 000FD3                             ??_XF_init 0020  
                              _TMR0IE 007F95                                _TMR0IF 007F92  
                              _TMR2IF 007CF1                                _TRISB1 007C99  
                              _TRISB2 007C9A                                _TRISC1 007CA1  
                              _TRISB3 007C9B                                _TRISC2 007CA2  
                              _TRISB4 007C9C                                _TRISC3 007CA3  
                              _TRISC4 007CA4                                _TRISC5 007CA5  
                        ?_moovePaddle 002F                      __end_of___xxtofl 3B02  
                     ?_LCD_SliderDraw 0037                   i2XF_pushEvent@inISR 0007  
                LCD_DrawText@bg_color 002B                        ?_touchScreenSM 00B0  
                     i2_LEAVECRITICAL 5EFC                 __size_of_Factory_exec 0056  
               __size_of_Factory_init 00B6                          vfprintf@cfmt 0080  
                 LCD_Bitmap@jumpColor 0078                   LCD_Bitmap@jumpCount 0065  
                 _Menu_parametersDraw 553A                  __size_of_configTouch 001C  
          __end_of_gameControllerInit 5F4E                             ??___aodiv 0022  
                           ??___aomod 0022                                ___wmul 5E1E  
                           ??___fldiv 0028                             ??___awdiv 0016  
                           ??___awmod 0016                         LCD_Fill@color 0012  
                           ??___fltol 003D                LCD_ButtonUpdate@button 0025  
                           ??___lwdiv 0024                             ??___lwmod 0016  
                LCD_DrawText@fontByte 0037          __size_of_GameParameters_init 036A  
                              clear_0 5DA0                                clear_1 5DAC  
                              clear_2 5DB8          __size_of_GameParameters_setX 0016  
        __size_of_GameParameters_setY 0016                      ___awdiv@quotient 0018  
           LCD_ButtonCreate@textOrBmp 001E                 _touchScreenController 30C8  
                     ___awmod@divisor 0014                                isa$std 000001  
                     ___awmod@counter 0016                  __size_of_displayInit 0014  
                              pad@buf 0024                                dtoa@fp 002D  
                              _strlen 5C12                         LCD_DrawRect@i 0023  
                       LCD_DrawRect@j 001D                                fputc@c 0012  
                              fputs@c 001F                                fputs@i 0020  
                              fputs@s 001B          ?_GameParameters_setBackLight 0012  
                       LCD_DrawText@i 003E                     __end_ofi2___awmod 5254  
                       LCD_DrawText@x 0040                         LCD_DrawText@y 003D  
                LCD_DrawText@tempChar 003F                          __mediumconst 785C  
                              tblptrh 000FF7                             ??_sleepSM 0014  
                              tblptrl 000FF6                                tblptru 000FF8  
                   __end_of_Ball_draw 54B2                     __end_of_Ball_init 5C12  
                ?_Menu_parametersDraw 009C                   i2XF_scheduleTimer@i 0006  
                              putch@c 0001                      __end_of_vfprintf 5A6C  
                      i2___awmod@sign 0006                             ??_sprintf 0047  
            __end_of_LCD_ButtonCreate 4748                           _Paddle_addX 3F7A  
                        _Factory_exec 5ACC                          _Factory_init 503E  
                         _Paddle_draw 55BC                           _Paddle_init 54B2  
                    XF_pushEvent@temp 001A                          ___xxtofl@arg 001C  
               LCD_SliderCreate@width 0016                          ___xxtofl@exp 001B  
                        ___xxtofl@val 0012                  __end_of_LCD_InButton 4AEC  
               LCD_SliderCreate@steps 0022              __end_of_LCD_ButtonUpdate 356A  
                          __accesstop 0060               __end_of__initialization 5DBE  
                           ?_LCD_Fill 0012                      _LCD_SliderCreate 4842  
                           ?_LCD_Init 0001                             ?_LCD_Read 0012  
                __end_of_LCD_InSlider 4A0E                  __end_of_LCD_DrawRect 2B3E  
                __end_of_LCD_DrawText 2100           __size_of_XF_unscheduleTimer 003C  
                     i2_ENTERCRITICAL 5F12                         ___rparam_used 000001  
                          ___fltol@f1 0039                         LCD_Read@color 0018  
                    _LCD_SliderUpdate 1342                    LEAVECRITICAL@inISR 0012  
                           LCD_Init@i 0018                        __pcstackCOMRAM 0001  
                        ??_LCD_Bitmap 002D                     ??_touchScreenInit 0012  
         __end_of_backlightController 1CB6                         __end_of_fputc 4BB6  
                       __end_of_fputs 5CA4                   gameControllerInit@g 003B  
          LCD_ButtonCreate@fpReleased 0024                         __end_of_putch 5F6C  
                   LCD_Bitmap@biWidth 0076                     ?_Menu_welcomeDraw 009C  
                LCD_Bitmap@endOfImage 0064              __end_of_XF_scheduleTimer 5726  
                           ?i2___wmul 0001                    ??_Menu_welcomeDraw 0042  
                   LCD_Bitmap@curXPos 006F   __size_of_XF_decrementAndQueueTimers 0122  
                   LCD_Bitmap@curYPos 0067                 __size_of_XF_pushEvent 0064  
               ??_Menu_parametersDraw 0045         ??_GameParameters_setBackLight 0016  
                        Ball_Update@b 002F             ??_GameParameters_resetPos 0014  
             _arialNarrow_12ptBitmaps 785D                      ??_checkCollision 0014  
                  __size_of_displaySM 00CA                 __end_of_LEAVECRITICAL 5EE6  
                  LCD_DrawText@offset 0033                               ??_fputc 0016  
                             ??_fputs 001F                          ?_Ball_Update 002F  
                             ??_putch 0012      __end_of_gameControllerController 379A  
           gameControllerController@g 0037               __end_ofi2_LEAVECRITICAL 5F12  
                      XF_pushEvent@ev 0019                            __pbssBANK0 00B5  
                          __pbssBANK1 0100                    __end_of_LCD_Bitmap 0E54  
                          ??_LCD_Fill 0014                            ??_LCD_Init 0017  
                          ??_LCD_Read 0016                       ??_touchScreenSM 00B2  
            LCD_ButtonCreate@txtColor 001A                    ENTERCRITICAL@inISR 0012  
            __size_of_Menu_inGameDraw 0066                               ?___wmul 001A  
              ?_touchScreenController 0090                          _XF_pushEvent 58DE  
                  __size_of_mooveBall 001E                    __size_of_sleepInit 0028  
                             ?_strlen 0012                            ??i2___wmul 0005  
             __size_ofi2_XF_pushEvent 0064                               _RGB2LCD 4EC8  
                             _INTEDG1 007F8D                  GameParameters_init@s 002B  
                           ?___xxtofl 0012                  GameParameters_setX@s 0012  
                GameParameters_setY@s 0012                    __size_of_vfpfcnvrt 01B4  
               __end_of_ENTERCRITICAL 5EFC               __end_ofi2_ENTERCRITICAL 5F28  
                    ??_LCD_ButtonDraw 007E                  Menu_parametersDraw@g 009C  
 __end_of_arialNarrow_12ptDescriptors 7FA1           _arialNarrow_12ptDescriptors 7E84  
                             _XF_init 4F86                   LCD_ButtonDraw@xText 0095  
                 LCD_ButtonDraw@yText 0097                   LCD_ButtonDraw@width 008B  
                             __Hparam 0000                  __size_of_moovePaddle 00FA  
                             __Lparam 0000                    i2_XF_scheduleTimer 579A  
                             ___aodiv 3C8E                     __end_of_displaySM 4C80  
                             ___aomod 3E16                               ___fldiv 2100  
                             ___awdiv 4C80                               ___awmod 50F4  
                             ___fltol 4548                       __size_of___wmul 0026  
             LCD_ButtonUpdate@colorIn 002D                               ___lwdiv 5726  
                             ___lwmod 5942                             ?_vfprintf 007A  
                      LCD_Bitmap@newY 0073                        LCD_Bitmap@posX 0029  
                      LCD_Bitmap@posY 002B                        LCD_Fill@colorH 0014  
                      LCD_Fill@colorL 0015                               __pcinit 5D9A  
                      LCD_Fill@column 0016                               __ramtop 0600  
                             __ptext0 5F4E                               __ptext1 503E  
                             __ptext2 5DF6                               __ptext3 5F5E  
                             __ptext4 5F3C                               __ptext5 5F28  
                             __ptext6 4F86                               __ptext7 2E20  
                             __ptext8 52F6                               __ptext9 249A  
                 ?i2_XF_scheduleTimer 0002                       __size_of_strlen 004E  
           __size_of_gameControllerSM 018C                             _T2CONbits 000FBA  
                        __size_of_abs 0040                          __size_of_pad 00C2  
                        __size_of_isr 00BC                          ?_XF_popEvent 0001  
                          ??___xxtofl 0016                  LCD_Bitmap@pixelCount 0075  
                    ___awmod@dividend 0012                 LCD_DrawText@fontPixel 0038  
                             _sleepSM 5254                 __end_of_configMeasure 5BC4  
               __size_of_LCD_InButton 00DE               XF_unscheduleTimer@inISR 0002  
               __size_of_LCD_InSlider 00DE                     Menu_welcomeDraw@g 009C  
               __size_of_LCD_DrawRect 033A                               _sprintf 5B22  
               __size_of_LCD_DrawText 044A                      ??_LCD_SliderDraw 0039  
                end_of_initialization 5DBE                      ?i2_LEAVECRITICAL 0001  
                 _GameParameters_init 249A                   _GameParameters_setX 5EBA  
                 _GameParameters_setY 5EA4                     __end_of_mooveBall 5E88  
                             fputc@fp 0014                  ??i2_XF_scheduleTimer 0006  
                       __Lmediumconst 785C                               fputs@fp 001D  
                      Paddle_addX@add 0029                   i2___wmul@multiplier 0001  
                   __end_of_sleepInit 5E1E                     __end_of_vfpfcnvrt 394E  
                          _sleepState 00DF                  i2XF_scheduleTimer@ev 0004  
                i2XF_scheduleTimer@tm 0002                               postdec1 000FE5  
                             postdec2 000FDD                     _LCD_Lowlevel_Init 52F6  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE                            ??_vfprintf 0047  
   __size_of_gameControllerController 0230                  ?_GameParameters_init 002B  
           ?_gameControllerController 0037                     ??_Menu_inGameDraw 0042  
                ?_GameParameters_setX 0012                    ?_LCD_Lowlevel_Init 0001  
                ?_GameParameters_setY 0012                               strlen@a 0014  
                             strlen@s 0012                          _LCD_InButton 4A0E  
                           _PORTBbits 000F81              __end_of_LCD_SliderCreate 4930  
              LCD_SliderCreate@height 0018                          _LCD_InSlider 4930  
                        _displayState 00DD                          _LCD_DrawRect 2804  
                        _LCD_DrawText 1CB6                     XF_pushEvent@inISR 0018  
            __end_of_LCD_SliderUpdate 1818                      XF_popEvent@inISR 0019  
              LCD_SliderCreate@slider 0026                   ??_LCD_Lowlevel_Init 0012  
                       ___xxtofl@sign 001A                    _gameControllerInit 5F3C  
            __size_of_sleepController 0036                        Factory_exec@ev 01C9  
                         ___fldiv@grs 0033                           ___fldiv@rem 002C  
                           i2___awmod 51A4                      ?i2_ENTERCRITICAL 0001  
                   ?_LCD_ButtonCreate 0012                          ?_Paddle_addX 0025  
                        ?_Paddle_draw 0025                             _Ball_draw 5428  
                        ?_Paddle_init 0012                             _Ball_init 5BC4  
                 ?_gameControllerInit 003B                  __size_of_Ball_Update 0114  
                  ??_LCD_ButtonCreate 002B                     ?_LCD_ButtonUpdate 0025  
                     _touchScreenInit 5F5E                     _displayController 580E  
                         _CCP2CONbits 000F66                            displaySM@g 00A0  
                      LCD_Read@temp16 001A       __end_of_arialNarrow_12ptBitmaps 7E84  
              RGB2LCD@colorTableEntry 0012                         ??_configTouch 0012  
                  ??_LCD_ButtonUpdate 0027                     __size_of_LCD_Fill 00C2  
                   __size_of_LCD_Init 02A8                     __size_of_LCD_Read 0142  
                  ?_displayController 009E                            RGB2LCD@red 0018  
           __end_of_LCD_Lowlevel_Init 5394                    LCD_Lowlevel_Init@i 0013  
               LCD_ButtonCreate@fpOut 0026                     XF_scheduleTimer@i 0017  
               LCD_ButtonCreate@index 002A                 LCD_ButtonCreate@width 0016  
                       ??_displayInit 0047                 ??_GameParameters_init 002D  
               ??_GameParameters_setX 0016                 ??_GameParameters_setY 0016  
                 ??_displayController 0045                           vfpfcnvrt@ap 0043  
                         vfpfcnvrt@fp 003F                           vfpfcnvrt@ll 0072  
                      __end_of___wmul 5E44                  ??_gameControllerInit 003D  
                  LCD_Bitmap@biHeight 006B                  XF_unscheduleTimer@id 0003  
                      i2_XF_pushEvent 59A6                      i2___wmul@product 0005  
                   ?_XF_scheduleTimer 0013                        __end_of_strlen 5C60  
                       XF_popEvent@ev 0018                   start_initialization 5D9A  
                   __size_ofi2___wmul 0026                    ??_XF_scheduleTimer 0017  
                         __end_of_abs 5D28                    LCD_InButton@button 0012  
                         __end_of_pad 4E06                           __end_of_isr 00C4  
               XF_scheduleTimer@inISR 0016                            ?i2___awmod 0001  
                          ?_Ball_draw 0025                            ?_Ball_init 0012  
           __end_of_displayController 5878             __size_of_Menu_welcomeDraw 0078  
          __end_of_XF_unscheduleTimer 5D64                     LCD_DrawRect@color 001B  
                   LCD_DrawRect@posX1 0012                     LCD_DrawRect@posX2 0016  
                   LCD_DrawRect@posY1 0014                     LCD_DrawRect@posY2 0018  
                  i2XF_pushEvent@temp 0009               ??_touchScreenController 0092  
                         vfprintf@fmt 007C                              ??___wmul 001E  
                 LCD_DrawText@yOffset 0035                   __end_of_configTouch 5EA4  
              __end_ofi2_XF_pushEvent 5A0A                   LCD_DrawText@posXEnd 003B  
                 LCD_DrawText@posYEnd 0039              _arialNarrow_12ptFontInfo 7FA1  
         __end_of_Menu_parametersDraw 55BC                              ??_strlen 0014  
                LCD_SliderCreate@posX 0012                  LCD_SliderCreate@posY 0014  
                    _gameControllerSM 3B02                   __end_of_displayInit 5F3C  
                           ___fldiv@a 0024                             ___fldiv@b 0020  
                            ?_RGB2LCD 0012          __size_of_backlightController 049E  
                         __pbssCOMRAM 0047                LCD_SliderUpdate@slider 0027  
         XF_decrementAndQueueTimers@i 000C                         __pcstackBANK0 0060  
                       __pcstackBANK1 01C9                  LCD_SliderDraw@slider 0037  
                    ___aodiv@dividend 0012                    gameControllerSM@ev 0041  
             __end_of_touchScreenInit 5F6A                  __size_of_XF_popEvent 0060  
                   __size_of___xxtofl 01B4                      LCD_InButton@posX 0014  
                    LCD_InButton@posY 0016                      LCD_Bitmap@bmpPtr 0027  
                   LCD_DrawText@align 0024                              ?_XF_init 0001  
                   LCD_DrawText@color 0029                     ??_sleepController 0012  
                    LCD_Bitmap@strPtr 0071          ??_XF_decrementAndQueueTimers 000A  
                   LCD_DrawText@width 0041                 __end_of_touchScreenSM 5428  
             LCD_Bitmap@colorTablePtr 0069                  i2LEAVECRITICAL@inISR 0001  
                    LCD_SliderDraw@x1 003D                      LCD_SliderDraw@x2 003F  
                    LCD_SliderDraw@y1 0041                      LCD_SliderDraw@y2 0043  
          __size_of_LCD_Lowlevel_Init 009E                      ___lwdiv@dividend 0020  
                           _dtoa$4328 0060                             __pintcode 0008  
                       __pmediumconst 785C                              ?___aodiv 0012  
                            ?___aomod 0012                              ?___fldiv 0020  
                            ?___awdiv 0012                      ___aodiv@quotient 0024  
                            ?___awmod 0012                              ?___fltol 0039  
                            ?___lwdiv 0020                              ?___lwmod 0012  
              __size_of_LEAVECRITICAL 0016                       ?i2_XF_pushEvent 0007  
                           _displaySM 4BB6                     __size_of_vfprintf 0062  
 __end_of_GameParameters_setBackLight 5CE8           _GameParameters_setBackLight 5CA4  
            ?_GameParameters_resetPos 0012                            mooveBall@g 0039  
                            ?_sleepSM 0001                      ___lwdiv@quotient 0025  
         touchScreenController@valueX 00AE           touchScreenController@valueY 00AC  
                         ??i2___awmod 0005                              ?_sprintf 0082  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                      __size_of_putch 0002                           ??_Ball_draw 0027  
                         ??_Ball_init 0014            __size_of_displayController 006A  
                          sleepInit@g 00A2                              _LCD_Fill 4E06  
                            _LCD_Init 2E20                              _LCD_Read 40C2  
                       ??_moovePaddle 0031                        ___wmul@product 001E  
                __size_of_Paddle_addX 0148                  __size_of_Paddle_draw 007E  
                __size_of_Paddle_init 0088                       _Menu_inGameDraw 5878  
                i2ENTERCRITICAL@inISR 0001                    LCD_SliderUpdate@x1 0035  
                  LCD_SliderUpdate@x2 002F                    LCD_SliderUpdate@y1 0031  
                  LCD_SliderUpdate@y2 0033                    displayController@g 009E  
             __size_of_checkCollision 0796                             _mooveBall 5E6A  
                         _configTouch 5E88                              i2u520_40 59E0  
                            i2u520_41 59DC                              i2u522_40 423C  
                            i2u530_40 0044                              i2u522_41 4238  
                            i2u530_41 0040                              i2u523_40 4294  
                            i2u531_40 0064                              i2u523_41 4290  
                            i2u531_41 0060                              i2u524_40 42CE  
                            i2u532_40 0080                              i2u524_41 42CA  
                            i2u532_41 007C                              i2u525_40 4324  
                            i2u533_40 008E                              i2u525_41 4320  
                            i2u533_41 008A                              XF_init@i 0020  
                            i2u526_40 57C4                              i2u526_41 57C0  
                            i2u527_40 5806                              i2u527_41 5802  
                            i2u528_40 0028                              i2u528_41 0024  
                           _sleepInit 5DF6                              i2u529_40 0036  
                            i2u529_41 0032                              i2u492_40 5F24  
                            i2u492_41 5F20                              i2u493_40 5F0E  
                            i2u493_41 5F0A                              i2u494_40 51B6  
                            i2u494_41 51B2                              i2u495_40 51D0  
                            i2u495_41 51CC                              i2u496_40 51EA  
                            i2u496_41 51E6                              i2u497_40 5208  
                            i2u497_41 5204                              i2u498_40 521E  
                            i2u498_41 521A                              i2u499_40 5242  
                            i2u499_41 523E                __size_of_ENTERCRITICAL 0016  
                         _displayInit 5F28                             _vfpfcnvrt 379A  
                          ?_displaySM 00A0                     ___wmul@multiplier 001A  
                   ?_LCD_SliderCreate 0012                              i2___wmul 5E44  
    GameParameters_setBackLight@value 0014                    LCD_ButtonUpdate@x1 0033  
                  LCD_ButtonUpdate@x2 002F                    LCD_ButtonUpdate@y1 0031  
                  LCD_ButtonUpdate@y2 0035               i2XF_scheduleTimer@inISR 0005  
                  ??_LCD_SliderCreate 0028                      __size_of_RGB2LCD 00BE  
                   ?_LCD_SliderUpdate 0027                      LCD_InSlider@posX 0014  
                    LCD_InSlider@posY 0016                  LCD_ButtonCreate@font 0020  
                LCD_ButtonCreate@posX 0012                  LCD_ButtonCreate@posY 0014  
                LCD_ButtonDraw@bmpPtr 009A                      ?_touchScreenInit 0001  
                  ??_LCD_SliderUpdate 0029                  LCD_ButtonDraw@button 007C  
                       _LEAVECRITICAL 5ED0                         ?_Factory_exec 0001  
                       ?_Factory_init 0001                    i2___awmod@dividend 0001  
                    _Menu_welcomeDraw 563A                       checkCollision@g 0012  
         __size_ofi2_XF_scheduleTimer 0074                      __size_of_XF_init 00B8  
                    LCD_DrawRect@fill 001A                            ?_mooveBall 0039  
                            __Hrparam 0000                      LCD_DrawRect@temp 001F  
                          ?_sleepInit 00A2              __size_ofi2_LEAVECRITICAL 0016  
                          vfprintf@ap 007E                              __Lrparam 0000  
                          vfprintf@fp 007A                   __end_of_moovePaddle 4842  
             __size_of_LCD_ButtonDraw 04EE                __size_of_configMeasure 0050  
           __size_of_LCD_ButtonCreate 00FA                      __size_of___aodiv 0188  
     __end_of_GameParameters_resetPos 5DF6                      __size_of___aomod 0164  
                    __size_of___fldiv 039A                      __size_of___awdiv 00C4  
                    __size_of___awmod 00B0                      __size_of___fltol 0106  
               i2___wmul@multiplicand 0003                            ?_vfpfcnvrt 003F  
                    __size_of___lwdiv 0074                      __size_of___lwmod 0064  
           __size_of_LCD_ButtonUpdate 0236                     gameControllerSM@g 003B  
                     ___aodiv@divisor 001A                      Paddle_addX@value 0027  
            LCD_ButtonUpdate@colorOut 002B                       ___aodiv@counter 0022  
                        moovePaddle@g 002F              GameParameters_setX@value 0014  
                     LCD_Bitmap@color 006D              GameParameters_setY@value 0014  
                    LCD_DrawText@font 0022                            sprintf@fmt 0084  
                    LCD_DrawText@posX 0025                      LCD_DrawText@posY 0027  
                            ___xxtofl 394E                            Ball_draw@b 0025  
                     ___lwdiv@divisor 0022                            Ball_init@b 0012  
                     ___lwdiv@counter 0024                              __ptext10 54B2  
                            __ptext11 4842                              __ptext20 2B3E  
                            __ptext12 464E                              __ptext21 4D44  
                            __ptext13 5BC4                              __ptext30 394E  
                            __ptext22 5C60                              __ptext14 5ACC  
                            __ptext31 4548                              __ptext23 4AEC  
                            __ptext15 5394                              __ptext40 3F7A  
                            __ptext32 2100                              __ptext24 5F6A  
                            __ptext16 30C8                              __ptext41 5E6A  
                            __ptext33 56B2                              __ptext25 5CE8  
                            __ptext17 5B22                              __ptext50 5DCC  
                            __ptext42 00C8                              __ptext34 5EA4  
                            __ptext26 3E16                              __ptext18 5A0A  
                            __ptext51 4BB6                              __ptext43 4326  
                            __ptext35 5EBA                              __ptext27 3C8E  
                            __ptext19 379A                              __ptext60 0E54  
                            __ptext52 580E                              __ptext44 356A  
                            __ptext36 5254                              __ptext28 5E88  
                            __ptext61 1CB6                              __ptext53 563A  
                            __ptext45 1818                              __ptext37 5D64  
                            __ptext29 5B74                              __ptext70 4EC8  
                            __ptext62 5C12                              __ptext54 553A  
                            __ptext46 5CA4                              __ptext38 3B02  
                            __ptext71 5428                              __ptext63 4C80  
                            __ptext55 443A                              __ptext47 58DE  
                            __ptext39 4748                              __ptext80 5E44  
                            __ptext72 2804                              __ptext64 3334  
                            __ptext56 1342                              __ptext48 4930  
                            __ptext81 59A6                              __ptext73 5A6C  
                            __ptext65 40C2                              __ptext57 5878  
                            __ptext49 4A0E                              __ptext82 51A4  
                            __ptext74 50F4                              __ptext66 085E  
                            __ptext58 55BC                              __ptext83 5D28  
                            __ptext75 5ED0                              __ptext67 5E1E  
                            __ptext59 4E06                              __ptext84 5EFC  
                            __ptext76 5EE6                              __ptext68 5942  
                            __ptext85 5F12                              __ptext69 5726  
                            __ptext78 579A                              __ptext79 4204  
                    __size_of_sleepSM 00A2                        ?_LEAVECRITICAL 0001  
                       _ENTERCRITICAL 5EE6                         ??_Ball_Update 0031  
                      ??_Factory_exec 0047                        ??_Factory_init 00A4  
             __end_of_Menu_inGameDraw 58DE              GameParameters_resetPos@s 0012  
                    __size_of_sprintf 0052    __end_of_XF_decrementAndQueueTimers 4326  
          _XF_decrementAndQueueTimers 4204                         __size_of_main 0010  
                           sleepSM@ev 0016                         __size_of_dtoa 02E2  
           __size_of_XF_scheduleTimer 0074              __end_of_gameControllerSM 3C8E  
                 _backlightController 1818           __end_of_GameParameters_init 2804  
         __end_of_GameParameters_setX 5ED0           __end_of_GameParameters_setY 5EBA  
            __size_ofi2_ENTERCRITICAL 0016               __size_of_LCD_SliderDraw 010E  
        GameParameters_setBackLight@s 0012              _gameControllerController 356A  
                            isa$xinst 000000                            _LCD_Bitmap 085E  
      __size_of_touchScreenController 026C                    _XF_unscheduleTimer 5D28  
       __end_of_touchScreenController 3334                              int$flags 004E  
                            _vfprintf 5A0A                         ?_XF_pushEvent 0018  
         __size_of_gameControllerInit 0012                           ??_displaySM 00A2  
                    ___aomod@dividend 0012                   ?_XF_unscheduleTimer 0002  
                   i2___awmod@divisor 0003                     i2___awmod@counter 0005  
                ?_backlightController 0018                       _sleepController 5D64  
                      ?_ENTERCRITICAL 0001                         _configMeasure 5B74  
                            intlevel2 0000                             sprintf@ap 0088  
                     LCD_DrawText@msg 0020                      ___lwmod@dividend 0012  
                ??_XF_unscheduleTimer 0003                           _moovePaddle 4748  
                 __end_of_Ball_Update 443A                        _checkCollision 00C8  
                         ??_mooveBall 003B                           ??_sleepInit 0047  
                    ??i2_XF_pushEvent 0008                        ??_XF_pushEvent 0019  
                     ___aomod@divisor 001A                           ??_vfpfcnvrt 0045  
                     ___aomod@counter 0022                     ??i2_LEAVECRITICAL 0001  
                            sprintf@f 008A                              sprintf@s 0082  
               ??_backlightController 001A                         ??_XF_popEvent 0018  
                     ___lwmod@divisor 0014               LCD_SliderCreate@bgColor 001C  
                     ___lwmod@counter 0016                       ??_LEAVECRITICAL 0012  
                      ?_configMeasure 0001           LCD_SliderCreate@borderColor 001E  
        __size_of_Menu_parametersDraw 0082              LCD_SliderCreate@sldColor 001A  
             LCD_SliderCreate@fpPress 0024                      ?_Menu_inGameDraw 009C  
                        ___aodiv@sign 0023                       Paddle_init@team 0014  
              __end_of_checkCollision 085E      __size_of_GameParameters_resetPos 002A  
__size_of_GameParameters_setBackLight 0044                          ___aomod@sign 0023  
                        ?_configTouch 0001                   _gameControllerState 004D  
