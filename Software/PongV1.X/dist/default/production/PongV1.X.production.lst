

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 07 12:50:53 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=3
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	text86,global,reloc=2,class=CODE,delta=1
   100                           	psect	text87,global,reloc=2,class=CODE,delta=1
   101                           	psect	text88,global,reloc=2,class=CODE,delta=1
   102                           	psect	text89,global,reloc=2,class=CODE,delta=1
   103                           	psect	text90,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109  0000                     
   110                           ; Version 2.32
   111                           ; Generated 02/02/2021 GMT
   112                           ; 
   113                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18LF25K22 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     
   146                           	psect	mediumconst
   147  007836                     __pmediumconst:
   148                           	callstack 0
   149  007836  00                 	db	0
   150  007837                     _arialNarrow_12ptBitmaps:
   151                           	callstack 0
   152  007837  00                 	db	0
   153  007838  00                 	db	0
   154  007839  00                 	db	0
   155  00783A  00                 	db	0
   156  00783B  00                 	db	0
   157  00783C  00                 	db	0
   158  00783D  00                 	db	0
   159  00783E  00                 	db	0
   160  00783F  00                 	db	0
   161  007840  00                 	db	0
   162  007841  00                 	db	0
   163  007842  00                 	db	0
   164  007843  00                 	db	0
   165  007844  00                 	db	0
   166  007845  00                 	db	0
   167  007846  00                 	db	0
   168  007847  C0                 	db	192
   169  007848  C0                 	db	192
   170  007849  C0                 	db	192
   171  00784A  C0                 	db	192
   172  00784B  C0                 	db	192
   173  00784C  C0                 	db	192
   174  00784D  C0                 	db	192
   175  00784E  C0                 	db	192
   176  00784F  00                 	db	0
   177  007850  C0                 	db	192
   178  007851  C0                 	db	192
   179  007852  00                 	db	0
   180  007853  00                 	db	0
   181  007854  00                 	db	0
   182  007855  00                 	db	0
   183  007856  D8                 	db	216
   184  007857  D8                 	db	216
   185  007858  D8                 	db	216
   186  007859  D8                 	db	216
   187  00785A  00                 	db	0
   188  00785B  00                 	db	0
   189  00785C  00                 	db	0
   190  00785D  00                 	db	0
   191  00785E  00                 	db	0
   192  00785F  00                 	db	0
   193  007860  00                 	db	0
   194  007861  00                 	db	0
   195  007862  00                 	db	0
   196  007863  00                 	db	0
   197  007864  00                 	db	0
   198  007865  12                 	db	18
   199  007866  12                 	db	18
   200  007867  24                 	db	36
   201  007868  FE                 	db	254
   202  007869  FE                 	db	254
   203  00786A  48                 	db	72
   204  00786B  FE                 	db	254
   205  00786C  FE                 	db	254
   206  00786D  48                 	db	72
   207  00786E  90                 	db	144
   208  00786F  90                 	db	144
   209  007870  00                 	db	0
   210  007871  00                 	db	0
   211  007872  00                 	db	0
   212  007873  10                 	db	16
   213  007874  7C                 	db	124
   214  007875  FC                 	db	252
   215  007876  D6                 	db	214
   216  007877  D0                 	db	208
   217  007878  F0                 	db	240
   218  007879  7C                 	db	124
   219  00787A  1E                 	db	30
   220  00787B  16                 	db	22
   221  00787C  D6                 	db	214
   222  00787D  7E                 	db	126
   223  00787E  7C                 	db	124
   224  00787F  10                 	db	16
   225  007880  00                 	db	0
   226  007881  00                 	db	0
   227  007882  00                 	db	0
   228  007883  00                 	db	0
   229  007884  61                 	db	97
   230  007885  00                 	db	0
   231  007886  91                 	db	145
   232  007887  00                 	db	0
   233  007888  92                 	db	146
   234  007889  00                 	db	0
   235  00788A  92                 	db	146
   236  00788B  00                 	db	0
   237  00788C  94                 	db	148
   238  00788D  00                 	db	0
   239  00788E  65                 	db	101
   240  00788F  80                 	db	128
   241  007890  06                 	db	6
   242  007891  40                 	db	64
   243  007892  0A                 	db	10
   244  007893  40                 	db	64
   245  007894  0A                 	db	10
   246  007895  40                 	db	64
   247  007896  12                 	db	18
   248  007897  40                 	db	64
   249  007898  11                 	db	17
   250  007899  80                 	db	128
   251  00789A  00                 	db	0
   252  00789B  00                 	db	0
   253  00789C  00                 	db	0
   254  00789D  00                 	db	0
   255  00789E  00                 	db	0
   256  00789F  00                 	db	0
   257  0078A0  00                 	db	0
   258  0078A1  38                 	db	56
   259  0078A2  7C                 	db	124
   260  0078A3  6C                 	db	108
   261  0078A4  7C                 	db	124
   262  0078A5  30                 	db	48
   263  0078A6  78                 	db	120
   264  0078A7  DA                 	db	218
   265  0078A8  CE                 	db	206
   266  0078A9  CE                 	db	206
   267  0078AA  FF                 	db	255
   268  0078AB  7A                 	db	122
   269  0078AC  00                 	db	0
   270  0078AD  00                 	db	0
   271  0078AE  00                 	db	0
   272  0078AF  00                 	db	0
   273  0078B0  C0                 	db	192
   274  0078B1  C0                 	db	192
   275  0078B2  C0                 	db	192
   276  0078B3  C0                 	db	192
   277  0078B4  00                 	db	0
   278  0078B5  00                 	db	0
   279  0078B6  00                 	db	0
   280  0078B7  00                 	db	0
   281  0078B8  00                 	db	0
   282  0078B9  00                 	db	0
   283  0078BA  00                 	db	0
   284  0078BB  00                 	db	0
   285  0078BC  00                 	db	0
   286  0078BD  00                 	db	0
   287  0078BE  00                 	db	0
   288  0078BF  10                 	db	16
   289  0078C0  20                 	db	32
   290  0078C1  60                 	db	96
   291  0078C2  60                 	db	96
   292  0078C3  C0                 	db	192
   293  0078C4  C0                 	db	192
   294  0078C5  C0                 	db	192
   295  0078C6  C0                 	db	192
   296  0078C7  C0                 	db	192
   297  0078C8  C0                 	db	192
   298  0078C9  60                 	db	96
   299  0078CA  60                 	db	96
   300  0078CB  20                 	db	32
   301  0078CC  10                 	db	16
   302  0078CD  00                 	db	0
   303  0078CE  80                 	db	128
   304  0078CF  40                 	db	64
   305  0078D0  60                 	db	96
   306  0078D1  20                 	db	32
   307  0078D2  30                 	db	48
   308  0078D3  30                 	db	48
   309  0078D4  30                 	db	48
   310  0078D5  30                 	db	48
   311  0078D6  30                 	db	48
   312  0078D7  30                 	db	48
   313  0078D8  60                 	db	96
   314  0078D9  60                 	db	96
   315  0078DA  40                 	db	64
   316  0078DB  80                 	db	128
   317  0078DC  00                 	db	0
   318  0078DD  20                 	db	32
   319  0078DE  A8                 	db	168
   320  0078DF  F8                 	db	248
   321  0078E0  20                 	db	32
   322  0078E1  50                 	db	80
   323  0078E2  50                 	db	80
   324  0078E3  00                 	db	0
   325  0078E4  00                 	db	0
   326  0078E5  00                 	db	0
   327  0078E6  00                 	db	0
   328  0078E7  00                 	db	0
   329  0078E8  00                 	db	0
   330  0078E9  00                 	db	0
   331  0078EA  00                 	db	0
   332  0078EB  00                 	db	0
   333  0078EC  00                 	db	0
   334  0078ED  00                 	db	0
   335  0078EE  00                 	db	0
   336  0078EF  30                 	db	48
   337  0078F0  30                 	db	48
   338  0078F1  30                 	db	48
   339  0078F2  FC                 	db	252
   340  0078F3  FC                 	db	252
   341  0078F4  30                 	db	48
   342  0078F5  30                 	db	48
   343  0078F6  30                 	db	48
   344  0078F7  00                 	db	0
   345  0078F8  00                 	db	0
   346  0078F9  00                 	db	0
   347  0078FA  00                 	db	0
   348  0078FB  00                 	db	0
   349  0078FC  00                 	db	0
   350  0078FD  00                 	db	0
   351  0078FE  00                 	db	0
   352  0078FF  00                 	db	0
   353  007900  00                 	db	0
   354  007901  00                 	db	0
   355  007902  00                 	db	0
   356  007903  00                 	db	0
   357  007904  C0                 	db	192
   358  007905  C0                 	db	192
   359  007906  40                 	db	64
   360  007907  40                 	db	64
   361  007908  80                 	db	128
   362  007909  00                 	db	0
   363  00790A  00                 	db	0
   364  00790B  00                 	db	0
   365  00790C  00                 	db	0
   366  00790D  00                 	db	0
   367  00790E  00                 	db	0
   368  00790F  00                 	db	0
   369  007910  F0                 	db	240
   370  007911  F0                 	db	240
   371  007912  00                 	db	0
   372  007913  00                 	db	0
   373  007914  00                 	db	0
   374  007915  00                 	db	0
   375  007916  00                 	db	0
   376  007917  00                 	db	0
   377  007918  00                 	db	0
   378  007919  00                 	db	0
   379  00791A  00                 	db	0
   380  00791B  00                 	db	0
   381  00791C  00                 	db	0
   382  00791D  00                 	db	0
   383  00791E  00                 	db	0
   384  00791F  00                 	db	0
   385  007920  00                 	db	0
   386  007921  00                 	db	0
   387  007922  C0                 	db	192
   388  007923  C0                 	db	192
   389  007924  00                 	db	0
   390  007925  00                 	db	0
   391  007926  00                 	db	0
   392  007927  00                 	db	0
   393  007928  30                 	db	48
   394  007929  30                 	db	48
   395  00792A  30                 	db	48
   396  00792B  60                 	db	96
   397  00792C  60                 	db	96
   398  00792D  60                 	db	96
   399  00792E  60                 	db	96
   400  00792F  60                 	db	96
   401  007930  C0                 	db	192
   402  007931  C0                 	db	192
   403  007932  C0                 	db	192
   404  007933  00                 	db	0
   405  007934  00                 	db	0
   406  007935  00                 	db	0
   407  007936  00                 	db	0
   408  007937  78                 	db	120
   409  007938  78                 	db	120
   410  007939  CC                 	db	204
   411  00793A  CC                 	db	204
   412  00793B  CC                 	db	204
   413  00793C  CC                 	db	204
   414  00793D  CC                 	db	204
   415  00793E  CC                 	db	204
   416  00793F  CC                 	db	204
   417  007940  78                 	db	120
   418  007941  78                 	db	120
   419  007942  00                 	db	0
   420  007943  00                 	db	0
   421  007944  00                 	db	0
   422  007945  00                 	db	0
   423  007946  30                 	db	48
   424  007947  30                 	db	48
   425  007948  70                 	db	112
   426  007949  F0                 	db	240
   427  00794A  B0                 	db	176
   428  00794B  30                 	db	48
   429  00794C  30                 	db	48
   430  00794D  30                 	db	48
   431  00794E  30                 	db	48
   432  00794F  30                 	db	48
   433  007950  30                 	db	48
   434  007951  00                 	db	0
   435  007952  00                 	db	0
   436  007953  00                 	db	0
   437  007954  00                 	db	0
   438  007955  38                 	db	56
   439  007956  7C                 	db	124
   440  007957  CC                 	db	204
   441  007958  CC                 	db	204
   442  007959  0C                 	db	12
   443  00795A  18                 	db	24
   444  00795B  38                 	db	56
   445  00795C  70                 	db	112
   446  00795D  60                 	db	96
   447  00795E  FC                 	db	252
   448  00795F  FC                 	db	252
   449  007960  00                 	db	0
   450  007961  00                 	db	0
   451  007962  00                 	db	0
   452  007963  00                 	db	0
   453  007964  78                 	db	120
   454  007965  FC                 	db	252
   455  007966  CC                 	db	204
   456  007967  0C                 	db	12
   457  007968  38                 	db	56
   458  007969  38                 	db	56
   459  00796A  0C                 	db	12
   460  00796B  0C                 	db	12
   461  00796C  CC                 	db	204
   462  00796D  F8                 	db	248
   463  00796E  78                 	db	120
   464  00796F  00                 	db	0
   465  007970  00                 	db	0
   466  007971  00                 	db	0
   467  007972  00                 	db	0
   468  007973  0C                 	db	12
   469  007974  1C                 	db	28
   470  007975  1C                 	db	28
   471  007976  3C                 	db	60
   472  007977  2C                 	db	44
   473  007978  6C                 	db	108
   474  007979  CC                 	db	204
   475  00797A  FE                 	db	254
   476  00797B  FE                 	db	254
   477  00797C  0C                 	db	12
   478  00797D  0C                 	db	12
   479  00797E  00                 	db	0
   480  00797F  00                 	db	0
   481  007980  00                 	db	0
   482  007981  00                 	db	0
   483  007982  7C                 	db	124
   484  007983  7C                 	db	124
   485  007984  60                 	db	96
   486  007985  D8                 	db	216
   487  007986  FC                 	db	252
   488  007987  CC                 	db	204
   489  007988  0C                 	db	12
   490  007989  CC                 	db	204
   491  00798A  CC                 	db	204
   492  00798B  78                 	db	120
   493  00798C  78                 	db	120
   494  00798D  00                 	db	0
   495  00798E  00                 	db	0
   496  00798F  00                 	db	0
   497  007990  00                 	db	0
   498  007991  70                 	db	112
   499  007992  78                 	db	120
   500  007993  D8                 	db	216
   501  007994  C0                 	db	192
   502  007995  F0                 	db	240
   503  007996  F8                 	db	248
   504  007997  D8                 	db	216
   505  007998  D8                 	db	216
   506  007999  D8                 	db	216
   507  00799A  78                 	db	120
   508  00799B  70                 	db	112
   509  00799C  00                 	db	0
   510  00799D  00                 	db	0
   511  00799E  00                 	db	0
   512  00799F  00                 	db	0
   513  0079A0  F8                 	db	248
   514  0079A1  F8                 	db	248
   515  0079A2  18                 	db	24
   516  0079A3  10                 	db	16
   517  0079A4  30                 	db	48
   518  0079A5  30                 	db	48
   519  0079A6  20                 	db	32
   520  0079A7  60                 	db	96
   521  0079A8  60                 	db	96
   522  0079A9  60                 	db	96
   523  0079AA  60                 	db	96
   524  0079AB  00                 	db	0
   525  0079AC  00                 	db	0
   526  0079AD  00                 	db	0
   527  0079AE  00                 	db	0
   528  0079AF  78                 	db	120
   529  0079B0  FC                 	db	252
   530  0079B1  CC                 	db	204
   531  0079B2  CC                 	db	204
   532  0079B3  78                 	db	120
   533  0079B4  78                 	db	120
   534  0079B5  CC                 	db	204
   535  0079B6  CC                 	db	204
   536  0079B7  CC                 	db	204
   537  0079B8  FC                 	db	252
   538  0079B9  78                 	db	120
   539  0079BA  00                 	db	0
   540  0079BB  00                 	db	0
   541  0079BC  00                 	db	0
   542  0079BD  00                 	db	0
   543  0079BE  70                 	db	112
   544  0079BF  F8                 	db	248
   545  0079C0  CC                 	db	204
   546  0079C1  CC                 	db	204
   547  0079C2  CC                 	db	204
   548  0079C3  FC                 	db	252
   549  0079C4  7C                 	db	124
   550  0079C5  0C                 	db	12
   551  0079C6  CC                 	db	204
   552  0079C7  F8                 	db	248
   553  0079C8  70                 	db	112
   554  0079C9  00                 	db	0
   555  0079CA  00                 	db	0
   556  0079CB  00                 	db	0
   557  0079CC  00                 	db	0
   558  0079CD  00                 	db	0
   559  0079CE  00                 	db	0
   560  0079CF  00                 	db	0
   561  0079D0  C0                 	db	192
   562  0079D1  C0                 	db	192
   563  0079D2  00                 	db	0
   564  0079D3  00                 	db	0
   565  0079D4  00                 	db	0
   566  0079D5  00                 	db	0
   567  0079D6  C0                 	db	192
   568  0079D7  C0                 	db	192
   569  0079D8  00                 	db	0
   570  0079D9  00                 	db	0
   571  0079DA  00                 	db	0
   572  0079DB  00                 	db	0
   573  0079DC  00                 	db	0
   574  0079DD  00                 	db	0
   575  0079DE  00                 	db	0
   576  0079DF  C0                 	db	192
   577  0079E0  C0                 	db	192
   578  0079E1  00                 	db	0
   579  0079E2  00                 	db	0
   580  0079E3  00                 	db	0
   581  0079E4  00                 	db	0
   582  0079E5  C0                 	db	192
   583  0079E6  C0                 	db	192
   584  0079E7  40                 	db	64
   585  0079E8  40                 	db	64
   586  0079E9  80                 	db	128
   587  0079EA  00                 	db	0
   588  0079EB  00                 	db	0
   589  0079EC  04                 	db	4
   590  0079ED  1C                 	db	28
   591  0079EE  38                 	db	56
   592  0079EF  F0                 	db	240
   593  0079F0  C0                 	db	192
   594  0079F1  F0                 	db	240
   595  0079F2  38                 	db	56
   596  0079F3  1C                 	db	28
   597  0079F4  04                 	db	4
   598  0079F5  00                 	db	0
   599  0079F6  00                 	db	0
   600  0079F7  00                 	db	0
   601  0079F8  00                 	db	0
   602  0079F9  00                 	db	0
   603  0079FA  00                 	db	0
   604  0079FB  00                 	db	0
   605  0079FC  00                 	db	0
   606  0079FD  FC                 	db	252
   607  0079FE  FC                 	db	252
   608  0079FF  00                 	db	0
   609  007A00  FC                 	db	252
   610  007A01  FC                 	db	252
   611  007A02  00                 	db	0
   612  007A03  00                 	db	0
   613  007A04  00                 	db	0
   614  007A05  00                 	db	0
   615  007A06  00                 	db	0
   616  007A07  00                 	db	0
   617  007A08  00                 	db	0
   618  007A09  00                 	db	0
   619  007A0A  80                 	db	128
   620  007A0B  E0                 	db	224
   621  007A0C  70                 	db	112
   622  007A0D  3C                 	db	60
   623  007A0E  0C                 	db	12
   624  007A0F  1C                 	db	28
   625  007A10  70                 	db	112
   626  007A11  E0                 	db	224
   627  007A12  80                 	db	128
   628  007A13  00                 	db	0
   629  007A14  00                 	db	0
   630  007A15  00                 	db	0
   631  007A16  00                 	db	0
   632  007A17  00                 	db	0
   633  007A18  78                 	db	120
   634  007A19  FC                 	db	252
   635  007A1A  CC                 	db	204
   636  007A1B  CC                 	db	204
   637  007A1C  1C                 	db	28
   638  007A1D  18                 	db	24
   639  007A1E  30                 	db	48
   640  007A1F  30                 	db	48
   641  007A20  00                 	db	0
   642  007A21  30                 	db	48
   643  007A22  30                 	db	48
   644  007A23  00                 	db	0
   645  007A24  00                 	db	0
   646  007A25  00                 	db	0
   647  007A26  00                 	db	0
   648  007A27  00                 	db	0
   649  007A28  0F                 	db	15
   650  007A29  C0                 	db	192
   651  007A2A  1F                 	db	31
   652  007A2B  E0                 	db	224
   653  007A2C  30                 	db	48
   654  007A2D  30                 	db	48
   655  007A2E  66                 	db	102
   656  007A2F  D8                 	db	216
   657  007A30  EF                 	db	239
   658  007A31  D8                 	db	216
   659  007A32  DD                 	db	221
   660  007A33  D8                 	db	216
   661  007A34  D8                 	db	216
   662  007A35  98                 	db	152
   663  007A36  D9                 	db	217
   664  007A37  98                 	db	152
   665  007A38  D9                 	db	217
   666  007A39  B0                 	db	176
   667  007A3A  DF                 	db	223
   668  007A3B  F0                 	db	240
   669  007A3C  6E                 	db	110
   670  007A3D  C8                 	db	200
   671  007A3E  70                 	db	112
   672  007A3F  10                 	db	16
   673  007A40  3F                 	db	63
   674  007A41  E0                 	db	224
   675  007A42  0F                 	db	15
   676  007A43  C0                 	db	192
   677  007A44  00                 	db	0
   678  007A45  00                 	db	0
   679  007A46  1C                 	db	28
   680  007A47  00                 	db	0
   681  007A48  1C                 	db	28
   682  007A49  00                 	db	0
   683  007A4A  1C                 	db	28
   684  007A4B  00                 	db	0
   685  007A4C  36                 	db	54
   686  007A4D  00                 	db	0
   687  007A4E  36                 	db	54
   688  007A4F  00                 	db	0
   689  007A50  36                 	db	54
   690  007A51  00                 	db	0
   691  007A52  63                 	db	99
   692  007A53  00                 	db	0
   693  007A54  7F                 	db	127
   694  007A55  00                 	db	0
   695  007A56  7F                 	db	127
   696  007A57  00                 	db	0
   697  007A58  C1                 	db	193
   698  007A59  80                 	db	128
   699  007A5A  C1                 	db	193
   700  007A5B  80                 	db	128
   701  007A5C  00                 	db	0
   702  007A5D  00                 	db	0
   703  007A5E  00                 	db	0
   704  007A5F  00                 	db	0
   705  007A60  00                 	db	0
   706  007A61  00                 	db	0
   707  007A62  00                 	db	0
   708  007A63  FC                 	db	252
   709  007A64  FE                 	db	254
   710  007A65  C6                 	db	198
   711  007A66  C6                 	db	198
   712  007A67  FC                 	db	252
   713  007A68  FC                 	db	252
   714  007A69  C6                 	db	198
   715  007A6A  C6                 	db	198
   716  007A6B  C6                 	db	198
   717  007A6C  FE                 	db	254
   718  007A6D  FC                 	db	252
   719  007A6E  00                 	db	0
   720  007A6F  00                 	db	0
   721  007A70  00                 	db	0
   722  007A71  00                 	db	0
   723  007A72  3C                 	db	60
   724  007A73  7E                 	db	126
   725  007A74  67                 	db	103
   726  007A75  C2                 	db	194
   727  007A76  C0                 	db	192
   728  007A77  C0                 	db	192
   729  007A78  C0                 	db	192
   730  007A79  C2                 	db	194
   731  007A7A  67                 	db	103
   732  007A7B  7E                 	db	126
   733  007A7C  3C                 	db	60
   734  007A7D  00                 	db	0
   735  007A7E  00                 	db	0
   736  007A7F  00                 	db	0
   737  007A80  00                 	db	0
   738  007A81  F8                 	db	248
   739  007A82  FC                 	db	252
   740  007A83  CE                 	db	206
   741  007A84  C6                 	db	198
   742  007A85  C6                 	db	198
   743  007A86  C6                 	db	198
   744  007A87  C6                 	db	198
   745  007A88  C6                 	db	198
   746  007A89  CE                 	db	206
   747  007A8A  FC                 	db	252
   748  007A8B  F8                 	db	248
   749  007A8C  00                 	db	0
   750  007A8D  00                 	db	0
   751  007A8E  00                 	db	0
   752  007A8F  00                 	db	0
   753  007A90  FE                 	db	254
   754  007A91  FE                 	db	254
   755  007A92  C0                 	db	192
   756  007A93  C0                 	db	192
   757  007A94  FE                 	db	254
   758  007A95  FE                 	db	254
   759  007A96  C0                 	db	192
   760  007A97  C0                 	db	192
   761  007A98  C0                 	db	192
   762  007A99  FE                 	db	254
   763  007A9A  FE                 	db	254
   764  007A9B  00                 	db	0
   765  007A9C  00                 	db	0
   766  007A9D  00                 	db	0
   767  007A9E  00                 	db	0
   768  007A9F  FC                 	db	252
   769  007AA0  FC                 	db	252
   770  007AA1  C0                 	db	192
   771  007AA2  C0                 	db	192
   772  007AA3  F8                 	db	248
   773  007AA4  F8                 	db	248
   774  007AA5  C0                 	db	192
   775  007AA6  C0                 	db	192
   776  007AA7  C0                 	db	192
   777  007AA8  C0                 	db	192
   778  007AA9  C0                 	db	192
   779  007AAA  00                 	db	0
   780  007AAB  00                 	db	0
   781  007AAC  00                 	db	0
   782  007AAD  00                 	db	0
   783  007AAE  3C                 	db	60
   784  007AAF  7E                 	db	126
   785  007AB0  67                 	db	103
   786  007AB1  C3                 	db	195
   787  007AB2  C0                 	db	192
   788  007AB3  CF                 	db	207
   789  007AB4  CF                 	db	207
   790  007AB5  C3                 	db	195
   791  007AB6  63                 	db	99
   792  007AB7  7F                 	db	127
   793  007AB8  3C                 	db	60
   794  007AB9  00                 	db	0
   795  007ABA  00                 	db	0
   796  007ABB  00                 	db	0
   797  007ABC  00                 	db	0
   798  007ABD  C6                 	db	198
   799  007ABE  C6                 	db	198
   800  007ABF  C6                 	db	198
   801  007AC0  C6                 	db	198
   802  007AC1  FE                 	db	254
   803  007AC2  FE                 	db	254
   804  007AC3  C6                 	db	198
   805  007AC4  C6                 	db	198
   806  007AC5  C6                 	db	198
   807  007AC6  C6                 	db	198
   808  007AC7  C6                 	db	198
   809  007AC8  00                 	db	0
   810  007AC9  00                 	db	0
   811  007ACA  00                 	db	0
   812  007ACB  00                 	db	0
   813  007ACC  C0                 	db	192
   814  007ACD  C0                 	db	192
   815  007ACE  C0                 	db	192
   816  007ACF  C0                 	db	192
   817  007AD0  C0                 	db	192
   818  007AD1  C0                 	db	192
   819  007AD2  C0                 	db	192
   820  007AD3  C0                 	db	192
   821  007AD4  C0                 	db	192
   822  007AD5  C0                 	db	192
   823  007AD6  C0                 	db	192
   824  007AD7  00                 	db	0
   825  007AD8  00                 	db	0
   826  007AD9  00                 	db	0
   827  007ADA  00                 	db	0
   828  007ADB  0C                 	db	12
   829  007ADC  0C                 	db	12
   830  007ADD  0C                 	db	12
   831  007ADE  0C                 	db	12
   832  007ADF  0C                 	db	12
   833  007AE0  0C                 	db	12
   834  007AE1  0C                 	db	12
   835  007AE2  CC                 	db	204
   836  007AE3  CC                 	db	204
   837  007AE4  FC                 	db	252
   838  007AE5  78                 	db	120
   839  007AE6  00                 	db	0
   840  007AE7  00                 	db	0
   841  007AE8  00                 	db	0
   842  007AE9  00                 	db	0
   843  007AEA  C3                 	db	195
   844  007AEB  C6                 	db	198
   845  007AEC  CC                 	db	204
   846  007AED  CC                 	db	204
   847  007AEE  D8                 	db	216
   848  007AEF  FC                 	db	252
   849  007AF0  EC                 	db	236
   850  007AF1  C6                 	db	198
   851  007AF2  C6                 	db	198
   852  007AF3  C3                 	db	195
   853  007AF4  C3                 	db	195
   854  007AF5  00                 	db	0
   855  007AF6  00                 	db	0
   856  007AF7  00                 	db	0
   857  007AF8  00                 	db	0
   858  007AF9  C0                 	db	192
   859  007AFA  C0                 	db	192
   860  007AFB  C0                 	db	192
   861  007AFC  C0                 	db	192
   862  007AFD  C0                 	db	192
   863  007AFE  C0                 	db	192
   864  007AFF  C0                 	db	192
   865  007B00  C0                 	db	192
   866  007B01  C0                 	db	192
   867  007B02  FE                 	db	254
   868  007B03  FE                 	db	254
   869  007B04  00                 	db	0
   870  007B05  00                 	db	0
   871  007B06  00                 	db	0
   872  007B07  00                 	db	0
   873  007B08  00                 	db	0
   874  007B09  E3                 	db	227
   875  007B0A  80                 	db	128
   876  007B0B  E3                 	db	227
   877  007B0C  80                 	db	128
   878  007B0D  E3                 	db	227
   879  007B0E  80                 	db	128
   880  007B0F  F7                 	db	247
   881  007B10  80                 	db	128
   882  007B11  D5                 	db	213
   883  007B12  80                 	db	128
   884  007B13  D5                 	db	213
   885  007B14  80                 	db	128
   886  007B15  D5                 	db	213
   887  007B16  80                 	db	128
   888  007B17  D5                 	db	213
   889  007B18  80                 	db	128
   890  007B19  DD                 	db	221
   891  007B1A  80                 	db	128
   892  007B1B  D9                 	db	217
   893  007B1C  80                 	db	128
   894  007B1D  C9                 	db	201
   895  007B1E  80                 	db	128
   896  007B1F  00                 	db	0
   897  007B20  00                 	db	0
   898  007B21  00                 	db	0
   899  007B22  00                 	db	0
   900  007B23  00                 	db	0
   901  007B24  00                 	db	0
   902  007B25  00                 	db	0
   903  007B26  C6                 	db	198
   904  007B27  E6                 	db	230
   905  007B28  E6                 	db	230
   906  007B29  E6                 	db	230
   907  007B2A  F6                 	db	246
   908  007B2B  D6                 	db	214
   909  007B2C  DE                 	db	222
   910  007B2D  DE                 	db	222
   911  007B2E  CE                 	db	206
   912  007B2F  CE                 	db	206
   913  007B30  C6                 	db	198
   914  007B31  00                 	db	0
   915  007B32  00                 	db	0
   916  007B33  00                 	db	0
   917  007B34  00                 	db	0
   918  007B35  3C                 	db	60
   919  007B36  7E                 	db	126
   920  007B37  67                 	db	103
   921  007B38  C3                 	db	195
   922  007B39  C3                 	db	195
   923  007B3A  C3                 	db	195
   924  007B3B  C3                 	db	195
   925  007B3C  C3                 	db	195
   926  007B3D  66                 	db	102
   927  007B3E  7E                 	db	126
   928  007B3F  3C                 	db	60
   929  007B40  00                 	db	0
   930  007B41  00                 	db	0
   931  007B42  00                 	db	0
   932  007B43  00                 	db	0
   933  007B44  FC                 	db	252
   934  007B45  FE                 	db	254
   935  007B46  C6                 	db	198
   936  007B47  C6                 	db	198
   937  007B48  C6                 	db	198
   938  007B49  FE                 	db	254
   939  007B4A  FC                 	db	252
   940  007B4B  C0                 	db	192
   941  007B4C  C0                 	db	192
   942  007B4D  C0                 	db	192
   943  007B4E  C0                 	db	192
   944  007B4F  00                 	db	0
   945  007B50  00                 	db	0
   946  007B51  00                 	db	0
   947  007B52  00                 	db	0
   948  007B53  00                 	db	0
   949  007B54  3C                 	db	60
   950  007B55  00                 	db	0
   951  007B56  7E                 	db	126
   952  007B57  00                 	db	0
   953  007B58  E7                 	db	231
   954  007B59  00                 	db	0
   955  007B5A  C3                 	db	195
   956  007B5B  00                 	db	0
   957  007B5C  C3                 	db	195
   958  007B5D  00                 	db	0
   959  007B5E  C3                 	db	195
   960  007B5F  00                 	db	0
   961  007B60  C3                 	db	195
   962  007B61  00                 	db	0
   963  007B62  CB                 	db	203
   964  007B63  00                 	db	0
   965  007B64  66                 	db	102
   966  007B65  00                 	db	0
   967  007B66  7F                 	db	127
   968  007B67  00                 	db	0
   969  007B68  3D                 	db	61
   970  007B69  80                 	db	128
   971  007B6A  00                 	db	0
   972  007B6B  80                 	db	128
   973  007B6C  00                 	db	0
   974  007B6D  00                 	db	0
   975  007B6E  00                 	db	0
   976  007B6F  00                 	db	0
   977  007B70  00                 	db	0
   978  007B71  FC                 	db	252
   979  007B72  FE                 	db	254
   980  007B73  C6                 	db	198
   981  007B74  C6                 	db	198
   982  007B75  FE                 	db	254
   983  007B76  FC                 	db	252
   984  007B77  CC                 	db	204
   985  007B78  C6                 	db	198
   986  007B79  C6                 	db	198
   987  007B7A  C6                 	db	198
   988  007B7B  C3                 	db	195
   989  007B7C  00                 	db	0
   990  007B7D  00                 	db	0
   991  007B7E  00                 	db	0
   992  007B7F  00                 	db	0
   993  007B80  7C                 	db	124
   994  007B81  FE                 	db	254
   995  007B82  C6                 	db	198
   996  007B83  C6                 	db	198
   997  007B84  F0                 	db	240
   998  007B85  7C                 	db	124
   999  007B86  0E                 	db	14
  1000  007B87  C6                 	db	198
  1001  007B88  C6                 	db	198
  1002  007B89  FE                 	db	254
  1003  007B8A  7C                 	db	124
  1004  007B8B  00                 	db	0
  1005  007B8C  00                 	db	0
  1006  007B8D  00                 	db	0
  1007  007B8E  00                 	db	0
  1008  007B8F  FF                 	db	255
  1009  007B90  FF                 	db	255
  1010  007B91  18                 	db	24
  1011  007B92  18                 	db	24
  1012  007B93  18                 	db	24
  1013  007B94  18                 	db	24
  1014  007B95  18                 	db	24
  1015  007B96  18                 	db	24
  1016  007B97  18                 	db	24
  1017  007B98  18                 	db	24
  1018  007B99  18                 	db	24
  1019  007B9A  00                 	db	0
  1020  007B9B  00                 	db	0
  1021  007B9C  00                 	db	0
  1022  007B9D  00                 	db	0
  1023  007B9E  C6                 	db	198
  1024  007B9F  C6                 	db	198
  1025  007BA0  C6                 	db	198
  1026  007BA1  C6                 	db	198
  1027  007BA2  C6                 	db	198
  1028  007BA3  C6                 	db	198
  1029  007BA4  C6                 	db	198
  1030  007BA5  C6                 	db	198
  1031  007BA6  C6                 	db	198
  1032  007BA7  7E                 	db	126
  1033  007BA8  38                 	db	56
  1034  007BA9  00                 	db	0
  1035  007BAA  00                 	db	0
  1036  007BAB  00                 	db	0
  1037  007BAC  00                 	db	0
  1038  007BAD  00                 	db	0
  1039  007BAE  C1                 	db	193
  1040  007BAF  80                 	db	128
  1041  007BB0  C1                 	db	193
  1042  007BB1  80                 	db	128
  1043  007BB2  63                 	db	99
  1044  007BB3  00                 	db	0
  1045  007BB4  63                 	db	99
  1046  007BB5  00                 	db	0
  1047  007BB6  63                 	db	99
  1048  007BB7  00                 	db	0
  1049  007BB8  36                 	db	54
  1050  007BB9  00                 	db	0
  1051  007BBA  36                 	db	54
  1052  007BBB  00                 	db	0
  1053  007BBC  36                 	db	54
  1054  007BBD  00                 	db	0
  1055  007BBE  1C                 	db	28
  1056  007BBF  00                 	db	0
  1057  007BC0  1C                 	db	28
  1058  007BC1  00                 	db	0
  1059  007BC2  1C                 	db	28
  1060  007BC3  00                 	db	0
  1061  007BC4  00                 	db	0
  1062  007BC5  00                 	db	0
  1063  007BC6  00                 	db	0
  1064  007BC7  00                 	db	0
  1065  007BC8  00                 	db	0
  1066  007BC9  00                 	db	0
  1067  007BCA  00                 	db	0
  1068  007BCB  00                 	db	0
  1069  007BCC  C4                 	db	196
  1070  007BCD  60                 	db	96
  1071  007BCE  C4                 	db	196
  1072  007BCF  60                 	db	96
  1073  007BD0  CA                 	db	202
  1074  007BD1  60                 	db	96
  1075  007BD2  6A                 	db	106
  1076  007BD3  C0                 	db	192
  1077  007BD4  6A                 	db	106
  1078  007BD5  C0                 	db	192
  1079  007BD6  6A                 	db	106
  1080  007BD7  C0                 	db	192
  1081  007BD8  6A                 	db	106
  1082  007BD9  C0                 	db	192
  1083  007BDA  6A                 	db	106
  1084  007BDB  C0                 	db	192
  1085  007BDC  31                 	db	49
  1086  007BDD  80                 	db	128
  1087  007BDE  31                 	db	49
  1088  007BDF  80                 	db	128
  1089  007BE0  31                 	db	49
  1090  007BE1  80                 	db	128
  1091  007BE2  00                 	db	0
  1092  007BE3  00                 	db	0
  1093  007BE4  00                 	db	0
  1094  007BE5  00                 	db	0
  1095  007BE6  00                 	db	0
  1096  007BE7  00                 	db	0
  1097  007BE8  00                 	db	0
  1098  007BE9  00                 	db	0
  1099  007BEA  C1                 	db	193
  1100  007BEB  80                 	db	128
  1101  007BEC  63                 	db	99
  1102  007BED  00                 	db	0
  1103  007BEE  36                 	db	54
  1104  007BEF  00                 	db	0
  1105  007BF0  36                 	db	54
  1106  007BF1  00                 	db	0
  1107  007BF2  1C                 	db	28
  1108  007BF3  00                 	db	0
  1109  007BF4  1C                 	db	28
  1110  007BF5  00                 	db	0
  1111  007BF6  1C                 	db	28
  1112  007BF7  00                 	db	0
  1113  007BF8  36                 	db	54
  1114  007BF9  00                 	db	0
  1115  007BFA  36                 	db	54
  1116  007BFB  00                 	db	0
  1117  007BFC  63                 	db	99
  1118  007BFD  00                 	db	0
  1119  007BFE  C1                 	db	193
  1120  007BFF  80                 	db	128
  1121  007C00  00                 	db	0
  1122  007C01  00                 	db	0
  1123  007C02  00                 	db	0
  1124  007C03  00                 	db	0
  1125  007C04  00                 	db	0
  1126  007C05  00                 	db	0
  1127  007C06  00                 	db	0
  1128  007C07  C3                 	db	195
  1129  007C08  66                 	db	102
  1130  007C09  66                 	db	102
  1131  007C0A  3C                 	db	60
  1132  007C0B  3C                 	db	60
  1133  007C0C  18                 	db	24
  1134  007C0D  18                 	db	24
  1135  007C0E  18                 	db	24
  1136  007C0F  18                 	db	24
  1137  007C10  18                 	db	24
  1138  007C11  18                 	db	24
  1139  007C12  00                 	db	0
  1140  007C13  00                 	db	0
  1141  007C14  00                 	db	0
  1142  007C15  00                 	db	0
  1143  007C16  FE                 	db	254
  1144  007C17  FE                 	db	254
  1145  007C18  06                 	db	6
  1146  007C19  0C                 	db	12
  1147  007C1A  18                 	db	24
  1148  007C1B  30                 	db	48
  1149  007C1C  30                 	db	48
  1150  007C1D  60                 	db	96
  1151  007C1E  C0                 	db	192
  1152  007C1F  FE                 	db	254
  1153  007C20  FE                 	db	254
  1154  007C21  00                 	db	0
  1155  007C22  00                 	db	0
  1156  007C23  00                 	db	0
  1157  007C24  00                 	db	0
  1158  007C25  E0                 	db	224
  1159  007C26  E0                 	db	224
  1160  007C27  C0                 	db	192
  1161  007C28  C0                 	db	192
  1162  007C29  C0                 	db	192
  1163  007C2A  C0                 	db	192
  1164  007C2B  C0                 	db	192
  1165  007C2C  C0                 	db	192
  1166  007C2D  C0                 	db	192
  1167  007C2E  C0                 	db	192
  1168  007C2F  C0                 	db	192
  1169  007C30  C0                 	db	192
  1170  007C31  E0                 	db	224
  1171  007C32  E0                 	db	224
  1172  007C33  00                 	db	0
  1173  007C34  C0                 	db	192
  1174  007C35  C0                 	db	192
  1175  007C36  C0                 	db	192
  1176  007C37  60                 	db	96
  1177  007C38  60                 	db	96
  1178  007C39  60                 	db	96
  1179  007C3A  60                 	db	96
  1180  007C3B  60                 	db	96
  1181  007C3C  30                 	db	48
  1182  007C3D  30                 	db	48
  1183  007C3E  30                 	db	48
  1184  007C3F  00                 	db	0
  1185  007C40  00                 	db	0
  1186  007C41  00                 	db	0
  1187  007C42  00                 	db	0
  1188  007C43  E0                 	db	224
  1189  007C44  E0                 	db	224
  1190  007C45  60                 	db	96
  1191  007C46  60                 	db	96
  1192  007C47  60                 	db	96
  1193  007C48  60                 	db	96
  1194  007C49  60                 	db	96
  1195  007C4A  60                 	db	96
  1196  007C4B  60                 	db	96
  1197  007C4C  60                 	db	96
  1198  007C4D  60                 	db	96
  1199  007C4E  60                 	db	96
  1200  007C4F  E0                 	db	224
  1201  007C50  E0                 	db	224
  1202  007C51  00                 	db	0
  1203  007C52  38                 	db	56
  1204  007C53  38                 	db	56
  1205  007C54  6C                 	db	108
  1206  007C55  6C                 	db	108
  1207  007C56  6C                 	db	108
  1208  007C57  C6                 	db	198
  1209  007C58  00                 	db	0
  1210  007C59  00                 	db	0
  1211  007C5A  00                 	db	0
  1212  007C5B  00                 	db	0
  1213  007C5C  00                 	db	0
  1214  007C5D  00                 	db	0
  1215  007C5E  00                 	db	0
  1216  007C5F  00                 	db	0
  1217  007C60  00                 	db	0
  1218  007C61  00                 	db	0
  1219  007C62  00                 	db	0
  1220  007C63  00                 	db	0
  1221  007C64  00                 	db	0
  1222  007C65  00                 	db	0
  1223  007C66  00                 	db	0
  1224  007C67  00                 	db	0
  1225  007C68  00                 	db	0
  1226  007C69  00                 	db	0
  1227  007C6A  00                 	db	0
  1228  007C6B  00                 	db	0
  1229  007C6C  00                 	db	0
  1230  007C6D  FE                 	db	254
  1231  007C6E  00                 	db	0
  1232  007C6F  00                 	db	0
  1233  007C70  C0                 	db	192
  1234  007C71  60                 	db	96
  1235  007C72  00                 	db	0
  1236  007C73  00                 	db	0
  1237  007C74  00                 	db	0
  1238  007C75  00                 	db	0
  1239  007C76  00                 	db	0
  1240  007C77  00                 	db	0
  1241  007C78  00                 	db	0
  1242  007C79  00                 	db	0
  1243  007C7A  00                 	db	0
  1244  007C7B  00                 	db	0
  1245  007C7C  00                 	db	0
  1246  007C7D  00                 	db	0
  1247  007C7E  00                 	db	0
  1248  007C7F  00                 	db	0
  1249  007C80  00                 	db	0
  1250  007C81  00                 	db	0
  1251  007C82  78                 	db	120
  1252  007C83  FC                 	db	252
  1253  007C84  CC                 	db	204
  1254  007C85  3C                 	db	60
  1255  007C86  FC                 	db	252
  1256  007C87  CC                 	db	204
  1257  007C88  FC                 	db	252
  1258  007C89  6C                 	db	108
  1259  007C8A  00                 	db	0
  1260  007C8B  00                 	db	0
  1261  007C8C  00                 	db	0
  1262  007C8D  00                 	db	0
  1263  007C8E  C0                 	db	192
  1264  007C8F  C0                 	db	192
  1265  007C90  C0                 	db	192
  1266  007C91  F8                 	db	248
  1267  007C92  FC                 	db	252
  1268  007C93  CC                 	db	204
  1269  007C94  CC                 	db	204
  1270  007C95  CC                 	db	204
  1271  007C96  CC                 	db	204
  1272  007C97  F8                 	db	248
  1273  007C98  F8                 	db	248
  1274  007C99  00                 	db	0
  1275  007C9A  00                 	db	0
  1276  007C9B  00                 	db	0
  1277  007C9C  00                 	db	0
  1278  007C9D  00                 	db	0
  1279  007C9E  00                 	db	0
  1280  007C9F  00                 	db	0
  1281  007CA0  70                 	db	112
  1282  007CA1  78                 	db	120
  1283  007CA2  D8                 	db	216
  1284  007CA3  C0                 	db	192
  1285  007CA4  C0                 	db	192
  1286  007CA5  D8                 	db	216
  1287  007CA6  78                 	db	120
  1288  007CA7  70                 	db	112
  1289  007CA8  00                 	db	0
  1290  007CA9  00                 	db	0
  1291  007CAA  00                 	db	0
  1292  007CAB  00                 	db	0
  1293  007CAC  0C                 	db	12
  1294  007CAD  0C                 	db	12
  1295  007CAE  0C                 	db	12
  1296  007CAF  7C                 	db	124
  1297  007CB0  FC                 	db	252
  1298  007CB1  CC                 	db	204
  1299  007CB2  CC                 	db	204
  1300  007CB3  CC                 	db	204
  1301  007CB4  CC                 	db	204
  1302  007CB5  FC                 	db	252
  1303  007CB6  7C                 	db	124
  1304  007CB7  00                 	db	0
  1305  007CB8  00                 	db	0
  1306  007CB9  00                 	db	0
  1307  007CBA  00                 	db	0
  1308  007CBB  00                 	db	0
  1309  007CBC  00                 	db	0
  1310  007CBD  00                 	db	0
  1311  007CBE  70                 	db	112
  1312  007CBF  F8                 	db	248
  1313  007CC0  D8                 	db	216
  1314  007CC1  F8                 	db	248
  1315  007CC2  C0                 	db	192
  1316  007CC3  D8                 	db	216
  1317  007CC4  F8                 	db	248
  1318  007CC5  70                 	db	112
  1319  007CC6  00                 	db	0
  1320  007CC7  00                 	db	0
  1321  007CC8  00                 	db	0
  1322  007CC9  00                 	db	0
  1323  007CCA  30                 	db	48
  1324  007CCB  70                 	db	112
  1325  007CCC  60                 	db	96
  1326  007CCD  F0                 	db	240
  1327  007CCE  F0                 	db	240
  1328  007CCF  60                 	db	96
  1329  007CD0  60                 	db	96
  1330  007CD1  60                 	db	96
  1331  007CD2  60                 	db	96
  1332  007CD3  60                 	db	96
  1333  007CD4  60                 	db	96
  1334  007CD5  00                 	db	0
  1335  007CD6  00                 	db	0
  1336  007CD7  00                 	db	0
  1337  007CD8  00                 	db	0
  1338  007CD9  00                 	db	0
  1339  007CDA  00                 	db	0
  1340  007CDB  00                 	db	0
  1341  007CDC  6C                 	db	108
  1342  007CDD  FC                 	db	252
  1343  007CDE  CC                 	db	204
  1344  007CDF  CC                 	db	204
  1345  007CE0  CC                 	db	204
  1346  007CE1  CC                 	db	204
  1347  007CE2  FC                 	db	252
  1348  007CE3  6C                 	db	108
  1349  007CE4  0C                 	db	12
  1350  007CE5  CC                 	db	204
  1351  007CE6  78                 	db	120
  1352  007CE7  00                 	db	0
  1353  007CE8  C0                 	db	192
  1354  007CE9  C0                 	db	192
  1355  007CEA  C0                 	db	192
  1356  007CEB  D8                 	db	216
  1357  007CEC  FC                 	db	252
  1358  007CED  CC                 	db	204
  1359  007CEE  CC                 	db	204
  1360  007CEF  CC                 	db	204
  1361  007CF0  CC                 	db	204
  1362  007CF1  CC                 	db	204
  1363  007CF2  CC                 	db	204
  1364  007CF3  00                 	db	0
  1365  007CF4  00                 	db	0
  1366  007CF5  00                 	db	0
  1367  007CF6  00                 	db	0
  1368  007CF7  C0                 	db	192
  1369  007CF8  C0                 	db	192
  1370  007CF9  00                 	db	0
  1371  007CFA  C0                 	db	192
  1372  007CFB  C0                 	db	192
  1373  007CFC  C0                 	db	192
  1374  007CFD  C0                 	db	192
  1375  007CFE  C0                 	db	192
  1376  007CFF  C0                 	db	192
  1377  007D00  C0                 	db	192
  1378  007D01  C0                 	db	192
  1379  007D02  00                 	db	0
  1380  007D03  00                 	db	0
  1381  007D04  00                 	db	0
  1382  007D05  00                 	db	0
  1383  007D06  30                 	db	48
  1384  007D07  30                 	db	48
  1385  007D08  00                 	db	0
  1386  007D09  30                 	db	48
  1387  007D0A  30                 	db	48
  1388  007D0B  30                 	db	48
  1389  007D0C  30                 	db	48
  1390  007D0D  30                 	db	48
  1391  007D0E  30                 	db	48
  1392  007D0F  30                 	db	48
  1393  007D10  30                 	db	48
  1394  007D11  30                 	db	48
  1395  007D12  F0                 	db	240
  1396  007D13  E0                 	db	224
  1397  007D14  00                 	db	0
  1398  007D15  C0                 	db	192
  1399  007D16  C0                 	db	192
  1400  007D17  C0                 	db	192
  1401  007D18  CC                 	db	204
  1402  007D19  D8                 	db	216
  1403  007D1A  F0                 	db	240
  1404  007D1B  F8                 	db	248
  1405  007D1C  D8                 	db	216
  1406  007D1D  D8                 	db	216
  1407  007D1E  CC                 	db	204
  1408  007D1F  CC                 	db	204
  1409  007D20  00                 	db	0
  1410  007D21  00                 	db	0
  1411  007D22  00                 	db	0
  1412  007D23  00                 	db	0
  1413  007D24  C0                 	db	192
  1414  007D25  C0                 	db	192
  1415  007D26  C0                 	db	192
  1416  007D27  C0                 	db	192
  1417  007D28  C0                 	db	192
  1418  007D29  C0                 	db	192
  1419  007D2A  C0                 	db	192
  1420  007D2B  C0                 	db	192
  1421  007D2C  C0                 	db	192
  1422  007D2D  C0                 	db	192
  1423  007D2E  C0                 	db	192
  1424  007D2F  00                 	db	0
  1425  007D30  00                 	db	0
  1426  007D31  00                 	db	0
  1427  007D32  00                 	db	0
  1428  007D33  00                 	db	0
  1429  007D34  00                 	db	0
  1430  007D35  00                 	db	0
  1431  007D36  00                 	db	0
  1432  007D37  00                 	db	0
  1433  007D38  00                 	db	0
  1434  007D39  00                 	db	0
  1435  007D3A  D9                 	db	217
  1436  007D3B  80                 	db	128
  1437  007D3C  FF                 	db	255
  1438  007D3D  C0                 	db	192
  1439  007D3E  CC                 	db	204
  1440  007D3F  C0                 	db	192
  1441  007D40  CC                 	db	204
  1442  007D41  C0                 	db	192
  1443  007D42  CC                 	db	204
  1444  007D43  C0                 	db	192
  1445  007D44  CC                 	db	204
  1446  007D45  C0                 	db	192
  1447  007D46  CC                 	db	204
  1448  007D47  C0                 	db	192
  1449  007D48  CC                 	db	204
  1450  007D49  C0                 	db	192
  1451  007D4A  00                 	db	0
  1452  007D4B  00                 	db	0
  1453  007D4C  00                 	db	0
  1454  007D4D  00                 	db	0
  1455  007D4E  00                 	db	0
  1456  007D4F  00                 	db	0
  1457  007D50  00                 	db	0
  1458  007D51  00                 	db	0
  1459  007D52  00                 	db	0
  1460  007D53  00                 	db	0
  1461  007D54  D8                 	db	216
  1462  007D55  FC                 	db	252
  1463  007D56  CC                 	db	204
  1464  007D57  CC                 	db	204
  1465  007D58  CC                 	db	204
  1466  007D59  CC                 	db	204
  1467  007D5A  CC                 	db	204
  1468  007D5B  CC                 	db	204
  1469  007D5C  00                 	db	0
  1470  007D5D  00                 	db	0
  1471  007D5E  00                 	db	0
  1472  007D5F  00                 	db	0
  1473  007D60  00                 	db	0
  1474  007D61  00                 	db	0
  1475  007D62  00                 	db	0
  1476  007D63  78                 	db	120
  1477  007D64  78                 	db	120
  1478  007D65  CC                 	db	204
  1479  007D66  CC                 	db	204
  1480  007D67  CC                 	db	204
  1481  007D68  CC                 	db	204
  1482  007D69  78                 	db	120
  1483  007D6A  78                 	db	120
  1484  007D6B  00                 	db	0
  1485  007D6C  00                 	db	0
  1486  007D6D  00                 	db	0
  1487  007D6E  00                 	db	0
  1488  007D6F  00                 	db	0
  1489  007D70  00                 	db	0
  1490  007D71  00                 	db	0
  1491  007D72  D8                 	db	216
  1492  007D73  FC                 	db	252
  1493  007D74  CC                 	db	204
  1494  007D75  CC                 	db	204
  1495  007D76  CC                 	db	204
  1496  007D77  CC                 	db	204
  1497  007D78  F8                 	db	248
  1498  007D79  D8                 	db	216
  1499  007D7A  C0                 	db	192
  1500  007D7B  C0                 	db	192
  1501  007D7C  C0                 	db	192
  1502  007D7D  00                 	db	0
  1503  007D7E  00                 	db	0
  1504  007D7F  00                 	db	0
  1505  007D80  00                 	db	0
  1506  007D81  6C                 	db	108
  1507  007D82  FC                 	db	252
  1508  007D83  CC                 	db	204
  1509  007D84  CC                 	db	204
  1510  007D85  CC                 	db	204
  1511  007D86  CC                 	db	204
  1512  007D87  FC                 	db	252
  1513  007D88  6C                 	db	108
  1514  007D89  0C                 	db	12
  1515  007D8A  0C                 	db	12
  1516  007D8B  0C                 	db	12
  1517  007D8C  00                 	db	0
  1518  007D8D  00                 	db	0
  1519  007D8E  00                 	db	0
  1520  007D8F  00                 	db	0
  1521  007D90  D0                 	db	208
  1522  007D91  F0                 	db	240
  1523  007D92  C0                 	db	192
  1524  007D93  C0                 	db	192
  1525  007D94  C0                 	db	192
  1526  007D95  C0                 	db	192
  1527  007D96  C0                 	db	192
  1528  007D97  C0                 	db	192
  1529  007D98  00                 	db	0
  1530  007D99  00                 	db	0
  1531  007D9A  00                 	db	0
  1532  007D9B  00                 	db	0
  1533  007D9C  00                 	db	0
  1534  007D9D  00                 	db	0
  1535  007D9E  00                 	db	0
  1536  007D9F  70                 	db	112
  1537  007DA0  F8                 	db	248
  1538  007DA1  C8                 	db	200
  1539  007DA2  E0                 	db	224
  1540  007DA3  38                 	db	56
  1541  007DA4  98                 	db	152
  1542  007DA5  F8                 	db	248
  1543  007DA6  70                 	db	112
  1544  007DA7  00                 	db	0
  1545  007DA8  00                 	db	0
  1546  007DA9  00                 	db	0
  1547  007DAA  00                 	db	0
  1548  007DAB  20                 	db	32
  1549  007DAC  60                 	db	96
  1550  007DAD  60                 	db	96
  1551  007DAE  F0                 	db	240
  1552  007DAF  F0                 	db	240
  1553  007DB0  60                 	db	96
  1554  007DB1  60                 	db	96
  1555  007DB2  60                 	db	96
  1556  007DB3  60                 	db	96
  1557  007DB4  70                 	db	112
  1558  007DB5  70                 	db	112
  1559  007DB6  00                 	db	0
  1560  007DB7  00                 	db	0
  1561  007DB8  00                 	db	0
  1562  007DB9  00                 	db	0
  1563  007DBA  00                 	db	0
  1564  007DBB  00                 	db	0
  1565  007DBC  00                 	db	0
  1566  007DBD  CC                 	db	204
  1567  007DBE  CC                 	db	204
  1568  007DBF  CC                 	db	204
  1569  007DC0  CC                 	db	204
  1570  007DC1  CC                 	db	204
  1571  007DC2  CC                 	db	204
  1572  007DC3  FC                 	db	252
  1573  007DC4  6C                 	db	108
  1574  007DC5  00                 	db	0
  1575  007DC6  00                 	db	0
  1576  007DC7  00                 	db	0
  1577  007DC8  00                 	db	0
  1578  007DC9  00                 	db	0
  1579  007DCA  00                 	db	0
  1580  007DCB  00                 	db	0
  1581  007DCC  C6                 	db	198
  1582  007DCD  C6                 	db	198
  1583  007DCE  6C                 	db	108
  1584  007DCF  6C                 	db	108
  1585  007DD0  6C                 	db	108
  1586  007DD1  38                 	db	56
  1587  007DD2  38                 	db	56
  1588  007DD3  38                 	db	56
  1589  007DD4  00                 	db	0
  1590  007DD5  00                 	db	0
  1591  007DD6  00                 	db	0
  1592  007DD7  00                 	db	0
  1593  007DD8  00                 	db	0
  1594  007DD9  00                 	db	0
  1595  007DDA  00                 	db	0
  1596  007DDB  00                 	db	0
  1597  007DDC  00                 	db	0
  1598  007DDD  00                 	db	0
  1599  007DDE  00                 	db	0
  1600  007DDF  DD                 	db	221
  1601  007DE0  80                 	db	128
  1602  007DE1  DD                 	db	221
  1603  007DE2  80                 	db	128
  1604  007DE3  DD                 	db	221
  1605  007DE4  80                 	db	128
  1606  007DE5  D5                 	db	213
  1607  007DE6  80                 	db	128
  1608  007DE7  55                 	db	85
  1609  007DE8  00                 	db	0
  1610  007DE9  77                 	db	119
  1611  007DEA  00                 	db	0
  1612  007DEB  77                 	db	119
  1613  007DEC  00                 	db	0
  1614  007DED  77                 	db	119
  1615  007DEE  00                 	db	0
  1616  007DEF  00                 	db	0
  1617  007DF0  00                 	db	0
  1618  007DF1  00                 	db	0
  1619  007DF2  00                 	db	0
  1620  007DF3  00                 	db	0
  1621  007DF4  00                 	db	0
  1622  007DF5  00                 	db	0
  1623  007DF6  00                 	db	0
  1624  007DF7  00                 	db	0
  1625  007DF8  00                 	db	0
  1626  007DF9  CC                 	db	204
  1627  007DFA  78                 	db	120
  1628  007DFB  78                 	db	120
  1629  007DFC  30                 	db	48
  1630  007DFD  30                 	db	48
  1631  007DFE  78                 	db	120
  1632  007DFF  78                 	db	120
  1633  007E00  CC                 	db	204
  1634  007E01  00                 	db	0
  1635  007E02  00                 	db	0
  1636  007E03  00                 	db	0
  1637  007E04  00                 	db	0
  1638  007E05  00                 	db	0
  1639  007E06  00                 	db	0
  1640  007E07  00                 	db	0
  1641  007E08  C6                 	db	198
  1642  007E09  C6                 	db	198
  1643  007E0A  6C                 	db	108
  1644  007E0B  6C                 	db	108
  1645  007E0C  6C                 	db	108
  1646  007E0D  38                 	db	56
  1647  007E0E  38                 	db	56
  1648  007E0F  38                 	db	56
  1649  007E10  30                 	db	48
  1650  007E11  F0                 	db	240
  1651  007E12  E0                 	db	224
  1652  007E13  00                 	db	0
  1653  007E14  00                 	db	0
  1654  007E15  00                 	db	0
  1655  007E16  00                 	db	0
  1656  007E17  FC                 	db	252
  1657  007E18  FC                 	db	252
  1658  007E19  18                 	db	24
  1659  007E1A  30                 	db	48
  1660  007E1B  30                 	db	48
  1661  007E1C  60                 	db	96
  1662  007E1D  FC                 	db	252
  1663  007E1E  FC                 	db	252
  1664  007E1F  00                 	db	0
  1665  007E20  00                 	db	0
  1666  007E21  00                 	db	0
  1667  007E22  00                 	db	0
  1668  007E23  30                 	db	48
  1669  007E24  70                 	db	112
  1670  007E25  60                 	db	96
  1671  007E26  60                 	db	96
  1672  007E27  60                 	db	96
  1673  007E28  60                 	db	96
  1674  007E29  C0                 	db	192
  1675  007E2A  C0                 	db	192
  1676  007E2B  60                 	db	96
  1677  007E2C  60                 	db	96
  1678  007E2D  60                 	db	96
  1679  007E2E  60                 	db	96
  1680  007E2F  70                 	db	112
  1681  007E30  30                 	db	48
  1682  007E31  00                 	db	0
  1683  007E32  C0                 	db	192
  1684  007E33  C0                 	db	192
  1685  007E34  C0                 	db	192
  1686  007E35  C0                 	db	192
  1687  007E36  C0                 	db	192
  1688  007E37  C0                 	db	192
  1689  007E38  C0                 	db	192
  1690  007E39  C0                 	db	192
  1691  007E3A  C0                 	db	192
  1692  007E3B  C0                 	db	192
  1693  007E3C  C0                 	db	192
  1694  007E3D  C0                 	db	192
  1695  007E3E  C0                 	db	192
  1696  007E3F  C0                 	db	192
  1697  007E40  00                 	db	0
  1698  007E41  C0                 	db	192
  1699  007E42  E0                 	db	224
  1700  007E43  60                 	db	96
  1701  007E44  60                 	db	96
  1702  007E45  60                 	db	96
  1703  007E46  60                 	db	96
  1704  007E47  30                 	db	48
  1705  007E48  30                 	db	48
  1706  007E49  60                 	db	96
  1707  007E4A  60                 	db	96
  1708  007E4B  60                 	db	96
  1709  007E4C  60                 	db	96
  1710  007E4D  E0                 	db	224
  1711  007E4E  C0                 	db	192
  1712  007E4F  00                 	db	0
  1713  007E50  00                 	db	0
  1714  007E51  00                 	db	0
  1715  007E52  00                 	db	0
  1716  007E53  00                 	db	0
  1717  007E54  E4                 	db	228
  1718  007E55  FC                 	db	252
  1719  007E56  9C                 	db	156
  1720  007E57  00                 	db	0
  1721  007E58  00                 	db	0
  1722  007E59  00                 	db	0
  1723  007E5A  00                 	db	0
  1724  007E5B  00                 	db	0
  1725  007E5C  00                 	db	0
  1726  007E5D  00                 	db	0
  1727  007E5E                     __end_of_arialNarrow_12ptBitmaps:
  1728                           	callstack 0
  1729  007E5E                     _arialNarrow_12ptDescriptors:
  1730                           	callstack 0
  1731  007E5E  08                 	db	8
  1732  007E5F  0000               	dw	0
  1733  007E61  02                 	db	2
  1734  007E62  000F               	dw	15
  1735  007E64  05                 	db	5
  1736  007E65  001E               	dw	30
  1737  007E67  07                 	db	7
  1738  007E68  002D               	dw	45
  1739  007E6A  07                 	db	7
  1740  007E6B  003C               	dw	60
  1741  007E6D  0A                 	db	10
  1742  007E6E  004B               	dw	75
  1743  007E70  08                 	db	8
  1744  007E71  0069               	dw	105
  1745  007E73  02                 	db	2
  1746  007E74  0078               	dw	120
  1747  007E76  04                 	db	4
  1748  007E77  0087               	dw	135
  1749  007E79  04                 	db	4
  1750  007E7A  0096               	dw	150
  1751  007E7C  05                 	db	5
  1752  007E7D  00A5               	dw	165
  1753  007E7F  06                 	db	6
  1754  007E80  00B4               	dw	180
  1755  007E82  02                 	db	2
  1756  007E83  00C3               	dw	195
  1757  007E85  04                 	db	4
  1758  007E86  00D2               	dw	210
  1759  007E88  02                 	db	2
  1760  007E89  00E1               	dw	225
  1761  007E8B  04                 	db	4
  1762  007E8C  00F0               	dw	240
  1763  007E8E  06                 	db	6
  1764  007E8F  00FF               	dw	255
  1765  007E91  04                 	db	4
  1766  007E92  010E               	dw	270
  1767  007E94  06                 	db	6
  1768  007E95  011D               	dw	285
  1769  007E97  06                 	db	6
  1770  007E98  012C               	dw	300
  1771  007E9A  07                 	db	7
  1772  007E9B  013B               	dw	315
  1773  007E9D  06                 	db	6
  1774  007E9E  014A               	dw	330
  1775  007EA0  05                 	db	5
  1776  007EA1  0159               	dw	345
  1777  007EA3  05                 	db	5
  1778  007EA4  0168               	dw	360
  1779  007EA6  06                 	db	6
  1780  007EA7  0177               	dw	375
  1781  007EA9  06                 	db	6
  1782  007EAA  0186               	dw	390
  1783  007EAC  02                 	db	2
  1784  007EAD  0195               	dw	405
  1785  007EAF  02                 	db	2
  1786  007EB0  01A4               	dw	420
  1787  007EB2  06                 	db	6
  1788  007EB3  01B3               	dw	435
  1789  007EB5  06                 	db	6
  1790  007EB6  01C2               	dw	450
  1791  007EB8  06                 	db	6
  1792  007EB9  01D1               	dw	465
  1793  007EBB  06                 	db	6
  1794  007EBC  01E0               	dw	480
  1795  007EBE  0D                 	db	13
  1796  007EBF  01EF               	dw	495
  1797  007EC1  09                 	db	9
  1798  007EC2  020D               	dw	525
  1799  007EC4  07                 	db	7
  1800  007EC5  022B               	dw	555
  1801  007EC7  08                 	db	8
  1802  007EC8  023A               	dw	570
  1803  007ECA  07                 	db	7
  1804  007ECB  0249               	dw	585
  1805  007ECD  07                 	db	7
  1806  007ECE  0258               	dw	600
  1807  007ED0  06                 	db	6
  1808  007ED1  0267               	dw	615
  1809  007ED3  08                 	db	8
  1810  007ED4  0276               	dw	630
  1811  007ED6  07                 	db	7
  1812  007ED7  0285               	dw	645
  1813  007ED9  02                 	db	2
  1814  007EDA  0294               	dw	660
  1815  007EDC  06                 	db	6
  1816  007EDD  02A3               	dw	675
  1817  007EDF  08                 	db	8
  1818  007EE0  02B2               	dw	690
  1819  007EE2  07                 	db	7
  1820  007EE3  02C1               	dw	705
  1821  007EE5  09                 	db	9
  1822  007EE6  02D0               	dw	720
  1823  007EE8  07                 	db	7
  1824  007EE9  02EE               	dw	750
  1825  007EEB  08                 	db	8
  1826  007EEC  02FD               	dw	765
  1827  007EEE  07                 	db	7
  1828  007EEF  030C               	dw	780
  1829  007EF1  09                 	db	9
  1830  007EF2  031B               	dw	795
  1831  007EF4  08                 	db	8
  1832  007EF5  0339               	dw	825
  1833  007EF7  07                 	db	7
  1834  007EF8  0348               	dw	840
  1835  007EFA  08                 	db	8
  1836  007EFB  0357               	dw	855
  1837  007EFD  07                 	db	7
  1838  007EFE  0366               	dw	870
  1839  007F00  09                 	db	9
  1840  007F01  0375               	dw	885
  1841  007F03  0B                 	db	11
  1842  007F04  0393               	dw	915
  1843  007F06  09                 	db	9
  1844  007F07  03B1               	dw	945
  1845  007F09  08                 	db	8
  1846  007F0A  03CF               	dw	975
  1847  007F0C  07                 	db	7
  1848  007F0D  03DE               	dw	990
  1849  007F0F  03                 	db	3
  1850  007F10  03ED               	dw	1005
  1851  007F12  04                 	db	4
  1852  007F13  03FC               	dw	1020
  1853  007F15  03                 	db	3
  1854  007F16  040B               	dw	1035
  1855  007F18  07                 	db	7
  1856  007F19  041A               	dw	1050
  1857  007F1B  07                 	db	7
  1858  007F1C  0429               	dw	1065
  1859  007F1E  03                 	db	3
  1860  007F1F  0438               	dw	1080
  1861  007F21  06                 	db	6
  1862  007F22  0447               	dw	1095
  1863  007F24  06                 	db	6
  1864  007F25  0456               	dw	1110
  1865  007F27  05                 	db	5
  1866  007F28  0465               	dw	1125
  1867  007F2A  06                 	db	6
  1868  007F2B  0474               	dw	1140
  1869  007F2D  05                 	db	5
  1870  007F2E  0483               	dw	1155
  1871  007F30  04                 	db	4
  1872  007F31  0492               	dw	1170
  1873  007F33  06                 	db	6
  1874  007F34  04A1               	dw	1185
  1875  007F36  06                 	db	6
  1876  007F37  04B0               	dw	1200
  1877  007F39  02                 	db	2
  1878  007F3A  04BF               	dw	1215
  1879  007F3C  04                 	db	4
  1880  007F3D  04CE               	dw	1230
  1881  007F3F  06                 	db	6
  1882  007F40  04DD               	dw	1245
  1883  007F42  02                 	db	2
  1884  007F43  04EC               	dw	1260
  1885  007F45  0A                 	db	10
  1886  007F46  04FB               	dw	1275
  1887  007F48  06                 	db	6
  1888  007F49  0519               	dw	1305
  1889  007F4B  06                 	db	6
  1890  007F4C  0528               	dw	1320
  1891  007F4E  06                 	db	6
  1892  007F4F  0537               	dw	1335
  1893  007F51  06                 	db	6
  1894  007F52  0546               	dw	1350
  1895  007F54  04                 	db	4
  1896  007F55  0555               	dw	1365
  1897  007F57  05                 	db	5
  1898  007F58  0564               	dw	1380
  1899  007F5A  04                 	db	4
  1900  007F5B  0573               	dw	1395
  1901  007F5D  06                 	db	6
  1902  007F5E  0582               	dw	1410
  1903  007F60  07                 	db	7
  1904  007F61  0591               	dw	1425
  1905  007F63  09                 	db	9
  1906  007F64  05A0               	dw	1440
  1907  007F66  06                 	db	6
  1908  007F67  05BE               	dw	1470
  1909  007F69  07                 	db	7
  1910  007F6A  05CD               	dw	1485
  1911  007F6C  06                 	db	6
  1912  007F6D  05DC               	dw	1500
  1913  007F6F  04                 	db	4
  1914  007F70  05EB               	dw	1515
  1915  007F72  02                 	db	2
  1916  007F73  05FA               	dw	1530
  1917  007F75  04                 	db	4
  1918  007F76  0609               	dw	1545
  1919  007F78  06                 	db	6
  1920  007F79  0618               	dw	1560
  1921  007F7B                     __end_of_arialNarrow_12ptDescriptors:
  1922                           	callstack 0
  1923  007F7B                     _arialNarrow_12ptFontInfo:
  1924                           	callstack 0
  1925  007F7B  0F                 	db	15
  1926  007F7C  20                 	db	32
  1927  007F7D  7E                 	db	126
  1928  007F7E  5E                 	db	low _arialNarrow_12ptDescriptors
  1929  007F7F  7E                 	db	high _arialNarrow_12ptDescriptors
  1930  007F80  37                 	db	low _arialNarrow_12ptBitmaps
  1931  007F81  78                 	db	high _arialNarrow_12ptBitmaps
  1932  007F82                     __end_of_arialNarrow_12ptFontInfo:
  1933                           	callstack 0
  1934  0000                     _ANSB2	set	31178
  1935  0000                     _ANSB1	set	31177
  1936  0000                     _WPUB	set	3937
  1937  0000                     _PORTBbits	set	3969
  1938  0000                     _ADRESL	set	4035
  1939  0000                     _ADRESH	set	4036
  1940  0000                     _ADCON0	set	4034
  1941  0000                     _TRISA	set	3986
  1942  0000                     _PORTA	set	3968
  1943  0000                     _ADCON2	set	4032
  1944  0000                     _T2CONbits	set	4026
  1945  0000                     _CCPR2L	set	3943
  1946  0000                     _CCP2CONbits	set	3942
  1947  0000                     _PR2	set	4027
  1948  0000                     _TMR0L	set	4054
  1949  0000                     _TMR0H	set	4055
  1950  0000                     _T0CON	set	4053
  1951  0000                     _OSCCON	set	4051
  1952  0000                     _TMR0IF	set	32658
  1953  0000                     _LATB4	set	31828
  1954  0000                     _LATB1	set	31825
  1955  0000                     _INT1IF	set	32640
  1956  0000                     _TRISB4	set	31900
  1957  0000                     _LATB3	set	31827
  1958  0000                     _TRISB3	set	31899
  1959  0000                     _RBPU	set	32655
  1960  0000                     _TRISB1	set	31897
  1961  0000                     _LATB2	set	31826
  1962  0000                     _TRISB2	set	31898
  1963  0000                     _LATC2	set	31834
  1964  0000                     _LATC5	set	31837
  1965  0000                     _TRISC4	set	31908
  1966  0000                     _TRISC3	set	31907
  1967  0000                     _TRISC2	set	31906
  1968  0000                     _TRISC5	set	31909
  1969  0000                     _LATC3	set	31835
  1970  0000                     _LATC4	set	31836
  1971  0000                     _TMR2IF	set	31985
  1972  0000                     _TRISC1	set	31905
  1973  0000                     _TMR0IE	set	32661
  1974  0000                     _LATC0	set	31832
  1975  0000                     _TRISC0	set	31904
  1976  0000                     _INTEDG1	set	32653
  1977  0000                     _INT1IE	set	32643
  1978  0000                     _GIE	set	32663
  1979  0000                     _PLLEN	set	31966
  1980  007F82                     STR_14:
  1981  007F82  50                 	db	80	;'P'
  1982  007F83  4C                 	db	76	;'L'
  1983  007F84  41                 	db	65	;'A'
  1984  007F85  59                 	db	89	;'Y'
  1985  007F86  45                 	db	69	;'E'
  1986  007F87  52                 	db	82	;'R'
  1987  007F88  20                 	db	32
  1988  007F89  31                 	db	49	;'1'
  1989  007F8A  20                 	db	32
  1990  007F8B  57                 	db	87	;'W'
  1991  007F8C  49                 	db	73	;'I'
  1992  007F8D  4E                 	db	78	;'N'
  1993  007F8E  00                 	db	0
  1994  007F8F                     STR_13:
  1995  007F8F  50                 	db	80	;'P'
  1996  007F90  4C                 	db	76	;'L'
  1997  007F91  41                 	db	65	;'A'
  1998  007F92  59                 	db	89	;'Y'
  1999  007F93  45                 	db	69	;'E'
  2000  007F94  52                 	db	82	;'R'
  2001  007F95  20                 	db	32
  2002  007F96  32                 	db	50	;'2'
  2003  007F97  20                 	db	32
  2004  007F98  57                 	db	87	;'W'
  2005  007F99  49                 	db	73	;'I'
  2006  007F9A  4E                 	db	78	;'N'
  2007  007F9B  00                 	db	0
  2008  007F9C                     STR_10:
  2009  007F9C  50                 	db	80	;'P'
  2010  007F9D  41                 	db	65	;'A'
  2011  007F9E  52                 	db	82	;'R'
  2012  007F9F  41                 	db	65	;'A'
  2013  007FA0  4D                 	db	77	;'M'
  2014  007FA1  45                 	db	69	;'E'
  2015  007FA2  54                 	db	84	;'T'
  2016  007FA3  45                 	db	69	;'E'
  2017  007FA4  52                 	db	82	;'R'
  2018  007FA5  53                 	db	83	;'S'
  2019  007FA6  00                 	db	0
  2020  007FA7                     STR_11:
  2021  007FA7  4C                 	db	76	;'L'
  2022  007FA8  55                 	db	85	;'U'
  2023  007FA9  4D                 	db	77	;'M'
  2024  007FAA  49                 	db	73	;'I'
  2025  007FAB  4E                 	db	78	;'N'
  2026  007FAC  4F                 	db	79	;'O'
  2027  007FAD  53                 	db	83	;'S'
  2028  007FAE  49                 	db	73	;'I'
  2029  007FAF  54                 	db	84	;'T'
  2030  007FB0  59                 	db	89	;'Y'
  2031  007FB1  00                 	db	0
  2032  007FB2                     STR_4:
  2033  007FB2  50                 	db	80	;'P'
  2034  007FB3  61                 	db	97	;'a'
  2035  007FB4  72                 	db	114	;'r'
  2036  007FB5  61                 	db	97	;'a'
  2037  007FB6  6D                 	db	109	;'m'
  2038  007FB7  65                 	db	101	;'e'
  2039  007FB8  74                 	db	116	;'t'
  2040  007FB9  72                 	db	114	;'r'
  2041  007FBA  65                 	db	101	;'e'
  2042  007FBB  73                 	db	115	;'s'
  2043  007FBC  00                 	db	0
  2044  007FBD                     STR_1:
  2045  007FBD  4D                 	db	77	;'M'
  2046  007FBE  65                 	db	101	;'e'
  2047  007FBF  6E                 	db	110	;'n'
  2048  007FC0  75                 	db	117	;'u'
  2049  007FC1  53                 	db	83	;'S'
  2050  007FC2  74                 	db	116	;'t'
  2051  007FC3  61                 	db	97	;'a'
  2052  007FC4  72                 	db	114	;'r'
  2053  007FC5  74                 	db	116	;'t'
  2054  007FC6  00                 	db	0
  2055  007FC7                     STR_8:
  2056  007FC7  4E                 	db	78	;'N'
  2057  007FC8  65                 	db	101	;'e'
  2058  007FC9  77                 	db	119	;'w'
  2059  007FCA  20                 	db	32
  2060  007FCB  47                 	db	71	;'G'
  2061  007FCC  61                 	db	97	;'a'
  2062  007FCD  6D                 	db	109	;'m'
  2063  007FCE  65                 	db	101	;'e'
  2064  007FCF  00                 	db	0
  2065  007FD0                     STR_5:
  2066  007FD0  31                 	db	49	;'1'
  2067  007FD1  20                 	db	32
  2068  007FD2  50                 	db	80	;'P'
  2069  007FD3  6C                 	db	108	;'l'
  2070  007FD4  61                 	db	97	;'a'
  2071  007FD5  79                 	db	121	;'y'
  2072  007FD6  65                 	db	101	;'e'
  2073  007FD7  72                 	db	114	;'r'
  2074  007FD8  00                 	db	0
  2075  007FD9                     STR_6:
  2076  007FD9  32                 	db	50	;'2'
  2077  007FDA  20                 	db	32
  2078  007FDB  50                 	db	80	;'P'
  2079  007FDC  6C                 	db	108	;'l'
  2080  007FDD  61                 	db	97	;'a'
  2081  007FDE  79                 	db	121	;'y'
  2082  007FDF  65                 	db	101	;'e'
  2083  007FE0  72                 	db	114	;'r'
  2084  007FE1  00                 	db	0
  2085  007FE2                     STR_9:
  2086  007FE2  57                 	db	87	;'W'
  2087  007FE3  45                 	db	69	;'E'
  2088  007FE4  4C                 	db	76	;'L'
  2089  007FE5  43                 	db	67	;'C'
  2090  007FE6  4F                 	db	79	;'O'
  2091  007FE7  4D                 	db	77	;'M'
  2092  007FE8  45                 	db	69	;'E'
  2093  007FE9  00                 	db	0
  2094  007FEA                     STR_15:
  2095  007FEA  58                 	db	88	;'X'
  2096  007FEB  3A                 	db	58	;':'
  2097  007FEC  20                 	db	32
  2098  007FED  25                 	db	37
  2099  007FEE  64                 	db	100	;'d'
  2100  007FEF  00                 	db	0
  2101  007FF0                     STR_16:
  2102  007FF0  59                 	db	89	;'Y'
  2103  007FF1  3A                 	db	58	;':'
  2104  007FF2  20                 	db	32
  2105  007FF3  25                 	db	37
  2106  007FF4  64                 	db	100	;'d'
  2107  007FF5  00                 	db	0
  2108  007FF6                     STR_12:
  2109  007FF6  4C                 	db	76	;'L'
  2110  007FF7  45                 	db	69	;'E'
  2111  007FF8  56                 	db	86	;'V'
  2112  007FF9  45                 	db	69	;'E'
  2113  007FFA  4C                 	db	76	;'L'
  2114  007FFB  00                 	db	0
  2115  007FFC                     STR_7:
  2116  007FFC  58                 	db	88	;'X'
  2117  007FFD  00                 	db	0
  2118  007FFE  00                 	db	0	; dummy byte at the end
  2119  0000                     
  2120                           ; #config settings
  2121                           
  2122                           	psect	cinit
  2123  006538                     __pcinit:
  2124                           	callstack 0
  2125  006538                     start_initialization:
  2126                           	callstack 0
  2127  006538                     __initialization:
  2128                           	callstack 0
  2129                           
  2130                           ; Clear objects allocated to BANK1 (218 bytes)
  2131  006538  EE01  F000         	lfsr	0,__pbssBANK1
  2132  00653C  0EDA               	movlw	218
  2133  00653E                     clear_0:
  2134  00653E  6AEE               	clrf	postinc0,c
  2135  006540  06E8               	decf	wreg,f,c
  2136  006542  E1FD               	bnz	clear_0
  2137                           
  2138                           ; Clear objects allocated to BANK0 (75 bytes)
  2139  006544  EE00  F0B5         	lfsr	0,__pbssBANK0
  2140  006548  0E4B               	movlw	75
  2141  00654A                     clear_1:
  2142  00654A  6AEE               	clrf	postinc0,c
  2143  00654C  06E8               	decf	wreg,f,c
  2144  00654E  E1FD               	bnz	clear_1
  2145                           
  2146                           ; Clear objects allocated to COMRAM (7 bytes)
  2147  006550  EE00  F047         	lfsr	0,__pbssCOMRAM
  2148  006554  0E07               	movlw	7
  2149  006556                     clear_2:
  2150  006556  6AEE               	clrf	postinc0,c
  2151  006558  06E8               	decf	wreg,f,c
  2152  00655A  E1FD               	bnz	clear_2
  2153  00655C                     end_of_initialization:
  2154                           	callstack 0
  2155  00655C                     __end_of__initialization:
  2156                           	callstack 0
  2157  00655C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2158  00655E  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2159  006560  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2160  006562  6EF8               	movwf	tblptru,c
  2161  006564  0100               	movlb	0
  2162  006566  EFA0  F033         	goto	_main	;jump to C main() function
  2163                           
  2164                           	psect	bssCOMRAM
  2165  000047                     __pbssCOMRAM:
  2166                           	callstack 0
  2167  000047                     _width:
  2168                           	callstack 0
  2169  000047                     	ds	2
  2170  000049                     _prec:
  2171                           	callstack 0
  2172  000049                     	ds	2
  2173  00004B                     _flags:
  2174                           	callstack 0
  2175  00004B                     	ds	2
  2176  00004D                     _gameStateMachine:
  2177                           	callstack 0
  2178  00004D                     	ds	1
  2179                           
  2180                           	psect	bssBANK0
  2181  0000B5                     __pbssBANK0:
  2182                           	callstack 0
  2183  0000B5                     _theXF:
  2184                           	callstack 0
  2185  0000B5                     	ds	38
  2186  0000DB                     _nout:
  2187                           	callstack 0
  2188  0000DB                     	ds	2
  2189  0000DD                     _displayState:
  2190                           	callstack 0
  2191  0000DD                     	ds	1
  2192  0000DE                     _touchScreenState:
  2193                           	callstack 0
  2194  0000DE                     	ds	1
  2195  0000DF                     _sleepState:
  2196                           	callstack 0
  2197  0000DF                     	ds	1
  2198  0000E0                     _dbuf:
  2199                           	callstack 0
  2200  0000E0                     	ds	32
  2201                           
  2202                           	psect	bssBANK1
  2203  000100                     __pbssBANK1:
  2204                           	callstack 0
  2205  000100                     _g1:
  2206                           	callstack 0
  2207  000100                     	ds	218
  2208                           
  2209                           	psect	cstackBANK1
  2210  0001DA                     __pcstackBANK1:
  2211                           	callstack 0
  2212  0001DA                     Factory_exec@ev:
  2213                           	callstack 0
  2214                           
  2215                           ; 1 bytes @ 0x0
  2216  0001DA                     	ds	1
  2217                           
  2218                           	psect	cstackBANK0
  2219  000060                     __pcstackBANK0:
  2220                           	callstack 0
  2221  000060                     _dtoa$5327:
  2222                           	callstack 0
  2223  000060                     LCD_Bitmap@bfOffBits:
  2224                           	callstack 0
  2225                           
  2226                           ; 4 bytes @ 0x0
  2227  000060                     	ds	2
  2228  000062                     dtoa@p:
  2229                           	callstack 0
  2230                           
  2231                           ; 2 bytes @ 0x2
  2232  000062                     	ds	2
  2233  000064                     LCD_Bitmap@endOfImage:
  2234                           	callstack 0
  2235  000064                     dtoa@w:
  2236                           	callstack 0
  2237                           
  2238                           ; 2 bytes @ 0x4
  2239  000064                     	ds	1
  2240  000065                     LCD_Bitmap@jumpCount:
  2241                           	callstack 0
  2242                           
  2243                           ; 2 bytes @ 0x5
  2244  000065                     	ds	1
  2245  000066                     dtoa@s:
  2246                           	callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x6
  2249  000066                     	ds	1
  2250  000067                     LCD_Bitmap@curYPos:
  2251                           	callstack 0
  2252                           
  2253                           ; 2 bytes @ 0x7
  2254  000067                     	ds	1
  2255  000068                     dtoa@n:
  2256                           	callstack 0
  2257                           
  2258                           ; 8 bytes @ 0x8
  2259  000068                     	ds	1
  2260  000069                     LCD_Bitmap@colorTablePtr:
  2261                           	callstack 0
  2262                           
  2263                           ; 2 bytes @ 0x9
  2264  000069                     	ds	2
  2265  00006B                     LCD_Bitmap@biHeight:
  2266                           	callstack 0
  2267                           
  2268                           ; 2 bytes @ 0xB
  2269  00006B                     	ds	2
  2270  00006D                     LCD_Bitmap@color:
  2271                           	callstack 0
  2272                           
  2273                           ; 2 bytes @ 0xD
  2274  00006D                     	ds	2
  2275  00006F                     LCD_Bitmap@curXPos:
  2276                           	callstack 0
  2277                           
  2278                           ; 2 bytes @ 0xF
  2279  00006F                     	ds	1
  2280  000070                     dtoa@i:
  2281                           	callstack 0
  2282                           
  2283                           ; 2 bytes @ 0x10
  2284  000070                     	ds	1
  2285  000071                     LCD_Bitmap@strPtr:
  2286                           	callstack 0
  2287                           
  2288                           ; 2 bytes @ 0x11
  2289  000071                     	ds	1
  2290  000072                     vfpfcnvrt@ll:
  2291                           	callstack 0
  2292                           
  2293                           ; 8 bytes @ 0x12
  2294  000072                     	ds	1
  2295  000073                     LCD_Bitmap@newY:
  2296                           	callstack 0
  2297                           
  2298                           ; 2 bytes @ 0x13
  2299  000073                     	ds	2
  2300  000075                     LCD_Bitmap@pixelCount:
  2301                           	callstack 0
  2302                           
  2303                           ; 1 bytes @ 0x15
  2304  000075                     	ds	1
  2305  000076                     LCD_Bitmap@biWidth:
  2306                           	callstack 0
  2307                           
  2308                           ; 2 bytes @ 0x16
  2309  000076                     	ds	2
  2310  000078                     LCD_Bitmap@jumpColor:
  2311                           	callstack 0
  2312                           
  2313                           ; 2 bytes @ 0x18
  2314  000078                     	ds	2
  2315  00007A                     ?_vfprintf:
  2316                           	callstack 0
  2317  00007A                     LCD_Bitmap@i:
  2318                           	callstack 0
  2319  00007A                     vfprintf@fp:
  2320                           	callstack 0
  2321                           
  2322                           ; 2 bytes @ 0x1A
  2323  00007A                     	ds	2
  2324  00007C                     LCD_ButtonDraw@button:
  2325                           	callstack 0
  2326  00007C                     vfprintf@fmt:
  2327                           	callstack 0
  2328                           
  2329                           ; 2 bytes @ 0x1C
  2330  00007C                     	ds	2
  2331  00007E                     ??_LCD_ButtonDraw:
  2332  00007E                     vfprintf@ap:
  2333                           	callstack 0
  2334                           
  2335                           ; 2 bytes @ 0x1E
  2336  00007E                     	ds	2
  2337  000080                     vfprintf@cfmt:
  2338                           	callstack 0
  2339                           
  2340                           ; 2 bytes @ 0x20
  2341  000080                     	ds	2
  2342  000082                     ?_sprintf:
  2343                           	callstack 0
  2344  000082                     sprintf@s:
  2345                           	callstack 0
  2346                           
  2347                           ; 2 bytes @ 0x22
  2348  000082                     	ds	2
  2349  000084                     sprintf@fmt:
  2350                           	callstack 0
  2351                           
  2352                           ; 2 bytes @ 0x24
  2353  000084                     	ds	4
  2354  000088                     sprintf@ap:
  2355                           	callstack 0
  2356                           
  2357                           ; 2 bytes @ 0x28
  2358  000088                     	ds	2
  2359  00008A                     LCD_ButtonDraw@tempChar:
  2360                           	callstack 0
  2361  00008A                     sprintf@f:
  2362                           	callstack 0
  2363                           
  2364                           ; 6 bytes @ 0x2A
  2365  00008A                     	ds	1
  2366  00008B                     LCD_ButtonDraw@width:
  2367                           	callstack 0
  2368                           
  2369                           ; 2 bytes @ 0x2B
  2370  00008B                     	ds	2
  2371  00008D                     LCD_ButtonDraw@x1:
  2372                           	callstack 0
  2373                           
  2374                           ; 2 bytes @ 0x2D
  2375  00008D                     	ds	2
  2376  00008F                     LCD_ButtonDraw@x2:
  2377                           	callstack 0
  2378                           
  2379                           ; 2 bytes @ 0x2F
  2380  00008F                     	ds	1
  2381  000090                     Score_draw@s:
  2382                           	callstack 0
  2383  000090                     touchScreenController@g:
  2384                           	callstack 0
  2385                           
  2386                           ; 2 bytes @ 0x30
  2387  000090                     	ds	1
  2388  000091                     LCD_ButtonDraw@y1:
  2389                           	callstack 0
  2390                           
  2391                           ; 2 bytes @ 0x31
  2392  000091                     	ds	1
  2393  000092                     ??_touchScreenController:
  2394  000092                     Menu_inGameDraw@g:
  2395                           	callstack 0
  2396                           
  2397                           ; 2 bytes @ 0x32
  2398  000092                     	ds	1
  2399  000093                     LCD_ButtonDraw@y2:
  2400                           	callstack 0
  2401                           
  2402                           ; 2 bytes @ 0x33
  2403  000093                     	ds	2
  2404  000095                     LCD_ButtonDraw@xText:
  2405                           	callstack 0
  2406                           
  2407                           ; 2 bytes @ 0x35
  2408  000095                     	ds	2
  2409  000097                     LCD_ButtonDraw@yText:
  2410                           	callstack 0
  2411                           
  2412                           ; 2 bytes @ 0x37
  2413  000097                     	ds	1
  2414  000098                     touchScreenController@s:
  2415                           	callstack 0
  2416                           
  2417                           ; 20 bytes @ 0x38
  2418  000098                     	ds	1
  2419  000099                     LCD_ButtonDraw@i:
  2420                           	callstack 0
  2421                           
  2422                           ; 1 bytes @ 0x39
  2423  000099                     	ds	1
  2424  00009A                     LCD_ButtonDraw@bmpPtr:
  2425                           	callstack 0
  2426                           
  2427                           ; 2 bytes @ 0x3A
  2428  00009A                     	ds	2
  2429  00009C                     Menu_welcomeDraw@g:
  2430                           	callstack 0
  2431  00009C                     Menu_parametersDraw@g:
  2432                           	callstack 0
  2433  00009C                     Menu_endGame@g:
  2434                           	callstack 0
  2435                           
  2436                           ; 2 bytes @ 0x3C
  2437  00009C                     	ds	2
  2438  00009E                     displayController@g:
  2439                           	callstack 0
  2440                           
  2441                           ; 2 bytes @ 0x3E
  2442  00009E                     	ds	2
  2443  0000A0                     displayController@ev:
  2444                           	callstack 0
  2445                           
  2446                           ; 1 bytes @ 0x40
  2447  0000A0                     	ds	1
  2448  0000A1                     ??_displayController:
  2449                           
  2450                           ; 1 bytes @ 0x41
  2451  0000A1                     	ds	2
  2452  0000A3                     displayInit@g:
  2453                           	callstack 0
  2454  0000A3                     displaySM@g:
  2455                           	callstack 0
  2456                           
  2457                           ; 2 bytes @ 0x43
  2458  0000A3                     	ds	2
  2459  0000A5                     ??_displaySM:
  2460  0000A5                     sleepInit@g:
  2461                           	callstack 0
  2462                           
  2463                           ; 2 bytes @ 0x45
  2464  0000A5                     	ds	2
  2465  0000A7                     ??_Factory_init:
  2466  0000A7                     displaySM@ev:
  2467                           	callstack 0
  2468                           
  2469                           ; 1 bytes @ 0x47
  2470  0000A7                     	ds	5
  2471  0000AC                     touchScreenController@valueY:
  2472                           	callstack 0
  2473                           
  2474                           ; 2 bytes @ 0x4C
  2475  0000AC                     	ds	2
  2476  0000AE                     touchScreenController@valueX:
  2477                           	callstack 0
  2478                           
  2479                           ; 2 bytes @ 0x4E
  2480  0000AE                     	ds	2
  2481  0000B0                     touchScreenSM@g:
  2482                           	callstack 0
  2483                           
  2484                           ; 2 bytes @ 0x50
  2485  0000B0                     	ds	2
  2486  0000B2                     ??_touchScreenSM:
  2487                           
  2488                           ; 1 bytes @ 0x52
  2489  0000B2                     	ds	2
  2490  0000B4                     touchScreenSM@ev:
  2491                           	callstack 0
  2492                           
  2493                           ; 1 bytes @ 0x54
  2494  0000B4                     	ds	1
  2495                           
  2496                           	psect	cstackCOMRAM
  2497  000001                     __pcstackCOMRAM:
  2498                           	callstack 0
  2499  000001                     ?i2___wmul:
  2500                           	callstack 0
  2501  000001                     ?i2___awmod:
  2502                           	callstack 0
  2503  000001                     i2ENTERCRITICAL@inISR:
  2504                           	callstack 0
  2505  000001                     i2LEAVECRITICAL@inISR:
  2506                           	callstack 0
  2507  000001                     i2___wmul@multiplier:
  2508                           	callstack 0
  2509  000001                     i2___awmod@dividend:
  2510                           	callstack 0
  2511                           
  2512                           ; 2 bytes @ 0x0
  2513  000001                     	ds	1
  2514  000002                     XF_unscheduleTimer@inISR:
  2515                           	callstack 0
  2516                           
  2517                           ; 1 bytes @ 0x1
  2518  000002                     	ds	1
  2519  000003                     XF_unscheduleTimer@id:
  2520                           	callstack 0
  2521  000003                     i2___wmul@multiplicand:
  2522                           	callstack 0
  2523  000003                     i2___awmod@divisor:
  2524                           	callstack 0
  2525                           
  2526                           ; 2 bytes @ 0x2
  2527  000003                     	ds	2
  2528  000005                     i2___awmod@counter:
  2529                           	callstack 0
  2530  000005                     i2___wmul@product:
  2531                           	callstack 0
  2532                           
  2533                           ; 2 bytes @ 0x4
  2534  000005                     	ds	1
  2535  000006                     i2___awmod@sign:
  2536                           	callstack 0
  2537                           
  2538                           ; 1 bytes @ 0x5
  2539  000006                     	ds	1
  2540  000007                     i2XF_pushEvent@inISR:
  2541                           	callstack 0
  2542                           
  2543                           ; 1 bytes @ 0x6
  2544  000007                     	ds	1
  2545  000008                     i2XF_pushEvent@ev:
  2546                           	callstack 0
  2547                           
  2548                           ; 1 bytes @ 0x7
  2549  000008                     	ds	1
  2550  000009                     i2XF_pushEvent@temp:
  2551                           	callstack 0
  2552                           
  2553                           ; 1 bytes @ 0x8
  2554  000009                     	ds	1
  2555  00000A                     
  2556                           ; 1 bytes @ 0x9
  2557  00000A                     	ds	2
  2558  00000C                     XF_decrementAndQueueTimers@i:
  2559                           	callstack 0
  2560                           
  2561                           ; 2 bytes @ 0xB
  2562  00000C                     	ds	2
  2563  00000E                     ??_isr:
  2564                           
  2565                           ; 1 bytes @ 0xD
  2566  00000E                     	ds	4
  2567  000012                     ??_LCD_Lowlevel_Init:
  2568  000012                     ??_sleepController:
  2569  000012                     ?_LCD_Read:
  2570                           	callstack 0
  2571  000012                     ?_strlen:
  2572                           	callstack 0
  2573  000012                     ?_RGB2LCD:
  2574                           	callstack 0
  2575  000012                     ?___awdiv:
  2576                           	callstack 0
  2577  000012                     ?___awmod:
  2578                           	callstack 0
  2579  000012                     ?___lwmod:
  2580                           	callstack 0
  2581  000012                     ?___xxtofl:
  2582                           	callstack 0
  2583  000012                     ?___aodiv:
  2584                           	callstack 0
  2585  000012                     ?___aomod:
  2586                           	callstack 0
  2587  000012                     configMeasure@channel:
  2588                           	callstack 0
  2589  000012                     ENTERCRITICAL@inISR:
  2590                           	callstack 0
  2591  000012                     LEAVECRITICAL@inISR:
  2592                           	callstack 0
  2593  000012                     Ball_init@b:
  2594                           	callstack 0
  2595  000012                     Ball_Update@b:
  2596                           	callstack 0
  2597  000012                     Paddle_init@p:
  2598                           	callstack 0
  2599  000012                     Paddle_addX@p:
  2600                           	callstack 0
  2601  000012                     Score_init@s:
  2602                           	callstack 0
  2603  000012                     GameParameters_setBackLight@s:
  2604                           	callstack 0
  2605  000012                     GameParameters_setLevel@s:
  2606                           	callstack 0
  2607  000012                     GameParameters_resetPos@s:
  2608                           	callstack 0
  2609  000012                     GameParameters_setX@s:
  2610                           	callstack 0
  2611  000012                     GameParameters_setY@s:
  2612                           	callstack 0
  2613  000012                     LCD_Fill@color:
  2614                           	callstack 0
  2615  000012                     LCD_SliderCreate@posX:
  2616                           	callstack 0
  2617  000012                     LCD_ButtonCreate@posX:
  2618                           	callstack 0
  2619  000012                     LCD_InButton@button:
  2620                           	callstack 0
  2621  000012                     LCD_InSlider@slider:
  2622                           	callstack 0
  2623  000012                     LCD_DrawRect@posX1:
  2624                           	callstack 0
  2625  000012                     RGB2LCD@colorTableEntry:
  2626                           	callstack 0
  2627  000012                     LCD_Read@posX:
  2628                           	callstack 0
  2629  000012                     ___awdiv@dividend:
  2630                           	callstack 0
  2631  000012                     ___awmod@dividend:
  2632                           	callstack 0
  2633  000012                     ___lwmod@dividend:
  2634                           	callstack 0
  2635  000012                     fputc@c:
  2636                           	callstack 0
  2637  000012                     strlen@s:
  2638                           	callstack 0
  2639  000012                     ___xxtofl@val:
  2640                           	callstack 0
  2641  000012                     ___aodiv@dividend:
  2642                           	callstack 0
  2643  000012                     ___aomod@dividend:
  2644                           	callstack 0
  2645                           
  2646                           ; 8 bytes @ 0x11
  2647  000012                     	ds	1
  2648  000013                     XF_scheduleTimer@tm:
  2649                           	callstack 0
  2650  000013                     LCD_Lowlevel_Init@i:
  2651                           	callstack 0
  2652                           
  2653                           ; 4 bytes @ 0x12
  2654  000013                     	ds	1
  2655  000014                     ??_Ball_Update:
  2656  000014                     ??_RGB2LCD:
  2657  000014                     LCD_Fill@colorH:
  2658                           	callstack 0
  2659  000014                     Paddle_init@team:
  2660                           	callstack 0
  2661  000014                     Paddle_addX@value:
  2662                           	callstack 0
  2663  000014                     GameParameters_setBackLight@value:
  2664                           	callstack 0
  2665  000014                     GameParameters_setLevel@value:
  2666                           	callstack 0
  2667  000014                     GameParameters_setX@value:
  2668                           	callstack 0
  2669  000014                     GameParameters_setY@value:
  2670                           	callstack 0
  2671  000014                     LCD_SliderCreate@posY:
  2672                           	callstack 0
  2673  000014                     LCD_ButtonCreate@posY:
  2674                           	callstack 0
  2675  000014                     LCD_InButton@posX:
  2676                           	callstack 0
  2677  000014                     LCD_InSlider@posX:
  2678                           	callstack 0
  2679  000014                     LCD_DrawRect@posY1:
  2680                           	callstack 0
  2681  000014                     LCD_Read@posY:
  2682                           	callstack 0
  2683  000014                     ___awdiv@divisor:
  2684                           	callstack 0
  2685  000014                     ___awmod@divisor:
  2686                           	callstack 0
  2687  000014                     ___lwmod@divisor:
  2688                           	callstack 0
  2689  000014                     fputc@fp:
  2690                           	callstack 0
  2691  000014                     strlen@a:
  2692                           	callstack 0
  2693                           
  2694                           ; 2 bytes @ 0x13
  2695  000014                     	ds	1
  2696  000015                     LCD_Fill@colorL:
  2697                           	callstack 0
  2698  000015                     XF_scheduleTimer@ev:
  2699                           	callstack 0
  2700                           
  2701                           ; 1 bytes @ 0x14
  2702  000015                     	ds	1
  2703  000016                     ??_LCD_Read:
  2704  000016                     ??_fputc:
  2705  000016                     ??___xxtofl:
  2706  000016                     XF_scheduleTimer@inISR:
  2707                           	callstack 0
  2708  000016                     ___awdiv@counter:
  2709                           	callstack 0
  2710  000016                     ___awmod@counter:
  2711                           	callstack 0
  2712  000016                     ___lwmod@counter:
  2713                           	callstack 0
  2714  000016                     Paddle_addX@add:
  2715                           	callstack 0
  2716  000016                     LCD_Fill@column:
  2717                           	callstack 0
  2718  000016                     LCD_SliderCreate@width:
  2719                           	callstack 0
  2720  000016                     LCD_ButtonCreate@width:
  2721                           	callstack 0
  2722  000016                     LCD_InButton@posY:
  2723                           	callstack 0
  2724  000016                     LCD_InSlider@posY:
  2725                           	callstack 0
  2726  000016                     LCD_DrawRect@posX2:
  2727                           	callstack 0
  2728  000016                     levelController@g:
  2729                           	callstack 0
  2730                           
  2731                           ; 2 bytes @ 0x15
  2732  000016                     	ds	1
  2733  000017                     ??_LCD_Init:
  2734  000017                     XF_scheduleTimer@i:
  2735                           	callstack 0
  2736  000017                     ___awdiv@sign:
  2737                           	callstack 0
  2738  000017                     ___awmod@sign:
  2739                           	callstack 0
  2740                           
  2741                           ; 1 bytes @ 0x16
  2742  000017                     	ds	1
  2743  000018                     ??_Paddle_addX:
  2744  000018                     ??_LCD_InButton:
  2745  000018                     ??_LCD_InSlider:
  2746  000018                     LCD_Init@i:
  2747                           	callstack 0
  2748  000018                     XF_pushEvent@inISR:
  2749                           	callstack 0
  2750  000018                     XF_popEvent@ev:
  2751                           	callstack 0
  2752  000018                     LCD_Fill@page:
  2753                           	callstack 0
  2754  000018                     LCD_SliderCreate@height:
  2755                           	callstack 0
  2756  000018                     LCD_ButtonCreate@height:
  2757                           	callstack 0
  2758  000018                     LCD_DrawRect@posY2:
  2759                           	callstack 0
  2760  000018                     RGB2LCD@red:
  2761                           	callstack 0
  2762  000018                     LCD_Read@color:
  2763                           	callstack 0
  2764  000018                     backlightController@g:
  2765                           	callstack 0
  2766  000018                     ___awdiv@quotient:
  2767                           	callstack 0
  2768                           
  2769                           ; 2 bytes @ 0x17
  2770  000018                     	ds	1
  2771  000019                     XF_pushEvent@ev:
  2772                           	callstack 0
  2773  000019                     XF_popEvent@inISR:
  2774                           	callstack 0
  2775                           
  2776                           ; 1 bytes @ 0x18
  2777  000019                     	ds	1
  2778  00001A                     ?___wmul:
  2779                           	callstack 0
  2780  00001A                     LCD_DrawRect@fill:
  2781                           	callstack 0
  2782  00001A                     XF_pushEvent@temp:
  2783                           	callstack 0
  2784  00001A                     ___xxtofl@sign:
  2785                           	callstack 0
  2786  00001A                     LCD_SliderCreate@sldColor:
  2787                           	callstack 0
  2788  00001A                     LCD_ButtonCreate@txtColor:
  2789                           	callstack 0
  2790  00001A                     RGB2LCD@green:
  2791                           	callstack 0
  2792  00001A                     LCD_Read@temp16:
  2793                           	callstack 0
  2794  00001A                     ___wmul@multiplier:
  2795                           	callstack 0
  2796  00001A                     ___aodiv@divisor:
  2797                           	callstack 0
  2798  00001A                     ___aomod@divisor:
  2799                           	callstack 0
  2800                           
  2801                           ; 8 bytes @ 0x19
  2802  00001A                     	ds	1
  2803  00001B                     ___xxtofl@exp:
  2804                           	callstack 0
  2805  00001B                     LCD_DrawRect@color:
  2806                           	callstack 0
  2807  00001B                     checkCollision@g:
  2808                           	callstack 0
  2809  00001B                     fputs@s:
  2810                           	callstack 0
  2811                           
  2812                           ; 2 bytes @ 0x1A
  2813  00001B                     	ds	1
  2814  00001C                     LCD_SliderCreate@bgColor:
  2815                           	callstack 0
  2816  00001C                     LCD_ButtonCreate@bgColor:
  2817                           	callstack 0
  2818  00001C                     RGB2LCD@blue:
  2819                           	callstack 0
  2820  00001C                     moovePaddle1@g:
  2821                           	callstack 0
  2822  00001C                     moovePaddle2@g:
  2823                           	callstack 0
  2824  00001C                     ___wmul@multiplicand:
  2825                           	callstack 0
  2826  00001C                     ___xxtofl@arg:
  2827                           	callstack 0
  2828                           
  2829                           ; 4 bytes @ 0x1B
  2830  00001C                     	ds	1
  2831  00001D                     ??_checkCollision:
  2832  00001D                     LCD_DrawRect@j:
  2833                           	callstack 0
  2834  00001D                     fputs@fp:
  2835                           	callstack 0
  2836                           
  2837                           ; 2 bytes @ 0x1C
  2838  00001D                     	ds	1
  2839  00001E                     ??_moovePaddle2:
  2840  00001E                     LCD_SliderCreate@borderColor:
  2841                           	callstack 0
  2842  00001E                     LCD_ButtonCreate@textOrBmp:
  2843                           	callstack 0
  2844  00001E                     RGB2LCD@color:
  2845                           	callstack 0
  2846  00001E                     ___wmul@product:
  2847                           	callstack 0
  2848                           
  2849                           ; 2 bytes @ 0x1D
  2850  00001E                     	ds	1
  2851  00001F                     fputs@c:
  2852                           	callstack 0
  2853  00001F                     LCD_DrawRect@temp:
  2854                           	callstack 0
  2855                           
  2856                           ; 2 bytes @ 0x1E
  2857  00001F                     	ds	1
  2858  000020                     ?___lwdiv:
  2859                           	callstack 0
  2860  000020                     ?___fldiv:
  2861                           	callstack 0
  2862  000020                     LCD_SliderCreate@cursorWidth:
  2863                           	callstack 0
  2864  000020                     LCD_ButtonCreate@font:
  2865                           	callstack 0
  2866  000020                     LCD_DrawText@msg:
  2867                           	callstack 0
  2868  000020                     XF_init@i:
  2869                           	callstack 0
  2870  000020                     ___lwdiv@dividend:
  2871                           	callstack 0
  2872  000020                     fputs@i:
  2873                           	callstack 0
  2874  000020                     ___fldiv@b:
  2875                           	callstack 0
  2876                           
  2877                           ; 4 bytes @ 0x1F
  2878  000020                     	ds	1
  2879  000021                     LCD_DrawRect@colorH:
  2880                           	callstack 0
  2881                           
  2882                           ; 1 bytes @ 0x20
  2883  000021                     	ds	1
  2884  000022                     ?_pad:
  2885                           	callstack 0
  2886  000022                     LCD_DrawRect@colorL:
  2887                           	callstack 0
  2888  000022                     ___aodiv@counter:
  2889                           	callstack 0
  2890  000022                     ___aomod@counter:
  2891                           	callstack 0
  2892  000022                     LCD_SliderCreate@steps:
  2893                           	callstack 0
  2894  000022                     LCD_ButtonCreate@fpPress:
  2895                           	callstack 0
  2896  000022                     LCD_DrawText@font:
  2897                           	callstack 0
  2898  000022                     ___lwdiv@divisor:
  2899                           	callstack 0
  2900  000022                     pad@fp:
  2901                           	callstack 0
  2902                           
  2903                           ; 2 bytes @ 0x21
  2904  000022                     	ds	1
  2905  000023                     ___aodiv@sign:
  2906                           	callstack 0
  2907  000023                     ___aomod@sign:
  2908                           	callstack 0
  2909  000023                     LCD_DrawRect@i:
  2910                           	callstack 0
  2911                           
  2912                           ; 2 bytes @ 0x22
  2913  000023                     	ds	1
  2914  000024                     ?_abs:
  2915                           	callstack 0
  2916  000024                     LCD_DrawText@align:
  2917                           	callstack 0
  2918  000024                     ___lwdiv@counter:
  2919                           	callstack 0
  2920  000024                     LCD_SliderCreate@fpPress:
  2921                           	callstack 0
  2922  000024                     LCD_ButtonCreate@fpReleased:
  2923                           	callstack 0
  2924  000024                     pad@buf:
  2925                           	callstack 0
  2926  000024                     abs@a:
  2927                           	callstack 0
  2928  000024                     ___fldiv@a:
  2929                           	callstack 0
  2930  000024                     ___aodiv@quotient:
  2931                           	callstack 0
  2932                           
  2933                           ; 8 bytes @ 0x23
  2934  000024                     	ds	1
  2935  000025                     Ball_draw@b:
  2936                           	callstack 0
  2937  000025                     Paddle_draw@p:
  2938                           	callstack 0
  2939  000025                     LCD_ButtonUpdate@button:
  2940                           	callstack 0
  2941  000025                     LCD_DrawText@posX:
  2942                           	callstack 0
  2943  000025                     mooveBall@g:
  2944                           	callstack 0
  2945  000025                     ___lwdiv@quotient:
  2946                           	callstack 0
  2947                           
  2948                           ; 2 bytes @ 0x24
  2949  000025                     	ds	1
  2950  000026                     ??_abs:
  2951  000026                     LCD_SliderCreate@slider:
  2952                           	callstack 0
  2953  000026                     LCD_ButtonCreate@fpOut:
  2954                           	callstack 0
  2955  000026                     pad@p:
  2956                           	callstack 0
  2957                           
  2958                           ; 2 bytes @ 0x25
  2959  000026                     	ds	1
  2960  000027                     ??_Ball_draw:
  2961  000027                     ??_Paddle_draw:
  2962  000027                     ??_LCD_ButtonUpdate:
  2963  000027                     LCD_SliderUpdate@slider:
  2964                           	callstack 0
  2965  000027                     LCD_DrawText@posY:
  2966                           	callstack 0
  2967  000027                     LCD_Bitmap@bmpPtr:
  2968                           	callstack 0
  2969                           
  2970                           ; 2 bytes @ 0x26
  2971  000027                     	ds	1
  2972  000028                     ??___fldiv:
  2973  000028                     ??_pad:
  2974  000028                     LCD_ButtonCreate@button:
  2975                           	callstack 0
  2976                           
  2977                           ; 2 bytes @ 0x27
  2978  000028                     	ds	1
  2979  000029                     ??_LCD_SliderUpdate:
  2980  000029                     LCD_DrawText@color:
  2981                           	callstack 0
  2982  000029                     LCD_Bitmap@posX:
  2983                           	callstack 0
  2984  000029                     pad@i:
  2985                           	callstack 0
  2986                           
  2987                           ; 2 bytes @ 0x28
  2988  000029                     	ds	1
  2989  00002A                     LCD_ButtonCreate@index:
  2990                           	callstack 0
  2991                           
  2992                           ; 1 bytes @ 0x29
  2993  00002A                     	ds	1
  2994  00002B                     GameParameters_init@s:
  2995                           	callstack 0
  2996  00002B                     LCD_ButtonUpdate@colorOut:
  2997                           	callstack 0
  2998  00002B                     LCD_DrawText@bg_color:
  2999                           	callstack 0
  3000  00002B                     LCD_Bitmap@posY:
  3001                           	callstack 0
  3002  00002B                     pad@w:
  3003                           	callstack 0
  3004                           
  3005                           ; 2 bytes @ 0x2A
  3006  00002B                     	ds	1
  3007  00002C                     ___fldiv@rem:
  3008                           	callstack 0
  3009                           
  3010                           ; 4 bytes @ 0x2B
  3011  00002C                     	ds	1
  3012  00002D                     ??_LCD_DrawText:
  3013  00002D                     ??_LCD_Bitmap:
  3014  00002D                     ?_dtoa:
  3015                           	callstack 0
  3016  00002D                     LCD_ButtonUpdate@colorIn:
  3017                           	callstack 0
  3018  00002D                     dtoa@fp:
  3019                           	callstack 0
  3020                           
  3021                           ; 2 bytes @ 0x2C
  3022  00002D                     	ds	2
  3023  00002F                     LCD_SliderUpdate@x2:
  3024                           	callstack 0
  3025  00002F                     LCD_ButtonUpdate@x2:
  3026                           	callstack 0
  3027  00002F                     dtoa@d:
  3028                           	callstack 0
  3029                           
  3030                           ; 8 bytes @ 0x2E
  3031  00002F                     	ds	1
  3032  000030                     ___fldiv@sign:
  3033                           	callstack 0
  3034                           
  3035                           ; 1 bytes @ 0x2F
  3036  000030                     	ds	1
  3037  000031                     LCD_SliderUpdate@y1:
  3038                           	callstack 0
  3039  000031                     LCD_ButtonUpdate@y1:
  3040                           	callstack 0
  3041  000031                     ___fldiv@new_exp:
  3042                           	callstack 0
  3043                           
  3044                           ; 2 bytes @ 0x30
  3045  000031                     	ds	2
  3046  000033                     LCD_SliderUpdate@y2:
  3047                           	callstack 0
  3048  000033                     LCD_ButtonUpdate@x1:
  3049                           	callstack 0
  3050  000033                     LCD_DrawText@offset:
  3051                           	callstack 0
  3052  000033                     ___fldiv@grs:
  3053                           	callstack 0
  3054                           
  3055                           ; 4 bytes @ 0x32
  3056  000033                     	ds	2
  3057  000035                     LCD_SliderUpdate@x1:
  3058                           	callstack 0
  3059  000035                     LCD_ButtonUpdate@y2:
  3060                           	callstack 0
  3061  000035                     LCD_DrawText@yOffset:
  3062                           	callstack 0
  3063                           
  3064                           ; 2 bytes @ 0x34
  3065  000035                     	ds	2
  3066  000037                     ??_dtoa:
  3067  000037                     LCD_DrawText@fontByte:
  3068                           	callstack 0
  3069  000037                     ___fldiv@bexp:
  3070                           	callstack 0
  3071  000037                     LCD_SliderDraw@slider:
  3072                           	callstack 0
  3073  000037                     gameControllerController@g:
  3074                           	callstack 0
  3075                           
  3076                           ; 2 bytes @ 0x36
  3077  000037                     	ds	1
  3078  000038                     LCD_DrawText@fontPixel:
  3079                           	callstack 0
  3080  000038                     ___fldiv@aexp:
  3081                           	callstack 0
  3082                           
  3083                           ; 1 bytes @ 0x37
  3084  000038                     	ds	1
  3085  000039                     ??_LCD_SliderDraw:
  3086  000039                     ?___fltol:
  3087                           	callstack 0
  3088  000039                     gameControllerController@ev:
  3089                           	callstack 0
  3090  000039                     LCD_DrawText@posYEnd:
  3091                           	callstack 0
  3092  000039                     ___fltol@f1:
  3093                           	callstack 0
  3094                           
  3095                           ; 4 bytes @ 0x38
  3096  000039                     	ds	1
  3097  00003A                     ??_gameControllerController:
  3098                           
  3099                           ; 1 bytes @ 0x39
  3100  00003A                     	ds	1
  3101  00003B                     LCD_DrawText@posXEnd:
  3102                           	callstack 0
  3103                           
  3104                           ; 2 bytes @ 0x3A
  3105  00003B                     	ds	1
  3106  00003C                     gameControllerInit@g:
  3107                           	callstack 0
  3108  00003C                     gameControllerSM@g:
  3109                           	callstack 0
  3110                           
  3111                           ; 2 bytes @ 0x3B
  3112  00003C                     	ds	1
  3113  00003D                     ??___fltol:
  3114  00003D                     LCD_DrawText@y:
  3115                           	callstack 0
  3116  00003D                     LCD_SliderDraw@x1:
  3117                           	callstack 0
  3118                           
  3119                           ; 2 bytes @ 0x3C
  3120  00003D                     	ds	1
  3121  00003E                     ??_gameControllerSM:
  3122  00003E                     LCD_DrawText@i:
  3123                           	callstack 0
  3124                           
  3125                           ; 1 bytes @ 0x3D
  3126  00003E                     	ds	1
  3127  00003F                     ?_vfpfcnvrt:
  3128                           	callstack 0
  3129  00003F                     LCD_DrawText@tempChar:
  3130                           	callstack 0
  3131  00003F                     LCD_SliderDraw@x2:
  3132                           	callstack 0
  3133  00003F                     vfpfcnvrt@fp:
  3134                           	callstack 0
  3135                           
  3136                           ; 2 bytes @ 0x3E
  3137  00003F                     	ds	1
  3138  000040                     LCD_DrawText@x:
  3139                           	callstack 0
  3140  000040                     gameControllerSM@ev:
  3141                           	callstack 0
  3142                           
  3143                           ; 1 bytes @ 0x3F
  3144  000040                     	ds	1
  3145  000041                     LCD_DrawText@width:
  3146                           	callstack 0
  3147  000041                     ___fltol@sign1:
  3148                           	callstack 0
  3149  000041                     LCD_SliderDraw@y1:
  3150                           	callstack 0
  3151  000041                     vfpfcnvrt@fmt:
  3152                           	callstack 0
  3153                           
  3154                           ; 2 bytes @ 0x40
  3155  000041                     	ds	1
  3156  000042                     ___fltol@exp1:
  3157                           	callstack 0
  3158                           
  3159                           ; 1 bytes @ 0x41
  3160  000042                     	ds	1
  3161  000043                     LCD_SliderDraw@y2:
  3162                           	callstack 0
  3163  000043                     vfpfcnvrt@ap:
  3164                           	callstack 0
  3165                           
  3166                           ; 2 bytes @ 0x42
  3167  000043                     	ds	2
  3168  000045                     ??_vfpfcnvrt:
  3169                           
  3170                           ; 1 bytes @ 0x44
  3171  000045                     	ds	2
  3172  000047                     
  3173                           ; 1 bytes @ 0x46
  3174 ;;
  3175 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3176 ;;
  3177 ;; *************** function _main *****************
  3178 ;; Defined at:
  3179 ;;		line 47 in file "main.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3193 ;;      Params:         0       0       0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0
  3196 ;;      Totals:         0       0       0       0       0       0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels required when called: 17
  3199 ;; This function calls:
  3200 ;;		_Factory_exec
  3201 ;;		_Factory_init
  3202 ;; This function is called by:
  3203 ;;		Startup code after reset
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text0
  3208  006740                     __ptext0:
  3209                           	callstack 0
  3210  006740                     _main:
  3211                           	callstack 14
  3212  006740                     
  3213                           ;main.c: 49:     Factory_init();
  3214  006740  EC65  F02C         	call	_Factory_init	;wreg free
  3215  006744                     l750:
  3216                           
  3217                           ;main.c: 51:     {;main.c: 52:         Factory_exec();
  3218  006744  EC31  F031         	call	_Factory_exec	;wreg free
  3219  006748  EFA2  F033         	goto	l750
  3220  00674C  EF58  F000         	goto	start
  3221  006750                     __end_of_main:
  3222                           	callstack 0
  3223                           
  3224 ;; *************** function _Factory_init *****************
  3225 ;; Defined at:
  3226 ;;		line 11 in file "class/factory.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3240 ;;      Params:         0       0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0
  3242 ;;      Temps:          0       2       0       0       0       0       0
  3243 ;;      Totals:         0       2       0       0       0       0       0
  3244 ;;Total ram usage:        2 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 16
  3247 ;; This function calls:
  3248 ;;		_GameParameters_init
  3249 ;;		_LCD_DrawText
  3250 ;;		_LCD_Fill
  3251 ;;		_LCD_Init
  3252 ;;		_XF_init
  3253 ;;		_sleepInit
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text1
  3260  0058CA                     __ptext1:
  3261                           	callstack 0
  3262  0058CA                     _Factory_init:
  3263                           	callstack 14
  3264  0058CA                     
  3265                           ;class/factory.c: 14:     PLLEN = 1;
  3266  0058CA  8C9B               	bsf	3995,6,c	;volatile
  3267  0058CC                     
  3268                           ;class/factory.c: 15:     OSCCON = 0b01110000;
  3269  0058CC  0E70               	movlw	112
  3270  0058CE  6ED3               	movwf	211,c	;volatile
  3271  0058D0                     
  3272                           ;class/factory.c: 16:     _delay((unsigned long)((100)*(64000000L/4000.0)));
  3273  0058D0  0E09               	movlw	9
  3274  0058D2  0100               	movlb	0	; () banked
  3275  0058D4  6FA8               	movwf	(??_Factory_init+1)& (0+255),b
  3276  0058D6  0E1E               	movlw	30
  3277  0058D8  6FA7               	movwf	??_Factory_init& (0+255),b
  3278  0058DA  0EE4               	movlw	228
  3279  0058DC                     u8347:
  3280  0058DC  2EE8               	decfsz	wreg,f,c
  3281  0058DE  D7FE               	bra	u8347
  3282  0058E0  2FA7               	decfsz	??_Factory_init& (0+255),f,b
  3283  0058E2  D7FC               	bra	u8347
  3284  0058E4  2FA8               	decfsz	(??_Factory_init+1)& (0+255),f,b
  3285  0058E6  D7FA               	bra	u8347
  3286  0058E8  F000               	nop	
  3287  0058EA                     
  3288                           ;class/factory.c: 18:     LCD_Init();
  3289  0058EA  ECE1  F019         	call	_LCD_Init	;wreg free
  3290  0058EE                     
  3291                           ;class/factory.c: 19:     LCD_Fill(0b0000000000011111);
  3292  0058EE  0E00               	movlw	0
  3293  0058F0  6E13               	movwf	(LCD_Fill@color+1)^0,c
  3294  0058F2  0E1F               	movlw	31
  3295  0058F4  6E12               	movwf	LCD_Fill@color^0,c
  3296  0058F6  ECA5  F02B         	call	_LCD_Fill	;wreg free
  3297  0058FA                     
  3298                           ;class/factory.c: 20:     LCD_DrawText("MenuStart",&arialNarrow_12ptFontInfo,A_CENTER,50
      +                          ,50,0b0000000000000000,0b1111111111111111);
  3299  0058FA  0EBD               	movlw	low STR_1
  3300  0058FC  6E20               	movwf	LCD_DrawText@msg^0,c
  3301  0058FE  0E7F               	movlw	high STR_1
  3302  005900  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  3303  005902  0E7B               	movlw	low _arialNarrow_12ptFontInfo
  3304  005904  6E22               	movwf	LCD_DrawText@font^0,c
  3305  005906  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  3306  005908  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  3307  00590A  0E02               	movlw	2
  3308  00590C  6E24               	movwf	LCD_DrawText@align^0,c
  3309  00590E  0E00               	movlw	0
  3310  005910  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  3311  005912  0E32               	movlw	50
  3312  005914  6E25               	movwf	LCD_DrawText@posX^0,c
  3313  005916  0E00               	movlw	0
  3314  005918  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  3315  00591A  0E32               	movlw	50
  3316  00591C  6E27               	movwf	LCD_DrawText@posY^0,c
  3317  00591E  0E00               	movlw	0
  3318  005920  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  3319  005922  0E00               	movlw	0
  3320  005924  6E29               	movwf	LCD_DrawText@color^0,c
  3321  005926  0EFF               	movlw	255
  3322  005928  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  3323  00592A  682B               	setf	LCD_DrawText@bg_color^0,c
  3324  00592C  EC14  F00F         	call	_LCD_DrawText	;wreg free
  3325  005930                     
  3326                           ;class/factory.c: 25:     GIE=1;
  3327  005930  8EF2               	bsf	4082,7,c	;volatile
  3328  005932                     
  3329                           ;class/factory.c: 26:     INT1IE=0;
  3330  005932  96F0               	bcf	4080,3,c	;volatile
  3331  005934                     
  3332                           ;class/factory.c: 27:     INTEDG1=0;
  3333  005934  9AF1               	bcf	4081,5,c	;volatile
  3334  005936                     
  3335                           ;class/factory.c: 28:     TRISC0=0;
  3336  005936  9094               	bcf	3988,0,c	;volatile
  3337  005938                     
  3338                           ;class/factory.c: 29:     LATC0=1;
  3339  005938  808B               	bsf	3979,0,c	;volatile
  3340  00593A                     
  3341                           ;class/factory.c: 32:     T0CON=0b10000110;
  3342  00593A  0E86               	movlw	134
  3343  00593C  6ED5               	movwf	213,c	;volatile
  3344  00593E                     
  3345                           ;class/factory.c: 33:     TMR0H=0xFB;
  3346  00593E  0EFB               	movlw	251
  3347  005940  6ED7               	movwf	215,c	;volatile
  3348  005942                     
  3349                           ;class/factory.c: 34:     TMR0L=0x1D;
  3350  005942  0E1D               	movlw	29
  3351  005944  6ED6               	movwf	214,c	;volatile
  3352  005946                     
  3353                           ;class/factory.c: 35:     TMR0IE=1;
  3354  005946  8AF2               	bsf	4082,5,c	;volatile
  3355  005948                     
  3356                           ;class/factory.c: 38:     TRISC1=0;
  3357  005948  9294               	bcf	3988,1,c	;volatile
  3358  00594A                     
  3359                           ;class/factory.c: 39:     PR2=255;
  3360  00594A  68BB               	setf	187,c	;volatile
  3361  00594C                     
  3362                           ;class/factory.c: 40:     CCP2CONbits.CCP2M = 0xC;
  3363  00594C  5066               	movf	102,w,c	;volatile
  3364  00594E  0BF0               	andlw	-16
  3365  005950  090C               	iorlw	12
  3366  005952  6E66               	movwf	102,c	;volatile
  3367  005954                     
  3368                           ;class/factory.c: 41:     CCPR2L = 255;
  3369  005954  6867               	setf	103,c	;volatile
  3370  005956                     
  3371                           ;class/factory.c: 42:     CCP2CONbits.DC2B = 0;
  3372  005956  0ECF               	movlw	-49
  3373  005958  1666               	andwf	102,f,c	;volatile
  3374  00595A                     
  3375                           ;class/factory.c: 43:     TMR2IF=0;
  3376  00595A  929E               	bcf	3998,1,c	;volatile
  3377  00595C                     
  3378                           ;class/factory.c: 44:     T2CONbits.T2CKPS0 = 1;
  3379  00595C  80BA               	bsf	186,0,c	;volatile
  3380  00595E                     
  3381                           ;class/factory.c: 45:     T2CONbits.T2CKPS1 = 0;
  3382  00595E  92BA               	bcf	186,1,c	;volatile
  3383  005960                     
  3384                           ;class/factory.c: 46:     T2CONbits.TMR2ON = 1;
  3385  005960  84BA               	bsf	186,2,c	;volatile
  3386  005962                     
  3387                           ;class/factory.c: 48:     ADCON2=0b10100110;
  3388  005962  0EA6               	movlw	166
  3389  005964  6EC0               	movwf	192,c	;volatile
  3390  005966                     
  3391                           ;class/factory.c: 51:     XF_init();
  3392  005966  ECC3  F02C         	call	_XF_init	;wreg free
  3393  00596A                     
  3394                           ;class/factory.c: 52:     GameParameters_init(&g1);
  3395  00596A  0E00               	movlw	low _g1
  3396  00596C  6E2B               	movwf	GameParameters_init@s^0,c
  3397  00596E  0E01               	movlw	high _g1
  3398  005970  6E2C               	movwf	(GameParameters_init@s+1)^0,c
  3399  005972  EC08  F015         	call	_GameParameters_init	;wreg free
  3400  005976                     
  3401                           ;class/factory.c: 53:     sleepInit(&g1);
  3402  005976  0E00               	movlw	low _g1
  3403  005978  0100               	movlb	0	; () banked
  3404  00597A  6FA5               	movwf	sleepInit@g& (0+255),b
  3405  00597C  0E01               	movlw	high _g1
  3406  00597E  6FA6               	movwf	(sleepInit@g+1)& (0+255),b
  3407  005980  ECCA  F032         	call	_sleepInit	;wreg free
  3408  005984  0012               	return		;funcret
  3409  005986                     __end_of_Factory_init:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _sleepInit *****************
  3413 ;; Defined at:
  3414 ;;		line 11 in file "stateMachine/sleepSM.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  g               2   69[BANK0 ] PTR struct GameParameter
  3417 ;;		 -> g1(218), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3429 ;;      Params:         0       2       0       0       0       0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0
  3432 ;;      Totals:         0       2       0       0       0       0       0
  3433 ;;Total ram usage:        2 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 15
  3436 ;; This function calls:
  3437 ;;		_displayInit
  3438 ;;		_gameControllerInit
  3439 ;;		_sleepController
  3440 ;;		_touchScreenInit
  3441 ;; This function is called by:
  3442 ;;		_Factory_init
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text2
  3447  006594                     __ptext2:
  3448                           	callstack 0
  3449  006594                     _sleepInit:
  3450                           	callstack 14
  3451  006594                     
  3452                           ;stateMachine/sleepSM.c: 11: void sleepInit(GameParameters* g);stateMachine/sleepSM.c: 1
      +                          2: {;stateMachine/sleepSM.c: 13:     sleepState=WAKEUP;
  3453  006594  0E00               	movlw	0
  3454  006596  0100               	movlb	0	; () banked
  3455  006598  6FDF               	movwf	_sleepState& (0+255),b
  3456  00659A                     
  3457                           ; BSR set to: 0
  3458                           ;stateMachine/sleepSM.c: 14:     displayInit(g);
  3459  00659A  C0A5  F0A3         	movff	sleepInit@g,displayInit@g
  3460  00659E  C0A6  F0A4         	movff	sleepInit@g+1,displayInit@g+1
  3461  0065A2  EC3C  F033         	call	_displayInit	;wreg free
  3462  0065A6                     
  3463                           ;stateMachine/sleepSM.c: 15:     gameControllerInit(g);
  3464  0065A6  C0A5  F03C         	movff	sleepInit@g,gameControllerInit@g
  3465  0065AA  C0A6  F03D         	movff	sleepInit@g+1,gameControllerInit@g+1
  3466  0065AE  EC48  F033         	call	_gameControllerInit	;wreg free
  3467  0065B2                     
  3468                           ;stateMachine/sleepSM.c: 16:     touchScreenInit();
  3469  0065B2  ECA8  F033         	call	_touchScreenInit	;wreg free
  3470  0065B6                     
  3471                           ;stateMachine/sleepSM.c: 17:     sleepController();
  3472  0065B6  EC81  F032         	call	_sleepController	;wreg free
  3473  0065BA  0012               	return		;funcret
  3474  0065BC                     __end_of_sleepInit:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _touchScreenInit *****************
  3478 ;; Defined at:
  3479 ;;		line 22 in file "stateMachine/touchScreenSM.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3493 ;;      Params:         0       0       0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0
  3496 ;;      Totals:         0       0       0       0       0       0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 5
  3500 ;; This function calls:
  3501 ;;		_configTouch
  3502 ;; This function is called by:
  3503 ;;		_sleepInit
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text3
  3508  006750                     __ptext3:
  3509                           	callstack 0
  3510  006750                     _touchScreenInit:
  3511                           	callstack 23
  3512  006750                     
  3513                           ;stateMachine/touchScreenSM.c: 24:     touchScreenState=WAITING;
  3514  006750  0E00               	movlw	0
  3515  006752  0100               	movlb	0	; () banked
  3516  006754  6FDE               	movwf	_touchScreenState& (0+255),b
  3517  006756                     
  3518                           ; BSR set to: 0
  3519                           ;stateMachine/touchScreenSM.c: 25:     configTouch();
  3520  006756  EC2B  F033         	call	_configTouch	;wreg free
  3521  00675A  0012               	return		;funcret
  3522  00675C                     __end_of_touchScreenInit:
  3523                           	callstack 0
  3524                           
  3525 ;; *************** function _sleepController *****************
  3526 ;; Defined at:
  3527 ;;		line 53 in file "stateMachine/sleepSM.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3541 ;;      Params:         0       0       0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0       0       0
  3543 ;;      Temps:          2       0       0       0       0       0       0
  3544 ;;      Totals:         2       0       0       0       0       0       0
  3545 ;;Total ram usage:        2 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 4
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_sleepInit
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text4
  3556  006502                     __ptext4:
  3557                           	callstack 0
  3558  006502                     _sleepController:
  3559                           	callstack 24
  3560  006502  0100               	movlb	0	; () banked
  3561  006504  51DF               	movf	_sleepState& (0+255),w,b
  3562  006506  6E12               	movwf	??_sleepController^0,c
  3563  006508  6A13               	clrf	(??_sleepController+1)^0,c
  3564                           
  3565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3566                           ; Switch size 1, requested type "simple"
  3567                           ; Number of cases is 1, Range of values is 0 to 0
  3568                           ; switch strategies available:
  3569                           ; Name         Instructions Cycles
  3570                           ; simple_byte            4     3 (average)
  3571                           ;	Chosen strategy is simple_byte
  3572  00650A  5013               	movf	(??_sleepController+1)^0,w,c
  3573  00650C  0A00               	xorlw	0	; case 0
  3574  00650E  B4D8               	btfsc	status,2,c
  3575  006510  EF8C  F032         	goto	l10896
  3576  006514  EF9B  F032         	goto	l427
  3577  006518                     l10896:
  3578                           
  3579                           ; BSR set to: 0
  3580                           ; Switch size 1, requested type "simple"
  3581                           ; Number of cases is 3, Range of values is 0 to 2
  3582                           ; switch strategies available:
  3583                           ; Name         Instructions Cycles
  3584                           ; simple_byte           10     6 (average)
  3585                           ;	Chosen strategy is simple_byte
  3586  006518  5012               	movf	??_sleepController^0,w,c
  3587  00651A  0A00               	xorlw	0	; case 0
  3588  00651C  B4D8               	btfsc	status,2,c
  3589  00651E  EF9B  F032         	goto	l427
  3590  006522  0A01               	xorlw	1	; case 1
  3591  006524  B4D8               	btfsc	status,2,c
  3592  006526  EF9B  F032         	goto	l427
  3593  00652A  0A03               	xorlw	3	; case 2
  3594  00652C  B4D8               	btfsc	status,2,c
  3595  00652E  EF9B  F032         	goto	l427
  3596  006532  EF9B  F032         	goto	l427
  3597  006536                     l427:
  3598                           
  3599                           ; BSR set to: 0
  3600  006536  0012               	return		;funcret
  3601  006538                     __end_of_sleepController:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _gameControllerInit *****************
  3605 ;; Defined at:
  3606 ;;		line 16 in file "stateMachine/gameController.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  g               2   59[COMRAM] PTR struct GameParameter
  3609 ;;		 -> g1(218), 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3621 ;;      Params:         2       0       0       0       0       0       0
  3622 ;;      Locals:         0       0       0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0
  3624 ;;      Totals:         2       0       0       0       0       0       0
  3625 ;;Total ram usage:        2 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 9
  3628 ;; This function calls:
  3629 ;;		_gameControllerController
  3630 ;; This function is called by:
  3631 ;;		_sleepInit
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text5
  3636  006690                     __ptext5:
  3637                           	callstack 0
  3638  006690                     _gameControllerInit:
  3639                           	callstack 19
  3640  006690                     
  3641                           ;stateMachine/gameController.c: 16: void gameControllerInit(GameParameters* g);stateMach
      +                          ine/gameController.c: 17: {;stateMachine/gameController.c: 18:     gameStateMachine=NOGA
      +                          ME;
  3642  006690  0E00               	movlw	0
  3643  006692  6E4D               	movwf	_gameStateMachine^0,c
  3644  006694                     
  3645                           ;stateMachine/gameController.c: 19:     gameControllerController(g,NULLEVENT);
  3646  006694  C03C  F037         	movff	gameControllerInit@g,gameControllerController@g
  3647  006698  C03D  F038         	movff	gameControllerInit@g+1,gameControllerController@g+1
  3648  00669C  0E00               	movlw	0
  3649  00669E  6E39               	movwf	gameControllerController@ev^0,c
  3650  0066A0  EC39  F011         	call	_gameControllerController	;wreg free
  3651  0066A4  0012               	return		;funcret
  3652  0066A6                     __end_of_gameControllerInit:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function _displayInit *****************
  3656 ;; Defined at:
  3657 ;;		line 16 in file "stateMachine/display.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  g               2   67[BANK0 ] PTR struct GameParameter
  3660 ;;		 -> g1(218), 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3672 ;;      Params:         0       2       0       0       0       0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0
  3675 ;;      Totals:         0       2       0       0       0       0       0
  3676 ;;Total ram usage:        2 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 14
  3679 ;; This function calls:
  3680 ;;		_displayController
  3681 ;; This function is called by:
  3682 ;;		_sleepInit
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text6
  3687  006678                     __ptext6:
  3688                           	callstack 0
  3689  006678                     _displayInit:
  3690                           	callstack 14
  3691  006678                     
  3692                           ;stateMachine/display.c: 16: void displayInit(GameParameters* g);stateMachine/display.c:
      +                           17: {;stateMachine/display.c: 19:     displayState=WELCOME;
  3693  006678  0E00               	movlw	0
  3694  00667A  0100               	movlb	0	; () banked
  3695  00667C  6FDD               	movwf	_displayState& (0+255),b
  3696  00667E                     
  3697                           ; BSR set to: 0
  3698                           ;stateMachine/display.c: 20:     displayController(g,NULLEVENT);
  3699  00667E  C0A3  F09E         	movff	displayInit@g,displayController@g
  3700  006682  C0A4  F09F         	movff	displayInit@g+1,displayController@g+1
  3701  006686  0E00               	movlw	0
  3702  006688  6FA0               	movwf	displayController@ev& (0+255),b
  3703  00668A  EC83  F025         	call	_displayController	;wreg free
  3704  00668E  0012               	return		;funcret
  3705  006690                     __end_of_displayInit:
  3706                           	callstack 0
  3707                           
  3708 ;; *************** function _XF_init *****************
  3709 ;; Defined at:
  3710 ;;		line 25 in file "xf/xf.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  i               2   31[COMRAM] int 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3724 ;;      Params:         0       0       0       0       0       0       0
  3725 ;;      Locals:         2       0       0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0
  3727 ;;      Totals:         2       0       0       0       0       0       0
  3728 ;;Total ram usage:        2 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 5
  3731 ;; This function calls:
  3732 ;;		___wmul
  3733 ;; This function is called by:
  3734 ;;		_Factory_init
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text7
  3739  005986                     __ptext7:
  3740                           	callstack 0
  3741  005986                     _XF_init:
  3742                           	callstack 24
  3743  005986                     
  3744                           ;xf/xf.c: 27:     int i;;xf/xf.c: 28:     for (i=0; i<12; i++)
  3745  005986  0E00               	movlw	0
  3746  005988  6E21               	movwf	(XF_init@i+1)^0,c
  3747  00598A  0E00               	movlw	0
  3748  00598C  6E20               	movwf	XF_init@i^0,c
  3749  00598E                     l10460:
  3750                           
  3751                           ;xf/xf.c: 29:     {;xf/xf.c: 30:         theXF.eventQueue[i] = NULLEVENT;
  3752  00598E  0ECD               	movlw	low (_theXF+24)
  3753  005990  2420               	addwf	XF_init@i^0,w,c
  3754  005992  6ED9               	movwf	fsr2l,c
  3755  005994  0E00               	movlw	high (_theXF+24)
  3756  005996  2021               	addwfc	(XF_init@i+1)^0,w,c
  3757  005998  6EDA               	movwf	fsr2h,c
  3758  00599A  0E00               	movlw	0
  3759  00599C  6EDF               	movwf	indf2,c
  3760  00599E                     
  3761                           ;xf/xf.c: 31:     }
  3762  00599E  4A20               	infsnz	XF_init@i^0,f,c
  3763  0059A0  2A21               	incf	(XF_init@i+1)^0,f,c
  3764  0059A2  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3765  0059A4  EFDD  F02C         	goto	u8141
  3766  0059A8  5021               	movf	(XF_init@i+1)^0,w,c
  3767  0059AA  E109               	bnz	u8140
  3768  0059AC  0E0C               	movlw	12
  3769  0059AE  5C20               	subwf	XF_init@i^0,w,c
  3770  0059B0  A0D8               	btfss	status,0,c
  3771  0059B2  EFDD  F02C         	goto	u8141
  3772  0059B6  EFDF  F02C         	goto	u8140
  3773  0059BA                     u8141:
  3774  0059BA  EFC7  F02C         	goto	l10460
  3775  0059BE                     u8140:
  3776  0059BE                     
  3777                           ;xf/xf.c: 33:     for (i=0; i<8; i++)
  3778  0059BE  0E00               	movlw	0
  3779  0059C0  6E21               	movwf	(XF_init@i+1)^0,c
  3780  0059C2  0E00               	movlw	0
  3781  0059C4  6E20               	movwf	XF_init@i^0,c
  3782  0059C6                     l10472:
  3783                           
  3784                           ;xf/xf.c: 34:     {;xf/xf.c: 35:         theXF.timerList[i].tm = 0;
  3785  0059C6  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3786  0059CA  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3787  0059CE  0E00               	movlw	0
  3788  0059D0  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3789  0059D2  0E03               	movlw	3
  3790  0059D4  6E1C               	movwf	___wmul@multiplicand^0,c
  3791  0059D6  EC05  F033         	call	___wmul	;wreg free
  3792  0059DA  0EB5               	movlw	low _theXF
  3793  0059DC  241A               	addwf	?___wmul^0,w,c
  3794  0059DE  6ED9               	movwf	fsr2l,c
  3795  0059E0  0E00               	movlw	high _theXF
  3796  0059E2  201B               	addwfc	(?___wmul+1)^0,w,c
  3797  0059E4  6EDA               	movwf	fsr2h,c
  3798  0059E6  0E00               	movlw	0
  3799  0059E8  6EDE               	movwf	postinc2,c
  3800  0059EA  0E00               	movlw	0
  3801  0059EC  6EDD               	movwf	postdec2,c
  3802                           
  3803                           ;xf/xf.c: 36:         theXF.timerList[i].ev = NULLEVENT;
  3804  0059EE  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3805  0059F2  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3806  0059F6  0E00               	movlw	0
  3807  0059F8  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3808  0059FA  0E03               	movlw	3
  3809  0059FC  6E1C               	movwf	___wmul@multiplicand^0,c
  3810  0059FE  EC05  F033         	call	___wmul	;wreg free
  3811  005A02  0EB7               	movlw	low (_theXF+2)
  3812  005A04  241A               	addwf	?___wmul^0,w,c
  3813  005A06  6ED9               	movwf	fsr2l,c
  3814  005A08  0E00               	movlw	high (_theXF+2)
  3815  005A0A  201B               	addwfc	(?___wmul+1)^0,w,c
  3816  005A0C  6EDA               	movwf	fsr2h,c
  3817  005A0E  0E00               	movlw	0
  3818  005A10  6EDF               	movwf	indf2,c
  3819  005A12                     
  3820                           ;xf/xf.c: 37:     }
  3821  005A12  4A20               	infsnz	XF_init@i^0,f,c
  3822  005A14  2A21               	incf	(XF_init@i+1)^0,f,c
  3823  005A16  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3824  005A18  EF17  F02D         	goto	u8151
  3825  005A1C  5021               	movf	(XF_init@i+1)^0,w,c
  3826  005A1E  E109               	bnz	u8150
  3827  005A20  0E08               	movlw	8
  3828  005A22  5C20               	subwf	XF_init@i^0,w,c
  3829  005A24  A0D8               	btfss	status,0,c
  3830  005A26  EF17  F02D         	goto	u8151
  3831  005A2A  EF19  F02D         	goto	u8150
  3832  005A2E                     u8151:
  3833  005A2E  EFE3  F02C         	goto	l10472
  3834  005A32                     u8150:
  3835  005A32                     
  3836                           ;xf/xf.c: 38:     theXF.in = 0;
  3837  005A32  0E00               	movlw	0
  3838  005A34  0100               	movlb	0	; () banked
  3839  005A36  6FD9               	movwf	(_theXF+36)& (0+255),b
  3840                           
  3841                           ;xf/xf.c: 39:     theXF.out = 0;
  3842  005A38  0E00               	movlw	0
  3843  005A3A  6FDA               	movwf	(_theXF+37)& (0+255),b
  3844  005A3C                     
  3845                           ; BSR set to: 0
  3846  005A3C  0012               	return		;funcret
  3847  005A3E                     __end_of_XF_init:
  3848                           	callstack 0
  3849                           
  3850 ;; *************** function _LCD_Init *****************
  3851 ;; Defined at:
  3852 ;;		line 20 in file "libraries/lcd_highlevel.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  i               1   23[COMRAM] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3866 ;;      Params:         0       0       0       0       0       0       0
  3867 ;;      Locals:         1       0       0       0       0       0       0
  3868 ;;      Temps:          1       0       0       0       0       0       0
  3869 ;;      Totals:         2       0       0       0       0       0       0
  3870 ;;Total ram usage:        2 bytes
  3871 ;; Hardware stack levels used: 1
  3872 ;; Hardware stack levels required when called: 5
  3873 ;; This function calls:
  3874 ;;		_LCD_Lowlevel_Init
  3875 ;; This function is called by:
  3876 ;;		_Factory_init
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text8
  3881  0033C2                     __ptext8:
  3882                           	callstack 0
  3883  0033C2                     _LCD_Init:
  3884                           	callstack 24
  3885  0033C2                     
  3886                           ;libraries/lcd_highlevel.c: 22:   uint8_t i;;libraries/lcd_highlevel.c: 86:   LCD_Lowlev
      +                          el_Init();
  3887  0033C2  EC7F  F02E         	call	_LCD_Lowlevel_Init	;wreg free
  3888  0033C6                     
  3889                           ;libraries/lcd_highlevel.c: 87:   PORTA = 0x11; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3890  0033C6  0E11               	movlw	17
  3891  0033C8  6E80               	movwf	128,c	;volatile
  3892  0033CA  988B               	bcf	3979,4,c	;volatile
  3893  0033CC  968B               	bcf	3979,3,c	;volatile
  3894  0033CE  868B               	bsf	3979,3,c	;volatile
  3895  0033D0  888B               	bsf	3979,4,c	;volatile
  3896  0033D2                     
  3897                           ;libraries/lcd_highlevel.c: 88:   for(i=0;i<10;i++)
  3898  0033D2  0E00               	movlw	0
  3899  0033D4  6E18               	movwf	LCD_Init@i^0,c
  3900  0033D6                     l4138:
  3901                           
  3902                           ;libraries/lcd_highlevel.c: 89:   {;libraries/lcd_highlevel.c: 90:     _delay((unsigned 
      +                          long)((10)*(64000000L/4000.0)));
  3903  0033D6  0ED0               	movlw	208
  3904  0033D8  6E17               	movwf	??_LCD_Init^0,c
  3905  0033DA  0ECA               	movlw	202
  3906  0033DC                     u8357:
  3907  0033DC  2EE8               	decfsz	wreg,f,c
  3908  0033DE  D7FE               	bra	u8357
  3909  0033E0  2E17               	decfsz	??_LCD_Init^0,f,c
  3910  0033E2  D7FC               	bra	u8357
  3911  0033E4                     
  3912                           ;libraries/lcd_highlevel.c: 91:   }
  3913  0033E4  2A18               	incf	LCD_Init@i^0,f,c
  3914  0033E6  0E09               	movlw	9
  3915  0033E8  6418               	cpfsgt	LCD_Init@i^0,c
  3916  0033EA  EFF9  F019         	goto	u2551
  3917  0033EE  EFFB  F019         	goto	u2550
  3918  0033F2                     u2551:
  3919  0033F2  EFEB  F019         	goto	l4138
  3920  0033F6                     u2550:
  3921  0033F6                     
  3922                           ;libraries/lcd_highlevel.c: 92:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3923  0033F6  0E36               	movlw	54
  3924  0033F8  6E80               	movwf	128,c	;volatile
  3925  0033FA  988B               	bcf	3979,4,c	;volatile
  3926  0033FC  968B               	bcf	3979,3,c	;volatile
  3927  0033FE  868B               	bsf	3979,3,c	;volatile
  3928  003400  888B               	bsf	3979,4,c	;volatile
  3929                           
  3930                           ;libraries/lcd_highlevel.c: 93:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
  3931  003402  0E00               	movlw	0
  3932  003404  6E80               	movwf	128,c	;volatile
  3933  003406  968B               	bcf	3979,3,c	;volatile
  3934  003408  868B               	bsf	3979,3,c	;volatile
  3935                           
  3936                           ;libraries/lcd_highlevel.c: 94:   PORTA = 0x3A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3937  00340A  0E3A               	movlw	58
  3938  00340C  6E80               	movwf	128,c	;volatile
  3939  00340E  988B               	bcf	3979,4,c	;volatile
  3940  003410  968B               	bcf	3979,3,c	;volatile
  3941  003412  868B               	bsf	3979,3,c	;volatile
  3942  003414  888B               	bsf	3979,4,c	;volatile
  3943                           
  3944                           ;libraries/lcd_highlevel.c: 95:   PORTA = 0x55; LATC3 = 0; LATC3 = 1;;
  3945  003416  0E55               	movlw	85
  3946  003418  6E80               	movwf	128,c	;volatile
  3947  00341A  968B               	bcf	3979,3,c	;volatile
  3948  00341C  868B               	bsf	3979,3,c	;volatile
  3949                           
  3950                           ;libraries/lcd_highlevel.c: 96:   PORTA = 0xB2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3951  00341E  0EB2               	movlw	178
  3952  003420  6E80               	movwf	128,c	;volatile
  3953  003422  988B               	bcf	3979,4,c	;volatile
  3954  003424  968B               	bcf	3979,3,c	;volatile
  3955  003426  868B               	bsf	3979,3,c	;volatile
  3956  003428  888B               	bsf	3979,4,c	;volatile
  3957                           
  3958                           ;libraries/lcd_highlevel.c: 97:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3959  00342A  0E0C               	movlw	12
  3960  00342C  6E80               	movwf	128,c	;volatile
  3961  00342E  968B               	bcf	3979,3,c	;volatile
  3962  003430  868B               	bsf	3979,3,c	;volatile
  3963                           
  3964                           ;libraries/lcd_highlevel.c: 98:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3965  003432  0E0C               	movlw	12
  3966  003434  6E80               	movwf	128,c	;volatile
  3967  003436  968B               	bcf	3979,3,c	;volatile
  3968  003438  868B               	bsf	3979,3,c	;volatile
  3969                           
  3970                           ;libraries/lcd_highlevel.c: 99:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3971  00343A  0E33               	movlw	51
  3972  00343C  6E80               	movwf	128,c	;volatile
  3973  00343E  968B               	bcf	3979,3,c	;volatile
  3974  003440  868B               	bsf	3979,3,c	;volatile
  3975                           
  3976                           ;libraries/lcd_highlevel.c: 100:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3977  003442  0E33               	movlw	51
  3978  003444  6E80               	movwf	128,c	;volatile
  3979  003446  968B               	bcf	3979,3,c	;volatile
  3980  003448  868B               	bsf	3979,3,c	;volatile
  3981                           
  3982                           ;libraries/lcd_highlevel.c: 101:   PORTA = 0xB7; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3983  00344A  0EB7               	movlw	183
  3984  00344C  6E80               	movwf	128,c	;volatile
  3985  00344E  988B               	bcf	3979,4,c	;volatile
  3986  003450  968B               	bcf	3979,3,c	;volatile
  3987  003452  868B               	bsf	3979,3,c	;volatile
  3988  003454  888B               	bsf	3979,4,c	;volatile
  3989                           
  3990                           ;libraries/lcd_highlevel.c: 102:   PORTA = 0x35; LATC3 = 0; LATC3 = 1;;
  3991  003456  0E35               	movlw	53
  3992  003458  6E80               	movwf	128,c	;volatile
  3993  00345A  968B               	bcf	3979,3,c	;volatile
  3994  00345C  868B               	bsf	3979,3,c	;volatile
  3995                           
  3996                           ;libraries/lcd_highlevel.c: 103:   PORTA = 0xBB; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3997  00345E  0EBB               	movlw	187
  3998  003460  6E80               	movwf	128,c	;volatile
  3999  003462  988B               	bcf	3979,4,c	;volatile
  4000  003464  968B               	bcf	3979,3,c	;volatile
  4001  003466  868B               	bsf	3979,3,c	;volatile
  4002  003468  888B               	bsf	3979,4,c	;volatile
  4003                           
  4004                           ;libraries/lcd_highlevel.c: 104:   PORTA = 0x2B; LATC3 = 0; LATC3 = 1;;
  4005  00346A  0E2B               	movlw	43
  4006  00346C  6E80               	movwf	128,c	;volatile
  4007  00346E  968B               	bcf	3979,3,c	;volatile
  4008  003470  868B               	bsf	3979,3,c	;volatile
  4009                           
  4010                           ;libraries/lcd_highlevel.c: 105:   PORTA = 0xC0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4011  003472  0EC0               	movlw	192
  4012  003474  6E80               	movwf	128,c	;volatile
  4013  003476  988B               	bcf	3979,4,c	;volatile
  4014  003478  968B               	bcf	3979,3,c	;volatile
  4015  00347A  868B               	bsf	3979,3,c	;volatile
  4016  00347C  888B               	bsf	3979,4,c	;volatile
  4017                           
  4018                           ;libraries/lcd_highlevel.c: 106:   PORTA = 0x2C; LATC3 = 0; LATC3 = 1;;
  4019  00347E  0E2C               	movlw	44
  4020  003480  6E80               	movwf	128,c	;volatile
  4021  003482  968B               	bcf	3979,3,c	;volatile
  4022  003484  868B               	bsf	3979,3,c	;volatile
  4023                           
  4024                           ;libraries/lcd_highlevel.c: 107:   PORTA = 0xC2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4025  003486  0EC2               	movlw	194
  4026  003488  6E80               	movwf	128,c	;volatile
  4027  00348A  988B               	bcf	3979,4,c	;volatile
  4028  00348C  968B               	bcf	3979,3,c	;volatile
  4029  00348E  868B               	bsf	3979,3,c	;volatile
  4030  003490  888B               	bsf	3979,4,c	;volatile
  4031                           
  4032                           ;libraries/lcd_highlevel.c: 108:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4033  003492  0E01               	movlw	1
  4034  003494  6E80               	movwf	128,c	;volatile
  4035  003496  968B               	bcf	3979,3,c	;volatile
  4036  003498  868B               	bsf	3979,3,c	;volatile
  4037  00349A                     
  4038                           ;libraries/lcd_highlevel.c: 109:   PORTA = 0xFF; LATC3 = 0; LATC3 = 1;;
  4039  00349A  6880               	setf	128,c	;volatile
  4040  00349C  968B               	bcf	3979,3,c	;volatile
  4041  00349E  868B               	bsf	3979,3,c	;volatile
  4042                           
  4043                           ;libraries/lcd_highlevel.c: 110:   PORTA = 0XC3; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4044  0034A0  0EC3               	movlw	195
  4045  0034A2  6E80               	movwf	128,c	;volatile
  4046  0034A4  988B               	bcf	3979,4,c	;volatile
  4047  0034A6  968B               	bcf	3979,3,c	;volatile
  4048  0034A8  868B               	bsf	3979,3,c	;volatile
  4049  0034AA  888B               	bsf	3979,4,c	;volatile
  4050                           
  4051                           ;libraries/lcd_highlevel.c: 111:   PORTA = 0x11; LATC3 = 0; LATC3 = 1;;
  4052  0034AC  0E11               	movlw	17
  4053  0034AE  6E80               	movwf	128,c	;volatile
  4054  0034B0  968B               	bcf	3979,3,c	;volatile
  4055  0034B2  868B               	bsf	3979,3,c	;volatile
  4056                           
  4057                           ;libraries/lcd_highlevel.c: 112:   PORTA = 0xC4; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4058  0034B4  0EC4               	movlw	196
  4059  0034B6  6E80               	movwf	128,c	;volatile
  4060  0034B8  988B               	bcf	3979,4,c	;volatile
  4061  0034BA  968B               	bcf	3979,3,c	;volatile
  4062  0034BC  868B               	bsf	3979,3,c	;volatile
  4063  0034BE  888B               	bsf	3979,4,c	;volatile
  4064                           
  4065                           ;libraries/lcd_highlevel.c: 113:   PORTA = 0x20; LATC3 = 0; LATC3 = 1;;
  4066  0034C0  0E20               	movlw	32
  4067  0034C2  6E80               	movwf	128,c	;volatile
  4068  0034C4  968B               	bcf	3979,3,c	;volatile
  4069  0034C6  868B               	bsf	3979,3,c	;volatile
  4070                           
  4071                           ;libraries/lcd_highlevel.c: 114:   PORTA = 0xC6; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4072  0034C8  0EC6               	movlw	198
  4073  0034CA  6E80               	movwf	128,c	;volatile
  4074  0034CC  988B               	bcf	3979,4,c	;volatile
  4075  0034CE  968B               	bcf	3979,3,c	;volatile
  4076  0034D0  868B               	bsf	3979,3,c	;volatile
  4077  0034D2  888B               	bsf	3979,4,c	;volatile
  4078                           
  4079                           ;libraries/lcd_highlevel.c: 115:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4080  0034D4  0E09               	movlw	9
  4081  0034D6  6E80               	movwf	128,c	;volatile
  4082  0034D8  968B               	bcf	3979,3,c	;volatile
  4083  0034DA  868B               	bsf	3979,3,c	;volatile
  4084                           
  4085                           ;libraries/lcd_highlevel.c: 116:   PORTA = 0xD0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4086  0034DC  0ED0               	movlw	208
  4087  0034DE  6E80               	movwf	128,c	;volatile
  4088  0034E0  988B               	bcf	3979,4,c	;volatile
  4089  0034E2  968B               	bcf	3979,3,c	;volatile
  4090  0034E4  868B               	bsf	3979,3,c	;volatile
  4091  0034E6  888B               	bsf	3979,4,c	;volatile
  4092                           
  4093                           ;libraries/lcd_highlevel.c: 117:   PORTA = 0xA4; LATC3 = 0; LATC3 = 1;;
  4094  0034E8  0EA4               	movlw	164
  4095  0034EA  6E80               	movwf	128,c	;volatile
  4096  0034EC  968B               	bcf	3979,3,c	;volatile
  4097  0034EE  868B               	bsf	3979,3,c	;volatile
  4098                           
  4099                           ;libraries/lcd_highlevel.c: 118:   PORTA = 0xA1; LATC3 = 0; LATC3 = 1;;
  4100  0034F0  0EA1               	movlw	161
  4101  0034F2  6E80               	movwf	128,c	;volatile
  4102  0034F4  968B               	bcf	3979,3,c	;volatile
  4103  0034F6  868B               	bsf	3979,3,c	;volatile
  4104                           
  4105                           ;libraries/lcd_highlevel.c: 119:   PORTA = 0xE0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4106  0034F8  0EE0               	movlw	224
  4107  0034FA  6E80               	movwf	128,c	;volatile
  4108  0034FC  988B               	bcf	3979,4,c	;volatile
  4109  0034FE  968B               	bcf	3979,3,c	;volatile
  4110  003500  868B               	bsf	3979,3,c	;volatile
  4111  003502  888B               	bsf	3979,4,c	;volatile
  4112                           
  4113                           ;libraries/lcd_highlevel.c: 120:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4114  003504  0ED0               	movlw	208
  4115  003506  6E80               	movwf	128,c	;volatile
  4116  003508  968B               	bcf	3979,3,c	;volatile
  4117  00350A  868B               	bsf	3979,3,c	;volatile
  4118                           
  4119                           ;libraries/lcd_highlevel.c: 121:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4120  00350C  0E00               	movlw	0
  4121  00350E  6E80               	movwf	128,c	;volatile
  4122  003510  968B               	bcf	3979,3,c	;volatile
  4123  003512  868B               	bsf	3979,3,c	;volatile
  4124                           
  4125                           ;libraries/lcd_highlevel.c: 122:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4126  003514  0E05               	movlw	5
  4127  003516  6E80               	movwf	128,c	;volatile
  4128  003518  968B               	bcf	3979,3,c	;volatile
  4129  00351A  868B               	bsf	3979,3,c	;volatile
  4130                           
  4131                           ;libraries/lcd_highlevel.c: 123:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4132  00351C  0E0E               	movlw	14
  4133  00351E  6E80               	movwf	128,c	;volatile
  4134  003520  968B               	bcf	3979,3,c	;volatile
  4135  003522  868B               	bsf	3979,3,c	;volatile
  4136                           
  4137                           ;libraries/lcd_highlevel.c: 124:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4138  003524  0E15               	movlw	21
  4139  003526  6E80               	movwf	128,c	;volatile
  4140  003528  968B               	bcf	3979,3,c	;volatile
  4141  00352A  868B               	bsf	3979,3,c	;volatile
  4142                           
  4143                           ;libraries/lcd_highlevel.c: 125:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4144  00352C  0E0D               	movlw	13
  4145  00352E  6E80               	movwf	128,c	;volatile
  4146  003530  968B               	bcf	3979,3,c	;volatile
  4147  003532  868B               	bsf	3979,3,c	;volatile
  4148                           
  4149                           ;libraries/lcd_highlevel.c: 126:   PORTA = 0x37; LATC3 = 0; LATC3 = 1;;
  4150  003534  0E37               	movlw	55
  4151  003536  6E80               	movwf	128,c	;volatile
  4152  003538  968B               	bcf	3979,3,c	;volatile
  4153  00353A  868B               	bsf	3979,3,c	;volatile
  4154                           
  4155                           ;libraries/lcd_highlevel.c: 127:   PORTA = 0x43; LATC3 = 0; LATC3 = 1;;
  4156  00353C  0E43               	movlw	67
  4157  00353E  6E80               	movwf	128,c	;volatile
  4158  003540  968B               	bcf	3979,3,c	;volatile
  4159  003542  868B               	bsf	3979,3,c	;volatile
  4160                           
  4161                           ;libraries/lcd_highlevel.c: 128:   PORTA = 0x47; LATC3 = 0; LATC3 = 1;;
  4162  003544  0E47               	movlw	71
  4163  003546  6E80               	movwf	128,c	;volatile
  4164  003548  968B               	bcf	3979,3,c	;volatile
  4165  00354A  868B               	bsf	3979,3,c	;volatile
  4166                           
  4167                           ;libraries/lcd_highlevel.c: 129:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4168  00354C  0E09               	movlw	9
  4169  00354E  6E80               	movwf	128,c	;volatile
  4170  003550  968B               	bcf	3979,3,c	;volatile
  4171  003552  868B               	bsf	3979,3,c	;volatile
  4172                           
  4173                           ;libraries/lcd_highlevel.c: 130:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4174  003554  0E15               	movlw	21
  4175  003556  6E80               	movwf	128,c	;volatile
  4176  003558  968B               	bcf	3979,3,c	;volatile
  4177  00355A  868B               	bsf	3979,3,c	;volatile
  4178                           
  4179                           ;libraries/lcd_highlevel.c: 131:   PORTA = 0x12; LATC3 = 0; LATC3 = 1;;
  4180  00355C  0E12               	movlw	18
  4181  00355E  6E80               	movwf	128,c	;volatile
  4182  003560  968B               	bcf	3979,3,c	;volatile
  4183  003562  868B               	bsf	3979,3,c	;volatile
  4184                           
  4185                           ;libraries/lcd_highlevel.c: 132:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4186  003564  0E16               	movlw	22
  4187  003566  6E80               	movwf	128,c	;volatile
  4188  003568  968B               	bcf	3979,3,c	;volatile
  4189  00356A  868B               	bsf	3979,3,c	;volatile
  4190                           
  4191                           ;libraries/lcd_highlevel.c: 133:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4192  00356C  0E19               	movlw	25
  4193  00356E  6E80               	movwf	128,c	;volatile
  4194  003570  968B               	bcf	3979,3,c	;volatile
  4195  003572  868B               	bsf	3979,3,c	;volatile
  4196                           
  4197                           ;libraries/lcd_highlevel.c: 134:   PORTA = 0xE1; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4198  003574  0EE1               	movlw	225
  4199  003576  6E80               	movwf	128,c	;volatile
  4200  003578  988B               	bcf	3979,4,c	;volatile
  4201  00357A  968B               	bcf	3979,3,c	;volatile
  4202  00357C  868B               	bsf	3979,3,c	;volatile
  4203  00357E  888B               	bsf	3979,4,c	;volatile
  4204                           
  4205                           ;libraries/lcd_highlevel.c: 135:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4206  003580  0ED0               	movlw	208
  4207  003582  6E80               	movwf	128,c	;volatile
  4208  003584  968B               	bcf	3979,3,c	;volatile
  4209  003586  868B               	bsf	3979,3,c	;volatile
  4210                           
  4211                           ;libraries/lcd_highlevel.c: 136:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4212  003588  0E00               	movlw	0
  4213  00358A  6E80               	movwf	128,c	;volatile
  4214  00358C  968B               	bcf	3979,3,c	;volatile
  4215  00358E  868B               	bsf	3979,3,c	;volatile
  4216                           
  4217                           ;libraries/lcd_highlevel.c: 137:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4218  003590  0E05               	movlw	5
  4219  003592  6E80               	movwf	128,c	;volatile
  4220  003594  968B               	bcf	3979,3,c	;volatile
  4221  003596  868B               	bsf	3979,3,c	;volatile
  4222                           
  4223                           ;libraries/lcd_highlevel.c: 138:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4224  003598  0E0D               	movlw	13
  4225  00359A  6E80               	movwf	128,c	;volatile
  4226  00359C  968B               	bcf	3979,3,c	;volatile
  4227  00359E  868B               	bsf	3979,3,c	;volatile
  4228                           
  4229                           ;libraries/lcd_highlevel.c: 139:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  4230  0035A0  0E0C               	movlw	12
  4231  0035A2  6E80               	movwf	128,c	;volatile
  4232  0035A4  968B               	bcf	3979,3,c	;volatile
  4233  0035A6  868B               	bsf	3979,3,c	;volatile
  4234                           
  4235                           ;libraries/lcd_highlevel.c: 140:   PORTA = 0x06; LATC3 = 0; LATC3 = 1;;
  4236  0035A8  0E06               	movlw	6
  4237  0035AA  6E80               	movwf	128,c	;volatile
  4238  0035AC  968B               	bcf	3979,3,c	;volatile
  4239  0035AE  868B               	bsf	3979,3,c	;volatile
  4240                           
  4241                           ;libraries/lcd_highlevel.c: 141:   PORTA = 0x2D; LATC3 = 0; LATC3 = 1;;
  4242  0035B0  0E2D               	movlw	45
  4243  0035B2  6E80               	movwf	128,c	;volatile
  4244  0035B4  968B               	bcf	3979,3,c	;volatile
  4245  0035B6  868B               	bsf	3979,3,c	;volatile
  4246                           
  4247                           ;libraries/lcd_highlevel.c: 142:   PORTA = 0x44; LATC3 = 0; LATC3 = 1;;
  4248  0035B8  0E44               	movlw	68
  4249  0035BA  6E80               	movwf	128,c	;volatile
  4250  0035BC  968B               	bcf	3979,3,c	;volatile
  4251  0035BE  868B               	bsf	3979,3,c	;volatile
  4252                           
  4253                           ;libraries/lcd_highlevel.c: 143:   PORTA = 0x40; LATC3 = 0; LATC3 = 1;;
  4254  0035C0  0E40               	movlw	64
  4255  0035C2  6E80               	movwf	128,c	;volatile
  4256  0035C4  968B               	bcf	3979,3,c	;volatile
  4257  0035C6  868B               	bsf	3979,3,c	;volatile
  4258                           
  4259                           ;libraries/lcd_highlevel.c: 144:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4260  0035C8  0E0E               	movlw	14
  4261  0035CA  6E80               	movwf	128,c	;volatile
  4262  0035CC  968B               	bcf	3979,3,c	;volatile
  4263  0035CE  868B               	bsf	3979,3,c	;volatile
  4264                           
  4265                           ;libraries/lcd_highlevel.c: 145:   PORTA = 0x1C; LATC3 = 0; LATC3 = 1;;
  4266  0035D0  0E1C               	movlw	28
  4267  0035D2  6E80               	movwf	128,c	;volatile
  4268  0035D4  968B               	bcf	3979,3,c	;volatile
  4269  0035D6  868B               	bsf	3979,3,c	;volatile
  4270                           
  4271                           ;libraries/lcd_highlevel.c: 146:   PORTA = 0x18; LATC3 = 0; LATC3 = 1;;
  4272  0035D8  0E18               	movlw	24
  4273  0035DA  6E80               	movwf	128,c	;volatile
  4274  0035DC  968B               	bcf	3979,3,c	;volatile
  4275  0035DE  868B               	bsf	3979,3,c	;volatile
  4276                           
  4277                           ;libraries/lcd_highlevel.c: 147:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4278  0035E0  0E16               	movlw	22
  4279  0035E2  6E80               	movwf	128,c	;volatile
  4280  0035E4  968B               	bcf	3979,3,c	;volatile
  4281  0035E6  868B               	bsf	3979,3,c	;volatile
  4282                           
  4283                           ;libraries/lcd_highlevel.c: 148:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4284  0035E8  0E19               	movlw	25
  4285  0035EA  6E80               	movwf	128,c	;volatile
  4286  0035EC  968B               	bcf	3979,3,c	;volatile
  4287  0035EE  868B               	bsf	3979,3,c	;volatile
  4288                           
  4289                           ;libraries/lcd_highlevel.c: 149:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4290  0035F0  0E2A               	movlw	42
  4291  0035F2  6E80               	movwf	128,c	;volatile
  4292  0035F4  988B               	bcf	3979,4,c	;volatile
  4293  0035F6  968B               	bcf	3979,3,c	;volatile
  4294  0035F8  868B               	bsf	3979,3,c	;volatile
  4295  0035FA  888B               	bsf	3979,4,c	;volatile
  4296                           
  4297                           ;libraries/lcd_highlevel.c: 150:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4298  0035FC  0E00               	movlw	0
  4299  0035FE  6E80               	movwf	128,c	;volatile
  4300  003600  968B               	bcf	3979,3,c	;volatile
  4301  003602  868B               	bsf	3979,3,c	;volatile
  4302                           
  4303                           ;libraries/lcd_highlevel.c: 151:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4304  003604  0E00               	movlw	0
  4305  003606  6E80               	movwf	128,c	;volatile
  4306  003608  968B               	bcf	3979,3,c	;volatile
  4307  00360A  868B               	bsf	3979,3,c	;volatile
  4308                           
  4309                           ;libraries/lcd_highlevel.c: 152:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4310  00360C  0E00               	movlw	0
  4311  00360E  6E80               	movwf	128,c	;volatile
  4312  003610  968B               	bcf	3979,3,c	;volatile
  4313  003612  868B               	bsf	3979,3,c	;volatile
  4314                           
  4315                           ;libraries/lcd_highlevel.c: 153:   PORTA = 0xEF; LATC3 = 0; LATC3 = 1;;
  4316  003614  0EEF               	movlw	239
  4317  003616  6E80               	movwf	128,c	;volatile
  4318  003618  968B               	bcf	3979,3,c	;volatile
  4319  00361A  868B               	bsf	3979,3,c	;volatile
  4320                           
  4321                           ;libraries/lcd_highlevel.c: 154:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4322  00361C  0E2B               	movlw	43
  4323  00361E  6E80               	movwf	128,c	;volatile
  4324  003620  988B               	bcf	3979,4,c	;volatile
  4325  003622  968B               	bcf	3979,3,c	;volatile
  4326  003624  868B               	bsf	3979,3,c	;volatile
  4327  003626  888B               	bsf	3979,4,c	;volatile
  4328                           
  4329                           ;libraries/lcd_highlevel.c: 155:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4330  003628  0E00               	movlw	0
  4331  00362A  6E80               	movwf	128,c	;volatile
  4332  00362C  968B               	bcf	3979,3,c	;volatile
  4333  00362E  868B               	bsf	3979,3,c	;volatile
  4334                           
  4335                           ;libraries/lcd_highlevel.c: 156:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4336  003630  0E00               	movlw	0
  4337  003632  6E80               	movwf	128,c	;volatile
  4338  003634  968B               	bcf	3979,3,c	;volatile
  4339  003636  868B               	bsf	3979,3,c	;volatile
  4340                           
  4341                           ;libraries/lcd_highlevel.c: 157:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4342  003638  0E01               	movlw	1
  4343  00363A  6E80               	movwf	128,c	;volatile
  4344  00363C  968B               	bcf	3979,3,c	;volatile
  4345  00363E  868B               	bsf	3979,3,c	;volatile
  4346                           
  4347                           ;libraries/lcd_highlevel.c: 158:   PORTA = 0x3F; LATC3 = 0; LATC3 = 1;;
  4348  003640  0E3F               	movlw	63
  4349  003642  6E80               	movwf	128,c	;volatile
  4350  003644  968B               	bcf	3979,3,c	;volatile
  4351  003646  868B               	bsf	3979,3,c	;volatile
  4352                           
  4353                           ;libraries/lcd_highlevel.c: 159:   PORTA = 0x26; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4354  003648  0E26               	movlw	38
  4355  00364A  6E80               	movwf	128,c	;volatile
  4356  00364C  988B               	bcf	3979,4,c	;volatile
  4357  00364E  968B               	bcf	3979,3,c	;volatile
  4358  003650  868B               	bsf	3979,3,c	;volatile
  4359  003652  888B               	bsf	3979,4,c	;volatile
  4360                           
  4361                           ;libraries/lcd_highlevel.c: 160:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4362  003654  0E01               	movlw	1
  4363  003656  6E80               	movwf	128,c	;volatile
  4364  003658  968B               	bcf	3979,3,c	;volatile
  4365  00365A  868B               	bsf	3979,3,c	;volatile
  4366                           
  4367                           ;libraries/lcd_highlevel.c: 161:   PORTA = 0x29; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4368  00365C  0E29               	movlw	41
  4369  00365E  6E80               	movwf	128,c	;volatile
  4370  003660  988B               	bcf	3979,4,c	;volatile
  4371  003662  968B               	bcf	3979,3,c	;volatile
  4372  003664  868B               	bsf	3979,3,c	;volatile
  4373  003666  888B               	bsf	3979,4,c	;volatile
  4374  003668  0012               	return		;funcret
  4375  00366A                     __end_of_LCD_Init:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _LCD_Lowlevel_Init *****************
  4379 ;; Defined at:
  4380 ;;		line 17 in file "libraries/lcd_lowlevel.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  i               4   18[COMRAM] unsigned long 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4394 ;;      Params:         0       0       0       0       0       0       0
  4395 ;;      Locals:         4       0       0       0       0       0       0
  4396 ;;      Temps:          1       0       0       0       0       0       0
  4397 ;;      Totals:         5       0       0       0       0       0       0
  4398 ;;Total ram usage:        5 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; Hardware stack levels required when called: 4
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_LCD_Init
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text9
  4409  005CFE                     __ptext9:
  4410                           	callstack 0
  4411  005CFE                     _LCD_Lowlevel_Init:
  4412                           	callstack 24
  4413  005CFE                     
  4414                           ;libraries/lcd_lowlevel.c: 19:   uint32_t i;;libraries/lcd_lowlevel.c: 20:   TRISC5 = 0;
  4415  005CFE  9A94               	bcf	3988,5,c	;volatile
  4416                           
  4417                           ;libraries/lcd_lowlevel.c: 21:   TRISC2 = 0;
  4418  005D00  9494               	bcf	3988,2,c	;volatile
  4419                           
  4420                           ;libraries/lcd_lowlevel.c: 22:   TRISC3 = 0;
  4421  005D02  9694               	bcf	3988,3,c	;volatile
  4422                           
  4423                           ;libraries/lcd_lowlevel.c: 23:   TRISC4 = 0;
  4424  005D04  9894               	bcf	3988,4,c	;volatile
  4425  005D06                     
  4426                           ;libraries/lcd_lowlevel.c: 25:   TRISA = 0x00;
  4427  005D06  0E00               	movlw	0
  4428  005D08  6E92               	movwf	146,c	;volatile
  4429  005D0A                     
  4430                           ;libraries/lcd_lowlevel.c: 28:  LATC5 = 0;
  4431  005D0A  9A8B               	bcf	3979,5,c	;volatile
  4432  005D0C                     
  4433                           ;libraries/lcd_lowlevel.c: 29:  LATC2 = 1;
  4434  005D0C  848B               	bsf	3979,2,c	;volatile
  4435  005D0E                     
  4436                           ;libraries/lcd_lowlevel.c: 30:  LATC3 = 1;
  4437  005D0E  868B               	bsf	3979,3,c	;volatile
  4438  005D10                     
  4439                           ;libraries/lcd_lowlevel.c: 31:  LATC4 = 1;
  4440  005D10  888B               	bsf	3979,4,c	;volatile
  4441                           
  4442                           ;libraries/lcd_lowlevel.c: 33:   for(i=0;i<12;i++)
  4443  005D12  0E00               	movlw	0
  4444  005D14  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4445  005D16  0E00               	movlw	0
  4446  005D18  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4447  005D1A  0E00               	movlw	0
  4448  005D1C  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4449  005D1E  0E00               	movlw	0
  4450  005D20  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4451  005D22                     l3988:
  4452                           
  4453                           ;libraries/lcd_lowlevel.c: 34:   {;libraries/lcd_lowlevel.c: 35:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4454  005D22  0ED0               	movlw	208
  4455  005D24  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4456  005D26  0ECA               	movlw	202
  4457  005D28                     u8367:
  4458  005D28  2EE8               	decfsz	wreg,f,c
  4459  005D2A  D7FE               	bra	u8367
  4460  005D2C  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4461  005D2E  D7FC               	bra	u8367
  4462  005D30                     
  4463                           ;libraries/lcd_lowlevel.c: 36:   }
  4464  005D30  0E01               	movlw	1
  4465  005D32  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4466  005D34  0E00               	movlw	0
  4467  005D36  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4468  005D38  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4469  005D3A  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4470  005D3C  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4471  005D3E  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4472  005D40  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4473  005D42  E109               	bnz	u2400
  4474  005D44  0E0C               	movlw	12
  4475  005D46  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4476  005D48  A0D8               	btfss	status,0,c
  4477  005D4A  EFA9  F02E         	goto	u2401
  4478  005D4E  EFAB  F02E         	goto	u2400
  4479  005D52                     u2401:
  4480  005D52  EF91  F02E         	goto	l3988
  4481  005D56                     u2400:
  4482  005D56                     
  4483                           ;libraries/lcd_lowlevel.c: 38:   for(i=0;i<12;i++)
  4484  005D56  0E00               	movlw	0
  4485  005D58  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4486  005D5A  0E00               	movlw	0
  4487  005D5C  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4488  005D5E  0E00               	movlw	0
  4489  005D60  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4490  005D62  0E00               	movlw	0
  4491  005D64  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4492  005D66                     l4000:
  4493                           
  4494                           ;libraries/lcd_lowlevel.c: 39:   {;libraries/lcd_lowlevel.c: 40:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4495  005D66  0ED0               	movlw	208
  4496  005D68  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4497  005D6A  0ECA               	movlw	202
  4498  005D6C                     u8377:
  4499  005D6C  2EE8               	decfsz	wreg,f,c
  4500  005D6E  D7FE               	bra	u8377
  4501  005D70  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4502  005D72  D7FC               	bra	u8377
  4503  005D74                     
  4504                           ;libraries/lcd_lowlevel.c: 41:   }
  4505  005D74  0E01               	movlw	1
  4506  005D76  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4507  005D78  0E00               	movlw	0
  4508  005D7A  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4509  005D7C  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4510  005D7E  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4511  005D80  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4512  005D82  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4513  005D84  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4514  005D86  E109               	bnz	u2410
  4515  005D88  0E0C               	movlw	12
  4516  005D8A  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4517  005D8C  A0D8               	btfss	status,0,c
  4518  005D8E  EFCB  F02E         	goto	u2411
  4519  005D92  EFCD  F02E         	goto	u2410
  4520  005D96                     u2411:
  4521  005D96  EFB3  F02E         	goto	l4000
  4522  005D9A                     u2410:
  4523  005D9A  0012               	return		;funcret
  4524  005D9C                     __end_of_LCD_Lowlevel_Init:
  4525                           	callstack 0
  4526                           
  4527 ;; *************** function _Factory_exec *****************
  4528 ;; Defined at:
  4529 ;;		line 56 in file "class/factory.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  ev              1    0[BANK1 ] unsigned char 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      void 
  4536 ;; Registers used:
  4537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4543 ;;      Params:         0       0       0       0       0       0       0
  4544 ;;      Locals:         0       0       1       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0
  4546 ;;      Totals:         0       0       1       0       0       0       0
  4547 ;;Total ram usage:        1 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; Hardware stack levels required when called: 15
  4550 ;; This function calls:
  4551 ;;		_XF_popEvent
  4552 ;;		_displaySM
  4553 ;;		_gameControllerSM
  4554 ;;		_sleepSM
  4555 ;;		_touchScreenSM
  4556 ;; This function is called by:
  4557 ;;		_main
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text10
  4562  006262                     __ptext10:
  4563                           	callstack 0
  4564  006262                     _Factory_exec:
  4565                           	callstack 15
  4566  006262                     
  4567                           ;class/factory.c: 59:     Event ev;;class/factory.c: 60:     ev = XF_popEvent(0);
  4568  006262  0E00               	movlw	0
  4569  006264  EC01  F031         	call	_XF_popEvent
  4570  006268  0101               	movlb	1	; () banked
  4571  00626A  6FDA               	movwf	Factory_exec@ev& (0+255),b
  4572  00626C                     
  4573                           ; BSR set to: 1
  4574                           ;class/factory.c: 61:     if (ev != NULLEVENT)
  4575  00626C  51DA               	movf	Factory_exec@ev& (0+255),w,b
  4576  00626E  B4D8               	btfsc	status,2,c
  4577  006270  EF3C  F031         	goto	u8331
  4578  006274  EF3E  F031         	goto	u8330
  4579  006278                     u8331:
  4580  006278  EF5B  F031         	goto	l106
  4581  00627C                     u8330:
  4582  00627C                     
  4583                           ; BSR set to: 1
  4584                           ;class/factory.c: 62:     {;class/factory.c: 63:         sleepSM(ev);
  4585  00627C  51DA               	movf	Factory_exec@ev& (0+255),w,b
  4586  00627E  ECAE  F033         	call	_sleepSM
  4587  006282                     
  4588                           ;class/factory.c: 64:         touchScreenSM(ev,&g1);
  4589  006282  0E00               	movlw	low _g1
  4590  006284  0100               	movlb	0	; () banked
  4591  006286  6FB0               	movwf	touchScreenSM@g& (0+255),b
  4592  006288  0E01               	movlw	high _g1
  4593  00628A  6FB1               	movwf	(touchScreenSM@g+1)& (0+255),b
  4594  00628C  0101               	movlb	1	; () banked
  4595  00628E  51DA               	movf	Factory_exec@ev& (0+255),w,b
  4596  006290  ECCE  F02E         	call	_touchScreenSM
  4597  006294                     
  4598                           ;class/factory.c: 65:         displaySM(ev,&g1);
  4599  006294  0E00               	movlw	low _g1
  4600  006296  0100               	movlb	0	; () banked
  4601  006298  6FA3               	movwf	displaySM@g& (0+255),b
  4602  00629A  0E01               	movlw	high _g1
  4603  00629C  6FA4               	movwf	(displaySM@g+1)& (0+255),b
  4604  00629E  0101               	movlb	1	; () banked
  4605  0062A0  51DA               	movf	Factory_exec@ev& (0+255),w,b
  4606  0062A2  EC05  F026         	call	_displaySM
  4607  0062A6                     
  4608                           ;class/factory.c: 66:         gameControllerSM(ev,&g1);
  4609  0062A6  0E00               	movlw	low _g1
  4610  0062A8  6E3C               	movwf	gameControllerSM@g^0,c
  4611  0062AA  0E01               	movlw	high _g1
  4612  0062AC  6E3D               	movwf	(gameControllerSM@g+1)^0,c
  4613  0062AE  0101               	movlb	1	; () banked
  4614  0062B0  51DA               	movf	Factory_exec@ev& (0+255),w,b
  4615  0062B2  EC39  F01F         	call	_gameControllerSM
  4616  0062B6                     l106:
  4617  0062B6  0012               	return		;funcret
  4618  0062B8                     __end_of_Factory_exec:
  4619                           	callstack 0
  4620                           
  4621 ;; *************** function _touchScreenSM *****************
  4622 ;; Defined at:
  4623 ;;		line 34 in file "stateMachine/touchScreenSM.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  ev              1    wreg     unsigned char 
  4626 ;;  g               2   80[BANK0 ] PTR struct GameParameter
  4627 ;;		 -> g1(218), 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  ev              1   84[BANK0 ] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4639 ;;      Params:         0       2       0       0       0       0       0
  4640 ;;      Locals:         0       1       0       0       0       0       0
  4641 ;;      Temps:          0       2       0       0       0       0       0
  4642 ;;      Totals:         0       5       0       0       0       0       0
  4643 ;;Total ram usage:        5 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 13
  4646 ;; This function calls:
  4647 ;;		_touchScreenController
  4648 ;; This function is called by:
  4649 ;;		_Factory_exec
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text11
  4654  005D9C                     __ptext11:
  4655                           	callstack 0
  4656  005D9C                     _touchScreenSM:
  4657                           	callstack 16
  4658                           
  4659                           ;incstack = 0
  4660                           ;touchScreenSM@ev stored from wreg
  4661  005D9C  0100               	movlb	0	; () banked
  4662  005D9E  6FB4               	movwf	touchScreenSM@ev& (0+255),b
  4663  005DA0                     
  4664                           ;stateMachine/touchScreenSM.c: 34: void touchScreenSM(Event ev, GameParameters* g);state
      +                          Machine/touchScreenSM.c: 35: {;stateMachine/touchScreenSM.c: 36:     switch(touchScreenS
      +                          tate)
  4665  005DA0  EF01  F02F         	goto	l10532
  4666  005DA4                     l10514:
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;stateMachine/touchScreenSM.c: 39:             if(ev==evPress)
  4670  005DA4  05B4               	decf	touchScreenSM@ev& (0+255),w,b
  4671  005DA6  A4D8               	btfss	status,2,c
  4672  005DA8  EFD8  F02E         	goto	u8171
  4673  005DAC  EFDA  F02E         	goto	u8170
  4674  005DB0                     u8171:
  4675  005DB0  EF17  F02F         	goto	l501
  4676  005DB4                     u8170:
  4677  005DB4                     
  4678                           ; BSR set to: 0
  4679                           ;stateMachine/touchScreenSM.c: 40:             {;stateMachine/touchScreenSM.c: 41:      
      +                                     touchScreenState=CALCULATEPOSITION;
  4680  005DB4  0E01               	movlw	1
  4681  005DB6  6FDE               	movwf	_touchScreenState& (0+255),b
  4682  005DB8                     l10518:
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;stateMachine/touchScreenSM.c: 42:                 touchScreenController(g);
  4686  005DB8  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  4687  005DBC  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  4688  005DC0  EC35  F01B         	call	_touchScreenController	;wreg free
  4689  005DC4  EF17  F02F         	goto	l501
  4690  005DC8                     l10520:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;stateMachine/touchScreenSM.c: 47:             if(ev==evRelease)
  4694  005DC8  0E02               	movlw	2
  4695  005DCA  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  4696  005DCC  A4D8               	btfss	status,2,c
  4697  005DCE  EFEB  F02E         	goto	u8181
  4698  005DD2  EFED  F02E         	goto	u8180
  4699  005DD6                     u8181:
  4700  005DD6  EFF5  F02E         	goto	l10526
  4701  005DDA                     u8180:
  4702  005DDA                     
  4703                           ; BSR set to: 0
  4704                           ;stateMachine/touchScreenSM.c: 48:             {;stateMachine/touchScreenSM.c: 49:      
      +                                     touchScreenState=WAITING;
  4705  005DDA  0E00               	movlw	0
  4706  005DDC  6FDE               	movwf	_touchScreenState& (0+255),b
  4707  005DDE                     
  4708                           ; BSR set to: 0
  4709                           ;stateMachine/touchScreenSM.c: 50:                 touchScreenController(g);
  4710  005DDE  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  4711  005DE2  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  4712  005DE6  EC35  F01B         	call	_touchScreenController	;wreg free
  4713  005DEA                     l10526:
  4714                           
  4715                           ;stateMachine/touchScreenSM.c: 52:             if(ev==evTimerPos)
  4716  005DEA  0E04               	movlw	4
  4717  005DEC  0100               	movlb	0	; () banked
  4718  005DEE  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  4719  005DF0  A4D8               	btfss	status,2,c
  4720  005DF2  EFFD  F02E         	goto	u8191
  4721  005DF6  EFFF  F02E         	goto	u8190
  4722  005DFA                     u8191:
  4723  005DFA  EF17  F02F         	goto	l501
  4724  005DFE                     u8190:
  4725  005DFE  EFDC  F02E         	goto	l10518
  4726  005E02                     l10532:
  4727  005E02  0100               	movlb	0	; () banked
  4728  005E04  51DE               	movf	_touchScreenState& (0+255),w,b
  4729  005E06  6FB2               	movwf	??_touchScreenSM& (0+255),b
  4730  005E08  6BB3               	clrf	(??_touchScreenSM+1)& (0+255),b
  4731                           
  4732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4733                           ; Switch size 1, requested type "simple"
  4734                           ; Number of cases is 1, Range of values is 0 to 0
  4735                           ; switch strategies available:
  4736                           ; Name         Instructions Cycles
  4737                           ; simple_byte            4     3 (average)
  4738                           ;	Chosen strategy is simple_byte
  4739  005E0A  51B3               	movf	(??_touchScreenSM+1)& (0+255),w,b
  4740  005E0C  0A00               	xorlw	0	; case 0
  4741  005E0E  B4D8               	btfsc	status,2,c
  4742  005E10  EF0C  F02F         	goto	l10898
  4743  005E14  EF17  F02F         	goto	l501
  4744  005E18                     l10898:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ; Switch size 1, requested type "simple"
  4748                           ; Number of cases is 2, Range of values is 0 to 1
  4749                           ; switch strategies available:
  4750                           ; Name         Instructions Cycles
  4751                           ; simple_byte            7     4 (average)
  4752                           ;	Chosen strategy is simple_byte
  4753  005E18  51B2               	movf	??_touchScreenSM& (0+255),w,b
  4754  005E1A  0A00               	xorlw	0	; case 0
  4755  005E1C  B4D8               	btfsc	status,2,c
  4756  005E1E  EFD2  F02E         	goto	l10514
  4757  005E22  0A01               	xorlw	1	; case 1
  4758  005E24  B4D8               	btfsc	status,2,c
  4759  005E26  EFE4  F02E         	goto	l10520
  4760  005E2A  EF17  F02F         	goto	l501
  4761  005E2E                     l501:
  4762  005E2E  0012               	return		;funcret
  4763  005E30                     __end_of_touchScreenSM:
  4764                           	callstack 0
  4765                           
  4766 ;; *************** function _touchScreenController *****************
  4767 ;; Defined at:
  4768 ;;		line 70 in file "stateMachine/touchScreenSM.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  g               2   48[BANK0 ] PTR struct GameParameter
  4771 ;;		 -> g1(218), 
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;  valueX          2   78[BANK0 ] unsigned short 
  4774 ;;  valueY          2   76[BANK0 ] unsigned short 
  4775 ;;  s              20   56[BANK0 ] unsigned char [20]
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4785 ;;      Params:         0       2       0       0       0       0       0
  4786 ;;      Locals:         0      24       0       0       0       0       0
  4787 ;;      Temps:          0       6       0       0       0       0       0
  4788 ;;      Totals:         0      32       0       0       0       0       0
  4789 ;;Total ram usage:       32 bytes
  4790 ;; Hardware stack levels used: 1
  4791 ;; Hardware stack levels required when called: 12
  4792 ;; This function calls:
  4793 ;;		_GameParameters_setX
  4794 ;;		_GameParameters_setY
  4795 ;;		_LCD_DrawText
  4796 ;;		_XF_scheduleTimer
  4797 ;;		___fldiv
  4798 ;;		___fltol
  4799 ;;		___xxtofl
  4800 ;;		_configMeasure
  4801 ;;		_configTouch
  4802 ;;		_sprintf
  4803 ;; This function is called by:
  4804 ;;		_touchScreenSM
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text12
  4809  00366A                     __ptext12:
  4810                           	callstack 0
  4811  00366A                     _touchScreenController:
  4812                           	callstack 16
  4813  00366A                     
  4814                           ;stateMachine/touchScreenSM.c: 70: void touchScreenController(GameParameters* g);stateMa
      +                          chine/touchScreenSM.c: 71: {;stateMachine/touchScreenSM.c: 72:     char s[20];;stateMach
      +                          ine/touchScreenSM.c: 74:     switch(touchScreenState)
  4815  00366A  EF53  F01C         	goto	l10446
  4816  00366E                     l505:
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;stateMachine/touchScreenSM.c: 78:             INTEDG1=0;
  4820  00366E  9AF1               	bcf	4081,5,c	;volatile
  4821  003670                     
  4822                           ; BSR set to: 0
  4823                           ;stateMachine/touchScreenSM.c: 79:             configTouch();
  4824  003670  EC2B  F033         	call	_configTouch	;wreg free
  4825                           
  4826                           ;stateMachine/touchScreenSM.c: 82:             break;
  4827  003674  EF69  F01C         	goto	l518
  4828  003678                     l507:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;stateMachine/touchScreenSM.c: 88:             INT1IE=0;
  4832  003678  96F0               	bcf	4080,3,c	;volatile
  4833  00367A                     
  4834                           ; BSR set to: 0
  4835                           ;stateMachine/touchScreenSM.c: 89:             configMeasure(0);
  4836  00367A  0E00               	movlw	0
  4837  00367C  ECB0  F031         	call	_configMeasure
  4838  003680                     l508:
  4839  003680  B2C2               	btfsc	194,1,c	;volatile
  4840  003682  EF45  F01B         	goto	u8091
  4841  003686  EF47  F01B         	goto	u8090
  4842  00368A                     u8091:
  4843  00368A  EF40  F01B         	goto	l508
  4844  00368E                     u8090:
  4845  00368E                     
  4846                           ;stateMachine/touchScreenSM.c: 91:             uint16_t valueX;;stateMachine/touchScreen
      +                          SM.c: 92:             valueX=(ADRESH<<8)+ADRESL;
  4847  00368E  50C4               	movf	196,w,c	;volatile
  4848  003690  0100               	movlb	0	; () banked
  4849  003692  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4850  003694  6B92               	clrf	??_touchScreenController& (0+255),b
  4851  003696  50C3               	movf	195,w,c	;volatile
  4852  003698  2592               	addwf	??_touchScreenController& (0+255),w,b
  4853  00369A  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4854  00369C  0E00               	movlw	0
  4855  00369E  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  4856  0036A0  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4857                           
  4858                           ;stateMachine/touchScreenSM.c: 93:             if(valueX<=120)
  4859  0036A2  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  4860  0036A4  E107               	bnz	u8101
  4861  0036A6  0E79               	movlw	121
  4862  0036A8  5DAE               	subwf	touchScreenController@valueX& (0+255),w,b
  4863  0036AA  B0D8               	btfsc	status,0,c
  4864  0036AC  EF5A  F01B         	goto	u8101
  4865  0036B0  EF5C  F01B         	goto	u8100
  4866  0036B4                     u8101:
  4867  0036B4  EF60  F01B         	goto	l10414
  4868  0036B8                     u8100:
  4869  0036B8                     
  4870                           ; BSR set to: 0
  4871                           ;stateMachine/touchScreenSM.c: 94:             {;stateMachine/touchScreenSM.c: 95:      
      +                                     valueX=120;
  4872  0036B8  0E00               	movlw	0
  4873  0036BA  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4874  0036BC  0E78               	movlw	120
  4875  0036BE  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4876  0036C0                     l10414:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;stateMachine/touchScreenSM.c: 97:             valueX=(valueX-120)/2.35;
  4880  0036C0  0E66               	movlw	102
  4881  0036C2  6E24               	movwf	___fldiv@a^0,c
  4882  0036C4  0E66               	movlw	102
  4883  0036C6  6E25               	movwf	(___fldiv@a+1)^0,c
  4884  0036C8  0E16               	movlw	22
  4885  0036CA  6E26               	movwf	(___fldiv@a+2)^0,c
  4886  0036CC  0E40               	movlw	64
  4887  0036CE  6E27               	movwf	(___fldiv@a+3)^0,c
  4888  0036D0  0E88               	movlw	136
  4889  0036D2  6F92               	movwf	??_touchScreenController& (0+255),b
  4890  0036D4  0EFF               	movlw	255
  4891  0036D6  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4892  0036D8  C0AE  F094         	movff	touchScreenController@valueX,??_touchScreenController+2
  4893  0036DC  C0AF  F095         	movff	touchScreenController@valueX+1,??_touchScreenController+3
  4894  0036E0  5192               	movf	??_touchScreenController& (0+255),w,b
  4895  0036E2  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  4896  0036E4  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  4897  0036E6  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  4898  0036E8  C094  F012         	movff	??_touchScreenController+2,___xxtofl@val
  4899  0036EC  C095  F013         	movff	??_touchScreenController+3,___xxtofl@val+1
  4900  0036F0  6A14               	clrf	(___xxtofl@val+2)^0,c
  4901  0036F2  6A15               	clrf	(___xxtofl@val+3)^0,c
  4902  0036F4  0E00               	movlw	0
  4903  0036F6  EC85  F01D         	call	___xxtofl
  4904  0036FA  C012  F020         	movff	?___xxtofl,___fldiv@b
  4905  0036FE  C013  F021         	movff	?___xxtofl+1,___fldiv@b+1
  4906  003702  C014  F022         	movff	?___xxtofl+2,___fldiv@b+2
  4907  003706  C015  F023         	movff	?___xxtofl+3,___fldiv@b+3
  4908  00370A  EC3B  F013         	call	___fldiv	;wreg free
  4909  00370E  C020  F039         	movff	?___fldiv,___fltol@f1
  4910  003712  C021  F03A         	movff	?___fldiv+1,___fltol@f1+1
  4911  003716  C022  F03B         	movff	?___fldiv+2,___fltol@f1+2
  4912  00371A  C023  F03C         	movff	?___fldiv+3,___fltol@f1+3
  4913  00371E  EC00  F025         	call	___fltol	;wreg free
  4914  003722  C039  F0AE         	movff	?___fltol,touchScreenController@valueX
  4915  003726  C03A  F0AF         	movff	?___fltol+1,touchScreenController@valueX+1
  4916  00372A                     
  4917                           ;stateMachine/touchScreenSM.c: 98:             valueX=240 -valueX;
  4918  00372A  0100               	movlb	0	; () banked
  4919  00372C  51AE               	movf	touchScreenController@valueX& (0+255),w,b
  4920  00372E  08F0               	sublw	240
  4921  003730  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4922  003732  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  4923  003734  A0D8               	btfss	status,0,c
  4924  003736  2AE8               	incf	wreg,f,c
  4925  003738  0800               	sublw	0
  4926  00373A  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4927  00373C                     
  4928                           ; BSR set to: 0
  4929                           ;stateMachine/touchScreenSM.c: 100:             configMeasure(1);
  4930  00373C  0E01               	movlw	1
  4931  00373E  ECB0  F031         	call	_configMeasure
  4932  003742                     l512:
  4933  003742  B2C2               	btfsc	194,1,c	;volatile
  4934  003744  EFA6  F01B         	goto	u8111
  4935  003748  EFA8  F01B         	goto	u8110
  4936  00374C                     u8111:
  4937  00374C  EFA1  F01B         	goto	l512
  4938  003750                     u8110:
  4939  003750                     
  4940                           ;stateMachine/touchScreenSM.c: 102:             uint16_t valueY;;stateMachine/touchScree
      +                          nSM.c: 103:             valueY=(ADRESH<<8)+ADRESL;
  4941  003750  50C4               	movf	196,w,c	;volatile
  4942  003752  0100               	movlb	0	; () banked
  4943  003754  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4944  003756  6B92               	clrf	??_touchScreenController& (0+255),b
  4945  003758  50C3               	movf	195,w,c	;volatile
  4946  00375A  2592               	addwf	??_touchScreenController& (0+255),w,b
  4947  00375C  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4948  00375E  0E00               	movlw	0
  4949  003760  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  4950  003762  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  4951                           
  4952                           ;stateMachine/touchScreenSM.c: 104:             if(valueY<=105)
  4953  003764  51AD               	movf	(touchScreenController@valueY+1)& (0+255),w,b
  4954  003766  E107               	bnz	u8121
  4955  003768  0E6A               	movlw	106
  4956  00376A  5DAC               	subwf	touchScreenController@valueY& (0+255),w,b
  4957  00376C  B0D8               	btfsc	status,0,c
  4958  00376E  EFBB  F01B         	goto	u8121
  4959  003772  EFBD  F01B         	goto	u8120
  4960  003776                     u8121:
  4961  003776  EFC1  F01B         	goto	l10424
  4962  00377A                     u8120:
  4963  00377A                     
  4964                           ; BSR set to: 0
  4965                           ;stateMachine/touchScreenSM.c: 105:             {;stateMachine/touchScreenSM.c: 106:    
      +                                       valueY=105;
  4966  00377A  0E00               	movlw	0
  4967  00377C  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  4968  00377E  0E69               	movlw	105
  4969  003780  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4970  003782                     l10424:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;stateMachine/touchScreenSM.c: 108:             valueY=(valueY-105)/2;
  4974  003782  0E97               	movlw	151
  4975  003784  6F92               	movwf	??_touchScreenController& (0+255),b
  4976  003786  0EFF               	movlw	255
  4977  003788  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4978  00378A  C0AC  F094         	movff	touchScreenController@valueY,??_touchScreenController+2
  4979  00378E  C0AD  F095         	movff	touchScreenController@valueY+1,??_touchScreenController+3
  4980  003792  5192               	movf	??_touchScreenController& (0+255),w,b
  4981  003794  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  4982  003796  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  4983  003798  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  4984  00379A  90D8               	bcf	status,0,c
  4985  00379C  3195               	rrcf	(??_touchScreenController+3)& (0+255),w,b
  4986  00379E  6F96               	movwf	(??_touchScreenController+4)& (0+255),b
  4987  0037A0  3194               	rrcf	(??_touchScreenController+2)& (0+255),w,b
  4988  0037A2  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4989  0037A4  C096  F0AD         	movff	??_touchScreenController+4,touchScreenController@valueY+1
  4990  0037A8                     
  4991                           ; BSR set to: 0
  4992                           ;stateMachine/touchScreenSM.c: 109:             XF_scheduleTimer(9,evTimerPos,0);
  4993  0037A8  0E00               	movlw	0
  4994  0037AA  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  4995  0037AC  0E09               	movlw	9
  4996  0037AE  6E13               	movwf	XF_scheduleTimer@tm^0,c
  4997  0037B0  0E04               	movlw	4
  4998  0037B2  6E15               	movwf	XF_scheduleTimer@ev^0,c
  4999  0037B4  0E00               	movlw	0
  5000  0037B6  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  5001  0037B8  EC95  F02F         	call	_XF_scheduleTimer	;wreg free
  5002  0037BC                     
  5003                           ;stateMachine/touchScreenSM.c: 111:             ADCON0=0b00101000;
  5004  0037BC  0E28               	movlw	40
  5005  0037BE  6EC2               	movwf	194,c	;volatile
  5006  0037C0                     
  5007                           ;stateMachine/touchScreenSM.c: 112:             configTouch();
  5008  0037C0  EC2B  F033         	call	_configTouch	;wreg free
  5009  0037C4                     
  5010                           ;stateMachine/touchScreenSM.c: 114:             if(PORTBbits.RB1 == 0)
  5011  0037C4  B281               	btfsc	129,1,c	;volatile
  5012  0037C6  EFE7  F01B         	goto	u8131
  5013  0037CA  EFE9  F01B         	goto	u8130
  5014  0037CE                     u8131:
  5015  0037CE  EF69  F01C         	goto	l518
  5016  0037D2                     u8130:
  5017  0037D2                     
  5018                           ;stateMachine/touchScreenSM.c: 115:             {;stateMachine/touchScreenSM.c: 116:    
      +                                       sprintf(s,"X: %d",valueX);
  5019  0037D2  0E98               	movlw	low touchScreenController@s
  5020  0037D4  0100               	movlb	0	; () banked
  5021  0037D6  6F82               	movwf	sprintf@s& (0+255),b
  5022  0037D8  0E00               	movlw	high touchScreenController@s
  5023  0037DA  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5024  0037DC  0EEA               	movlw	low STR_15
  5025  0037DE  6F84               	movwf	sprintf@fmt& (0+255),b
  5026  0037E0  0E7F               	movlw	high STR_15
  5027  0037E2  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5028  0037E4  C0AE  F086         	movff	touchScreenController@valueX,?_sprintf+4
  5029  0037E8  C0AF  F087         	movff	touchScreenController@valueX+1,?_sprintf+5
  5030  0037EC  EC87  F031         	call	_sprintf	;wreg free
  5031  0037F0                     
  5032                           ;stateMachine/touchScreenSM.c: 117:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,200,0b0000000000000000,0b1111111111111111);
  5033  0037F0  0E98               	movlw	low touchScreenController@s
  5034  0037F2  6E20               	movwf	LCD_DrawText@msg^0,c
  5035  0037F4  0E00               	movlw	high touchScreenController@s
  5036  0037F6  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5037  0037F8  0E7B               	movlw	low _arialNarrow_12ptFontInfo
  5038  0037FA  6E22               	movwf	LCD_DrawText@font^0,c
  5039  0037FC  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5040  0037FE  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5041  003800  0E01               	movlw	1
  5042  003802  6E24               	movwf	LCD_DrawText@align^0,c
  5043  003804  0E00               	movlw	0
  5044  003806  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5045  003808  0EC8               	movlw	200
  5046  00380A  6E25               	movwf	LCD_DrawText@posX^0,c
  5047  00380C  0E00               	movlw	0
  5048  00380E  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5049  003810  0EC8               	movlw	200
  5050  003812  6E27               	movwf	LCD_DrawText@posY^0,c
  5051  003814  0E00               	movlw	0
  5052  003816  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5053  003818  0E00               	movlw	0
  5054  00381A  6E29               	movwf	LCD_DrawText@color^0,c
  5055  00381C  0EFF               	movlw	255
  5056  00381E  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5057  003820  682B               	setf	LCD_DrawText@bg_color^0,c
  5058  003822  EC14  F00F         	call	_LCD_DrawText	;wreg free
  5059  003826                     
  5060                           ;stateMachine/touchScreenSM.c: 118:                 GameParameters_setX(g,valueX);
  5061  003826  C090  F012         	movff	touchScreenController@g,GameParameters_setX@s
  5062  00382A  C091  F013         	movff	touchScreenController@g+1,GameParameters_setX@s+1
  5063  00382E  C0AE  F014         	movff	touchScreenController@valueX,GameParameters_setX@value
  5064  003832  C0AF  F015         	movff	touchScreenController@valueX+1,GameParameters_setX@value+1
  5065  003836  EC5E  F033         	call	_GameParameters_setX	;wreg free
  5066  00383A                     
  5067                           ;stateMachine/touchScreenSM.c: 119:                 sprintf(s,"Y: %d",valueY);
  5068  00383A  0E98               	movlw	low touchScreenController@s
  5069  00383C  0100               	movlb	0	; () banked
  5070  00383E  6F82               	movwf	sprintf@s& (0+255),b
  5071  003840  0E00               	movlw	high touchScreenController@s
  5072  003842  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5073  003844  0EF0               	movlw	low STR_16
  5074  003846  6F84               	movwf	sprintf@fmt& (0+255),b
  5075  003848  0E7F               	movlw	high STR_16
  5076  00384A  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5077  00384C  C0AC  F086         	movff	touchScreenController@valueY,?_sprintf+4
  5078  003850  C0AD  F087         	movff	touchScreenController@valueY+1,?_sprintf+5
  5079  003854  EC87  F031         	call	_sprintf	;wreg free
  5080  003858                     
  5081                           ;stateMachine/touchScreenSM.c: 120:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,250,0b0000000000000000,0b1111111111111111);
  5082  003858  0E98               	movlw	low touchScreenController@s
  5083  00385A  6E20               	movwf	LCD_DrawText@msg^0,c
  5084  00385C  0E00               	movlw	high touchScreenController@s
  5085  00385E  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5086  003860  0E7B               	movlw	low _arialNarrow_12ptFontInfo
  5087  003862  6E22               	movwf	LCD_DrawText@font^0,c
  5088  003864  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5089  003866  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5090  003868  0E01               	movlw	1
  5091  00386A  6E24               	movwf	LCD_DrawText@align^0,c
  5092  00386C  0E00               	movlw	0
  5093  00386E  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5094  003870  0EC8               	movlw	200
  5095  003872  6E25               	movwf	LCD_DrawText@posX^0,c
  5096  003874  0E00               	movlw	0
  5097  003876  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5098  003878  0EFA               	movlw	250
  5099  00387A  6E27               	movwf	LCD_DrawText@posY^0,c
  5100  00387C  0E00               	movlw	0
  5101  00387E  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5102  003880  0E00               	movlw	0
  5103  003882  6E29               	movwf	LCD_DrawText@color^0,c
  5104  003884  0EFF               	movlw	255
  5105  003886  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5106  003888  682B               	setf	LCD_DrawText@bg_color^0,c
  5107  00388A  EC14  F00F         	call	_LCD_DrawText	;wreg free
  5108                           
  5109                           ;stateMachine/touchScreenSM.c: 121:                 GameParameters_setY(g,valueY);
  5110  00388E  C090  F012         	movff	touchScreenController@g,GameParameters_setY@s
  5111  003892  C091  F013         	movff	touchScreenController@g+1,GameParameters_setY@s+1
  5112  003896  C0AC  F014         	movff	touchScreenController@valueY,GameParameters_setY@value
  5113  00389A  C0AD  F015         	movff	touchScreenController@valueY+1,GameParameters_setY@value+1
  5114  00389E  EC53  F033         	call	_GameParameters_setY	;wreg free
  5115  0038A2  EF69  F01C         	goto	l518
  5116  0038A6                     l10446:
  5117  0038A6  0100               	movlb	0	; () banked
  5118  0038A8  51DE               	movf	_touchScreenState& (0+255),w,b
  5119  0038AA  6F92               	movwf	??_touchScreenController& (0+255),b
  5120  0038AC  6B93               	clrf	(??_touchScreenController+1)& (0+255),b
  5121                           
  5122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5123                           ; Switch size 1, requested type "simple"
  5124                           ; Number of cases is 1, Range of values is 0 to 0
  5125                           ; switch strategies available:
  5126                           ; Name         Instructions Cycles
  5127                           ; simple_byte            4     3 (average)
  5128                           ;	Chosen strategy is simple_byte
  5129  0038AE  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5130  0038B0  0A00               	xorlw	0	; case 0
  5131  0038B2  B4D8               	btfsc	status,2,c
  5132  0038B4  EF5E  F01C         	goto	l10900
  5133  0038B8  EF69  F01C         	goto	l518
  5134  0038BC                     l10900:
  5135                           
  5136                           ; BSR set to: 0
  5137                           ; Switch size 1, requested type "simple"
  5138                           ; Number of cases is 2, Range of values is 0 to 1
  5139                           ; switch strategies available:
  5140                           ; Name         Instructions Cycles
  5141                           ; simple_byte            7     4 (average)
  5142                           ;	Chosen strategy is simple_byte
  5143  0038BC  5192               	movf	??_touchScreenController& (0+255),w,b
  5144  0038BE  0A00               	xorlw	0	; case 0
  5145  0038C0  B4D8               	btfsc	status,2,c
  5146  0038C2  EF37  F01B         	goto	l505
  5147  0038C6  0A01               	xorlw	1	; case 1
  5148  0038C8  B4D8               	btfsc	status,2,c
  5149  0038CA  EF3C  F01B         	goto	l507
  5150  0038CE  EF69  F01C         	goto	l518
  5151  0038D2                     l518:
  5152  0038D2  0012               	return		;funcret
  5153  0038D4                     __end_of_touchScreenController:
  5154                           	callstack 0
  5155                           
  5156 ;; *************** function _configTouch *****************
  5157 ;; Defined at:
  5158 ;;		line 134 in file "stateMachine/touchScreenSM.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5172 ;;      Params:         0       0       0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0
  5175 ;;      Totals:         0       0       0       0       0       0       0
  5176 ;;Total ram usage:        0 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 4
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_touchScreenInit
  5183 ;;		_touchScreenController
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text13
  5188  006656                     __ptext13:
  5189                           	callstack 0
  5190  006656                     _configTouch:
  5191                           	callstack 23
  5192  006656                     
  5193                           ;stateMachine/touchScreenSM.c: 136:     ANSB1=0;
  5194  006656  010F               	movlb	15	; () banked
  5195  006658  9339               	bcf	57,1,b	;volatile
  5196                           
  5197                           ;stateMachine/touchScreenSM.c: 137:     ANSB2=0;
  5198  00665A  9539               	bcf	57,2,b	;volatile
  5199                           
  5200                           ;stateMachine/touchScreenSM.c: 138:     TRISB2=0;
  5201  00665C  9493               	bcf	3987,2,c	;volatile
  5202                           
  5203                           ;stateMachine/touchScreenSM.c: 139:     LATB2=0;
  5204  00665E  948A               	bcf	3978,2,c	;volatile
  5205                           
  5206                           ;stateMachine/touchScreenSM.c: 140:     TRISB1=1;
  5207  006660  8293               	bsf	3987,1,c	;volatile
  5208                           
  5209                           ;stateMachine/touchScreenSM.c: 141:     RBPU=0;
  5210  006662  9EF1               	bcf	4081,7,c	;volatile
  5211  006664                     
  5212                           ; BSR set to: 15
  5213                           ;stateMachine/touchScreenSM.c: 142:     WPUB=0b00000010;
  5214  006664  0E02               	movlw	2
  5215  006666  6E61               	movwf	97,c	;volatile
  5216  006668                     
  5217                           ; BSR set to: 15
  5218                           ;stateMachine/touchScreenSM.c: 143:     TRISB3=0;
  5219  006668  9693               	bcf	3987,3,c	;volatile
  5220  00666A                     
  5221                           ; BSR set to: 15
  5222                           ;stateMachine/touchScreenSM.c: 144:     LATB3=1;
  5223  00666A  868A               	bsf	3978,3,c	;volatile
  5224  00666C                     
  5225                           ; BSR set to: 15
  5226                           ;stateMachine/touchScreenSM.c: 145:     __nop();
  5227  00666C  F000               	nop	
  5228  00666E                     
  5229                           ;stateMachine/touchScreenSM.c: 146:     TRISB3=1;
  5230  00666E  8693               	bsf	3987,3,c	;volatile
  5231  006670                     
  5232                           ;stateMachine/touchScreenSM.c: 147:     TRISB4=1;
  5233  006670  8893               	bsf	3987,4,c	;volatile
  5234  006672                     
  5235                           ;stateMachine/touchScreenSM.c: 148:     INT1IF=0;
  5236  006672  90F0               	bcf	4080,0,c	;volatile
  5237  006674                     
  5238                           ;stateMachine/touchScreenSM.c: 149:     INT1IE=1;
  5239  006674  86F0               	bsf	4080,3,c	;volatile
  5240  006676  0012               	return		;funcret
  5241  006678                     __end_of_configTouch:
  5242                           	callstack 0
  5243                           
  5244 ;; *************** function _configMeasure *****************
  5245 ;; Defined at:
  5246 ;;		line 155 in file "stateMachine/touchScreenSM.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  channel         1    wreg     _Bool 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  channel         1   17[COMRAM] _Bool 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5260 ;;      Params:         0       0       0       0       0       0       0
  5261 ;;      Locals:         1       0       0       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0
  5263 ;;      Totals:         1       0       0       0       0       0       0
  5264 ;;Total ram usage:        1 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; Hardware stack levels required when called: 4
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_touchScreenController
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text14
  5275  006360                     __ptext14:
  5276                           	callstack 0
  5277  006360                     _configMeasure:
  5278                           	callstack 23
  5279                           
  5280                           ;incstack = 0
  5281                           ;configMeasure@channel stored from wreg
  5282  006360  6E12               	movwf	configMeasure@channel^0,c
  5283  006362                     
  5284                           ;stateMachine/touchScreenSM.c: 155: void configMeasure(_Bool channel);stateMachine/touch
      +                          ScreenSM.c: 156: {;stateMachine/touchScreenSM.c: 157:     if(channel==0)
  5285  006362  5012               	movf	configMeasure@channel^0,w,c
  5286  006364  A4D8               	btfss	status,2,c
  5287  006366  EFB7  F031         	goto	u7511
  5288  00636A  EFB9  F031         	goto	u7510
  5289  00636E                     u7511:
  5290  00636E  EFC4  F031         	goto	l10052
  5291  006372                     u7510:
  5292  006372                     
  5293                           ;stateMachine/touchScreenSM.c: 158:     {;stateMachine/touchScreenSM.c: 159:         ANS
      +                          B1=0;
  5294  006372  010F               	movlb	15	; () banked
  5295  006374  9339               	bcf	57,1,b	;volatile
  5296                           
  5297                           ;stateMachine/touchScreenSM.c: 160:         TRISB1=0;
  5298  006376  9293               	bcf	3987,1,c	;volatile
  5299                           
  5300                           ;stateMachine/touchScreenSM.c: 161:         LATB1=0;
  5301  006378  928A               	bcf	3978,1,c	;volatile
  5302                           
  5303                           ;stateMachine/touchScreenSM.c: 162:         TRISB3=0;
  5304  00637A  9693               	bcf	3987,3,c	;volatile
  5305                           
  5306                           ;stateMachine/touchScreenSM.c: 163:         LATB3=1;
  5307  00637C  868A               	bsf	3978,3,c	;volatile
  5308                           
  5309                           ;stateMachine/touchScreenSM.c: 164:         TRISB4=1;
  5310  00637E  8893               	bsf	3987,4,c	;volatile
  5311                           
  5312                           ;stateMachine/touchScreenSM.c: 165:         TRISB2=1;
  5313  006380  8493               	bsf	3987,2,c	;volatile
  5314                           
  5315                           ;stateMachine/touchScreenSM.c: 166:         ANSB2=1;
  5316  006382  8539               	bsf	57,2,b	;volatile
  5317  006384                     
  5318                           ; BSR set to: 15
  5319                           ;stateMachine/touchScreenSM.c: 167:         ADCON0=0b00100011;
  5320  006384  0E23               	movlw	35
  5321  006386  6EC2               	movwf	194,c	;volatile
  5322  006388                     l10052:
  5323                           
  5324                           ;stateMachine/touchScreenSM.c: 169:     if(channel==1)
  5325  006388  0412               	decf	configMeasure@channel^0,w,c
  5326  00638A  A4D8               	btfss	status,2,c
  5327  00638C  EFCA  F031         	goto	u7521
  5328  006390  EFCC  F031         	goto	u7520
  5329  006394                     u7521:
  5330  006394  EFD7  F031         	goto	l526
  5331  006398                     u7520:
  5332  006398                     
  5333                           ;stateMachine/touchScreenSM.c: 170:     {;stateMachine/touchScreenSM.c: 171:         ANS
      +                          B2=0;
  5334  006398  010F               	movlb	15	; () banked
  5335  00639A  9539               	bcf	57,2,b	;volatile
  5336                           
  5337                           ;stateMachine/touchScreenSM.c: 172:         TRISB2=0;
  5338  00639C  9493               	bcf	3987,2,c	;volatile
  5339                           
  5340                           ;stateMachine/touchScreenSM.c: 173:         LATB2=0;
  5341  00639E  948A               	bcf	3978,2,c	;volatile
  5342                           
  5343                           ;stateMachine/touchScreenSM.c: 174:         TRISB4=0;
  5344  0063A0  9893               	bcf	3987,4,c	;volatile
  5345                           
  5346                           ;stateMachine/touchScreenSM.c: 175:         LATB4=1;
  5347  0063A2  888A               	bsf	3978,4,c	;volatile
  5348                           
  5349                           ;stateMachine/touchScreenSM.c: 176:         TRISB3=1;
  5350  0063A4  8693               	bsf	3987,3,c	;volatile
  5351                           
  5352                           ;stateMachine/touchScreenSM.c: 177:         TRISB1=1;
  5353  0063A6  8293               	bsf	3987,1,c	;volatile
  5354                           
  5355                           ;stateMachine/touchScreenSM.c: 178:         ANSB1=1;
  5356  0063A8  8339               	bsf	57,1,b	;volatile
  5357  0063AA                     
  5358                           ; BSR set to: 15
  5359                           ;stateMachine/touchScreenSM.c: 179:         ADCON0=0b00101011;
  5360  0063AA  0E2B               	movlw	43
  5361  0063AC  6EC2               	movwf	194,c	;volatile
  5362  0063AE                     l526:
  5363  0063AE  0012               	return		;funcret
  5364  0063B0                     __end_of_configMeasure:
  5365                           	callstack 0
  5366                           
  5367 ;; *************** function ___xxtofl *****************
  5368 ;; Defined at:
  5369 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  sign            1    wreg     unsigned char 
  5372 ;;  val             4   17[COMRAM] long 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  sign            1   25[COMRAM] unsigned char 
  5375 ;;  arg             4   27[COMRAM] unsigned long 
  5376 ;;  exp             1   26[COMRAM] unsigned char 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  4   17[COMRAM] unsigned char 
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5386 ;;      Params:         4       0       0       0       0       0       0
  5387 ;;      Locals:         6       0       0       0       0       0       0
  5388 ;;      Temps:          4       0       0       0       0       0       0
  5389 ;;      Totals:        14       0       0       0       0       0       0
  5390 ;;Total ram usage:       14 bytes
  5391 ;; Hardware stack levels used: 1
  5392 ;; Hardware stack levels required when called: 4
  5393 ;; This function calls:
  5394 ;;		Nothing
  5395 ;; This function is called by:
  5396 ;;		_touchScreenController
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text15
  5401  003B0A                     __ptext15:
  5402                           	callstack 0
  5403  003B0A                     ___xxtofl:
  5404                           	callstack 23
  5405                           
  5406                           ;incstack = 0
  5407                           ;___xxtofl@sign stored from wreg
  5408  003B0A  6E1A               	movwf	___xxtofl@sign^0,c
  5409  003B0C  501A               	movf	___xxtofl@sign^0,w,c
  5410  003B0E  B4D8               	btfsc	status,2,c
  5411  003B10  EF8C  F01D         	goto	u7991
  5412  003B14  EF8E  F01D         	goto	u7990
  5413  003B18                     u7991:
  5414  003B18  EFB0  F01D         	goto	l1501
  5415  003B1C                     u7990:
  5416  003B1C  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5417  003B1E  EF95  F01D         	goto	u8000
  5418  003B22  EF93  F01D         	goto	u8001
  5419  003B26                     u8001:
  5420  003B26  EFB0  F01D         	goto	l1501
  5421  003B2A                     u8000:
  5422  003B2A  C012  F016         	movff	___xxtofl@val,??___xxtofl
  5423  003B2E  C013  F017         	movff	___xxtofl@val+1,??___xxtofl+1
  5424  003B32  C014  F018         	movff	___xxtofl@val+2,??___xxtofl+2
  5425  003B36  C015  F019         	movff	___xxtofl@val+3,??___xxtofl+3
  5426  003B3A  1E16               	comf	??___xxtofl^0,f,c
  5427  003B3C  1E17               	comf	(??___xxtofl+1)^0,f,c
  5428  003B3E  1E18               	comf	(??___xxtofl+2)^0,f,c
  5429  003B40  1E19               	comf	(??___xxtofl+3)^0,f,c
  5430  003B42  2A16               	incf	??___xxtofl^0,f,c
  5431  003B44  0E00               	movlw	0
  5432  003B46  2217               	addwfc	(??___xxtofl+1)^0,f,c
  5433  003B48  2218               	addwfc	(??___xxtofl+2)^0,f,c
  5434  003B4A  2219               	addwfc	(??___xxtofl+3)^0,f,c
  5435  003B4C  C016  F01C         	movff	??___xxtofl,___xxtofl@arg
  5436  003B50  C017  F01D         	movff	??___xxtofl+1,___xxtofl@arg+1
  5437  003B54  C018  F01E         	movff	??___xxtofl+2,___xxtofl@arg+2
  5438  003B58  C019  F01F         	movff	??___xxtofl+3,___xxtofl@arg+3
  5439  003B5C  EFB8  F01D         	goto	l10342
  5440  003B60                     l1501:
  5441  003B60  C012  F01C         	movff	___xxtofl@val,___xxtofl@arg
  5442  003B64  C013  F01D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5443  003B68  C014  F01E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5444  003B6C  C015  F01F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5445  003B70                     l10342:
  5446  003B70  5012               	movf	___xxtofl@val^0,w,c
  5447  003B72  1013               	iorwf	(___xxtofl@val+1)^0,w,c
  5448  003B74  1014               	iorwf	(___xxtofl@val+2)^0,w,c
  5449  003B76  1015               	iorwf	(___xxtofl@val+3)^0,w,c
  5450  003B78  A4D8               	btfss	status,2,c
  5451  003B7A  EFC1  F01D         	goto	u8011
  5452  003B7E  EFC3  F01D         	goto	u8010
  5453  003B82                     u8011:
  5454  003B82  EFCD  F01D         	goto	l10348
  5455  003B86                     u8010:
  5456  003B86  0E00               	movlw	0
  5457  003B88  6E12               	movwf	?___xxtofl^0,c
  5458  003B8A  0E00               	movlw	0
  5459  003B8C  6E13               	movwf	(?___xxtofl+1)^0,c
  5460  003B8E  0E00               	movlw	0
  5461  003B90  6E14               	movwf	(?___xxtofl+2)^0,c
  5462  003B92  0E00               	movlw	0
  5463  003B94  6E15               	movwf	(?___xxtofl+3)^0,c
  5464  003B96  EF5E  F01E         	goto	l1504
  5465  003B9A                     l10348:
  5466  003B9A  0E96               	movlw	150
  5467  003B9C  6E1B               	movwf	___xxtofl@exp^0,c
  5468  003B9E  EFD7  F01D         	goto	l10352
  5469  003BA2                     l10350:
  5470  003BA2  2A1B               	incf	___xxtofl@exp^0,f,c
  5471  003BA4  90D8               	bcf	status,0,c
  5472  003BA6  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5473  003BA8  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5474  003BAA  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5475  003BAC  321C               	rrcf	___xxtofl@arg^0,f,c
  5476  003BAE                     l10352:
  5477  003BAE  0E00               	movlw	0
  5478  003BB0  141C               	andwf	___xxtofl@arg^0,w,c
  5479  003BB2  6E16               	movwf	??___xxtofl^0,c
  5480  003BB4  0E00               	movlw	0
  5481  003BB6  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  5482  003BB8  6E17               	movwf	(??___xxtofl+1)^0,c
  5483  003BBA  0E00               	movlw	0
  5484  003BBC  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  5485  003BBE  6E18               	movwf	(??___xxtofl+2)^0,c
  5486  003BC0  0EFE               	movlw	254
  5487  003BC2  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  5488  003BC4  6E19               	movwf	(??___xxtofl+3)^0,c
  5489  003BC6  5016               	movf	??___xxtofl^0,w,c
  5490  003BC8  1017               	iorwf	(??___xxtofl+1)^0,w,c
  5491  003BCA  1018               	iorwf	(??___xxtofl+2)^0,w,c
  5492  003BCC  1019               	iorwf	(??___xxtofl+3)^0,w,c
  5493  003BCE  A4D8               	btfss	status,2,c
  5494  003BD0  EFEC  F01D         	goto	u8021
  5495  003BD4  EFEE  F01D         	goto	u8020
  5496  003BD8                     u8021:
  5497  003BD8  EFD1  F01D         	goto	l10350
  5498  003BDC                     u8020:
  5499  003BDC  EFFC  F01D         	goto	l1508
  5500  003BE0                     l10354:
  5501  003BE0  2A1B               	incf	___xxtofl@exp^0,f,c
  5502  003BE2  0E01               	movlw	1
  5503  003BE4  261C               	addwf	___xxtofl@arg^0,f,c
  5504  003BE6  0E00               	movlw	0
  5505  003BE8  221D               	addwfc	(___xxtofl@arg+1)^0,f,c
  5506  003BEA  221E               	addwfc	(___xxtofl@arg+2)^0,f,c
  5507  003BEC  221F               	addwfc	(___xxtofl@arg+3)^0,f,c
  5508  003BEE  90D8               	bcf	status,0,c
  5509  003BF0  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5510  003BF2  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5511  003BF4  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5512  003BF6  321C               	rrcf	___xxtofl@arg^0,f,c
  5513  003BF8                     l1508:
  5514  003BF8  0E00               	movlw	0
  5515  003BFA  141C               	andwf	___xxtofl@arg^0,w,c
  5516  003BFC  6E16               	movwf	??___xxtofl^0,c
  5517  003BFE  0E00               	movlw	0
  5518  003C00  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  5519  003C02  6E17               	movwf	(??___xxtofl+1)^0,c
  5520  003C04  0E00               	movlw	0
  5521  003C06  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  5522  003C08  6E18               	movwf	(??___xxtofl+2)^0,c
  5523  003C0A  0EFF               	movlw	255
  5524  003C0C  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  5525  003C0E  6E19               	movwf	(??___xxtofl+3)^0,c
  5526  003C10  5016               	movf	??___xxtofl^0,w,c
  5527  003C12  1017               	iorwf	(??___xxtofl+1)^0,w,c
  5528  003C14  1018               	iorwf	(??___xxtofl+2)^0,w,c
  5529  003C16  1019               	iorwf	(??___xxtofl+3)^0,w,c
  5530  003C18  A4D8               	btfss	status,2,c
  5531  003C1A  EF11  F01E         	goto	u8031
  5532  003C1E  EF13  F01E         	goto	u8030
  5533  003C22                     u8031:
  5534  003C22  EFF0  F01D         	goto	l10354
  5535  003C26                     u8030:
  5536  003C26  EF1B  F01E         	goto	l10362
  5537  003C2A                     l10360:
  5538  003C2A  061B               	decf	___xxtofl@exp^0,f,c
  5539  003C2C  90D8               	bcf	status,0,c
  5540  003C2E  361C               	rlcf	___xxtofl@arg^0,f,c
  5541  003C30  361D               	rlcf	(___xxtofl@arg+1)^0,f,c
  5542  003C32  361E               	rlcf	(___xxtofl@arg+2)^0,f,c
  5543  003C34  361F               	rlcf	(___xxtofl@arg+3)^0,f,c
  5544  003C36                     l10362:
  5545  003C36  BE1E               	btfsc	(___xxtofl@arg+2)^0,7,c
  5546  003C38  EF20  F01E         	goto	u8041
  5547  003C3C  EF22  F01E         	goto	u8040
  5548  003C40                     u8041:
  5549  003C40  EF2A  F01E         	goto	l1515
  5550  003C44                     u8040:
  5551  003C44  0E02               	movlw	2
  5552  003C46  601B               	cpfslt	___xxtofl@exp^0,c
  5553  003C48  EF28  F01E         	goto	u8051
  5554  003C4C  EF2A  F01E         	goto	u8050
  5555  003C50                     u8051:
  5556  003C50  EF15  F01E         	goto	l10360
  5557  003C54                     u8050:
  5558  003C54                     l1515:
  5559  003C54  B01B               	btfsc	___xxtofl@exp^0,0,c
  5560  003C56  EF2F  F01E         	goto	u8061
  5561  003C5A  EF31  F01E         	goto	u8060
  5562  003C5E                     u8061:
  5563  003C5E  EF32  F01E         	goto	l10368
  5564  003C62                     u8060:
  5565  003C62  9E1E               	bcf	(___xxtofl@arg+2)^0,7,c
  5566  003C64                     l10368:
  5567  003C64  90D8               	bcf	status,0,c
  5568  003C66  321B               	rrcf	___xxtofl@exp^0,f,c
  5569  003C68  C01B  F016         	movff	___xxtofl@exp,??___xxtofl
  5570  003C6C  6A17               	clrf	(??___xxtofl+1)^0,c
  5571  003C6E  6A18               	clrf	(??___xxtofl+2)^0,c
  5572  003C70  6A19               	clrf	(??___xxtofl+3)^0,c
  5573  003C72  C016  F019         	movff	??___xxtofl,??___xxtofl+3
  5574  003C76  6A18               	clrf	(??___xxtofl+2)^0,c
  5575  003C78  6A17               	clrf	(??___xxtofl+1)^0,c
  5576  003C7A  6A16               	clrf	??___xxtofl^0,c
  5577  003C7C  5016               	movf	??___xxtofl^0,w,c
  5578  003C7E  121C               	iorwf	___xxtofl@arg^0,f,c
  5579  003C80  5017               	movf	(??___xxtofl+1)^0,w,c
  5580  003C82  121D               	iorwf	(___xxtofl@arg+1)^0,f,c
  5581  003C84  5018               	movf	(??___xxtofl+2)^0,w,c
  5582  003C86  121E               	iorwf	(___xxtofl@arg+2)^0,f,c
  5583  003C88  5019               	movf	(??___xxtofl+3)^0,w,c
  5584  003C8A  121F               	iorwf	(___xxtofl@arg+3)^0,f,c
  5585  003C8C  501A               	movf	___xxtofl@sign^0,w,c
  5586  003C8E  B4D8               	btfsc	status,2,c
  5587  003C90  EF4C  F01E         	goto	u8071
  5588  003C94  EF4E  F01E         	goto	u8070
  5589  003C98                     u8071:
  5590  003C98  EF56  F01E         	goto	l10378
  5591  003C9C                     u8070:
  5592  003C9C  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5593  003C9E  EF55  F01E         	goto	u8080
  5594  003CA2  EF53  F01E         	goto	u8081
  5595  003CA6                     u8081:
  5596  003CA6  EF56  F01E         	goto	l10378
  5597  003CAA                     u8080:
  5598  003CAA  8E1F               	bsf	(___xxtofl@arg+3)^0,7,c
  5599  003CAC                     l10378:
  5600  003CAC  C01C  F012         	movff	___xxtofl@arg,?___xxtofl
  5601  003CB0  C01D  F013         	movff	___xxtofl@arg+1,?___xxtofl+1
  5602  003CB4  C01E  F014         	movff	___xxtofl@arg+2,?___xxtofl+2
  5603  003CB8  C01F  F015         	movff	___xxtofl@arg+3,?___xxtofl+3
  5604  003CBC                     l1504:
  5605  003CBC  0012               	return		;funcret
  5606  003CBE                     __end_of___xxtofl:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function ___fltol *****************
  5610 ;; Defined at:
  5611 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  f1              4   56[COMRAM] unsigned char 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  exp1            1   65[COMRAM] unsigned char 
  5616 ;;  sign1           1   64[COMRAM] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  4   56[COMRAM] long 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5626 ;;      Params:         4       0       0       0       0       0       0
  5627 ;;      Locals:         2       0       0       0       0       0       0
  5628 ;;      Temps:          4       0       0       0       0       0       0
  5629 ;;      Totals:        10       0       0       0       0       0       0
  5630 ;;Total ram usage:       10 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; Hardware stack levels required when called: 4
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_touchScreenController
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text16
  5641  004A00                     __ptext16:
  5642                           	callstack 0
  5643  004A00                     ___fltol:
  5644                           	callstack 23
  5645  004A00  343B               	rlcf	(___fltol@f1+2)^0,w,c
  5646  004A02  343C               	rlcf	(___fltol@f1+3)^0,w,c
  5647  004A04  6E42               	movwf	___fltol@exp1^0,c
  5648  004A06  5042               	movf	___fltol@exp1^0,w,c
  5649  004A08  A4D8               	btfss	status,2,c
  5650  004A0A  EF09  F025         	goto	u7921
  5651  004A0E  EF0B  F025         	goto	u7920
  5652  004A12                     u7921:
  5653  004A12  EF15  F025         	goto	l10298
  5654  004A16                     u7920:
  5655  004A16                     l10294:
  5656  004A16  0E00               	movlw	0
  5657  004A18  6E39               	movwf	?___fltol^0,c
  5658  004A1A  0E00               	movlw	0
  5659  004A1C  6E3A               	movwf	(?___fltol+1)^0,c
  5660  004A1E  0E00               	movlw	0
  5661  004A20  6E3B               	movwf	(?___fltol+2)^0,c
  5662  004A22  0E00               	movlw	0
  5663  004A24  6E3C               	movwf	(?___fltol+3)^0,c
  5664  004A26  EF82  F025         	goto	l1143
  5665  004A2A                     l10298:
  5666  004A2A  C039  F03D         	movff	___fltol@f1,??___fltol
  5667  004A2E  C03A  F03E         	movff	___fltol@f1+1,??___fltol+1
  5668  004A32  C03B  F03F         	movff	___fltol@f1+2,??___fltol+2
  5669  004A36  C03C  F040         	movff	___fltol@f1+3,??___fltol+3
  5670  004A3A  0E20               	movlw	32
  5671  004A3C  EF25  F025         	goto	u7930
  5672  004A40                     u7935:
  5673  004A40  90D8               	bcf	status,0,c
  5674  004A42  3240               	rrcf	(??___fltol+3)^0,f,c
  5675  004A44  323F               	rrcf	(??___fltol+2)^0,f,c
  5676  004A46  323E               	rrcf	(??___fltol+1)^0,f,c
  5677  004A48  323D               	rrcf	??___fltol^0,f,c
  5678  004A4A                     u7930:
  5679  004A4A  2EE8               	decfsz	wreg,f,c
  5680  004A4C  EF20  F025         	goto	u7935
  5681  004A50  503D               	movf	??___fltol^0,w,c
  5682  004A52  6E41               	movwf	___fltol@sign1^0,c
  5683  004A54  8E3B               	bsf	(___fltol@f1+2)^0,7,c
  5684  004A56  0EFF               	movlw	255
  5685  004A58  1639               	andwf	___fltol@f1^0,f,c
  5686  004A5A  0EFF               	movlw	255
  5687  004A5C  163A               	andwf	(___fltol@f1+1)^0,f,c
  5688  004A5E  0EFF               	movlw	255
  5689  004A60  163B               	andwf	(___fltol@f1+2)^0,f,c
  5690  004A62  0E00               	movlw	0
  5691  004A64  163C               	andwf	(___fltol@f1+3)^0,f,c
  5692  004A66  0E96               	movlw	150
  5693  004A68  5E42               	subwf	___fltol@exp1^0,f,c
  5694  004A6A  BE42               	btfsc	___fltol@exp1^0,7,c
  5695  004A6C  EF3C  F025         	goto	u7940
  5696  004A70  EF3A  F025         	goto	u7941
  5697  004A74                     u7941:
  5698  004A74  EF52  F025         	goto	l10318
  5699  004A78                     u7940:
  5700  004A78  5042               	movf	___fltol@exp1^0,w,c
  5701  004A7A  0A80               	xorlw	128
  5702  004A7C  0F97               	addlw	151
  5703  004A7E  B0D8               	btfsc	status,0,c
  5704  004A80  EF44  F025         	goto	u7951
  5705  004A84  EF46  F025         	goto	u7950
  5706  004A88                     u7951:
  5707  004A88  EF48  F025         	goto	l10314
  5708  004A8C                     u7950:
  5709  004A8C  EF0B  F025         	goto	l10294
  5710  004A90                     l10314:
  5711  004A90  90D8               	bcf	status,0,c
  5712  004A92  323C               	rrcf	(___fltol@f1+3)^0,f,c
  5713  004A94  323B               	rrcf	(___fltol@f1+2)^0,f,c
  5714  004A96  323A               	rrcf	(___fltol@f1+1)^0,f,c
  5715  004A98  3239               	rrcf	___fltol@f1^0,f,c
  5716  004A9A  3E42               	incfsz	___fltol@exp1^0,f,c
  5717  004A9C  EF48  F025         	goto	l10314
  5718  004AA0  EF6A  F025         	goto	l10328
  5719  004AA4                     l10318:
  5720  004AA4  0E1F               	movlw	31
  5721  004AA6  6442               	cpfsgt	___fltol@exp1^0,c
  5722  004AA8  EF58  F025         	goto	u7961
  5723  004AAC  EF5A  F025         	goto	u7960
  5724  004AB0                     u7961:
  5725  004AB0  EF62  F025         	goto	l10326
  5726  004AB4                     u7960:
  5727  004AB4  EF0B  F025         	goto	l10294
  5728  004AB8                     l10324:
  5729  004AB8  90D8               	bcf	status,0,c
  5730  004ABA  3639               	rlcf	___fltol@f1^0,f,c
  5731  004ABC  363A               	rlcf	(___fltol@f1+1)^0,f,c
  5732  004ABE  363B               	rlcf	(___fltol@f1+2)^0,f,c
  5733  004AC0  363C               	rlcf	(___fltol@f1+3)^0,f,c
  5734  004AC2  0642               	decf	___fltol@exp1^0,f,c
  5735  004AC4                     l10326:
  5736  004AC4  5042               	movf	___fltol@exp1^0,w,c
  5737  004AC6  A4D8               	btfss	status,2,c
  5738  004AC8  EF68  F025         	goto	u7971
  5739  004ACC  EF6A  F025         	goto	u7970
  5740  004AD0                     u7971:
  5741  004AD0  EF5C  F025         	goto	l10324
  5742  004AD4                     u7970:
  5743  004AD4                     l10328:
  5744  004AD4  5041               	movf	___fltol@sign1^0,w,c
  5745  004AD6  B4D8               	btfsc	status,2,c
  5746  004AD8  EF70  F025         	goto	u7981
  5747  004ADC  EF72  F025         	goto	u7980
  5748  004AE0                     u7981:
  5749  004AE0  EF7A  F025         	goto	l10332
  5750  004AE4                     u7980:
  5751  004AE4  1E3C               	comf	(___fltol@f1+3)^0,f,c
  5752  004AE6  1E3B               	comf	(___fltol@f1+2)^0,f,c
  5753  004AE8  1E3A               	comf	(___fltol@f1+1)^0,f,c
  5754  004AEA  6C39               	negf	___fltol@f1^0,c
  5755  004AEC  0E00               	movlw	0
  5756  004AEE  223A               	addwfc	(___fltol@f1+1)^0,f,c
  5757  004AF0  223B               	addwfc	(___fltol@f1+2)^0,f,c
  5758  004AF2  223C               	addwfc	(___fltol@f1+3)^0,f,c
  5759  004AF4                     l10332:
  5760  004AF4  C039  F039         	movff	___fltol@f1,?___fltol
  5761  004AF8  C03A  F03A         	movff	___fltol@f1+1,?___fltol+1
  5762  004AFC  C03B  F03B         	movff	___fltol@f1+2,?___fltol+2
  5763  004B00  C03C  F03C         	movff	___fltol@f1+3,?___fltol+3
  5764  004B04                     l1143:
  5765  004B04  0012               	return		;funcret
  5766  004B06                     __end_of___fltol:
  5767                           	callstack 0
  5768                           
  5769 ;; *************** function ___fldiv *****************
  5770 ;; Defined at:
  5771 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  b               4   31[COMRAM] long 
  5774 ;;  a               4   35[COMRAM] long 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  grs             4   50[COMRAM] unsigned long 
  5777 ;;  rem             4   43[COMRAM] unsigned long 
  5778 ;;  new_exp         2   48[COMRAM] short 
  5779 ;;  aexp            1   55[COMRAM] unsigned char 
  5780 ;;  bexp            1   54[COMRAM] unsigned char 
  5781 ;;  sign            1   47[COMRAM] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  4   31[COMRAM] unsigned char 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5791 ;;      Params:         8       0       0       0       0       0       0
  5792 ;;      Locals:        13       0       0       0       0       0       0
  5793 ;;      Temps:          4       0       0       0       0       0       0
  5794 ;;      Totals:        25       0       0       0       0       0       0
  5795 ;;Total ram usage:       25 bytes
  5796 ;; Hardware stack levels used: 1
  5797 ;; Hardware stack levels required when called: 4
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_touchScreenController
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text17
  5806  002676                     __ptext17:
  5807                           	callstack 0
  5808  002676                     ___fldiv:
  5809                           	callstack 23
  5810  002676  5023               	movf	(___fldiv@b+3)^0,w,c
  5811  002678  0B80               	andlw	128
  5812  00267A  6E30               	movwf	___fldiv@sign^0,c
  5813  00267C  5023               	movf	(___fldiv@b+3)^0,w,c
  5814  00267E  2423               	addwf	(___fldiv@b+3)^0,w,c
  5815  002680  6E37               	movwf	___fldiv@bexp^0,c
  5816  002682  AE22               	btfss	(___fldiv@b+2)^0,7,c
  5817  002684  EF46  F013         	goto	u7691
  5818  002688  EF48  F013         	goto	u7690
  5819  00268C                     u7691:
  5820  00268C  EF49  F013         	goto	l10160
  5821  002690                     u7690:
  5822  002690  8037               	bsf	___fldiv@bexp^0,0,c
  5823  002692                     l10160:
  5824  002692  5037               	movf	___fldiv@bexp^0,w,c
  5825  002694  B4D8               	btfsc	status,2,c
  5826  002696  EF4F  F013         	goto	u7701
  5827  00269A  EF51  F013         	goto	u7700
  5828  00269E                     u7701:
  5829  00269E  EF66  F013         	goto	l10170
  5830  0026A2                     u7700:
  5831  0026A2  2837               	incf	___fldiv@bexp^0,w,c
  5832  0026A4  A4D8               	btfss	status,2,c
  5833  0026A6  EF57  F013         	goto	u7711
  5834  0026AA  EF59  F013         	goto	u7710
  5835  0026AE                     u7711:
  5836  0026AE  EF61  F013         	goto	l10166
  5837  0026B2                     u7710:
  5838  0026B2  0E00               	movlw	0
  5839  0026B4  6E20               	movwf	___fldiv@b^0,c
  5840  0026B6  0E00               	movlw	0
  5841  0026B8  6E21               	movwf	(___fldiv@b+1)^0,c
  5842  0026BA  0E00               	movlw	0
  5843  0026BC  6E22               	movwf	(___fldiv@b+2)^0,c
  5844  0026BE  0E00               	movlw	0
  5845  0026C0  6E23               	movwf	(___fldiv@b+3)^0,c
  5846  0026C2                     l10166:
  5847  0026C2  8E22               	bsf	(___fldiv@b+2)^0,7,c
  5848  0026C4  0E00               	movlw	0
  5849  0026C6  6E23               	movwf	(___fldiv@b+3)^0,c
  5850  0026C8  EF6E  F013         	goto	l10172
  5851  0026CC                     l10170:
  5852  0026CC  0E00               	movlw	0
  5853  0026CE  6E20               	movwf	___fldiv@b^0,c
  5854  0026D0  0E00               	movlw	0
  5855  0026D2  6E21               	movwf	(___fldiv@b+1)^0,c
  5856  0026D4  0E00               	movlw	0
  5857  0026D6  6E22               	movwf	(___fldiv@b+2)^0,c
  5858  0026D8  0E00               	movlw	0
  5859  0026DA  6E23               	movwf	(___fldiv@b+3)^0,c
  5860  0026DC                     l10172:
  5861  0026DC  5027               	movf	(___fldiv@a+3)^0,w,c
  5862  0026DE  0B80               	andlw	128
  5863  0026E0  1A30               	xorwf	___fldiv@sign^0,f,c
  5864  0026E2  5027               	movf	(___fldiv@a+3)^0,w,c
  5865  0026E4  2427               	addwf	(___fldiv@a+3)^0,w,c
  5866  0026E6  6E38               	movwf	___fldiv@aexp^0,c
  5867  0026E8  AE26               	btfss	(___fldiv@a+2)^0,7,c
  5868  0026EA  EF79  F013         	goto	u7721
  5869  0026EE  EF7B  F013         	goto	u7720
  5870  0026F2                     u7721:
  5871  0026F2  EF7C  F013         	goto	l10180
  5872  0026F6                     u7720:
  5873  0026F6  8038               	bsf	___fldiv@aexp^0,0,c
  5874  0026F8                     l10180:
  5875  0026F8  5038               	movf	___fldiv@aexp^0,w,c
  5876  0026FA  B4D8               	btfsc	status,2,c
  5877  0026FC  EF82  F013         	goto	u7731
  5878  002700  EF84  F013         	goto	u7730
  5879  002704                     u7731:
  5880  002704  EF99  F013         	goto	l10190
  5881  002708                     u7730:
  5882  002708  2838               	incf	___fldiv@aexp^0,w,c
  5883  00270A  A4D8               	btfss	status,2,c
  5884  00270C  EF8A  F013         	goto	u7741
  5885  002710  EF8C  F013         	goto	u7740
  5886  002714                     u7741:
  5887  002714  EF94  F013         	goto	l10186
  5888  002718                     u7740:
  5889  002718  0E00               	movlw	0
  5890  00271A  6E24               	movwf	___fldiv@a^0,c
  5891  00271C  0E00               	movlw	0
  5892  00271E  6E25               	movwf	(___fldiv@a+1)^0,c
  5893  002720  0E00               	movlw	0
  5894  002722  6E26               	movwf	(___fldiv@a+2)^0,c
  5895  002724  0E00               	movlw	0
  5896  002726  6E27               	movwf	(___fldiv@a+3)^0,c
  5897  002728                     l10186:
  5898  002728  8E26               	bsf	(___fldiv@a+2)^0,7,c
  5899  00272A  0E00               	movlw	0
  5900  00272C  6E27               	movwf	(___fldiv@a+3)^0,c
  5901  00272E  EFA1  F013         	goto	l10192
  5902  002732                     l10190:
  5903  002732  0E00               	movlw	0
  5904  002734  6E24               	movwf	___fldiv@a^0,c
  5905  002736  0E00               	movlw	0
  5906  002738  6E25               	movwf	(___fldiv@a+1)^0,c
  5907  00273A  0E00               	movlw	0
  5908  00273C  6E26               	movwf	(___fldiv@a+2)^0,c
  5909  00273E  0E00               	movlw	0
  5910  002740  6E27               	movwf	(___fldiv@a+3)^0,c
  5911  002742                     l10192:
  5912  002742  5024               	movf	___fldiv@a^0,w,c
  5913  002744  1025               	iorwf	(___fldiv@a+1)^0,w,c
  5914  002746  1026               	iorwf	(___fldiv@a+2)^0,w,c
  5915  002748  1027               	iorwf	(___fldiv@a+3)^0,w,c
  5916  00274A  A4D8               	btfss	status,2,c
  5917  00274C  EFAA  F013         	goto	u7751
  5918  002750  EFAC  F013         	goto	u7750
  5919  002754                     u7751:
  5920  002754  EFC4  F013         	goto	l10204
  5921  002758                     u7750:
  5922  002758  0E00               	movlw	0
  5923  00275A  6E20               	movwf	___fldiv@b^0,c
  5924  00275C  0E00               	movlw	0
  5925  00275E  6E21               	movwf	(___fldiv@b+1)^0,c
  5926  002760  0E00               	movlw	0
  5927  002762  6E22               	movwf	(___fldiv@b+2)^0,c
  5928  002764  0E00               	movlw	0
  5929  002766  6E23               	movwf	(___fldiv@b+3)^0,c
  5930  002768  0E80               	movlw	128
  5931  00276A  1222               	iorwf	(___fldiv@b+2)^0,f,c
  5932  00276C  0E7F               	movlw	127
  5933  00276E  1223               	iorwf	(___fldiv@b+3)^0,f,c
  5934  002770                     l10198:
  5935  002770  5030               	movf	___fldiv@sign^0,w,c
  5936  002772  1223               	iorwf	(___fldiv@b+3)^0,f,c
  5937  002774  C020  F020         	movff	___fldiv@b,?___fldiv
  5938  002778  C021  F021         	movff	___fldiv@b+1,?___fldiv+1
  5939  00277C  C022  F022         	movff	___fldiv@b+2,?___fldiv+2
  5940  002780  C023  F023         	movff	___fldiv@b+3,?___fldiv+3
  5941  002784  EF07  F015         	goto	l1428
  5942  002788                     l10204:
  5943  002788  5037               	movf	___fldiv@bexp^0,w,c
  5944  00278A  A4D8               	btfss	status,2,c
  5945  00278C  EFCA  F013         	goto	u7761
  5946  002790  EFCC  F013         	goto	u7760
  5947  002794                     u7761:
  5948  002794  EFD6  F013         	goto	l10212
  5949  002798                     u7760:
  5950  002798  0E00               	movlw	0
  5951  00279A  6E20               	movwf	?___fldiv^0,c
  5952  00279C  0E00               	movlw	0
  5953  00279E  6E21               	movwf	(?___fldiv+1)^0,c
  5954  0027A0  0E00               	movlw	0
  5955  0027A2  6E22               	movwf	(?___fldiv+2)^0,c
  5956  0027A4  0E00               	movlw	0
  5957  0027A6  6E23               	movwf	(?___fldiv+3)^0,c
  5958  0027A8  EF07  F015         	goto	l1428
  5959  0027AC                     l10212:
  5960  0027AC  5038               	movf	___fldiv@aexp^0,w,c
  5961  0027AE  C037  F028         	movff	___fldiv@bexp,??___fldiv
  5962  0027B2  6A29               	clrf	(??___fldiv+1)^0,c
  5963  0027B4  5E28               	subwf	??___fldiv^0,f,c
  5964  0027B6  0E00               	movlw	0
  5965  0027B8  5A29               	subwfb	(??___fldiv+1)^0,f,c
  5966  0027BA  0E7F               	movlw	127
  5967  0027BC  2428               	addwf	??___fldiv^0,w,c
  5968  0027BE  6E31               	movwf	___fldiv@new_exp^0,c
  5969  0027C0  0E00               	movlw	0
  5970  0027C2  2029               	addwfc	(??___fldiv+1)^0,w,c
  5971  0027C4  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  5972  0027C6  C020  F02C         	movff	___fldiv@b,___fldiv@rem
  5973  0027CA  C021  F02D         	movff	___fldiv@b+1,___fldiv@rem+1
  5974  0027CE  C022  F02E         	movff	___fldiv@b+2,___fldiv@rem+2
  5975  0027D2  C023  F02F         	movff	___fldiv@b+3,___fldiv@rem+3
  5976  0027D6  0E00               	movlw	0
  5977  0027D8  6E20               	movwf	___fldiv@b^0,c
  5978  0027DA  0E00               	movlw	0
  5979  0027DC  6E21               	movwf	(___fldiv@b+1)^0,c
  5980  0027DE  0E00               	movlw	0
  5981  0027E0  6E22               	movwf	(___fldiv@b+2)^0,c
  5982  0027E2  0E00               	movlw	0
  5983  0027E4  6E23               	movwf	(___fldiv@b+3)^0,c
  5984  0027E6  0E00               	movlw	0
  5985  0027E8  6E33               	movwf	___fldiv@grs^0,c
  5986  0027EA  0E00               	movlw	0
  5987  0027EC  6E34               	movwf	(___fldiv@grs+1)^0,c
  5988  0027EE  0E00               	movlw	0
  5989  0027F0  6E35               	movwf	(___fldiv@grs+2)^0,c
  5990  0027F2  0E00               	movlw	0
  5991  0027F4  6E36               	movwf	(___fldiv@grs+3)^0,c
  5992  0027F6  0E00               	movlw	0
  5993  0027F8  6E38               	movwf	___fldiv@aexp^0,c
  5994  0027FA  EF37  F014         	goto	l1430
  5995  0027FE                     l10222:
  5996  0027FE  5038               	movf	___fldiv@aexp^0,w,c
  5997  002800  B4D8               	btfsc	status,2,c
  5998  002802  EF05  F014         	goto	u7771
  5999  002806  EF07  F014         	goto	u7770
  6000  00280A                     u7771:
  6001  00280A  EF1E  F014         	goto	l10230
  6002  00280E                     u7770:
  6003  00280E  90D8               	bcf	status,0,c
  6004  002810  362C               	rlcf	___fldiv@rem^0,f,c
  6005  002812  362D               	rlcf	(___fldiv@rem+1)^0,f,c
  6006  002814  362E               	rlcf	(___fldiv@rem+2)^0,f,c
  6007  002816  362F               	rlcf	(___fldiv@rem+3)^0,f,c
  6008  002818  90D8               	bcf	status,0,c
  6009  00281A  3620               	rlcf	___fldiv@b^0,f,c
  6010  00281C  3621               	rlcf	(___fldiv@b+1)^0,f,c
  6011  00281E  3622               	rlcf	(___fldiv@b+2)^0,f,c
  6012  002820  3623               	rlcf	(___fldiv@b+3)^0,f,c
  6013  002822  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6014  002824  EF16  F014         	goto	u7781
  6015  002828  EF18  F014         	goto	u7780
  6016  00282C                     u7781:
  6017  00282C  EF19  F014         	goto	l1433
  6018  002830                     u7780:
  6019  002830  8020               	bsf	___fldiv@b^0,0,c
  6020  002832                     l1433:
  6021  002832  90D8               	bcf	status,0,c
  6022  002834  3633               	rlcf	___fldiv@grs^0,f,c
  6023  002836  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  6024  002838  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  6025  00283A  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  6026  00283C                     l10230:
  6027  00283C  5024               	movf	___fldiv@a^0,w,c
  6028  00283E  5C2C               	subwf	___fldiv@rem^0,w,c
  6029  002840  5025               	movf	(___fldiv@a+1)^0,w,c
  6030  002842  582D               	subwfb	(___fldiv@rem+1)^0,w,c
  6031  002844  5026               	movf	(___fldiv@a+2)^0,w,c
  6032  002846  582E               	subwfb	(___fldiv@rem+2)^0,w,c
  6033  002848  5027               	movf	(___fldiv@a+3)^0,w,c
  6034  00284A  582F               	subwfb	(___fldiv@rem+3)^0,w,c
  6035  00284C  A0D8               	btfss	status,0,c
  6036  00284E  EF2B  F014         	goto	u7791
  6037  002852  EF2D  F014         	goto	u7790
  6038  002856                     u7791:
  6039  002856  EF36  F014         	goto	l10236
  6040  00285A                     u7790:
  6041  00285A  8C36               	bsf	(___fldiv@grs+3)^0,6,c
  6042  00285C  5024               	movf	___fldiv@a^0,w,c
  6043  00285E  5E2C               	subwf	___fldiv@rem^0,f,c
  6044  002860  5025               	movf	(___fldiv@a+1)^0,w,c
  6045  002862  5A2D               	subwfb	(___fldiv@rem+1)^0,f,c
  6046  002864  5026               	movf	(___fldiv@a+2)^0,w,c
  6047  002866  5A2E               	subwfb	(___fldiv@rem+2)^0,f,c
  6048  002868  5027               	movf	(___fldiv@a+3)^0,w,c
  6049  00286A  5A2F               	subwfb	(___fldiv@rem+3)^0,f,c
  6050  00286C                     l10236:
  6051  00286C  2A38               	incf	___fldiv@aexp^0,f,c
  6052  00286E                     l1430:
  6053  00286E  0E19               	movlw	25
  6054  002870  6438               	cpfsgt	___fldiv@aexp^0,c
  6055  002872  EF3D  F014         	goto	u7801
  6056  002876  EF3F  F014         	goto	u7800
  6057  00287A                     u7801:
  6058  00287A  EFFF  F013         	goto	l10222
  6059  00287E                     u7800:
  6060  00287E  502C               	movf	___fldiv@rem^0,w,c
  6061  002880  102D               	iorwf	(___fldiv@rem+1)^0,w,c
  6062  002882  102E               	iorwf	(___fldiv@rem+2)^0,w,c
  6063  002884  102F               	iorwf	(___fldiv@rem+3)^0,w,c
  6064  002886  B4D8               	btfsc	status,2,c
  6065  002888  EF48  F014         	goto	u7811
  6066  00288C  EF4A  F014         	goto	u7810
  6067  002890                     u7811:
  6068  002890  EF62  F014         	goto	l10248
  6069  002894                     u7810:
  6070  002894  8033               	bsf	___fldiv@grs^0,0,c
  6071  002896  EF62  F014         	goto	l10248
  6072  00289A                     l10242:
  6073  00289A  90D8               	bcf	status,0,c
  6074  00289C  3620               	rlcf	___fldiv@b^0,f,c
  6075  00289E  3621               	rlcf	(___fldiv@b+1)^0,f,c
  6076  0028A0  3622               	rlcf	(___fldiv@b+2)^0,f,c
  6077  0028A2  3623               	rlcf	(___fldiv@b+3)^0,f,c
  6078  0028A4  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6079  0028A6  EF57  F014         	goto	u7821
  6080  0028AA  EF59  F014         	goto	u7820
  6081  0028AE                     u7821:
  6082  0028AE  EF5A  F014         	goto	l1439
  6083  0028B2                     u7820:
  6084  0028B2  8020               	bsf	___fldiv@b^0,0,c
  6085  0028B4                     l1439:
  6086  0028B4  90D8               	bcf	status,0,c
  6087  0028B6  3633               	rlcf	___fldiv@grs^0,f,c
  6088  0028B8  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  6089  0028BA  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  6090  0028BC  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  6091  0028BE  0631               	decf	___fldiv@new_exp^0,f,c
  6092  0028C0  A0D8               	btfss	status,0,c
  6093  0028C2  0632               	decf	(___fldiv@new_exp+1)^0,f,c
  6094  0028C4                     l10248:
  6095  0028C4  AE22               	btfss	(___fldiv@b+2)^0,7,c
  6096  0028C6  EF67  F014         	goto	u7831
  6097  0028CA  EF69  F014         	goto	u7830
  6098  0028CE                     u7831:
  6099  0028CE  EF4D  F014         	goto	l10242
  6100  0028D2                     u7830:
  6101  0028D2  0E00               	movlw	0
  6102  0028D4  6E38               	movwf	___fldiv@aexp^0,c
  6103  0028D6  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6104  0028D8  EF70  F014         	goto	u7841
  6105  0028DC  EF72  F014         	goto	u7840
  6106  0028E0                     u7841:
  6107  0028E0  EF96  F014         	goto	l1441
  6108  0028E4                     u7840:
  6109  0028E4  0EFF               	movlw	255
  6110  0028E6  1433               	andwf	___fldiv@grs^0,w,c
  6111  0028E8  6E28               	movwf	??___fldiv^0,c
  6112  0028EA  0EFF               	movlw	255
  6113  0028EC  1434               	andwf	(___fldiv@grs+1)^0,w,c
  6114  0028EE  6E29               	movwf	(??___fldiv+1)^0,c
  6115  0028F0  0EFF               	movlw	255
  6116  0028F2  1435               	andwf	(___fldiv@grs+2)^0,w,c
  6117  0028F4  6E2A               	movwf	(??___fldiv+2)^0,c
  6118  0028F6  0E7F               	movlw	127
  6119  0028F8  1436               	andwf	(___fldiv@grs+3)^0,w,c
  6120  0028FA  6E2B               	movwf	(??___fldiv+3)^0,c
  6121  0028FC  5028               	movf	??___fldiv^0,w,c
  6122  0028FE  1029               	iorwf	(??___fldiv+1)^0,w,c
  6123  002900  102A               	iorwf	(??___fldiv+2)^0,w,c
  6124  002902  102B               	iorwf	(??___fldiv+3)^0,w,c
  6125  002904  B4D8               	btfsc	status,2,c
  6126  002906  EF87  F014         	goto	u7851
  6127  00290A  EF89  F014         	goto	u7850
  6128  00290E                     u7851:
  6129  00290E  EF8D  F014         	goto	l1442
  6130  002912                     u7850:
  6131  002912                     l10256:
  6132  002912  0E01               	movlw	1
  6133  002914  6E38               	movwf	___fldiv@aexp^0,c
  6134  002916  EF96  F014         	goto	l1441
  6135  00291A                     l1442:
  6136  00291A  A020               	btfss	___fldiv@b^0,0,c
  6137  00291C  EF92  F014         	goto	u7861
  6138  002920  EF94  F014         	goto	u7860
  6139  002924                     u7861:
  6140  002924  EF96  F014         	goto	l1441
  6141  002928                     u7860:
  6142  002928  EF89  F014         	goto	l10256
  6143  00292C                     l1441:
  6144  00292C  5038               	movf	___fldiv@aexp^0,w,c
  6145  00292E  B4D8               	btfsc	status,2,c
  6146  002930  EF9C  F014         	goto	u7871
  6147  002934  EF9E  F014         	goto	u7870
  6148  002938                     u7871:
  6149  002938  EFC2  F014         	goto	l10268
  6150  00293C                     u7870:
  6151  00293C  0E01               	movlw	1
  6152  00293E  2620               	addwf	___fldiv@b^0,f,c
  6153  002940  0E00               	movlw	0
  6154  002942  2221               	addwfc	(___fldiv@b+1)^0,f,c
  6155  002944  2222               	addwfc	(___fldiv@b+2)^0,f,c
  6156  002946  2223               	addwfc	(___fldiv@b+3)^0,f,c
  6157  002948  A023               	btfss	(___fldiv@b+3)^0,0,c
  6158  00294A  EFA9  F014         	goto	u7881
  6159  00294E  EFAB  F014         	goto	u7880
  6160  002952                     u7881:
  6161  002952  EFC2  F014         	goto	l10268
  6162  002956                     u7880:
  6163  002956  C020  F028         	movff	___fldiv@b,??___fldiv
  6164  00295A  C021  F029         	movff	___fldiv@b+1,??___fldiv+1
  6165  00295E  C022  F02A         	movff	___fldiv@b+2,??___fldiv+2
  6166  002962  C023  F02B         	movff	___fldiv@b+3,??___fldiv+3
  6167  002966  342B               	rlcf	(??___fldiv+3)^0,w,c
  6168  002968  322B               	rrcf	(??___fldiv+3)^0,f,c
  6169  00296A  322A               	rrcf	(??___fldiv+2)^0,f,c
  6170  00296C  3229               	rrcf	(??___fldiv+1)^0,f,c
  6171  00296E  3228               	rrcf	??___fldiv^0,f,c
  6172  002970  C028  F020         	movff	??___fldiv,___fldiv@b
  6173  002974  C029  F021         	movff	??___fldiv+1,___fldiv@b+1
  6174  002978  C02A  F022         	movff	??___fldiv+2,___fldiv@b+2
  6175  00297C  C02B  F023         	movff	??___fldiv+3,___fldiv@b+3
  6176  002980  4A31               	infsnz	___fldiv@new_exp^0,f,c
  6177  002982  2A32               	incf	(___fldiv@new_exp+1)^0,f,c
  6178  002984                     l10268:
  6179  002984  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6180  002986  EFCD  F014         	goto	u7891
  6181  00298A  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  6182  00298C  E108               	bnz	u7890
  6183  00298E  2831               	incf	___fldiv@new_exp^0,w,c
  6184  002990  A0D8               	btfss	status,0,c
  6185  002992  EFCD  F014         	goto	u7891
  6186  002996  EFCF  F014         	goto	u7890
  6187  00299A                     u7891:
  6188  00299A  EFDA  F014         	goto	l10272
  6189  00299E                     u7890:
  6190  00299E  0E00               	movlw	0
  6191  0029A0  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  6192  0029A2  6831               	setf	___fldiv@new_exp^0,c
  6193  0029A4  0E00               	movlw	0
  6194  0029A6  6E20               	movwf	___fldiv@b^0,c
  6195  0029A8  0E00               	movlw	0
  6196  0029AA  6E21               	movwf	(___fldiv@b+1)^0,c
  6197  0029AC  0E00               	movlw	0
  6198  0029AE  6E22               	movwf	(___fldiv@b+2)^0,c
  6199  0029B0  0E00               	movlw	0
  6200  0029B2  6E23               	movwf	(___fldiv@b+3)^0,c
  6201  0029B4                     l10272:
  6202  0029B4  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6203  0029B6  EFE7  F014         	goto	u7900
  6204  0029BA  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  6205  0029BC  E106               	bnz	u7901
  6206  0029BE  0431               	decf	___fldiv@new_exp^0,w,c
  6207  0029C0  B0D8               	btfsc	status,0,c
  6208  0029C2  EFE5  F014         	goto	u7901
  6209  0029C6  EFE7  F014         	goto	u7900
  6210  0029CA                     u7901:
  6211  0029CA  EFF5  F014         	goto	l10276
  6212  0029CE                     u7900:
  6213  0029CE  0E00               	movlw	0
  6214  0029D0  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  6215  0029D2  0E00               	movlw	0
  6216  0029D4  6E31               	movwf	___fldiv@new_exp^0,c
  6217  0029D6  0E00               	movlw	0
  6218  0029D8  6E20               	movwf	___fldiv@b^0,c
  6219  0029DA  0E00               	movlw	0
  6220  0029DC  6E21               	movwf	(___fldiv@b+1)^0,c
  6221  0029DE  0E00               	movlw	0
  6222  0029E0  6E22               	movwf	(___fldiv@b+2)^0,c
  6223  0029E2  0E00               	movlw	0
  6224  0029E4  6E23               	movwf	(___fldiv@b+3)^0,c
  6225  0029E6  0E00               	movlw	0
  6226  0029E8  6E30               	movwf	___fldiv@sign^0,c
  6227  0029EA                     l10276:
  6228  0029EA  C031  F037         	movff	___fldiv@new_exp,___fldiv@bexp
  6229  0029EE  A037               	btfss	___fldiv@bexp^0,0,c
  6230  0029F0  EFFC  F014         	goto	u7911
  6231  0029F4  EFFE  F014         	goto	u7910
  6232  0029F8                     u7911:
  6233  0029F8  EF01  F015         	goto	l10282
  6234  0029FC                     u7910:
  6235  0029FC  8E22               	bsf	(___fldiv@b+2)^0,7,c
  6236  0029FE  EF02  F015         	goto	l10284
  6237  002A02                     l10282:
  6238  002A02  9E22               	bcf	(___fldiv@b+2)^0,7,c
  6239  002A04                     l10284:
  6240  002A04  90D8               	bcf	status,0,c
  6241  002A06  3037               	rrcf	___fldiv@bexp^0,w,c
  6242  002A08  6E23               	movwf	(___fldiv@b+3)^0,c
  6243  002A0A  EFB8  F013         	goto	l10198
  6244  002A0E                     l1428:
  6245  002A0E  0012               	return		;funcret
  6246  002A10                     __end_of___fldiv:
  6247                           	callstack 0
  6248                           
  6249 ;; *************** function _GameParameters_setY *****************
  6250 ;; Defined at:
  6251 ;;		line 53 in file "class/gameParameters.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  s               2   17[COMRAM] PTR struct GameParameter
  6254 ;;		 -> g1(218), 
  6255 ;;  value           2   19[COMRAM] unsigned short 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6267 ;;      Params:         4       0       0       0       0       0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0
  6270 ;;      Totals:         4       0       0       0       0       0       0
  6271 ;;Total ram usage:        4 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; Hardware stack levels required when called: 4
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_touchScreenController
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text18
  6282  0066A6                     __ptext18:
  6283                           	callstack 0
  6284  0066A6                     _GameParameters_setY:
  6285                           	callstack 23
  6286  0066A6                     
  6287                           ;class/gameParameters.c: 53: void GameParameters_setY(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 54: {;class/gameParameters.c: 55:     s->y=value;
  6288  0066A6  EE20 F006          	lfsr	2,6
  6289  0066AA  5012               	movf	GameParameters_setY@s^0,w,c
  6290  0066AC  26D9               	addwf	fsr2l,f,c
  6291  0066AE  5013               	movf	(GameParameters_setY@s+1)^0,w,c
  6292  0066B0  22DA               	addwfc	fsr2h,f,c
  6293  0066B2  C014  FFDE         	movff	GameParameters_setY@value,postinc2
  6294  0066B6  C015  FFDD         	movff	GameParameters_setY@value+1,postdec2
  6295  0066BA  0012               	return		;funcret
  6296  0066BC                     __end_of_GameParameters_setY:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _GameParameters_setX *****************
  6300 ;; Defined at:
  6301 ;;		line 49 in file "class/gameParameters.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  s               2   17[COMRAM] PTR struct GameParameter
  6304 ;;		 -> g1(218), 
  6305 ;;  value           2   19[COMRAM] unsigned short 
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;		None
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  1    wreg      void 
  6310 ;; Registers used:
  6311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6317 ;;      Params:         4       0       0       0       0       0       0
  6318 ;;      Locals:         0       0       0       0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0
  6320 ;;      Totals:         4       0       0       0       0       0       0
  6321 ;;Total ram usage:        4 bytes
  6322 ;; Hardware stack levels used: 1
  6323 ;; Hardware stack levels required when called: 4
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_touchScreenController
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text19
  6332  0066BC                     __ptext19:
  6333                           	callstack 0
  6334  0066BC                     _GameParameters_setX:
  6335                           	callstack 23
  6336  0066BC                     
  6337                           ;class/gameParameters.c: 49: void GameParameters_setX(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 50: {;class/gameParameters.c: 51:     s->x=value;
  6338  0066BC  EE20 F004          	lfsr	2,4
  6339  0066C0  5012               	movf	GameParameters_setX@s^0,w,c
  6340  0066C2  26D9               	addwf	fsr2l,f,c
  6341  0066C4  5013               	movf	(GameParameters_setX@s+1)^0,w,c
  6342  0066C6  22DA               	addwfc	fsr2h,f,c
  6343  0066C8  C014  FFDE         	movff	GameParameters_setX@value,postinc2
  6344  0066CC  C015  FFDD         	movff	GameParameters_setX@value+1,postdec2
  6345  0066D0  0012               	return		;funcret
  6346  0066D2                     __end_of_GameParameters_setX:
  6347                           	callstack 0
  6348                           
  6349 ;; *************** function _sleepSM *****************
  6350 ;; Defined at:
  6351 ;;		line 19 in file "stateMachine/sleepSM.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  ev              1    wreg     unsigned char 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  ev              1    0[COMRAM] unsigned char 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6365 ;;      Params:         0       0       0       0       0       0       0
  6366 ;;      Locals:         0       0       0       0       0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0       0
  6368 ;;      Totals:         0       0       0       0       0       0       0
  6369 ;;Total ram usage:        0 bytes
  6370 ;; Hardware stack levels used: 1
  6371 ;; Hardware stack levels required when called: 4
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_Factory_exec
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text20
  6380  00675C                     __ptext20:
  6381                           	callstack 0
  6382  00675C                     _sleepSM:
  6383                           	callstack 25
  6384  00675C  0012               	return		;funcret
  6385  00675E                     __end_of_sleepSM:
  6386                           	callstack 0
  6387                           
  6388 ;; *************** function _gameControllerSM *****************
  6389 ;; Defined at:
  6390 ;;		line 31 in file "stateMachine/gameController.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  ev              1    wreg     unsigned char 
  6393 ;;  g               2   59[COMRAM] PTR struct GameParameter
  6394 ;;		 -> g1(218), 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  ev              1   63[COMRAM] unsigned char 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  1    wreg      void 
  6399 ;; Registers used:
  6400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6406 ;;      Params:         2       0       0       0       0       0       0
  6407 ;;      Locals:         1       0       0       0       0       0       0
  6408 ;;      Temps:          2       0       0       0       0       0       0
  6409 ;;      Totals:         5       0       0       0       0       0       0
  6410 ;;Total ram usage:        5 bytes
  6411 ;; Hardware stack levels used: 1
  6412 ;; Hardware stack levels required when called: 9
  6413 ;; This function calls:
  6414 ;;		_XF_scheduleTimer
  6415 ;;		_gameControllerController
  6416 ;; This function is called by:
  6417 ;;		_Factory_exec
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text21
  6422  003E72                     __ptext21:
  6423                           	callstack 0
  6424  003E72                     _gameControllerSM:
  6425                           	callstack 20
  6426                           
  6427                           ;incstack = 0
  6428                           ;gameControllerSM@ev stored from wreg
  6429  003E72  6E40               	movwf	gameControllerSM@ev^0,c
  6430  003E74                     
  6431                           ;stateMachine/gameController.c: 31: void gameControllerSM(Event ev,GameParameters* g);st
      +                          ateMachine/gameController.c: 32: {;stateMachine/gameController.c: 33:    switch(gameStat
      +                          eMachine)
  6432  003E74  EFDB  F01F         	goto	l10630
  6433  003E78                     l10586:
  6434                           
  6435                           ;stateMachine/gameController.c: 36:             gameControllerController(g,NULLEVENT);
  6436  003E78  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6437  003E7C  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6438  003E80  0E00               	movlw	0
  6439  003E82  6E39               	movwf	gameControllerController@ev^0,c
  6440  003E84  EC39  F011         	call	_gameControllerController	;wreg free
  6441  003E88                     
  6442                           ;stateMachine/gameController.c: 37:             if(ev==evParameters)
  6443  003E88  0E07               	movlw	7
  6444  003E8A  1840               	xorwf	gameControllerSM@ev^0,w,c
  6445  003E8C  A4D8               	btfss	status,2,c
  6446  003E8E  EF4B  F01F         	goto	u8261
  6447  003E92  EF4D  F01F         	goto	u8260
  6448  003E96                     u8261:
  6449  003E96  EF4F  F01F         	goto	l10592
  6450  003E9A                     u8260:
  6451  003E9A                     
  6452                           ;stateMachine/gameController.c: 38:             {;stateMachine/gameController.c: 39:    
      +                                       gameStateMachine=PARAMETERS;
  6453  003E9A  0E01               	movlw	1
  6454  003E9C  6E4D               	movwf	_gameStateMachine^0,c
  6455  003E9E                     l10592:
  6456                           
  6457                           ;stateMachine/gameController.c: 41:             if(ev==evOnePlayer)
  6458  003E9E  0E05               	movlw	5
  6459  003EA0  1840               	xorwf	gameControllerSM@ev^0,w,c
  6460  003EA2  A4D8               	btfss	status,2,c
  6461  003EA4  EF56  F01F         	goto	u8271
  6462  003EA8  EF58  F01F         	goto	u8270
  6463  003EAC                     u8271:
  6464  003EAC  EFFC  F01F         	goto	l632
  6465  003EB0                     u8270:
  6466  003EB0                     
  6467                           ;stateMachine/gameController.c: 42:             {;stateMachine/gameController.c: 43:    
      +                                       gameStateMachine=LOCAL;
  6468  003EB0  0E02               	movlw	2
  6469  003EB2  6E4D               	movwf	_gameStateMachine^0,c
  6470  003EB4                     
  6471                           ;stateMachine/gameController.c: 44:                 if(g->level==3)
  6472  003EB4  EE20 F008          	lfsr	2,8
  6473  003EB8  503C               	movf	gameControllerSM@g^0,w,c
  6474  003EBA  26D9               	addwf	fsr2l,f,c
  6475  003EBC  503D               	movf	(gameControllerSM@g+1)^0,w,c
  6476  003EBE  22DA               	addwfc	fsr2h,f,c
  6477  003EC0  0E03               	movlw	3
  6478  003EC2  18DE               	xorwf	postinc2,w,c
  6479  003EC4  10DE               	iorwf	postinc2,w,c
  6480  003EC6  A4D8               	btfss	status,2,c
  6481  003EC8  EF68  F01F         	goto	u8281
  6482  003ECC  EF6A  F01F         	goto	u8280
  6483  003ED0                     u8281:
  6484  003ED0  EF76  F01F         	goto	l10600
  6485  003ED4                     u8280:
  6486  003ED4                     
  6487                           ;stateMachine/gameController.c: 45:                 {;stateMachine/gameController.c: 46:
      +                                               XF_scheduleTimer(1,evGameUpdate,1);
  6488  003ED4  0E00               	movlw	0
  6489  003ED6  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  6490  003ED8  0E01               	movlw	1
  6491  003EDA  6E13               	movwf	XF_scheduleTimer@tm^0,c
  6492  003EDC  0E0A               	movlw	10
  6493  003EDE  6E15               	movwf	XF_scheduleTimer@ev^0,c
  6494  003EE0  0E01               	movlw	1
  6495  003EE2  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  6496  003EE4  EC95  F02F         	call	_XF_scheduleTimer	;wreg free
  6497                           
  6498                           ;stateMachine/gameController.c: 47:                 }
  6499  003EE8  EFFC  F01F         	goto	l632
  6500  003EEC                     l10600:
  6501  003EEC  EE20 F008          	lfsr	2,8
  6502  003EF0  503C               	movf	gameControllerSM@g^0,w,c
  6503  003EF2  26D9               	addwf	fsr2l,f,c
  6504  003EF4  503D               	movf	(gameControllerSM@g+1)^0,w,c
  6505  003EF6  22DA               	addwfc	fsr2h,f,c
  6506  003EF8  0E02               	movlw	2
  6507  003EFA  18DE               	xorwf	postinc2,w,c
  6508  003EFC  10DE               	iorwf	postinc2,w,c
  6509  003EFE  A4D8               	btfss	status,2,c
  6510  003F00  EF84  F01F         	goto	u8291
  6511  003F04  EF86  F01F         	goto	u8290
  6512  003F08                     u8291:
  6513  003F08  EF92  F01F         	goto	l10604
  6514  003F0C                     u8290:
  6515  003F0C                     
  6516                           ;stateMachine/gameController.c: 49:                 {;stateMachine/gameController.c: 50:
      +                                               XF_scheduleTimer(2,evGameUpdate,1);
  6517  003F0C  0E00               	movlw	0
  6518  003F0E  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  6519  003F10  0E02               	movlw	2
  6520  003F12  6E13               	movwf	XF_scheduleTimer@tm^0,c
  6521  003F14  0E0A               	movlw	10
  6522  003F16  6E15               	movwf	XF_scheduleTimer@ev^0,c
  6523  003F18  0E01               	movlw	1
  6524  003F1A  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  6525  003F1C  EC95  F02F         	call	_XF_scheduleTimer	;wreg free
  6526                           
  6527                           ;stateMachine/gameController.c: 51:                 }
  6528  003F20  EFFC  F01F         	goto	l632
  6529  003F24                     l10604:
  6530  003F24  EE20 F008          	lfsr	2,8
  6531  003F28  503C               	movf	gameControllerSM@g^0,w,c
  6532  003F2A  26D9               	addwf	fsr2l,f,c
  6533  003F2C  503D               	movf	(gameControllerSM@g+1)^0,w,c
  6534  003F2E  22DA               	addwfc	fsr2h,f,c
  6535  003F30  04DE               	decf	postinc2,w,c
  6536  003F32  10DE               	iorwf	postinc2,w,c
  6537  003F34  A4D8               	btfss	status,2,c
  6538  003F36  EF9F  F01F         	goto	u8301
  6539  003F3A  EFA1  F01F         	goto	u8300
  6540  003F3E                     u8301:
  6541  003F3E  EFAD  F01F         	goto	l616
  6542  003F42                     u8300:
  6543  003F42                     
  6544                           ;stateMachine/gameController.c: 53:                 {;stateMachine/gameController.c: 54:
      +                                               XF_scheduleTimer(3,evGameUpdate,1);
  6545  003F42  0E00               	movlw	0
  6546  003F44  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  6547  003F46  0E03               	movlw	3
  6548  003F48  6E13               	movwf	XF_scheduleTimer@tm^0,c
  6549  003F4A  0E0A               	movlw	10
  6550  003F4C  6E15               	movwf	XF_scheduleTimer@ev^0,c
  6551  003F4E  0E01               	movlw	1
  6552  003F50  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  6553  003F52  EC95  F02F         	call	_XF_scheduleTimer	;wreg free
  6554  003F56  EFFC  F01F         	goto	l632
  6555  003F5A                     l616:
  6556                           
  6557                           ;stateMachine/gameController.c: 57:             break;
  6558  003F5A  EFFC  F01F         	goto	l632
  6559  003F5E                     l10614:
  6560                           
  6561                           ;stateMachine/gameController.c: 65:             gameControllerController(g,NULLEVENT);
  6562  003F5E  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6563  003F62  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6564  003F66  0E00               	movlw	0
  6565  003F68  6E39               	movwf	gameControllerController@ev^0,c
  6566  003F6A  EC39  F011         	call	_gameControllerController	;wreg free
  6567  003F6E                     
  6568                           ;stateMachine/gameController.c: 66:             if(ev==evLeaveParam)
  6569  003F6E  0E08               	movlw	8
  6570  003F70  1840               	xorwf	gameControllerSM@ev^0,w,c
  6571  003F72  A4D8               	btfss	status,2,c
  6572  003F74  EFBE  F01F         	goto	u8311
  6573  003F78  EFC0  F01F         	goto	u8310
  6574  003F7C                     u8311:
  6575  003F7C  EFFC  F01F         	goto	l632
  6576  003F80                     u8310:
  6577  003F80                     
  6578                           ;stateMachine/gameController.c: 67:             {;stateMachine/gameController.c: 68:    
      +                                       gameStateMachine=NOGAME;
  6579  003F80  0E00               	movlw	0
  6580  003F82  6E4D               	movwf	_gameStateMachine^0,c
  6581  003F84  EFFC  F01F         	goto	l632
  6582  003F88                     l10620:
  6583                           
  6584                           ;stateMachine/gameController.c: 73:             if(ev==evEndGame)
  6585  003F88  0E09               	movlw	9
  6586  003F8A  1840               	xorwf	gameControllerSM@ev^0,w,c
  6587  003F8C  A4D8               	btfss	status,2,c
  6588  003F8E  EFCB  F01F         	goto	u8321
  6589  003F92  EFCD  F01F         	goto	u8320
  6590  003F96                     u8321:
  6591  003F96  EFD1  F01F         	goto	l10624
  6592  003F9A                     u8320:
  6593  003F9A                     
  6594                           ;stateMachine/gameController.c: 74:             {;stateMachine/gameController.c: 75:    
      +                                       gameStateMachine=ENDGAME;
  6595  003F9A  0E04               	movlw	4
  6596  003F9C  6E4D               	movwf	_gameStateMachine^0,c
  6597                           
  6598                           ;stateMachine/gameController.c: 76:             }
  6599  003F9E  EFFC  F01F         	goto	l632
  6600  003FA2                     l10624:
  6601                           
  6602                           ;stateMachine/gameController.c: 78:             {;stateMachine/gameController.c: 79:    
      +                                       gameControllerController(g,ev);
  6603  003FA2  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6604  003FA6  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6605  003FAA  C040  F039         	movff	gameControllerSM@ev,gameControllerController@ev
  6606  003FAE  EC39  F011         	call	_gameControllerController	;wreg free
  6607  003FB2  EFFC  F01F         	goto	l632
  6608  003FB6                     l10630:
  6609  003FB6  504D               	movf	_gameStateMachine^0,w,c
  6610  003FB8  6E3E               	movwf	??_gameControllerSM^0,c
  6611  003FBA  6A3F               	clrf	(??_gameControllerSM+1)^0,c
  6612                           
  6613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6614                           ; Switch size 1, requested type "simple"
  6615                           ; Number of cases is 1, Range of values is 0 to 0
  6616                           ; switch strategies available:
  6617                           ; Name         Instructions Cycles
  6618                           ; simple_byte            4     3 (average)
  6619                           ;	Chosen strategy is simple_byte
  6620  003FBC  503F               	movf	(??_gameControllerSM+1)^0,w,c
  6621  003FBE  0A00               	xorlw	0	; case 0
  6622  003FC0  B4D8               	btfsc	status,2,c
  6623  003FC2  EFE5  F01F         	goto	l10902
  6624  003FC6  EFFC  F01F         	goto	l632
  6625  003FCA                     l10902:
  6626                           
  6627                           ; Switch size 1, requested type "simple"
  6628                           ; Number of cases is 5, Range of values is 0 to 4
  6629                           ; switch strategies available:
  6630                           ; Name         Instructions Cycles
  6631                           ; simple_byte           16     9 (average)
  6632                           ;	Chosen strategy is simple_byte
  6633  003FCA  503E               	movf	??_gameControllerSM^0,w,c
  6634  003FCC  0A00               	xorlw	0	; case 0
  6635  003FCE  B4D8               	btfsc	status,2,c
  6636  003FD0  EF3C  F01F         	goto	l10586
  6637  003FD4  0A01               	xorlw	1	; case 1
  6638  003FD6  B4D8               	btfsc	status,2,c
  6639  003FD8  EFAF  F01F         	goto	l10614
  6640  003FDC  0A03               	xorlw	3	; case 2
  6641  003FDE  B4D8               	btfsc	status,2,c
  6642  003FE0  EFC4  F01F         	goto	l10620
  6643  003FE4  0A01               	xorlw	1	; case 3
  6644  003FE6  B4D8               	btfsc	status,2,c
  6645  003FE8  EFFC  F01F         	goto	l632
  6646  003FEC  0A07               	xorlw	7	; case 4
  6647  003FEE  B4D8               	btfsc	status,2,c
  6648  003FF0  EFD1  F01F         	goto	l10624
  6649  003FF4  EFFC  F01F         	goto	l632
  6650  003FF8                     l632:
  6651  003FF8  0012               	return		;funcret
  6652  003FFA                     __end_of_gameControllerSM:
  6653                           	callstack 0
  6654                           
  6655 ;; *************** function _gameControllerController *****************
  6656 ;; Defined at:
  6657 ;;		line 104 in file "stateMachine/gameController.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  g               2   54[COMRAM] PTR struct GameParameter
  6660 ;;		 -> g1(218), 
  6661 ;;  ev              1   56[COMRAM] unsigned char 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6673 ;;      Params:         3       0       0       0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0
  6675 ;;      Temps:          2       0       0       0       0       0       0
  6676 ;;      Totals:         5       0       0       0       0       0       0
  6677 ;;Total ram usage:        5 bytes
  6678 ;; Hardware stack levels used: 1
  6679 ;; Hardware stack levels required when called: 8
  6680 ;; This function calls:
  6681 ;;		_GameParameters_init
  6682 ;;		_GameParameters_resetPos
  6683 ;;		_LCD_InButton
  6684 ;;		_LCD_InSlider
  6685 ;;		_LCD_SliderUpdate
  6686 ;;		_XF_pushEvent
  6687 ;;		_XF_scheduleTimer
  6688 ;;		_backlightController
  6689 ;;		_levelController
  6690 ;;		_mooveBall
  6691 ;;		_moovePaddle1
  6692 ;;		_moovePaddle2
  6693 ;; This function is called by:
  6694 ;;		_gameControllerInit
  6695 ;;		_gameControllerSM
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text22
  6700  002272                     __ptext22:
  6701                           	callstack 0
  6702  002272                     _gameControllerController:
  6703                           	callstack 19
  6704  002272                     
  6705                           ;stateMachine/gameController.c: 104: void gameControllerController(GameParameters* g,Eve
      +                          nt ev);stateMachine/gameController.c: 105: {;stateMachine/gameController.c: 106:     swi
      +                          tch(gameStateMachine)
  6706  002272  EF19  F013         	goto	l10148
  6707  002276                     l10092:
  6708                           
  6709                           ;stateMachine/gameController.c: 110:             if(LCD_InButton(&(g->btnParam),g->x,g->
      +                          y))
  6710  002276  0E0A               	movlw	10
  6711  002278  2437               	addwf	gameControllerController@g^0,w,c
  6712  00227A  6E12               	movwf	LCD_InButton@button^0,c
  6713  00227C  0E00               	movlw	0
  6714  00227E  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6715  002280  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6716  002282  EE20 F004          	lfsr	2,4
  6717  002286  5037               	movf	gameControllerController@g^0,w,c
  6718  002288  26D9               	addwf	fsr2l,f,c
  6719  00228A  5038               	movf	(gameControllerController@g+1)^0,w,c
  6720  00228C  22DA               	addwfc	fsr2h,f,c
  6721  00228E  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6722  002292  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6723  002296  EE20 F006          	lfsr	2,6
  6724  00229A  5037               	movf	gameControllerController@g^0,w,c
  6725  00229C  26D9               	addwf	fsr2l,f,c
  6726  00229E  5038               	movf	(gameControllerController@g+1)^0,w,c
  6727  0022A0  22DA               	addwfc	fsr2h,f,c
  6728  0022A2  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6729  0022A6  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6730  0022AA  ECD5  F028         	call	_LCD_InButton	;wreg free
  6731  0022AE  0900               	iorlw	0
  6732  0022B0  B4D8               	btfsc	status,2,c
  6733  0022B2  EF5D  F011         	goto	u7571
  6734  0022B6  EF5F  F011         	goto	u7570
  6735  0022BA                     u7571:
  6736  0022BA  EF6A  F011         	goto	l637
  6737  0022BE                     u7570:
  6738  0022BE                     
  6739                           ;stateMachine/gameController.c: 111:             {;stateMachine/gameController.c: 112:  
      +                                         XF_pushEvent(evParameters,0);
  6740  0022BE  0E00               	movlw	0
  6741  0022C0  6E18               	movwf	XF_pushEvent@inISR^0,c
  6742  0022C2  0E07               	movlw	7
  6743  0022C4  EC09  F030         	call	_XF_pushEvent
  6744                           
  6745                           ;stateMachine/gameController.c: 113:                 GameParameters_resetPos(g);
  6746  0022C8  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6747  0022CC  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6748  0022D0  ECB5  F032         	call	_GameParameters_resetPos	;wreg free
  6749  0022D4                     l637:
  6750                           
  6751                           ;stateMachine/gameController.c: 115:             if(LCD_InButton(&(g->btnOnePlayer),g->x
      +                          ,g->y))
  6752  0022D4  0E22               	movlw	34
  6753  0022D6  2437               	addwf	gameControllerController@g^0,w,c
  6754  0022D8  6E12               	movwf	LCD_InButton@button^0,c
  6755  0022DA  0E00               	movlw	0
  6756  0022DC  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6757  0022DE  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6758  0022E0  EE20 F004          	lfsr	2,4
  6759  0022E4  5037               	movf	gameControllerController@g^0,w,c
  6760  0022E6  26D9               	addwf	fsr2l,f,c
  6761  0022E8  5038               	movf	(gameControllerController@g+1)^0,w,c
  6762  0022EA  22DA               	addwfc	fsr2h,f,c
  6763  0022EC  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6764  0022F0  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6765  0022F4  EE20 F006          	lfsr	2,6
  6766  0022F8  5037               	movf	gameControllerController@g^0,w,c
  6767  0022FA  26D9               	addwf	fsr2l,f,c
  6768  0022FC  5038               	movf	(gameControllerController@g+1)^0,w,c
  6769  0022FE  22DA               	addwfc	fsr2h,f,c
  6770  002300  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6771  002304  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6772  002308  ECD5  F028         	call	_LCD_InButton	;wreg free
  6773  00230C  0900               	iorlw	0
  6774  00230E  B4D8               	btfsc	status,2,c
  6775  002310  EF8C  F011         	goto	u7581
  6776  002314  EF8E  F011         	goto	u7580
  6777  002318                     u7581:
  6778  002318  EF99  F011         	goto	l638
  6779  00231C                     u7580:
  6780  00231C                     
  6781                           ;stateMachine/gameController.c: 116:             {;stateMachine/gameController.c: 117:  
      +                                         XF_pushEvent(evOnePlayer,0);
  6782  00231C  0E00               	movlw	0
  6783  00231E  6E18               	movwf	XF_pushEvent@inISR^0,c
  6784  002320  0E05               	movlw	5
  6785  002322  EC09  F030         	call	_XF_pushEvent
  6786                           
  6787                           ;stateMachine/gameController.c: 118:                 GameParameters_resetPos(g);
  6788  002326  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6789  00232A  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6790  00232E  ECB5  F032         	call	_GameParameters_resetPos	;wreg free
  6791  002332                     l638:
  6792                           
  6793                           ;stateMachine/gameController.c: 120:             if(LCD_InButton(&(g->btnTwoPlayer),g->x
      +                          ,g->y))
  6794  002332  0E3A               	movlw	58
  6795  002334  2437               	addwf	gameControllerController@g^0,w,c
  6796  002336  6E12               	movwf	LCD_InButton@button^0,c
  6797  002338  0E00               	movlw	0
  6798  00233A  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6799  00233C  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6800  00233E  EE20 F004          	lfsr	2,4
  6801  002342  5037               	movf	gameControllerController@g^0,w,c
  6802  002344  26D9               	addwf	fsr2l,f,c
  6803  002346  5038               	movf	(gameControllerController@g+1)^0,w,c
  6804  002348  22DA               	addwfc	fsr2h,f,c
  6805  00234A  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6806  00234E  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6807  002352  EE20 F006          	lfsr	2,6
  6808  002356  5037               	movf	gameControllerController@g^0,w,c
  6809  002358  26D9               	addwf	fsr2l,f,c
  6810  00235A  5038               	movf	(gameControllerController@g+1)^0,w,c
  6811  00235C  22DA               	addwfc	fsr2h,f,c
  6812  00235E  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6813  002362  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6814  002366  ECD5  F028         	call	_LCD_InButton	;wreg free
  6815  00236A  0900               	iorlw	0
  6816  00236C  B4D8               	btfsc	status,2,c
  6817  00236E  EFBB  F011         	goto	u7591
  6818  002372  EFBD  F011         	goto	u7590
  6819  002376                     u7591:
  6820  002376  EF3A  F013         	goto	l658
  6821  00237A                     u7590:
  6822  00237A                     
  6823                           ;stateMachine/gameController.c: 121:             {;stateMachine/gameController.c: 122:  
      +                                         XF_pushEvent(evTwoPlayer,0);
  6824  00237A  0E00               	movlw	0
  6825  00237C  6E18               	movwf	XF_pushEvent@inISR^0,c
  6826  00237E  0E06               	movlw	6
  6827  002380  EC09  F030         	call	_XF_pushEvent
  6828                           
  6829                           ;stateMachine/gameController.c: 123:                 GameParameters_resetPos(g);
  6830  002384  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6831  002388  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6832  00238C  ECB5  F032         	call	_GameParameters_resetPos	;wreg free
  6833  002390  EF3A  F013         	goto	l658
  6834  002394                     l639:
  6835                           
  6836                           ;stateMachine/gameController.c: 125:             break;
  6837  002394  EF3A  F013         	goto	l658
  6838  002398                     l10100:
  6839                           
  6840                           ;stateMachine/gameController.c: 129:             if(LCD_InSlider(&(g->sldBackLight),g->x
      +                          ,g->y))
  6841  002398  0E82               	movlw	130
  6842  00239A  2437               	addwf	gameControllerController@g^0,w,c
  6843  00239C  6E12               	movwf	LCD_InSlider@slider^0,c
  6844  00239E  0E00               	movlw	0
  6845  0023A0  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6846  0023A2  6E13               	movwf	(LCD_InSlider@slider+1)^0,c
  6847  0023A4  EE20 F004          	lfsr	2,4
  6848  0023A8  5037               	movf	gameControllerController@g^0,w,c
  6849  0023AA  26D9               	addwf	fsr2l,f,c
  6850  0023AC  5038               	movf	(gameControllerController@g+1)^0,w,c
  6851  0023AE  22DA               	addwfc	fsr2h,f,c
  6852  0023B0  CFDE F014          	movff	postinc2,LCD_InSlider@posX
  6853  0023B4  CFDD F015          	movff	postdec2,LCD_InSlider@posX+1
  6854  0023B8  EE20 F006          	lfsr	2,6
  6855  0023BC  5037               	movf	gameControllerController@g^0,w,c
  6856  0023BE  26D9               	addwf	fsr2l,f,c
  6857  0023C0  5038               	movf	(gameControllerController@g+1)^0,w,c
  6858  0023C2  22DA               	addwfc	fsr2h,f,c
  6859  0023C4  CFDE F016          	movff	postinc2,LCD_InSlider@posY
  6860  0023C8  CFDD F017          	movff	postdec2,LCD_InSlider@posY+1
  6861  0023CC  EC66  F028         	call	_LCD_InSlider	;wreg free
  6862  0023D0  0900               	iorlw	0
  6863  0023D2  B4D8               	btfsc	status,2,c
  6864  0023D4  EFEE  F011         	goto	u7601
  6865  0023D8  EFF0  F011         	goto	u7600
  6866  0023DC                     u7601:
  6867  0023DC  EF04  F012         	goto	l10106
  6868  0023E0                     u7600:
  6869  0023E0                     
  6870                           ;stateMachine/gameController.c: 130:             {;stateMachine/gameController.c: 131:  
      +                                         backlightController(g);
  6871  0023E0  C037  F018         	movff	gameControllerController@g,backlightController@g
  6872  0023E4  C038  F019         	movff	gameControllerController@g+1,backlightController@g+1
  6873  0023E8  ECC5  F00C         	call	_backlightController	;wreg free
  6874                           
  6875                           ;stateMachine/gameController.c: 132:                 LCD_SliderUpdate(&(g->sldBackLight)
      +                          );
  6876  0023EC  0E82               	movlw	130
  6877  0023EE  2437               	addwf	gameControllerController@g^0,w,c
  6878  0023F0  6E27               	movwf	LCD_SliderUpdate@slider^0,c
  6879  0023F2  0E00               	movlw	0
  6880  0023F4  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6881  0023F6  6E28               	movwf	(LCD_SliderUpdate@slider+1)^0,c
  6882  0023F8  EC5A  F00A         	call	_LCD_SliderUpdate	;wreg free
  6883  0023FC                     
  6884                           ;stateMachine/gameController.c: 133:                 GameParameters_resetPos(g);
  6885  0023FC  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6886  002400  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6887  002404  ECB5  F032         	call	_GameParameters_resetPos	;wreg free
  6888  002408                     l10106:
  6889                           
  6890                           ;stateMachine/gameController.c: 135:             if(LCD_InSlider(&(g->sldLevel),g->x,g->
      +                          y))
  6891  002408  0E9B               	movlw	155
  6892  00240A  2437               	addwf	gameControllerController@g^0,w,c
  6893  00240C  6E12               	movwf	LCD_InSlider@slider^0,c
  6894  00240E  0E00               	movlw	0
  6895  002410  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6896  002412  6E13               	movwf	(LCD_InSlider@slider+1)^0,c
  6897  002414  EE20 F004          	lfsr	2,4
  6898  002418  5037               	movf	gameControllerController@g^0,w,c
  6899  00241A  26D9               	addwf	fsr2l,f,c
  6900  00241C  5038               	movf	(gameControllerController@g+1)^0,w,c
  6901  00241E  22DA               	addwfc	fsr2h,f,c
  6902  002420  CFDE F014          	movff	postinc2,LCD_InSlider@posX
  6903  002424  CFDD F015          	movff	postdec2,LCD_InSlider@posX+1
  6904  002428  EE20 F006          	lfsr	2,6
  6905  00242C  5037               	movf	gameControllerController@g^0,w,c
  6906  00242E  26D9               	addwf	fsr2l,f,c
  6907  002430  5038               	movf	(gameControllerController@g+1)^0,w,c
  6908  002432  22DA               	addwfc	fsr2h,f,c
  6909  002434  CFDE F016          	movff	postinc2,LCD_InSlider@posY
  6910  002438  CFDD F017          	movff	postdec2,LCD_InSlider@posY+1
  6911  00243C  EC66  F028         	call	_LCD_InSlider	;wreg free
  6912  002440  0900               	iorlw	0
  6913  002442  B4D8               	btfsc	status,2,c
  6914  002444  EF26  F012         	goto	u7611
  6915  002448  EF28  F012         	goto	u7610
  6916  00244C                     u7611:
  6917  00244C  EF3C  F012         	goto	l10114
  6918  002450                     u7610:
  6919  002450                     
  6920                           ;stateMachine/gameController.c: 136:             {;stateMachine/gameController.c: 137:  
      +                                         levelController(g);
  6921  002450  C037  F016         	movff	gameControllerController@g,levelController@g
  6922  002454  C038  F017         	movff	gameControllerController@g+1,levelController@g+1
  6923  002458  EC02  F027         	call	_levelController	;wreg free
  6924  00245C                     
  6925                           ;stateMachine/gameController.c: 138:                 LCD_SliderUpdate(&(g->sldLevel));
  6926  00245C  0E9B               	movlw	155
  6927  00245E  2437               	addwf	gameControllerController@g^0,w,c
  6928  002460  6E27               	movwf	LCD_SliderUpdate@slider^0,c
  6929  002462  0E00               	movlw	0
  6930  002464  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6931  002466  6E28               	movwf	(LCD_SliderUpdate@slider+1)^0,c
  6932  002468  EC5A  F00A         	call	_LCD_SliderUpdate	;wreg free
  6933  00246C                     
  6934                           ;stateMachine/gameController.c: 139:                 GameParameters_resetPos(g);
  6935  00246C  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6936  002470  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6937  002474  ECB5  F032         	call	_GameParameters_resetPos	;wreg free
  6938  002478                     l10114:
  6939                           
  6940                           ;stateMachine/gameController.c: 142:             if(LCD_InButton(&(g->btnLeaveParam),g->
      +                          x,g->y))
  6941  002478  0E52               	movlw	82
  6942  00247A  2437               	addwf	gameControllerController@g^0,w,c
  6943  00247C  6E12               	movwf	LCD_InButton@button^0,c
  6944  00247E  0E00               	movlw	0
  6945  002480  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6946  002482  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6947  002484  EE20 F004          	lfsr	2,4
  6948  002488  5037               	movf	gameControllerController@g^0,w,c
  6949  00248A  26D9               	addwf	fsr2l,f,c
  6950  00248C  5038               	movf	(gameControllerController@g+1)^0,w,c
  6951  00248E  22DA               	addwfc	fsr2h,f,c
  6952  002490  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6953  002494  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6954  002498  EE20 F006          	lfsr	2,6
  6955  00249C  5037               	movf	gameControllerController@g^0,w,c
  6956  00249E  26D9               	addwf	fsr2l,f,c
  6957  0024A0  5038               	movf	(gameControllerController@g+1)^0,w,c
  6958  0024A2  22DA               	addwfc	fsr2h,f,c
  6959  0024A4  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6960  0024A8  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6961  0024AC  ECD5  F028         	call	_LCD_InButton	;wreg free
  6962  0024B0  0900               	iorlw	0
  6963  0024B2  B4D8               	btfsc	status,2,c
  6964  0024B4  EF5E  F012         	goto	u7621
  6965  0024B8  EF60  F012         	goto	u7620
  6966  0024BC                     u7621:
  6967  0024BC  EF3A  F013         	goto	l658
  6968  0024C0                     u7620:
  6969  0024C0                     
  6970                           ;stateMachine/gameController.c: 143:             {;stateMachine/gameController.c: 144:  
      +                                         XF_pushEvent(evLeaveParam,0);
  6971  0024C0  0E00               	movlw	0
  6972  0024C2  6E18               	movwf	XF_pushEvent@inISR^0,c
  6973  0024C4  0E08               	movlw	8
  6974  0024C6  EC09  F030         	call	_XF_pushEvent
  6975                           
  6976                           ;stateMachine/gameController.c: 145:                 GameParameters_resetPos(g);
  6977  0024CA  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6978  0024CE  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6979  0024D2  ECB5  F032         	call	_GameParameters_resetPos	;wreg free
  6980  0024D6  EF3A  F013         	goto	l658
  6981  0024DA                     l10118:
  6982                           
  6983                           ;stateMachine/gameController.c: 150:             if (ev==evTimerPos)
  6984  0024DA  0E04               	movlw	4
  6985  0024DC  1839               	xorwf	gameControllerController@ev^0,w,c
  6986  0024DE  A4D8               	btfss	status,2,c
  6987  0024E0  EF74  F012         	goto	u7631
  6988  0024E4  EF76  F012         	goto	u7630
  6989  0024E8                     u7631:
  6990  0024E8  EF7E  F012         	goto	l10122
  6991  0024EC                     u7630:
  6992  0024EC                     
  6993                           ;stateMachine/gameController.c: 151:             {;stateMachine/gameController.c: 153:  
      +                                         moovePaddle1(g);
  6994  0024EC  C037  F01C         	movff	gameControllerController@g,moovePaddle1@g
  6995  0024F0  C038  F01D         	movff	gameControllerController@g+1,moovePaddle1@g+1
  6996  0024F4  EC18  F02A         	call	_moovePaddle1	;wreg free
  6997                           
  6998                           ;stateMachine/gameController.c: 155:             }
  6999  0024F8  EF3A  F013         	goto	l658
  7000  0024FC                     l10122:
  7001  0024FC  0E0A               	movlw	10
  7002  0024FE  1839               	xorwf	gameControllerController@ev^0,w,c
  7003  002500  A4D8               	btfss	status,2,c
  7004  002502  EF85  F012         	goto	u7641
  7005  002506  EF87  F012         	goto	u7640
  7006  00250A                     u7641:
  7007  00250A  EF3A  F013         	goto	l658
  7008  00250E                     u7640:
  7009  00250E                     
  7010                           ;stateMachine/gameController.c: 157:             {;stateMachine/gameController.c: 159:  
      +                                         mooveBall(g);
  7011  00250E  C037  F025         	movff	gameControllerController@g,mooveBall@g
  7012  002512  C038  F026         	movff	gameControllerController@g+1,mooveBall@g+1
  7013  002516  ECDE  F032         	call	_mooveBall	;wreg free
  7014  00251A                     
  7015                           ;stateMachine/gameController.c: 160:                 moovePaddle2(g);
  7016  00251A  C037  F01C         	movff	gameControllerController@g,moovePaddle2@g
  7017  00251E  C038  F01D         	movff	gameControllerController@g+1,moovePaddle2@g+1
  7018  002522  EC44  F029         	call	_moovePaddle2	;wreg free
  7019  002526                     
  7020                           ;stateMachine/gameController.c: 161:                 if(g->level==3)
  7021  002526  EE20 F008          	lfsr	2,8
  7022  00252A  5037               	movf	gameControllerController@g^0,w,c
  7023  00252C  26D9               	addwf	fsr2l,f,c
  7024  00252E  5038               	movf	(gameControllerController@g+1)^0,w,c
  7025  002530  22DA               	addwfc	fsr2h,f,c
  7026  002532  0E03               	movlw	3
  7027  002534  18DE               	xorwf	postinc2,w,c
  7028  002536  10DE               	iorwf	postinc2,w,c
  7029  002538  A4D8               	btfss	status,2,c
  7030  00253A  EFA1  F012         	goto	u7651
  7031  00253E  EFA3  F012         	goto	u7650
  7032  002542                     u7651:
  7033  002542  EFAF  F012         	goto	l10132
  7034  002546                     u7650:
  7035  002546                     
  7036                           ;stateMachine/gameController.c: 162:                 {;stateMachine/gameController.c: 16
      +                          3:                     XF_scheduleTimer(1,evGameUpdate,1);
  7037  002546  0E00               	movlw	0
  7038  002548  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  7039  00254A  0E01               	movlw	1
  7040  00254C  6E13               	movwf	XF_scheduleTimer@tm^0,c
  7041  00254E  0E0A               	movlw	10
  7042  002550  6E15               	movwf	XF_scheduleTimer@ev^0,c
  7043  002552  0E01               	movlw	1
  7044  002554  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  7045  002556  EC95  F02F         	call	_XF_scheduleTimer	;wreg free
  7046                           
  7047                           ;stateMachine/gameController.c: 164:                 }
  7048  00255A  EF3A  F013         	goto	l658
  7049  00255E                     l10132:
  7050  00255E  EE20 F008          	lfsr	2,8
  7051  002562  5037               	movf	gameControllerController@g^0,w,c
  7052  002564  26D9               	addwf	fsr2l,f,c
  7053  002566  5038               	movf	(gameControllerController@g+1)^0,w,c
  7054  002568  22DA               	addwfc	fsr2h,f,c
  7055  00256A  0E02               	movlw	2
  7056  00256C  18DE               	xorwf	postinc2,w,c
  7057  00256E  10DE               	iorwf	postinc2,w,c
  7058  002570  A4D8               	btfss	status,2,c
  7059  002572  EFBD  F012         	goto	u7661
  7060  002576  EFBF  F012         	goto	u7660
  7061  00257A                     u7661:
  7062  00257A  EFCB  F012         	goto	l10136
  7063  00257E                     u7660:
  7064  00257E                     
  7065                           ;stateMachine/gameController.c: 166:                 {;stateMachine/gameController.c: 16
      +                          7:                     XF_scheduleTimer(2,evGameUpdate,1);
  7066  00257E  0E00               	movlw	0
  7067  002580  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  7068  002582  0E02               	movlw	2
  7069  002584  6E13               	movwf	XF_scheduleTimer@tm^0,c
  7070  002586  0E0A               	movlw	10
  7071  002588  6E15               	movwf	XF_scheduleTimer@ev^0,c
  7072  00258A  0E01               	movlw	1
  7073  00258C  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  7074  00258E  EC95  F02F         	call	_XF_scheduleTimer	;wreg free
  7075                           
  7076                           ;stateMachine/gameController.c: 168:                 }
  7077  002592  EF3A  F013         	goto	l658
  7078  002596                     l10136:
  7079  002596  EE20 F008          	lfsr	2,8
  7080  00259A  5037               	movf	gameControllerController@g^0,w,c
  7081  00259C  26D9               	addwf	fsr2l,f,c
  7082  00259E  5038               	movf	(gameControllerController@g+1)^0,w,c
  7083  0025A0  22DA               	addwfc	fsr2h,f,c
  7084  0025A2  04DE               	decf	postinc2,w,c
  7085  0025A4  10DE               	iorwf	postinc2,w,c
  7086  0025A6  A4D8               	btfss	status,2,c
  7087  0025A8  EFD8  F012         	goto	u7671
  7088  0025AC  EFDA  F012         	goto	u7670
  7089  0025B0                     u7671:
  7090  0025B0  EFCA  F011         	goto	l639
  7091  0025B4                     u7670:
  7092  0025B4                     
  7093                           ;stateMachine/gameController.c: 170:                 {;stateMachine/gameController.c: 17
      +                          1:                     XF_scheduleTimer(3,evGameUpdate,1);
  7094  0025B4  0E00               	movlw	0
  7095  0025B6  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  7096  0025B8  0E03               	movlw	3
  7097  0025BA  6E13               	movwf	XF_scheduleTimer@tm^0,c
  7098  0025BC  0E0A               	movlw	10
  7099  0025BE  6E15               	movwf	XF_scheduleTimer@ev^0,c
  7100  0025C0  0E01               	movlw	1
  7101  0025C2  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  7102  0025C4  EC95  F02F         	call	_XF_scheduleTimer	;wreg free
  7103  0025C8  EF3A  F013         	goto	l658
  7104  0025CC                     l10140:
  7105                           
  7106                           ;stateMachine/gameController.c: 181:             if(LCD_InButton(&(g->btnNewGame),g->x,g
      +                          ->y))
  7107  0025CC  0E6A               	movlw	106
  7108  0025CE  2437               	addwf	gameControllerController@g^0,w,c
  7109  0025D0  6E12               	movwf	LCD_InButton@button^0,c
  7110  0025D2  0E00               	movlw	0
  7111  0025D4  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  7112  0025D6  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7113  0025D8  EE20 F004          	lfsr	2,4
  7114  0025DC  5037               	movf	gameControllerController@g^0,w,c
  7115  0025DE  26D9               	addwf	fsr2l,f,c
  7116  0025E0  5038               	movf	(gameControllerController@g+1)^0,w,c
  7117  0025E2  22DA               	addwfc	fsr2h,f,c
  7118  0025E4  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7119  0025E8  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7120  0025EC  EE20 F006          	lfsr	2,6
  7121  0025F0  5037               	movf	gameControllerController@g^0,w,c
  7122  0025F2  26D9               	addwf	fsr2l,f,c
  7123  0025F4  5038               	movf	(gameControllerController@g+1)^0,w,c
  7124  0025F6  22DA               	addwfc	fsr2h,f,c
  7125  0025F8  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7126  0025FC  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7127  002600  ECD5  F028         	call	_LCD_InButton	;wreg free
  7128  002604  0900               	iorlw	0
  7129  002606  B4D8               	btfsc	status,2,c
  7130  002608  EF08  F013         	goto	u7681
  7131  00260C  EF0A  F013         	goto	u7680
  7132  002610                     u7681:
  7133  002610  EF3A  F013         	goto	l658
  7134  002614                     u7680:
  7135  002614                     
  7136                           ;stateMachine/gameController.c: 182:             {;stateMachine/gameController.c: 184:  
      +                                         GameParameters_init(g);
  7137  002614  C037  F02B         	movff	gameControllerController@g,GameParameters_init@s
  7138  002618  C038  F02C         	movff	gameControllerController@g+1,GameParameters_init@s+1
  7139  00261C  EC08  F015         	call	_GameParameters_init	;wreg free
  7140                           
  7141                           ;stateMachine/gameController.c: 185:                 XF_pushEvent(evNewGame,0);
  7142  002620  0E00               	movlw	0
  7143  002622  6E18               	movwf	XF_pushEvent@inISR^0,c
  7144  002624  0E0F               	movlw	15
  7145  002626  EC09  F030         	call	_XF_pushEvent
  7146  00262A                     
  7147                           ;stateMachine/gameController.c: 186:                 gameStateMachine=NOGAME;
  7148  00262A  0E00               	movlw	0
  7149  00262C  6E4D               	movwf	_gameStateMachine^0,c
  7150  00262E  EF3A  F013         	goto	l658
  7151  002632                     l10148:
  7152  002632  504D               	movf	_gameStateMachine^0,w,c
  7153  002634  6E3A               	movwf	??_gameControllerController^0,c
  7154  002636  6A3B               	clrf	(??_gameControllerController+1)^0,c
  7155                           
  7156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7157                           ; Switch size 1, requested type "simple"
  7158                           ; Number of cases is 1, Range of values is 0 to 0
  7159                           ; switch strategies available:
  7160                           ; Name         Instructions Cycles
  7161                           ; simple_byte            4     3 (average)
  7162                           ;	Chosen strategy is simple_byte
  7163  002638  503B               	movf	(??_gameControllerController+1)^0,w,c
  7164  00263A  0A00               	xorlw	0	; case 0
  7165  00263C  B4D8               	btfsc	status,2,c
  7166  00263E  EF23  F013         	goto	l10904
  7167  002642  EF3A  F013         	goto	l658
  7168  002646                     l10904:
  7169                           
  7170                           ; Switch size 1, requested type "simple"
  7171                           ; Number of cases is 5, Range of values is 0 to 4
  7172                           ; switch strategies available:
  7173                           ; Name         Instructions Cycles
  7174                           ; simple_byte           16     9 (average)
  7175                           ;	Chosen strategy is simple_byte
  7176  002646  503A               	movf	??_gameControllerController^0,w,c
  7177  002648  0A00               	xorlw	0	; case 0
  7178  00264A  B4D8               	btfsc	status,2,c
  7179  00264C  EF3B  F011         	goto	l10092
  7180  002650  0A01               	xorlw	1	; case 1
  7181  002652  B4D8               	btfsc	status,2,c
  7182  002654  EFCC  F011         	goto	l10100
  7183  002658  0A03               	xorlw	3	; case 2
  7184  00265A  B4D8               	btfsc	status,2,c
  7185  00265C  EF6D  F012         	goto	l10118
  7186  002660  0A01               	xorlw	1	; case 3
  7187  002662  B4D8               	btfsc	status,2,c
  7188  002664  EF3A  F013         	goto	l658
  7189  002668  0A07               	xorlw	7	; case 4
  7190  00266A  B4D8               	btfsc	status,2,c
  7191  00266C  EFE6  F012         	goto	l10140
  7192  002670  EF3A  F013         	goto	l658
  7193  002674                     l658:
  7194  002674  0012               	return		;funcret
  7195  002676                     __end_of_gameControllerController:
  7196                           	callstack 0
  7197                           
  7198 ;; *************** function _moovePaddle2 *****************
  7199 ;; Defined at:
  7200 ;;		line 27 in file "gameFunction.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  g               2   27[COMRAM] PTR struct GameParameter
  7203 ;;		 -> g1(218), 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;		None
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      void 
  7208 ;; Registers used:
  7209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7215 ;;      Params:         2       0       0       0       0       0       0
  7216 ;;      Locals:         0       0       0       0       0       0       0
  7217 ;;      Temps:          4       0       0       0       0       0       0
  7218 ;;      Totals:         6       0       0       0       0       0       0
  7219 ;;Total ram usage:        6 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 6
  7222 ;; This function calls:
  7223 ;;		_Paddle_addX
  7224 ;;		_XF_pushEvent
  7225 ;; This function is called by:
  7226 ;;		_gameControllerController
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text23
  7231  005288                     __ptext23:
  7232                           	callstack 0
  7233  005288                     _moovePaddle2:
  7234                           	callstack 20
  7235  005288                     
  7236                           ;gameFunction.c: 27: void moovePaddle2(GameParameters* g);gameFunction.c: 28: {;gameFunc
      +                          tion.c: 30:     if(g->p2.x+(50/2)<g->b.x)
  7237  005288  EE20 F0B4          	lfsr	2,180
  7238  00528C  501C               	movf	moovePaddle2@g^0,w,c
  7239  00528E  26D9               	addwf	fsr2l,f,c
  7240  005290  501D               	movf	(moovePaddle2@g+1)^0,w,c
  7241  005292  22DA               	addwfc	fsr2h,f,c
  7242  005294  EE10 F0CA          	lfsr	1,202
  7243  005298  501C               	movf	moovePaddle2@g^0,w,c
  7244  00529A  26E1               	addwf	fsr1l,f,c
  7245  00529C  501D               	movf	(moovePaddle2@g+1)^0,w,c
  7246  00529E  22E2               	addwfc	fsr1h,f,c
  7247  0052A0  CFE6 F020          	movff	postinc1,??_moovePaddle2+2
  7248  0052A4  CFE5 F021          	movff	postdec1,??_moovePaddle2+3
  7249  0052A8  0E19               	movlw	25
  7250  0052AA  2620               	addwf	(??_moovePaddle2+2)^0,f,c
  7251  0052AC  0E00               	movlw	0
  7252  0052AE  2221               	addwfc	(??_moovePaddle2+3)^0,f,c
  7253  0052B0  50DE               	movf	postinc2,w,c
  7254  0052B2  5C20               	subwf	(??_moovePaddle2+2)^0,w,c
  7255  0052B4  50DE               	movf	postinc2,w,c
  7256  0052B6  5821               	subwfb	(??_moovePaddle2+3)^0,w,c
  7257  0052B8  B0D8               	btfsc	status,0,c
  7258  0052BA  EF61  F029         	goto	u7491
  7259  0052BE  EF63  F029         	goto	u7490
  7260  0052C2                     u7491:
  7261  0052C2  EF7A  F029         	goto	l10020
  7262  0052C6                     u7490:
  7263  0052C6                     
  7264                           ;gameFunction.c: 31:     {;gameFunction.c: 32:         Paddle_addX(&g->p2,2,1);
  7265  0052C6  0ECA               	movlw	202
  7266  0052C8  241C               	addwf	moovePaddle2@g^0,w,c
  7267  0052CA  6E12               	movwf	Paddle_addX@p^0,c
  7268  0052CC  0E00               	movlw	0
  7269  0052CE  201D               	addwfc	(moovePaddle2@g+1)^0,w,c
  7270  0052D0  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7271  0052D2  0E00               	movlw	0
  7272  0052D4  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7273  0052D6  0E02               	movlw	2
  7274  0052D8  6E14               	movwf	Paddle_addX@value^0,c
  7275  0052DA  0E00               	movlw	0
  7276  0052DC  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7277  0052DE  0E01               	movlw	1
  7278  0052E0  6E16               	movwf	Paddle_addX@add^0,c
  7279  0052E2  ECF4  F027         	call	_Paddle_addX	;wreg free
  7280                           
  7281                           ;gameFunction.c: 33:         XF_pushEvent(evRedrawPaddle2,0);
  7282  0052E6  0E00               	movlw	0
  7283  0052E8  6E18               	movwf	XF_pushEvent@inISR^0,c
  7284  0052EA  0E0C               	movlw	12
  7285  0052EC  EC09  F030         	call	_XF_pushEvent
  7286                           
  7287                           ;gameFunction.c: 34:     }
  7288  0052F0  EFAE  F029         	goto	l778
  7289  0052F4                     l10020:
  7290  0052F4  EE20 F0CA          	lfsr	2,202
  7291  0052F8  501C               	movf	moovePaddle2@g^0,w,c
  7292  0052FA  26D9               	addwf	fsr2l,f,c
  7293  0052FC  501D               	movf	(moovePaddle2@g+1)^0,w,c
  7294  0052FE  22DA               	addwfc	fsr2h,f,c
  7295  005300  CFDE F01E          	movff	postinc2,??_moovePaddle2
  7296  005304  CFDD F01F          	movff	postdec2,??_moovePaddle2+1
  7297  005308  0E19               	movlw	25
  7298  00530A  261E               	addwf	??_moovePaddle2^0,f,c
  7299  00530C  0E00               	movlw	0
  7300  00530E  221F               	addwfc	(??_moovePaddle2+1)^0,f,c
  7301  005310  EE20 F0B4          	lfsr	2,180
  7302  005314  501C               	movf	moovePaddle2@g^0,w,c
  7303  005316  26D9               	addwf	fsr2l,f,c
  7304  005318  501D               	movf	(moovePaddle2@g+1)^0,w,c
  7305  00531A  22DA               	addwfc	fsr2h,f,c
  7306  00531C  501E               	movf	??_moovePaddle2^0,w,c
  7307  00531E  5CDE               	subwf	postinc2,w,c
  7308  005320  501F               	movf	(??_moovePaddle2+1)^0,w,c
  7309  005322  58DE               	subwfb	postinc2,w,c
  7310  005324  B0D8               	btfsc	status,0,c
  7311  005326  EF97  F029         	goto	u7501
  7312  00532A  EF99  F029         	goto	u7500
  7313  00532E                     u7501:
  7314  00532E  EFAE  F029         	goto	l778
  7315  005332                     u7500:
  7316  005332                     
  7317                           ;gameFunction.c: 36:     {;gameFunction.c: 37:         Paddle_addX(&g->p2,2,0);
  7318  005332  0ECA               	movlw	202
  7319  005334  241C               	addwf	moovePaddle2@g^0,w,c
  7320  005336  6E12               	movwf	Paddle_addX@p^0,c
  7321  005338  0E00               	movlw	0
  7322  00533A  201D               	addwfc	(moovePaddle2@g+1)^0,w,c
  7323  00533C  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7324  00533E  0E00               	movlw	0
  7325  005340  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7326  005342  0E02               	movlw	2
  7327  005344  6E14               	movwf	Paddle_addX@value^0,c
  7328  005346  0E00               	movlw	0
  7329  005348  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7330  00534A  0E00               	movlw	0
  7331  00534C  6E16               	movwf	Paddle_addX@add^0,c
  7332  00534E  ECF4  F027         	call	_Paddle_addX	;wreg free
  7333                           
  7334                           ;gameFunction.c: 38:         XF_pushEvent(evRedrawPaddle2,0);
  7335  005352  0E00               	movlw	0
  7336  005354  6E18               	movwf	XF_pushEvent@inISR^0,c
  7337  005356  0E0C               	movlw	12
  7338  005358  EC09  F030         	call	_XF_pushEvent
  7339  00535C                     l778:
  7340  00535C  0012               	return		;funcret
  7341  00535E                     __end_of_moovePaddle2:
  7342                           	callstack 0
  7343                           
  7344 ;; *************** function _moovePaddle1 *****************
  7345 ;; Defined at:
  7346 ;;		line 7 in file "gameFunction.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;  g               2   27[COMRAM] PTR struct GameParameter
  7349 ;;		 -> g1(218), 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;		None
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1    wreg      void 
  7354 ;; Registers used:
  7355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7361 ;;      Params:         2       0       0       0       0       0       0
  7362 ;;      Locals:         0       0       0       0       0       0       0
  7363 ;;      Temps:          2       0       0       0       0       0       0
  7364 ;;      Totals:         4       0       0       0       0       0       0
  7365 ;;Total ram usage:        4 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; Hardware stack levels required when called: 6
  7368 ;; This function calls:
  7369 ;;		_GameParameters_resetPos
  7370 ;;		_Paddle_addX
  7371 ;;		_XF_pushEvent
  7372 ;; This function is called by:
  7373 ;;		_gameControllerController
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text24
  7378  005430                     __ptext24:
  7379                           	callstack 0
  7380  005430                     _moovePaddle1:
  7381                           	callstack 20
  7382  005430                     
  7383                           ;gameFunction.c: 7: void moovePaddle1(GameParameters* g);gameFunction.c: 8: {;gameFuncti
      +                          on.c: 10:     if((g->x>0)&&(g->x<110))
  7384  005430  EE20 F004          	lfsr	2,4
  7385  005434  501C               	movf	moovePaddle1@g^0,w,c
  7386  005436  26D9               	addwf	fsr2l,f,c
  7387  005438  501D               	movf	(moovePaddle1@g+1)^0,w,c
  7388  00543A  22DA               	addwfc	fsr2h,f,c
  7389  00543C  50DE               	movf	postinc2,w,c
  7390  00543E  10DE               	iorwf	postinc2,w,c
  7391  005440  B4D8               	btfsc	status,2,c
  7392  005442  EF25  F02A         	goto	u7461
  7393  005446  EF27  F02A         	goto	u7460
  7394  00544A                     u7461:
  7395  00544A  EF4F  F02A         	goto	l10010
  7396  00544E                     u7460:
  7397  00544E  EE20 F004          	lfsr	2,4
  7398  005452  501C               	movf	moovePaddle1@g^0,w,c
  7399  005454  26D9               	addwf	fsr2l,f,c
  7400  005456  501D               	movf	(moovePaddle1@g+1)^0,w,c
  7401  005458  22DA               	addwfc	fsr2h,f,c
  7402  00545A  0E01               	movlw	1
  7403  00545C  50DB               	movf	plusw2,w,c
  7404  00545E  E107               	bnz	u7471
  7405  005460  0E6E               	movlw	110
  7406  005462  5CDE               	subwf	postinc2,w,c
  7407  005464  B0D8               	btfsc	status,0,c
  7408  005466  EF37  F02A         	goto	u7471
  7409  00546A  EF39  F02A         	goto	u7470
  7410  00546E                     u7471:
  7411  00546E  EF4F  F02A         	goto	l10010
  7412  005472                     u7470:
  7413  005472                     
  7414                           ;gameFunction.c: 11:     {;gameFunction.c: 12:         GameParameters_resetPos(g);
  7415  005472  C01C  F012         	movff	moovePaddle1@g,GameParameters_resetPos@s
  7416  005476  C01D  F013         	movff	moovePaddle1@g+1,GameParameters_resetPos@s+1
  7417  00547A  ECB5  F032         	call	_GameParameters_resetPos	;wreg free
  7418                           
  7419                           ;gameFunction.c: 13:         Paddle_addX(&g->p1,20,0);
  7420  00547E  0EC0               	movlw	192
  7421  005480  241C               	addwf	moovePaddle1@g^0,w,c
  7422  005482  6E12               	movwf	Paddle_addX@p^0,c
  7423  005484  0E00               	movlw	0
  7424  005486  201D               	addwfc	(moovePaddle1@g+1)^0,w,c
  7425  005488  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7426  00548A  0E00               	movlw	0
  7427  00548C  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7428  00548E  0E14               	movlw	20
  7429  005490  6E14               	movwf	Paddle_addX@value^0,c
  7430  005492  0E00               	movlw	0
  7431  005494  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7432  005496  0E00               	movlw	0
  7433  005498  6E16               	movwf	Paddle_addX@add^0,c
  7434  00549A  ECF4  F027         	call	_Paddle_addX	;wreg free
  7435  00549E                     l10010:
  7436                           
  7437                           ;gameFunction.c: 16:     if(g->x>=130)
  7438  00549E  EE20 F004          	lfsr	2,4
  7439  0054A2  501C               	movf	moovePaddle1@g^0,w,c
  7440  0054A4  26D9               	addwf	fsr2l,f,c
  7441  0054A6  501D               	movf	(moovePaddle1@g+1)^0,w,c
  7442  0054A8  22DA               	addwfc	fsr2h,f,c
  7443  0054AA  0E01               	movlw	1
  7444  0054AC  50DB               	movf	plusw2,w,c
  7445  0054AE  E109               	bnz	u7480
  7446  0054B0  0E82               	movlw	130
  7447  0054B2  5CDE               	subwf	postinc2,w,c
  7448  0054B4  A0D8               	btfss	status,0,c
  7449  0054B6  EF5F  F02A         	goto	u7481
  7450  0054BA  EF61  F02A         	goto	u7480
  7451  0054BE                     u7481:
  7452  0054BE  EF77  F02A         	goto	l771
  7453  0054C2                     u7480:
  7454  0054C2                     
  7455                           ;gameFunction.c: 17:     {;gameFunction.c: 18:         GameParameters_resetPos(g);
  7456  0054C2  C01C  F012         	movff	moovePaddle1@g,GameParameters_resetPos@s
  7457  0054C6  C01D  F013         	movff	moovePaddle1@g+1,GameParameters_resetPos@s+1
  7458  0054CA  ECB5  F032         	call	_GameParameters_resetPos	;wreg free
  7459                           
  7460                           ;gameFunction.c: 19:         Paddle_addX(&g->p1,20,1);
  7461  0054CE  0EC0               	movlw	192
  7462  0054D0  241C               	addwf	moovePaddle1@g^0,w,c
  7463  0054D2  6E12               	movwf	Paddle_addX@p^0,c
  7464  0054D4  0E00               	movlw	0
  7465  0054D6  201D               	addwfc	(moovePaddle1@g+1)^0,w,c
  7466  0054D8  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7467  0054DA  0E00               	movlw	0
  7468  0054DC  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7469  0054DE  0E14               	movlw	20
  7470  0054E0  6E14               	movwf	Paddle_addX@value^0,c
  7471  0054E2  0E00               	movlw	0
  7472  0054E4  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7473  0054E6  0E01               	movlw	1
  7474  0054E8  6E16               	movwf	Paddle_addX@add^0,c
  7475  0054EA  ECF4  F027         	call	_Paddle_addX	;wreg free
  7476  0054EE                     l771:
  7477                           
  7478                           ;gameFunction.c: 21:     XF_pushEvent(evRedrawPaddle1,0);
  7479  0054EE  0E00               	movlw	0
  7480  0054F0  6E18               	movwf	XF_pushEvent@inISR^0,c
  7481  0054F2  0E0B               	movlw	11
  7482  0054F4  EC09  F030         	call	_XF_pushEvent
  7483  0054F8  0012               	return		;funcret
  7484  0054FA                     __end_of_moovePaddle1:
  7485                           	callstack 0
  7486                           
  7487 ;; *************** function _Paddle_addX *****************
  7488 ;; Defined at:
  7489 ;;		line 28 in file "class/paddle.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  p               2   17[COMRAM] PTR struct Paddle
  7492 ;;		 -> g1(218), 
  7493 ;;  value           2   19[COMRAM] unsigned short 
  7494 ;;  add             2   21[COMRAM] unsigned short 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;		None
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1    wreg      void 
  7499 ;; Registers used:
  7500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7506 ;;      Params:         6       0       0       0       0       0       0
  7507 ;;      Locals:         0       0       0       0       0       0       0
  7508 ;;      Temps:          4       0       0       0       0       0       0
  7509 ;;      Totals:        10       0       0       0       0       0       0
  7510 ;;Total ram usage:       10 bytes
  7511 ;; Hardware stack levels used: 1
  7512 ;; Hardware stack levels required when called: 4
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_moovePaddle1
  7517 ;;		_moovePaddle2
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text25
  7522  004FE8                     __ptext25:
  7523                           	callstack 0
  7524  004FE8                     _Paddle_addX:
  7525                           	callstack 21
  7526  004FE8                     
  7527                           ;class/paddle.c: 28: void Paddle_addX(struct Paddle* p,uint16_t value,uint16_t add);clas
      +                          s/paddle.c: 29: {;class/paddle.c: 30:     if(add==1)
  7528  004FE8  0416               	decf	Paddle_addX@add^0,w,c
  7529  004FEA  1017               	iorwf	(Paddle_addX@add+1)^0,w,c
  7530  004FEC  A4D8               	btfss	status,2,c
  7531  004FEE  EFFB  F027         	goto	u6791
  7532  004FF2  EFFD  F027         	goto	u6790
  7533  004FF6                     u6791:
  7534  004FF6  EF32  F028         	goto	l9458
  7535  004FFA                     u6790:
  7536  004FFA                     
  7537                           ;class/paddle.c: 31:     {;class/paddle.c: 32:         p->x=(p->x)+value;
  7538  004FFA  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7539  004FFE  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7540  005002  CFDE F018          	movff	postinc2,??_Paddle_addX
  7541  005006  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7542  00500A  5014               	movf	Paddle_addX@value^0,w,c
  7543  00500C  2618               	addwf	??_Paddle_addX^0,f,c
  7544  00500E  5015               	movf	(Paddle_addX@value+1)^0,w,c
  7545  005010  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  7546  005012  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7547  005016  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7548  00501A  C018  FFDE         	movff	??_Paddle_addX,postinc2
  7549  00501E  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  7550                           
  7551                           ;class/paddle.c: 33:         if((p->x+50)>239)
  7552  005022  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7553  005026  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7554  00502A  CFDE F018          	movff	postinc2,??_Paddle_addX
  7555  00502E  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7556  005032  0E32               	movlw	50
  7557  005034  2618               	addwf	??_Paddle_addX^0,f,c
  7558  005036  0E00               	movlw	0
  7559  005038  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  7560  00503A  5019               	movf	(??_Paddle_addX+1)^0,w,c
  7561  00503C  E109               	bnz	u6800
  7562  00503E  0EF0               	movlw	240
  7563  005040  5C18               	subwf	??_Paddle_addX^0,w,c
  7564  005042  A0D8               	btfss	status,0,c
  7565  005044  EF26  F028         	goto	u6801
  7566  005048  EF28  F028         	goto	u6800
  7567  00504C                     u6801:
  7568  00504C  EF65  F028         	goto	l26
  7569  005050                     u6800:
  7570  005050                     
  7571                           ;class/paddle.c: 34:         {;class/paddle.c: 35:             p->x=239-(50);
  7572  005050  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7573  005054  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7574  005058  0EBD               	movlw	189
  7575  00505A  6EDE               	movwf	postinc2,c
  7576  00505C  0E00               	movlw	0
  7577  00505E  6EDD               	movwf	postdec2,c
  7578  005060  EF65  F028         	goto	l26
  7579  005064                     l9458:
  7580                           
  7581                           ;class/paddle.c: 39:     {;class/paddle.c: 40:         if((p->x)<value+1)
  7582  005064  0E01               	movlw	1
  7583  005066  2414               	addwf	Paddle_addX@value^0,w,c
  7584  005068  6E18               	movwf	??_Paddle_addX^0,c
  7585  00506A  0E00               	movlw	0
  7586  00506C  2015               	addwfc	(Paddle_addX@value+1)^0,w,c
  7587  00506E  6E19               	movwf	(??_Paddle_addX+1)^0,c
  7588  005070  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7589  005074  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7590  005078  5018               	movf	??_Paddle_addX^0,w,c
  7591  00507A  5CDE               	subwf	postinc2,w,c
  7592  00507C  5019               	movf	(??_Paddle_addX+1)^0,w,c
  7593  00507E  58DE               	subwfb	postinc2,w,c
  7594  005080  B0D8               	btfsc	status,0,c
  7595  005082  EF45  F028         	goto	u6811
  7596  005086  EF47  F028         	goto	u6810
  7597  00508A                     u6811:
  7598  00508A  EF51  F028         	goto	l9462
  7599  00508E                     u6810:
  7600  00508E                     
  7601                           ;class/paddle.c: 41:         {;class/paddle.c: 42:             p->x=0;
  7602  00508E  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7603  005092  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7604  005096  0E00               	movlw	0
  7605  005098  6EDE               	movwf	postinc2,c
  7606  00509A  0E00               	movlw	0
  7607  00509C  6EDD               	movwf	postdec2,c
  7608                           
  7609                           ;class/paddle.c: 43:         }
  7610  00509E  EF65  F028         	goto	l26
  7611  0050A2                     l9462:
  7612                           
  7613                           ;class/paddle.c: 45:         {;class/paddle.c: 46:             p->x=(p->x)-value;
  7614  0050A2  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7615  0050A6  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7616  0050AA  CFDE F018          	movff	postinc2,??_Paddle_addX
  7617  0050AE  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7618  0050B2  5014               	movf	Paddle_addX@value^0,w,c
  7619  0050B4  5E18               	subwf	??_Paddle_addX^0,f,c
  7620  0050B6  5015               	movf	(Paddle_addX@value+1)^0,w,c
  7621  0050B8  5A19               	subwfb	(??_Paddle_addX+1)^0,f,c
  7622  0050BA  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7623  0050BE  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7624  0050C2  C018  FFDE         	movff	??_Paddle_addX,postinc2
  7625  0050C6  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  7626  0050CA                     l26:
  7627  0050CA  0012               	return		;funcret
  7628  0050CC                     __end_of_Paddle_addX:
  7629                           	callstack 0
  7630                           
  7631 ;; *************** function _GameParameters_resetPos *****************
  7632 ;; Defined at:
  7633 ;;		line 44 in file "class/gameParameters.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;  s               2   17[COMRAM] PTR struct GameParameter
  7636 ;;		 -> g1(218), 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7648 ;;      Params:         2       0       0       0       0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0
  7651 ;;      Totals:         2       0       0       0       0       0       0
  7652 ;;Total ram usage:        2 bytes
  7653 ;; Hardware stack levels used: 1
  7654 ;; Hardware stack levels required when called: 4
  7655 ;; This function calls:
  7656 ;;		Nothing
  7657 ;; This function is called by:
  7658 ;;		_gameControllerController
  7659 ;;		_moovePaddle1
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text26
  7664  00656A                     __ptext26:
  7665                           	callstack 0
  7666  00656A                     _GameParameters_resetPos:
  7667                           	callstack 21
  7668  00656A                     
  7669                           ;class/gameParameters.c: 44: void GameParameters_resetPos(struct GameParameters* s);clas
      +                          s/gameParameters.c: 45: {;class/gameParameters.c: 46:     s->x=0;
  7670  00656A  EE20 F004          	lfsr	2,4
  7671  00656E  5012               	movf	GameParameters_resetPos@s^0,w,c
  7672  006570  26D9               	addwf	fsr2l,f,c
  7673  006572  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  7674  006574  22DA               	addwfc	fsr2h,f,c
  7675  006576  0E00               	movlw	0
  7676  006578  6EDE               	movwf	postinc2,c
  7677  00657A  0E00               	movlw	0
  7678  00657C  6EDD               	movwf	postdec2,c
  7679                           
  7680                           ;class/gameParameters.c: 47:     s->y=0;
  7681  00657E  EE20 F006          	lfsr	2,6
  7682  006582  5012               	movf	GameParameters_resetPos@s^0,w,c
  7683  006584  26D9               	addwf	fsr2l,f,c
  7684  006586  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  7685  006588  22DA               	addwfc	fsr2h,f,c
  7686  00658A  0E00               	movlw	0
  7687  00658C  6EDE               	movwf	postinc2,c
  7688  00658E  0E00               	movlw	0
  7689  006590  6EDD               	movwf	postdec2,c
  7690  006592  0012               	return		;funcret
  7691  006594                     __end_of_GameParameters_resetPos:
  7692                           	callstack 0
  7693                           
  7694 ;; *************** function _mooveBall *****************
  7695 ;; Defined at:
  7696 ;;		line 46 in file "gameFunction.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  g               2   36[COMRAM] PTR struct GameParameter
  7699 ;;		 -> g1(218), 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;		None
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1    wreg      void 
  7704 ;; Registers used:
  7705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7711 ;;      Params:         2       0       0       0       0       0       0
  7712 ;;      Locals:         0       0       0       0       0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0
  7714 ;;      Totals:         2       0       0       0       0       0       0
  7715 ;;Total ram usage:        2 bytes
  7716 ;; Hardware stack levels used: 1
  7717 ;; Hardware stack levels required when called: 7
  7718 ;; This function calls:
  7719 ;;		_Ball_Update
  7720 ;;		_XF_pushEvent
  7721 ;;		_checkCollision
  7722 ;; This function is called by:
  7723 ;;		_gameControllerController
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text27
  7728  0065BC                     __ptext27:
  7729                           	callstack 0
  7730  0065BC                     _mooveBall:
  7731                           	callstack 19
  7732  0065BC                     
  7733                           ;gameFunction.c: 46: void mooveBall(GameParameters* g);gameFunction.c: 47: {;gameFunctio
      +                          n.c: 48:     checkCollision(g);
  7734  0065BC  C025  F01B         	movff	mooveBall@g,checkCollision@g
  7735  0065C0  C026  F01C         	movff	mooveBall@g+1,checkCollision@g+1
  7736  0065C4  EC5A  F000         	call	_checkCollision	;wreg free
  7737                           
  7738                           ;gameFunction.c: 49:     Ball_Update(&g->b);
  7739  0065C8  0EB4               	movlw	180
  7740  0065CA  2425               	addwf	mooveBall@g^0,w,c
  7741  0065CC  6E12               	movwf	Ball_Update@b^0,c
  7742  0065CE  0E00               	movlw	0
  7743  0065D0  2026               	addwfc	(mooveBall@g+1)^0,w,c
  7744  0065D2  6E13               	movwf	(Ball_Update@b+1)^0,c
  7745  0065D4  EC18  F02F         	call	_Ball_Update	;wreg free
  7746                           
  7747                           ;gameFunction.c: 50:     XF_pushEvent(evRedrawBall,0);
  7748  0065D8  0E00               	movlw	0
  7749  0065DA  6E18               	movwf	XF_pushEvent@inISR^0,c
  7750  0065DC  0E0D               	movlw	13
  7751  0065DE  EC09  F030         	call	_XF_pushEvent
  7752  0065E2  0012               	return		;funcret
  7753  0065E4                     __end_of_mooveBall:
  7754                           	callstack 0
  7755                           
  7756 ;; *************** function _checkCollision *****************
  7757 ;; Defined at:
  7758 ;;		line 56 in file "gameFunction.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;  g               2   26[COMRAM] PTR struct GameParameter
  7761 ;;		 -> g1(218), 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  s              20    0        unsigned char [20]
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7773 ;;      Params:         2       0       0       0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0       0       0
  7775 ;;      Temps:          8       0       0       0       0       0       0
  7776 ;;      Totals:        10       0       0       0       0       0       0
  7777 ;;Total ram usage:       10 bytes
  7778 ;; Hardware stack levels used: 1
  7779 ;; Hardware stack levels required when called: 6
  7780 ;; This function calls:
  7781 ;;		_XF_pushEvent
  7782 ;; This function is called by:
  7783 ;;		_mooveBall
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text28
  7788  0000B4                     __ptext28:
  7789                           	callstack 0
  7790  0000B4                     _checkCollision:
  7791                           	callstack 19
  7792  0000B4                     
  7793                           ;gameFunction.c: 56: void checkCollision(GameParameters* g);gameFunction.c: 57: {;gameFu
      +                          nction.c: 58:     char s[20];;gameFunction.c: 60:     if(g->b.x+g->b.dx+8>=239)
  7794  0000B4  EE20 F0BC          	lfsr	2,188
  7795  0000B8  501B               	movf	checkCollision@g^0,w,c
  7796  0000BA  26D9               	addwf	fsr2l,f,c
  7797  0000BC  501C               	movf	(checkCollision@g+1)^0,w,c
  7798  0000BE  22DA               	addwfc	fsr2h,f,c
  7799  0000C0  CFDE F01D          	movff	postinc2,??_checkCollision
  7800  0000C4  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7801  0000C8  EE20 F0B4          	lfsr	2,180
  7802  0000CC  501B               	movf	checkCollision@g^0,w,c
  7803  0000CE  26D9               	addwf	fsr2l,f,c
  7804  0000D0  501C               	movf	(checkCollision@g+1)^0,w,c
  7805  0000D2  22DA               	addwfc	fsr2h,f,c
  7806  0000D4  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7807  0000D8  CFDD F020          	movff	postdec2,??_checkCollision+3
  7808  0000DC  501D               	movf	??_checkCollision^0,w,c
  7809  0000DE  261F               	addwf	(??_checkCollision+2)^0,f,c
  7810  0000E0  501E               	movf	(??_checkCollision+1)^0,w,c
  7811  0000E2  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7812  0000E4  0E08               	movlw	8
  7813  0000E6  261F               	addwf	(??_checkCollision+2)^0,f,c
  7814  0000E8  0E00               	movlw	0
  7815  0000EA  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7816  0000EC  5020               	movf	(??_checkCollision+3)^0,w,c
  7817  0000EE  E109               	bnz	u6890
  7818  0000F0  0EEF               	movlw	239
  7819  0000F2  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7820  0000F4  A0D8               	btfss	status,0,c
  7821  0000F6  EF7F  F000         	goto	u6891
  7822  0000FA  EF81  F000         	goto	u6890
  7823  0000FE                     u6891:
  7824  0000FE  EFAD  F000         	goto	l784
  7825  000102                     u6890:
  7826  000102                     
  7827                           ;gameFunction.c: 61:     {;gameFunction.c: 62:         g->b.dx=-g->b.dx;
  7828  000102  EE20 F0BC          	lfsr	2,188
  7829  000106  501B               	movf	checkCollision@g^0,w,c
  7830  000108  26D9               	addwf	fsr2l,f,c
  7831  00010A  501C               	movf	(checkCollision@g+1)^0,w,c
  7832  00010C  22DA               	addwfc	fsr2h,f,c
  7833  00010E  CFDE F01D          	movff	postinc2,??_checkCollision
  7834  000112  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7835  000116  1E1D               	comf	??_checkCollision^0,f,c
  7836  000118  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7837  00011A  4A1D               	infsnz	??_checkCollision^0,f,c
  7838  00011C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7839  00011E  EE20 F0BC          	lfsr	2,188
  7840  000122  501B               	movf	checkCollision@g^0,w,c
  7841  000124  26D9               	addwf	fsr2l,f,c
  7842  000126  501C               	movf	(checkCollision@g+1)^0,w,c
  7843  000128  22DA               	addwfc	fsr2h,f,c
  7844  00012A  C01D  FFDE         	movff	??_checkCollision,postinc2
  7845  00012E  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7846                           
  7847                           ;gameFunction.c: 63:         g->b.x+=g->b.dx;
  7848  000132  EE20 F0BC          	lfsr	2,188
  7849  000136  501B               	movf	checkCollision@g^0,w,c
  7850  000138  26D9               	addwf	fsr2l,f,c
  7851  00013A  501C               	movf	(checkCollision@g+1)^0,w,c
  7852  00013C  22DA               	addwfc	fsr2h,f,c
  7853  00013E  CFDE F01D          	movff	postinc2,??_checkCollision
  7854  000142  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7855  000146  EE20 F0B4          	lfsr	2,180
  7856  00014A  501B               	movf	checkCollision@g^0,w,c
  7857  00014C  26D9               	addwf	fsr2l,f,c
  7858  00014E  501C               	movf	(checkCollision@g+1)^0,w,c
  7859  000150  22DA               	addwfc	fsr2h,f,c
  7860  000152  501D               	movf	??_checkCollision^0,w,c
  7861  000154  26DE               	addwf	postinc2,f,c
  7862  000156  501E               	movf	(??_checkCollision+1)^0,w,c
  7863  000158  22DD               	addwfc	postdec2,f,c
  7864  00015A                     l784:
  7865                           
  7866                           ;gameFunction.c: 65:     if((int)(g->b.x+g->b.dx-8)<=1)
  7867  00015A  0EF8               	movlw	248
  7868  00015C  6E1D               	movwf	??_checkCollision^0,c
  7869  00015E  0EFF               	movlw	255
  7870  000160  6E1E               	movwf	(??_checkCollision+1)^0,c
  7871  000162  EE20 F0BC          	lfsr	2,188
  7872  000166  501B               	movf	checkCollision@g^0,w,c
  7873  000168  26D9               	addwf	fsr2l,f,c
  7874  00016A  501C               	movf	(checkCollision@g+1)^0,w,c
  7875  00016C  22DA               	addwfc	fsr2h,f,c
  7876  00016E  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7877  000172  CFDD F020          	movff	postdec2,??_checkCollision+3
  7878  000176  EE20 F0B4          	lfsr	2,180
  7879  00017A  501B               	movf	checkCollision@g^0,w,c
  7880  00017C  26D9               	addwf	fsr2l,f,c
  7881  00017E  501C               	movf	(checkCollision@g+1)^0,w,c
  7882  000180  22DA               	addwfc	fsr2h,f,c
  7883  000182  CFDE F021          	movff	postinc2,??_checkCollision+4
  7884  000186  CFDD F022          	movff	postdec2,??_checkCollision+5
  7885  00018A  501F               	movf	(??_checkCollision+2)^0,w,c
  7886  00018C  2621               	addwf	(??_checkCollision+4)^0,f,c
  7887  00018E  5020               	movf	(??_checkCollision+3)^0,w,c
  7888  000190  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7889  000192  501D               	movf	??_checkCollision^0,w,c
  7890  000194  2621               	addwf	(??_checkCollision+4)^0,f,c
  7891  000196  501E               	movf	(??_checkCollision+1)^0,w,c
  7892  000198  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7893  00019A  BE22               	btfsc	(??_checkCollision+5)^0,7,c
  7894  00019C  EFDB  F000         	goto	u6900
  7895  0001A0  5022               	movf	(??_checkCollision+5)^0,w,c
  7896  0001A2  E107               	bnz	u6901
  7897  0001A4  0E02               	movlw	2
  7898  0001A6  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7899  0001A8  B0D8               	btfsc	status,0,c
  7900  0001AA  EFD9  F000         	goto	u6901
  7901  0001AE  EFDB  F000         	goto	u6900
  7902  0001B2                     u6901:
  7903  0001B2  EF07  F001         	goto	l785
  7904  0001B6                     u6900:
  7905  0001B6                     
  7906                           ;gameFunction.c: 66:     {;gameFunction.c: 67:         g->b.dx=-g->b.dx;
  7907  0001B6  EE20 F0BC          	lfsr	2,188
  7908  0001BA  501B               	movf	checkCollision@g^0,w,c
  7909  0001BC  26D9               	addwf	fsr2l,f,c
  7910  0001BE  501C               	movf	(checkCollision@g+1)^0,w,c
  7911  0001C0  22DA               	addwfc	fsr2h,f,c
  7912  0001C2  CFDE F01D          	movff	postinc2,??_checkCollision
  7913  0001C6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7914  0001CA  1E1D               	comf	??_checkCollision^0,f,c
  7915  0001CC  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7916  0001CE  4A1D               	infsnz	??_checkCollision^0,f,c
  7917  0001D0  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7918  0001D2  EE20 F0BC          	lfsr	2,188
  7919  0001D6  501B               	movf	checkCollision@g^0,w,c
  7920  0001D8  26D9               	addwf	fsr2l,f,c
  7921  0001DA  501C               	movf	(checkCollision@g+1)^0,w,c
  7922  0001DC  22DA               	addwfc	fsr2h,f,c
  7923  0001DE  C01D  FFDE         	movff	??_checkCollision,postinc2
  7924  0001E2  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7925                           
  7926                           ;gameFunction.c: 68:         g->b.x+=g->b.dx;
  7927  0001E6  EE20 F0BC          	lfsr	2,188
  7928  0001EA  501B               	movf	checkCollision@g^0,w,c
  7929  0001EC  26D9               	addwf	fsr2l,f,c
  7930  0001EE  501C               	movf	(checkCollision@g+1)^0,w,c
  7931  0001F0  22DA               	addwfc	fsr2h,f,c
  7932  0001F2  CFDE F01D          	movff	postinc2,??_checkCollision
  7933  0001F6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7934  0001FA  EE20 F0B4          	lfsr	2,180
  7935  0001FE  501B               	movf	checkCollision@g^0,w,c
  7936  000200  26D9               	addwf	fsr2l,f,c
  7937  000202  501C               	movf	(checkCollision@g+1)^0,w,c
  7938  000204  22DA               	addwfc	fsr2h,f,c
  7939  000206  501D               	movf	??_checkCollision^0,w,c
  7940  000208  26DE               	addwf	postinc2,f,c
  7941  00020A  501E               	movf	(??_checkCollision+1)^0,w,c
  7942  00020C  22DD               	addwfc	postdec2,f,c
  7943  00020E                     l785:
  7944                           
  7945                           ;gameFunction.c: 71:     if(g->b.y+8==g->p1.y-1)
  7946  00020E  0EFF               	movlw	255
  7947  000210  6E1D               	movwf	??_checkCollision^0,c
  7948  000212  0EFF               	movlw	255
  7949  000214  6E1E               	movwf	(??_checkCollision+1)^0,c
  7950  000216  EE20 F0C2          	lfsr	2,194
  7951  00021A  501B               	movf	checkCollision@g^0,w,c
  7952  00021C  26D9               	addwf	fsr2l,f,c
  7953  00021E  501C               	movf	(checkCollision@g+1)^0,w,c
  7954  000220  22DA               	addwfc	fsr2h,f,c
  7955  000222  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7956  000226  CFDD F020          	movff	postdec2,??_checkCollision+3
  7957  00022A  501D               	movf	??_checkCollision^0,w,c
  7958  00022C  261F               	addwf	(??_checkCollision+2)^0,f,c
  7959  00022E  501E               	movf	(??_checkCollision+1)^0,w,c
  7960  000230  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7961  000232  EE20 F0B6          	lfsr	2,182
  7962  000236  501B               	movf	checkCollision@g^0,w,c
  7963  000238  26D9               	addwf	fsr2l,f,c
  7964  00023A  501C               	movf	(checkCollision@g+1)^0,w,c
  7965  00023C  22DA               	addwfc	fsr2h,f,c
  7966  00023E  CFDE F021          	movff	postinc2,??_checkCollision+4
  7967  000242  CFDD F022          	movff	postdec2,??_checkCollision+5
  7968  000246  0E08               	movlw	8
  7969  000248  2621               	addwf	(??_checkCollision+4)^0,f,c
  7970  00024A  0E00               	movlw	0
  7971  00024C  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7972  00024E  501F               	movf	(??_checkCollision+2)^0,w,c
  7973  000250  1821               	xorwf	(??_checkCollision+4)^0,w,c
  7974  000252  E107               	bnz	u6911
  7975  000254  5020               	movf	(??_checkCollision+3)^0,w,c
  7976  000256  1822               	xorwf	(??_checkCollision+5)^0,w,c
  7977  000258  A4D8               	btfss	status,2,c
  7978  00025A  EF31  F001         	goto	u6911
  7979  00025E  EF33  F001         	goto	u6910
  7980  000262                     u6911:
  7981  000262  EFBD  F002         	goto	l9708
  7982  000266                     u6910:
  7983  000266                     
  7984                           ;gameFunction.c: 72:     {;gameFunction.c: 73:         if(g->b.x+8>g->p1.x)
  7985  000266  EE20 F0B4          	lfsr	2,180
  7986  00026A  501B               	movf	checkCollision@g^0,w,c
  7987  00026C  26D9               	addwf	fsr2l,f,c
  7988  00026E  501C               	movf	(checkCollision@g+1)^0,w,c
  7989  000270  22DA               	addwfc	fsr2h,f,c
  7990  000272  CFDE F01D          	movff	postinc2,??_checkCollision
  7991  000276  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7992  00027A  0E08               	movlw	8
  7993  00027C  261D               	addwf	??_checkCollision^0,f,c
  7994  00027E  0E00               	movlw	0
  7995  000280  221E               	addwfc	(??_checkCollision+1)^0,f,c
  7996  000282  EE20 F0C0          	lfsr	2,192
  7997  000286  501B               	movf	checkCollision@g^0,w,c
  7998  000288  26D9               	addwf	fsr2l,f,c
  7999  00028A  501C               	movf	(checkCollision@g+1)^0,w,c
  8000  00028C  22DA               	addwfc	fsr2h,f,c
  8001  00028E  501D               	movf	??_checkCollision^0,w,c
  8002  000290  5CDE               	subwf	postinc2,w,c
  8003  000292  501E               	movf	(??_checkCollision+1)^0,w,c
  8004  000294  58DE               	subwfb	postinc2,w,c
  8005  000296  B0D8               	btfsc	status,0,c
  8006  000298  EF50  F001         	goto	u6921
  8007  00029C  EF52  F001         	goto	u6920
  8008  0002A0                     u6921:
  8009  0002A0  EFBD  F002         	goto	l9708
  8010  0002A4                     u6920:
  8011  0002A4                     
  8012                           ;gameFunction.c: 74:         {;gameFunction.c: 75:             if(g->b.x-8<g->p1.x+50)
  8013  0002A4  EE20 F0C0          	lfsr	2,192
  8014  0002A8  501B               	movf	checkCollision@g^0,w,c
  8015  0002AA  26D9               	addwf	fsr2l,f,c
  8016  0002AC  501C               	movf	(checkCollision@g+1)^0,w,c
  8017  0002AE  22DA               	addwfc	fsr2h,f,c
  8018  0002B0  CFDE F01D          	movff	postinc2,??_checkCollision
  8019  0002B4  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8020  0002B8  0E32               	movlw	50
  8021  0002BA  261D               	addwf	??_checkCollision^0,f,c
  8022  0002BC  0E00               	movlw	0
  8023  0002BE  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8024  0002C0  0EF8               	movlw	248
  8025  0002C2  6E1F               	movwf	(??_checkCollision+2)^0,c
  8026  0002C4  0EFF               	movlw	255
  8027  0002C6  6E20               	movwf	(??_checkCollision+3)^0,c
  8028  0002C8  EE20 F0B4          	lfsr	2,180
  8029  0002CC  501B               	movf	checkCollision@g^0,w,c
  8030  0002CE  26D9               	addwf	fsr2l,f,c
  8031  0002D0  501C               	movf	(checkCollision@g+1)^0,w,c
  8032  0002D2  22DA               	addwfc	fsr2h,f,c
  8033  0002D4  CFDE F021          	movff	postinc2,??_checkCollision+4
  8034  0002D8  CFDD F022          	movff	postdec2,??_checkCollision+5
  8035  0002DC  501F               	movf	(??_checkCollision+2)^0,w,c
  8036  0002DE  2621               	addwf	(??_checkCollision+4)^0,f,c
  8037  0002E0  5020               	movf	(??_checkCollision+3)^0,w,c
  8038  0002E2  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8039  0002E4  501D               	movf	??_checkCollision^0,w,c
  8040  0002E6  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8041  0002E8  501E               	movf	(??_checkCollision+1)^0,w,c
  8042  0002EA  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8043  0002EC  B0D8               	btfsc	status,0,c
  8044  0002EE  EF7B  F001         	goto	u6931
  8045  0002F2  EF7D  F001         	goto	u6930
  8046  0002F6                     u6931:
  8047  0002F6  EFBD  F002         	goto	l9708
  8048  0002FA                     u6930:
  8049  0002FA                     
  8050                           ;gameFunction.c: 76:             {;gameFunction.c: 78:                 if(g->b.x-g->p1.x
      +                          <10)
  8051  0002FA  EE20 F0C0          	lfsr	2,192
  8052  0002FE  501B               	movf	checkCollision@g^0,w,c
  8053  000300  26D9               	addwf	fsr2l,f,c
  8054  000302  501C               	movf	(checkCollision@g+1)^0,w,c
  8055  000304  22DA               	addwfc	fsr2h,f,c
  8056  000306  CFDE F01D          	movff	postinc2,??_checkCollision
  8057  00030A  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8058  00030E  EE20 F0B4          	lfsr	2,180
  8059  000312  501B               	movf	checkCollision@g^0,w,c
  8060  000314  26D9               	addwf	fsr2l,f,c
  8061  000316  501C               	movf	(checkCollision@g+1)^0,w,c
  8062  000318  22DA               	addwfc	fsr2h,f,c
  8063  00031A  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8064  00031E  CFDD F020          	movff	postdec2,??_checkCollision+3
  8065  000322  501D               	movf	??_checkCollision^0,w,c
  8066  000324  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8067  000326  501E               	movf	(??_checkCollision+1)^0,w,c
  8068  000328  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8069  00032A  5020               	movf	(??_checkCollision+3)^0,w,c
  8070  00032C  E107               	bnz	u6941
  8071  00032E  0E0A               	movlw	10
  8072  000330  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8073  000332  B0D8               	btfsc	status,0,c
  8074  000334  EF9E  F001         	goto	u6941
  8075  000338  EFA0  F001         	goto	u6940
  8076  00033C                     u6941:
  8077  00033C  EFC4  F001         	goto	l9692
  8078  000340                     u6940:
  8079  000340                     
  8080                           ;gameFunction.c: 79:                 {;gameFunction.c: 81:                     g->b.dy=-
      +                          g->b.dy;
  8081  000340  EE20 F0BE          	lfsr	2,190
  8082  000344  501B               	movf	checkCollision@g^0,w,c
  8083  000346  26D9               	addwf	fsr2l,f,c
  8084  000348  501C               	movf	(checkCollision@g+1)^0,w,c
  8085  00034A  22DA               	addwfc	fsr2h,f,c
  8086  00034C  CFDE F01D          	movff	postinc2,??_checkCollision
  8087  000350  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8088  000354  1E1D               	comf	??_checkCollision^0,f,c
  8089  000356  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8090  000358  4A1D               	infsnz	??_checkCollision^0,f,c
  8091  00035A  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8092  00035C  EE20 F0BE          	lfsr	2,190
  8093  000360  501B               	movf	checkCollision@g^0,w,c
  8094  000362  26D9               	addwf	fsr2l,f,c
  8095  000364  501C               	movf	(checkCollision@g+1)^0,w,c
  8096  000366  22DA               	addwfc	fsr2h,f,c
  8097  000368  C01D  FFDE         	movff	??_checkCollision,postinc2
  8098  00036C  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8099                           
  8100                           ;gameFunction.c: 82:                     g->b.dx-=2;
  8101  000370  EE20 F0BC          	lfsr	2,188
  8102  000374  501B               	movf	checkCollision@g^0,w,c
  8103  000376  26D9               	addwf	fsr2l,f,c
  8104  000378  501C               	movf	(checkCollision@g+1)^0,w,c
  8105  00037A  22DA               	addwfc	fsr2h,f,c
  8106  00037C  0EFE               	movlw	254
  8107  00037E  26DE               	addwf	postinc2,f,c
  8108  000380  0EFF               	movlw	255
  8109  000382  22DD               	addwfc	postdec2,f,c
  8110                           
  8111                           ;gameFunction.c: 83:                 }
  8112  000384  EFAF  F002         	goto	l790
  8113  000388                     l9692:
  8114  000388  EE20 F0C0          	lfsr	2,192
  8115  00038C  501B               	movf	checkCollision@g^0,w,c
  8116  00038E  26D9               	addwf	fsr2l,f,c
  8117  000390  501C               	movf	(checkCollision@g+1)^0,w,c
  8118  000392  22DA               	addwfc	fsr2h,f,c
  8119  000394  CFDE F01D          	movff	postinc2,??_checkCollision
  8120  000398  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8121  00039C  EE20 F0B4          	lfsr	2,180
  8122  0003A0  501B               	movf	checkCollision@g^0,w,c
  8123  0003A2  26D9               	addwf	fsr2l,f,c
  8124  0003A4  501C               	movf	(checkCollision@g+1)^0,w,c
  8125  0003A6  22DA               	addwfc	fsr2h,f,c
  8126  0003A8  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8127  0003AC  CFDD F020          	movff	postdec2,??_checkCollision+3
  8128  0003B0  501D               	movf	??_checkCollision^0,w,c
  8129  0003B2  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8130  0003B4  501E               	movf	(??_checkCollision+1)^0,w,c
  8131  0003B6  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8132  0003B8  5020               	movf	(??_checkCollision+3)^0,w,c
  8133  0003BA  E107               	bnz	u6951
  8134  0003BC  0E14               	movlw	20
  8135  0003BE  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8136  0003C0  B0D8               	btfsc	status,0,c
  8137  0003C2  EFE5  F001         	goto	u6951
  8138  0003C6  EFE7  F001         	goto	u6950
  8139  0003CA                     u6951:
  8140  0003CA  EF0A  F002         	goto	l9696
  8141  0003CE                     u6950:
  8142  0003CE                     
  8143                           ;gameFunction.c: 85:                 {;gameFunction.c: 87:                     g->b.dy=-
      +                          g->b.dy;
  8144  0003CE  EE20 F0BE          	lfsr	2,190
  8145  0003D2  501B               	movf	checkCollision@g^0,w,c
  8146  0003D4  26D9               	addwf	fsr2l,f,c
  8147  0003D6  501C               	movf	(checkCollision@g+1)^0,w,c
  8148  0003D8  22DA               	addwfc	fsr2h,f,c
  8149  0003DA  CFDE F01D          	movff	postinc2,??_checkCollision
  8150  0003DE  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8151  0003E2  1E1D               	comf	??_checkCollision^0,f,c
  8152  0003E4  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8153  0003E6  4A1D               	infsnz	??_checkCollision^0,f,c
  8154  0003E8  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8155  0003EA  EE20 F0BE          	lfsr	2,190
  8156  0003EE  501B               	movf	checkCollision@g^0,w,c
  8157  0003F0  26D9               	addwf	fsr2l,f,c
  8158  0003F2  501C               	movf	(checkCollision@g+1)^0,w,c
  8159  0003F4  22DA               	addwfc	fsr2h,f,c
  8160  0003F6  C01D  FFDE         	movff	??_checkCollision,postinc2
  8161  0003FA  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8162                           
  8163                           ;gameFunction.c: 88:                     g->b.dx-=1;
  8164  0003FE  EE20 F0BC          	lfsr	2,188
  8165  000402  501B               	movf	checkCollision@g^0,w,c
  8166  000404  26D9               	addwf	fsr2l,f,c
  8167  000406  501C               	movf	(checkCollision@g+1)^0,w,c
  8168  000408  22DA               	addwfc	fsr2h,f,c
  8169  00040A  06DE               	decf	postinc2,f,c
  8170  00040C  0E00               	movlw	0
  8171  00040E  5ADD               	subwfb	postdec2,f,c
  8172                           
  8173                           ;gameFunction.c: 89:                 }
  8174  000410  EFAF  F002         	goto	l790
  8175  000414                     l9696:
  8176  000414  EE20 F0C0          	lfsr	2,192
  8177  000418  501B               	movf	checkCollision@g^0,w,c
  8178  00041A  26D9               	addwf	fsr2l,f,c
  8179  00041C  501C               	movf	(checkCollision@g+1)^0,w,c
  8180  00041E  22DA               	addwfc	fsr2h,f,c
  8181  000420  CFDE F01D          	movff	postinc2,??_checkCollision
  8182  000424  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8183  000428  EE20 F0B4          	lfsr	2,180
  8184  00042C  501B               	movf	checkCollision@g^0,w,c
  8185  00042E  26D9               	addwf	fsr2l,f,c
  8186  000430  501C               	movf	(checkCollision@g+1)^0,w,c
  8187  000432  22DA               	addwfc	fsr2h,f,c
  8188  000434  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8189  000438  CFDD F020          	movff	postdec2,??_checkCollision+3
  8190  00043C  501D               	movf	??_checkCollision^0,w,c
  8191  00043E  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8192  000440  501E               	movf	(??_checkCollision+1)^0,w,c
  8193  000442  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8194  000444  5020               	movf	(??_checkCollision+3)^0,w,c
  8195  000446  E107               	bnz	u6961
  8196  000448  0E1E               	movlw	30
  8197  00044A  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8198  00044C  B0D8               	btfsc	status,0,c
  8199  00044E  EF2B  F002         	goto	u6961
  8200  000452  EF2D  F002         	goto	u6960
  8201  000456                     u6961:
  8202  000456  EF47  F002         	goto	l9700
  8203  00045A                     u6960:
  8204  00045A                     
  8205                           ;gameFunction.c: 94:                     g->b.dy=-g->b.dy;
  8206  00045A  EE20 F0BE          	lfsr	2,190
  8207  00045E  501B               	movf	checkCollision@g^0,w,c
  8208  000460  26D9               	addwf	fsr2l,f,c
  8209  000462  501C               	movf	(checkCollision@g+1)^0,w,c
  8210  000464  22DA               	addwfc	fsr2h,f,c
  8211  000466  CFDE F01D          	movff	postinc2,??_checkCollision
  8212  00046A  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8213  00046E  1E1D               	comf	??_checkCollision^0,f,c
  8214  000470  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8215  000472  4A1D               	infsnz	??_checkCollision^0,f,c
  8216  000474  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8217  000476  EE20 F0BE          	lfsr	2,190
  8218  00047A  501B               	movf	checkCollision@g^0,w,c
  8219  00047C  26D9               	addwf	fsr2l,f,c
  8220  00047E  501C               	movf	(checkCollision@g+1)^0,w,c
  8221  000480  22DA               	addwfc	fsr2h,f,c
  8222  000482  C01D  FFDE         	movff	??_checkCollision,postinc2
  8223  000486  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8224                           
  8225                           ;gameFunction.c: 95:                 }
  8226  00048A  EFAF  F002         	goto	l790
  8227  00048E                     l9700:
  8228  00048E  EE20 F0C0          	lfsr	2,192
  8229  000492  501B               	movf	checkCollision@g^0,w,c
  8230  000494  26D9               	addwf	fsr2l,f,c
  8231  000496  501C               	movf	(checkCollision@g+1)^0,w,c
  8232  000498  22DA               	addwfc	fsr2h,f,c
  8233  00049A  CFDE F01D          	movff	postinc2,??_checkCollision
  8234  00049E  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8235  0004A2  EE20 F0B4          	lfsr	2,180
  8236  0004A6  501B               	movf	checkCollision@g^0,w,c
  8237  0004A8  26D9               	addwf	fsr2l,f,c
  8238  0004AA  501C               	movf	(checkCollision@g+1)^0,w,c
  8239  0004AC  22DA               	addwfc	fsr2h,f,c
  8240  0004AE  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8241  0004B2  CFDD F020          	movff	postdec2,??_checkCollision+3
  8242  0004B6  501D               	movf	??_checkCollision^0,w,c
  8243  0004B8  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8244  0004BA  501E               	movf	(??_checkCollision+1)^0,w,c
  8245  0004BC  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8246  0004BE  5020               	movf	(??_checkCollision+3)^0,w,c
  8247  0004C0  E107               	bnz	u6971
  8248  0004C2  0E28               	movlw	40
  8249  0004C4  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8250  0004C6  B0D8               	btfsc	status,0,c
  8251  0004C8  EF68  F002         	goto	u6971
  8252  0004CC  EF6A  F002         	goto	u6970
  8253  0004D0                     u6971:
  8254  0004D0  EF8D  F002         	goto	l9704
  8255  0004D4                     u6970:
  8256  0004D4                     
  8257                           ;gameFunction.c: 97:                 {;gameFunction.c: 99:                     g->b.dy=-
      +                          g->b.dy;
  8258  0004D4  EE20 F0BE          	lfsr	2,190
  8259  0004D8  501B               	movf	checkCollision@g^0,w,c
  8260  0004DA  26D9               	addwf	fsr2l,f,c
  8261  0004DC  501C               	movf	(checkCollision@g+1)^0,w,c
  8262  0004DE  22DA               	addwfc	fsr2h,f,c
  8263  0004E0  CFDE F01D          	movff	postinc2,??_checkCollision
  8264  0004E4  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8265  0004E8  1E1D               	comf	??_checkCollision^0,f,c
  8266  0004EA  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8267  0004EC  4A1D               	infsnz	??_checkCollision^0,f,c
  8268  0004EE  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8269  0004F0  EE20 F0BE          	lfsr	2,190
  8270  0004F4  501B               	movf	checkCollision@g^0,w,c
  8271  0004F6  26D9               	addwf	fsr2l,f,c
  8272  0004F8  501C               	movf	(checkCollision@g+1)^0,w,c
  8273  0004FA  22DA               	addwfc	fsr2h,f,c
  8274  0004FC  C01D  FFDE         	movff	??_checkCollision,postinc2
  8275  000500  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8276                           
  8277                           ;gameFunction.c: 100:                     g->b.dx+=1;
  8278  000504  EE20 F0BC          	lfsr	2,188
  8279  000508  501B               	movf	checkCollision@g^0,w,c
  8280  00050A  26D9               	addwf	fsr2l,f,c
  8281  00050C  501C               	movf	(checkCollision@g+1)^0,w,c
  8282  00050E  22DA               	addwfc	fsr2h,f,c
  8283  000510  2ADE               	incf	postinc2,f,c
  8284  000512  0E00               	movlw	0
  8285  000514  22DD               	addwfc	postdec2,f,c
  8286                           
  8287                           ;gameFunction.c: 101:                 }
  8288  000516  EFAF  F002         	goto	l790
  8289  00051A                     l9704:
  8290                           
  8291                           ;gameFunction.c: 103:                 {;gameFunction.c: 105:                     g->b.dy
      +                          =-g->b.dy;
  8292  00051A  EE20 F0BE          	lfsr	2,190
  8293  00051E  501B               	movf	checkCollision@g^0,w,c
  8294  000520  26D9               	addwf	fsr2l,f,c
  8295  000522  501C               	movf	(checkCollision@g+1)^0,w,c
  8296  000524  22DA               	addwfc	fsr2h,f,c
  8297  000526  CFDE F01D          	movff	postinc2,??_checkCollision
  8298  00052A  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8299  00052E  1E1D               	comf	??_checkCollision^0,f,c
  8300  000530  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8301  000532  4A1D               	infsnz	??_checkCollision^0,f,c
  8302  000534  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8303  000536  EE20 F0BE          	lfsr	2,190
  8304  00053A  501B               	movf	checkCollision@g^0,w,c
  8305  00053C  26D9               	addwf	fsr2l,f,c
  8306  00053E  501C               	movf	(checkCollision@g+1)^0,w,c
  8307  000540  22DA               	addwfc	fsr2h,f,c
  8308  000542  C01D  FFDE         	movff	??_checkCollision,postinc2
  8309  000546  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8310                           
  8311                           ;gameFunction.c: 106:                     g->b.dx+=2;
  8312  00054A  EE20 F0BC          	lfsr	2,188
  8313  00054E  501B               	movf	checkCollision@g^0,w,c
  8314  000550  26D9               	addwf	fsr2l,f,c
  8315  000552  501C               	movf	(checkCollision@g+1)^0,w,c
  8316  000554  22DA               	addwfc	fsr2h,f,c
  8317  000556  0E02               	movlw	2
  8318  000558  26DE               	addwf	postinc2,f,c
  8319  00055A  0E00               	movlw	0
  8320  00055C  22DD               	addwfc	postdec2,f,c
  8321  00055E                     l790:
  8322                           
  8323                           ;gameFunction.c: 110:                 g->s1.homeScore++;
  8324  00055E  EE20 F0D4          	lfsr	2,212
  8325  000562  501B               	movf	checkCollision@g^0,w,c
  8326  000564  26D9               	addwf	fsr2l,f,c
  8327  000566  501C               	movf	(checkCollision@g+1)^0,w,c
  8328  000568  22DA               	addwfc	fsr2h,f,c
  8329  00056A  2ADE               	incf	postinc2,f,c
  8330  00056C  0E00               	movlw	0
  8331  00056E  22DD               	addwfc	postdec2,f,c
  8332  000570                     
  8333                           ;gameFunction.c: 111:                 XF_pushEvent(evRedrawScore,0);
  8334  000570  0E00               	movlw	0
  8335  000572  6E18               	movwf	XF_pushEvent@inISR^0,c
  8336  000574  0E0E               	movlw	14
  8337  000576  EC09  F030         	call	_XF_pushEvent
  8338  00057A                     l9708:
  8339                           
  8340                           ;gameFunction.c: 118:     if(g->b.y-8==g->p2.y+10 +1)
  8341  00057A  EE20 F0CC          	lfsr	2,204
  8342  00057E  501B               	movf	checkCollision@g^0,w,c
  8343  000580  26D9               	addwf	fsr2l,f,c
  8344  000582  501C               	movf	(checkCollision@g+1)^0,w,c
  8345  000584  22DA               	addwfc	fsr2h,f,c
  8346  000586  CFDE F01D          	movff	postinc2,??_checkCollision
  8347  00058A  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8348  00058E  0E0B               	movlw	11
  8349  000590  261D               	addwf	??_checkCollision^0,f,c
  8350  000592  0E00               	movlw	0
  8351  000594  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8352  000596  0EF8               	movlw	248
  8353  000598  6E1F               	movwf	(??_checkCollision+2)^0,c
  8354  00059A  0EFF               	movlw	255
  8355  00059C  6E20               	movwf	(??_checkCollision+3)^0,c
  8356  00059E  EE20 F0B6          	lfsr	2,182
  8357  0005A2  501B               	movf	checkCollision@g^0,w,c
  8358  0005A4  26D9               	addwf	fsr2l,f,c
  8359  0005A6  501C               	movf	(checkCollision@g+1)^0,w,c
  8360  0005A8  22DA               	addwfc	fsr2h,f,c
  8361  0005AA  CFDE F021          	movff	postinc2,??_checkCollision+4
  8362  0005AE  CFDD F022          	movff	postdec2,??_checkCollision+5
  8363  0005B2  501F               	movf	(??_checkCollision+2)^0,w,c
  8364  0005B4  2621               	addwf	(??_checkCollision+4)^0,f,c
  8365  0005B6  5020               	movf	(??_checkCollision+3)^0,w,c
  8366  0005B8  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8367  0005BA  501D               	movf	??_checkCollision^0,w,c
  8368  0005BC  1821               	xorwf	(??_checkCollision+4)^0,w,c
  8369  0005BE  E107               	bnz	u6981
  8370  0005C0  501E               	movf	(??_checkCollision+1)^0,w,c
  8371  0005C2  1822               	xorwf	(??_checkCollision+5)^0,w,c
  8372  0005C4  A4D8               	btfss	status,2,c
  8373  0005C6  EFE7  F002         	goto	u6981
  8374  0005CA  EFE9  F002         	goto	u6980
  8375  0005CE                     u6981:
  8376  0005CE  EF73  F004         	goto	l9734
  8377  0005D2                     u6980:
  8378  0005D2                     
  8379                           ;gameFunction.c: 119:     {;gameFunction.c: 120:         if(g->b.x+8>g->p2.x)
  8380  0005D2  EE20 F0B4          	lfsr	2,180
  8381  0005D6  501B               	movf	checkCollision@g^0,w,c
  8382  0005D8  26D9               	addwf	fsr2l,f,c
  8383  0005DA  501C               	movf	(checkCollision@g+1)^0,w,c
  8384  0005DC  22DA               	addwfc	fsr2h,f,c
  8385  0005DE  CFDE F01D          	movff	postinc2,??_checkCollision
  8386  0005E2  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8387  0005E6  0E08               	movlw	8
  8388  0005E8  261D               	addwf	??_checkCollision^0,f,c
  8389  0005EA  0E00               	movlw	0
  8390  0005EC  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8391  0005EE  EE20 F0CA          	lfsr	2,202
  8392  0005F2  501B               	movf	checkCollision@g^0,w,c
  8393  0005F4  26D9               	addwf	fsr2l,f,c
  8394  0005F6  501C               	movf	(checkCollision@g+1)^0,w,c
  8395  0005F8  22DA               	addwfc	fsr2h,f,c
  8396  0005FA  501D               	movf	??_checkCollision^0,w,c
  8397  0005FC  5CDE               	subwf	postinc2,w,c
  8398  0005FE  501E               	movf	(??_checkCollision+1)^0,w,c
  8399  000600  58DE               	subwfb	postinc2,w,c
  8400  000602  B0D8               	btfsc	status,0,c
  8401  000604  EF06  F003         	goto	u6991
  8402  000608  EF08  F003         	goto	u6990
  8403  00060C                     u6991:
  8404  00060C  EF73  F004         	goto	l9734
  8405  000610                     u6990:
  8406  000610                     
  8407                           ;gameFunction.c: 121:         {;gameFunction.c: 122:             if(g->b.x-8<g->p2.x+50)
  8408  000610  EE20 F0CA          	lfsr	2,202
  8409  000614  501B               	movf	checkCollision@g^0,w,c
  8410  000616  26D9               	addwf	fsr2l,f,c
  8411  000618  501C               	movf	(checkCollision@g+1)^0,w,c
  8412  00061A  22DA               	addwfc	fsr2h,f,c
  8413  00061C  CFDE F01D          	movff	postinc2,??_checkCollision
  8414  000620  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8415  000624  0E32               	movlw	50
  8416  000626  261D               	addwf	??_checkCollision^0,f,c
  8417  000628  0E00               	movlw	0
  8418  00062A  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8419  00062C  0EF8               	movlw	248
  8420  00062E  6E1F               	movwf	(??_checkCollision+2)^0,c
  8421  000630  0EFF               	movlw	255
  8422  000632  6E20               	movwf	(??_checkCollision+3)^0,c
  8423  000634  EE20 F0B4          	lfsr	2,180
  8424  000638  501B               	movf	checkCollision@g^0,w,c
  8425  00063A  26D9               	addwf	fsr2l,f,c
  8426  00063C  501C               	movf	(checkCollision@g+1)^0,w,c
  8427  00063E  22DA               	addwfc	fsr2h,f,c
  8428  000640  CFDE F021          	movff	postinc2,??_checkCollision+4
  8429  000644  CFDD F022          	movff	postdec2,??_checkCollision+5
  8430  000648  501F               	movf	(??_checkCollision+2)^0,w,c
  8431  00064A  2621               	addwf	(??_checkCollision+4)^0,f,c
  8432  00064C  5020               	movf	(??_checkCollision+3)^0,w,c
  8433  00064E  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8434  000650  501D               	movf	??_checkCollision^0,w,c
  8435  000652  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8436  000654  501E               	movf	(??_checkCollision+1)^0,w,c
  8437  000656  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8438  000658  B0D8               	btfsc	status,0,c
  8439  00065A  EF31  F003         	goto	u7001
  8440  00065E  EF33  F003         	goto	u7000
  8441  000662                     u7001:
  8442  000662  EF73  F004         	goto	l9734
  8443  000666                     u7000:
  8444  000666                     
  8445                           ;gameFunction.c: 123:             {;gameFunction.c: 124:                 if(g->b.x-g->p2
      +                          .x<10)
  8446  000666  EE20 F0CA          	lfsr	2,202
  8447  00066A  501B               	movf	checkCollision@g^0,w,c
  8448  00066C  26D9               	addwf	fsr2l,f,c
  8449  00066E  501C               	movf	(checkCollision@g+1)^0,w,c
  8450  000670  22DA               	addwfc	fsr2h,f,c
  8451  000672  CFDE F01D          	movff	postinc2,??_checkCollision
  8452  000676  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8453  00067A  EE20 F0B4          	lfsr	2,180
  8454  00067E  501B               	movf	checkCollision@g^0,w,c
  8455  000680  26D9               	addwf	fsr2l,f,c
  8456  000682  501C               	movf	(checkCollision@g+1)^0,w,c
  8457  000684  22DA               	addwfc	fsr2h,f,c
  8458  000686  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8459  00068A  CFDD F020          	movff	postdec2,??_checkCollision+3
  8460  00068E  501D               	movf	??_checkCollision^0,w,c
  8461  000690  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8462  000692  501E               	movf	(??_checkCollision+1)^0,w,c
  8463  000694  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8464  000696  5020               	movf	(??_checkCollision+3)^0,w,c
  8465  000698  E107               	bnz	u7011
  8466  00069A  0E0A               	movlw	10
  8467  00069C  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8468  00069E  B0D8               	btfsc	status,0,c
  8469  0006A0  EF54  F003         	goto	u7011
  8470  0006A4  EF56  F003         	goto	u7010
  8471  0006A8                     u7011:
  8472  0006A8  EF7A  F003         	goto	l9718
  8473  0006AC                     u7010:
  8474  0006AC                     
  8475                           ;gameFunction.c: 125:                 {;gameFunction.c: 127:                     g->b.dy
      +                          =-g->b.dy;
  8476  0006AC  EE20 F0BE          	lfsr	2,190
  8477  0006B0  501B               	movf	checkCollision@g^0,w,c
  8478  0006B2  26D9               	addwf	fsr2l,f,c
  8479  0006B4  501C               	movf	(checkCollision@g+1)^0,w,c
  8480  0006B6  22DA               	addwfc	fsr2h,f,c
  8481  0006B8  CFDE F01D          	movff	postinc2,??_checkCollision
  8482  0006BC  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8483  0006C0  1E1D               	comf	??_checkCollision^0,f,c
  8484  0006C2  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8485  0006C4  4A1D               	infsnz	??_checkCollision^0,f,c
  8486  0006C6  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8487  0006C8  EE20 F0BE          	lfsr	2,190
  8488  0006CC  501B               	movf	checkCollision@g^0,w,c
  8489  0006CE  26D9               	addwf	fsr2l,f,c
  8490  0006D0  501C               	movf	(checkCollision@g+1)^0,w,c
  8491  0006D2  22DA               	addwfc	fsr2h,f,c
  8492  0006D4  C01D  FFDE         	movff	??_checkCollision,postinc2
  8493  0006D8  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8494                           
  8495                           ;gameFunction.c: 128:                     g->b.dx-=2;
  8496  0006DC  EE20 F0BC          	lfsr	2,188
  8497  0006E0  501B               	movf	checkCollision@g^0,w,c
  8498  0006E2  26D9               	addwf	fsr2l,f,c
  8499  0006E4  501C               	movf	(checkCollision@g+1)^0,w,c
  8500  0006E6  22DA               	addwfc	fsr2h,f,c
  8501  0006E8  0EFE               	movlw	254
  8502  0006EA  26DE               	addwf	postinc2,f,c
  8503  0006EC  0EFF               	movlw	255
  8504  0006EE  22DD               	addwfc	postdec2,f,c
  8505                           
  8506                           ;gameFunction.c: 129:                 }
  8507  0006F0  EF65  F004         	goto	l801
  8508  0006F4                     l9718:
  8509  0006F4  EE20 F0CA          	lfsr	2,202
  8510  0006F8  501B               	movf	checkCollision@g^0,w,c
  8511  0006FA  26D9               	addwf	fsr2l,f,c
  8512  0006FC  501C               	movf	(checkCollision@g+1)^0,w,c
  8513  0006FE  22DA               	addwfc	fsr2h,f,c
  8514  000700  CFDE F01D          	movff	postinc2,??_checkCollision
  8515  000704  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8516  000708  EE20 F0B4          	lfsr	2,180
  8517  00070C  501B               	movf	checkCollision@g^0,w,c
  8518  00070E  26D9               	addwf	fsr2l,f,c
  8519  000710  501C               	movf	(checkCollision@g+1)^0,w,c
  8520  000712  22DA               	addwfc	fsr2h,f,c
  8521  000714  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8522  000718  CFDD F020          	movff	postdec2,??_checkCollision+3
  8523  00071C  501D               	movf	??_checkCollision^0,w,c
  8524  00071E  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8525  000720  501E               	movf	(??_checkCollision+1)^0,w,c
  8526  000722  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8527  000724  5020               	movf	(??_checkCollision+3)^0,w,c
  8528  000726  E107               	bnz	u7021
  8529  000728  0E14               	movlw	20
  8530  00072A  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8531  00072C  B0D8               	btfsc	status,0,c
  8532  00072E  EF9B  F003         	goto	u7021
  8533  000732  EF9D  F003         	goto	u7020
  8534  000736                     u7021:
  8535  000736  EFC0  F003         	goto	l9722
  8536  00073A                     u7020:
  8537  00073A                     
  8538                           ;gameFunction.c: 131:                 {;gameFunction.c: 133:                     g->b.dy
      +                          =-g->b.dy;
  8539  00073A  EE20 F0BE          	lfsr	2,190
  8540  00073E  501B               	movf	checkCollision@g^0,w,c
  8541  000740  26D9               	addwf	fsr2l,f,c
  8542  000742  501C               	movf	(checkCollision@g+1)^0,w,c
  8543  000744  22DA               	addwfc	fsr2h,f,c
  8544  000746  CFDE F01D          	movff	postinc2,??_checkCollision
  8545  00074A  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8546  00074E  1E1D               	comf	??_checkCollision^0,f,c
  8547  000750  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8548  000752  4A1D               	infsnz	??_checkCollision^0,f,c
  8549  000754  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8550  000756  EE20 F0BE          	lfsr	2,190
  8551  00075A  501B               	movf	checkCollision@g^0,w,c
  8552  00075C  26D9               	addwf	fsr2l,f,c
  8553  00075E  501C               	movf	(checkCollision@g+1)^0,w,c
  8554  000760  22DA               	addwfc	fsr2h,f,c
  8555  000762  C01D  FFDE         	movff	??_checkCollision,postinc2
  8556  000766  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8557                           
  8558                           ;gameFunction.c: 134:                     g->b.dx-=1;
  8559  00076A  EE20 F0BC          	lfsr	2,188
  8560  00076E  501B               	movf	checkCollision@g^0,w,c
  8561  000770  26D9               	addwf	fsr2l,f,c
  8562  000772  501C               	movf	(checkCollision@g+1)^0,w,c
  8563  000774  22DA               	addwfc	fsr2h,f,c
  8564  000776  06DE               	decf	postinc2,f,c
  8565  000778  0E00               	movlw	0
  8566  00077A  5ADD               	subwfb	postdec2,f,c
  8567                           
  8568                           ;gameFunction.c: 135:                 }
  8569  00077C  EF65  F004         	goto	l801
  8570  000780                     l9722:
  8571  000780  EE20 F0CA          	lfsr	2,202
  8572  000784  501B               	movf	checkCollision@g^0,w,c
  8573  000786  26D9               	addwf	fsr2l,f,c
  8574  000788  501C               	movf	(checkCollision@g+1)^0,w,c
  8575  00078A  22DA               	addwfc	fsr2h,f,c
  8576  00078C  CFDE F01D          	movff	postinc2,??_checkCollision
  8577  000790  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8578  000794  EE20 F0B4          	lfsr	2,180
  8579  000798  501B               	movf	checkCollision@g^0,w,c
  8580  00079A  26D9               	addwf	fsr2l,f,c
  8581  00079C  501C               	movf	(checkCollision@g+1)^0,w,c
  8582  00079E  22DA               	addwfc	fsr2h,f,c
  8583  0007A0  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8584  0007A4  CFDD F020          	movff	postdec2,??_checkCollision+3
  8585  0007A8  501D               	movf	??_checkCollision^0,w,c
  8586  0007AA  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8587  0007AC  501E               	movf	(??_checkCollision+1)^0,w,c
  8588  0007AE  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8589  0007B0  5020               	movf	(??_checkCollision+3)^0,w,c
  8590  0007B2  E107               	bnz	u7031
  8591  0007B4  0E1E               	movlw	30
  8592  0007B6  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8593  0007B8  B0D8               	btfsc	status,0,c
  8594  0007BA  EFE1  F003         	goto	u7031
  8595  0007BE  EFE3  F003         	goto	u7030
  8596  0007C2                     u7031:
  8597  0007C2  EFFD  F003         	goto	l9726
  8598  0007C6                     u7030:
  8599  0007C6                     
  8600                           ;gameFunction.c: 140:                     g->b.dy=-g->b.dy;
  8601  0007C6  EE20 F0BE          	lfsr	2,190
  8602  0007CA  501B               	movf	checkCollision@g^0,w,c
  8603  0007CC  26D9               	addwf	fsr2l,f,c
  8604  0007CE  501C               	movf	(checkCollision@g+1)^0,w,c
  8605  0007D0  22DA               	addwfc	fsr2h,f,c
  8606  0007D2  CFDE F01D          	movff	postinc2,??_checkCollision
  8607  0007D6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8608  0007DA  1E1D               	comf	??_checkCollision^0,f,c
  8609  0007DC  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8610  0007DE  4A1D               	infsnz	??_checkCollision^0,f,c
  8611  0007E0  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8612  0007E2  EE20 F0BE          	lfsr	2,190
  8613  0007E6  501B               	movf	checkCollision@g^0,w,c
  8614  0007E8  26D9               	addwf	fsr2l,f,c
  8615  0007EA  501C               	movf	(checkCollision@g+1)^0,w,c
  8616  0007EC  22DA               	addwfc	fsr2h,f,c
  8617  0007EE  C01D  FFDE         	movff	??_checkCollision,postinc2
  8618  0007F2  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8619                           
  8620                           ;gameFunction.c: 141:                 }
  8621  0007F6  EF65  F004         	goto	l801
  8622  0007FA                     l9726:
  8623  0007FA  EE20 F0CA          	lfsr	2,202
  8624  0007FE  501B               	movf	checkCollision@g^0,w,c
  8625  000800  26D9               	addwf	fsr2l,f,c
  8626  000802  501C               	movf	(checkCollision@g+1)^0,w,c
  8627  000804  22DA               	addwfc	fsr2h,f,c
  8628  000806  CFDE F01D          	movff	postinc2,??_checkCollision
  8629  00080A  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8630  00080E  EE20 F0B4          	lfsr	2,180
  8631  000812  501B               	movf	checkCollision@g^0,w,c
  8632  000814  26D9               	addwf	fsr2l,f,c
  8633  000816  501C               	movf	(checkCollision@g+1)^0,w,c
  8634  000818  22DA               	addwfc	fsr2h,f,c
  8635  00081A  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8636  00081E  CFDD F020          	movff	postdec2,??_checkCollision+3
  8637  000822  501D               	movf	??_checkCollision^0,w,c
  8638  000824  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8639  000826  501E               	movf	(??_checkCollision+1)^0,w,c
  8640  000828  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8641  00082A  5020               	movf	(??_checkCollision+3)^0,w,c
  8642  00082C  E107               	bnz	u7041
  8643  00082E  0E28               	movlw	40
  8644  000830  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8645  000832  B0D8               	btfsc	status,0,c
  8646  000834  EF1E  F004         	goto	u7041
  8647  000838  EF20  F004         	goto	u7040
  8648  00083C                     u7041:
  8649  00083C  EF43  F004         	goto	l9730
  8650  000840                     u7040:
  8651  000840                     
  8652                           ;gameFunction.c: 143:                 {;gameFunction.c: 145:                     g->b.dy
      +                          =-g->b.dy;
  8653  000840  EE20 F0BE          	lfsr	2,190
  8654  000844  501B               	movf	checkCollision@g^0,w,c
  8655  000846  26D9               	addwf	fsr2l,f,c
  8656  000848  501C               	movf	(checkCollision@g+1)^0,w,c
  8657  00084A  22DA               	addwfc	fsr2h,f,c
  8658  00084C  CFDE F01D          	movff	postinc2,??_checkCollision
  8659  000850  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8660  000854  1E1D               	comf	??_checkCollision^0,f,c
  8661  000856  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8662  000858  4A1D               	infsnz	??_checkCollision^0,f,c
  8663  00085A  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8664  00085C  EE20 F0BE          	lfsr	2,190
  8665  000860  501B               	movf	checkCollision@g^0,w,c
  8666  000862  26D9               	addwf	fsr2l,f,c
  8667  000864  501C               	movf	(checkCollision@g+1)^0,w,c
  8668  000866  22DA               	addwfc	fsr2h,f,c
  8669  000868  C01D  FFDE         	movff	??_checkCollision,postinc2
  8670  00086C  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8671                           
  8672                           ;gameFunction.c: 146:                     g->b.dx+=1;
  8673  000870  EE20 F0BC          	lfsr	2,188
  8674  000874  501B               	movf	checkCollision@g^0,w,c
  8675  000876  26D9               	addwf	fsr2l,f,c
  8676  000878  501C               	movf	(checkCollision@g+1)^0,w,c
  8677  00087A  22DA               	addwfc	fsr2h,f,c
  8678  00087C  2ADE               	incf	postinc2,f,c
  8679  00087E  0E00               	movlw	0
  8680  000880  22DD               	addwfc	postdec2,f,c
  8681                           
  8682                           ;gameFunction.c: 147:                 }
  8683  000882  EF65  F004         	goto	l801
  8684  000886                     l9730:
  8685                           
  8686                           ;gameFunction.c: 149:                 {;gameFunction.c: 151:                     g->b.dy
      +                          =-g->b.dy;
  8687  000886  EE20 F0BE          	lfsr	2,190
  8688  00088A  501B               	movf	checkCollision@g^0,w,c
  8689  00088C  26D9               	addwf	fsr2l,f,c
  8690  00088E  501C               	movf	(checkCollision@g+1)^0,w,c
  8691  000890  22DA               	addwfc	fsr2h,f,c
  8692  000892  CFDE F01D          	movff	postinc2,??_checkCollision
  8693  000896  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8694  00089A  1E1D               	comf	??_checkCollision^0,f,c
  8695  00089C  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8696  00089E  4A1D               	infsnz	??_checkCollision^0,f,c
  8697  0008A0  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8698  0008A2  EE20 F0BE          	lfsr	2,190
  8699  0008A6  501B               	movf	checkCollision@g^0,w,c
  8700  0008A8  26D9               	addwf	fsr2l,f,c
  8701  0008AA  501C               	movf	(checkCollision@g+1)^0,w,c
  8702  0008AC  22DA               	addwfc	fsr2h,f,c
  8703  0008AE  C01D  FFDE         	movff	??_checkCollision,postinc2
  8704  0008B2  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8705                           
  8706                           ;gameFunction.c: 152:                     g->b.dx+=2;
  8707  0008B6  EE20 F0BC          	lfsr	2,188
  8708  0008BA  501B               	movf	checkCollision@g^0,w,c
  8709  0008BC  26D9               	addwf	fsr2l,f,c
  8710  0008BE  501C               	movf	(checkCollision@g+1)^0,w,c
  8711  0008C0  22DA               	addwfc	fsr2h,f,c
  8712  0008C2  0E02               	movlw	2
  8713  0008C4  26DE               	addwf	postinc2,f,c
  8714  0008C6  0E00               	movlw	0
  8715  0008C8  22DD               	addwfc	postdec2,f,c
  8716  0008CA                     l801:
  8717                           
  8718                           ;gameFunction.c: 155:                 g->s1.awayScore++;
  8719  0008CA  EE20 F0D6          	lfsr	2,214
  8720  0008CE  501B               	movf	checkCollision@g^0,w,c
  8721  0008D0  26D9               	addwf	fsr2l,f,c
  8722  0008D2  501C               	movf	(checkCollision@g+1)^0,w,c
  8723  0008D4  22DA               	addwfc	fsr2h,f,c
  8724  0008D6  2ADE               	incf	postinc2,f,c
  8725  0008D8  0E00               	movlw	0
  8726  0008DA  22DD               	addwfc	postdec2,f,c
  8727  0008DC                     
  8728                           ;gameFunction.c: 156:                 XF_pushEvent(evRedrawScore,0);
  8729  0008DC  0E00               	movlw	0
  8730  0008DE  6E18               	movwf	XF_pushEvent@inISR^0,c
  8731  0008E0  0E0E               	movlw	14
  8732  0008E2  EC09  F030         	call	_XF_pushEvent
  8733  0008E6                     l9734:
  8734                           
  8735                           ;gameFunction.c: 162:     if(g->b.y-8<g->p2.y-10)
  8736  0008E6  0EF6               	movlw	246
  8737  0008E8  6E1D               	movwf	??_checkCollision^0,c
  8738  0008EA  0EFF               	movlw	255
  8739  0008EC  6E1E               	movwf	(??_checkCollision+1)^0,c
  8740  0008EE  EE20 F0CC          	lfsr	2,204
  8741  0008F2  501B               	movf	checkCollision@g^0,w,c
  8742  0008F4  26D9               	addwf	fsr2l,f,c
  8743  0008F6  501C               	movf	(checkCollision@g+1)^0,w,c
  8744  0008F8  22DA               	addwfc	fsr2h,f,c
  8745  0008FA  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8746  0008FE  CFDD F020          	movff	postdec2,??_checkCollision+3
  8747  000902  501D               	movf	??_checkCollision^0,w,c
  8748  000904  261F               	addwf	(??_checkCollision+2)^0,f,c
  8749  000906  501E               	movf	(??_checkCollision+1)^0,w,c
  8750  000908  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8751  00090A  0EF8               	movlw	248
  8752  00090C  6E21               	movwf	(??_checkCollision+4)^0,c
  8753  00090E  0EFF               	movlw	255
  8754  000910  6E22               	movwf	(??_checkCollision+5)^0,c
  8755  000912  EE20 F0B6          	lfsr	2,182
  8756  000916  501B               	movf	checkCollision@g^0,w,c
  8757  000918  26D9               	addwf	fsr2l,f,c
  8758  00091A  501C               	movf	(checkCollision@g+1)^0,w,c
  8759  00091C  22DA               	addwfc	fsr2h,f,c
  8760  00091E  CFDE F023          	movff	postinc2,??_checkCollision+6
  8761  000922  CFDD F024          	movff	postdec2,??_checkCollision+7
  8762  000926  5021               	movf	(??_checkCollision+4)^0,w,c
  8763  000928  2623               	addwf	(??_checkCollision+6)^0,f,c
  8764  00092A  5022               	movf	(??_checkCollision+5)^0,w,c
  8765  00092C  2224               	addwfc	(??_checkCollision+7)^0,f,c
  8766  00092E  501F               	movf	(??_checkCollision+2)^0,w,c
  8767  000930  5C23               	subwf	(??_checkCollision+6)^0,w,c
  8768  000932  5020               	movf	(??_checkCollision+3)^0,w,c
  8769  000934  5824               	subwfb	(??_checkCollision+7)^0,w,c
  8770  000936  B0D8               	btfsc	status,0,c
  8771  000938  EFA0  F004         	goto	u7051
  8772  00093C  EFA2  F004         	goto	u7050
  8773  000940                     u7051:
  8774  000940  EFB1  F004         	goto	l9740
  8775  000944                     u7050:
  8776  000944                     
  8777                           ;gameFunction.c: 163:     {;gameFunction.c: 165:         XF_pushEvent(evEndGame,0);
  8778  000944  0E00               	movlw	0
  8779  000946  6E18               	movwf	XF_pushEvent@inISR^0,c
  8780  000948  0E09               	movlw	9
  8781  00094A  EC09  F030         	call	_XF_pushEvent
  8782  00094E                     
  8783                           ;gameFunction.c: 166:         g->s1.awayScore=0;
  8784  00094E  EE20 F0D6          	lfsr	2,214
  8785  000952  501B               	movf	checkCollision@g^0,w,c
  8786  000954  26D9               	addwf	fsr2l,f,c
  8787  000956  501C               	movf	(checkCollision@g+1)^0,w,c
  8788  000958  22DA               	addwfc	fsr2h,f,c
  8789  00095A  0E00               	movlw	0
  8790  00095C  6EDE               	movwf	postinc2,c
  8791  00095E  0E00               	movlw	0
  8792  000960  6EDD               	movwf	postdec2,c
  8793  000962                     l9740:
  8794                           
  8795                           ;gameFunction.c: 168:     if(g->b.y+8>g->p1.y+10)
  8796  000962  EE20 F0B6          	lfsr	2,182
  8797  000966  501B               	movf	checkCollision@g^0,w,c
  8798  000968  26D9               	addwf	fsr2l,f,c
  8799  00096A  501C               	movf	(checkCollision@g+1)^0,w,c
  8800  00096C  22DA               	addwfc	fsr2h,f,c
  8801  00096E  CFDE F01D          	movff	postinc2,??_checkCollision
  8802  000972  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8803  000976  0E08               	movlw	8
  8804  000978  261D               	addwf	??_checkCollision^0,f,c
  8805  00097A  0E00               	movlw	0
  8806  00097C  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8807  00097E  EE20 F0C2          	lfsr	2,194
  8808  000982  501B               	movf	checkCollision@g^0,w,c
  8809  000984  26D9               	addwf	fsr2l,f,c
  8810  000986  501C               	movf	(checkCollision@g+1)^0,w,c
  8811  000988  22DA               	addwfc	fsr2h,f,c
  8812  00098A  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8813  00098E  CFDD F020          	movff	postdec2,??_checkCollision+3
  8814  000992  0E0A               	movlw	10
  8815  000994  261F               	addwf	(??_checkCollision+2)^0,f,c
  8816  000996  0E00               	movlw	0
  8817  000998  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8818  00099A  501D               	movf	??_checkCollision^0,w,c
  8819  00099C  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8820  00099E  501E               	movf	(??_checkCollision+1)^0,w,c
  8821  0009A0  5820               	subwfb	(??_checkCollision+3)^0,w,c
  8822  0009A2  B0D8               	btfsc	status,0,c
  8823  0009A4  EFD6  F004         	goto	u7061
  8824  0009A8  EFD8  F004         	goto	u7060
  8825  0009AC                     u7061:
  8826  0009AC  EFE7  F004         	goto	l810
  8827  0009B0                     u7060:
  8828  0009B0                     
  8829                           ;gameFunction.c: 169:     {;gameFunction.c: 171:         XF_pushEvent(evEndGame,0);
  8830  0009B0  0E00               	movlw	0
  8831  0009B2  6E18               	movwf	XF_pushEvent@inISR^0,c
  8832  0009B4  0E09               	movlw	9
  8833  0009B6  EC09  F030         	call	_XF_pushEvent
  8834  0009BA                     
  8835                           ;gameFunction.c: 172:         g->s1.homeScore=0;
  8836  0009BA  EE20 F0D4          	lfsr	2,212
  8837  0009BE  501B               	movf	checkCollision@g^0,w,c
  8838  0009C0  26D9               	addwf	fsr2l,f,c
  8839  0009C2  501C               	movf	(checkCollision@g+1)^0,w,c
  8840  0009C4  22DA               	addwfc	fsr2h,f,c
  8841  0009C6  0E00               	movlw	0
  8842  0009C8  6EDE               	movwf	postinc2,c
  8843  0009CA  0E00               	movlw	0
  8844  0009CC  6EDD               	movwf	postdec2,c
  8845  0009CE                     l810:
  8846  0009CE  0012               	return		;funcret
  8847  0009D0                     __end_of_checkCollision:
  8848                           	callstack 0
  8849                           
  8850 ;; *************** function _XF_pushEvent *****************
  8851 ;; Defined at:
  8852 ;;		line 49 in file "xf/xf.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;  ev              1    wreg     unsigned char 
  8855 ;;  inISR           1   23[COMRAM] _Bool 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;  ev              1   24[COMRAM] unsigned char 
  8858 ;;  temp            1   25[COMRAM] unsigned char 
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  1    wreg      _Bool 
  8861 ;; Registers used:
  8862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8868 ;;      Params:         1       0       0       0       0       0       0
  8869 ;;      Locals:         2       0       0       0       0       0       0
  8870 ;;      Temps:          0       0       0       0       0       0       0
  8871 ;;      Totals:         3       0       0       0       0       0       0
  8872 ;;Total ram usage:        3 bytes
  8873 ;; Hardware stack levels used: 1
  8874 ;; Hardware stack levels required when called: 5
  8875 ;; This function calls:
  8876 ;;		_ENTERCRITICAL
  8877 ;;		_LEAVECRITICAL
  8878 ;;		___awmod
  8879 ;; This function is called by:
  8880 ;;		_gameControllerController
  8881 ;;		_moovePaddle1
  8882 ;;		_moovePaddle2
  8883 ;;		_mooveBall
  8884 ;;		_checkCollision
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text29
  8889  006012                     __ptext29:
  8890                           	callstack 0
  8891  006012                     _XF_pushEvent:
  8892                           	callstack 20
  8893                           
  8894                           ;incstack = 0
  8895                           ;XF_pushEvent@ev stored from wreg
  8896  006012  6E19               	movwf	XF_pushEvent@ev^0,c
  8897  006014                     
  8898                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
  8899  006014  5018               	movf	XF_pushEvent@inISR^0,w,c
  8900  006016  EC7F  F033         	call	_ENTERCRITICAL
  8901  00601A                     
  8902                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
  8903  00601A  0E01               	movlw	1
  8904  00601C  0100               	movlb	0	; () banked
  8905  00601E  25D9               	addwf	(_theXF+36)& (0+255),w,b
  8906  006020  6E12               	movwf	___awmod@dividend^0,c
  8907  006022  6A13               	clrf	(___awmod@dividend+1)^0,c
  8908  006024  0E00               	movlw	0
  8909  006026  2213               	addwfc	(___awmod@dividend+1)^0,f,c
  8910  006028  0E00               	movlw	0
  8911  00602A  6E15               	movwf	(___awmod@divisor+1)^0,c
  8912  00602C  0E0C               	movlw	12
  8913  00602E  6E14               	movwf	___awmod@divisor^0,c
  8914  006030  ECCF  F02D         	call	___awmod	;wreg free
  8915  006034  5012               	movf	?___awmod^0,w,c
  8916  006036  6E1A               	movwf	XF_pushEvent@temp^0,c
  8917  006038                     
  8918                           ;xf/xf.c: 55:     if(temp == theXF.out)
  8919  006038  501A               	movf	XF_pushEvent@temp^0,w,c
  8920  00603A  0100               	movlb	0	; () banked
  8921  00603C  19DA               	xorwf	(_theXF+37)& (0+255),w,b
  8922  00603E  A4D8               	btfss	status,2,c
  8923  006040  EF24  F030         	goto	u6761
  8924  006044  EF26  F030         	goto	u6760
  8925  006048                     u6761:
  8926  006048  EF2C  F030         	goto	l9406
  8927  00604C                     u6760:
  8928  00604C                     
  8929                           ; BSR set to: 0
  8930                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
  8931  00604C  5018               	movf	XF_pushEvent@inISR^0,w,c
  8932  00604E  EC74  F033         	call	_LEAVECRITICAL
  8933  006052                     
  8934                           ;xf/xf.c: 58:       return 0;
  8935  006052  0E00               	movlw	0
  8936  006054  EF3A  F030         	goto	l677
  8937  006058                     l9406:
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
  8941  006058  0ECD               	movlw	low (_theXF+24)
  8942  00605A  25D9               	addwf	(_theXF+36)& (0+255),w,b
  8943  00605C  6ED9               	movwf	fsr2l,c
  8944  00605E  6ADA               	clrf	fsr2h,c
  8945  006060  0E00               	movlw	high (_theXF+24)
  8946  006062  22DA               	addwfc	fsr2h,f,c
  8947  006064  C019  FFDF         	movff	XF_pushEvent@ev,indf2
  8948  006068                     
  8949                           ; BSR set to: 0
  8950                           ;xf/xf.c: 61:     theXF.in = temp;
  8951  006068  C01A  F0D9         	movff	XF_pushEvent@temp,_theXF+36
  8952  00606C                     
  8953                           ; BSR set to: 0
  8954                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
  8955  00606C  5018               	movf	XF_pushEvent@inISR^0,w,c
  8956  00606E  EC74  F033         	call	_LEAVECRITICAL
  8957  006072                     
  8958                           ;xf/xf.c: 63:     return 1;
  8959  006072  0E01               	movlw	1
  8960  006074                     l677:
  8961  006074  0012               	return		;funcret
  8962  006076                     __end_of_XF_pushEvent:
  8963                           	callstack 0
  8964                           
  8965 ;; *************** function _Ball_Update *****************
  8966 ;; Defined at:
  8967 ;;		line 11 in file "class/ball.c"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  b               2   17[COMRAM] PTR struct Ball
  8970 ;;		 -> g1(218), 
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8982 ;;      Params:         2       0       0       0       0       0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0
  8984 ;;      Temps:          4       0       0       0       0       0       0
  8985 ;;      Totals:         6       0       0       0       0       0       0
  8986 ;;Total ram usage:        6 bytes
  8987 ;; Hardware stack levels used: 1
  8988 ;; Hardware stack levels required when called: 4
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_mooveBall
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text30
  8997  005E30                     __ptext30:
  8998                           	callstack 0
  8999  005E30                     _Ball_Update:
  9000                           	callstack 21
  9001  005E30                     
  9002                           ;class/ball.c: 11: void Ball_Update(struct Ball* b);class/ball.c: 12: {;class/ball.c: 13
      +                          :     b->x=b->x+b->dx;
  9003  005E30  EE20 F008          	lfsr	2,8
  9004  005E34  5012               	movf	Ball_Update@b^0,w,c
  9005  005E36  26D9               	addwf	fsr2l,f,c
  9006  005E38  5013               	movf	(Ball_Update@b+1)^0,w,c
  9007  005E3A  22DA               	addwfc	fsr2h,f,c
  9008  005E3C  CFDE F014          	movff	postinc2,??_Ball_Update
  9009  005E40  CFDD F015          	movff	postdec2,??_Ball_Update+1
  9010  005E44  C012  FFD9         	movff	Ball_Update@b,fsr2l
  9011  005E48  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
  9012  005E4C  CFDE F016          	movff	postinc2,??_Ball_Update+2
  9013  005E50  CFDD F017          	movff	postdec2,??_Ball_Update+3
  9014  005E54  5014               	movf	??_Ball_Update^0,w,c
  9015  005E56  2616               	addwf	(??_Ball_Update+2)^0,f,c
  9016  005E58  5015               	movf	(??_Ball_Update+1)^0,w,c
  9017  005E5A  2217               	addwfc	(??_Ball_Update+3)^0,f,c
  9018  005E5C  C012  FFD9         	movff	Ball_Update@b,fsr2l
  9019  005E60  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
  9020  005E64  C016  FFDE         	movff	??_Ball_Update+2,postinc2
  9021  005E68  C017  FFDD         	movff	??_Ball_Update+3,postdec2
  9022                           
  9023                           ;class/ball.c: 14:     b->y=b->y+b->dy;
  9024  005E6C  EE20 F00A          	lfsr	2,10
  9025  005E70  5012               	movf	Ball_Update@b^0,w,c
  9026  005E72  26D9               	addwf	fsr2l,f,c
  9027  005E74  5013               	movf	(Ball_Update@b+1)^0,w,c
  9028  005E76  22DA               	addwfc	fsr2h,f,c
  9029  005E78  CFDE F014          	movff	postinc2,??_Ball_Update
  9030  005E7C  CFDD F015          	movff	postdec2,??_Ball_Update+1
  9031  005E80  EE20 F002          	lfsr	2,2
  9032  005E84  5012               	movf	Ball_Update@b^0,w,c
  9033  005E86  26D9               	addwf	fsr2l,f,c
  9034  005E88  5013               	movf	(Ball_Update@b+1)^0,w,c
  9035  005E8A  22DA               	addwfc	fsr2h,f,c
  9036  005E8C  CFDE F016          	movff	postinc2,??_Ball_Update+2
  9037  005E90  CFDD F017          	movff	postdec2,??_Ball_Update+3
  9038  005E94  5014               	movf	??_Ball_Update^0,w,c
  9039  005E96  2616               	addwf	(??_Ball_Update+2)^0,f,c
  9040  005E98  5015               	movf	(??_Ball_Update+1)^0,w,c
  9041  005E9A  2217               	addwfc	(??_Ball_Update+3)^0,f,c
  9042  005E9C  EE20 F002          	lfsr	2,2
  9043  005EA0  5012               	movf	Ball_Update@b^0,w,c
  9044  005EA2  26D9               	addwf	fsr2l,f,c
  9045  005EA4  5013               	movf	(Ball_Update@b+1)^0,w,c
  9046  005EA6  22DA               	addwfc	fsr2h,f,c
  9047  005EA8  C016  FFDE         	movff	??_Ball_Update+2,postinc2
  9048  005EAC  C017  FFDD         	movff	??_Ball_Update+3,postdec2
  9049  005EB0  0012               	return		;funcret
  9050  005EB2                     __end_of_Ball_Update:
  9051                           	callstack 0
  9052                           
  9053 ;; *************** function _levelController *****************
  9054 ;; Defined at:
  9055 ;;		line 237 in file "gameFunction.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  g               2   21[COMRAM] PTR struct GameParameter
  9058 ;;		 -> g1(218), 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;		None
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  1    wreg      void 
  9063 ;; Registers used:
  9064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9070 ;;      Params:         2       0       0       0       0       0       0
  9071 ;;      Locals:         0       0       0       0       0       0       0
  9072 ;;      Temps:          2       0       0       0       0       0       0
  9073 ;;      Totals:         4       0       0       0       0       0       0
  9074 ;;Total ram usage:        4 bytes
  9075 ;; Hardware stack levels used: 1
  9076 ;; Hardware stack levels required when called: 5
  9077 ;; This function calls:
  9078 ;;		_GameParameters_setLevel
  9079 ;; This function is called by:
  9080 ;;		_gameControllerController
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           	psect	text31
  9085  004E04                     __ptext31:
  9086                           	callstack 0
  9087  004E04                     _levelController:
  9088                           	callstack 21
  9089  004E04                     
  9090                           ;gameFunction.c: 237: void levelController(GameParameters* g);gameFunction.c: 238: {;gam
      +                          eFunction.c: 240:     if(((g->x)>=105)&&((g->x)<160))
  9091  004E04  EE20 F004          	lfsr	2,4
  9092  004E08  5016               	movf	levelController@g^0,w,c
  9093  004E0A  26D9               	addwf	fsr2l,f,c
  9094  004E0C  5017               	movf	(levelController@g+1)^0,w,c
  9095  004E0E  22DA               	addwfc	fsr2h,f,c
  9096  004E10  0E01               	movlw	1
  9097  004E12  50DB               	movf	plusw2,w,c
  9098  004E14  E109               	bnz	u7420
  9099  004E16  0E69               	movlw	105
  9100  004E18  5CDE               	subwf	postinc2,w,c
  9101  004E1A  A0D8               	btfss	status,0,c
  9102  004E1C  EF12  F027         	goto	u7421
  9103  004E20  EF14  F027         	goto	u7420
  9104  004E24                     u7421:
  9105  004E24  EF32  F027         	goto	l9994
  9106  004E28                     u7420:
  9107  004E28  EE20 F004          	lfsr	2,4
  9108  004E2C  5016               	movf	levelController@g^0,w,c
  9109  004E2E  26D9               	addwf	fsr2l,f,c
  9110  004E30  5017               	movf	(levelController@g+1)^0,w,c
  9111  004E32  22DA               	addwfc	fsr2h,f,c
  9112  004E34  0E01               	movlw	1
  9113  004E36  50DB               	movf	plusw2,w,c
  9114  004E38  E107               	bnz	u7431
  9115  004E3A  0EA0               	movlw	160
  9116  004E3C  5CDE               	subwf	postinc2,w,c
  9117  004E3E  B0D8               	btfsc	status,0,c
  9118  004E40  EF24  F027         	goto	u7431
  9119  004E44  EF26  F027         	goto	u7430
  9120  004E48                     u7431:
  9121  004E48  EF32  F027         	goto	l9994
  9122  004E4C                     u7430:
  9123  004E4C                     
  9124                           ;gameFunction.c: 241:     {;gameFunction.c: 242:         GameParameters_setLevel(g,2);
  9125  004E4C  C016  F012         	movff	levelController@g,GameParameters_setLevel@s
  9126  004E50  C017  F013         	movff	levelController@g+1,GameParameters_setLevel@s+1
  9127  004E54  0E00               	movlw	0
  9128  004E56  6E15               	movwf	(GameParameters_setLevel@value+1)^0,c
  9129  004E58  0E02               	movlw	2
  9130  004E5A  6E14               	movwf	GameParameters_setLevel@value^0,c
  9131  004E5C  EC69  F033         	call	_GameParameters_setLevel	;wreg free
  9132                           
  9133                           ;gameFunction.c: 243:     }
  9134  004E60  EF6C  F027         	goto	l10002
  9135  004E64                     l9994:
  9136  004E64  EE20 F004          	lfsr	2,4
  9137  004E68  5016               	movf	levelController@g^0,w,c
  9138  004E6A  26D9               	addwf	fsr2l,f,c
  9139  004E6C  5017               	movf	(levelController@g+1)^0,w,c
  9140  004E6E  22DA               	addwfc	fsr2h,f,c
  9141  004E70  0E01               	movlw	1
  9142  004E72  50DB               	movf	plusw2,w,c
  9143  004E74  E109               	bnz	u7440
  9144  004E76  0EA0               	movlw	160
  9145  004E78  5CDE               	subwf	postinc2,w,c
  9146  004E7A  A0D8               	btfss	status,0,c
  9147  004E7C  EF42  F027         	goto	u7441
  9148  004E80  EF44  F027         	goto	u7440
  9149  004E84                     u7441:
  9150  004E84  EF62  F027         	goto	l10000
  9151  004E88                     u7440:
  9152  004E88  EE20 F004          	lfsr	2,4
  9153  004E8C  5016               	movf	levelController@g^0,w,c
  9154  004E8E  26D9               	addwf	fsr2l,f,c
  9155  004E90  5017               	movf	(levelController@g+1)^0,w,c
  9156  004E92  22DA               	addwfc	fsr2h,f,c
  9157  004E94  0E01               	movlw	1
  9158  004E96  50DB               	movf	plusw2,w,c
  9159  004E98  E107               	bnz	u7451
  9160  004E9A  0ED7               	movlw	215
  9161  004E9C  5CDE               	subwf	postinc2,w,c
  9162  004E9E  B0D8               	btfsc	status,0,c
  9163  004EA0  EF54  F027         	goto	u7451
  9164  004EA4  EF56  F027         	goto	u7450
  9165  004EA8                     u7451:
  9166  004EA8  EF62  F027         	goto	l10000
  9167  004EAC                     u7450:
  9168  004EAC                     
  9169                           ;gameFunction.c: 245:     {;gameFunction.c: 246:         GameParameters_setLevel(g,3);
  9170  004EAC  C016  F012         	movff	levelController@g,GameParameters_setLevel@s
  9171  004EB0  C017  F013         	movff	levelController@g+1,GameParameters_setLevel@s+1
  9172  004EB4  0E00               	movlw	0
  9173  004EB6  6E15               	movwf	(GameParameters_setLevel@value+1)^0,c
  9174  004EB8  0E03               	movlw	3
  9175  004EBA  6E14               	movwf	GameParameters_setLevel@value^0,c
  9176  004EBC  EC69  F033         	call	_GameParameters_setLevel	;wreg free
  9177                           
  9178                           ;gameFunction.c: 247:     }
  9179  004EC0  EF6C  F027         	goto	l10002
  9180  004EC4                     l10000:
  9181                           
  9182                           ;gameFunction.c: 249:     {;gameFunction.c: 250:         GameParameters_setLevel(g,1);
  9183  004EC4  C016  F012         	movff	levelController@g,GameParameters_setLevel@s
  9184  004EC8  C017  F013         	movff	levelController@g+1,GameParameters_setLevel@s+1
  9185  004ECC  0E00               	movlw	0
  9186  004ECE  6E15               	movwf	(GameParameters_setLevel@value+1)^0,c
  9187  004ED0  0E01               	movlw	1
  9188  004ED2  6E14               	movwf	GameParameters_setLevel@value^0,c
  9189  004ED4  EC69  F033         	call	_GameParameters_setLevel	;wreg free
  9190  004ED8                     l10002:
  9191                           
  9192                           ;gameFunction.c: 252:     g->sldLevel.value=g->level;
  9193  004ED8  EE20 F008          	lfsr	2,8
  9194  004EDC  5016               	movf	levelController@g^0,w,c
  9195  004EDE  26D9               	addwf	fsr2l,f,c
  9196  004EE0  5017               	movf	(levelController@g+1)^0,w,c
  9197  004EE2  22DA               	addwfc	fsr2h,f,c
  9198  004EE4  EE10 F0AC          	lfsr	1,172
  9199  004EE8  5016               	movf	levelController@g^0,w,c
  9200  004EEA  26E1               	addwf	fsr1l,f,c
  9201  004EEC  5017               	movf	(levelController@g+1)^0,w,c
  9202  004EEE  22E2               	addwfc	fsr1h,f,c
  9203  004EF0  CFDE FFE6          	movff	postinc2,postinc1
  9204  004EF4  CFDD FFE5          	movff	postdec2,postdec1
  9205  004EF8  0012               	return		;funcret
  9206  004EFA                     __end_of_levelController:
  9207                           	callstack 0
  9208                           
  9209 ;; *************** function _GameParameters_setLevel *****************
  9210 ;; Defined at:
  9211 ;;		line 36 in file "class/gameParameters.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9214 ;;		 -> g1(218), 
  9215 ;;  value           2   19[COMRAM] unsigned short 
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;		None
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      void 
  9220 ;; Registers used:
  9221 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9227 ;;      Params:         4       0       0       0       0       0       0
  9228 ;;      Locals:         0       0       0       0       0       0       0
  9229 ;;      Temps:          0       0       0       0       0       0       0
  9230 ;;      Totals:         4       0       0       0       0       0       0
  9231 ;;Total ram usage:        4 bytes
  9232 ;; Hardware stack levels used: 1
  9233 ;; Hardware stack levels required when called: 4
  9234 ;; This function calls:
  9235 ;;		Nothing
  9236 ;; This function is called by:
  9237 ;;		_levelController
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           	psect	text32
  9242  0066D2                     __ptext32:
  9243                           	callstack 0
  9244  0066D2                     _GameParameters_setLevel:
  9245                           	callstack 21
  9246  0066D2                     
  9247                           ;class/gameParameters.c: 36: void GameParameters_setLevel(struct GameParameters* s, uint
      +                          16_t value);class/gameParameters.c: 37: {;class/gameParameters.c: 38:     s->level = val
      +                          ue;
  9248  0066D2  EE20 F008          	lfsr	2,8
  9249  0066D6  5012               	movf	GameParameters_setLevel@s^0,w,c
  9250  0066D8  26D9               	addwf	fsr2l,f,c
  9251  0066DA  5013               	movf	(GameParameters_setLevel@s+1)^0,w,c
  9252  0066DC  22DA               	addwfc	fsr2h,f,c
  9253  0066DE  C014  FFDE         	movff	GameParameters_setLevel@value,postinc2
  9254  0066E2  C015  FFDD         	movff	GameParameters_setLevel@value+1,postdec2
  9255  0066E6  0012               	return		;funcret
  9256  0066E8                     __end_of_GameParameters_setLevel:
  9257                           	callstack 0
  9258                           
  9259 ;; *************** function _backlightController *****************
  9260 ;; Defined at:
  9261 ;;		line 180 in file "gameFunction.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;  g               2   23[COMRAM] PTR struct GameParameter
  9264 ;;		 -> g1(218), 
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;		None
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  1    wreg      void 
  9269 ;; Registers used:
  9270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9276 ;;      Params:         2       0       0       0       0       0       0
  9277 ;;      Locals:         0       0       0       0       0       0       0
  9278 ;;      Temps:          2       0       0       0       0       0       0
  9279 ;;      Totals:         4       0       0       0       0       0       0
  9280 ;;Total ram usage:        4 bytes
  9281 ;; Hardware stack levels used: 1
  9282 ;; Hardware stack levels required when called: 5
  9283 ;; This function calls:
  9284 ;;		_GameParameters_setBackLight
  9285 ;; This function is called by:
  9286 ;;		_gameControllerController
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text33
  9291  00198A                     __ptext33:
  9292                           	callstack 0
  9293  00198A                     _backlightController:
  9294                           	callstack 21
  9295  00198A                     
  9296                           ;gameFunction.c: 180: void backlightController(GameParameters* g);gameFunction.c: 181: {
      +                          ;gameFunction.c: 183:     if(((g->x)>=50)&&((g->x)<64))
  9297  00198A  EE20 F004          	lfsr	2,4
  9298  00198E  5018               	movf	backlightController@g^0,w,c
  9299  001990  26D9               	addwf	fsr2l,f,c
  9300  001992  5019               	movf	(backlightController@g+1)^0,w,c
  9301  001994  22DA               	addwfc	fsr2h,f,c
  9302  001996  0E01               	movlw	1
  9303  001998  50DB               	movf	plusw2,w,c
  9304  00199A  E109               	bnz	u7180
  9305  00199C  0E32               	movlw	50
  9306  00199E  5CDE               	subwf	postinc2,w,c
  9307  0019A0  A0D8               	btfss	status,0,c
  9308  0019A2  EFD5  F00C         	goto	u7181
  9309  0019A6  EFD7  F00C         	goto	u7180
  9310  0019AA                     u7181:
  9311  0019AA  EFF5  F00C         	goto	l9920
  9312  0019AE                     u7180:
  9313  0019AE  EE20 F004          	lfsr	2,4
  9314  0019B2  5018               	movf	backlightController@g^0,w,c
  9315  0019B4  26D9               	addwf	fsr2l,f,c
  9316  0019B6  5019               	movf	(backlightController@g+1)^0,w,c
  9317  0019B8  22DA               	addwfc	fsr2h,f,c
  9318  0019BA  0E01               	movlw	1
  9319  0019BC  50DB               	movf	plusw2,w,c
  9320  0019BE  E107               	bnz	u7191
  9321  0019C0  0E40               	movlw	64
  9322  0019C2  5CDE               	subwf	postinc2,w,c
  9323  0019C4  B0D8               	btfsc	status,0,c
  9324  0019C6  EFE7  F00C         	goto	u7191
  9325  0019CA  EFE9  F00C         	goto	u7190
  9326  0019CE                     u7191:
  9327  0019CE  EFF5  F00C         	goto	l9920
  9328  0019D2                     u7190:
  9329  0019D2                     
  9330                           ;gameFunction.c: 184:     {;gameFunction.c: 185:         GameParameters_setBackLight(g,0
      +                          );
  9331  0019D2  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9332  0019D6  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9333  0019DA  0E00               	movlw	0
  9334  0019DC  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9335  0019DE  0E00               	movlw	0
  9336  0019E0  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9337  0019E2  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9338                           
  9339                           ;gameFunction.c: 186:     }
  9340  0019E6  EF05  F00F         	goto	l9986
  9341  0019EA                     l9920:
  9342  0019EA  EE20 F004          	lfsr	2,4
  9343  0019EE  5018               	movf	backlightController@g^0,w,c
  9344  0019F0  26D9               	addwf	fsr2l,f,c
  9345  0019F2  5019               	movf	(backlightController@g+1)^0,w,c
  9346  0019F4  22DA               	addwfc	fsr2h,f,c
  9347  0019F6  0E01               	movlw	1
  9348  0019F8  50DB               	movf	plusw2,w,c
  9349  0019FA  E109               	bnz	u7200
  9350  0019FC  0E40               	movlw	64
  9351  0019FE  5CDE               	subwf	postinc2,w,c
  9352  001A00  A0D8               	btfss	status,0,c
  9353  001A02  EF05  F00D         	goto	u7201
  9354  001A06  EF07  F00D         	goto	u7200
  9355  001A0A                     u7201:
  9356  001A0A  EF25  F00D         	goto	l9926
  9357  001A0E                     u7200:
  9358  001A0E  EE20 F004          	lfsr	2,4
  9359  001A12  5018               	movf	backlightController@g^0,w,c
  9360  001A14  26D9               	addwf	fsr2l,f,c
  9361  001A16  5019               	movf	(backlightController@g+1)^0,w,c
  9362  001A18  22DA               	addwfc	fsr2h,f,c
  9363  001A1A  0E01               	movlw	1
  9364  001A1C  50DB               	movf	plusw2,w,c
  9365  001A1E  E107               	bnz	u7211
  9366  001A20  0E4E               	movlw	78
  9367  001A22  5CDE               	subwf	postinc2,w,c
  9368  001A24  B0D8               	btfsc	status,0,c
  9369  001A26  EF17  F00D         	goto	u7211
  9370  001A2A  EF19  F00D         	goto	u7210
  9371  001A2E                     u7211:
  9372  001A2E  EF25  F00D         	goto	l9926
  9373  001A32                     u7210:
  9374  001A32                     
  9375                           ;gameFunction.c: 188:     {;gameFunction.c: 189:         GameParameters_setBackLight(g,1
      +                          );
  9376  001A32  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9377  001A36  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9378  001A3A  0E00               	movlw	0
  9379  001A3C  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9380  001A3E  0E01               	movlw	1
  9381  001A40  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9382  001A42  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9383                           
  9384                           ;gameFunction.c: 190:     }
  9385  001A46  EF05  F00F         	goto	l9986
  9386  001A4A                     l9926:
  9387  001A4A  EE20 F004          	lfsr	2,4
  9388  001A4E  5018               	movf	backlightController@g^0,w,c
  9389  001A50  26D9               	addwf	fsr2l,f,c
  9390  001A52  5019               	movf	(backlightController@g+1)^0,w,c
  9391  001A54  22DA               	addwfc	fsr2h,f,c
  9392  001A56  0E01               	movlw	1
  9393  001A58  50DB               	movf	plusw2,w,c
  9394  001A5A  E109               	bnz	u7220
  9395  001A5C  0E4E               	movlw	78
  9396  001A5E  5CDE               	subwf	postinc2,w,c
  9397  001A60  A0D8               	btfss	status,0,c
  9398  001A62  EF35  F00D         	goto	u7221
  9399  001A66  EF37  F00D         	goto	u7220
  9400  001A6A                     u7221:
  9401  001A6A  EF55  F00D         	goto	l9932
  9402  001A6E                     u7220:
  9403  001A6E  EE20 F004          	lfsr	2,4
  9404  001A72  5018               	movf	backlightController@g^0,w,c
  9405  001A74  26D9               	addwf	fsr2l,f,c
  9406  001A76  5019               	movf	(backlightController@g+1)^0,w,c
  9407  001A78  22DA               	addwfc	fsr2h,f,c
  9408  001A7A  0E01               	movlw	1
  9409  001A7C  50DB               	movf	plusw2,w,c
  9410  001A7E  E107               	bnz	u7231
  9411  001A80  0E5C               	movlw	92
  9412  001A82  5CDE               	subwf	postinc2,w,c
  9413  001A84  B0D8               	btfsc	status,0,c
  9414  001A86  EF47  F00D         	goto	u7231
  9415  001A8A  EF49  F00D         	goto	u7230
  9416  001A8E                     u7231:
  9417  001A8E  EF55  F00D         	goto	l9932
  9418  001A92                     u7230:
  9419  001A92                     
  9420                           ;gameFunction.c: 192:     {;gameFunction.c: 193:         GameParameters_setBackLight(g,2
      +                          );
  9421  001A92  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9422  001A96  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9423  001A9A  0E00               	movlw	0
  9424  001A9C  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9425  001A9E  0E02               	movlw	2
  9426  001AA0  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9427  001AA2  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9428                           
  9429                           ;gameFunction.c: 194:     }
  9430  001AA6  EF05  F00F         	goto	l9986
  9431  001AAA                     l9932:
  9432  001AAA  EE20 F004          	lfsr	2,4
  9433  001AAE  5018               	movf	backlightController@g^0,w,c
  9434  001AB0  26D9               	addwf	fsr2l,f,c
  9435  001AB2  5019               	movf	(backlightController@g+1)^0,w,c
  9436  001AB4  22DA               	addwfc	fsr2h,f,c
  9437  001AB6  0E01               	movlw	1
  9438  001AB8  50DB               	movf	plusw2,w,c
  9439  001ABA  E109               	bnz	u7240
  9440  001ABC  0E5C               	movlw	92
  9441  001ABE  5CDE               	subwf	postinc2,w,c
  9442  001AC0  A0D8               	btfss	status,0,c
  9443  001AC2  EF65  F00D         	goto	u7241
  9444  001AC6  EF67  F00D         	goto	u7240
  9445  001ACA                     u7241:
  9446  001ACA  EF85  F00D         	goto	l9938
  9447  001ACE                     u7240:
  9448  001ACE  EE20 F004          	lfsr	2,4
  9449  001AD2  5018               	movf	backlightController@g^0,w,c
  9450  001AD4  26D9               	addwf	fsr2l,f,c
  9451  001AD6  5019               	movf	(backlightController@g+1)^0,w,c
  9452  001AD8  22DA               	addwfc	fsr2h,f,c
  9453  001ADA  0E01               	movlw	1
  9454  001ADC  50DB               	movf	plusw2,w,c
  9455  001ADE  E107               	bnz	u7251
  9456  001AE0  0E6A               	movlw	106
  9457  001AE2  5CDE               	subwf	postinc2,w,c
  9458  001AE4  B0D8               	btfsc	status,0,c
  9459  001AE6  EF77  F00D         	goto	u7251
  9460  001AEA  EF79  F00D         	goto	u7250
  9461  001AEE                     u7251:
  9462  001AEE  EF85  F00D         	goto	l9938
  9463  001AF2                     u7250:
  9464  001AF2                     
  9465                           ;gameFunction.c: 196:     {;gameFunction.c: 197:         GameParameters_setBackLight(g,3
      +                          );
  9466  001AF2  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9467  001AF6  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9468  001AFA  0E00               	movlw	0
  9469  001AFC  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9470  001AFE  0E03               	movlw	3
  9471  001B00  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9472  001B02  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9473                           
  9474                           ;gameFunction.c: 198:     }
  9475  001B06  EF05  F00F         	goto	l9986
  9476  001B0A                     l9938:
  9477  001B0A  EE20 F004          	lfsr	2,4
  9478  001B0E  5018               	movf	backlightController@g^0,w,c
  9479  001B10  26D9               	addwf	fsr2l,f,c
  9480  001B12  5019               	movf	(backlightController@g+1)^0,w,c
  9481  001B14  22DA               	addwfc	fsr2h,f,c
  9482  001B16  0E01               	movlw	1
  9483  001B18  50DB               	movf	plusw2,w,c
  9484  001B1A  E109               	bnz	u7260
  9485  001B1C  0E6A               	movlw	106
  9486  001B1E  5CDE               	subwf	postinc2,w,c
  9487  001B20  A0D8               	btfss	status,0,c
  9488  001B22  EF95  F00D         	goto	u7261
  9489  001B26  EF97  F00D         	goto	u7260
  9490  001B2A                     u7261:
  9491  001B2A  EFB5  F00D         	goto	l9944
  9492  001B2E                     u7260:
  9493  001B2E  EE20 F004          	lfsr	2,4
  9494  001B32  5018               	movf	backlightController@g^0,w,c
  9495  001B34  26D9               	addwf	fsr2l,f,c
  9496  001B36  5019               	movf	(backlightController@g+1)^0,w,c
  9497  001B38  22DA               	addwfc	fsr2h,f,c
  9498  001B3A  0E01               	movlw	1
  9499  001B3C  50DB               	movf	plusw2,w,c
  9500  001B3E  E107               	bnz	u7271
  9501  001B40  0E78               	movlw	120
  9502  001B42  5CDE               	subwf	postinc2,w,c
  9503  001B44  B0D8               	btfsc	status,0,c
  9504  001B46  EFA7  F00D         	goto	u7271
  9505  001B4A  EFA9  F00D         	goto	u7270
  9506  001B4E                     u7271:
  9507  001B4E  EFB5  F00D         	goto	l9944
  9508  001B52                     u7270:
  9509  001B52                     
  9510                           ;gameFunction.c: 200:     {;gameFunction.c: 201:         GameParameters_setBackLight(g,4
      +                          );
  9511  001B52  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9512  001B56  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9513  001B5A  0E00               	movlw	0
  9514  001B5C  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9515  001B5E  0E04               	movlw	4
  9516  001B60  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9517  001B62  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9518                           
  9519                           ;gameFunction.c: 202:     }
  9520  001B66  EF05  F00F         	goto	l9986
  9521  001B6A                     l9944:
  9522  001B6A  EE20 F004          	lfsr	2,4
  9523  001B6E  5018               	movf	backlightController@g^0,w,c
  9524  001B70  26D9               	addwf	fsr2l,f,c
  9525  001B72  5019               	movf	(backlightController@g+1)^0,w,c
  9526  001B74  22DA               	addwfc	fsr2h,f,c
  9527  001B76  0E01               	movlw	1
  9528  001B78  50DB               	movf	plusw2,w,c
  9529  001B7A  E109               	bnz	u7280
  9530  001B7C  0E78               	movlw	120
  9531  001B7E  5CDE               	subwf	postinc2,w,c
  9532  001B80  A0D8               	btfss	status,0,c
  9533  001B82  EFC5  F00D         	goto	u7281
  9534  001B86  EFC7  F00D         	goto	u7280
  9535  001B8A                     u7281:
  9536  001B8A  EFE5  F00D         	goto	l9950
  9537  001B8E                     u7280:
  9538  001B8E  EE20 F004          	lfsr	2,4
  9539  001B92  5018               	movf	backlightController@g^0,w,c
  9540  001B94  26D9               	addwf	fsr2l,f,c
  9541  001B96  5019               	movf	(backlightController@g+1)^0,w,c
  9542  001B98  22DA               	addwfc	fsr2h,f,c
  9543  001B9A  0E01               	movlw	1
  9544  001B9C  50DB               	movf	plusw2,w,c
  9545  001B9E  E107               	bnz	u7291
  9546  001BA0  0E86               	movlw	134
  9547  001BA2  5CDE               	subwf	postinc2,w,c
  9548  001BA4  B0D8               	btfsc	status,0,c
  9549  001BA6  EFD7  F00D         	goto	u7291
  9550  001BAA  EFD9  F00D         	goto	u7290
  9551  001BAE                     u7291:
  9552  001BAE  EFE5  F00D         	goto	l9950
  9553  001BB2                     u7290:
  9554  001BB2                     
  9555                           ;gameFunction.c: 204:     {;gameFunction.c: 205:         GameParameters_setBackLight(g,5
      +                          );
  9556  001BB2  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9557  001BB6  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9558  001BBA  0E00               	movlw	0
  9559  001BBC  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9560  001BBE  0E05               	movlw	5
  9561  001BC0  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9562  001BC2  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9563                           
  9564                           ;gameFunction.c: 206:     }
  9565  001BC6  EF05  F00F         	goto	l9986
  9566  001BCA                     l9950:
  9567  001BCA  EE20 F004          	lfsr	2,4
  9568  001BCE  5018               	movf	backlightController@g^0,w,c
  9569  001BD0  26D9               	addwf	fsr2l,f,c
  9570  001BD2  5019               	movf	(backlightController@g+1)^0,w,c
  9571  001BD4  22DA               	addwfc	fsr2h,f,c
  9572  001BD6  0E01               	movlw	1
  9573  001BD8  50DB               	movf	plusw2,w,c
  9574  001BDA  E109               	bnz	u7300
  9575  001BDC  0E86               	movlw	134
  9576  001BDE  5CDE               	subwf	postinc2,w,c
  9577  001BE0  A0D8               	btfss	status,0,c
  9578  001BE2  EFF5  F00D         	goto	u7301
  9579  001BE6  EFF7  F00D         	goto	u7300
  9580  001BEA                     u7301:
  9581  001BEA  EF15  F00E         	goto	l9956
  9582  001BEE                     u7300:
  9583  001BEE  EE20 F004          	lfsr	2,4
  9584  001BF2  5018               	movf	backlightController@g^0,w,c
  9585  001BF4  26D9               	addwf	fsr2l,f,c
  9586  001BF6  5019               	movf	(backlightController@g+1)^0,w,c
  9587  001BF8  22DA               	addwfc	fsr2h,f,c
  9588  001BFA  0E01               	movlw	1
  9589  001BFC  50DB               	movf	plusw2,w,c
  9590  001BFE  E107               	bnz	u7311
  9591  001C00  0E96               	movlw	150
  9592  001C02  5CDE               	subwf	postinc2,w,c
  9593  001C04  B0D8               	btfsc	status,0,c
  9594  001C06  EF07  F00E         	goto	u7311
  9595  001C0A  EF09  F00E         	goto	u7310
  9596  001C0E                     u7311:
  9597  001C0E  EF15  F00E         	goto	l9956
  9598  001C12                     u7310:
  9599  001C12                     
  9600                           ;gameFunction.c: 208:     {;gameFunction.c: 209:         GameParameters_setBackLight(g,6
      +                          );
  9601  001C12  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9602  001C16  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9603  001C1A  0E00               	movlw	0
  9604  001C1C  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9605  001C1E  0E06               	movlw	6
  9606  001C20  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9607  001C22  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9608                           
  9609                           ;gameFunction.c: 210:     }
  9610  001C26  EF05  F00F         	goto	l9986
  9611  001C2A                     l9956:
  9612  001C2A  EE20 F004          	lfsr	2,4
  9613  001C2E  5018               	movf	backlightController@g^0,w,c
  9614  001C30  26D9               	addwf	fsr2l,f,c
  9615  001C32  5019               	movf	(backlightController@g+1)^0,w,c
  9616  001C34  22DA               	addwfc	fsr2h,f,c
  9617  001C36  0E01               	movlw	1
  9618  001C38  50DB               	movf	plusw2,w,c
  9619  001C3A  E109               	bnz	u7320
  9620  001C3C  0E96               	movlw	150
  9621  001C3E  5CDE               	subwf	postinc2,w,c
  9622  001C40  A0D8               	btfss	status,0,c
  9623  001C42  EF25  F00E         	goto	u7321
  9624  001C46  EF27  F00E         	goto	u7320
  9625  001C4A                     u7321:
  9626  001C4A  EF45  F00E         	goto	l9962
  9627  001C4E                     u7320:
  9628  001C4E  EE20 F004          	lfsr	2,4
  9629  001C52  5018               	movf	backlightController@g^0,w,c
  9630  001C54  26D9               	addwf	fsr2l,f,c
  9631  001C56  5019               	movf	(backlightController@g+1)^0,w,c
  9632  001C58  22DA               	addwfc	fsr2h,f,c
  9633  001C5A  0E01               	movlw	1
  9634  001C5C  50DB               	movf	plusw2,w,c
  9635  001C5E  E107               	bnz	u7331
  9636  001C60  0EA4               	movlw	164
  9637  001C62  5CDE               	subwf	postinc2,w,c
  9638  001C64  B0D8               	btfsc	status,0,c
  9639  001C66  EF37  F00E         	goto	u7331
  9640  001C6A  EF39  F00E         	goto	u7330
  9641  001C6E                     u7331:
  9642  001C6E  EF45  F00E         	goto	l9962
  9643  001C72                     u7330:
  9644  001C72                     
  9645                           ;gameFunction.c: 212:     {;gameFunction.c: 213:         GameParameters_setBackLight(g,7
      +                          );
  9646  001C72  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9647  001C76  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9648  001C7A  0E00               	movlw	0
  9649  001C7C  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9650  001C7E  0E07               	movlw	7
  9651  001C80  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9652  001C82  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9653                           
  9654                           ;gameFunction.c: 214:     }
  9655  001C86  EF05  F00F         	goto	l9986
  9656  001C8A                     l9962:
  9657  001C8A  EE20 F004          	lfsr	2,4
  9658  001C8E  5018               	movf	backlightController@g^0,w,c
  9659  001C90  26D9               	addwf	fsr2l,f,c
  9660  001C92  5019               	movf	(backlightController@g+1)^0,w,c
  9661  001C94  22DA               	addwfc	fsr2h,f,c
  9662  001C96  0E01               	movlw	1
  9663  001C98  50DB               	movf	plusw2,w,c
  9664  001C9A  E109               	bnz	u7340
  9665  001C9C  0EA4               	movlw	164
  9666  001C9E  5CDE               	subwf	postinc2,w,c
  9667  001CA0  A0D8               	btfss	status,0,c
  9668  001CA2  EF55  F00E         	goto	u7341
  9669  001CA6  EF57  F00E         	goto	u7340
  9670  001CAA                     u7341:
  9671  001CAA  EF75  F00E         	goto	l9968
  9672  001CAE                     u7340:
  9673  001CAE  EE20 F004          	lfsr	2,4
  9674  001CB2  5018               	movf	backlightController@g^0,w,c
  9675  001CB4  26D9               	addwf	fsr2l,f,c
  9676  001CB6  5019               	movf	(backlightController@g+1)^0,w,c
  9677  001CB8  22DA               	addwfc	fsr2h,f,c
  9678  001CBA  0E01               	movlw	1
  9679  001CBC  50DB               	movf	plusw2,w,c
  9680  001CBE  E107               	bnz	u7351
  9681  001CC0  0EB2               	movlw	178
  9682  001CC2  5CDE               	subwf	postinc2,w,c
  9683  001CC4  B0D8               	btfsc	status,0,c
  9684  001CC6  EF67  F00E         	goto	u7351
  9685  001CCA  EF69  F00E         	goto	u7350
  9686  001CCE                     u7351:
  9687  001CCE  EF75  F00E         	goto	l9968
  9688  001CD2                     u7350:
  9689  001CD2                     
  9690                           ;gameFunction.c: 216:     {;gameFunction.c: 217:         GameParameters_setBackLight(g,8
      +                          );
  9691  001CD2  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9692  001CD6  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9693  001CDA  0E00               	movlw	0
  9694  001CDC  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9695  001CDE  0E08               	movlw	8
  9696  001CE0  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9697  001CE2  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9698                           
  9699                           ;gameFunction.c: 218:     }
  9700  001CE6  EF05  F00F         	goto	l9986
  9701  001CEA                     l9968:
  9702  001CEA  EE20 F004          	lfsr	2,4
  9703  001CEE  5018               	movf	backlightController@g^0,w,c
  9704  001CF0  26D9               	addwf	fsr2l,f,c
  9705  001CF2  5019               	movf	(backlightController@g+1)^0,w,c
  9706  001CF4  22DA               	addwfc	fsr2h,f,c
  9707  001CF6  0E01               	movlw	1
  9708  001CF8  50DB               	movf	plusw2,w,c
  9709  001CFA  E109               	bnz	u7360
  9710  001CFC  0EB2               	movlw	178
  9711  001CFE  5CDE               	subwf	postinc2,w,c
  9712  001D00  A0D8               	btfss	status,0,c
  9713  001D02  EF85  F00E         	goto	u7361
  9714  001D06  EF87  F00E         	goto	u7360
  9715  001D0A                     u7361:
  9716  001D0A  EFA5  F00E         	goto	l9974
  9717  001D0E                     u7360:
  9718  001D0E  EE20 F004          	lfsr	2,4
  9719  001D12  5018               	movf	backlightController@g^0,w,c
  9720  001D14  26D9               	addwf	fsr2l,f,c
  9721  001D16  5019               	movf	(backlightController@g+1)^0,w,c
  9722  001D18  22DA               	addwfc	fsr2h,f,c
  9723  001D1A  0E01               	movlw	1
  9724  001D1C  50DB               	movf	plusw2,w,c
  9725  001D1E  E107               	bnz	u7371
  9726  001D20  0EC0               	movlw	192
  9727  001D22  5CDE               	subwf	postinc2,w,c
  9728  001D24  B0D8               	btfsc	status,0,c
  9729  001D26  EF97  F00E         	goto	u7371
  9730  001D2A  EF99  F00E         	goto	u7370
  9731  001D2E                     u7371:
  9732  001D2E  EFA5  F00E         	goto	l9974
  9733  001D32                     u7370:
  9734  001D32                     
  9735                           ;gameFunction.c: 220:     {;gameFunction.c: 221:         GameParameters_setBackLight(g,9
      +                          );
  9736  001D32  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9737  001D36  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9738  001D3A  0E00               	movlw	0
  9739  001D3C  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9740  001D3E  0E09               	movlw	9
  9741  001D40  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9742  001D42  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9743                           
  9744                           ;gameFunction.c: 222:     }
  9745  001D46  EF05  F00F         	goto	l9986
  9746  001D4A                     l9974:
  9747  001D4A  EE20 F004          	lfsr	2,4
  9748  001D4E  5018               	movf	backlightController@g^0,w,c
  9749  001D50  26D9               	addwf	fsr2l,f,c
  9750  001D52  5019               	movf	(backlightController@g+1)^0,w,c
  9751  001D54  22DA               	addwfc	fsr2h,f,c
  9752  001D56  0E01               	movlw	1
  9753  001D58  50DB               	movf	plusw2,w,c
  9754  001D5A  E109               	bnz	u7380
  9755  001D5C  0EC0               	movlw	192
  9756  001D5E  5CDE               	subwf	postinc2,w,c
  9757  001D60  A0D8               	btfss	status,0,c
  9758  001D62  EFB5  F00E         	goto	u7381
  9759  001D66  EFB7  F00E         	goto	u7380
  9760  001D6A                     u7381:
  9761  001D6A  EFD5  F00E         	goto	l9980
  9762  001D6E                     u7380:
  9763  001D6E  EE20 F004          	lfsr	2,4
  9764  001D72  5018               	movf	backlightController@g^0,w,c
  9765  001D74  26D9               	addwf	fsr2l,f,c
  9766  001D76  5019               	movf	(backlightController@g+1)^0,w,c
  9767  001D78  22DA               	addwfc	fsr2h,f,c
  9768  001D7A  0E01               	movlw	1
  9769  001D7C  50DB               	movf	plusw2,w,c
  9770  001D7E  E107               	bnz	u7391
  9771  001D80  0ECE               	movlw	206
  9772  001D82  5CDE               	subwf	postinc2,w,c
  9773  001D84  B0D8               	btfsc	status,0,c
  9774  001D86  EFC7  F00E         	goto	u7391
  9775  001D8A  EFC9  F00E         	goto	u7390
  9776  001D8E                     u7391:
  9777  001D8E  EFD5  F00E         	goto	l9980
  9778  001D92                     u7390:
  9779  001D92                     
  9780                           ;gameFunction.c: 224:     {;gameFunction.c: 225:         GameParameters_setBackLight(g,1
      +                          0);
  9781  001D92  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9782  001D96  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9783  001D9A  0E00               	movlw	0
  9784  001D9C  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9785  001D9E  0E0A               	movlw	10
  9786  001DA0  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9787  001DA2  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9788                           
  9789                           ;gameFunction.c: 226:     }
  9790  001DA6  EF05  F00F         	goto	l9986
  9791  001DAA                     l9980:
  9792  001DAA  EE20 F004          	lfsr	2,4
  9793  001DAE  5018               	movf	backlightController@g^0,w,c
  9794  001DB0  26D9               	addwf	fsr2l,f,c
  9795  001DB2  5019               	movf	(backlightController@g+1)^0,w,c
  9796  001DB4  22DA               	addwfc	fsr2h,f,c
  9797  001DB6  0E01               	movlw	1
  9798  001DB8  50DB               	movf	plusw2,w,c
  9799  001DBA  E109               	bnz	u7400
  9800  001DBC  0ECE               	movlw	206
  9801  001DBE  5CDE               	subwf	postinc2,w,c
  9802  001DC0  A0D8               	btfss	status,0,c
  9803  001DC2  EFE5  F00E         	goto	u7401
  9804  001DC6  EFE7  F00E         	goto	u7400
  9805  001DCA                     u7401:
  9806  001DCA  EF05  F00F         	goto	l830
  9807  001DCE                     u7400:
  9808  001DCE  EE20 F004          	lfsr	2,4
  9809  001DD2  5018               	movf	backlightController@g^0,w,c
  9810  001DD4  26D9               	addwf	fsr2l,f,c
  9811  001DD6  5019               	movf	(backlightController@g+1)^0,w,c
  9812  001DD8  22DA               	addwfc	fsr2h,f,c
  9813  001DDA  0E01               	movlw	1
  9814  001DDC  50DB               	movf	plusw2,w,c
  9815  001DDE  E107               	bnz	u7411
  9816  001DE0  0ED7               	movlw	215
  9817  001DE2  5CDE               	subwf	postinc2,w,c
  9818  001DE4  B0D8               	btfsc	status,0,c
  9819  001DE6  EFF7  F00E         	goto	u7411
  9820  001DEA  EFF9  F00E         	goto	u7410
  9821  001DEE                     u7411:
  9822  001DEE  EF05  F00F         	goto	l830
  9823  001DF2                     u7410:
  9824  001DF2                     
  9825                           ;gameFunction.c: 228:     {;gameFunction.c: 229:         GameParameters_setBackLight(g,1
      +                          1);
  9826  001DF2  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9827  001DF6  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9828  001DFA  0E00               	movlw	0
  9829  001DFC  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9830  001DFE  0E0B               	movlw	11
  9831  001E00  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9832  001E02  ECFF  F031         	call	_GameParameters_setBackLight	;wreg free
  9833  001E06  EF05  F00F         	goto	l9986
  9834  001E0A                     l830:
  9835  001E0A                     l9986:
  9836                           
  9837                           ;gameFunction.c: 231:     g->sldBackLight.value=g->backlight;
  9838  001E0A  C018  FFD9         	movff	backlightController@g,fsr2l
  9839  001E0E  C019  FFDA         	movff	backlightController@g+1,fsr2h
  9840  001E12  EE10 F093          	lfsr	1,147
  9841  001E16  5018               	movf	backlightController@g^0,w,c
  9842  001E18  26E1               	addwf	fsr1l,f,c
  9843  001E1A  5019               	movf	(backlightController@g+1)^0,w,c
  9844  001E1C  22E2               	addwfc	fsr1h,f,c
  9845  001E1E  CFDE FFE6          	movff	postinc2,postinc1
  9846  001E22  CFDD FFE5          	movff	postdec2,postdec1
  9847  001E26  0012               	return		;funcret
  9848  001E28                     __end_of_backlightController:
  9849                           	callstack 0
  9850                           
  9851 ;; *************** function _GameParameters_setBackLight *****************
  9852 ;; Defined at:
  9853 ;;		line 24 in file "class/gameParameters.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9856 ;;		 -> g1(218), 
  9857 ;;  value           2   19[COMRAM] unsigned short 
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;		None
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  1    wreg      void 
  9862 ;; Registers used:
  9863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9869 ;;      Params:         4       0       0       0       0       0       0
  9870 ;;      Locals:         0       0       0       0       0       0       0
  9871 ;;      Temps:          2       0       0       0       0       0       0
  9872 ;;      Totals:         6       0       0       0       0       0       0
  9873 ;;Total ram usage:        6 bytes
  9874 ;; Hardware stack levels used: 1
  9875 ;; Hardware stack levels required when called: 4
  9876 ;; This function calls:
  9877 ;;		Nothing
  9878 ;; This function is called by:
  9879 ;;		_backlightController
  9880 ;; This function uses a non-reentrant model
  9881 ;;
  9882                           
  9883                           	psect	text34
  9884  0063FE                     __ptext34:
  9885                           	callstack 0
  9886  0063FE                     _GameParameters_setBackLight:
  9887                           	callstack 21
  9888  0063FE                     
  9889                           ;class/gameParameters.c: 24: void GameParameters_setBackLight(struct GameParameters* s, 
      +                          uint16_t value);class/gameParameters.c: 25: {;class/gameParameters.c: 26:     s->backlig
      +                          ht = value;
  9890  0063FE  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9891  006402  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9892  006406  C014  FFDE         	movff	GameParameters_setBackLight@value,postinc2
  9893  00640A  C015  FFDD         	movff	GameParameters_setBackLight@value+1,postdec2
  9894  00640E                     
  9895                           ;class/gameParameters.c: 27:     if(s->backlight==11)
  9896  00640E  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9897  006412  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9898  006416  0E0B               	movlw	11
  9899  006418  18DE               	xorwf	postinc2,w,c
  9900  00641A  10DE               	iorwf	postinc2,w,c
  9901  00641C  A4D8               	btfss	status,2,c
  9902  00641E  EF13  F032         	goto	u6841
  9903  006422  EF15  F032         	goto	u6840
  9904  006426                     u6841:
  9905  006426  EF18  F032         	goto	l9614
  9906  00642A                     u6840:
  9907  00642A                     
  9908                           ;class/gameParameters.c: 28:     {;class/gameParameters.c: 29:         CCPR2L = 255;
  9909  00642A  6867               	setf	103,c	;volatile
  9910                           
  9911                           ;class/gameParameters.c: 30:     }
  9912  00642C  EF20  F032         	goto	l146
  9913  006430                     l9614:
  9914                           
  9915                           ;class/gameParameters.c: 32:     {;class/gameParameters.c: 33:         CCPR2L=(s->backli
      +                          ght)*23;
  9916  006430  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9917  006434  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9918  006438  50DF               	movf	indf2,w,c
  9919  00643A  0D17               	mullw	23
  9920  00643C  CFF3 FF67          	movff	prodl,3943	;volatile
  9921  006440                     l146:
  9922  006440  0012               	return		;funcret
  9923  006442                     __end_of_GameParameters_setBackLight:
  9924                           	callstack 0
  9925                           
  9926 ;; *************** function _XF_scheduleTimer *****************
  9927 ;; Defined at:
  9928 ;;		line 96 in file "xf/xf.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;  tm              2   18[COMRAM] unsigned short 
  9931 ;;  ev              1   20[COMRAM] unsigned char 
  9932 ;;  inISR           1   21[COMRAM] _Bool 
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;  i               1   22[COMRAM] unsigned char 
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  1    wreg      unsigned char 
  9937 ;; Registers used:
  9938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9944 ;;      Params:         4       0       0       0       0       0       0
  9945 ;;      Locals:         1       0       0       0       0       0       0
  9946 ;;      Temps:          0       0       0       0       0       0       0
  9947 ;;      Totals:         5       0       0       0       0       0       0
  9948 ;;Total ram usage:        5 bytes
  9949 ;; Hardware stack levels used: 1
  9950 ;; Hardware stack levels required when called: 5
  9951 ;; This function calls:
  9952 ;;		_ENTERCRITICAL
  9953 ;;		_LEAVECRITICAL
  9954 ;; This function is called by:
  9955 ;;		_touchScreenController
  9956 ;;		_gameControllerSM
  9957 ;;		_gameControllerController
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text35
  9962  005F2A                     __ptext35:
  9963                           	callstack 0
  9964  005F2A                     _XF_scheduleTimer:
  9965                           	callstack 21
  9966  005F2A                     
  9967                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
  9968  005F2A  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  9969  005F2C  EC7F  F033         	call	_ENTERCRITICAL
  9970  005F30                     
  9971                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
  9972  005F30  0E00               	movlw	0
  9973  005F32  6E17               	movwf	XF_scheduleTimer@i^0,c
  9974  005F34                     l9902:
  9975                           
  9976                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
  9977  005F34  5017               	movf	XF_scheduleTimer@i^0,w,c
  9978  005F36  0D03               	mullw	3
  9979  005F38  0EB7               	movlw	low (_theXF+2)
  9980  005F3A  24F3               	addwf	243,w,c
  9981  005F3C  6ED9               	movwf	fsr2l,c
  9982  005F3E  0E00               	movlw	high (_theXF+2)
  9983  005F40  20F4               	addwfc	prodh,w,c
  9984  005F42  6EDA               	movwf	fsr2h,c
  9985  005F44  50DF               	movf	indf2,w,c
  9986  005F46  A4D8               	btfss	status,2,c
  9987  005F48  EFA8  F02F         	goto	u7161
  9988  005F4C  EFAA  F02F         	goto	u7160
  9989  005F50                     u7161:
  9990  005F50  EFC2  F02F         	goto	l9906
  9991  005F54                     u7160:
  9992  005F54                     
  9993                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
  9994  005F54  5017               	movf	XF_scheduleTimer@i^0,w,c
  9995  005F56  0D03               	mullw	3
  9996  005F58  0EB5               	movlw	low _theXF
  9997  005F5A  24F3               	addwf	243,w,c
  9998  005F5C  6ED9               	movwf	fsr2l,c
  9999  005F5E  0E00               	movlw	high _theXF
 10000  005F60  20F4               	addwfc	prodh,w,c
 10001  005F62  6EDA               	movwf	fsr2h,c
 10002  005F64  C013  FFDE         	movff	XF_scheduleTimer@tm,postinc2
 10003  005F68  C014  FFDD         	movff	XF_scheduleTimer@tm+1,postdec2
 10004                           
 10005                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
 10006  005F6C  5017               	movf	XF_scheduleTimer@i^0,w,c
 10007  005F6E  0D03               	mullw	3
 10008  005F70  0EB7               	movlw	low (_theXF+2)
 10009  005F72  24F3               	addwf	243,w,c
 10010  005F74  6ED9               	movwf	fsr2l,c
 10011  005F76  0E00               	movlw	high (_theXF+2)
 10012  005F78  20F4               	addwfc	prodh,w,c
 10013  005F7A  6EDA               	movwf	fsr2h,c
 10014  005F7C  C015  FFDF         	movff	XF_scheduleTimer@ev,indf2
 10015                           
 10016                           ;xf/xf.c: 107:             break;
 10017  005F80  EFCB  F02F         	goto	l9910
 10018  005F84                     l9906:
 10019                           
 10020                           ;xf/xf.c: 109:     }
 10021  005F84  2A17               	incf	XF_scheduleTimer@i^0,f,c
 10022  005F86  0E07               	movlw	7
 10023  005F88  6417               	cpfsgt	XF_scheduleTimer@i^0,c
 10024  005F8A  EFC9  F02F         	goto	u7171
 10025  005F8E  EFCB  F02F         	goto	u7170
 10026  005F92                     u7171:
 10027  005F92  EF9A  F02F         	goto	l9902
 10028  005F96                     u7170:
 10029  005F96                     l9910:
 10030                           
 10031                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
 10032  005F96  5016               	movf	XF_scheduleTimer@inISR^0,w,c
 10033  005F98  EC74  F033         	call	_LEAVECRITICAL
 10034  005F9C  0012               	return		;funcret
 10035  005F9E                     __end_of_XF_scheduleTimer:
 10036                           	callstack 0
 10037                           
 10038 ;; *************** function _LCD_InSlider *****************
 10039 ;; Defined at:
 10040 ;;		line 546 in file "libraries/lcd_highlevel.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;  slider          2   17[COMRAM] PTR struct .
 10043 ;;		 -> g1(218), 
 10044 ;;  posX            2   19[COMRAM] unsigned short 
 10045 ;;  posY            2   21[COMRAM] unsigned short 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;		None
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      unsigned char 
 10050 ;; Registers used:
 10051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10057 ;;      Params:         6       0       0       0       0       0       0
 10058 ;;      Locals:         0       0       0       0       0       0       0
 10059 ;;      Temps:          4       0       0       0       0       0       0
 10060 ;;      Totals:        10       0       0       0       0       0       0
 10061 ;;Total ram usage:       10 bytes
 10062 ;; Hardware stack levels used: 1
 10063 ;; Hardware stack levels required when called: 4
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_gameControllerController
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text36
 10072  0050CC                     __ptext36:
 10073                           	callstack 0
 10074  0050CC                     _LCD_InSlider:
 10075                           	callstack 22
 10076  0050CC                     
 10077                           ;libraries/lcd_highlevel.c: 546: uint8_t LCD_InSlider(sld_t * slider, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 547: {;libraries/lcd_highlevel.c: 549:   if(posX 
      +                          < slider->posX)
 10078  0050CC  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
 10079  0050D0  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
 10080  0050D4  50DE               	movf	postinc2,w,c
 10081  0050D6  5C14               	subwf	LCD_InSlider@posX^0,w,c
 10082  0050D8  50DE               	movf	postinc2,w,c
 10083  0050DA  5815               	subwfb	(LCD_InSlider@posX+1)^0,w,c
 10084  0050DC  B0D8               	btfsc	status,0,c
 10085  0050DE  EF73  F028         	goto	u7121
 10086  0050E2  EF75  F028         	goto	u7120
 10087  0050E6                     u7121:
 10088  0050E6  EF78  F028         	goto	l9872
 10089  0050EA                     u7120:
 10090  0050EA                     l9868:
 10091                           
 10092                           ;libraries/lcd_highlevel.c: 550:   {;libraries/lcd_highlevel.c: 551:     return 0;
 10093  0050EA  0E00               	movlw	0
 10094  0050EC  EFD4  F028         	goto	l274
 10095  0050F0                     l9872:
 10096                           
 10097                           ;libraries/lcd_highlevel.c: 554:   if(posX > (slider->posX + slider->width))
 10098  0050F0  EE20 F004          	lfsr	2,4
 10099  0050F4  5012               	movf	LCD_InSlider@slider^0,w,c
 10100  0050F6  26D9               	addwf	fsr2l,f,c
 10101  0050F8  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10102  0050FA  22DA               	addwfc	fsr2h,f,c
 10103  0050FC  CFDE F018          	movff	postinc2,??_LCD_InSlider
 10104  005100  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
 10105  005104  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
 10106  005108  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
 10107  00510C  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
 10108  005110  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
 10109  005114  5018               	movf	??_LCD_InSlider^0,w,c
 10110  005116  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
 10111  005118  5019               	movf	(??_LCD_InSlider+1)^0,w,c
 10112  00511A  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
 10113  00511C  5014               	movf	LCD_InSlider@posX^0,w,c
 10114  00511E  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
 10115  005120  5015               	movf	(LCD_InSlider@posX+1)^0,w,c
 10116  005122  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
 10117  005124  B0D8               	btfsc	status,0,c
 10118  005126  EF97  F028         	goto	u7131
 10119  00512A  EF99  F028         	goto	u7130
 10120  00512E                     u7131:
 10121  00512E  EF9B  F028         	goto	l9878
 10122  005132                     u7130:
 10123  005132  EF75  F028         	goto	l9868
 10124  005136                     l9878:
 10125                           
 10126                           ;libraries/lcd_highlevel.c: 559:   if(posY < slider->posY)
 10127  005136  EE20 F002          	lfsr	2,2
 10128  00513A  5012               	movf	LCD_InSlider@slider^0,w,c
 10129  00513C  26D9               	addwf	fsr2l,f,c
 10130  00513E  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10131  005140  22DA               	addwfc	fsr2h,f,c
 10132  005142  50DE               	movf	postinc2,w,c
 10133  005144  5C16               	subwf	LCD_InSlider@posY^0,w,c
 10134  005146  50DE               	movf	postinc2,w,c
 10135  005148  5817               	subwfb	(LCD_InSlider@posY+1)^0,w,c
 10136  00514A  B0D8               	btfsc	status,0,c
 10137  00514C  EFAA  F028         	goto	u7141
 10138  005150  EFAC  F028         	goto	u7140
 10139  005154                     u7141:
 10140  005154  EFAE  F028         	goto	l9884
 10141  005158                     u7140:
 10142  005158  EF75  F028         	goto	l9868
 10143  00515C                     l9884:
 10144                           
 10145                           ;libraries/lcd_highlevel.c: 564:   if(posY > (slider->posY + slider->height))
 10146  00515C  EE20 F006          	lfsr	2,6
 10147  005160  5012               	movf	LCD_InSlider@slider^0,w,c
 10148  005162  26D9               	addwf	fsr2l,f,c
 10149  005164  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10150  005166  22DA               	addwfc	fsr2h,f,c
 10151  005168  CFDE F018          	movff	postinc2,??_LCD_InSlider
 10152  00516C  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
 10153  005170  EE20 F002          	lfsr	2,2
 10154  005174  5012               	movf	LCD_InSlider@slider^0,w,c
 10155  005176  26D9               	addwf	fsr2l,f,c
 10156  005178  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
 10157  00517A  22DA               	addwfc	fsr2h,f,c
 10158  00517C  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
 10159  005180  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
 10160  005184  5018               	movf	??_LCD_InSlider^0,w,c
 10161  005186  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
 10162  005188  5019               	movf	(??_LCD_InSlider+1)^0,w,c
 10163  00518A  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
 10164  00518C  5016               	movf	LCD_InSlider@posY^0,w,c
 10165  00518E  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
 10166  005190  5017               	movf	(LCD_InSlider@posY+1)^0,w,c
 10167  005192  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
 10168  005194  B0D8               	btfsc	status,0,c
 10169  005196  EFCF  F028         	goto	u7151
 10170  00519A  EFD1  F028         	goto	u7150
 10171  00519E                     u7151:
 10172  00519E  EFD3  F028         	goto	l9890
 10173  0051A2                     u7150:
 10174  0051A2  EF75  F028         	goto	l9868
 10175  0051A6                     l9890:
 10176                           
 10177                           ;libraries/lcd_highlevel.c: 568:   return 1;
 10178  0051A6  0E01               	movlw	1
 10179  0051A8                     l274:
 10180  0051A8  0012               	return		;funcret
 10181  0051AA                     __end_of_LCD_InSlider:
 10182                           	callstack 0
 10183                           
 10184 ;; *************** function _LCD_InButton *****************
 10185 ;; Defined at:
 10186 ;;		line 514 in file "libraries/lcd_highlevel.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  button          2   17[COMRAM] PTR struct .
 10189 ;;		 -> g1(218), 
 10190 ;;  posX            2   19[COMRAM] unsigned short 
 10191 ;;  posY            2   21[COMRAM] unsigned short 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;		None
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      unsigned char 
 10196 ;; Registers used:
 10197 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10203 ;;      Params:         6       0       0       0       0       0       0
 10204 ;;      Locals:         0       0       0       0       0       0       0
 10205 ;;      Temps:          4       0       0       0       0       0       0
 10206 ;;      Totals:        10       0       0       0       0       0       0
 10207 ;;Total ram usage:       10 bytes
 10208 ;; Hardware stack levels used: 1
 10209 ;; Hardware stack levels required when called: 4
 10210 ;; This function calls:
 10211 ;;		Nothing
 10212 ;; This function is called by:
 10213 ;;		_gameControllerController
 10214 ;; This function uses a non-reentrant model
 10215 ;;
 10216                           
 10217                           	psect	text37
 10218  0051AA                     __ptext37:
 10219                           	callstack 0
 10220  0051AA                     _LCD_InButton:
 10221                           	callstack 22
 10222  0051AA                     
 10223                           ;libraries/lcd_highlevel.c: 514: uint8_t LCD_InButton(btn_t * button, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 515: {;libraries/lcd_highlevel.c: 517:   if(posX 
      +                          < button->posX)
 10224  0051AA  C012  FFD9         	movff	LCD_InButton@button,fsr2l
 10225  0051AE  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
 10226  0051B2  50DE               	movf	postinc2,w,c
 10227  0051B4  5C14               	subwf	LCD_InButton@posX^0,w,c
 10228  0051B6  50DE               	movf	postinc2,w,c
 10229  0051B8  5815               	subwfb	(LCD_InButton@posX+1)^0,w,c
 10230  0051BA  B0D8               	btfsc	status,0,c
 10231  0051BC  EFE2  F028         	goto	u7081
 10232  0051C0  EFE4  F028         	goto	u7080
 10233  0051C4                     u7081:
 10234  0051C4  EFE7  F028         	goto	l9844
 10235  0051C8                     u7080:
 10236  0051C8                     l9840:
 10237                           
 10238                           ;libraries/lcd_highlevel.c: 518:   {;libraries/lcd_highlevel.c: 519:     return 0;
 10239  0051C8  0E00               	movlw	0
 10240  0051CA  EF43  F029         	goto	l267
 10241  0051CE                     l9844:
 10242                           
 10243                           ;libraries/lcd_highlevel.c: 522:   if(posX > (button->posX + button->width))
 10244  0051CE  EE20 F004          	lfsr	2,4
 10245  0051D2  5012               	movf	LCD_InButton@button^0,w,c
 10246  0051D4  26D9               	addwf	fsr2l,f,c
 10247  0051D6  5013               	movf	(LCD_InButton@button+1)^0,w,c
 10248  0051D8  22DA               	addwfc	fsr2h,f,c
 10249  0051DA  CFDE F018          	movff	postinc2,??_LCD_InButton
 10250  0051DE  CFDD F019          	movff	postdec2,??_LCD_InButton+1
 10251  0051E2  C012  FFD9         	movff	LCD_InButton@button,fsr2l
 10252  0051E6  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
 10253  0051EA  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
 10254  0051EE  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
 10255  0051F2  5018               	movf	??_LCD_InButton^0,w,c
 10256  0051F4  261A               	addwf	(??_LCD_InButton+2)^0,f,c
 10257  0051F6  5019               	movf	(??_LCD_InButton+1)^0,w,c
 10258  0051F8  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
 10259  0051FA  5014               	movf	LCD_InButton@posX^0,w,c
 10260  0051FC  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
 10261  0051FE  5015               	movf	(LCD_InButton@posX+1)^0,w,c
 10262  005200  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
 10263  005202  B0D8               	btfsc	status,0,c
 10264  005204  EF06  F029         	goto	u7091
 10265  005208  EF08  F029         	goto	u7090
 10266  00520C                     u7091:
 10267  00520C  EF0A  F029         	goto	l9850
 10268  005210                     u7090:
 10269  005210  EFE4  F028         	goto	l9840
 10270  005214                     l9850:
 10271                           
 10272                           ;libraries/lcd_highlevel.c: 527:   if(posY < button->posY)
 10273  005214  EE20 F002          	lfsr	2,2
 10274  005218  5012               	movf	LCD_InButton@button^0,w,c
 10275  00521A  26D9               	addwf	fsr2l,f,c
 10276  00521C  5013               	movf	(LCD_InButton@button+1)^0,w,c
 10277  00521E  22DA               	addwfc	fsr2h,f,c
 10278  005220  50DE               	movf	postinc2,w,c
 10279  005222  5C16               	subwf	LCD_InButton@posY^0,w,c
 10280  005224  50DE               	movf	postinc2,w,c
 10281  005226  5817               	subwfb	(LCD_InButton@posY+1)^0,w,c
 10282  005228  B0D8               	btfsc	status,0,c
 10283  00522A  EF19  F029         	goto	u7101
 10284  00522E  EF1B  F029         	goto	u7100
 10285  005232                     u7101:
 10286  005232  EF1D  F029         	goto	l9856
 10287  005236                     u7100:
 10288  005236  EFE4  F028         	goto	l9840
 10289  00523A                     l9856:
 10290                           
 10291                           ;libraries/lcd_highlevel.c: 532:   if(posY > (button->posY + button->height))
 10292  00523A  EE20 F006          	lfsr	2,6
 10293  00523E  5012               	movf	LCD_InButton@button^0,w,c
 10294  005240  26D9               	addwf	fsr2l,f,c
 10295  005242  5013               	movf	(LCD_InButton@button+1)^0,w,c
 10296  005244  22DA               	addwfc	fsr2h,f,c
 10297  005246  CFDE F018          	movff	postinc2,??_LCD_InButton
 10298  00524A  CFDD F019          	movff	postdec2,??_LCD_InButton+1
 10299  00524E  EE20 F002          	lfsr	2,2
 10300  005252  5012               	movf	LCD_InButton@button^0,w,c
 10301  005254  26D9               	addwf	fsr2l,f,c
 10302  005256  5013               	movf	(LCD_InButton@button+1)^0,w,c
 10303  005258  22DA               	addwfc	fsr2h,f,c
 10304  00525A  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
 10305  00525E  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
 10306  005262  5018               	movf	??_LCD_InButton^0,w,c
 10307  005264  261A               	addwf	(??_LCD_InButton+2)^0,f,c
 10308  005266  5019               	movf	(??_LCD_InButton+1)^0,w,c
 10309  005268  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
 10310  00526A  5016               	movf	LCD_InButton@posY^0,w,c
 10311  00526C  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
 10312  00526E  5017               	movf	(LCD_InButton@posY+1)^0,w,c
 10313  005270  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
 10314  005272  B0D8               	btfsc	status,0,c
 10315  005274  EF3E  F029         	goto	u7111
 10316  005278  EF40  F029         	goto	u7110
 10317  00527C                     u7111:
 10318  00527C  EF42  F029         	goto	l9862
 10319  005280                     u7110:
 10320  005280  EFE4  F028         	goto	l9840
 10321  005284                     l9862:
 10322                           
 10323                           ;libraries/lcd_highlevel.c: 536:   return 1;
 10324  005284  0E01               	movlw	1
 10325  005286                     l267:
 10326  005286  0012               	return		;funcret
 10327  005288                     __end_of_LCD_InButton:
 10328                           	callstack 0
 10329                           
 10330 ;; *************** function _GameParameters_init *****************
 10331 ;; Defined at:
 10332 ;;		line 3 in file "class/gameParameters.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;  s               2   42[COMRAM] PTR struct GameParameter
 10335 ;;		 -> g1(218), 
 10336 ;; Auto vars:     Size  Location     Type
 10337 ;;		None
 10338 ;; Return value:  Size  Location     Type
 10339 ;;                  1    wreg      void 
 10340 ;; Registers used:
 10341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10342 ;; Tracked objects:
 10343 ;;		On entry : 0/0
 10344 ;;		On exit  : 0/0
 10345 ;;		Unchanged: 0/0
 10346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10347 ;;      Params:         2       0       0       0       0       0       0
 10348 ;;      Locals:         0       0       0       0       0       0       0
 10349 ;;      Temps:          0       0       0       0       0       0       0
 10350 ;;      Totals:         2       0       0       0       0       0       0
 10351 ;;Total ram usage:        2 bytes
 10352 ;; Hardware stack levels used: 1
 10353 ;; Hardware stack levels required when called: 5
 10354 ;; This function calls:
 10355 ;;		_Ball_init
 10356 ;;		_LCD_ButtonCreate
 10357 ;;		_LCD_SliderCreate
 10358 ;;		_Paddle_init
 10359 ;;		_Score_init
 10360 ;; This function is called by:
 10361 ;;		_Factory_init
 10362 ;;		_gameControllerController
 10363 ;; This function uses a non-reentrant model
 10364 ;;
 10365                           
 10366                           	psect	text38
 10367  002A10                     __ptext38:
 10368                           	callstack 0
 10369  002A10                     _GameParameters_init:
 10370                           	callstack 21
 10371  002A10                     
 10372                           ;class/gameParameters.c: 3: void GameParameters_init(struct GameParameters* s);class/gam
      +                          eParameters.c: 4: {;class/gameParameters.c: 5:     s->backlight = 11;
 10373  002A10  C02B  FFD9         	movff	GameParameters_init@s,fsr2l
 10374  002A14  C02C  FFDA         	movff	GameParameters_init@s+1,fsr2h
 10375  002A18  0E0B               	movlw	11
 10376  002A1A  6EDE               	movwf	postinc2,c
 10377  002A1C  0E00               	movlw	0
 10378  002A1E  6EDD               	movwf	postdec2,c
 10379  002A20                     
 10380                           ;class/gameParameters.c: 6:     CCPR2L = 255;
 10381  002A20  6867               	setf	103,c	;volatile
 10382  002A22                     
 10383                           ;class/gameParameters.c: 7:     s->player = 0;
 10384  002A22  EE20 F002          	lfsr	2,2
 10385  002A26  502B               	movf	GameParameters_init@s^0,w,c
 10386  002A28  26D9               	addwf	fsr2l,f,c
 10387  002A2A  502C               	movf	(GameParameters_init@s+1)^0,w,c
 10388  002A2C  22DA               	addwfc	fsr2h,f,c
 10389  002A2E  0E00               	movlw	0
 10390  002A30  6EDE               	movwf	postinc2,c
 10391  002A32  0E00               	movlw	0
 10392  002A34  6EDD               	movwf	postdec2,c
 10393  002A36                     
 10394                           ;class/gameParameters.c: 8:     s->x=0;
 10395  002A36  EE20 F004          	lfsr	2,4
 10396  002A3A  502B               	movf	GameParameters_init@s^0,w,c
 10397  002A3C  26D9               	addwf	fsr2l,f,c
 10398  002A3E  502C               	movf	(GameParameters_init@s+1)^0,w,c
 10399  002A40  22DA               	addwfc	fsr2h,f,c
 10400  002A42  0E00               	movlw	0
 10401  002A44  6EDE               	movwf	postinc2,c
 10402  002A46  0E00               	movlw	0
 10403  002A48  6EDD               	movwf	postdec2,c
 10404  002A4A                     
 10405                           ;class/gameParameters.c: 9:     s->y=0;
 10406  002A4A  EE20 F006          	lfsr	2,6
 10407  002A4E  502B               	movf	GameParameters_init@s^0,w,c
 10408  002A50  26D9               	addwf	fsr2l,f,c
 10409  002A52  502C               	movf	(GameParameters_init@s+1)^0,w,c
 10410  002A54  22DA               	addwfc	fsr2h,f,c
 10411  002A56  0E00               	movlw	0
 10412  002A58  6EDE               	movwf	postinc2,c
 10413  002A5A  0E00               	movlw	0
 10414  002A5C  6EDD               	movwf	postdec2,c
 10415  002A5E                     
 10416                           ;class/gameParameters.c: 10:     s->level=1;
 10417  002A5E  EE20 F008          	lfsr	2,8
 10418  002A62  502B               	movf	GameParameters_init@s^0,w,c
 10419  002A64  26D9               	addwf	fsr2l,f,c
 10420  002A66  502C               	movf	(GameParameters_init@s+1)^0,w,c
 10421  002A68  22DA               	addwfc	fsr2h,f,c
 10422  002A6A  0E01               	movlw	1
 10423  002A6C  6EDE               	movwf	postinc2,c
 10424  002A6E  0E00               	movlw	0
 10425  002A70  6EDD               	movwf	postdec2,c
 10426  002A72                     
 10427                           ;class/gameParameters.c: 11:     Score_init(&s->s1);
 10428  002A72  0ED4               	movlw	212
 10429  002A74  242B               	addwf	GameParameters_init@s^0,w,c
 10430  002A76  6E12               	movwf	Score_init@s^0,c
 10431  002A78  0E00               	movlw	0
 10432  002A7A  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10433  002A7C  6E13               	movwf	(Score_init@s+1)^0,c
 10434  002A7E  ECF2  F032         	call	_Score_init	;wreg free
 10435  002A82                     
 10436                           ;class/gameParameters.c: 12:     Ball_init(&(s->b));
 10437  002A82  0EB4               	movlw	180
 10438  002A84  242B               	addwf	GameParameters_init@s^0,w,c
 10439  002A86  6E12               	movwf	Ball_init@b^0,c
 10440  002A88  0E00               	movlw	0
 10441  002A8A  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10442  002A8C  6E13               	movwf	(Ball_init@b+1)^0,c
 10443  002A8E  EC9F  F030         	call	_Ball_init	;wreg free
 10444  002A92                     
 10445                           ;class/gameParameters.c: 13:     s->b.dy=1;
 10446  002A92  EE20 F0BE          	lfsr	2,190
 10447  002A96  502B               	movf	GameParameters_init@s^0,w,c
 10448  002A98  26D9               	addwf	fsr2l,f,c
 10449  002A9A  502C               	movf	(GameParameters_init@s+1)^0,w,c
 10450  002A9C  22DA               	addwfc	fsr2h,f,c
 10451  002A9E  0E01               	movlw	1
 10452  002AA0  6EDE               	movwf	postinc2,c
 10453  002AA2  0E00               	movlw	0
 10454  002AA4  6EDD               	movwf	postdec2,c
 10455  002AA6                     
 10456                           ;class/gameParameters.c: 14:     Paddle_init(&(s->p1),0);
 10457  002AA6  0EC0               	movlw	192
 10458  002AA8  242B               	addwf	GameParameters_init@s^0,w,c
 10459  002AAA  6E12               	movwf	Paddle_init@p^0,c
 10460  002AAC  0E00               	movlw	0
 10461  002AAE  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10462  002AB0  6E13               	movwf	(Paddle_init@p+1)^0,c
 10463  002AB2  0E00               	movlw	0
 10464  002AB4  6E15               	movwf	(Paddle_init@team+1)^0,c
 10465  002AB6  0E00               	movlw	0
 10466  002AB8  6E14               	movwf	Paddle_init@team^0,c
 10467  002ABA  EC1F  F02D         	call	_Paddle_init	;wreg free
 10468  002ABE                     
 10469                           ;class/gameParameters.c: 15:     Paddle_init(&(s->p2),1);
 10470  002ABE  0ECA               	movlw	202
 10471  002AC0  242B               	addwf	GameParameters_init@s^0,w,c
 10472  002AC2  6E12               	movwf	Paddle_init@p^0,c
 10473  002AC4  0E00               	movlw	0
 10474  002AC6  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10475  002AC8  6E13               	movwf	(Paddle_init@p+1)^0,c
 10476  002ACA  0E00               	movlw	0
 10477  002ACC  6E15               	movwf	(Paddle_init@team+1)^0,c
 10478  002ACE  0E01               	movlw	1
 10479  002AD0  6E14               	movwf	Paddle_init@team^0,c
 10480  002AD2  EC1F  F02D         	call	_Paddle_init	;wreg free
 10481  002AD6                     
 10482                           ;class/gameParameters.c: 16:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"Parametres",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s
      +                          ->btnParam),1);
 10483  002AD6  0E00               	movlw	0
 10484  002AD8  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10485  002ADA  0E82               	movlw	130
 10486  002ADC  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10487  002ADE  0E00               	movlw	0
 10488  002AE0  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10489  002AE2  0E32               	movlw	50
 10490  002AE4  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10491  002AE6  0E00               	movlw	0
 10492  002AE8  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10493  002AEA  0E5A               	movlw	90
 10494  002AEC  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10495  002AEE  0E00               	movlw	0
 10496  002AF0  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10497  002AF2  0E14               	movlw	20
 10498  002AF4  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10499  002AF6  0EFF               	movlw	255
 10500  002AF8  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10501  002AFA  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10502  002AFC  0E00               	movlw	0
 10503  002AFE  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10504  002B00  0E00               	movlw	0
 10505  002B02  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10506  002B04  0EB2               	movlw	low STR_4
 10507  002B06  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10508  002B08  0E7F               	movlw	high STR_4
 10509  002B0A  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10510  002B0C  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 10511  002B0E  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10512  002B10  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10513  002B12  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10514  002B14  0E00               	movlw	0
 10515  002B16  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10516  002B18  0E00               	movlw	0
 10517  002B1A  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10518  002B1C  0E00               	movlw	0
 10519  002B1E  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10520  002B20  0E00               	movlw	0
 10521  002B22  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10522  002B24  0E00               	movlw	0
 10523  002B26  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10524  002B28  0E00               	movlw	0
 10525  002B2A  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10526  002B2C  0E0A               	movlw	10
 10527  002B2E  242B               	addwf	GameParameters_init@s^0,w,c
 10528  002B30  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10529  002B32  0E00               	movlw	0
 10530  002B34  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10531  002B36  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10532  002B38  0E01               	movlw	1
 10533  002B3A  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10534  002B3C  EC85  F026         	call	_LCD_ButtonCreate	;wreg free
 10535  002B40                     
 10536                           ;class/gameParameters.c: 17:     LCD_ButtonCreate(10,250,70,20,0b1111111111111111,0b0000
      +                          000000000000,"1 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->
      +                          btnOnePlayer),2);
 10537  002B40  0E00               	movlw	0
 10538  002B42  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10539  002B44  0E0A               	movlw	10
 10540  002B46  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10541  002B48  0E00               	movlw	0
 10542  002B4A  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10543  002B4C  0EFA               	movlw	250
 10544  002B4E  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10545  002B50  0E00               	movlw	0
 10546  002B52  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10547  002B54  0E46               	movlw	70
 10548  002B56  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10549  002B58  0E00               	movlw	0
 10550  002B5A  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10551  002B5C  0E14               	movlw	20
 10552  002B5E  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10553  002B60  0EFF               	movlw	255
 10554  002B62  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10555  002B64  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10556  002B66  0E00               	movlw	0
 10557  002B68  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10558  002B6A  0E00               	movlw	0
 10559  002B6C  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10560  002B6E  0ED0               	movlw	low STR_5
 10561  002B70  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10562  002B72  0E7F               	movlw	high STR_5
 10563  002B74  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10564  002B76  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 10565  002B78  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10566  002B7A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10567  002B7C  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10568  002B7E  0E00               	movlw	0
 10569  002B80  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10570  002B82  0E00               	movlw	0
 10571  002B84  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10572  002B86  0E00               	movlw	0
 10573  002B88  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10574  002B8A  0E00               	movlw	0
 10575  002B8C  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10576  002B8E  0E00               	movlw	0
 10577  002B90  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10578  002B92  0E00               	movlw	0
 10579  002B94  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10580  002B96  0E22               	movlw	34
 10581  002B98  242B               	addwf	GameParameters_init@s^0,w,c
 10582  002B9A  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10583  002B9C  0E00               	movlw	0
 10584  002B9E  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10585  002BA0  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10586  002BA2  0E02               	movlw	2
 10587  002BA4  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10588  002BA6  EC85  F026         	call	_LCD_ButtonCreate	;wreg free
 10589  002BAA                     
 10590                           ;class/gameParameters.c: 18:     LCD_ButtonCreate(150,250,70,20,0b1111111111111111,0b000
      +                          0000000000000,"2 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnTwoPlayer),3);
 10591  002BAA  0E00               	movlw	0
 10592  002BAC  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10593  002BAE  0E96               	movlw	150
 10594  002BB0  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10595  002BB2  0E00               	movlw	0
 10596  002BB4  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10597  002BB6  0EFA               	movlw	250
 10598  002BB8  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10599  002BBA  0E00               	movlw	0
 10600  002BBC  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10601  002BBE  0E46               	movlw	70
 10602  002BC0  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10603  002BC2  0E00               	movlw	0
 10604  002BC4  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10605  002BC6  0E14               	movlw	20
 10606  002BC8  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10607  002BCA  0EFF               	movlw	255
 10608  002BCC  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10609  002BCE  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10610  002BD0  0E00               	movlw	0
 10611  002BD2  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10612  002BD4  0E00               	movlw	0
 10613  002BD6  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10614  002BD8  0ED9               	movlw	low STR_6
 10615  002BDA  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10616  002BDC  0E7F               	movlw	high STR_6
 10617  002BDE  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10618  002BE0  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 10619  002BE2  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10620  002BE4  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10621  002BE6  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10622  002BE8  0E00               	movlw	0
 10623  002BEA  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10624  002BEC  0E00               	movlw	0
 10625  002BEE  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10626  002BF0  0E00               	movlw	0
 10627  002BF2  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10628  002BF4  0E00               	movlw	0
 10629  002BF6  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10630  002BF8  0E00               	movlw	0
 10631  002BFA  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10632  002BFC  0E00               	movlw	0
 10633  002BFE  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10634  002C00  0E3A               	movlw	58
 10635  002C02  242B               	addwf	GameParameters_init@s^0,w,c
 10636  002C04  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10637  002C06  0E00               	movlw	0
 10638  002C08  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10639  002C0A  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10640  002C0C  0E03               	movlw	3
 10641  002C0E  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10642  002C10  EC85  F026         	call	_LCD_ButtonCreate	;wreg free
 10643  002C14                     
 10644                           ;class/gameParameters.c: 19:     LCD_ButtonCreate(210,10,20,20,0b1111111111111111,0b1111
      +                          100000000000,"X",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnLeav
      +                          eParam),4);
 10645  002C14  0E00               	movlw	0
 10646  002C16  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10647  002C18  0ED2               	movlw	210
 10648  002C1A  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10649  002C1C  0E00               	movlw	0
 10650  002C1E  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10651  002C20  0E0A               	movlw	10
 10652  002C22  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10653  002C24  0E00               	movlw	0
 10654  002C26  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10655  002C28  0E14               	movlw	20
 10656  002C2A  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10657  002C2C  0E00               	movlw	0
 10658  002C2E  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10659  002C30  0E14               	movlw	20
 10660  002C32  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10661  002C34  0EFF               	movlw	255
 10662  002C36  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10663  002C38  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10664  002C3A  0EF8               	movlw	248
 10665  002C3C  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10666  002C3E  0E00               	movlw	0
 10667  002C40  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10668  002C42  0EFC               	movlw	low STR_7
 10669  002C44  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10670  002C46  0E7F               	movlw	high STR_7
 10671  002C48  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10672  002C4A  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 10673  002C4C  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10674  002C4E  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10675  002C50  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10676  002C52  0E00               	movlw	0
 10677  002C54  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10678  002C56  0E00               	movlw	0
 10679  002C58  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10680  002C5A  0E00               	movlw	0
 10681  002C5C  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10682  002C5E  0E00               	movlw	0
 10683  002C60  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10684  002C62  0E00               	movlw	0
 10685  002C64  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10686  002C66  0E00               	movlw	0
 10687  002C68  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10688  002C6A  0E52               	movlw	82
 10689  002C6C  242B               	addwf	GameParameters_init@s^0,w,c
 10690  002C6E  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10691  002C70  0E00               	movlw	0
 10692  002C72  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10693  002C74  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10694  002C76  0E04               	movlw	4
 10695  002C78  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10696  002C7A  EC85  F026         	call	_LCD_ButtonCreate	;wreg free
 10697  002C7E                     
 10698                           ;class/gameParameters.c: 20:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"New Game",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnNewGame),5);
 10699  002C7E  0E00               	movlw	0
 10700  002C80  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10701  002C82  0E96               	movlw	150
 10702  002C84  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10703  002C86  0E00               	movlw	0
 10704  002C88  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10705  002C8A  0EDC               	movlw	220
 10706  002C8C  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10707  002C8E  0E00               	movlw	0
 10708  002C90  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10709  002C92  0E46               	movlw	70
 10710  002C94  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10711  002C96  0E00               	movlw	0
 10712  002C98  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10713  002C9A  0E32               	movlw	50
 10714  002C9C  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10715  002C9E  0E00               	movlw	0
 10716  002CA0  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10717  002CA2  0E00               	movlw	0
 10718  002CA4  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10719  002CA6  0EFF               	movlw	255
 10720  002CA8  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10721  002CAA  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10722  002CAC  0EC7               	movlw	low STR_8
 10723  002CAE  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10724  002CB0  0E7F               	movlw	high STR_8
 10725  002CB2  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10726  002CB4  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 10727  002CB6  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10728  002CB8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10729  002CBA  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10730  002CBC  0E00               	movlw	0
 10731  002CBE  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10732  002CC0  0E00               	movlw	0
 10733  002CC2  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10734  002CC4  0E00               	movlw	0
 10735  002CC6  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10736  002CC8  0E00               	movlw	0
 10737  002CCA  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10738  002CCC  0E00               	movlw	0
 10739  002CCE  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10740  002CD0  0E00               	movlw	0
 10741  002CD2  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10742  002CD4  0E6A               	movlw	106
 10743  002CD6  242B               	addwf	GameParameters_init@s^0,w,c
 10744  002CD8  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10745  002CDA  0E00               	movlw	0
 10746  002CDC  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10747  002CDE  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10748  002CE0  0E05               	movlw	5
 10749  002CE2  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10750  002CE4  EC85  F026         	call	_LCD_ButtonCreate	;wreg free
 10751  002CE8                     
 10752                           ;class/gameParameters.c: 21:     LCD_SliderCreate(50,110,165,20,0b0000000000000000,0b111
      +                          1111111111111,0b1111100000000000,0,11,((void*)0),&(s->sldBackLight));
 10753  002CE8  0E00               	movlw	0
 10754  002CEA  6E13               	movwf	(LCD_SliderCreate@posX+1)^0,c
 10755  002CEC  0E32               	movlw	50
 10756  002CEE  6E12               	movwf	LCD_SliderCreate@posX^0,c
 10757  002CF0  0E00               	movlw	0
 10758  002CF2  6E15               	movwf	(LCD_SliderCreate@posY+1)^0,c
 10759  002CF4  0E6E               	movlw	110
 10760  002CF6  6E14               	movwf	LCD_SliderCreate@posY^0,c
 10761  002CF8  0E00               	movlw	0
 10762  002CFA  6E17               	movwf	(LCD_SliderCreate@width+1)^0,c
 10763  002CFC  0EA5               	movlw	165
 10764  002CFE  6E16               	movwf	LCD_SliderCreate@width^0,c
 10765  002D00  0E00               	movlw	0
 10766  002D02  6E19               	movwf	(LCD_SliderCreate@height+1)^0,c
 10767  002D04  0E14               	movlw	20
 10768  002D06  6E18               	movwf	LCD_SliderCreate@height^0,c
 10769  002D08  0E00               	movlw	0
 10770  002D0A  6E1B               	movwf	(LCD_SliderCreate@sldColor+1)^0,c
 10771  002D0C  0E00               	movlw	0
 10772  002D0E  6E1A               	movwf	LCD_SliderCreate@sldColor^0,c
 10773  002D10  0EFF               	movlw	255
 10774  002D12  6E1D               	movwf	(LCD_SliderCreate@bgColor+1)^0,c
 10775  002D14  681C               	setf	LCD_SliderCreate@bgColor^0,c
 10776  002D16  0EF8               	movlw	248
 10777  002D18  6E1F               	movwf	(LCD_SliderCreate@borderColor+1)^0,c
 10778  002D1A  0E00               	movlw	0
 10779  002D1C  6E1E               	movwf	LCD_SliderCreate@borderColor^0,c
 10780  002D1E  0E00               	movlw	0
 10781  002D20  6E21               	movwf	(LCD_SliderCreate@cursorWidth+1)^0,c
 10782  002D22  0E00               	movlw	0
 10783  002D24  6E20               	movwf	LCD_SliderCreate@cursorWidth^0,c
 10784  002D26  0E00               	movlw	0
 10785  002D28  6E23               	movwf	(LCD_SliderCreate@steps+1)^0,c
 10786  002D2A  0E0B               	movlw	11
 10787  002D2C  6E22               	movwf	LCD_SliderCreate@steps^0,c
 10788  002D2E  0E00               	movlw	0
 10789  002D30  6E24               	movwf	LCD_SliderCreate@fpPress^0,c
 10790  002D32  0E00               	movlw	0
 10791  002D34  6E25               	movwf	(LCD_SliderCreate@fpPress+1)^0,c
 10792  002D36  0E82               	movlw	130
 10793  002D38  242B               	addwf	GameParameters_init@s^0,w,c
 10794  002D3A  6E26               	movwf	LCD_SliderCreate@slider^0,c
 10795  002D3C  0E00               	movlw	0
 10796  002D3E  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10797  002D40  6E27               	movwf	(LCD_SliderCreate@slider+1)^0,c
 10798  002D42  EC7D  F027         	call	_LCD_SliderCreate	;wreg free
 10799  002D46                     
 10800                           ;class/gameParameters.c: 22:     LCD_SliderCreate(50,160,165,20,0b0000000000000000,0b111
      +                          1111111111111,0b1111100000000000,0,3,((void*)0),&(s->sldLevel));
 10801  002D46  0E00               	movlw	0
 10802  002D48  6E13               	movwf	(LCD_SliderCreate@posX+1)^0,c
 10803  002D4A  0E32               	movlw	50
 10804  002D4C  6E12               	movwf	LCD_SliderCreate@posX^0,c
 10805  002D4E  0E00               	movlw	0
 10806  002D50  6E15               	movwf	(LCD_SliderCreate@posY+1)^0,c
 10807  002D52  0EA0               	movlw	160
 10808  002D54  6E14               	movwf	LCD_SliderCreate@posY^0,c
 10809  002D56  0E00               	movlw	0
 10810  002D58  6E17               	movwf	(LCD_SliderCreate@width+1)^0,c
 10811  002D5A  0EA5               	movlw	165
 10812  002D5C  6E16               	movwf	LCD_SliderCreate@width^0,c
 10813  002D5E  0E00               	movlw	0
 10814  002D60  6E19               	movwf	(LCD_SliderCreate@height+1)^0,c
 10815  002D62  0E14               	movlw	20
 10816  002D64  6E18               	movwf	LCD_SliderCreate@height^0,c
 10817  002D66  0E00               	movlw	0
 10818  002D68  6E1B               	movwf	(LCD_SliderCreate@sldColor+1)^0,c
 10819  002D6A  0E00               	movlw	0
 10820  002D6C  6E1A               	movwf	LCD_SliderCreate@sldColor^0,c
 10821  002D6E  0EFF               	movlw	255
 10822  002D70  6E1D               	movwf	(LCD_SliderCreate@bgColor+1)^0,c
 10823  002D72  681C               	setf	LCD_SliderCreate@bgColor^0,c
 10824  002D74  0EF8               	movlw	248
 10825  002D76  6E1F               	movwf	(LCD_SliderCreate@borderColor+1)^0,c
 10826  002D78  0E00               	movlw	0
 10827  002D7A  6E1E               	movwf	LCD_SliderCreate@borderColor^0,c
 10828  002D7C  0E00               	movlw	0
 10829  002D7E  6E21               	movwf	(LCD_SliderCreate@cursorWidth+1)^0,c
 10830  002D80  0E00               	movlw	0
 10831  002D82  6E20               	movwf	LCD_SliderCreate@cursorWidth^0,c
 10832  002D84  0E00               	movlw	0
 10833  002D86  6E23               	movwf	(LCD_SliderCreate@steps+1)^0,c
 10834  002D88  0E03               	movlw	3
 10835  002D8A  6E22               	movwf	LCD_SliderCreate@steps^0,c
 10836  002D8C  0E00               	movlw	0
 10837  002D8E  6E24               	movwf	LCD_SliderCreate@fpPress^0,c
 10838  002D90  0E00               	movlw	0
 10839  002D92  6E25               	movwf	(LCD_SliderCreate@fpPress+1)^0,c
 10840  002D94  0E9B               	movlw	155
 10841  002D96  242B               	addwf	GameParameters_init@s^0,w,c
 10842  002D98  6E26               	movwf	LCD_SliderCreate@slider^0,c
 10843  002D9A  0E00               	movlw	0
 10844  002D9C  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10845  002D9E  6E27               	movwf	(LCD_SliderCreate@slider+1)^0,c
 10846  002DA0  EC7D  F027         	call	_LCD_SliderCreate	;wreg free
 10847  002DA4  0012               	return		;funcret
 10848  002DA6                     __end_of_GameParameters_init:
 10849                           	callstack 0
 10850                           
 10851 ;; *************** function _Score_init *****************
 10852 ;; Defined at:
 10853 ;;		line 3 in file "class/score.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;  s               2   17[COMRAM] PTR struct Score
 10856 ;;		 -> g1(218), 
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;		None
 10859 ;; Return value:  Size  Location     Type
 10860 ;;                  1    wreg      void 
 10861 ;; Registers used:
 10862 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10868 ;;      Params:         2       0       0       0       0       0       0
 10869 ;;      Locals:         0       0       0       0       0       0       0
 10870 ;;      Temps:          0       0       0       0       0       0       0
 10871 ;;      Totals:         2       0       0       0       0       0       0
 10872 ;;Total ram usage:        2 bytes
 10873 ;; Hardware stack levels used: 1
 10874 ;; Hardware stack levels required when called: 4
 10875 ;; This function calls:
 10876 ;;		Nothing
 10877 ;; This function is called by:
 10878 ;;		_GameParameters_init
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           	psect	text39
 10883  0065E4                     __ptext39:
 10884                           	callstack 0
 10885  0065E4                     _Score_init:
 10886                           	callstack 21
 10887  0065E4                     
 10888                           ;class/score.c: 3: void Score_init(struct Score* s);class/score.c: 4: {;class/score.c: 5
      +                          :     s->homeScore = 0;
 10889  0065E4  C012  FFD9         	movff	Score_init@s,fsr2l
 10890  0065E8  C013  FFDA         	movff	Score_init@s+1,fsr2h
 10891  0065EC  0E00               	movlw	0
 10892  0065EE  6EDE               	movwf	postinc2,c
 10893  0065F0  0E00               	movlw	0
 10894  0065F2  6EDD               	movwf	postdec2,c
 10895  0065F4                     
 10896                           ;class/score.c: 6:     s->awayScore = 0;
 10897  0065F4  EE20 F002          	lfsr	2,2
 10898  0065F8  5012               	movf	Score_init@s^0,w,c
 10899  0065FA  26D9               	addwf	fsr2l,f,c
 10900  0065FC  5013               	movf	(Score_init@s+1)^0,w,c
 10901  0065FE  22DA               	addwfc	fsr2h,f,c
 10902  006600  0E00               	movlw	0
 10903  006602  6EDE               	movwf	postinc2,c
 10904  006604  0E00               	movlw	0
 10905  006606  6EDD               	movwf	postdec2,c
 10906  006608  0012               	return		;funcret
 10907  00660A                     __end_of_Score_init:
 10908                           	callstack 0
 10909                           
 10910 ;; *************** function _Paddle_init *****************
 10911 ;; Defined at:
 10912 ;;		line 6 in file "class/paddle.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  p               2   17[COMRAM] PTR struct Paddle
 10915 ;;		 -> g1(218), 
 10916 ;;  team            2   19[COMRAM] unsigned short 
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;		None
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  1    wreg      void 
 10921 ;; Registers used:
 10922 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10928 ;;      Params:         4       0       0       0       0       0       0
 10929 ;;      Locals:         0       0       0       0       0       0       0
 10930 ;;      Temps:          0       0       0       0       0       0       0
 10931 ;;      Totals:         4       0       0       0       0       0       0
 10932 ;;Total ram usage:        4 bytes
 10933 ;; Hardware stack levels used: 1
 10934 ;; Hardware stack levels required when called: 4
 10935 ;; This function calls:
 10936 ;;		Nothing
 10937 ;; This function is called by:
 10938 ;;		_GameParameters_init
 10939 ;; This function uses a non-reentrant model
 10940 ;;
 10941                           
 10942                           	psect	text40
 10943  005A3E                     __ptext40:
 10944                           	callstack 0
 10945  005A3E                     _Paddle_init:
 10946                           	callstack 21
 10947  005A3E                     
 10948                           ;class/paddle.c: 6: void Paddle_init(struct Paddle* p,uint16_t team);class/paddle.c: 7: 
      +                          {;class/paddle.c: 8:     p->oldx=0;
 10949  005A3E  EE20 F004          	lfsr	2,4
 10950  005A42  5012               	movf	Paddle_init@p^0,w,c
 10951  005A44  26D9               	addwf	fsr2l,f,c
 10952  005A46  5013               	movf	(Paddle_init@p+1)^0,w,c
 10953  005A48  22DA               	addwfc	fsr2h,f,c
 10954  005A4A  0E00               	movlw	0
 10955  005A4C  6EDE               	movwf	postinc2,c
 10956  005A4E  0E00               	movlw	0
 10957  005A50  6EDD               	movwf	postdec2,c
 10958                           
 10959                           ;class/paddle.c: 9:     p->oldy=0;
 10960  005A52  EE20 F006          	lfsr	2,6
 10961  005A56  5012               	movf	Paddle_init@p^0,w,c
 10962  005A58  26D9               	addwf	fsr2l,f,c
 10963  005A5A  5013               	movf	(Paddle_init@p+1)^0,w,c
 10964  005A5C  22DA               	addwfc	fsr2h,f,c
 10965  005A5E  0E00               	movlw	0
 10966  005A60  6EDE               	movwf	postinc2,c
 10967  005A62  0E00               	movlw	0
 10968  005A64  6EDD               	movwf	postdec2,c
 10969  005A66                     
 10970                           ;class/paddle.c: 10:     if(team)
 10971  005A66  5014               	movf	Paddle_init@team^0,w,c
 10972  005A68  1015               	iorwf	(Paddle_init@team+1)^0,w,c
 10973  005A6A  B4D8               	btfsc	status,2,c
 10974  005A6C  EF3A  F02D         	goto	u6781
 10975  005A70  EF3C  F02D         	goto	u6780
 10976  005A74                     u6781:
 10977  005A74  EF5A  F02D         	goto	l9446
 10978  005A78                     u6780:
 10979  005A78                     
 10980                           ;class/paddle.c: 11:     {;class/paddle.c: 12:         p->x = 90;
 10981  005A78  C012  FFD9         	movff	Paddle_init@p,fsr2l
 10982  005A7C  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
 10983  005A80  0E5A               	movlw	90
 10984  005A82  6EDE               	movwf	postinc2,c
 10985  005A84  0E00               	movlw	0
 10986  005A86  6EDD               	movwf	postdec2,c
 10987  005A88                     
 10988                           ;class/paddle.c: 13:         p->y = 20;
 10989  005A88  EE20 F002          	lfsr	2,2
 10990  005A8C  5012               	movf	Paddle_init@p^0,w,c
 10991  005A8E  26D9               	addwf	fsr2l,f,c
 10992  005A90  5013               	movf	(Paddle_init@p+1)^0,w,c
 10993  005A92  22DA               	addwfc	fsr2h,f,c
 10994  005A94  0E14               	movlw	20
 10995  005A96  6EDE               	movwf	postinc2,c
 10996  005A98  0E00               	movlw	0
 10997  005A9A  6EDD               	movwf	postdec2,c
 10998  005A9C                     
 10999                           ;class/paddle.c: 14:         p->color = 0b1111111111111111;
 11000  005A9C  EE20 F008          	lfsr	2,8
 11001  005AA0  5012               	movf	Paddle_init@p^0,w,c
 11002  005AA2  26D9               	addwf	fsr2l,f,c
 11003  005AA4  5013               	movf	(Paddle_init@p+1)^0,w,c
 11004  005AA6  22DA               	addwfc	fsr2h,f,c
 11005  005AA8  0EFF               	movlw	255
 11006  005AAA  6EDE               	movwf	postinc2,c
 11007  005AAC  0EFF               	movlw	255
 11008  005AAE  6EDD               	movwf	postdec2,c
 11009                           
 11010                           ;class/paddle.c: 15:     }
 11011  005AB0  EF76  F02D         	goto	l18
 11012  005AB4                     l9446:
 11013                           
 11014                           ;class/paddle.c: 17:     {;class/paddle.c: 18:         p->x = 90;
 11015  005AB4  C012  FFD9         	movff	Paddle_init@p,fsr2l
 11016  005AB8  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
 11017  005ABC  0E5A               	movlw	90
 11018  005ABE  6EDE               	movwf	postinc2,c
 11019  005AC0  0E00               	movlw	0
 11020  005AC2  6EDD               	movwf	postdec2,c
 11021  005AC4                     
 11022                           ;class/paddle.c: 19:         p->y = 280;
 11023  005AC4  EE20 F002          	lfsr	2,2
 11024  005AC8  5012               	movf	Paddle_init@p^0,w,c
 11025  005ACA  26D9               	addwf	fsr2l,f,c
 11026  005ACC  5013               	movf	(Paddle_init@p+1)^0,w,c
 11027  005ACE  22DA               	addwfc	fsr2h,f,c
 11028  005AD0  0E18               	movlw	24
 11029  005AD2  6EDE               	movwf	postinc2,c
 11030  005AD4  0E01               	movlw	1
 11031  005AD6  6EDD               	movwf	postdec2,c
 11032  005AD8                     
 11033                           ;class/paddle.c: 20:         p->color = 0b1111111111111111;
 11034  005AD8  EE20 F008          	lfsr	2,8
 11035  005ADC  5012               	movf	Paddle_init@p^0,w,c
 11036  005ADE  26D9               	addwf	fsr2l,f,c
 11037  005AE0  5013               	movf	(Paddle_init@p+1)^0,w,c
 11038  005AE2  22DA               	addwfc	fsr2h,f,c
 11039  005AE4  0EFF               	movlw	255
 11040  005AE6  6EDE               	movwf	postinc2,c
 11041  005AE8  0EFF               	movlw	255
 11042  005AEA  6EDD               	movwf	postdec2,c
 11043  005AEC                     l18:
 11044  005AEC  0012               	return		;funcret
 11045  005AEE                     __end_of_Paddle_init:
 11046                           	callstack 0
 11047                           
 11048 ;; *************** function _LCD_SliderCreate *****************
 11049 ;; Defined at:
 11050 ;;		line 291 in file "libraries/lcd_highlevel.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;  posX            2   17[COMRAM] unsigned short 
 11053 ;;  posY            2   19[COMRAM] unsigned short 
 11054 ;;  width           2   21[COMRAM] unsigned short 
 11055 ;;  height          2   23[COMRAM] unsigned short 
 11056 ;;  sldColor        2   25[COMRAM] unsigned short 
 11057 ;;  bgColor         2   27[COMRAM] unsigned short 
 11058 ;;  borderColor     2   29[COMRAM] unsigned short 
 11059 ;;  cursorWidth     2   31[COMRAM] unsigned short 
 11060 ;;  steps           2   33[COMRAM] unsigned short 
 11061 ;;  fpPress         2   35[COMRAM] PTR FTN()void 
 11062 ;;		 -> Absolute function(1), 
 11063 ;;  slider          2   37[COMRAM] PTR struct .
 11064 ;;		 -> g1(218), 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;		None
 11067 ;; Return value:  Size  Location     Type
 11068 ;;                  1    wreg      void 
 11069 ;; Registers used:
 11070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11071 ;; Tracked objects:
 11072 ;;		On entry : 0/0
 11073 ;;		On exit  : 0/0
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11076 ;;      Params:        22       0       0       0       0       0       0
 11077 ;;      Locals:         0       0       0       0       0       0       0
 11078 ;;      Temps:          0       0       0       0       0       0       0
 11079 ;;      Totals:        22       0       0       0       0       0       0
 11080 ;;Total ram usage:       22 bytes
 11081 ;; Hardware stack levels used: 1
 11082 ;; Hardware stack levels required when called: 4
 11083 ;; This function calls:
 11084 ;;		Nothing
 11085 ;; This function is called by:
 11086 ;;		_GameParameters_init
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090                           	psect	text41
 11091  004EFA                     __ptext41:
 11092                           	callstack 0
 11093  004EFA                     _LCD_SliderCreate:
 11094                           	callstack 21
 11095  004EFA                     
 11096                           ;libraries/lcd_highlevel.c: 291: void LCD_SliderCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 292:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 293:                       uint16_t sldColor, uint16_t bgColor, u
      +                          int16_t borderColor,;libraries/lcd_highlevel.c: 294:                       uint16_t curs
      +                          orWidth,;libraries/lcd_highlevel.c: 295:                       uint16_t steps,;libraries
      +                          /lcd_highlevel.c: 296:                       void (* fpPress)(),;libraries/lcd_highlevel
      +                          .c: 297:                       sld_t * slider)
 11097  004EFA  C026  FFD9         	movff	LCD_SliderCreate@slider,fsr2l
 11098  004EFE  C027  FFDA         	movff	LCD_SliderCreate@slider+1,fsr2h
 11099  004F02  C012  FFDE         	movff	LCD_SliderCreate@posX,postinc2
 11100  004F06  C013  FFDD         	movff	LCD_SliderCreate@posX+1,postdec2
 11101  004F0A                     
 11102                           ;libraries/lcd_highlevel.c: 300:   slider->posY = posY;
 11103  004F0A  EE20 F002          	lfsr	2,2
 11104  004F0E  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11105  004F10  26D9               	addwf	fsr2l,f,c
 11106  004F12  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11107  004F14  22DA               	addwfc	fsr2h,f,c
 11108  004F16  C014  FFDE         	movff	LCD_SliderCreate@posY,postinc2
 11109  004F1A  C015  FFDD         	movff	LCD_SliderCreate@posY+1,postdec2
 11110  004F1E                     
 11111                           ;libraries/lcd_highlevel.c: 301:   slider->height = height;
 11112  004F1E  EE20 F006          	lfsr	2,6
 11113  004F22  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11114  004F24  26D9               	addwf	fsr2l,f,c
 11115  004F26  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11116  004F28  22DA               	addwfc	fsr2h,f,c
 11117  004F2A  C018  FFDE         	movff	LCD_SliderCreate@height,postinc2
 11118  004F2E  C019  FFDD         	movff	LCD_SliderCreate@height+1,postdec2
 11119  004F32                     
 11120                           ;libraries/lcd_highlevel.c: 302:   slider->width = width;
 11121  004F32  EE20 F004          	lfsr	2,4
 11122  004F36  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11123  004F38  26D9               	addwf	fsr2l,f,c
 11124  004F3A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11125  004F3C  22DA               	addwfc	fsr2h,f,c
 11126  004F3E  C016  FFDE         	movff	LCD_SliderCreate@width,postinc2
 11127  004F42  C017  FFDD         	movff	LCD_SliderCreate@width+1,postdec2
 11128  004F46                     
 11129                           ;libraries/lcd_highlevel.c: 303:   slider->sldColor = sldColor;
 11130  004F46  EE20 F008          	lfsr	2,8
 11131  004F4A  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11132  004F4C  26D9               	addwf	fsr2l,f,c
 11133  004F4E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11134  004F50  22DA               	addwfc	fsr2h,f,c
 11135  004F52  C01A  FFDE         	movff	LCD_SliderCreate@sldColor,postinc2
 11136  004F56  C01B  FFDD         	movff	LCD_SliderCreate@sldColor+1,postdec2
 11137  004F5A                     
 11138                           ;libraries/lcd_highlevel.c: 304:   slider->bgColor = bgColor;
 11139  004F5A  EE20 F00A          	lfsr	2,10
 11140  004F5E  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11141  004F60  26D9               	addwf	fsr2l,f,c
 11142  004F62  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11143  004F64  22DA               	addwfc	fsr2h,f,c
 11144  004F66  C01C  FFDE         	movff	LCD_SliderCreate@bgColor,postinc2
 11145  004F6A  C01D  FFDD         	movff	LCD_SliderCreate@bgColor+1,postdec2
 11146  004F6E                     
 11147                           ;libraries/lcd_highlevel.c: 305:   slider->borderColor = borderColor;
 11148  004F6E  EE20 F00C          	lfsr	2,12
 11149  004F72  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11150  004F74  26D9               	addwf	fsr2l,f,c
 11151  004F76  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11152  004F78  22DA               	addwfc	fsr2h,f,c
 11153  004F7A  C01E  FFDE         	movff	LCD_SliderCreate@borderColor,postinc2
 11154  004F7E  C01F  FFDD         	movff	LCD_SliderCreate@borderColor+1,postdec2
 11155  004F82                     
 11156                           ;libraries/lcd_highlevel.c: 306:   slider->cursorWidth = cursorWidth;
 11157  004F82  EE20 F00E          	lfsr	2,14
 11158  004F86  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11159  004F88  26D9               	addwf	fsr2l,f,c
 11160  004F8A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11161  004F8C  22DA               	addwfc	fsr2h,f,c
 11162  004F8E  C020  FFDE         	movff	LCD_SliderCreate@cursorWidth,postinc2
 11163  004F92  C021  FFDD         	movff	LCD_SliderCreate@cursorWidth+1,postdec2
 11164  004F96                     
 11165                           ;libraries/lcd_highlevel.c: 307:   slider->fpPress = fpPress;
 11166  004F96  EE20 F017          	lfsr	2,23
 11167  004F9A  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11168  004F9C  26D9               	addwf	fsr2l,f,c
 11169  004F9E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11170  004FA0  22DA               	addwfc	fsr2h,f,c
 11171  004FA2  C024  FFDE         	movff	LCD_SliderCreate@fpPress,postinc2
 11172  004FA6  C025  FFDD         	movff	LCD_SliderCreate@fpPress+1,postdec2
 11173  004FAA                     
 11174                           ;libraries/lcd_highlevel.c: 308:   slider->steps = steps;
 11175  004FAA  EE20 F015          	lfsr	2,21
 11176  004FAE  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11177  004FB0  26D9               	addwf	fsr2l,f,c
 11178  004FB2  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11179  004FB4  22DA               	addwfc	fsr2h,f,c
 11180  004FB6  C022  FFDE         	movff	LCD_SliderCreate@steps,postinc2
 11181  004FBA  C023  FFDD         	movff	LCD_SliderCreate@steps+1,postdec2
 11182  004FBE                     
 11183                           ;libraries/lcd_highlevel.c: 309:   slider->value = 0;
 11184  004FBE  EE20 F011          	lfsr	2,17
 11185  004FC2  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11186  004FC4  26D9               	addwf	fsr2l,f,c
 11187  004FC6  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11188  004FC8  22DA               	addwfc	fsr2h,f,c
 11189  004FCA  0E00               	movlw	0
 11190  004FCC  6EDE               	movwf	postinc2,c
 11191  004FCE  0E00               	movlw	0
 11192  004FD0  6EDD               	movwf	postdec2,c
 11193  004FD2                     
 11194                           ;libraries/lcd_highlevel.c: 310:   slider->oldValue = 0;
 11195  004FD2  EE20 F013          	lfsr	2,19
 11196  004FD6  5026               	movf	LCD_SliderCreate@slider^0,w,c
 11197  004FD8  26D9               	addwf	fsr2l,f,c
 11198  004FDA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 11199  004FDC  22DA               	addwfc	fsr2h,f,c
 11200  004FDE  0E00               	movlw	0
 11201  004FE0  6EDE               	movwf	postinc2,c
 11202  004FE2  0E00               	movlw	0
 11203  004FE4  6EDD               	movwf	postdec2,c
 11204  004FE6  0012               	return		;funcret
 11205  004FE8                     __end_of_LCD_SliderCreate:
 11206                           	callstack 0
 11207                           
 11208 ;; *************** function _LCD_ButtonCreate *****************
 11209 ;; Defined at:
 11210 ;;		line 396 in file "libraries/lcd_highlevel.c"
 11211 ;; Parameters:    Size  Location     Type
 11212 ;;  posX            2   17[COMRAM] unsigned short 
 11213 ;;  posY            2   19[COMRAM] unsigned short 
 11214 ;;  width           2   21[COMRAM] unsigned short 
 11215 ;;  height          2   23[COMRAM] unsigned short 
 11216 ;;  txtColor        2   25[COMRAM] unsigned short 
 11217 ;;  bgColor         2   27[COMRAM] unsigned short 
 11218 ;;  textOrBmp       2   29[COMRAM] PTR const unsigned char 
 11219 ;;		 -> STR_8(9), STR_7(2), STR_6(9), STR_5(9), 
 11220 ;;		 -> STR_4(11), 
 11221 ;;  font            2   31[COMRAM] PTR struct .
 11222 ;;		 -> arialNarrow_12ptFontInfo(7), 
 11223 ;;  fpPress         2   33[COMRAM] PTR FTN(unsigned char ,)
 11224 ;;		 -> Absolute function(1), 
 11225 ;;  fpReleased      2   35[COMRAM] PTR FTN(unsigned char ,)
 11226 ;;		 -> Absolute function(1), 
 11227 ;;  fpOut           2   37[COMRAM] PTR FTN(unsigned char ,)
 11228 ;;		 -> Absolute function(1), 
 11229 ;;  button          2   39[COMRAM] PTR struct .
 11230 ;;		 -> g1(218), 
 11231 ;;  index           1   41[COMRAM] unsigned char 
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;		None
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      void 
 11236 ;; Registers used:
 11237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11243 ;;      Params:        25       0       0       0       0       0       0
 11244 ;;      Locals:         0       0       0       0       0       0       0
 11245 ;;      Temps:          0       0       0       0       0       0       0
 11246 ;;      Totals:        25       0       0       0       0       0       0
 11247 ;;Total ram usage:       25 bytes
 11248 ;; Hardware stack levels used: 1
 11249 ;; Hardware stack levels required when called: 4
 11250 ;; This function calls:
 11251 ;;		Nothing
 11252 ;; This function is called by:
 11253 ;;		_GameParameters_init
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           	psect	text42
 11258  004D0A                     __ptext42:
 11259                           	callstack 0
 11260  004D0A                     _LCD_ButtonCreate:
 11261                           	callstack 21
 11262  004D0A                     
 11263                           ;libraries/lcd_highlevel.c: 396: void LCD_ButtonCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 397:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 398:                       uint16_t txtColor, uint16_t bgColor,;l
      +                          ibraries/lcd_highlevel.c: 399:                       const uint8_t * textOrBmp, FONT_INF
      +                          O * font,;libraries/lcd_highlevel.c: 400:                       void (*fpPress)(uint8_t)
      +                          , void (* fpReleased)(uint8_t), void (* fpOut)(uint8_t),;libraries/lcd_highlevel.c: 401:
      +                                                 btn_t * button,
 11264  004D0A  C028  FFD9         	movff	LCD_ButtonCreate@button,fsr2l
 11265  004D0E  C029  FFDA         	movff	LCD_ButtonCreate@button+1,fsr2h
 11266  004D12  C012  FFDE         	movff	LCD_ButtonCreate@posX,postinc2
 11267  004D16  C013  FFDD         	movff	LCD_ButtonCreate@posX+1,postdec2
 11268  004D1A                     
 11269                           ;libraries/lcd_highlevel.c: 405:   button->posY = posY;
 11270  004D1A  EE20 F002          	lfsr	2,2
 11271  004D1E  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11272  004D20  26D9               	addwf	fsr2l,f,c
 11273  004D22  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11274  004D24  22DA               	addwfc	fsr2h,f,c
 11275  004D26  C014  FFDE         	movff	LCD_ButtonCreate@posY,postinc2
 11276  004D2A  C015  FFDD         	movff	LCD_ButtonCreate@posY+1,postdec2
 11277  004D2E                     
 11278                           ;libraries/lcd_highlevel.c: 406:   button->height = height;
 11279  004D2E  EE20 F006          	lfsr	2,6
 11280  004D32  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11281  004D34  26D9               	addwf	fsr2l,f,c
 11282  004D36  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11283  004D38  22DA               	addwfc	fsr2h,f,c
 11284  004D3A  C018  FFDE         	movff	LCD_ButtonCreate@height,postinc2
 11285  004D3E  C019  FFDD         	movff	LCD_ButtonCreate@height+1,postdec2
 11286  004D42                     
 11287                           ;libraries/lcd_highlevel.c: 407:   button->width = width;
 11288  004D42  EE20 F004          	lfsr	2,4
 11289  004D46  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11290  004D48  26D9               	addwf	fsr2l,f,c
 11291  004D4A  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11292  004D4C  22DA               	addwfc	fsr2h,f,c
 11293  004D4E  C016  FFDE         	movff	LCD_ButtonCreate@width,postinc2
 11294  004D52  C017  FFDD         	movff	LCD_ButtonCreate@width+1,postdec2
 11295  004D56                     
 11296                           ;libraries/lcd_highlevel.c: 408:   button->txtColor = txtColor;
 11297  004D56  EE20 F008          	lfsr	2,8
 11298  004D5A  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11299  004D5C  26D9               	addwf	fsr2l,f,c
 11300  004D5E  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11301  004D60  22DA               	addwfc	fsr2h,f,c
 11302  004D62  C01A  FFDE         	movff	LCD_ButtonCreate@txtColor,postinc2
 11303  004D66  C01B  FFDD         	movff	LCD_ButtonCreate@txtColor+1,postdec2
 11304  004D6A                     
 11305                           ;libraries/lcd_highlevel.c: 409:   button->bgColor = bgColor;
 11306  004D6A  EE20 F00A          	lfsr	2,10
 11307  004D6E  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11308  004D70  26D9               	addwf	fsr2l,f,c
 11309  004D72  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11310  004D74  22DA               	addwfc	fsr2h,f,c
 11311  004D76  C01C  FFDE         	movff	LCD_ButtonCreate@bgColor,postinc2
 11312  004D7A  C01D  FFDD         	movff	LCD_ButtonCreate@bgColor+1,postdec2
 11313  004D7E                     
 11314                           ;libraries/lcd_highlevel.c: 410:   button->text = textOrBmp;
 11315  004D7E  EE20 F00C          	lfsr	2,12
 11316  004D82  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11317  004D84  26D9               	addwf	fsr2l,f,c
 11318  004D86  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11319  004D88  22DA               	addwfc	fsr2h,f,c
 11320  004D8A  C01E  FFDE         	movff	LCD_ButtonCreate@textOrBmp,postinc2
 11321  004D8E  C01F  FFDD         	movff	LCD_ButtonCreate@textOrBmp+1,postdec2
 11322  004D92                     
 11323                           ;libraries/lcd_highlevel.c: 411:   button->font = font;
 11324  004D92  EE20 F00E          	lfsr	2,14
 11325  004D96  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11326  004D98  26D9               	addwf	fsr2l,f,c
 11327  004D9A  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11328  004D9C  22DA               	addwfc	fsr2h,f,c
 11329  004D9E  C020  FFDE         	movff	LCD_ButtonCreate@font,postinc2
 11330  004DA2  C021  FFDD         	movff	LCD_ButtonCreate@font+1,postdec2
 11331  004DA6                     
 11332                           ;libraries/lcd_highlevel.c: 412:   button->fpPress = fpPress;
 11333  004DA6  EE20 F011          	lfsr	2,17
 11334  004DAA  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11335  004DAC  26D9               	addwf	fsr2l,f,c
 11336  004DAE  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11337  004DB0  22DA               	addwfc	fsr2h,f,c
 11338  004DB2  C022  FFDE         	movff	LCD_ButtonCreate@fpPress,postinc2
 11339  004DB6  C023  FFDD         	movff	LCD_ButtonCreate@fpPress+1,postdec2
 11340  004DBA                     
 11341                           ;libraries/lcd_highlevel.c: 413:   button->fpReleased = fpReleased;
 11342  004DBA  EE20 F013          	lfsr	2,19
 11343  004DBE  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11344  004DC0  26D9               	addwf	fsr2l,f,c
 11345  004DC2  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11346  004DC4  22DA               	addwfc	fsr2h,f,c
 11347  004DC6  C024  FFDE         	movff	LCD_ButtonCreate@fpReleased,postinc2
 11348  004DCA  C025  FFDD         	movff	LCD_ButtonCreate@fpReleased+1,postdec2
 11349  004DCE                     
 11350                           ;libraries/lcd_highlevel.c: 414:   button->fpOut = fpOut;
 11351  004DCE  EE20 F015          	lfsr	2,21
 11352  004DD2  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11353  004DD4  26D9               	addwf	fsr2l,f,c
 11354  004DD6  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11355  004DD8  22DA               	addwfc	fsr2h,f,c
 11356  004DDA  C026  FFDE         	movff	LCD_ButtonCreate@fpOut,postinc2
 11357  004DDE  C027  FFDD         	movff	LCD_ButtonCreate@fpOut+1,postdec2
 11358  004DE2                     
 11359                           ;libraries/lcd_highlevel.c: 415:   button->index = index;
 11360  004DE2  EE20 F017          	lfsr	2,23
 11361  004DE6  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11362  004DE8  26D9               	addwf	fsr2l,f,c
 11363  004DEA  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11364  004DEC  22DA               	addwfc	fsr2h,f,c
 11365  004DEE  C02A  FFDF         	movff	LCD_ButtonCreate@index,indf2
 11366  004DF2                     
 11367                           ;libraries/lcd_highlevel.c: 416:   button->pressed = 0;
 11368  004DF2  EE20 F010          	lfsr	2,16
 11369  004DF6  5028               	movf	LCD_ButtonCreate@button^0,w,c
 11370  004DF8  26D9               	addwf	fsr2l,f,c
 11371  004DFA  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 11372  004DFC  22DA               	addwfc	fsr2h,f,c
 11373  004DFE  0E00               	movlw	0
 11374  004E00  6EDF               	movwf	indf2,c
 11375  004E02  0012               	return		;funcret
 11376  004E04                     __end_of_LCD_ButtonCreate:
 11377                           	callstack 0
 11378                           
 11379 ;; *************** function _Ball_init *****************
 11380 ;; Defined at:
 11381 ;;		line 3 in file "class/ball.c"
 11382 ;; Parameters:    Size  Location     Type
 11383 ;;  b               2   17[COMRAM] PTR struct Ball
 11384 ;;		 -> g1(218), 
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;		None
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  1    wreg      void 
 11389 ;; Registers used:
 11390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/0
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11396 ;;      Params:         2       0       0       0       0       0       0
 11397 ;;      Locals:         0       0       0       0       0       0       0
 11398 ;;      Temps:          0       0       0       0       0       0       0
 11399 ;;      Totals:         2       0       0       0       0       0       0
 11400 ;;Total ram usage:        2 bytes
 11401 ;; Hardware stack levels used: 1
 11402 ;; Hardware stack levels required when called: 4
 11403 ;; This function calls:
 11404 ;;		Nothing
 11405 ;; This function is called by:
 11406 ;;		_GameParameters_init
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           
 11410                           	psect	text43
 11411  00613E                     __ptext43:
 11412                           	callstack 0
 11413  00613E                     _Ball_init:
 11414                           	callstack 21
 11415  00613E                     
 11416                           ;class/ball.c: 3: void Ball_init(struct Ball* b);class/ball.c: 4: {;class/ball.c: 5:    
      +                           b->x = 90;
 11417  00613E  C012  FFD9         	movff	Ball_init@b,fsr2l
 11418  006142  C013  FFDA         	movff	Ball_init@b+1,fsr2h
 11419  006146  0E5A               	movlw	90
 11420  006148  6EDE               	movwf	postinc2,c
 11421  00614A  0E00               	movlw	0
 11422  00614C  6EDD               	movwf	postdec2,c
 11423  00614E                     
 11424                           ;class/ball.c: 6:     b->y = 150;
 11425  00614E  EE20 F002          	lfsr	2,2
 11426  006152  5012               	movf	Ball_init@b^0,w,c
 11427  006154  26D9               	addwf	fsr2l,f,c
 11428  006156  5013               	movf	(Ball_init@b+1)^0,w,c
 11429  006158  22DA               	addwfc	fsr2h,f,c
 11430  00615A  0E96               	movlw	150
 11431  00615C  6EDE               	movwf	postinc2,c
 11432  00615E  0E00               	movlw	0
 11433  006160  6EDD               	movwf	postdec2,c
 11434  006162                     
 11435                           ;class/ball.c: 7:     b->oldx=20;
 11436  006162  EE20 F004          	lfsr	2,4
 11437  006166  5012               	movf	Ball_init@b^0,w,c
 11438  006168  26D9               	addwf	fsr2l,f,c
 11439  00616A  5013               	movf	(Ball_init@b+1)^0,w,c
 11440  00616C  22DA               	addwfc	fsr2h,f,c
 11441  00616E  0E14               	movlw	20
 11442  006170  6EDE               	movwf	postinc2,c
 11443  006172  0E00               	movlw	0
 11444  006174  6EDD               	movwf	postdec2,c
 11445  006176                     
 11446                           ;class/ball.c: 8:     b->oldy=20;
 11447  006176  EE20 F006          	lfsr	2,6
 11448  00617A  5012               	movf	Ball_init@b^0,w,c
 11449  00617C  26D9               	addwf	fsr2l,f,c
 11450  00617E  5013               	movf	(Ball_init@b+1)^0,w,c
 11451  006180  22DA               	addwfc	fsr2h,f,c
 11452  006182  0E14               	movlw	20
 11453  006184  6EDE               	movwf	postinc2,c
 11454  006186  0E00               	movlw	0
 11455  006188  6EDD               	movwf	postdec2,c
 11456  00618A                     
 11457                           ;class/ball.c: 9:     b->dx = 0;
 11458  00618A  EE20 F008          	lfsr	2,8
 11459  00618E  5012               	movf	Ball_init@b^0,w,c
 11460  006190  26D9               	addwf	fsr2l,f,c
 11461  006192  5013               	movf	(Ball_init@b+1)^0,w,c
 11462  006194  22DA               	addwfc	fsr2h,f,c
 11463  006196  0E00               	movlw	0
 11464  006198  6EDE               	movwf	postinc2,c
 11465  00619A  0E00               	movlw	0
 11466  00619C  6EDD               	movwf	postdec2,c
 11467  00619E  0012               	return		;funcret
 11468  0061A0                     __end_of_Ball_init:
 11469                           	callstack 0
 11470                           
 11471 ;; *************** function _displaySM *****************
 11472 ;; Defined at:
 11473 ;;		line 26 in file "stateMachine/display.c"
 11474 ;; Parameters:    Size  Location     Type
 11475 ;;  ev              1    wreg     unsigned char 
 11476 ;;  g               2   67[BANK0 ] PTR struct GameParameter
 11477 ;;		 -> g1(218), 
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;  ev              1   71[BANK0 ] unsigned char 
 11480 ;; Return value:  Size  Location     Type
 11481 ;;                  1    wreg      void 
 11482 ;; Registers used:
 11483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11484 ;; Tracked objects:
 11485 ;;		On entry : 0/0
 11486 ;;		On exit  : 0/0
 11487 ;;		Unchanged: 0/0
 11488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11489 ;;      Params:         0       2       0       0       0       0       0
 11490 ;;      Locals:         0       1       0       0       0       0       0
 11491 ;;      Temps:          0       2       0       0       0       0       0
 11492 ;;      Totals:         0       5       0       0       0       0       0
 11493 ;;Total ram usage:        5 bytes
 11494 ;; Hardware stack levels used: 1
 11495 ;; Hardware stack levels required when called: 14
 11496 ;; This function calls:
 11497 ;;		_Menu_inGameDraw
 11498 ;;		_displayController
 11499 ;; This function is called by:
 11500 ;;		_Factory_exec
 11501 ;; This function uses a non-reentrant model
 11502 ;;
 11503                           
 11504                           	psect	text44
 11505  004C0A                     __ptext44:
 11506                           	callstack 0
 11507  004C0A                     _displaySM:
 11508                           	callstack 15
 11509                           
 11510                           ;incstack = 0
 11511                           ;displaySM@ev stored from wreg
 11512  004C0A  0100               	movlb	0	; () banked
 11513  004C0C  6FA7               	movwf	displaySM@ev& (0+255),b
 11514  004C0E                     
 11515                           ;stateMachine/display.c: 26: void displaySM(Event ev, GameParameters* g);stateMachine/di
      +                          splay.c: 27: {;stateMachine/display.c: 28:    switch(displayState)
 11516  004C0E  EF66  F026         	goto	l10578
 11517  004C12                     l10540:
 11518                           
 11519                           ; BSR set to: 0
 11520                           ;stateMachine/display.c: 31:             if((ev==evOnePlayer)||(ev==evTwoPlayer))
 11521  004C12  0E05               	movlw	5
 11522  004C14  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11523  004C16  B4D8               	btfsc	status,2,c
 11524  004C18  EF10  F026         	goto	u8201
 11525  004C1C  EF12  F026         	goto	u8200
 11526  004C20                     u8201:
 11527  004C20  EF1B  F026         	goto	l10544
 11528  004C24                     u8200:
 11529  004C24                     
 11530                           ; BSR set to: 0
 11531  004C24  0E06               	movlw	6
 11532  004C26  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11533  004C28  A4D8               	btfss	status,2,c
 11534  004C2A  EF19  F026         	goto	u8211
 11535  004C2E  EF1B  F026         	goto	u8210
 11536  004C32                     u8211:
 11537  004C32  EF2B  F026         	goto	l10550
 11538  004C36                     u8210:
 11539  004C36                     l10544:
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;stateMachine/display.c: 32:             {;stateMachine/display.c: 33:                 d
      +                          isplayState=INGAME;
 11543  004C36  0E02               	movlw	2
 11544  004C38  6FDD               	movwf	_displayState& (0+255),b
 11545  004C3A                     
 11546                           ; BSR set to: 0
 11547                           ;stateMachine/display.c: 34:                 Menu_inGameDraw(g);
 11548  004C3A  C0A3  F092         	movff	displaySM@g,Menu_inGameDraw@g
 11549  004C3E  C0A4  F093         	movff	displaySM@g+1,Menu_inGameDraw@g+1
 11550  004C42  EC5C  F031         	call	_Menu_inGameDraw	;wreg free
 11551  004C46                     
 11552                           ;stateMachine/display.c: 35:                 displayController(g,ev);
 11553  004C46  C0A3  F09E         	movff	displaySM@g,displayController@g
 11554  004C4A  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11555  004C4E  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11556  004C52  EC83  F025         	call	_displayController	;wreg free
 11557  004C56                     l10550:
 11558                           
 11559                           ;stateMachine/display.c: 37:             if(ev==evParameters)
 11560  004C56  0E07               	movlw	7
 11561  004C58  0100               	movlb	0	; () banked
 11562  004C5A  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11563  004C5C  A4D8               	btfss	status,2,c
 11564  004C5E  EF33  F026         	goto	u8221
 11565  004C62  EF35  F026         	goto	u8220
 11566  004C66                     u8221:
 11567  004C66  EF84  F026         	goto	l565
 11568  004C6A                     u8220:
 11569  004C6A                     
 11570                           ; BSR set to: 0
 11571                           ;stateMachine/display.c: 38:             {;stateMachine/display.c: 39:                 d
      +                          isplayState=PARAMETERS;
 11572  004C6A  0E01               	movlw	1
 11573  004C6C  6FDD               	movwf	_displayState& (0+255),b
 11574  004C6E                     l10554:
 11575                           
 11576                           ; BSR set to: 0
 11577                           ;stateMachine/display.c: 40:                 displayController(g,ev);
 11578  004C6E  C0A3  F09E         	movff	displaySM@g,displayController@g
 11579  004C72  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11580  004C76  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11581  004C7A  EC83  F025         	call	_displayController	;wreg free
 11582  004C7E  EF84  F026         	goto	l565
 11583  004C82                     l10556:
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;stateMachine/display.c: 44:             if(ev==evLeaveParam)
 11587  004C82  0E08               	movlw	8
 11588  004C84  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11589  004C86  A4D8               	btfss	status,2,c
 11590  004C88  EF48  F026         	goto	u8231
 11591  004C8C  EF4A  F026         	goto	u8230
 11592  004C90                     u8231:
 11593  004C90  EF84  F026         	goto	l565
 11594  004C94                     u8230:
 11595  004C94                     l10558:
 11596                           
 11597                           ; BSR set to: 0
 11598                           ;stateMachine/display.c: 45:             {;stateMachine/display.c: 46:                 d
      +                          isplayState=WELCOME;
 11599  004C94  0E00               	movlw	0
 11600  004C96  6FDD               	movwf	_displayState& (0+255),b
 11601  004C98  EF37  F026         	goto	l10554
 11602  004C9C                     l10562:
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;stateMachine/display.c: 51:             if(ev==evEndGame)
 11606  004C9C  0E09               	movlw	9
 11607  004C9E  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11608  004CA0  A4D8               	btfss	status,2,c
 11609  004CA2  EF55  F026         	goto	u8241
 11610  004CA6  EF57  F026         	goto	u8240
 11611  004CAA                     u8241:
 11612  004CAA  EF37  F026         	goto	l10554
 11613  004CAE                     u8240:
 11614  004CAE                     
 11615                           ; BSR set to: 0
 11616                           ;stateMachine/display.c: 52:             {;stateMachine/display.c: 53:                 d
      +                          isplayState=ENDGAME;
 11617  004CAE  0E03               	movlw	3
 11618  004CB0  6FDD               	movwf	_displayState& (0+255),b
 11619  004CB2  EF37  F026         	goto	l10554
 11620  004CB6                     l10570:
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;stateMachine/display.c: 62:            if(ev==evNewGame)
 11624  004CB6  0E0F               	movlw	15
 11625  004CB8  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11626  004CBA  A4D8               	btfss	status,2,c
 11627  004CBC  EF62  F026         	goto	u8251
 11628  004CC0  EF64  F026         	goto	u8250
 11629  004CC4                     u8251:
 11630  004CC4  EF84  F026         	goto	l565
 11631  004CC8                     u8250:
 11632  004CC8  EF4A  F026         	goto	l10558
 11633  004CCC                     l10578:
 11634  004CCC  0100               	movlb	0	; () banked
 11635  004CCE  51DD               	movf	_displayState& (0+255),w,b
 11636  004CD0  6FA5               	movwf	??_displaySM& (0+255),b
 11637  004CD2  6BA6               	clrf	(??_displaySM+1)& (0+255),b
 11638                           
 11639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11640                           ; Switch size 1, requested type "simple"
 11641                           ; Number of cases is 1, Range of values is 0 to 0
 11642                           ; switch strategies available:
 11643                           ; Name         Instructions Cycles
 11644                           ; simple_byte            4     3 (average)
 11645                           ;	Chosen strategy is simple_byte
 11646  004CD4  51A6               	movf	(??_displaySM+1)& (0+255),w,b
 11647  004CD6  0A00               	xorlw	0	; case 0
 11648  004CD8  B4D8               	btfsc	status,2,c
 11649  004CDA  EF71  F026         	goto	l10906
 11650  004CDE  EF84  F026         	goto	l565
 11651  004CE2                     l10906:
 11652                           
 11653                           ; BSR set to: 0
 11654                           ; Switch size 1, requested type "simple"
 11655                           ; Number of cases is 4, Range of values is 0 to 3
 11656                           ; switch strategies available:
 11657                           ; Name         Instructions Cycles
 11658                           ; simple_byte           13     7 (average)
 11659                           ;	Chosen strategy is simple_byte
 11660  004CE2  51A5               	movf	??_displaySM& (0+255),w,b
 11661  004CE4  0A00               	xorlw	0	; case 0
 11662  004CE6  B4D8               	btfsc	status,2,c
 11663  004CE8  EF09  F026         	goto	l10540
 11664  004CEC  0A01               	xorlw	1	; case 1
 11665  004CEE  B4D8               	btfsc	status,2,c
 11666  004CF0  EF41  F026         	goto	l10556
 11667  004CF4  0A03               	xorlw	3	; case 2
 11668  004CF6  B4D8               	btfsc	status,2,c
 11669  004CF8  EF4E  F026         	goto	l10562
 11670  004CFC  0A01               	xorlw	1	; case 3
 11671  004CFE  B4D8               	btfsc	status,2,c
 11672  004D00  EF5B  F026         	goto	l10570
 11673  004D04  EF84  F026         	goto	l565
 11674  004D08                     l565:
 11675  004D08  0012               	return		;funcret
 11676  004D0A                     __end_of_displaySM:
 11677                           	callstack 0
 11678                           
 11679 ;; *************** function _displayController *****************
 11680 ;; Defined at:
 11681 ;;		line 72 in file "stateMachine/display.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  g               2   62[BANK0 ] PTR struct GameParameter
 11684 ;;		 -> g1(218), 
 11685 ;;  ev              1   64[BANK0 ] unsigned char 
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;		None
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      void 
 11690 ;; Registers used:
 11691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11697 ;;      Params:         0       3       0       0       0       0       0
 11698 ;;      Locals:         0       0       0       0       0       0       0
 11699 ;;      Temps:          0       2       0       0       0       0       0
 11700 ;;      Totals:         0       5       0       0       0       0       0
 11701 ;;Total ram usage:        5 bytes
 11702 ;; Hardware stack levels used: 1
 11703 ;; Hardware stack levels required when called: 13
 11704 ;; This function calls:
 11705 ;;		_Ball_draw
 11706 ;;		_Menu_endGame
 11707 ;;		_Menu_parametersDraw
 11708 ;;		_Menu_welcomeDraw
 11709 ;;		_Paddle_draw
 11710 ;;		_Score_draw
 11711 ;; This function is called by:
 11712 ;;		_displayInit
 11713 ;;		_displaySM
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           	psect	text45
 11718  004B06                     __ptext45:
 11719                           	callstack 0
 11720  004B06                     _displayController:
 11721                           	callstack 14
 11722  004B06                     
 11723                           ;stateMachine/display.c: 72: void displayController(GameParameters* g,Event ev);stateMac
      +                          hine/display.c: 73: {;stateMachine/display.c: 74:     switch(displayState)
 11724  004B06  EFE6  F025         	goto	l10084
 11725  004B0A                     l10060:
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;stateMachine/display.c: 78:             Menu_welcomeDraw(g);
 11729  004B0A  C09E  F09C         	movff	displayController@g,Menu_welcomeDraw@g
 11730  004B0E  C09F  F09D         	movff	displayController@g+1,Menu_welcomeDraw@g+1
 11731  004B12  EC59  F02F         	call	_Menu_welcomeDraw	;wreg free
 11732                           
 11733                           ;stateMachine/display.c: 79:             break;
 11734  004B16  EF04  F026         	goto	l579
 11735  004B1A                     l10062:
 11736                           
 11737                           ; BSR set to: 0
 11738                           ;stateMachine/display.c: 82:             Menu_parametersDraw(g);
 11739  004B1A  C09E  F09C         	movff	displayController@g,Menu_parametersDraw@g
 11740  004B1E  C09F  F09D         	movff	displayController@g+1,Menu_parametersDraw@g+1
 11741  004B22  ECE9  F023         	call	_Menu_parametersDraw	;wreg free
 11742                           
 11743                           ;stateMachine/display.c: 83:             break;
 11744  004B26  EF04  F026         	goto	l579
 11745  004B2A                     l10064:
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;stateMachine/display.c: 86:             if(ev==evRedrawPaddle1)
 11749  004B2A  0E0B               	movlw	11
 11750  004B2C  19A0               	xorwf	displayController@ev& (0+255),w,b
 11751  004B2E  A4D8               	btfss	status,2,c
 11752  004B30  EF9C  F025         	goto	u7531
 11753  004B34  EF9E  F025         	goto	u7530
 11754  004B38                     u7531:
 11755  004B38  EFA6  F025         	goto	l10068
 11756  004B3C                     u7530:
 11757  004B3C                     
 11758                           ; BSR set to: 0
 11759                           ;stateMachine/display.c: 87:             {;stateMachine/display.c: 88:                 P
      +                          addle_draw(&g->p1);
 11760  004B3C  0EC0               	movlw	192
 11761  004B3E  259E               	addwf	displayController@g& (0+255),w,b
 11762  004B40  6E25               	movwf	Paddle_draw@p^0,c
 11763  004B42  0E00               	movlw	0
 11764  004B44  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11765  004B46  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11766  004B48  ECBF  F022         	call	_Paddle_draw	;wreg free
 11767  004B4C                     l10068:
 11768                           
 11769                           ;stateMachine/display.c: 90:             if(ev==evRedrawPaddle2)
 11770  004B4C  0E0C               	movlw	12
 11771  004B4E  0100               	movlb	0	; () banked
 11772  004B50  19A0               	xorwf	displayController@ev& (0+255),w,b
 11773  004B52  A4D8               	btfss	status,2,c
 11774  004B54  EFAE  F025         	goto	u7541
 11775  004B58  EFB0  F025         	goto	u7540
 11776  004B5C                     u7541:
 11777  004B5C  EFB8  F025         	goto	l10072
 11778  004B60                     u7540:
 11779  004B60                     
 11780                           ; BSR set to: 0
 11781                           ;stateMachine/display.c: 91:             {;stateMachine/display.c: 92:                 P
      +                          addle_draw(&g->p2);
 11782  004B60  0ECA               	movlw	202
 11783  004B62  259E               	addwf	displayController@g& (0+255),w,b
 11784  004B64  6E25               	movwf	Paddle_draw@p^0,c
 11785  004B66  0E00               	movlw	0
 11786  004B68  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11787  004B6A  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11788  004B6C  ECBF  F022         	call	_Paddle_draw	;wreg free
 11789  004B70                     l10072:
 11790                           
 11791                           ;stateMachine/display.c: 94:             if(ev==evRedrawBall)
 11792  004B70  0E0D               	movlw	13
 11793  004B72  0100               	movlb	0	; () banked
 11794  004B74  19A0               	xorwf	displayController@ev& (0+255),w,b
 11795  004B76  A4D8               	btfss	status,2,c
 11796  004B78  EFC0  F025         	goto	u7551
 11797  004B7C  EFC2  F025         	goto	u7550
 11798  004B80                     u7551:
 11799  004B80  EFCA  F025         	goto	l10076
 11800  004B84                     u7550:
 11801  004B84                     
 11802                           ; BSR set to: 0
 11803                           ;stateMachine/display.c: 95:             {;stateMachine/display.c: 96:                 B
      +                          all_draw(&g->b);
 11804  004B84  0EB4               	movlw	180
 11805  004B86  259E               	addwf	displayController@g& (0+255),w,b
 11806  004B88  6E25               	movwf	Ball_draw@b^0,c
 11807  004B8A  0E00               	movlw	0
 11808  004B8C  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11809  004B8E  6E26               	movwf	(Ball_draw@b+1)^0,c
 11810  004B90  EC73  F021         	call	_Ball_draw	;wreg free
 11811  004B94                     l10076:
 11812                           
 11813                           ;stateMachine/display.c: 98:             if(ev==evRedrawScore)
 11814  004B94  0E0E               	movlw	14
 11815  004B96  0100               	movlb	0	; () banked
 11816  004B98  19A0               	xorwf	displayController@ev& (0+255),w,b
 11817  004B9A  A4D8               	btfss	status,2,c
 11818  004B9C  EFD2  F025         	goto	u7561
 11819  004BA0  EFD4  F025         	goto	u7560
 11820  004BA4                     u7561:
 11821  004BA4  EF04  F026         	goto	l579
 11822  004BA8                     u7560:
 11823  004BA8                     
 11824                           ; BSR set to: 0
 11825                           ;stateMachine/display.c: 99:             {;stateMachine/display.c: 100:                 
      +                          Score_draw(&g->s1);
 11826  004BA8  0ED4               	movlw	212
 11827  004BAA  259E               	addwf	displayController@g& (0+255),w,b
 11828  004BAC  6F90               	movwf	Score_draw@s& (0+255),b
 11829  004BAE  0E00               	movlw	0
 11830  004BB0  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11831  004BB2  6F91               	movwf	(Score_draw@s+1)& (0+255),b
 11832  004BB4  ECAF  F029         	call	_Score_draw	;wreg free
 11833  004BB8  EF04  F026         	goto	l579
 11834  004BBC                     l10080:
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;stateMachine/display.c: 104:             Menu_endGame(g);
 11838  004BBC  C09E  F09C         	movff	displayController@g,Menu_endGame@g
 11839  004BC0  C09F  F09D         	movff	displayController@g+1,Menu_endGame@g+1
 11840  004BC4  EC77  F02D         	call	_Menu_endGame	;wreg free
 11841                           
 11842                           ;stateMachine/display.c: 105:             break;
 11843  004BC8  EF04  F026         	goto	l579
 11844  004BCC                     l10084:
 11845  004BCC  0100               	movlb	0	; () banked
 11846  004BCE  51DD               	movf	_displayState& (0+255),w,b
 11847  004BD0  6FA1               	movwf	??_displayController& (0+255),b
 11848  004BD2  6BA2               	clrf	(??_displayController+1)& (0+255),b
 11849                           
 11850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11851                           ; Switch size 1, requested type "simple"
 11852                           ; Number of cases is 1, Range of values is 0 to 0
 11853                           ; switch strategies available:
 11854                           ; Name         Instructions Cycles
 11855                           ; simple_byte            4     3 (average)
 11856                           ;	Chosen strategy is simple_byte
 11857  004BD4  51A2               	movf	(??_displayController+1)& (0+255),w,b
 11858  004BD6  0A00               	xorlw	0	; case 0
 11859  004BD8  B4D8               	btfsc	status,2,c
 11860  004BDA  EFF1  F025         	goto	l10908
 11861  004BDE  EF04  F026         	goto	l579
 11862  004BE2                     l10908:
 11863                           
 11864                           ; BSR set to: 0
 11865                           ; Switch size 1, requested type "simple"
 11866                           ; Number of cases is 4, Range of values is 0 to 3
 11867                           ; switch strategies available:
 11868                           ; Name         Instructions Cycles
 11869                           ; simple_byte           13     7 (average)
 11870                           ;	Chosen strategy is simple_byte
 11871  004BE2  51A1               	movf	??_displayController& (0+255),w,b
 11872  004BE4  0A00               	xorlw	0	; case 0
 11873  004BE6  B4D8               	btfsc	status,2,c
 11874  004BE8  EF85  F025         	goto	l10060
 11875  004BEC  0A01               	xorlw	1	; case 1
 11876  004BEE  B4D8               	btfsc	status,2,c
 11877  004BF0  EF8D  F025         	goto	l10062
 11878  004BF4  0A03               	xorlw	3	; case 2
 11879  004BF6  B4D8               	btfsc	status,2,c
 11880  004BF8  EF95  F025         	goto	l10064
 11881  004BFC  0A01               	xorlw	1	; case 3
 11882  004BFE  B4D8               	btfsc	status,2,c
 11883  004C00  EFDE  F025         	goto	l10080
 11884  004C04  EF04  F026         	goto	l579
 11885  004C08                     l579:
 11886  004C08  0012               	return		;funcret
 11887  004C0A                     __end_of_displayController:
 11888                           	callstack 0
 11889                           
 11890 ;; *************** function _Menu_welcomeDraw *****************
 11891 ;; Defined at:
 11892 ;;		line 7 in file "class/menu.c"
 11893 ;; Parameters:    Size  Location     Type
 11894 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11895 ;;		 -> g1(218), 
 11896 ;; Auto vars:     Size  Location     Type
 11897 ;;		None
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  1    wreg      void 
 11900 ;; Registers used:
 11901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11907 ;;      Params:         0       2       0       0       0       0       0
 11908 ;;      Locals:         0       0       0       0       0       0       0
 11909 ;;      Temps:          0       0       0       0       0       0       0
 11910 ;;      Totals:         0       2       0       0       0       0       0
 11911 ;;Total ram usage:        2 bytes
 11912 ;; Hardware stack levels used: 1
 11913 ;; Hardware stack levels required when called: 7
 11914 ;; This function calls:
 11915 ;;		_LCD_ButtonDraw
 11916 ;;		_LCD_DrawText
 11917 ;;		_LCD_Fill
 11918 ;; This function is called by:
 11919 ;;		_displayController
 11920 ;; This function uses a non-reentrant model
 11921 ;;
 11922                           
 11923                           	psect	text46
 11924  005EB2                     __ptext46:
 11925                           	callstack 0
 11926  005EB2                     _Menu_welcomeDraw:
 11927                           	callstack 19
 11928  005EB2                     
 11929                           ;class/menu.c: 7: void Menu_welcomeDraw(GameParameters* g);class/menu.c: 8: {;class/menu
      +                          .c: 9:     LCD_Fill(0b1111111111111111);
 11930  005EB2  0EFF               	movlw	255
 11931  005EB4  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11932  005EB6  6812               	setf	LCD_Fill@color^0,c
 11933  005EB8  ECA5  F02B         	call	_LCD_Fill	;wreg free
 11934  005EBC                     
 11935                           ;class/menu.c: 10:     LCD_DrawText("WELCOME",&arialNarrow_12ptFontInfo,A_CENTER,50,50,0
      +                          b0000000000000000,0b1111111111111111);
 11936  005EBC  0EE2               	movlw	low STR_9
 11937  005EBE  6E20               	movwf	LCD_DrawText@msg^0,c
 11938  005EC0  0E7F               	movlw	high STR_9
 11939  005EC2  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11940  005EC4  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 11941  005EC6  6E22               	movwf	LCD_DrawText@font^0,c
 11942  005EC8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11943  005ECA  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11944  005ECC  0E02               	movlw	2
 11945  005ECE  6E24               	movwf	LCD_DrawText@align^0,c
 11946  005ED0  0E00               	movlw	0
 11947  005ED2  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11948  005ED4  0E32               	movlw	50
 11949  005ED6  6E25               	movwf	LCD_DrawText@posX^0,c
 11950  005ED8  0E00               	movlw	0
 11951  005EDA  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11952  005EDC  0E32               	movlw	50
 11953  005EDE  6E27               	movwf	LCD_DrawText@posY^0,c
 11954  005EE0  0E00               	movlw	0
 11955  005EE2  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11956  005EE4  0E00               	movlw	0
 11957  005EE6  6E29               	movwf	LCD_DrawText@color^0,c
 11958  005EE8  0EFF               	movlw	255
 11959  005EEA  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11960  005EEC  682B               	setf	LCD_DrawText@bg_color^0,c
 11961  005EEE  EC14  F00F         	call	_LCD_DrawText	;wreg free
 11962  005EF2                     
 11963                           ;class/menu.c: 11:     LCD_ButtonDraw(&(g->btnParam));
 11964  005EF2  0E0A               	movlw	10
 11965  005EF4  0100               	movlb	0	; () banked
 11966  005EF6  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11967  005EF8  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11968  005EFA  0E00               	movlw	0
 11969  005EFC  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11970  005EFE  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11971  005F00  ECE3  F007         	call	_LCD_ButtonDraw	;wreg free
 11972  005F04                     
 11973                           ;class/menu.c: 12:     LCD_ButtonDraw(&(g->btnOnePlayer));
 11974  005F04  0E22               	movlw	34
 11975  005F06  0100               	movlb	0	; () banked
 11976  005F08  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11977  005F0A  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11978  005F0C  0E00               	movlw	0
 11979  005F0E  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11980  005F10  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11981  005F12  ECE3  F007         	call	_LCD_ButtonDraw	;wreg free
 11982  005F16                     
 11983                           ;class/menu.c: 13:     LCD_ButtonDraw(&(g->btnTwoPlayer));
 11984  005F16  0E3A               	movlw	58
 11985  005F18  0100               	movlb	0	; () banked
 11986  005F1A  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11987  005F1C  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11988  005F1E  0E00               	movlw	0
 11989  005F20  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11990  005F22  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11991  005F24  ECE3  F007         	call	_LCD_ButtonDraw	;wreg free
 11992  005F28  0012               	return		;funcret
 11993  005F2A                     __end_of_Menu_welcomeDraw:
 11994                           	callstack 0
 11995                           
 11996 ;; *************** function _Menu_parametersDraw *****************
 11997 ;; Defined at:
 11998 ;;		line 19 in file "class/menu.c"
 11999 ;; Parameters:    Size  Location     Type
 12000 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12001 ;;		 -> g1(218), 
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;		None
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  1    wreg      void 
 12006 ;; Registers used:
 12007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12008 ;; Tracked objects:
 12009 ;;		On entry : 0/0
 12010 ;;		On exit  : 0/0
 12011 ;;		Unchanged: 0/0
 12012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12013 ;;      Params:         0       2       0       0       0       0       0
 12014 ;;      Locals:         0       0       0       0       0       0       0
 12015 ;;      Temps:          0       0       0       0       0       0       0
 12016 ;;      Totals:         0       2       0       0       0       0       0
 12017 ;;Total ram usage:        2 bytes
 12018 ;; Hardware stack levels used: 1
 12019 ;; Hardware stack levels required when called: 7
 12020 ;; This function calls:
 12021 ;;		_LCD_ButtonDraw
 12022 ;;		_LCD_DrawText
 12023 ;;		_LCD_Fill
 12024 ;;		_LCD_SliderDraw
 12025 ;; This function is called by:
 12026 ;;		_displayController
 12027 ;; This function uses a non-reentrant model
 12028 ;;
 12029                           
 12030                           	psect	text47
 12031  0047D2                     __ptext47:
 12032                           	callstack 0
 12033  0047D2                     _Menu_parametersDraw:
 12034                           	callstack 19
 12035  0047D2                     
 12036                           ;class/menu.c: 19: void Menu_parametersDraw(GameParameters* g);class/menu.c: 20: {;class
      +                          /menu.c: 21:     LCD_Fill(0b1111111111111111);
 12037  0047D2  0EFF               	movlw	255
 12038  0047D4  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12039  0047D6  6812               	setf	LCD_Fill@color^0,c
 12040  0047D8  ECA5  F02B         	call	_LCD_Fill	;wreg free
 12041  0047DC                     
 12042                           ;class/menu.c: 22:     LCD_DrawText("PARAMETERS",&arialNarrow_12ptFontInfo,A_LEFT,10,50,
      +                          0b0000000000000000,0b1111111111111111);
 12043  0047DC  0E9C               	movlw	low STR_10
 12044  0047DE  6E20               	movwf	LCD_DrawText@msg^0,c
 12045  0047E0  0E7F               	movlw	high STR_10
 12046  0047E2  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12047  0047E4  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 12048  0047E6  6E22               	movwf	LCD_DrawText@font^0,c
 12049  0047E8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12050  0047EA  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12051  0047EC  0E00               	movlw	0
 12052  0047EE  6E24               	movwf	LCD_DrawText@align^0,c
 12053  0047F0  0E00               	movlw	0
 12054  0047F2  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12055  0047F4  0E0A               	movlw	10
 12056  0047F6  6E25               	movwf	LCD_DrawText@posX^0,c
 12057  0047F8  0E00               	movlw	0
 12058  0047FA  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12059  0047FC  0E32               	movlw	50
 12060  0047FE  6E27               	movwf	LCD_DrawText@posY^0,c
 12061  004800  0E00               	movlw	0
 12062  004802  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12063  004804  0E00               	movlw	0
 12064  004806  6E29               	movwf	LCD_DrawText@color^0,c
 12065  004808  0EFF               	movlw	255
 12066  00480A  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12067  00480C  682B               	setf	LCD_DrawText@bg_color^0,c
 12068  00480E  EC14  F00F         	call	_LCD_DrawText	;wreg free
 12069  004812                     
 12070                           ;class/menu.c: 23:     LCD_ButtonDraw(&(g->btnLeaveParam));
 12071  004812  0E52               	movlw	82
 12072  004814  0100               	movlb	0	; () banked
 12073  004816  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 12074  004818  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12075  00481A  0E00               	movlw	0
 12076  00481C  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 12077  00481E  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12078  004820  ECE3  F007         	call	_LCD_ButtonDraw	;wreg free
 12079  004824                     
 12080                           ;class/menu.c: 24:     g->sldBackLight.value=g->backlight;
 12081  004824  C09C  FFD9         	movff	Menu_parametersDraw@g,fsr2l
 12082  004828  C09D  FFDA         	movff	Menu_parametersDraw@g+1,fsr2h
 12083  00482C  0100               	movlb	0	; () banked
 12084  00482E  EE10 F093          	lfsr	1,147
 12085  004832  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 12086  004834  26E1               	addwf	fsr1l,f,c
 12087  004836  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 12088  004838  22E2               	addwfc	fsr1h,f,c
 12089  00483A  CFDE FFE6          	movff	postinc2,postinc1
 12090  00483E  CFDD FFE5          	movff	postdec2,postdec1
 12091  004842                     
 12092                           ; BSR set to: 0
 12093                           ;class/menu.c: 25:     LCD_SliderDraw(&(g->sldBackLight));
 12094  004842  0E82               	movlw	130
 12095  004844  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 12096  004846  6E37               	movwf	LCD_SliderDraw@slider^0,c
 12097  004848  0E00               	movlw	0
 12098  00484A  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 12099  00484C  6E38               	movwf	(LCD_SliderDraw@slider+1)^0,c
 12100  00484E  EC79  F024         	call	_LCD_SliderDraw	;wreg free
 12101  004852                     
 12102                           ;class/menu.c: 26:     LCD_DrawText("LUMINOSITY",&arialNarrow_12ptFontInfo,A_LEFT,50,95,
      +                          0b0000000000000000,0b1111111111111111);
 12103  004852  0EA7               	movlw	low STR_11
 12104  004854  6E20               	movwf	LCD_DrawText@msg^0,c
 12105  004856  0E7F               	movlw	high STR_11
 12106  004858  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12107  00485A  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 12108  00485C  6E22               	movwf	LCD_DrawText@font^0,c
 12109  00485E  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12110  004860  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12111  004862  0E00               	movlw	0
 12112  004864  6E24               	movwf	LCD_DrawText@align^0,c
 12113  004866  0E00               	movlw	0
 12114  004868  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12115  00486A  0E32               	movlw	50
 12116  00486C  6E25               	movwf	LCD_DrawText@posX^0,c
 12117  00486E  0E00               	movlw	0
 12118  004870  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12119  004872  0E5F               	movlw	95
 12120  004874  6E27               	movwf	LCD_DrawText@posY^0,c
 12121  004876  0E00               	movlw	0
 12122  004878  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12123  00487A  0E00               	movlw	0
 12124  00487C  6E29               	movwf	LCD_DrawText@color^0,c
 12125  00487E  0EFF               	movlw	255
 12126  004880  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12127  004882  682B               	setf	LCD_DrawText@bg_color^0,c
 12128  004884  EC14  F00F         	call	_LCD_DrawText	;wreg free
 12129  004888                     
 12130                           ;class/menu.c: 27:     g->sldLevel.value=g->level;
 12131  004888  0100               	movlb	0	; () banked
 12132  00488A  EE20 F008          	lfsr	2,8
 12133  00488E  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 12134  004890  26D9               	addwf	fsr2l,f,c
 12135  004892  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 12136  004894  22DA               	addwfc	fsr2h,f,c
 12137  004896  EE10 F0AC          	lfsr	1,172
 12138  00489A  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 12139  00489C  26E1               	addwf	fsr1l,f,c
 12140  00489E  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 12141  0048A0  22E2               	addwfc	fsr1h,f,c
 12142  0048A2  CFDE FFE6          	movff	postinc2,postinc1
 12143  0048A6  CFDD FFE5          	movff	postdec2,postdec1
 12144  0048AA                     
 12145                           ; BSR set to: 0
 12146                           ;class/menu.c: 28:     LCD_SliderDraw(&(g->sldLevel));
 12147  0048AA  0E9B               	movlw	155
 12148  0048AC  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 12149  0048AE  6E37               	movwf	LCD_SliderDraw@slider^0,c
 12150  0048B0  0E00               	movlw	0
 12151  0048B2  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 12152  0048B4  6E38               	movwf	(LCD_SliderDraw@slider+1)^0,c
 12153  0048B6  EC79  F024         	call	_LCD_SliderDraw	;wreg free
 12154  0048BA                     
 12155                           ;class/menu.c: 29:     LCD_DrawText("LEVEL",&arialNarrow_12ptFontInfo,A_LEFT,50,145,0b00
      +                          00000000000000,0b1111111111111111);
 12156  0048BA  0EF6               	movlw	low STR_12
 12157  0048BC  6E20               	movwf	LCD_DrawText@msg^0,c
 12158  0048BE  0E7F               	movlw	high STR_12
 12159  0048C0  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12160  0048C2  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 12161  0048C4  6E22               	movwf	LCD_DrawText@font^0,c
 12162  0048C6  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12163  0048C8  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12164  0048CA  0E00               	movlw	0
 12165  0048CC  6E24               	movwf	LCD_DrawText@align^0,c
 12166  0048CE  0E00               	movlw	0
 12167  0048D0  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12168  0048D2  0E32               	movlw	50
 12169  0048D4  6E25               	movwf	LCD_DrawText@posX^0,c
 12170  0048D6  0E00               	movlw	0
 12171  0048D8  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12172  0048DA  0E91               	movlw	145
 12173  0048DC  6E27               	movwf	LCD_DrawText@posY^0,c
 12174  0048DE  0E00               	movlw	0
 12175  0048E0  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12176  0048E2  0E00               	movlw	0
 12177  0048E4  6E29               	movwf	LCD_DrawText@color^0,c
 12178  0048E6  0EFF               	movlw	255
 12179  0048E8  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12180  0048EA  682B               	setf	LCD_DrawText@bg_color^0,c
 12181  0048EC  EC14  F00F         	call	_LCD_DrawText	;wreg free
 12182  0048F0  0012               	return		;funcret
 12183  0048F2                     __end_of_Menu_parametersDraw:
 12184                           	callstack 0
 12185                           
 12186 ;; *************** function _LCD_SliderDraw *****************
 12187 ;; Defined at:
 12188 ;;		line 371 in file "libraries/lcd_highlevel.c"
 12189 ;; Parameters:    Size  Location     Type
 12190 ;;  slider          2   54[COMRAM] PTR struct .
 12191 ;;		 -> g1(218), 
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;  y2              2   66[COMRAM] unsigned short 
 12194 ;;  y1              2   64[COMRAM] unsigned short 
 12195 ;;  x2              2   62[COMRAM] unsigned short 
 12196 ;;  x1              2   60[COMRAM] unsigned short 
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12201 ;; Tracked objects:
 12202 ;;		On entry : 0/0
 12203 ;;		On exit  : 0/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12206 ;;      Params:         2       0       0       0       0       0       0
 12207 ;;      Locals:         8       0       0       0       0       0       0
 12208 ;;      Temps:          4       0       0       0       0       0       0
 12209 ;;      Totals:        14       0       0       0       0       0       0
 12210 ;;Total ram usage:       14 bytes
 12211 ;; Hardware stack levels used: 1
 12212 ;; Hardware stack levels required when called: 6
 12213 ;; This function calls:
 12214 ;;		_LCD_DrawRect
 12215 ;;		_LCD_SliderUpdate
 12216 ;; This function is called by:
 12217 ;;		_Menu_parametersDraw
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           	psect	text48
 12222  0048F2                     __ptext48:
 12223                           	callstack 0
 12224  0048F2                     _LCD_SliderDraw:
 12225                           	callstack 19
 12226  0048F2                     
 12227                           ;libraries/lcd_highlevel.c: 371: void LCD_SliderDraw(sld_t * slider);libraries/lcd_highl
      +                          evel.c: 372: {;libraries/lcd_highlevel.c: 373:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 375:   x1 = slider->posX;
 12228  0048F2  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 12229  0048F6  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 12230  0048FA  CFDE F03D          	movff	postinc2,LCD_SliderDraw@x1
 12231  0048FE  CFDD F03E          	movff	postdec2,LCD_SliderDraw@x1+1
 12232  004902                     
 12233                           ;libraries/lcd_highlevel.c: 376:   x2 = slider->posX + slider->width;
 12234  004902  EE20 F004          	lfsr	2,4
 12235  004906  5037               	movf	LCD_SliderDraw@slider^0,w,c
 12236  004908  26D9               	addwf	fsr2l,f,c
 12237  00490A  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 12238  00490C  22DA               	addwfc	fsr2h,f,c
 12239  00490E  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 12240  004912  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 12241  004916  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 12242  00491A  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 12243  00491E  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 12244  004922  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 12245  004926  5039               	movf	??_LCD_SliderDraw^0,w,c
 12246  004928  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 12247  00492A  6E3F               	movwf	LCD_SliderDraw@x2^0,c
 12248  00492C  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 12249  00492E  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 12250  004930  6E40               	movwf	(LCD_SliderDraw@x2+1)^0,c
 12251  004932                     
 12252                           ;libraries/lcd_highlevel.c: 377:   y1 = slider->posY;
 12253  004932  EE20 F002          	lfsr	2,2
 12254  004936  5037               	movf	LCD_SliderDraw@slider^0,w,c
 12255  004938  26D9               	addwf	fsr2l,f,c
 12256  00493A  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 12257  00493C  22DA               	addwfc	fsr2h,f,c
 12258  00493E  CFDE F041          	movff	postinc2,LCD_SliderDraw@y1
 12259  004942  CFDD F042          	movff	postdec2,LCD_SliderDraw@y1+1
 12260  004946                     
 12261                           ;libraries/lcd_highlevel.c: 378:   y2 = slider->posY + slider->height;
 12262  004946  EE20 F006          	lfsr	2,6
 12263  00494A  5037               	movf	LCD_SliderDraw@slider^0,w,c
 12264  00494C  26D9               	addwf	fsr2l,f,c
 12265  00494E  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 12266  004950  22DA               	addwfc	fsr2h,f,c
 12267  004952  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 12268  004956  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 12269  00495A  EE20 F002          	lfsr	2,2
 12270  00495E  5037               	movf	LCD_SliderDraw@slider^0,w,c
 12271  004960  26D9               	addwf	fsr2l,f,c
 12272  004962  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 12273  004964  22DA               	addwfc	fsr2h,f,c
 12274  004966  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 12275  00496A  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 12276  00496E  5039               	movf	??_LCD_SliderDraw^0,w,c
 12277  004970  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 12278  004972  6E43               	movwf	LCD_SliderDraw@y2^0,c
 12279  004974  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 12280  004976  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 12281  004978  6E44               	movwf	(LCD_SliderDraw@y2+1)^0,c
 12282  00497A                     
 12283                           ;libraries/lcd_highlevel.c: 379:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->bgColor);
 12284  00497A  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 12285  00497E  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 12286  004982  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 12287  004986  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 12288  00498A  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 12289  00498E  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 12290  004992  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 12291  004996  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 12292  00499A  0E01               	movlw	1
 12293  00499C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12294  00499E  EE20 F00A          	lfsr	2,10
 12295  0049A2  5037               	movf	LCD_SliderDraw@slider^0,w,c
 12296  0049A4  26D9               	addwf	fsr2l,f,c
 12297  0049A6  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 12298  0049A8  22DA               	addwfc	fsr2h,f,c
 12299  0049AA  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12300  0049AE  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12301  0049B2  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 12302  0049B6                     
 12303                           ;libraries/lcd_highlevel.c: 380:   LCD_DrawRect(x1, y1, x2, y2, 0, slider->borderColor);
 12304  0049B6  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 12305  0049BA  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 12306  0049BE  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 12307  0049C2  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 12308  0049C6  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 12309  0049CA  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 12310  0049CE  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 12311  0049D2  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 12312  0049D6  0E00               	movlw	0
 12313  0049D8  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12314  0049DA  EE20 F00C          	lfsr	2,12
 12315  0049DE  5037               	movf	LCD_SliderDraw@slider^0,w,c
 12316  0049E0  26D9               	addwf	fsr2l,f,c
 12317  0049E2  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 12318  0049E4  22DA               	addwfc	fsr2h,f,c
 12319  0049E6  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12320  0049EA  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12321  0049EE  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 12322  0049F2                     
 12323                           ;libraries/lcd_highlevel.c: 381:   LCD_SliderUpdate(slider);
 12324  0049F2  C037  F027         	movff	LCD_SliderDraw@slider,LCD_SliderUpdate@slider
 12325  0049F6  C038  F028         	movff	LCD_SliderDraw@slider+1,LCD_SliderUpdate@slider+1
 12326  0049FA  EC5A  F00A         	call	_LCD_SliderUpdate	;wreg free
 12327  0049FE  0012               	return		;funcret
 12328  004A00                     __end_of_LCD_SliderDraw:
 12329                           	callstack 0
 12330                           
 12331 ;; *************** function _LCD_SliderUpdate *****************
 12332 ;; Defined at:
 12333 ;;		line 319 in file "libraries/lcd_highlevel.c"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;  slider          2   38[COMRAM] PTR struct .
 12336 ;;		 -> g1(218), 
 12337 ;; Auto vars:     Size  Location     Type
 12338 ;;  x1              2   52[COMRAM] unsigned short 
 12339 ;;  y2              2   50[COMRAM] unsigned short 
 12340 ;;  y1              2   48[COMRAM] unsigned short 
 12341 ;;  x2              2   46[COMRAM] unsigned short 
 12342 ;; Return value:  Size  Location     Type
 12343 ;;                  1    wreg      void 
 12344 ;; Registers used:
 12345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12346 ;; Tracked objects:
 12347 ;;		On entry : 0/0
 12348 ;;		On exit  : 0/0
 12349 ;;		Unchanged: 0/0
 12350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12351 ;;      Params:         2       0       0       0       0       0       0
 12352 ;;      Locals:         8       0       0       0       0       0       0
 12353 ;;      Temps:          6       0       0       0       0       0       0
 12354 ;;      Totals:        16       0       0       0       0       0       0
 12355 ;;Total ram usage:       16 bytes
 12356 ;; Hardware stack levels used: 1
 12357 ;; Hardware stack levels required when called: 5
 12358 ;; This function calls:
 12359 ;;		_LCD_DrawRect
 12360 ;;		___lwdiv
 12361 ;;		___wmul
 12362 ;; This function is called by:
 12363 ;;		_LCD_SliderDraw
 12364 ;;		_gameControllerController
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           	psect	text49
 12369  0014B4                     __ptext49:
 12370                           	callstack 0
 12371  0014B4                     _LCD_SliderUpdate:
 12372                           	callstack 21
 12373  0014B4                     
 12374                           ;libraries/lcd_highlevel.c: 319: void LCD_SliderUpdate(sld_t * slider);libraries/lcd_hig
      +                          hlevel.c: 320: {;libraries/lcd_highlevel.c: 321:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 325:   if(slider->cursorWidth != 0)
 12375  0014B4  EE20 F00E          	lfsr	2,14
 12376  0014B8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12377  0014BA  26D9               	addwf	fsr2l,f,c
 12378  0014BC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12379  0014BE  22DA               	addwfc	fsr2h,f,c
 12380  0014C0  50DE               	movf	postinc2,w,c
 12381  0014C2  10DE               	iorwf	postinc2,w,c
 12382  0014C4  B4D8               	btfsc	status,2,c
 12383  0014C6  EF67  F00A         	goto	u6591
 12384  0014CA  EF69  F00A         	goto	u6590
 12385  0014CE                     u6591:
 12386  0014CE  EFF5  F00A         	goto	l9040
 12387  0014D2                     u6590:
 12388  0014D2                     
 12389                           ;libraries/lcd_highlevel.c: 326:   {;libraries/lcd_highlevel.c: 327:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->oldValue)/ slider->steps);
 12390  0014D2  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12391  0014D6  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12392  0014DA  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12393  0014DE  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12394  0014E2  EE20 F00E          	lfsr	2,14
 12395  0014E6  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12396  0014E8  26D9               	addwf	fsr2l,f,c
 12397  0014EA  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12398  0014EC  22DA               	addwfc	fsr2h,f,c
 12399  0014EE  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12400  0014F2  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12401  0014F6  EE20 F004          	lfsr	2,4
 12402  0014FA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12403  0014FC  26D9               	addwf	fsr2l,f,c
 12404  0014FE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12405  001500  22DA               	addwfc	fsr2h,f,c
 12406  001502  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 12407  001506  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 12408  00150A  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 12409  00150C  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 12410  00150E  6E1A               	movwf	___wmul@multiplier^0,c
 12411  001510  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 12412  001512  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 12413  001514  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 12414  001516  EE20 F013          	lfsr	2,19
 12415  00151A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12416  00151C  26D9               	addwf	fsr2l,f,c
 12417  00151E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12418  001520  22DA               	addwfc	fsr2h,f,c
 12419  001522  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12420  001526  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12421  00152A  EC05  F033         	call	___wmul	;wreg free
 12422  00152E  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12423  001532  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12424  001536  EE20 F015          	lfsr	2,21
 12425  00153A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12426  00153C  26D9               	addwf	fsr2l,f,c
 12427  00153E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12428  001540  22DA               	addwfc	fsr2h,f,c
 12429  001542  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12430  001546  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12431  00154A  ECCF  F02F         	call	___lwdiv	;wreg free
 12432  00154E  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12433  001550  2620               	addwf	?___lwdiv^0,f,c
 12434  001552  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12435  001554  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12436  001556  0E01               	movlw	1
 12437  001558  2420               	addwf	?___lwdiv^0,w,c
 12438  00155A  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12439  00155C  0E00               	movlw	0
 12440  00155E  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12441  001560  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12442  001562                     
 12443                           ;libraries/lcd_highlevel.c: 328:     x2 = x1 + slider->cursorWidth-2;
 12444  001562  EE20 F00E          	lfsr	2,14
 12445  001566  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12446  001568  26D9               	addwf	fsr2l,f,c
 12447  00156A  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12448  00156C  22DA               	addwfc	fsr2h,f,c
 12449  00156E  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12450  001572  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12451  001576  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 12452  001578  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 12453  00157A  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 12454  00157C  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 12455  00157E  0EFE               	movlw	254
 12456  001580  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12457  001582  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12458  001584  0EFF               	movlw	255
 12459  001586  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12460  001588  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12461  00158A                     
 12462                           ;libraries/lcd_highlevel.c: 329:     y1 = slider->posY + 2;
 12463  00158A  EE20 F002          	lfsr	2,2
 12464  00158E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12465  001590  26D9               	addwf	fsr2l,f,c
 12466  001592  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12467  001594  22DA               	addwfc	fsr2h,f,c
 12468  001596  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12469  00159A  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12470  00159E  0E02               	movlw	2
 12471  0015A0  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12472  0015A2  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12473  0015A4  0E00               	movlw	0
 12474  0015A6  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12475  0015A8  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12476  0015AA                     
 12477                           ;libraries/lcd_highlevel.c: 330:     y2 = slider->posY + slider->height - 2;
 12478  0015AA  EE20 F006          	lfsr	2,6
 12479  0015AE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12480  0015B0  26D9               	addwf	fsr2l,f,c
 12481  0015B2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12482  0015B4  22DA               	addwfc	fsr2h,f,c
 12483  0015B6  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12484  0015BA  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12485  0015BE  EE20 F002          	lfsr	2,2
 12486  0015C2  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12487  0015C4  26D9               	addwf	fsr2l,f,c
 12488  0015C6  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12489  0015C8  22DA               	addwfc	fsr2h,f,c
 12490  0015CA  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12491  0015CE  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12492  0015D2  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12493  0015D4  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12494  0015D6  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12495  0015D8  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12496  0015DA  0EFE               	movlw	254
 12497  0015DC  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12498  0015DE  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12499  0015E0  0EFF               	movlw	255
 12500  0015E2  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12501  0015E4  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12502                           
 12503                           ;libraries/lcd_highlevel.c: 331:   }
 12504  0015E6  EF69  F00B         	goto	l9048
 12505  0015EA                     l9040:
 12506                           
 12507                           ;libraries/lcd_highlevel.c: 333:   {;libraries/lcd_highlevel.c: 334:     x1 = slider->po
      +                          sX + 1;
 12508  0015EA  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12509  0015EE  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12510  0015F2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12511  0015F6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12512  0015FA  0E01               	movlw	1
 12513  0015FC  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12514  0015FE  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12515  001600  0E00               	movlw	0
 12516  001602  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12517  001604  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12518  001606                     
 12519                           ;libraries/lcd_highlevel.c: 335:     x2 = slider->posX - 1 + ((slider->width * slider->o
      +                          ldValue)/ slider->steps);
 12520  001606  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12521  00160A  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12522  00160E  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12523  001612  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12524  001616  EE20 F004          	lfsr	2,4
 12525  00161A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12526  00161C  26D9               	addwf	fsr2l,f,c
 12527  00161E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12528  001620  22DA               	addwfc	fsr2h,f,c
 12529  001622  CFDE F01A          	movff	postinc2,___wmul@multiplier
 12530  001626  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 12531  00162A  EE20 F013          	lfsr	2,19
 12532  00162E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12533  001630  26D9               	addwf	fsr2l,f,c
 12534  001632  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12535  001634  22DA               	addwfc	fsr2h,f,c
 12536  001636  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12537  00163A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12538  00163E  EC05  F033         	call	___wmul	;wreg free
 12539  001642  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12540  001646  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12541  00164A  EE20 F015          	lfsr	2,21
 12542  00164E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12543  001650  26D9               	addwf	fsr2l,f,c
 12544  001652  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12545  001654  22DA               	addwfc	fsr2h,f,c
 12546  001656  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12547  00165A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12548  00165E  ECCF  F02F         	call	___lwdiv	;wreg free
 12549  001662  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12550  001664  2620               	addwf	?___lwdiv^0,f,c
 12551  001666  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12552  001668  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12553  00166A  0EFF               	movlw	255
 12554  00166C  2420               	addwf	?___lwdiv^0,w,c
 12555  00166E  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12556  001670  0EFF               	movlw	255
 12557  001672  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12558  001674  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12559  001676                     
 12560                           ;libraries/lcd_highlevel.c: 336:     y1 = slider->posY + 2;
 12561  001676  EE20 F002          	lfsr	2,2
 12562  00167A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12563  00167C  26D9               	addwf	fsr2l,f,c
 12564  00167E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12565  001680  22DA               	addwfc	fsr2h,f,c
 12566  001682  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12567  001686  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12568  00168A  0E02               	movlw	2
 12569  00168C  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12570  00168E  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12571  001690  0E00               	movlw	0
 12572  001692  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12573  001694  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12574  001696                     
 12575                           ;libraries/lcd_highlevel.c: 337:     y2 = slider->posY + slider->height - 2;
 12576  001696  EE20 F006          	lfsr	2,6
 12577  00169A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12578  00169C  26D9               	addwf	fsr2l,f,c
 12579  00169E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12580  0016A0  22DA               	addwfc	fsr2h,f,c
 12581  0016A2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12582  0016A6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12583  0016AA  EE20 F002          	lfsr	2,2
 12584  0016AE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12585  0016B0  26D9               	addwf	fsr2l,f,c
 12586  0016B2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12587  0016B4  22DA               	addwfc	fsr2h,f,c
 12588  0016B6  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12589  0016BA  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12590  0016BE  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12591  0016C0  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12592  0016C2  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12593  0016C4  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12594  0016C6  0EFE               	movlw	254
 12595  0016C8  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12596  0016CA  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12597  0016CC  0EFF               	movlw	255
 12598  0016CE  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12599  0016D0  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12600  0016D2                     l9048:
 12601                           
 12602                           ;libraries/lcd_highlevel.c: 339:   LCD_DrawRect(x1,
 12603  0016D2  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12604  0016D6  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12605  0016DA  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12606  0016DE  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12607  0016E2  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12608  0016E6  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12609  0016EA  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12610  0016EE  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12611  0016F2  0E01               	movlw	1
 12612  0016F4  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12613  0016F6  EE20 F00A          	lfsr	2,10
 12614  0016FA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12615  0016FC  26D9               	addwf	fsr2l,f,c
 12616  0016FE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12617  001700  22DA               	addwfc	fsr2h,f,c
 12618  001702  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12619  001706  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12620  00170A  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 12621  00170E                     
 12622                           ;libraries/lcd_highlevel.c: 344:   slider->oldValue = slider->value;
 12623  00170E  EE20 F011          	lfsr	2,17
 12624  001712  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12625  001714  26D9               	addwf	fsr2l,f,c
 12626  001716  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12627  001718  22DA               	addwfc	fsr2h,f,c
 12628  00171A  EE10 F013          	lfsr	1,19
 12629  00171E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12630  001720  26E1               	addwf	fsr1l,f,c
 12631  001722  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12632  001724  22E2               	addwfc	fsr1h,f,c
 12633  001726  CFDE FFE6          	movff	postinc2,postinc1
 12634  00172A  CFDD FFE5          	movff	postdec2,postdec1
 12635  00172E                     
 12636                           ;libraries/lcd_highlevel.c: 347:   if(slider->cursorWidth == 0)
 12637  00172E  EE20 F00E          	lfsr	2,14
 12638  001732  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12639  001734  26D9               	addwf	fsr2l,f,c
 12640  001736  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12641  001738  22DA               	addwfc	fsr2h,f,c
 12642  00173A  50DE               	movf	postinc2,w,c
 12643  00173C  10DE               	iorwf	postinc2,w,c
 12644  00173E  A4D8               	btfss	status,2,c
 12645  001740  EFA4  F00B         	goto	u6601
 12646  001744  EFA6  F00B         	goto	u6600
 12647  001748                     u6601:
 12648  001748  EF1C  F00C         	goto	l9062
 12649  00174C                     u6600:
 12650  00174C                     
 12651                           ;libraries/lcd_highlevel.c: 348:   {;libraries/lcd_highlevel.c: 349:     x1 = slider->po
      +                          sX + 1;
 12652  00174C  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12653  001750  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12654  001754  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12655  001758  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12656  00175C  0E01               	movlw	1
 12657  00175E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12658  001760  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12659  001762  0E00               	movlw	0
 12660  001764  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12661  001766  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12662  001768                     
 12663                           ;libraries/lcd_highlevel.c: 350:     x2 = slider->posX - 1 + ((slider->width * slider->v
      +                          alue)/ slider->steps);
 12664  001768  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12665  00176C  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12666  001770  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12667  001774  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12668  001778  EE20 F004          	lfsr	2,4
 12669  00177C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12670  00177E  26D9               	addwf	fsr2l,f,c
 12671  001780  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12672  001782  22DA               	addwfc	fsr2h,f,c
 12673  001784  CFDE F01A          	movff	postinc2,___wmul@multiplier
 12674  001788  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 12675  00178C  EE20 F011          	lfsr	2,17
 12676  001790  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12677  001792  26D9               	addwf	fsr2l,f,c
 12678  001794  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12679  001796  22DA               	addwfc	fsr2h,f,c
 12680  001798  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12681  00179C  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12682  0017A0  EC05  F033         	call	___wmul	;wreg free
 12683  0017A4  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12684  0017A8  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12685  0017AC  EE20 F015          	lfsr	2,21
 12686  0017B0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12687  0017B2  26D9               	addwf	fsr2l,f,c
 12688  0017B4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12689  0017B6  22DA               	addwfc	fsr2h,f,c
 12690  0017B8  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12691  0017BC  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12692  0017C0  ECCF  F02F         	call	___lwdiv	;wreg free
 12693  0017C4  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12694  0017C6  2620               	addwf	?___lwdiv^0,f,c
 12695  0017C8  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12696  0017CA  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12697  0017CC  0EFF               	movlw	255
 12698  0017CE  2420               	addwf	?___lwdiv^0,w,c
 12699  0017D0  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12700  0017D2  0EFF               	movlw	255
 12701  0017D4  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12702  0017D6  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12703  0017D8                     
 12704                           ;libraries/lcd_highlevel.c: 351:     y1 = slider->posY + 2;
 12705  0017D8  EE20 F002          	lfsr	2,2
 12706  0017DC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12707  0017DE  26D9               	addwf	fsr2l,f,c
 12708  0017E0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12709  0017E2  22DA               	addwfc	fsr2h,f,c
 12710  0017E4  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12711  0017E8  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12712  0017EC  0E02               	movlw	2
 12713  0017EE  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12714  0017F0  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12715  0017F2  0E00               	movlw	0
 12716  0017F4  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12717  0017F6  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12718  0017F8                     
 12719                           ;libraries/lcd_highlevel.c: 352:     y2 = slider->posY + slider->height - 2;
 12720  0017F8  EE20 F006          	lfsr	2,6
 12721  0017FC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12722  0017FE  26D9               	addwf	fsr2l,f,c
 12723  001800  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12724  001802  22DA               	addwfc	fsr2h,f,c
 12725  001804  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12726  001808  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12727  00180C  EE20 F002          	lfsr	2,2
 12728  001810  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12729  001812  26D9               	addwf	fsr2l,f,c
 12730  001814  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12731  001816  22DA               	addwfc	fsr2h,f,c
 12732  001818  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12733  00181C  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12734  001820  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12735  001822  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12736  001824  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12737  001826  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12738  001828  0EFE               	movlw	254
 12739  00182A  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12740  00182C  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12741  00182E  0EFF               	movlw	255
 12742  001830  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12743  001832  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12744                           
 12745                           ;libraries/lcd_highlevel.c: 353:   }
 12746  001834  EFA6  F00C         	goto	l9070
 12747  001838                     l9062:
 12748                           
 12749                           ;libraries/lcd_highlevel.c: 357:   {;libraries/lcd_highlevel.c: 358:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->value)/ slider->steps);
 12750  001838  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12751  00183C  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12752  001840  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12753  001844  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12754  001848  EE20 F00E          	lfsr	2,14
 12755  00184C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12756  00184E  26D9               	addwf	fsr2l,f,c
 12757  001850  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12758  001852  22DA               	addwfc	fsr2h,f,c
 12759  001854  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12760  001858  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12761  00185C  EE20 F004          	lfsr	2,4
 12762  001860  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12763  001862  26D9               	addwf	fsr2l,f,c
 12764  001864  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12765  001866  22DA               	addwfc	fsr2h,f,c
 12766  001868  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 12767  00186C  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 12768  001870  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 12769  001872  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 12770  001874  6E1A               	movwf	___wmul@multiplier^0,c
 12771  001876  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 12772  001878  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 12773  00187A  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 12774  00187C  EE20 F011          	lfsr	2,17
 12775  001880  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12776  001882  26D9               	addwf	fsr2l,f,c
 12777  001884  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12778  001886  22DA               	addwfc	fsr2h,f,c
 12779  001888  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12780  00188C  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12781  001890  EC05  F033         	call	___wmul	;wreg free
 12782  001894  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12783  001898  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12784  00189C  EE20 F015          	lfsr	2,21
 12785  0018A0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12786  0018A2  26D9               	addwf	fsr2l,f,c
 12787  0018A4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12788  0018A6  22DA               	addwfc	fsr2h,f,c
 12789  0018A8  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12790  0018AC  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12791  0018B0  ECCF  F02F         	call	___lwdiv	;wreg free
 12792  0018B4  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12793  0018B6  2620               	addwf	?___lwdiv^0,f,c
 12794  0018B8  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12795  0018BA  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12796  0018BC  0E01               	movlw	1
 12797  0018BE  2420               	addwf	?___lwdiv^0,w,c
 12798  0018C0  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12799  0018C2  0E00               	movlw	0
 12800  0018C4  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12801  0018C6  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12802  0018C8                     
 12803                           ;libraries/lcd_highlevel.c: 359:     x2 = x1 + slider->cursorWidth-2;
 12804  0018C8  EE20 F00E          	lfsr	2,14
 12805  0018CC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12806  0018CE  26D9               	addwf	fsr2l,f,c
 12807  0018D0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12808  0018D2  22DA               	addwfc	fsr2h,f,c
 12809  0018D4  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12810  0018D8  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12811  0018DC  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 12812  0018DE  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 12813  0018E0  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 12814  0018E2  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 12815  0018E4  0EFE               	movlw	254
 12816  0018E6  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12817  0018E8  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12818  0018EA  0EFF               	movlw	255
 12819  0018EC  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12820  0018EE  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12821  0018F0                     
 12822                           ;libraries/lcd_highlevel.c: 360:     y1 = slider->posY + 2;
 12823  0018F0  EE20 F002          	lfsr	2,2
 12824  0018F4  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12825  0018F6  26D9               	addwf	fsr2l,f,c
 12826  0018F8  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12827  0018FA  22DA               	addwfc	fsr2h,f,c
 12828  0018FC  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12829  001900  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12830  001904  0E02               	movlw	2
 12831  001906  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12832  001908  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12833  00190A  0E00               	movlw	0
 12834  00190C  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12835  00190E  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12836  001910                     
 12837                           ;libraries/lcd_highlevel.c: 361:     y2 = slider->posY + slider->height - 2;
 12838  001910  EE20 F006          	lfsr	2,6
 12839  001914  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12840  001916  26D9               	addwf	fsr2l,f,c
 12841  001918  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12842  00191A  22DA               	addwfc	fsr2h,f,c
 12843  00191C  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12844  001920  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12845  001924  EE20 F002          	lfsr	2,2
 12846  001928  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12847  00192A  26D9               	addwf	fsr2l,f,c
 12848  00192C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12849  00192E  22DA               	addwfc	fsr2h,f,c
 12850  001930  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12851  001934  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12852  001938  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12853  00193A  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12854  00193C  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12855  00193E  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12856  001940  0EFE               	movlw	254
 12857  001942  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12858  001944  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12859  001946  0EFF               	movlw	255
 12860  001948  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12861  00194A  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12862  00194C                     l9070:
 12863                           
 12864                           ;libraries/lcd_highlevel.c: 363:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->sldColor);
 12865  00194C  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12866  001950  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12867  001954  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12868  001958  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12869  00195C  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12870  001960  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12871  001964  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12872  001968  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12873  00196C  0E01               	movlw	1
 12874  00196E  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12875  001970  EE20 F008          	lfsr	2,8
 12876  001974  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12877  001976  26D9               	addwf	fsr2l,f,c
 12878  001978  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12879  00197A  22DA               	addwfc	fsr2h,f,c
 12880  00197C  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12881  001980  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12882  001984  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 12883  001988  0012               	return		;funcret
 12884  00198A                     __end_of_LCD_SliderUpdate:
 12885                           	callstack 0
 12886                           
 12887 ;; *************** function _Menu_endGame *****************
 12888 ;; Defined at:
 12889 ;;		line 47 in file "class/menu.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12892 ;;		 -> g1(218), 
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;		None
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  1    wreg      void 
 12897 ;; Registers used:
 12898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12904 ;;      Params:         0       2       0       0       0       0       0
 12905 ;;      Locals:         0       0       0       0       0       0       0
 12906 ;;      Temps:          2       0       0       0       0       0       0
 12907 ;;      Totals:         2       2       0       0       0       0       0
 12908 ;;Total ram usage:        4 bytes
 12909 ;; Hardware stack levels used: 1
 12910 ;; Hardware stack levels required when called: 7
 12911 ;; This function calls:
 12912 ;;		_LCD_ButtonDraw
 12913 ;;		_LCD_DrawText
 12914 ;;		_LCD_Fill
 12915 ;; This function is called by:
 12916 ;;		_displayController
 12917 ;; This function uses a non-reentrant model
 12918 ;;
 12919                           
 12920                           	psect	text50
 12921  005AEE                     __ptext50:
 12922                           	callstack 0
 12923  005AEE                     _Menu_endGame:
 12924                           	callstack 19
 12925  005AEE                     
 12926                           ;class/menu.c: 47: void Menu_endGame(GameParameters* g);class/menu.c: 48: {;class/menu.c
      +                          : 49:     LCD_Fill(0b0000000000000000);
 12927  005AEE  0E00               	movlw	0
 12928  005AF0  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12929  005AF2  0E00               	movlw	0
 12930  005AF4  6E12               	movwf	LCD_Fill@color^0,c
 12931  005AF6  ECA5  F02B         	call	_LCD_Fill	;wreg free
 12932  005AFA                     
 12933                           ;class/menu.c: 50:     LCD_ButtonDraw(&(g->btnNewGame));
 12934  005AFA  0E6A               	movlw	106
 12935  005AFC  0100               	movlb	0	; () banked
 12936  005AFE  259C               	addwf	Menu_endGame@g& (0+255),w,b
 12937  005B00  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12938  005B02  0E00               	movlw	0
 12939  005B04  219D               	addwfc	(Menu_endGame@g+1)& (0+255),w,b
 12940  005B06  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12941  005B08  ECE3  F007         	call	_LCD_ButtonDraw	;wreg free
 12942  005B0C                     
 12943                           ;class/menu.c: 52:     if(g->s1.homeScore==0)
 12944  005B0C  0100               	movlb	0	; () banked
 12945  005B0E  EE20 F0D4          	lfsr	2,212
 12946  005B12  519C               	movf	Menu_endGame@g& (0+255),w,b
 12947  005B14  26D9               	addwf	fsr2l,f,c
 12948  005B16  519D               	movf	(Menu_endGame@g+1)& (0+255),w,b
 12949  005B18  22DA               	addwfc	fsr2h,f,c
 12950  005B1A  50DE               	movf	postinc2,w,c
 12951  005B1C  10DE               	iorwf	postinc2,w,c
 12952  005B1E  A4D8               	btfss	status,2,c
 12953  005B20  EF94  F02D         	goto	u7071
 12954  005B24  EF96  F02D         	goto	u7070
 12955  005B28                     u7071:
 12956  005B28  EFB3  F02D         	goto	l9836
 12957  005B2C                     u7070:
 12958  005B2C                     
 12959                           ; BSR set to: 0
 12960                           ;class/menu.c: 53:     {;class/menu.c: 54:         LCD_DrawText("PLAYER 2 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,100,50,0b1111111111111111,0b0000000000000000);
 12961  005B2C  0E8F               	movlw	low STR_13
 12962  005B2E  6E20               	movwf	LCD_DrawText@msg^0,c
 12963  005B30  0E7F               	movlw	high STR_13
 12964  005B32  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12965  005B34  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 12966  005B36  6E22               	movwf	LCD_DrawText@font^0,c
 12967  005B38  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12968  005B3A  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12969  005B3C  0E02               	movlw	2
 12970  005B3E  6E24               	movwf	LCD_DrawText@align^0,c
 12971  005B40  0E00               	movlw	0
 12972  005B42  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12973  005B44  0E64               	movlw	100
 12974  005B46  6E25               	movwf	LCD_DrawText@posX^0,c
 12975  005B48  0E00               	movlw	0
 12976  005B4A  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12977  005B4C  0E32               	movlw	50
 12978  005B4E  6E27               	movwf	LCD_DrawText@posY^0,c
 12979  005B50  0EFF               	movlw	255
 12980  005B52  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12981  005B54  6829               	setf	LCD_DrawText@color^0,c
 12982  005B56  0E00               	movlw	0
 12983  005B58  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12984  005B5A  0E00               	movlw	0
 12985  005B5C  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12986  005B5E  EC14  F00F         	call	_LCD_DrawText	;wreg free
 12987                           
 12988                           ;class/menu.c: 55:     }
 12989  005B62  EFCE  F02D         	goto	l191
 12990  005B66                     l9836:
 12991                           
 12992                           ; BSR set to: 0
 12993                           ;class/menu.c: 57:     {;class/menu.c: 58:         LCD_DrawText("PLAYER 1 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,100,50,0b1111111111111111,0b0000000000000000);
 12994  005B66  0E82               	movlw	low STR_14
 12995  005B68  6E20               	movwf	LCD_DrawText@msg^0,c
 12996  005B6A  0E7F               	movlw	high STR_14
 12997  005B6C  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12998  005B6E  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 12999  005B70  6E22               	movwf	LCD_DrawText@font^0,c
 13000  005B72  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 13001  005B74  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 13002  005B76  0E02               	movlw	2
 13003  005B78  6E24               	movwf	LCD_DrawText@align^0,c
 13004  005B7A  0E00               	movlw	0
 13005  005B7C  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 13006  005B7E  0E64               	movlw	100
 13007  005B80  6E25               	movwf	LCD_DrawText@posX^0,c
 13008  005B82  0E00               	movlw	0
 13009  005B84  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 13010  005B86  0E32               	movlw	50
 13011  005B88  6E27               	movwf	LCD_DrawText@posY^0,c
 13012  005B8A  0EFF               	movlw	255
 13013  005B8C  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 13014  005B8E  6829               	setf	LCD_DrawText@color^0,c
 13015  005B90  0E00               	movlw	0
 13016  005B92  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 13017  005B94  0E00               	movlw	0
 13018  005B96  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 13019  005B98  EC14  F00F         	call	_LCD_DrawText	;wreg free
 13020  005B9C                     l191:
 13021  005B9C  0012               	return		;funcret
 13022  005B9E                     __end_of_Menu_endGame:
 13023                           	callstack 0
 13024                           
 13025 ;; *************** function _LCD_ButtonDraw *****************
 13026 ;; Defined at:
 13027 ;;		line 462 in file "libraries/lcd_highlevel.c"
 13028 ;; Parameters:    Size  Location     Type
 13029 ;;  button          2   28[BANK0 ] PTR struct .
 13030 ;;		 -> g1(218), 
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;  bmpPtr          2   58[BANK0 ] PTR struct .
 13033 ;;		 -> STR_8(9), STR_7(2), STR_6(9), STR_5(9), 
 13034 ;;		 -> STR_4(11), 
 13035 ;;  yText           2   55[BANK0 ] unsigned short 
 13036 ;;  xText           2   53[BANK0 ] unsigned short 
 13037 ;;  y2              2   51[BANK0 ] unsigned short 
 13038 ;;  y1              2   49[BANK0 ] unsigned short 
 13039 ;;  x2              2   47[BANK0 ] unsigned short 
 13040 ;;  x1              2   45[BANK0 ] unsigned short 
 13041 ;;  width           2   43[BANK0 ] unsigned short 
 13042 ;;  i               1   57[BANK0 ] unsigned char 
 13043 ;;  tempChar        1   42[BANK0 ] unsigned char 
 13044 ;; Return value:  Size  Location     Type
 13045 ;;                  1    wreg      void 
 13046 ;; Registers used:
 13047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13048 ;; Tracked objects:
 13049 ;;		On entry : 0/0
 13050 ;;		On exit  : 0/0
 13051 ;;		Unchanged: 0/0
 13052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13053 ;;      Params:         0       2       0       0       0       0       0
 13054 ;;      Locals:         0      18       0       0       0       0       0
 13055 ;;      Temps:          0      12       0       0       0       0       0
 13056 ;;      Totals:         0      32       0       0       0       0       0
 13057 ;;Total ram usage:       32 bytes
 13058 ;; Hardware stack levels used: 1
 13059 ;; Hardware stack levels required when called: 6
 13060 ;; This function calls:
 13061 ;;		_LCD_Bitmap
 13062 ;;		_LCD_ButtonUpdate
 13063 ;;		_LCD_DrawRect
 13064 ;;		_LCD_DrawText
 13065 ;;		___awdiv
 13066 ;;		_strlen
 13067 ;; This function is called by:
 13068 ;;		_Menu_welcomeDraw
 13069 ;;		_Menu_parametersDraw
 13070 ;;		_Menu_endGame
 13071 ;; This function uses a non-reentrant model
 13072 ;;
 13073                           
 13074                           	psect	text51
 13075  000FC6                     __ptext51:
 13076                           	callstack 0
 13077  000FC6                     _LCD_ButtonDraw:
 13078                           	callstack 19
 13079  000FC6                     
 13080                           ;libraries/lcd_highlevel.c: 462: void LCD_ButtonDraw(btn_t * button);libraries/lcd_highl
      +                          evel.c: 463: {;libraries/lcd_highlevel.c: 464:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 465:   uint16_t xText,yText;;libraries/lcd_highlevel.c: 466:   uint8_t i, temp
      +                          Char;;libraries/lcd_highlevel.c: 467:   uint16_t width=0;
 13081  000FC6  0E00               	movlw	0
 13082  000FC8  0100               	movlb	0	; () banked
 13083  000FCA  6F8C               	movwf	(LCD_ButtonDraw@width+1)& (0+255),b
 13084  000FCC  0E00               	movlw	0
 13085  000FCE  6F8B               	movwf	LCD_ButtonDraw@width& (0+255),b
 13086  000FD0                     
 13087                           ; BSR set to: 0
 13088                           ;libraries/lcd_highlevel.c: 468:   BMP_STRUCT *bmpPtr;;libraries/lcd_highlevel.c: 470:  
      +                           x1 = button->posX;
 13089  000FD0  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 13090  000FD4  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 13091  000FD8  CFDE F08D          	movff	postinc2,LCD_ButtonDraw@x1
 13092  000FDC  CFDD F08E          	movff	postdec2,LCD_ButtonDraw@x1+1
 13093  000FE0                     
 13094                           ; BSR set to: 0
 13095                           ;libraries/lcd_highlevel.c: 471:   x2 = button->posX + button->width;
 13096  000FE0  EE20 F004          	lfsr	2,4
 13097  000FE4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13098  000FE6  26D9               	addwf	fsr2l,f,c
 13099  000FE8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13100  000FEA  22DA               	addwfc	fsr2h,f,c
 13101  000FEC  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13102  000FF0  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13103  000FF4  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 13104  000FF8  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 13105  000FFC  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 13106  001000  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 13107  001004  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13108  001006  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 13109  001008  6F8F               	movwf	LCD_ButtonDraw@x2& (0+255),b
 13110  00100A  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13111  00100C  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 13112  00100E  6F90               	movwf	(LCD_ButtonDraw@x2+1)& (0+255),b
 13113  001010                     
 13114                           ; BSR set to: 0
 13115                           ;libraries/lcd_highlevel.c: 472:   y1 = button->posY;
 13116  001010  EE20 F002          	lfsr	2,2
 13117  001014  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13118  001016  26D9               	addwf	fsr2l,f,c
 13119  001018  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13120  00101A  22DA               	addwfc	fsr2h,f,c
 13121  00101C  CFDE F091          	movff	postinc2,LCD_ButtonDraw@y1
 13122  001020  CFDD F092          	movff	postdec2,LCD_ButtonDraw@y1+1
 13123  001024                     
 13124                           ; BSR set to: 0
 13125                           ;libraries/lcd_highlevel.c: 473:   y2 = button->posY + button->height;
 13126  001024  EE20 F006          	lfsr	2,6
 13127  001028  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13128  00102A  26D9               	addwf	fsr2l,f,c
 13129  00102C  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13130  00102E  22DA               	addwfc	fsr2h,f,c
 13131  001030  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13132  001034  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13133  001038  EE20 F002          	lfsr	2,2
 13134  00103C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13135  00103E  26D9               	addwf	fsr2l,f,c
 13136  001040  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13137  001042  22DA               	addwfc	fsr2h,f,c
 13138  001044  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 13139  001048  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 13140  00104C  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13141  00104E  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 13142  001050  6F93               	movwf	LCD_ButtonDraw@y2& (0+255),b
 13143  001052  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13144  001054  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 13145  001056  6F94               	movwf	(LCD_ButtonDraw@y2+1)& (0+255),b
 13146  001058                     
 13147                           ; BSR set to: 0
 13148                           ;libraries/lcd_highlevel.c: 474:   if(button->bgColor != button->txtColor)
 13149  001058  EE20 F008          	lfsr	2,8
 13150  00105C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13151  00105E  26D9               	addwf	fsr2l,f,c
 13152  001060  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13153  001062  22DA               	addwfc	fsr2h,f,c
 13154  001064  EE10 F00A          	lfsr	1,10
 13155  001068  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13156  00106A  26E1               	addwf	fsr1l,f,c
 13157  00106C  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13158  00106E  22E2               	addwfc	fsr1h,f,c
 13159  001070  50DE               	movf	postinc2,w,c
 13160  001072  18E6               	xorwf	postinc1,w,c
 13161  001074  E109               	bnz	u6850
 13162  001076  50DE               	movf	postinc2,w,c
 13163  001078  18E6               	xorwf	postinc1,w,c
 13164  00107A  B4D8               	btfsc	status,2,c
 13165  00107C  EF42  F008         	goto	u6851
 13166  001080  EF44  F008         	goto	u6850
 13167  001084                     u6851:
 13168  001084  EF81  F008         	goto	l9634
 13169  001088                     u6850:
 13170  001088                     
 13171                           ; BSR set to: 0
 13172                           ;libraries/lcd_highlevel.c: 475:   {;libraries/lcd_highlevel.c: 476:     LCD_DrawRect(x1
      +                          , y1, x2, y2, 1, button->bgColor);
 13173  001088  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 13174  00108C  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 13175  001090  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 13176  001094  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 13177  001098  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 13178  00109C  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 13179  0010A0  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 13180  0010A4  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 13181  0010A8  0E01               	movlw	1
 13182  0010AA  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13183  0010AC  EE20 F00A          	lfsr	2,10
 13184  0010B0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13185  0010B2  26D9               	addwf	fsr2l,f,c
 13186  0010B4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13187  0010B6  22DA               	addwfc	fsr2h,f,c
 13188  0010B8  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13189  0010BC  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13190  0010C0  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 13191                           
 13192                           ;libraries/lcd_highlevel.c: 477:     LCD_DrawRect(x1, y1, x2, y2, 0, button->txtColor);
 13193  0010C4  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 13194  0010C8  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 13195  0010CC  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 13196  0010D0  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 13197  0010D4  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 13198  0010D8  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 13199  0010DC  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 13200  0010E0  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 13201  0010E4  0E00               	movlw	0
 13202  0010E6  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13203  0010E8  0100               	movlb	0	; () banked
 13204  0010EA  EE20 F008          	lfsr	2,8
 13205  0010EE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13206  0010F0  26D9               	addwf	fsr2l,f,c
 13207  0010F2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13208  0010F4  22DA               	addwfc	fsr2h,f,c
 13209  0010F6  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 13210  0010FA  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 13211  0010FE  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 13212  001102                     l9634:
 13213                           
 13214                           ;libraries/lcd_highlevel.c: 482:   if((button->text[0] == 'B')&&(button->text[1] == 'M')
      +                          )
 13215  001102  0100               	movlb	0	; () banked
 13216  001104  EE20 F00C          	lfsr	2,12
 13217  001108  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13218  00110A  26D9               	addwf	fsr2l,f,c
 13219  00110C  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13220  00110E  22DA               	addwfc	fsr2h,f,c
 13221  001110  CFDE FFF6          	movff	postinc2,tblptrl
 13222  001114  CFDD FFF7          	movff	postdec2,tblptrh
 13223  001118                     	if	0	;tblptru may be non-zero
 13224  001118                     	endif
 13225  001118                     	if	0	;tblptru may be non-zero
 13226  001118                     	endif
 13227  001118  0008               	tblrd		*
 13228  00111A  50F5               	movf	tablat,w,c
 13229  00111C  0A42               	xorlw	66
 13230  00111E  A4D8               	btfss	status,2,c
 13231  001120  EF94  F008         	goto	u6861
 13232  001124  EF96  F008         	goto	u6860
 13233  001128                     u6861:
 13234  001128  EF46  F009         	goto	l9646
 13235  00112C                     u6860:
 13236  00112C                     
 13237                           ; BSR set to: 0
 13238  00112C  EE20 F00C          	lfsr	2,12
 13239  001130  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13240  001132  26D9               	addwf	fsr2l,f,c
 13241  001134  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13242  001136  22DA               	addwfc	fsr2h,f,c
 13243  001138  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13244  00113C  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13245  001140  0E01               	movlw	1
 13246  001142  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 13247  001144  0E00               	movlw	0
 13248  001146  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 13249  001148  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 13250  00114C  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 13251  001150                     	if	0	;tblptru may be non-zero
 13252  001150                     	endif
 13253  001150                     	if	0	;tblptru may be non-zero
 13254  001150                     	endif
 13255  001150  0008               	tblrd		*
 13256  001152  50F5               	movf	tablat,w,c
 13257  001154  0A4D               	xorlw	77
 13258  001156  A4D8               	btfss	status,2,c
 13259  001158  EFB0  F008         	goto	u6871
 13260  00115C  EFB2  F008         	goto	u6870
 13261  001160                     u6871:
 13262  001160  EF46  F009         	goto	l9646
 13263  001164                     u6870:
 13264  001164                     
 13265                           ; BSR set to: 0
 13266                           ;libraries/lcd_highlevel.c: 483:   {;libraries/lcd_highlevel.c: 484:     bmpPtr = (BMP_S
      +                          TRUCT *)button->text;
 13267  001164  EE20 F00C          	lfsr	2,12
 13268  001168  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13269  00116A  26D9               	addwf	fsr2l,f,c
 13270  00116C  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13271  00116E  22DA               	addwfc	fsr2h,f,c
 13272  001170  CFDE F09A          	movff	postinc2,LCD_ButtonDraw@bmpPtr
 13273  001174  CFDD F09B          	movff	postdec2,LCD_ButtonDraw@bmpPtr+1
 13274  001178                     
 13275                           ; BSR set to: 0
 13276                           ;libraries/lcd_highlevel.c: 485:     yText = button->height / 2 + button->posY - (bmpPtr
      +                          ->biHeight / 2);
 13277  001178  EE20 F002          	lfsr	2,2
 13278  00117C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13279  00117E  26D9               	addwf	fsr2l,f,c
 13280  001180  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13281  001182  22DA               	addwfc	fsr2h,f,c
 13282  001184  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13283  001188  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13284  00118C  0E16               	movlw	22
 13285  00118E  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 13286  001190  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 13287  001192  0E00               	movlw	0
 13288  001194  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 13289  001196  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 13290  001198  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 13291  00119C  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 13292  0011A0                     	if	0	;tblptru may be non-zero
 13293  0011A0                     	endif
 13294  0011A0                     	if	0	;tblptru may be non-zero
 13295  0011A0                     	endif
 13296  0011A0  0009               	tblrd		*+
 13297  0011A2  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 13298  0011A6  0009               	tblrd		*+
 13299  0011A8  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 13300  0011AC  0009               	tblrd		*+
 13301  0011AE  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 13302  0011B2  0009               	tblrd		*+
 13303  0011B4  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 13304  0011B8  90D8               	bcf	status,0,c
 13305  0011BA  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 13306  0011BC  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 13307  0011BE  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 13308  0011C0  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 13309  0011C2  EE20 F006          	lfsr	2,6
 13310  0011C6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13311  0011C8  26D9               	addwf	fsr2l,f,c
 13312  0011CA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13313  0011CC  22DA               	addwfc	fsr2h,f,c
 13314  0011CE  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 13315  0011D2  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 13316  0011D6  90D8               	bcf	status,0,c
 13317  0011D8  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 13318  0011DA  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 13319  0011DC  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 13320  0011DE  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 13321  0011E0  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 13322  0011E2  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 13323  0011E4  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13324  0011E6  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 13325  0011E8  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13326  0011EA  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 13327  0011EC  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 13328  0011EE  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13329  0011F0  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 13330  0011F2  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 13331  0011F4                     
 13332                           ; BSR set to: 0
 13333                           ;libraries/lcd_highlevel.c: 486:     xText = button->width / 2 + button->posX - (bmpPtr-
      +                          >biWidth / 2);
 13334  0011F4  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 13335  0011F8  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 13336  0011FC  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13337  001200  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13338  001204  0E12               	movlw	18
 13339  001206  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 13340  001208  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 13341  00120A  0E00               	movlw	0
 13342  00120C  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 13343  00120E  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 13344  001210  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 13345  001214  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 13346  001218                     	if	0	;tblptru may be non-zero
 13347  001218                     	endif
 13348  001218                     	if	0	;tblptru may be non-zero
 13349  001218                     	endif
 13350  001218  0009               	tblrd		*+
 13351  00121A  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 13352  00121E  0009               	tblrd		*+
 13353  001220  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 13354  001224  0009               	tblrd		*+
 13355  001226  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 13356  00122A  0009               	tblrd		*+
 13357  00122C  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 13358  001230  90D8               	bcf	status,0,c
 13359  001232  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 13360  001234  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 13361  001236  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 13362  001238  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 13363  00123A  EE20 F004          	lfsr	2,4
 13364  00123E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13365  001240  26D9               	addwf	fsr2l,f,c
 13366  001242  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13367  001244  22DA               	addwfc	fsr2h,f,c
 13368  001246  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 13369  00124A  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 13370  00124E  90D8               	bcf	status,0,c
 13371  001250  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 13372  001252  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 13373  001254  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 13374  001256  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 13375  001258  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 13376  00125A  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 13377  00125C  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13378  00125E  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 13379  001260  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13380  001262  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 13381  001264  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 13382  001266  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13383  001268  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 13384  00126A  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 13385  00126C                     
 13386                           ; BSR set to: 0
 13387                           ;libraries/lcd_highlevel.c: 487:     LCD_Bitmap((const uint8_t *)bmpPtr,xText,yText);
 13388  00126C  C09A  F027         	movff	LCD_ButtonDraw@bmpPtr,LCD_Bitmap@bmpPtr
 13389  001270  C09B  F028         	movff	LCD_ButtonDraw@bmpPtr+1,LCD_Bitmap@bmpPtr+1
 13390  001274  C095  F029         	movff	LCD_ButtonDraw@xText,LCD_Bitmap@posX
 13391  001278  C096  F02A         	movff	LCD_ButtonDraw@xText+1,LCD_Bitmap@posX+1
 13392  00127C  C097  F02B         	movff	LCD_ButtonDraw@yText,LCD_Bitmap@posY
 13393  001280  C098  F02C         	movff	LCD_ButtonDraw@yText+1,LCD_Bitmap@posY+1
 13394  001284  ECE8  F004         	call	_LCD_Bitmap	;wreg free
 13395                           
 13396                           ;libraries/lcd_highlevel.c: 488:   }
 13397  001288  EF53  F00A         	goto	l9662
 13398  00128C                     l9646:
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;libraries/lcd_highlevel.c: 493:   {;libraries/lcd_highlevel.c: 494:     yText = button-
      +                          >height / 2 + button->posY - (button->font->height / 2);
 13402  00128C  EE20 F002          	lfsr	2,2
 13403  001290  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13404  001292  26D9               	addwf	fsr2l,f,c
 13405  001294  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13406  001296  22DA               	addwfc	fsr2h,f,c
 13407  001298  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13408  00129C  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13409  0012A0  EE20 F00E          	lfsr	2,14
 13410  0012A4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13411  0012A6  26D9               	addwf	fsr2l,f,c
 13412  0012A8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13413  0012AA  22DA               	addwfc	fsr2h,f,c
 13414  0012AC  CFDE FFF6          	movff	postinc2,tblptrl
 13415  0012B0  CFDD FFF7          	movff	postdec2,tblptrh
 13416  0012B4                     	if	0	;tblptru may be non-zero
 13417  0012B4                     	endif
 13418  0012B4                     	if	0	;tblptru may be non-zero
 13419  0012B4                     	endif
 13420  0012B4  0008               	tblrd		*
 13421  0012B6  50F5               	movf	tablat,w,c
 13422  0012B8  6E12               	movwf	___awdiv@dividend^0,c
 13423  0012BA  6A13               	clrf	(___awdiv@dividend+1)^0,c
 13424  0012BC  0E00               	movlw	0
 13425  0012BE  6E15               	movwf	(___awdiv@divisor+1)^0,c
 13426  0012C0  0E02               	movlw	2
 13427  0012C2  6E14               	movwf	___awdiv@divisor^0,c
 13428  0012C4  ECE2  F02A         	call	___awdiv	;wreg free
 13429  0012C8  0100               	movlb	0	; () banked
 13430  0012CA  EE20 F006          	lfsr	2,6
 13431  0012CE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13432  0012D0  26D9               	addwf	fsr2l,f,c
 13433  0012D2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13434  0012D4  22DA               	addwfc	fsr2h,f,c
 13435  0012D6  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 13436  0012DA  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 13437  0012DE  90D8               	bcf	status,0,c
 13438  0012E0  3181               	rrcf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 13439  0012E2  6F83               	movwf	(??_LCD_ButtonDraw+5)& (0+255),b
 13440  0012E4  3180               	rrcf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 13441  0012E6  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 13442  0012E8  5012               	movf	?___awdiv^0,w,c
 13443  0012EA  5F82               	subwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 13444  0012EC  5013               	movf	(?___awdiv+1)^0,w,c
 13445  0012EE  5B83               	subwfb	(??_LCD_ButtonDraw+5)& (0+255),f,b
 13446  0012F0  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13447  0012F2  2582               	addwf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 13448  0012F4  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 13449  0012F6  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13450  0012F8  2183               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13451  0012FA  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 13452  0012FC                     
 13453                           ; BSR set to: 0
 13454                           ;libraries/lcd_highlevel.c: 495:     for(i=0;i<strlen(button->text);i++)
 13455  0012FC  0E00               	movlw	0
 13456  0012FE  6F99               	movwf	LCD_ButtonDraw@i& (0+255),b
 13457  001300  EFDE  F009         	goto	l9656
 13458  001304                     l9650:
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;libraries/lcd_highlevel.c: 496:     {;libraries/lcd_highlevel.c: 497:       tempChar = 
      +                          (button->text[i]) - button->font->start_char;
 13462  001304  EE20 F00E          	lfsr	2,14
 13463  001308  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13464  00130A  26D9               	addwf	fsr2l,f,c
 13465  00130C  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13466  00130E  22DA               	addwfc	fsr2h,f,c
 13467  001310  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13468  001314  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13469  001318  0E01               	movlw	1
 13470  00131A  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 13471  00131C  0E00               	movlw	0
 13472  00131E  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 13473  001320  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 13474  001324  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 13475  001328                     	if	0	;tblptru may be non-zero
 13476  001328                     	endif
 13477  001328                     	if	0	;tblptru may be non-zero
 13478  001328                     	endif
 13479  001328  0008               	tblrd		*
 13480  00132A  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 13481  00132E  EE20 F00C          	lfsr	2,12
 13482  001332  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13483  001334  26D9               	addwf	fsr2l,f,c
 13484  001336  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13485  001338  22DA               	addwfc	fsr2h,f,c
 13486  00133A  CFDE F081          	movff	postinc2,??_LCD_ButtonDraw+3
 13487  00133E  CFDD F082          	movff	postdec2,??_LCD_ButtonDraw+4
 13488  001342  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 13489  001344  2781               	addwf	(??_LCD_ButtonDraw+3)& (0+255),f,b
 13490  001346  0E00               	movlw	0
 13491  001348  2382               	addwfc	(??_LCD_ButtonDraw+4)& (0+255),f,b
 13492  00134A  C081  FFF6         	movff	??_LCD_ButtonDraw+3,tblptrl
 13493  00134E  C082  FFF7         	movff	??_LCD_ButtonDraw+4,tblptrh
 13494  001352                     	if	0	;tblptru may be non-zero
 13495  001352                     	endif
 13496  001352                     	if	0	;tblptru may be non-zero
 13497  001352                     	endif
 13498  001352  0008               	tblrd		*
 13499  001354  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 13500  001358  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 13501  00135A  5D83               	subwf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13502  00135C  6F8A               	movwf	LCD_ButtonDraw@tempChar& (0+255),b
 13503  00135E                     
 13504                           ; BSR set to: 0
 13505                           ;libraries/lcd_highlevel.c: 498:       width += button->font->descriptor[tempChar].width
      +                          +2;
 13506  00135E  518A               	movf	LCD_ButtonDraw@tempChar& (0+255),w,b
 13507  001360  0D03               	mullw	3
 13508  001362  EE20 F00E          	lfsr	2,14
 13509  001366  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13510  001368  26D9               	addwf	fsr2l,f,c
 13511  00136A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13512  00136C  22DA               	addwfc	fsr2h,f,c
 13513  00136E  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13514  001372  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13515  001376  0E03               	movlw	3
 13516  001378  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 13517  00137A  0E00               	movlw	0
 13518  00137C  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 13519  00137E  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 13520  001382  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 13521  001386                     	if	0	;tblptru may be non-zero
 13522  001386                     	endif
 13523  001386                     	if	0	;tblptru may be non-zero
 13524  001386                     	endif
 13525  001386  0009               	tblrd		*+
 13526  001388  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 13527  00138C  0009               	tblrd		*+
 13528  00138E  CFF5 F081          	movff	tablat,??_LCD_ButtonDraw+3
 13529  001392  50F3               	movf	243,w,c
 13530  001394  2780               	addwf	(??_LCD_ButtonDraw+2)& (0+255),f,b
 13531  001396  50F4               	movf	244,w,c
 13532  001398  2381               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),f,b
 13533  00139A  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 13534  00139E  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 13535  0013A2                     	if	0	;tblptru may be non-zero
 13536  0013A2                     	endif
 13537  0013A2                     	if	0	;tblptru may be non-zero
 13538  0013A2                     	endif
 13539  0013A2  0008               	tblrd		*
 13540  0013A4  50F5               	movf	tablat,w,c
 13541  0013A6  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 13542  0013A8  6B83               	clrf	(??_LCD_ButtonDraw+5)& (0+255),b
 13543  0013AA  0E02               	movlw	2
 13544  0013AC  2782               	addwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 13545  0013AE  0E00               	movlw	0
 13546  0013B0  2383               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),f,b
 13547  0013B2  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 13548  0013B4  278B               	addwf	LCD_ButtonDraw@width& (0+255),f,b
 13549  0013B6  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13550  0013B8  238C               	addwfc	(LCD_ButtonDraw@width+1)& (0+255),f,b
 13551  0013BA                     
 13552                           ; BSR set to: 0
 13553                           ;libraries/lcd_highlevel.c: 499:     }
 13554  0013BA  2B99               	incf	LCD_ButtonDraw@i& (0+255),f,b
 13555  0013BC                     l9656:
 13556                           
 13557                           ; BSR set to: 0
 13558  0013BC  EE20 F00C          	lfsr	2,12
 13559  0013C0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13560  0013C2  26D9               	addwf	fsr2l,f,c
 13561  0013C4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13562  0013C6  22DA               	addwfc	fsr2h,f,c
 13563  0013C8  CFDE F012          	movff	postinc2,strlen@s
 13564  0013CC  CFDD F013          	movff	postdec2,strlen@s+1
 13565  0013D0  ECD8  F031         	call	_strlen	;wreg free
 13566  0013D4  0100               	movlb	0	; () banked
 13567  0013D6  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 13568  0013D8  6F7E               	movwf	??_LCD_ButtonDraw& (0+255),b
 13569  0013DA  6B7F               	clrf	(??_LCD_ButtonDraw+1)& (0+255),b
 13570  0013DC  5012               	movf	?_strlen^0,w,c
 13571  0013DE  5D7E               	subwf	??_LCD_ButtonDraw& (0+255),w,b
 13572  0013E0  5013               	movf	(?_strlen+1)^0,w,c
 13573  0013E2  597F               	subwfb	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13574  0013E4  A0D8               	btfss	status,0,c
 13575  0013E6  EFF7  F009         	goto	u6881
 13576  0013EA  EFF9  F009         	goto	u6880
 13577  0013EE                     u6881:
 13578  0013EE  EF82  F009         	goto	l9650
 13579  0013F2                     u6880:
 13580  0013F2                     
 13581                           ; BSR set to: 0
 13582                           ;libraries/lcd_highlevel.c: 500:     xText = button->width / 2 + button->posX - (width /
      +                           2);
 13583  0013F2  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 13584  0013F6  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 13585  0013FA  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 13586  0013FE  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 13587  001402  90D8               	bcf	status,0,c
 13588  001404  318C               	rrcf	(LCD_ButtonDraw@width+1)& (0+255),w,b
 13589  001406  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 13590  001408  318B               	rrcf	LCD_ButtonDraw@width& (0+255),w,b
 13591  00140A  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 13592  00140C  EE20 F004          	lfsr	2,4
 13593  001410  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13594  001412  26D9               	addwf	fsr2l,f,c
 13595  001414  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13596  001416  22DA               	addwfc	fsr2h,f,c
 13597  001418  CFDE F082          	movff	postinc2,??_LCD_ButtonDraw+4
 13598  00141C  CFDD F083          	movff	postdec2,??_LCD_ButtonDraw+5
 13599  001420  90D8               	bcf	status,0,c
 13600  001422  3183               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13601  001424  6F85               	movwf	(??_LCD_ButtonDraw+7)& (0+255),b
 13602  001426  3182               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 13603  001428  6F84               	movwf	(??_LCD_ButtonDraw+6)& (0+255),b
 13604  00142A  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 13605  00142C  5F84               	subwf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 13606  00142E  5181               	movf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 13607  001430  5B85               	subwfb	(??_LCD_ButtonDraw+7)& (0+255),f,b
 13608  001432  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13609  001434  2584               	addwf	(??_LCD_ButtonDraw+6)& (0+255),w,b
 13610  001436  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 13611  001438  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13612  00143A  2185               	addwfc	(??_LCD_ButtonDraw+7)& (0+255),w,b
 13613  00143C  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 13614  00143E                     
 13615                           ; BSR set to: 0
 13616                           ;libraries/lcd_highlevel.c: 501:     LCD_DrawText(button->text, button->font,A_LEFT,
 13617  00143E  EE20 F00C          	lfsr	2,12
 13618  001442  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13619  001444  26D9               	addwf	fsr2l,f,c
 13620  001446  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13621  001448  22DA               	addwfc	fsr2h,f,c
 13622  00144A  CFDE F020          	movff	postinc2,LCD_DrawText@msg
 13623  00144E  CFDD F021          	movff	postdec2,LCD_DrawText@msg+1
 13624  001452  EE20 F00E          	lfsr	2,14
 13625  001456  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13626  001458  26D9               	addwf	fsr2l,f,c
 13627  00145A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13628  00145C  22DA               	addwfc	fsr2h,f,c
 13629  00145E  CFDE F022          	movff	postinc2,LCD_DrawText@font
 13630  001462  CFDD F023          	movff	postdec2,LCD_DrawText@font+1
 13631  001466  0E00               	movlw	0
 13632  001468  6E24               	movwf	LCD_DrawText@align^0,c
 13633  00146A  C095  F025         	movff	LCD_ButtonDraw@xText,LCD_DrawText@posX
 13634  00146E  C096  F026         	movff	LCD_ButtonDraw@xText+1,LCD_DrawText@posX+1
 13635  001472  C097  F027         	movff	LCD_ButtonDraw@yText,LCD_DrawText@posY
 13636  001476  C098  F028         	movff	LCD_ButtonDraw@yText+1,LCD_DrawText@posY+1
 13637  00147A  EE20 F008          	lfsr	2,8
 13638  00147E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13639  001480  26D9               	addwf	fsr2l,f,c
 13640  001482  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13641  001484  22DA               	addwfc	fsr2h,f,c
 13642  001486  CFDE F029          	movff	postinc2,LCD_DrawText@color
 13643  00148A  CFDD F02A          	movff	postdec2,LCD_DrawText@color+1
 13644  00148E  EE20 F00A          	lfsr	2,10
 13645  001492  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13646  001494  26D9               	addwf	fsr2l,f,c
 13647  001496  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13648  001498  22DA               	addwfc	fsr2h,f,c
 13649  00149A  CFDE F02B          	movff	postinc2,LCD_DrawText@bg_color
 13650  00149E  CFDD F02C          	movff	postdec2,LCD_DrawText@bg_color+1
 13651  0014A2  EC14  F00F         	call	_LCD_DrawText	;wreg free
 13652  0014A6                     l9662:
 13653                           
 13654                           ;libraries/lcd_highlevel.c: 504:   LCD_ButtonUpdate(button);
 13655  0014A6  C07C  F025         	movff	LCD_ButtonDraw@button,LCD_ButtonUpdate@button
 13656  0014AA  C07D  F026         	movff	LCD_ButtonDraw@button+1,LCD_ButtonUpdate@button+1
 13657  0014AE  EC6A  F01C         	call	_LCD_ButtonUpdate	;wreg free
 13658  0014B2  0012               	return		;funcret
 13659  0014B4                     __end_of_LCD_ButtonDraw:
 13660                           	callstack 0
 13661                           
 13662 ;; *************** function _LCD_ButtonUpdate *****************
 13663 ;; Defined at:
 13664 ;;		line 425 in file "libraries/lcd_highlevel.c"
 13665 ;; Parameters:    Size  Location     Type
 13666 ;;  button          2   36[COMRAM] PTR struct .
 13667 ;;		 -> g1(218), 
 13668 ;; Auto vars:     Size  Location     Type
 13669 ;;  y2              2   52[COMRAM] unsigned short 
 13670 ;;  x1              2   50[COMRAM] unsigned short 
 13671 ;;  y1              2   48[COMRAM] unsigned short 
 13672 ;;  x2              2   46[COMRAM] unsigned short 
 13673 ;;  colorIn         2   44[COMRAM] unsigned short 
 13674 ;;  colorOut        2   42[COMRAM] unsigned short 
 13675 ;; Return value:  Size  Location     Type
 13676 ;;                  1    wreg      void 
 13677 ;; Registers used:
 13678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13679 ;; Tracked objects:
 13680 ;;		On entry : 0/0
 13681 ;;		On exit  : 0/0
 13682 ;;		Unchanged: 0/0
 13683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13684 ;;      Params:         2       0       0       0       0       0       0
 13685 ;;      Locals:        12       0       0       0       0       0       0
 13686 ;;      Temps:          4       0       0       0       0       0       0
 13687 ;;      Totals:        18       0       0       0       0       0       0
 13688 ;;Total ram usage:       18 bytes
 13689 ;; Hardware stack levels used: 1
 13690 ;; Hardware stack levels required when called: 5
 13691 ;; This function calls:
 13692 ;;		_LCD_DrawRect
 13693 ;;		_LCD_Read
 13694 ;; This function is called by:
 13695 ;;		_LCD_ButtonDraw
 13696 ;; This function uses a non-reentrant model
 13697 ;;
 13698                           
 13699                           	psect	text52
 13700  0038D4                     __ptext52:
 13701                           	callstack 0
 13702  0038D4                     _LCD_ButtonUpdate:
 13703                           	callstack 19
 13704  0038D4                     
 13705                           ;libraries/lcd_highlevel.c: 425: void LCD_ButtonUpdate(btn_t * button);libraries/lcd_hig
      +                          hlevel.c: 426: {;libraries/lcd_highlevel.c: 427:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 428:   uint16_t colorOut, colorIn;;libraries/lcd_highlevel.c: 430:   x1 = bu
      +                          tton->posX;
 13706  0038D4  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13707  0038D8  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13708  0038DC  CFDE F033          	movff	postinc2,LCD_ButtonUpdate@x1
 13709  0038E0  CFDD F034          	movff	postdec2,LCD_ButtonUpdate@x1+1
 13710  0038E4                     
 13711                           ;libraries/lcd_highlevel.c: 431:   x2 = button->posX + button->width;
 13712  0038E4  EE20 F004          	lfsr	2,4
 13713  0038E8  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13714  0038EA  26D9               	addwf	fsr2l,f,c
 13715  0038EC  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13716  0038EE  22DA               	addwfc	fsr2h,f,c
 13717  0038F0  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13718  0038F4  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13719  0038F8  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13720  0038FC  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13721  003900  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13722  003904  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13723  003908  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13724  00390A  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13725  00390C  6E2F               	movwf	LCD_ButtonUpdate@x2^0,c
 13726  00390E  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13727  003910  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13728  003912  6E30               	movwf	(LCD_ButtonUpdate@x2+1)^0,c
 13729  003914                     
 13730                           ;libraries/lcd_highlevel.c: 432:   y1 = button->posY;
 13731  003914  EE20 F002          	lfsr	2,2
 13732  003918  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13733  00391A  26D9               	addwf	fsr2l,f,c
 13734  00391C  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13735  00391E  22DA               	addwfc	fsr2h,f,c
 13736  003920  CFDE F031          	movff	postinc2,LCD_ButtonUpdate@y1
 13737  003924  CFDD F032          	movff	postdec2,LCD_ButtonUpdate@y1+1
 13738  003928                     
 13739                           ;libraries/lcd_highlevel.c: 433:   y2 = button->posY + button->height;
 13740  003928  EE20 F006          	lfsr	2,6
 13741  00392C  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13742  00392E  26D9               	addwf	fsr2l,f,c
 13743  003930  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13744  003932  22DA               	addwfc	fsr2h,f,c
 13745  003934  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13746  003938  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13747  00393C  EE20 F002          	lfsr	2,2
 13748  003940  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13749  003942  26D9               	addwf	fsr2l,f,c
 13750  003944  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13751  003946  22DA               	addwfc	fsr2h,f,c
 13752  003948  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13753  00394C  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13754  003950  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13755  003952  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13756  003954  6E35               	movwf	LCD_ButtonUpdate@y2^0,c
 13757  003956  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13758  003958  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13759  00395A  6E36               	movwf	(LCD_ButtonUpdate@y2+1)^0,c
 13760  00395C                     
 13761                           ;libraries/lcd_highlevel.c: 435:   if(button->pressed == 0)
 13762  00395C  EE20 F010          	lfsr	2,16
 13763  003960  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13764  003962  26D9               	addwf	fsr2l,f,c
 13765  003964  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13766  003966  22DA               	addwfc	fsr2h,f,c
 13767  003968  50DF               	movf	indf2,w,c
 13768  00396A  A4D8               	btfss	status,2,c
 13769  00396C  EFBA  F01C         	goto	u6611
 13770  003970  EFBC  F01C         	goto	u6610
 13771  003974                     u6611:
 13772  003974  EFD2  F01C         	goto	l9084
 13773  003978                     u6610:
 13774  003978                     
 13775                           ;libraries/lcd_highlevel.c: 436:   {;libraries/lcd_highlevel.c: 437:     colorOut = butt
      +                          on->txtColor;
 13776  003978  EE20 F008          	lfsr	2,8
 13777  00397C  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13778  00397E  26D9               	addwf	fsr2l,f,c
 13779  003980  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13780  003982  22DA               	addwfc	fsr2h,f,c
 13781  003984  CFDE F02B          	movff	postinc2,LCD_ButtonUpdate@colorOut
 13782  003988  CFDD F02C          	movff	postdec2,LCD_ButtonUpdate@colorOut+1
 13783                           
 13784                           ;libraries/lcd_highlevel.c: 438:     colorIn = button->bgColor;
 13785  00398C  EE20 F00A          	lfsr	2,10
 13786  003990  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13787  003992  26D9               	addwf	fsr2l,f,c
 13788  003994  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13789  003996  22DA               	addwfc	fsr2h,f,c
 13790  003998  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13791  00399C  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13792                           
 13793                           ;libraries/lcd_highlevel.c: 439:   }
 13794  0039A0  EFEC  F01C         	goto	l9088
 13795  0039A4                     l9084:
 13796                           
 13797                           ;libraries/lcd_highlevel.c: 441:   {;libraries/lcd_highlevel.c: 443:     colorOut = LCD_
      +                          Read(x1,y2+1);
 13798  0039A4  C033  F012         	movff	LCD_ButtonUpdate@x1,LCD_Read@posX
 13799  0039A8  C034  F013         	movff	LCD_ButtonUpdate@x1+1,LCD_Read@posX+1
 13800  0039AC  0E01               	movlw	1
 13801  0039AE  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13802  0039B0  6E14               	movwf	LCD_Read@posY^0,c
 13803  0039B2  0E00               	movlw	0
 13804  0039B4  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13805  0039B6  6E15               	movwf	(LCD_Read@posY+1)^0,c
 13806  0039B8  EC1E  F022         	call	_LCD_Read	;wreg free
 13807  0039BC  C012  F02B         	movff	?_LCD_Read,LCD_ButtonUpdate@colorOut
 13808  0039C0  C013  F02C         	movff	?_LCD_Read+1,LCD_ButtonUpdate@colorOut+1
 13809  0039C4                     
 13810                           ;libraries/lcd_highlevel.c: 444:     colorIn = button->txtColor;
 13811  0039C4  EE20 F008          	lfsr	2,8
 13812  0039C8  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13813  0039CA  26D9               	addwf	fsr2l,f,c
 13814  0039CC  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13815  0039CE  22DA               	addwfc	fsr2h,f,c
 13816  0039D0  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13817  0039D4  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13818  0039D8                     l9088:
 13819                           
 13820                           ;libraries/lcd_highlevel.c: 446:   if(button->bgColor != button->txtColor)
 13821  0039D8  EE20 F008          	lfsr	2,8
 13822  0039DC  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13823  0039DE  26D9               	addwf	fsr2l,f,c
 13824  0039E0  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13825  0039E2  22DA               	addwfc	fsr2h,f,c
 13826  0039E4  EE10 F00A          	lfsr	1,10
 13827  0039E8  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13828  0039EA  26E1               	addwf	fsr1l,f,c
 13829  0039EC  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13830  0039EE  22E2               	addwfc	fsr1h,f,c
 13831  0039F0  50DE               	movf	postinc2,w,c
 13832  0039F2  18E6               	xorwf	postinc1,w,c
 13833  0039F4  E109               	bnz	u6620
 13834  0039F6  50DE               	movf	postinc2,w,c
 13835  0039F8  18E6               	xorwf	postinc1,w,c
 13836  0039FA  B4D8               	btfsc	status,2,c
 13837  0039FC  EF02  F01D         	goto	u6621
 13838  003A00  EF04  F01D         	goto	u6620
 13839  003A04                     u6621:
 13840  003A04  EF84  F01D         	goto	l254
 13841  003A08                     u6620:
 13842  003A08                     
 13843                           ;libraries/lcd_highlevel.c: 447:   {;libraries/lcd_highlevel.c: 449:     LCD_DrawRect(x1
      +                          +3, y2+1, x2+3, y2+3, 1, colorOut);
 13844  003A08  0E03               	movlw	3
 13845  003A0A  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13846  003A0C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13847  003A0E  0E00               	movlw	0
 13848  003A10  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13849  003A12  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13850  003A14  0E01               	movlw	1
 13851  003A16  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13852  003A18  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13853  003A1A  0E00               	movlw	0
 13854  003A1C  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13855  003A1E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13856  003A20  0E03               	movlw	3
 13857  003A22  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13858  003A24  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13859  003A26  0E00               	movlw	0
 13860  003A28  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13861  003A2A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13862  003A2C  0E03               	movlw	3
 13863  003A2E  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13864  003A30  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13865  003A32  0E00               	movlw	0
 13866  003A34  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13867  003A36  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13868  003A38  0E01               	movlw	1
 13869  003A3A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13870  003A3C  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13871  003A40  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13872  003A44  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 13873                           
 13874                           ;libraries/lcd_highlevel.c: 450:     LCD_DrawRect(x2+1, y1+3, x2+3, y2+3, 1, colorOut);
 13875  003A48  0E01               	movlw	1
 13876  003A4A  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13877  003A4C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13878  003A4E  0E00               	movlw	0
 13879  003A50  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13880  003A52  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13881  003A54  0E03               	movlw	3
 13882  003A56  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13883  003A58  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13884  003A5A  0E00               	movlw	0
 13885  003A5C  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13886  003A5E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13887  003A60  0E03               	movlw	3
 13888  003A62  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13889  003A64  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13890  003A66  0E00               	movlw	0
 13891  003A68  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13892  003A6A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13893  003A6C  0E03               	movlw	3
 13894  003A6E  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13895  003A70  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13896  003A72  0E00               	movlw	0
 13897  003A74  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13898  003A76  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13899  003A78  0E01               	movlw	1
 13900  003A7A  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13901  003A7C  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13902  003A80  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13903  003A84  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 13904                           
 13905                           ;libraries/lcd_highlevel.c: 451:     LCD_DrawRect(x1+1, y1+1, x2-1, y1+2, 1, colorIn);
 13906  003A88  0E01               	movlw	1
 13907  003A8A  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13908  003A8C  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13909  003A8E  0E00               	movlw	0
 13910  003A90  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13911  003A92  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13912  003A94  0E01               	movlw	1
 13913  003A96  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13914  003A98  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13915  003A9A  0E00               	movlw	0
 13916  003A9C  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13917  003A9E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13918  003AA0  0EFF               	movlw	255
 13919  003AA2  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13920  003AA4  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13921  003AA6  0EFF               	movlw	255
 13922  003AA8  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13923  003AAA  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13924  003AAC  0E02               	movlw	2
 13925  003AAE  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13926  003AB0  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13927  003AB2  0E00               	movlw	0
 13928  003AB4  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13929  003AB6  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13930  003AB8  0E01               	movlw	1
 13931  003ABA  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13932  003ABC  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13933  003AC0  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13934  003AC4  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 13935                           
 13936                           ;libraries/lcd_highlevel.c: 452:     LCD_DrawRect(x1+1, y1+1, x1+2, y2-1, 1, colorIn);
 13937  003AC8  0E01               	movlw	1
 13938  003ACA  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13939  003ACC  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13940  003ACE  0E00               	movlw	0
 13941  003AD0  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13942  003AD2  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13943  003AD4  0E01               	movlw	1
 13944  003AD6  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13945  003AD8  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13946  003ADA  0E00               	movlw	0
 13947  003ADC  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13948  003ADE  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13949  003AE0  0E02               	movlw	2
 13950  003AE2  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13951  003AE4  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13952  003AE6  0E00               	movlw	0
 13953  003AE8  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13954  003AEA  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13955  003AEC  0EFF               	movlw	255
 13956  003AEE  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13957  003AF0  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13958  003AF2  0EFF               	movlw	255
 13959  003AF4  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13960  003AF6  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13961  003AF8  0E01               	movlw	1
 13962  003AFA  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13963  003AFC  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13964  003B00  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13965  003B04  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 13966  003B08                     l254:
 13967  003B08  0012               	return		;funcret
 13968  003B0A                     __end_of_LCD_ButtonUpdate:
 13969                           	callstack 0
 13970                           
 13971 ;; *************** function _LCD_Read *****************
 13972 ;; Defined at:
 13973 ;;		line 64 in file "libraries/lcd_lowlevel.c"
 13974 ;; Parameters:    Size  Location     Type
 13975 ;;  posX            2   17[COMRAM] unsigned short 
 13976 ;;  posY            2   19[COMRAM] unsigned short 
 13977 ;; Auto vars:     Size  Location     Type
 13978 ;;  temp16          2   25[COMRAM] unsigned short 
 13979 ;;  color           2   23[COMRAM] unsigned short 
 13980 ;; Return value:  Size  Location     Type
 13981 ;;                  2   17[COMRAM] unsigned short 
 13982 ;; Registers used:
 13983 ;;		wreg, status,2, status,0
 13984 ;; Tracked objects:
 13985 ;;		On entry : 0/0
 13986 ;;		On exit  : 0/0
 13987 ;;		Unchanged: 0/0
 13988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13989 ;;      Params:         4       0       0       0       0       0       0
 13990 ;;      Locals:         4       0       0       0       0       0       0
 13991 ;;      Temps:          2       0       0       0       0       0       0
 13992 ;;      Totals:        10       0       0       0       0       0       0
 13993 ;;Total ram usage:       10 bytes
 13994 ;; Hardware stack levels used: 1
 13995 ;; Hardware stack levels required when called: 4
 13996 ;; This function calls:
 13997 ;;		Nothing
 13998 ;; This function is called by:
 13999 ;;		_LCD_ButtonUpdate
 14000 ;; This function uses a non-reentrant model
 14001 ;;
 14002                           
 14003                           	psect	text53
 14004  00443C                     __ptext53:
 14005                           	callstack 0
 14006  00443C                     _LCD_Read:
 14007                           	callstack 19
 14008  00443C                     
 14009                           ;libraries/lcd_lowlevel.c: 64: uint16_t LCD_Read(uint16_t posX, uint16_t posY);libraries
      +                          /lcd_lowlevel.c: 65: {;libraries/lcd_lowlevel.c: 66:  uint16_t temp16;;libraries/lcd_low
      +                          level.c: 67:   uint16_t color;;libraries/lcd_lowlevel.c: 70:   PORTA = 0x2A; LATC4 = 0; 
      +                          LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 14010  00443C  0E2A               	movlw	42
 14011  00443E  6E80               	movwf	128,c	;volatile
 14012  004440  988B               	bcf	3979,4,c	;volatile
 14013  004442  968B               	bcf	3979,3,c	;volatile
 14014  004444  868B               	bsf	3979,3,c	;volatile
 14015  004446  888B               	bsf	3979,4,c	;volatile
 14016                           
 14017                           ;libraries/lcd_lowlevel.c: 71:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 14018  004448  5013               	movf	(LCD_Read@posX+1)^0,w,c
 14019  00444A  6E80               	movwf	128,c	;volatile
 14020  00444C  968B               	bcf	3979,3,c	;volatile
 14021  00444E  868B               	bsf	3979,3,c	;volatile
 14022  004450                     
 14023                           ;libraries/lcd_lowlevel.c: 72:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 14024  004450  C012  FF80         	movff	LCD_Read@posX,3968	;volatile
 14025  004454  968B               	bcf	3979,3,c	;volatile
 14026  004456  868B               	bsf	3979,3,c	;volatile
 14027                           
 14028                           ;libraries/lcd_lowlevel.c: 73:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 14029  004458  0E00               	movlw	0
 14030  00445A  6E80               	movwf	128,c	;volatile
 14031  00445C  968B               	bcf	3979,3,c	;volatile
 14032  00445E  868B               	bsf	3979,3,c	;volatile
 14033                           
 14034                           ;libraries/lcd_lowlevel.c: 74:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 14035  004460  0EEF               	movlw	239
 14036  004462  6E80               	movwf	128,c	;volatile
 14037  004464  968B               	bcf	3979,3,c	;volatile
 14038  004466  868B               	bsf	3979,3,c	;volatile
 14039                           
 14040                           ;libraries/lcd_lowlevel.c: 76:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 14041  004468  0E2B               	movlw	43
 14042  00446A  6E80               	movwf	128,c	;volatile
 14043  00446C  988B               	bcf	3979,4,c	;volatile
 14044  00446E  968B               	bcf	3979,3,c	;volatile
 14045  004470  868B               	bsf	3979,3,c	;volatile
 14046  004472  888B               	bsf	3979,4,c	;volatile
 14047                           
 14048                           ;libraries/lcd_lowlevel.c: 77:   PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 14049  004474  5015               	movf	(LCD_Read@posY+1)^0,w,c
 14050  004476  6E80               	movwf	128,c	;volatile
 14051  004478  968B               	bcf	3979,3,c	;volatile
 14052  00447A  868B               	bsf	3979,3,c	;volatile
 14053  00447C                     
 14054                           ;libraries/lcd_lowlevel.c: 78:   PORTA = posY; LATC3 = 0; LATC3 = 1;;
 14055  00447C  C014  FF80         	movff	LCD_Read@posY,3968	;volatile
 14056  004480  968B               	bcf	3979,3,c	;volatile
 14057  004482  868B               	bsf	3979,3,c	;volatile
 14058                           
 14059                           ;libraries/lcd_lowlevel.c: 79:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 14060  004484  0E01               	movlw	1
 14061  004486  6E80               	movwf	128,c	;volatile
 14062  004488  968B               	bcf	3979,3,c	;volatile
 14063  00448A  868B               	bsf	3979,3,c	;volatile
 14064                           
 14065                           ;libraries/lcd_lowlevel.c: 80:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 14066  00448C  0E3F               	movlw	63
 14067  00448E  6E80               	movwf	128,c	;volatile
 14068  004490  968B               	bcf	3979,3,c	;volatile
 14069  004492  868B               	bsf	3979,3,c	;volatile
 14070                           
 14071                           ;libraries/lcd_lowlevel.c: 82:   PORTA = 0x2E; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 14072  004494  0E2E               	movlw	46
 14073  004496  6E80               	movwf	128,c	;volatile
 14074  004498  988B               	bcf	3979,4,c	;volatile
 14075  00449A  968B               	bcf	3979,3,c	;volatile
 14076  00449C  868B               	bsf	3979,3,c	;volatile
 14077  00449E  888B               	bsf	3979,4,c	;volatile
 14078  0044A0                     
 14079                           ;libraries/lcd_lowlevel.c: 83:  TRISA = 0xFF;
 14080  0044A0  6892               	setf	146,c	;volatile
 14081  0044A2                     
 14082                           ;libraries/lcd_lowlevel.c: 84:  LATC2 = 0;
 14083  0044A2  948B               	bcf	3979,2,c	;volatile
 14084  0044A4                     
 14085                           ;libraries/lcd_lowlevel.c: 85:   __nop();
 14086  0044A4  F000               	nop	
 14087  0044A6                     
 14088                           ;libraries/lcd_lowlevel.c: 86:  LATC2 = 1;
 14089  0044A6  848B               	bsf	3979,2,c	;volatile
 14090  0044A8                     
 14091                           ;libraries/lcd_lowlevel.c: 87:  TRISA = 0xFF;
 14092  0044A8  6892               	setf	146,c	;volatile
 14093  0044AA                     
 14094                           ;libraries/lcd_lowlevel.c: 88:  LATC2 = 0;
 14095  0044AA  948B               	bcf	3979,2,c	;volatile
 14096  0044AC                     
 14097                           ;libraries/lcd_lowlevel.c: 89:   __nop();
 14098  0044AC  F000               	nop	
 14099  0044AE                     
 14100                           ;libraries/lcd_lowlevel.c: 90:  temp16 = PORTA;
 14101  0044AE  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 14102  0044B2  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 14103  0044B4                     
 14104                           ;libraries/lcd_lowlevel.c: 91:  LATC2 = 1;
 14105  0044B4  848B               	bsf	3979,2,c	;volatile
 14106  0044B6                     
 14107                           ;libraries/lcd_lowlevel.c: 92:   temp16 = temp16 >> 3;
 14108  0044B6  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 14109  0044BA  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 14110  0044BE  90D8               	bcf	status,0,c
 14111  0044C0  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 14112  0044C2  3216               	rrcf	??_LCD_Read^0,f,c
 14113  0044C4  90D8               	bcf	status,0,c
 14114  0044C6  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 14115  0044C8  3216               	rrcf	??_LCD_Read^0,f,c
 14116  0044CA  90D8               	bcf	status,0,c
 14117  0044CC  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 14118  0044CE  3216               	rrcf	??_LCD_Read^0,f,c
 14119  0044D0  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 14120  0044D4  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 14121  0044D8                     
 14122                           ;libraries/lcd_lowlevel.c: 93:   color = temp16 << 11;
 14123  0044D8  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 14124  0044DC  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 14125  0044E0  0E0B               	movlw	11
 14126  0044E2                     u6195:
 14127  0044E2  90D8               	bcf	status,0,c
 14128  0044E4  3616               	rlcf	??_LCD_Read^0,f,c
 14129  0044E6  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 14130  0044E8  2EE8               	decfsz	wreg,f,c
 14131  0044EA  EF71  F022         	goto	u6195
 14132  0044EE  C016  F018         	movff	??_LCD_Read,LCD_Read@color
 14133  0044F2  C017  F019         	movff	??_LCD_Read+1,LCD_Read@color+1
 14134  0044F6                     
 14135                           ;libraries/lcd_lowlevel.c: 94:  LATC2 = 0;
 14136  0044F6  948B               	bcf	3979,2,c	;volatile
 14137  0044F8                     
 14138                           ;libraries/lcd_lowlevel.c: 95:   __nop();
 14139  0044F8  F000               	nop	
 14140  0044FA                     
 14141                           ;libraries/lcd_lowlevel.c: 96:  temp16 = PORTA;
 14142  0044FA  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 14143  0044FE  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 14144  004500                     
 14145                           ;libraries/lcd_lowlevel.c: 97:  LATC2 = 1;
 14146  004500  848B               	bsf	3979,2,c	;volatile
 14147  004502                     
 14148                           ;libraries/lcd_lowlevel.c: 98:   temp16 = temp16 >> 2;
 14149  004502  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 14150  004506  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 14151  00450A  90D8               	bcf	status,0,c
 14152  00450C  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 14153  00450E  3216               	rrcf	??_LCD_Read^0,f,c
 14154  004510  90D8               	bcf	status,0,c
 14155  004512  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 14156  004514  3216               	rrcf	??_LCD_Read^0,f,c
 14157  004516  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 14158  00451A  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 14159  00451E                     
 14160                           ;libraries/lcd_lowlevel.c: 99:   color |= temp16 << 5;
 14161  00451E  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 14162  004522  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 14163  004526  0E05               	movlw	5
 14164  004528                     u6205:
 14165  004528  90D8               	bcf	status,0,c
 14166  00452A  3616               	rlcf	??_LCD_Read^0,f,c
 14167  00452C  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 14168  00452E  2EE8               	decfsz	wreg,f,c
 14169  004530  EF94  F022         	goto	u6205
 14170  004534  5016               	movf	??_LCD_Read^0,w,c
 14171  004536  1218               	iorwf	LCD_Read@color^0,f,c
 14172  004538  5017               	movf	(??_LCD_Read+1)^0,w,c
 14173  00453A  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 14174  00453C                     
 14175                           ;libraries/lcd_lowlevel.c: 100:  LATC2 = 0;
 14176  00453C  948B               	bcf	3979,2,c	;volatile
 14177  00453E                     
 14178                           ;libraries/lcd_lowlevel.c: 101:   __nop();
 14179  00453E  F000               	nop	
 14180  004540                     
 14181                           ;libraries/lcd_lowlevel.c: 102:  temp16 |= PORTA;
 14182  004540  5080               	movf	128,w,c	;volatile
 14183  004542  121A               	iorwf	LCD_Read@temp16^0,f,c
 14184  004544                     
 14185                           ;libraries/lcd_lowlevel.c: 103:  LATC2 = 1;
 14186  004544  848B               	bsf	3979,2,c	;volatile
 14187  004546                     
 14188                           ;libraries/lcd_lowlevel.c: 104:   temp16 = temp16 >> 3;
 14189  004546  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 14190  00454A  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 14191  00454E  90D8               	bcf	status,0,c
 14192  004550  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 14193  004552  3216               	rrcf	??_LCD_Read^0,f,c
 14194  004554  90D8               	bcf	status,0,c
 14195  004556  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 14196  004558  3216               	rrcf	??_LCD_Read^0,f,c
 14197  00455A  90D8               	bcf	status,0,c
 14198  00455C  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 14199  00455E  3216               	rrcf	??_LCD_Read^0,f,c
 14200  004560  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 14201  004564  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 14202  004568                     
 14203                           ;libraries/lcd_lowlevel.c: 105:   color |= temp16;
 14204  004568  501A               	movf	LCD_Read@temp16^0,w,c
 14205  00456A  1218               	iorwf	LCD_Read@color^0,f,c
 14206  00456C  501B               	movf	(LCD_Read@temp16+1)^0,w,c
 14207  00456E  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 14208  004570                     
 14209                           ;libraries/lcd_lowlevel.c: 106:  TRISA = 0x00;
 14210  004570  0E00               	movlw	0
 14211  004572  6E92               	movwf	146,c	;volatile
 14212  004574                     
 14213                           ;libraries/lcd_lowlevel.c: 107:  return color;
 14214  004574  C018  F012         	movff	LCD_Read@color,?_LCD_Read
 14215  004578  C019  F013         	movff	LCD_Read@color+1,?_LCD_Read+1
 14216  00457C  0012               	return		;funcret
 14217  00457E                     __end_of_LCD_Read:
 14218                           	callstack 0
 14219                           
 14220 ;; *************** function _LCD_Bitmap *****************
 14221 ;; Defined at:
 14222 ;;		line 823 in file "libraries/lcd_highlevel.c"
 14223 ;; Parameters:    Size  Location     Type
 14224 ;;  bmpPtr          2   38[COMRAM] PTR const unsigned char 
 14225 ;;		 -> STR_8(9), STR_7(2), STR_6(9), STR_5(9), 
 14226 ;;		 -> STR_4(11), 
 14227 ;;  posX            2   40[COMRAM] unsigned short 
 14228 ;;  posY            2   42[COMRAM] unsigned short 
 14229 ;; Auto vars:     Size  Location     Type
 14230 ;;  bfOffBits       4    0[BANK0 ] unsigned long 
 14231 ;;  i               2   26[BANK0 ] unsigned short 
 14232 ;;  jumpColor       2   24[BANK0 ] unsigned short 
 14233 ;;  biWidth         2   22[BANK0 ] unsigned short 
 14234 ;;  newY            2   19[BANK0 ] unsigned short 
 14235 ;;  strPtr          2   17[BANK0 ] PTR struct .
 14236 ;;		 -> STR_8(9), STR_7(2), STR_6(9), STR_5(9), 
 14237 ;;		 -> STR_4(11), 
 14238 ;;  curXPos         2   15[BANK0 ] unsigned short 
 14239 ;;  color           2   13[BANK0 ] unsigned short 
 14240 ;;  biHeight        2   11[BANK0 ] unsigned short 
 14241 ;;  colorTablePt    2    9[BANK0 ] PTR unsigned char 
 14242 ;;		 -> STR_8(9), STR_7(2), STR_6(9), STR_5(9), 
 14243 ;;		 -> STR_4(11), 
 14244 ;;  curYPos         2    7[BANK0 ] unsigned short 
 14245 ;;  jumpCount       2    5[BANK0 ] unsigned short 
 14246 ;;  pixelCount      1   21[BANK0 ] unsigned char 
 14247 ;;  endOfImage      1    4[BANK0 ] unsigned char 
 14248 ;; Return value:  Size  Location     Type
 14249 ;;                  1    wreg      unsigned char 
 14250 ;; Registers used:
 14251 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14252 ;; Tracked objects:
 14253 ;;		On entry : 0/0
 14254 ;;		On exit  : 0/0
 14255 ;;		Unchanged: 0/0
 14256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14257 ;;      Params:         6       0       0       0       0       0       0
 14258 ;;      Locals:         0      28       0       0       0       0       0
 14259 ;;      Temps:          4       0       0       0       0       0       0
 14260 ;;      Totals:        10      28       0       0       0       0       0
 14261 ;;Total ram usage:       38 bytes
 14262 ;; Hardware stack levels used: 1
 14263 ;; Hardware stack levels required when called: 5
 14264 ;; This function calls:
 14265 ;;		_RGB2LCD
 14266 ;;		___lwdiv
 14267 ;;		___lwmod
 14268 ;;		___wmul
 14269 ;; This function is called by:
 14270 ;;		_LCD_ButtonDraw
 14271 ;; This function uses a non-reentrant model
 14272 ;;
 14273                           
 14274                           	psect	text54
 14275  0009D0                     __ptext54:
 14276                           	callstack 0
 14277  0009D0                     _LCD_Bitmap:
 14278                           	callstack 19
 14279  0009D0                     
 14280                           ;libraries/lcd_highlevel.c: 823: uint8_t LCD_Bitmap(const uint8_t * bmpPtr, uint16_t pos
      +                          X, uint16_t posY);libraries/lcd_highlevel.c: 824: {;libraries/lcd_highlevel.c: 825:   ui
      +                          nt32_t bfOffBits;;libraries/lcd_highlevel.c: 826:   uint16_t biWidth, biHeight;;librarie
      +                          s/lcd_highlevel.c: 827:   uint8_t * colorTablePtr;;libraries/lcd_highlevel.c: 828:   uin
      +                          t8_t endOfImage;;libraries/lcd_highlevel.c: 829:   uint16_t i,curXPos,curYPos;;libraries
      +                          /lcd_highlevel.c: 830:   uint8_t pixelCount;;libraries/lcd_highlevel.c: 831:   uint16_t 
      +                          color;
 14281  0009D0  C027  F071         	movff	LCD_Bitmap@bmpPtr,LCD_Bitmap@strPtr
 14282  0009D4  C028  F072         	movff	LCD_Bitmap@bmpPtr+1,LCD_Bitmap@strPtr+1
 14283  0009D8                     
 14284                           ;libraries/lcd_highlevel.c: 839:   bfOffBits = strPtr->bfOffBits;
 14285  0009D8  0E0A               	movlw	10
 14286  0009DA  0100               	movlb	0	; () banked
 14287  0009DC  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 14288  0009DE  6E2D               	movwf	??_LCD_Bitmap^0,c
 14289  0009E0  0E00               	movlw	0
 14290  0009E2  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 14291  0009E4  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14292  0009E6  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14293  0009EA  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14294  0009EE                     	if	0	;tblptru may be non-zero
 14295  0009EE                     	endif
 14296  0009EE                     	if	0	;tblptru may be non-zero
 14297  0009EE                     	endif
 14298  0009EE  0009               	tblrd		*+
 14299  0009F0  CFF5 F060          	movff	tablat,LCD_Bitmap@bfOffBits
 14300  0009F4  0009               	tblrd		*+
 14301  0009F6  CFF5 F061          	movff	tablat,LCD_Bitmap@bfOffBits+1
 14302  0009FA  0009               	tblrd		*+
 14303  0009FC  CFF5 F062          	movff	tablat,LCD_Bitmap@bfOffBits+2
 14304  000A00  000A               	tblrd		*-
 14305  000A02  CFF5 F063          	movff	tablat,LCD_Bitmap@bfOffBits+3
 14306  000A06                     
 14307                           ; BSR set to: 0
 14308                           ;libraries/lcd_highlevel.c: 840:   biWidth = strPtr->biWidth;
 14309  000A06  0E12               	movlw	18
 14310  000A08  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 14311  000A0A  6E2D               	movwf	??_LCD_Bitmap^0,c
 14312  000A0C  0E00               	movlw	0
 14313  000A0E  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 14314  000A10  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14315  000A12  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14316  000A16  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14317  000A1A                     	if	0	;tblptru may be non-zero
 14318  000A1A                     	endif
 14319  000A1A                     	if	0	;tblptru may be non-zero
 14320  000A1A                     	endif
 14321  000A1A  0009               	tblrd		*+
 14322  000A1C  CFF5 F076          	movff	tablat,LCD_Bitmap@biWidth
 14323  000A20  000A               	tblrd		*-
 14324  000A22  CFF5 F077          	movff	tablat,LCD_Bitmap@biWidth+1
 14325  000A26                     
 14326                           ; BSR set to: 0
 14327                           ;libraries/lcd_highlevel.c: 841:   biHeight = strPtr->biHeight;
 14328  000A26  0E16               	movlw	22
 14329  000A28  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 14330  000A2A  6E2D               	movwf	??_LCD_Bitmap^0,c
 14331  000A2C  0E00               	movlw	0
 14332  000A2E  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 14333  000A30  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14334  000A32  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14335  000A36  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14336  000A3A                     	if	0	;tblptru may be non-zero
 14337  000A3A                     	endif
 14338  000A3A                     	if	0	;tblptru may be non-zero
 14339  000A3A                     	endif
 14340  000A3A  0009               	tblrd		*+
 14341  000A3C  CFF5 F06B          	movff	tablat,LCD_Bitmap@biHeight
 14342  000A40  000A               	tblrd		*-
 14343  000A42  CFF5 F06C          	movff	tablat,LCD_Bitmap@biHeight+1
 14344  000A46                     
 14345                           ; BSR set to: 0
 14346                           ;libraries/lcd_highlevel.c: 842:   if((strPtr->biBitCount != 8) ||
 14347  000A46  0E1C               	movlw	28
 14348  000A48  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 14349  000A4A  6E2D               	movwf	??_LCD_Bitmap^0,c
 14350  000A4C  0E00               	movlw	0
 14351  000A4E  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 14352  000A50  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14353  000A52  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14354  000A56  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14355  000A5A                     	if	0	;tblptru may be non-zero
 14356  000A5A                     	endif
 14357  000A5A                     	if	0	;tblptru may be non-zero
 14358  000A5A                     	endif
 14359  000A5A  0009               	tblrd		*+
 14360  000A5C  0E08               	movlw	8
 14361  000A5E  18F5               	xorwf	tablat,w,c
 14362  000A60  0009               	tblrd		*+
 14363  000A62  10F5               	iorwf	tablat,w,c
 14364  000A64  A4D8               	btfss	status,2,c
 14365  000A66  EF37  F005         	goto	u6631
 14366  000A6A  EF39  F005         	goto	u6630
 14367  000A6E                     u6631:
 14368  000A6E  EFE2  F007         	goto	l332
 14369  000A72                     u6630:
 14370  000A72                     
 14371                           ; BSR set to: 0
 14372  000A72  0E1E               	movlw	30
 14373  000A74  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 14374  000A76  6E2D               	movwf	??_LCD_Bitmap^0,c
 14375  000A78  0E00               	movlw	0
 14376  000A7A  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 14377  000A7C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14378  000A7E  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14379  000A82  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14380  000A86                     	if	0	;tblptru may be non-zero
 14381  000A86                     	endif
 14382  000A86                     	if	0	;tblptru may be non-zero
 14383  000A86                     	endif
 14384  000A86  0009               	tblrd		*+
 14385  000A88  04F5               	decf	tablat,w,c
 14386  000A8A  0009               	tblrd		*+
 14387  000A8C  10F5               	iorwf	tablat,w,c
 14388  000A8E  0009               	tblrd		*+
 14389  000A90  10F5               	iorwf	tablat,w,c
 14390  000A92  0009               	tblrd		*+
 14391  000A94  10F5               	iorwf	tablat,w,c
 14392  000A96  B4D8               	btfsc	status,2,c
 14393  000A98  EF50  F005         	goto	u6641
 14394  000A9C  EF52  F005         	goto	u6640
 14395  000AA0                     u6641:
 14396  000AA0  EF54  F005         	goto	l9104
 14397  000AA4                     u6640:
 14398  000AA4  EFE2  F007         	goto	l332
 14399  000AA8                     l9104:
 14400                           
 14401                           ; BSR set to: 0
 14402                           ;libraries/lcd_highlevel.c: 847:   if(((posX + biWidth) > (240)) ||
 14403  000AA8  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 14404  000AAA  2429               	addwf	LCD_Bitmap@posX^0,w,c
 14405  000AAC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14406  000AAE  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14407  000AB0  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 14408  000AB2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14409  000AB4  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14410  000AB6  E107               	bnz	u6651
 14411  000AB8  0EF1               	movlw	241
 14412  000ABA  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 14413  000ABC  B0D8               	btfsc	status,0,c
 14414  000ABE  EF63  F005         	goto	u6651
 14415  000AC2  EF65  F005         	goto	u6650
 14416  000AC6                     u6651:
 14417  000AC6  EFE2  F007         	goto	l332
 14418  000ACA                     u6650:
 14419  000ACA                     
 14420                           ; BSR set to: 0
 14421  000ACA  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14422  000ACC  242B               	addwf	LCD_Bitmap@posY^0,w,c
 14423  000ACE  6E2D               	movwf	??_LCD_Bitmap^0,c
 14424  000AD0  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14425  000AD2  202C               	addwfc	(LCD_Bitmap@posY+1)^0,w,c
 14426  000AD4  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14427  000AD6  0E41               	movlw	65
 14428  000AD8  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 14429  000ADA  0E01               	movlw	1
 14430  000ADC  582E               	subwfb	(??_LCD_Bitmap+1)^0,w,c
 14431  000ADE  A0D8               	btfss	status,0,c
 14432  000AE0  EF74  F005         	goto	u6661
 14433  000AE4  EF76  F005         	goto	u6660
 14434  000AE8                     u6661:
 14435  000AE8  EF78  F005         	goto	l9108
 14436  000AEC                     u6660:
 14437  000AEC  EFE2  F007         	goto	l332
 14438  000AF0                     l9108:
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;libraries/lcd_highlevel.c: 853:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14442  000AF0  0E36               	movlw	54
 14443  000AF2  6E80               	movwf	128,c	;volatile
 14444  000AF4                     
 14445                           ; BSR set to: 0
 14446  000AF4  988B               	bcf	3979,4,c	;volatile
 14447  000AF6                     
 14448                           ; BSR set to: 0
 14449  000AF6  968B               	bcf	3979,3,c	;volatile
 14450  000AF8                     
 14451                           ; BSR set to: 0
 14452  000AF8  868B               	bsf	3979,3,c	;volatile
 14453  000AFA                     
 14454                           ; BSR set to: 0
 14455  000AFA  888B               	bsf	3979,4,c	;volatile
 14456                           
 14457                           ;libraries/lcd_highlevel.c: 855:   PORTA = 0b10000000; LATC3 = 0; LATC3 = 1;;
 14458  000AFC  0E80               	movlw	128
 14459  000AFE  6E80               	movwf	128,c	;volatile
 14460  000B00                     
 14461                           ; BSR set to: 0
 14462  000B00  968B               	bcf	3979,3,c	;volatile
 14463  000B02                     
 14464                           ; BSR set to: 0
 14465  000B02  868B               	bsf	3979,3,c	;volatile
 14466  000B04                     
 14467                           ; BSR set to: 0
 14468                           ;libraries/lcd_highlevel.c: 857:   colorTablePtr = (uint8_t *)bmpPtr + 54;
 14469  000B04  0E36               	movlw	54
 14470  000B06  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14471  000B08  6F69               	movwf	LCD_Bitmap@colorTablePtr& (0+255),b
 14472  000B0A  0E00               	movlw	0
 14473  000B0C  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14474  000B0E  6F6A               	movwf	(LCD_Bitmap@colorTablePtr+1)& (0+255),b
 14475  000B10                     
 14476                           ; BSR set to: 0
 14477                           ;libraries/lcd_highlevel.c: 858:   bmpPtr += bfOffBits;
 14478  000B10  5160               	movf	LCD_Bitmap@bfOffBits& (0+255),w,b
 14479  000B12  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14480  000B14  5161               	movf	(LCD_Bitmap@bfOffBits+1)& (0+255),w,b
 14481  000B16  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14482                           
 14483                           ;libraries/lcd_highlevel.c: 859:   endOfImage = 0;
 14484  000B18  0E00               	movlw	0
 14485  000B1A  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 14486  000B1C                     
 14487                           ; BSR set to: 0
 14488                           ;libraries/lcd_highlevel.c: 860:   jumpColor = RGB2LCD(colorTablePtr);
 14489  000B1C  C069  F012         	movff	LCD_Bitmap@colorTablePtr,RGB2LCD@colorTableEntry
 14490  000B20  C06A  F013         	movff	LCD_Bitmap@colorTablePtr+1,RGB2LCD@colorTableEntry+1
 14491  000B24  EC06  F02C         	call	_RGB2LCD	;wreg free
 14492  000B28  C012  F078         	movff	?_RGB2LCD,LCD_Bitmap@jumpColor
 14493  000B2C  C013  F079         	movff	?_RGB2LCD+1,LCD_Bitmap@jumpColor+1
 14494  000B30                     
 14495                           ;libraries/lcd_highlevel.c: 862:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14496  000B30  0E2A               	movlw	42
 14497  000B32  6E80               	movwf	128,c	;volatile
 14498  000B34  988B               	bcf	3979,4,c	;volatile
 14499  000B36  968B               	bcf	3979,3,c	;volatile
 14500  000B38  868B               	bsf	3979,3,c	;volatile
 14501  000B3A  888B               	bsf	3979,4,c	;volatile
 14502  000B3C                     
 14503                           ;libraries/lcd_highlevel.c: 863:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 14504  000B3C  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 14505  000B3E  6E80               	movwf	128,c	;volatile
 14506  000B40  968B               	bcf	3979,3,c	;volatile
 14507  000B42  868B               	bsf	3979,3,c	;volatile
 14508  000B44                     
 14509                           ;libraries/lcd_highlevel.c: 864:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 14510  000B44  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 14511  000B48  968B               	bcf	3979,3,c	;volatile
 14512  000B4A  868B               	bsf	3979,3,c	;volatile
 14513  000B4C                     
 14514                           ;libraries/lcd_highlevel.c: 865:   posX = posX + biWidth-1;
 14515  000B4C  0100               	movlb	0	; () banked
 14516  000B4E  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 14517  000B50  2429               	addwf	LCD_Bitmap@posX^0,w,c
 14518  000B52  6E2D               	movwf	??_LCD_Bitmap^0,c
 14519  000B54  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14520  000B56  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 14521  000B58  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14522  000B5A  0EFF               	movlw	255
 14523  000B5C  242D               	addwf	??_LCD_Bitmap^0,w,c
 14524  000B5E  6E29               	movwf	LCD_Bitmap@posX^0,c
 14525  000B60  0EFF               	movlw	255
 14526  000B62  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14527  000B64  6E2A               	movwf	(LCD_Bitmap@posX+1)^0,c
 14528  000B66                     
 14529                           ; BSR set to: 0
 14530                           ;libraries/lcd_highlevel.c: 866:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 14531  000B66  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 14532  000B68  6E80               	movwf	128,c	;volatile
 14533  000B6A                     
 14534                           ; BSR set to: 0
 14535  000B6A  968B               	bcf	3979,3,c	;volatile
 14536  000B6C                     
 14537                           ; BSR set to: 0
 14538  000B6C  868B               	bsf	3979,3,c	;volatile
 14539  000B6E                     
 14540                           ; BSR set to: 0
 14541                           ;libraries/lcd_highlevel.c: 867:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 14542  000B6E  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 14543  000B72                     
 14544                           ; BSR set to: 0
 14545  000B72  968B               	bcf	3979,3,c	;volatile
 14546  000B74                     
 14547                           ; BSR set to: 0
 14548  000B74  868B               	bsf	3979,3,c	;volatile
 14549  000B76                     
 14550                           ; BSR set to: 0
 14551                           ;libraries/lcd_highlevel.c: 869:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14552  000B76  0E2B               	movlw	43
 14553  000B78  6E80               	movwf	128,c	;volatile
 14554  000B7A                     
 14555                           ; BSR set to: 0
 14556  000B7A  988B               	bcf	3979,4,c	;volatile
 14557  000B7C                     
 14558                           ; BSR set to: 0
 14559  000B7C  968B               	bcf	3979,3,c	;volatile
 14560  000B7E                     
 14561                           ; BSR set to: 0
 14562  000B7E  868B               	bsf	3979,3,c	;volatile
 14563  000B80                     
 14564                           ; BSR set to: 0
 14565  000B80  888B               	bsf	3979,4,c	;volatile
 14566  000B82                     
 14567                           ; BSR set to: 0
 14568                           ;libraries/lcd_highlevel.c: 870:   newY = 320 - posY - biHeight;
 14569  000B82  C02B  F02D         	movff	LCD_Bitmap@posY,??_LCD_Bitmap
 14570  000B86  C02C  F02E         	movff	LCD_Bitmap@posY+1,??_LCD_Bitmap+1
 14571  000B8A  1E2D               	comf	??_LCD_Bitmap^0,f,c
 14572  000B8C  1E2E               	comf	(??_LCD_Bitmap+1)^0,f,c
 14573  000B8E  4A2D               	infsnz	??_LCD_Bitmap^0,f,c
 14574  000B90  2A2E               	incf	(??_LCD_Bitmap+1)^0,f,c
 14575  000B92  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14576  000B94  5E2D               	subwf	??_LCD_Bitmap^0,f,c
 14577  000B96  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14578  000B98  5A2E               	subwfb	(??_LCD_Bitmap+1)^0,f,c
 14579  000B9A  0E40               	movlw	64
 14580  000B9C  242D               	addwf	??_LCD_Bitmap^0,w,c
 14581  000B9E  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 14582  000BA0  0E01               	movlw	1
 14583  000BA2  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14584  000BA4  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 14585  000BA6                     
 14586                           ; BSR set to: 0
 14587                           ;libraries/lcd_highlevel.c: 871:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14588  000BA6  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14589  000BA8  6E80               	movwf	128,c	;volatile
 14590  000BAA                     
 14591                           ; BSR set to: 0
 14592  000BAA  968B               	bcf	3979,3,c	;volatile
 14593  000BAC                     
 14594                           ; BSR set to: 0
 14595  000BAC  868B               	bsf	3979,3,c	;volatile
 14596  000BAE                     
 14597                           ; BSR set to: 0
 14598                           ;libraries/lcd_highlevel.c: 872:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14599  000BAE  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14600  000BB2                     
 14601                           ; BSR set to: 0
 14602  000BB2  968B               	bcf	3979,3,c	;volatile
 14603  000BB4                     
 14604                           ; BSR set to: 0
 14605  000BB4  868B               	bsf	3979,3,c	;volatile
 14606  000BB6                     
 14607                           ; BSR set to: 0
 14608                           ;libraries/lcd_highlevel.c: 873:   newY = newY + biHeight-1;
 14609  000BB6  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14610  000BB8  2573               	addwf	LCD_Bitmap@newY& (0+255),w,b
 14611  000BBA  6E2D               	movwf	??_LCD_Bitmap^0,c
 14612  000BBC  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14613  000BBE  2174               	addwfc	(LCD_Bitmap@newY+1)& (0+255),w,b
 14614  000BC0  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14615  000BC2  0EFF               	movlw	255
 14616  000BC4  242D               	addwf	??_LCD_Bitmap^0,w,c
 14617  000BC6  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 14618  000BC8  0EFF               	movlw	255
 14619  000BCA  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14620  000BCC  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 14621  000BCE                     
 14622                           ; BSR set to: 0
 14623                           ;libraries/lcd_highlevel.c: 874:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14624  000BCE  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14625  000BD0  6E80               	movwf	128,c	;volatile
 14626  000BD2                     
 14627                           ; BSR set to: 0
 14628  000BD2  968B               	bcf	3979,3,c	;volatile
 14629  000BD4                     
 14630                           ; BSR set to: 0
 14631  000BD4  868B               	bsf	3979,3,c	;volatile
 14632  000BD6                     
 14633                           ; BSR set to: 0
 14634                           ;libraries/lcd_highlevel.c: 875:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14635  000BD6  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14636  000BDA                     
 14637                           ; BSR set to: 0
 14638  000BDA  968B               	bcf	3979,3,c	;volatile
 14639  000BDC                     
 14640                           ; BSR set to: 0
 14641  000BDC  868B               	bsf	3979,3,c	;volatile
 14642  000BDE                     
 14643                           ; BSR set to: 0
 14644                           ;libraries/lcd_highlevel.c: 877:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14645  000BDE  0E2C               	movlw	44
 14646  000BE0  6E80               	movwf	128,c	;volatile
 14647  000BE2                     
 14648                           ; BSR set to: 0
 14649  000BE2  988B               	bcf	3979,4,c	;volatile
 14650  000BE4                     
 14651                           ; BSR set to: 0
 14652  000BE4  968B               	bcf	3979,3,c	;volatile
 14653  000BE6                     
 14654                           ; BSR set to: 0
 14655  000BE6  868B               	bsf	3979,3,c	;volatile
 14656  000BE8                     
 14657                           ; BSR set to: 0
 14658  000BE8  888B               	bsf	3979,4,c	;volatile
 14659  000BEA                     
 14660                           ; BSR set to: 0
 14661                           ;libraries/lcd_highlevel.c: 878:   curXPos = 0;
 14662  000BEA  0E00               	movlw	0
 14663  000BEC  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14664  000BEE  0E00               	movlw	0
 14665  000BF0  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14666  000BF2                     
 14667                           ; BSR set to: 0
 14668                           ;libraries/lcd_highlevel.c: 879:   curYPos = 0;
 14669  000BF2  0E00               	movlw	0
 14670  000BF4  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14671  000BF6  0E00               	movlw	0
 14672  000BF8  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14673  000BFA                     l9216:
 14674                           
 14675                           ; BSR set to: 0
 14676                           ;libraries/lcd_highlevel.c: 881:   {;libraries/lcd_highlevel.c: 882:     if(bmpPtr[0] ==
      +                           0)
 14677  000BFA  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14678  000BFE  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14679  000C02                     	if	0	;tblptru may be non-zero
 14680  000C02                     	endif
 14681  000C02                     	if	0	;tblptru may be non-zero
 14682  000C02                     	endif
 14683  000C02  0008               	tblrd		*
 14684  000C04  50F5               	movf	tablat,w,c
 14685  000C06  0900               	iorlw	0
 14686  000C08  A4D8               	btfss	status,2,c
 14687  000C0A  EF09  F006         	goto	u6671
 14688  000C0E  EF0B  F006         	goto	u6670
 14689  000C12                     u6671:
 14690  000C12  EF86  F007         	goto	l9342
 14691  000C16                     u6670:
 14692  000C16  EF62  F007         	goto	l9340
 14693  000C1A                     l9220:
 14694                           
 14695                           ; BSR set to: 0
 14696                           ;libraries/lcd_highlevel.c: 887:           bmpPtr += 2;
 14697  000C1A  0E02               	movlw	2
 14698  000C1C  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14699  000C1E  0E00               	movlw	0
 14700  000C20  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14701  000C22                     
 14702                           ; BSR set to: 0
 14703                           ;libraries/lcd_highlevel.c: 888:           for(i=0;i<biWidth - curXPos;i++)
 14704  000C22  0E00               	movlw	0
 14705  000C24  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14706  000C26  0E00               	movlw	0
 14707  000C28  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14708  000C2A  EF21  F006         	goto	l9238
 14709  000C2E                     l9224:
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;libraries/lcd_highlevel.c: 889:           {;libraries/lcd_highlevel.c: 890:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14713  000C2E  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14714  000C30  6E80               	movwf	128,c	;volatile
 14715  000C32                     
 14716                           ; BSR set to: 0
 14717  000C32  968B               	bcf	3979,3,c	;volatile
 14718  000C34                     
 14719                           ; BSR set to: 0
 14720  000C34  868B               	bsf	3979,3,c	;volatile
 14721  000C36                     
 14722                           ; BSR set to: 0
 14723                           ;libraries/lcd_highlevel.c: 891:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14724  000C36  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14725  000C3A                     
 14726                           ; BSR set to: 0
 14727  000C3A  968B               	bcf	3979,3,c	;volatile
 14728  000C3C                     
 14729                           ; BSR set to: 0
 14730  000C3C  868B               	bsf	3979,3,c	;volatile
 14731  000C3E                     
 14732                           ; BSR set to: 0
 14733                           ;libraries/lcd_highlevel.c: 892:           }
 14734  000C3E  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14735  000C40  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14736  000C42                     l9238:
 14737                           
 14738                           ; BSR set to: 0
 14739  000C42  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14740  000C44  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14741  000C46  6E2D               	movwf	??_LCD_Bitmap^0,c
 14742  000C48  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14743  000C4A  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14744  000C4C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14745  000C4E  502D               	movf	??_LCD_Bitmap^0,w,c
 14746  000C50  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14747  000C52  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14748  000C54  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14749  000C56  A0D8               	btfss	status,0,c
 14750  000C58  EF30  F006         	goto	u6681
 14751  000C5C  EF32  F006         	goto	u6680
 14752  000C60                     u6681:
 14753  000C60  EF17  F006         	goto	l9224
 14754  000C64                     u6680:
 14755  000C64                     
 14756                           ; BSR set to: 0
 14757                           ;libraries/lcd_highlevel.c: 893:           curXPos = 0;
 14758  000C64  0E00               	movlw	0
 14759  000C66  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14760  000C68  0E00               	movlw	0
 14761  000C6A  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14762  000C6C                     
 14763                           ; BSR set to: 0
 14764                           ;libraries/lcd_highlevel.c: 894:           curYPos++;
 14765  000C6C  4B67               	infsnz	LCD_Bitmap@curYPos& (0+255),f,b
 14766  000C6E  2B68               	incf	(LCD_Bitmap@curYPos+1)& (0+255),f,b
 14767                           
 14768                           ;libraries/lcd_highlevel.c: 895:         break;
 14769  000C70  EFCF  F007         	goto	l9368
 14770  000C74                     l9244:
 14771                           
 14772                           ; BSR set to: 0
 14773                           ;libraries/lcd_highlevel.c: 897:           for(i=0;i<biWidth - curXPos;i++)
 14774  000C74  0E00               	movlw	0
 14775  000C76  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14776  000C78  0E00               	movlw	0
 14777  000C7A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14778  000C7C  EF4A  F006         	goto	l9260
 14779  000C80                     l9246:
 14780                           
 14781                           ; BSR set to: 0
 14782                           ;libraries/lcd_highlevel.c: 898:           {;libraries/lcd_highlevel.c: 899:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14783  000C80  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14784  000C82  6E80               	movwf	128,c	;volatile
 14785  000C84                     
 14786                           ; BSR set to: 0
 14787  000C84  968B               	bcf	3979,3,c	;volatile
 14788  000C86                     
 14789                           ; BSR set to: 0
 14790  000C86  868B               	bsf	3979,3,c	;volatile
 14791  000C88                     
 14792                           ; BSR set to: 0
 14793                           ;libraries/lcd_highlevel.c: 900:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14794  000C88  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14795  000C8C                     
 14796                           ; BSR set to: 0
 14797  000C8C  968B               	bcf	3979,3,c	;volatile
 14798  000C8E                     
 14799                           ; BSR set to: 0
 14800  000C8E  868B               	bsf	3979,3,c	;volatile
 14801  000C90                     
 14802                           ; BSR set to: 0
 14803                           ;libraries/lcd_highlevel.c: 901:           }
 14804  000C90  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14805  000C92  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14806  000C94                     l9260:
 14807                           
 14808                           ; BSR set to: 0
 14809  000C94  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14810  000C96  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14811  000C98  6E2D               	movwf	??_LCD_Bitmap^0,c
 14812  000C9A  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14813  000C9C  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14814  000C9E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14815  000CA0  502D               	movf	??_LCD_Bitmap^0,w,c
 14816  000CA2  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14817  000CA4  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14818  000CA6  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14819  000CA8  A0D8               	btfss	status,0,c
 14820  000CAA  EF59  F006         	goto	u6691
 14821  000CAE  EF5B  F006         	goto	u6690
 14822  000CB2                     u6691:
 14823  000CB2  EF40  F006         	goto	l9246
 14824  000CB6                     u6690:
 14825  000CB6                     
 14826                           ; BSR set to: 0
 14827                           ;libraries/lcd_highlevel.c: 902:           for(i=0;i<(biHeight - curYPos -1)*biWidth;i++
      +                          )
 14828  000CB6  0E00               	movlw	0
 14829  000CB8  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14830  000CBA  0E00               	movlw	0
 14831  000CBC  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14832  000CBE  EF6B  F006         	goto	l9278
 14833  000CC2                     l9264:
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;libraries/lcd_highlevel.c: 903:           {;libraries/lcd_highlevel.c: 904:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14837  000CC2  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14838  000CC4  6E80               	movwf	128,c	;volatile
 14839  000CC6                     
 14840                           ; BSR set to: 0
 14841  000CC6  968B               	bcf	3979,3,c	;volatile
 14842  000CC8                     
 14843                           ; BSR set to: 0
 14844  000CC8  868B               	bsf	3979,3,c	;volatile
 14845  000CCA                     
 14846                           ; BSR set to: 0
 14847                           ;libraries/lcd_highlevel.c: 905:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14848  000CCA  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14849  000CCE                     
 14850                           ; BSR set to: 0
 14851  000CCE  968B               	bcf	3979,3,c	;volatile
 14852  000CD0                     
 14853                           ; BSR set to: 0
 14854  000CD0  868B               	bsf	3979,3,c	;volatile
 14855  000CD2                     
 14856                           ; BSR set to: 0
 14857                           ;libraries/lcd_highlevel.c: 906:           }
 14858  000CD2  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14859  000CD4  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14860  000CD6                     l9278:
 14861                           
 14862                           ; BSR set to: 0
 14863  000CD6  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14864  000CD8  5D6B               	subwf	LCD_Bitmap@biHeight& (0+255),w,b
 14865  000CDA  6E2D               	movwf	??_LCD_Bitmap^0,c
 14866  000CDC  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14867  000CDE  596C               	subwfb	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14868  000CE0  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14869  000CE2  0EFF               	movlw	255
 14870  000CE4  242D               	addwf	??_LCD_Bitmap^0,w,c
 14871  000CE6  6E1A               	movwf	___wmul@multiplier^0,c
 14872  000CE8  0EFF               	movlw	255
 14873  000CEA  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14874  000CEC  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 14875  000CEE  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14876  000CF2  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14877  000CF6  EC05  F033         	call	___wmul	;wreg free
 14878  000CFA  501A               	movf	?___wmul^0,w,c
 14879  000CFC  0100               	movlb	0	; () banked
 14880  000CFE  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14881  000D00  501B               	movf	(?___wmul+1)^0,w,c
 14882  000D02  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14883  000D04  A0D8               	btfss	status,0,c
 14884  000D06  EF87  F006         	goto	u6701
 14885  000D0A  EF89  F006         	goto	u6700
 14886  000D0E                     u6701:
 14887  000D0E  EF61  F006         	goto	l9264
 14888  000D12                     u6700:
 14889  000D12                     
 14890                           ; BSR set to: 0
 14891                           ;libraries/lcd_highlevel.c: 907:           endOfImage = 1;
 14892  000D12  0E01               	movlw	1
 14893  000D14  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 14894                           
 14895                           ;libraries/lcd_highlevel.c: 908:         break;
 14896  000D16  EFCF  F007         	goto	l9368
 14897  000D1A                     l9282:
 14898                           
 14899                           ; BSR set to: 0
 14900                           ;libraries/lcd_highlevel.c: 910:           jumpCount = bmpPtr[2] + (bmpPtr[3]*biWidth);
 14901  000D1A  0E03               	movlw	3
 14902  000D1C  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14903  000D1E  6E2D               	movwf	??_LCD_Bitmap^0,c
 14904  000D20  0E00               	movlw	0
 14905  000D22  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14906  000D24  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14907  000D26  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14908  000D2A  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14909  000D2E                     	if	0	;tblptru may be non-zero
 14910  000D2E                     	endif
 14911  000D2E                     	if	0	;tblptru may be non-zero
 14912  000D2E                     	endif
 14913  000D2E  0008               	tblrd		*
 14914  000D30  50F5               	movf	tablat,w,c
 14915  000D32  6E1A               	movwf	___wmul@multiplier^0,c
 14916  000D34  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14917  000D36  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14918  000D3A  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14919  000D3E  EC05  F033         	call	___wmul	;wreg free
 14920  000D42  0E02               	movlw	2
 14921  000D44  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14922  000D46  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14923  000D48  0E00               	movlw	0
 14924  000D4A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14925  000D4C  6E30               	movwf	(??_LCD_Bitmap+3)^0,c
 14926  000D4E  C02F  FFF6         	movff	??_LCD_Bitmap+2,tblptrl
 14927  000D52  C030  FFF7         	movff	??_LCD_Bitmap+3,tblptrh
 14928  000D56                     	if	0	;tblptru may be non-zero
 14929  000D56                     	endif
 14930  000D56                     	if	0	;tblptru may be non-zero
 14931  000D56                     	endif
 14932  000D56  0008               	tblrd		*
 14933  000D58  50F5               	movf	tablat,w,c
 14934  000D5A  241A               	addwf	?___wmul^0,w,c
 14935  000D5C  0100               	movlb	0	; () banked
 14936  000D5E  6F65               	movwf	LCD_Bitmap@jumpCount& (0+255),b
 14937  000D60  0E00               	movlw	0
 14938  000D62  201B               	addwfc	(?___wmul+1)^0,w,c
 14939  000D64  6F66               	movwf	(LCD_Bitmap@jumpCount+1)& (0+255),b
 14940  000D66                     
 14941                           ; BSR set to: 0
 14942                           ;libraries/lcd_highlevel.c: 911:           for(i=0;i<jumpCount;i++)
 14943  000D66  0E00               	movlw	0
 14944  000D68  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14945  000D6A  0E00               	movlw	0
 14946  000D6C  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14947  000D6E  EFC5  F006         	goto	l9302
 14948  000D72                     l9286:
 14949                           
 14950                           ; BSR set to: 0
 14951                           ;libraries/lcd_highlevel.c: 912:           {;libraries/lcd_highlevel.c: 913:            
      +                           curXPos++;
 14952  000D72  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14953  000D74  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14954  000D76                     
 14955                           ; BSR set to: 0
 14956                           ;libraries/lcd_highlevel.c: 914:             PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 
      +                          1;;
 14957  000D76  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14958  000D78  6E80               	movwf	128,c	;volatile
 14959  000D7A                     
 14960                           ; BSR set to: 0
 14961  000D7A  968B               	bcf	3979,3,c	;volatile
 14962  000D7C                     
 14963                           ; BSR set to: 0
 14964  000D7C  868B               	bsf	3979,3,c	;volatile
 14965  000D7E                     
 14966                           ; BSR set to: 0
 14967                           ;libraries/lcd_highlevel.c: 915:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14968  000D7E  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14969  000D82                     
 14970                           ; BSR set to: 0
 14971  000D82  968B               	bcf	3979,3,c	;volatile
 14972  000D84                     
 14973                           ; BSR set to: 0
 14974  000D84  868B               	bsf	3979,3,c	;volatile
 14975  000D86                     
 14976                           ; BSR set to: 0
 14977                           ;libraries/lcd_highlevel.c: 916:           }
 14978  000D86  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14979  000D88  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14980  000D8A                     l9302:
 14981                           
 14982                           ; BSR set to: 0
 14983  000D8A  5165               	movf	LCD_Bitmap@jumpCount& (0+255),w,b
 14984  000D8C  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14985  000D8E  5166               	movf	(LCD_Bitmap@jumpCount+1)& (0+255),w,b
 14986  000D90  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14987  000D92  A0D8               	btfss	status,0,c
 14988  000D94  EFCE  F006         	goto	u6711
 14989  000D98  EFD0  F006         	goto	u6710
 14990  000D9C                     u6711:
 14991  000D9C  EFB9  F006         	goto	l9286
 14992  000DA0                     u6710:
 14993  000DA0                     
 14994                           ; BSR set to: 0
 14995                           ;libraries/lcd_highlevel.c: 917:           curYPos = curYPos + (jumpCount / biWidth);
 14996  000DA0  C065  F020         	movff	LCD_Bitmap@jumpCount,___lwdiv@dividend
 14997  000DA4  C066  F021         	movff	LCD_Bitmap@jumpCount+1,___lwdiv@dividend+1
 14998  000DA8  C076  F022         	movff	LCD_Bitmap@biWidth,___lwdiv@divisor
 14999  000DAC  C077  F023         	movff	LCD_Bitmap@biWidth+1,___lwdiv@divisor+1
 15000  000DB0  ECCF  F02F         	call	___lwdiv	;wreg free
 15001  000DB4  0100               	movlb	0	; () banked
 15002  000DB6  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 15003  000DB8  2420               	addwf	?___lwdiv^0,w,c
 15004  000DBA  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 15005  000DBC  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 15006  000DBE  2021               	addwfc	(?___lwdiv+1)^0,w,c
 15007  000DC0  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 15008                           
 15009                           ;libraries/lcd_highlevel.c: 918:           curXPos = curXPos % biWidth;
 15010  000DC2  C06F  F012         	movff	LCD_Bitmap@curXPos,___lwmod@dividend
 15011  000DC6  C070  F013         	movff	LCD_Bitmap@curXPos+1,___lwmod@dividend+1
 15012  000DCA  C076  F014         	movff	LCD_Bitmap@biWidth,___lwmod@divisor
 15013  000DCE  C077  F015         	movff	LCD_Bitmap@biWidth+1,___lwmod@divisor+1
 15014  000DD2  EC3B  F030         	call	___lwmod	;wreg free
 15015  000DD6  C012  F06F         	movff	?___lwmod,LCD_Bitmap@curXPos
 15016  000DDA  C013  F070         	movff	?___lwmod+1,LCD_Bitmap@curXPos+1
 15017  000DDE                     
 15018                           ;libraries/lcd_highlevel.c: 919:           bmpPtr += 4;
 15019  000DDE  0E04               	movlw	4
 15020  000DE0  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 15021  000DE2  0E00               	movlw	0
 15022  000DE4  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 15023                           
 15024                           ;libraries/lcd_highlevel.c: 920:         break;
 15025  000DE6  EFCF  F007         	goto	l9368
 15026  000DEA                     l9308:
 15027                           
 15028                           ; BSR set to: 0
 15029                           ;libraries/lcd_highlevel.c: 922:           pixelCount = bmpPtr[1];
 15030  000DEA  0E01               	movlw	1
 15031  000DEC  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 15032  000DEE  6E2D               	movwf	??_LCD_Bitmap^0,c
 15033  000DF0  0E00               	movlw	0
 15034  000DF2  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 15035  000DF4  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 15036  000DF6  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 15037  000DFA  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 15038  000DFE                     	if	0	;tblptru may be non-zero
 15039  000DFE                     	endif
 15040  000DFE                     	if	0	;tblptru may be non-zero
 15041  000DFE                     	endif
 15042  000DFE  0008               	tblrd		*
 15043  000E00  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 15044  000E04                     
 15045                           ; BSR set to: 0
 15046                           ;libraries/lcd_highlevel.c: 923:           for(i=0;i < pixelCount;i++)
 15047  000E04  0E00               	movlw	0
 15048  000E06  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 15049  000E08  0E00               	movlw	0
 15050  000E0A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 15051  000E0C  EF36  F007         	goto	l9330
 15052  000E10                     l9312:
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;libraries/lcd_highlevel.c: 924:           {;libraries/lcd_highlevel.c: 925:            
      +                           color = RGB2LCD(colorTablePtr+(bmpPtr[2+i]*4));
 15056  000E10  517A               	movf	LCD_Bitmap@i& (0+255),w,b
 15057  000E12  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 15058  000E14  6E2D               	movwf	??_LCD_Bitmap^0,c
 15059  000E16  517B               	movf	(LCD_Bitmap@i+1)& (0+255),w,b
 15060  000E18  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 15061  000E1A  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 15062  000E1C  0E02               	movlw	2
 15063  000E1E  262D               	addwf	??_LCD_Bitmap^0,f,c
 15064  000E20  0E00               	movlw	0
 15065  000E22  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 15066  000E24  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 15067  000E28  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 15068  000E2C                     	if	0	;tblptru may be non-zero
 15069  000E2C                     	endif
 15070  000E2C                     	if	0	;tblptru may be non-zero
 15071  000E2C                     	endif
 15072  000E2C  0008               	tblrd		*
 15073  000E2E  50F5               	movf	tablat,w,c
 15074  000E30  0D04               	mullw	4
 15075  000E32  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 15076  000E36  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 15077  000E3A  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 15078  000E3C  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 15079  000E3E  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 15080  000E40  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 15081  000E42  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 15082  000E44  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 15083  000E46  EC06  F02C         	call	_RGB2LCD	;wreg free
 15084  000E4A  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 15085  000E4E  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 15086  000E52                     
 15087                           ;libraries/lcd_highlevel.c: 926:             curXPos++;
 15088  000E52  0100               	movlb	0	; () banked
 15089  000E54  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 15090  000E56  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 15091  000E58                     
 15092                           ; BSR set to: 0
 15093                           ;libraries/lcd_highlevel.c: 927:             PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 15094  000E58  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 15095  000E5A  6E80               	movwf	128,c	;volatile
 15096  000E5C                     
 15097                           ; BSR set to: 0
 15098  000E5C  968B               	bcf	3979,3,c	;volatile
 15099  000E5E                     
 15100                           ; BSR set to: 0
 15101  000E5E  868B               	bsf	3979,3,c	;volatile
 15102  000E60                     
 15103                           ; BSR set to: 0
 15104                           ;libraries/lcd_highlevel.c: 928:             PORTA = color; LATC3 = 0; LATC3 = 1;;
 15105  000E60  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 15106  000E64                     
 15107                           ; BSR set to: 0
 15108  000E64  968B               	bcf	3979,3,c	;volatile
 15109  000E66                     
 15110                           ; BSR set to: 0
 15111  000E66  868B               	bsf	3979,3,c	;volatile
 15112  000E68                     
 15113                           ; BSR set to: 0
 15114                           ;libraries/lcd_highlevel.c: 929:           }
 15115  000E68  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 15116  000E6A  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 15117  000E6C                     l9330:
 15118                           
 15119                           ; BSR set to: 0
 15120  000E6C  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 15121  000E6E  6E2D               	movwf	??_LCD_Bitmap^0,c
 15122  000E70  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 15123  000E72  502D               	movf	??_LCD_Bitmap^0,w,c
 15124  000E74  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 15125  000E76  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 15126  000E78  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 15127  000E7A  A0D8               	btfss	status,0,c
 15128  000E7C  EF42  F007         	goto	u6721
 15129  000E80  EF44  F007         	goto	u6720
 15130  000E84                     u6721:
 15131  000E84  EF08  F007         	goto	l9312
 15132  000E88                     u6720:
 15133  000E88                     
 15134                           ; BSR set to: 0
 15135                           ;libraries/lcd_highlevel.c: 930:           if(pixelCount < 255)
 15136  000E88  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 15137  000E8A  B4D8               	btfsc	status,2,c
 15138  000E8C  EF4A  F007         	goto	u6731
 15139  000E90  EF4C  F007         	goto	u6730
 15140  000E94                     u6731:
 15141  000E94  EF5C  F007         	goto	l9336
 15142  000E98                     u6730:
 15143  000E98                     
 15144                           ; BSR set to: 0
 15145                           ;libraries/lcd_highlevel.c: 931:           {;libraries/lcd_highlevel.c: 932:            
      +                           pixelCount = (pixelCount+1) & 0xFE;
 15146  000E98  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 15147  000E9A  0BFE               	andlw	254
 15148  000E9C  6F75               	movwf	LCD_Bitmap@pixelCount& (0+255),b
 15149                           
 15150                           ;libraries/lcd_highlevel.c: 933:             bmpPtr+=pixelCount+2;
 15151  000E9E  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 15152  000EA0  6E2D               	movwf	??_LCD_Bitmap^0,c
 15153  000EA2  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 15154  000EA4  0E02               	movlw	2
 15155  000EA6  262D               	addwf	??_LCD_Bitmap^0,f,c
 15156  000EA8  0E00               	movlw	0
 15157  000EAA  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 15158  000EAC  502D               	movf	??_LCD_Bitmap^0,w,c
 15159  000EAE  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 15160  000EB0  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 15161  000EB2  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 15162                           
 15163                           ;libraries/lcd_highlevel.c: 934:           }
 15164  000EB4  EFCF  F007         	goto	l9368
 15165  000EB8                     l9336:
 15166                           
 15167                           ; BSR set to: 0
 15168                           ;libraries/lcd_highlevel.c: 936:           {;libraries/lcd_highlevel.c: 937:            
      +                             bmpPtr += 258;
 15169  000EB8  0E02               	movlw	2
 15170  000EBA  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 15171  000EBC  0E01               	movlw	1
 15172  000EBE  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 15173  000EC0  EFCF  F007         	goto	l9368
 15174  000EC4                     l9340:
 15175                           
 15176                           ; BSR set to: 0
 15177  000EC4  0E01               	movlw	1
 15178  000EC6  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 15179  000EC8  6E2D               	movwf	??_LCD_Bitmap^0,c
 15180  000ECA  0E00               	movlw	0
 15181  000ECC  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 15182  000ECE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 15183  000ED0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 15184  000ED4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 15185  000ED8                     	if	0	;tblptru may be non-zero
 15186  000ED8                     	endif
 15187  000ED8                     	if	0	;tblptru may be non-zero
 15188  000ED8                     	endif
 15189  000ED8  0008               	tblrd		*
 15190  000EDA  50F5               	movf	tablat,w,c
 15191  000EDC  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 15192  000EDE  6A30               	clrf	(??_LCD_Bitmap+3)^0,c
 15193                           
 15194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15195                           ; Switch size 1, requested type "simple"
 15196                           ; Number of cases is 1, Range of values is 0 to 0
 15197                           ; switch strategies available:
 15198                           ; Name         Instructions Cycles
 15199                           ; simple_byte            4     3 (average)
 15200                           ;	Chosen strategy is simple_byte
 15201  000EE0  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 15202  000EE2  0A00               	xorlw	0	; case 0
 15203  000EE4  B4D8               	btfsc	status,2,c
 15204  000EE6  EF77  F007         	goto	l10910
 15205  000EEA  EFF5  F006         	goto	l9308
 15206  000EEE                     l10910:
 15207                           
 15208                           ; BSR set to: 0
 15209                           ; Switch size 1, requested type "simple"
 15210                           ; Number of cases is 3, Range of values is 0 to 2
 15211                           ; switch strategies available:
 15212                           ; Name         Instructions Cycles
 15213                           ; simple_byte           10     6 (average)
 15214                           ;	Chosen strategy is simple_byte
 15215  000EEE  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 15216  000EF0  0A00               	xorlw	0	; case 0
 15217  000EF2  B4D8               	btfsc	status,2,c
 15218  000EF4  EF0D  F006         	goto	l9220
 15219  000EF8  0A01               	xorlw	1	; case 1
 15220  000EFA  B4D8               	btfsc	status,2,c
 15221  000EFC  EF3A  F006         	goto	l9244
 15222  000F00  0A03               	xorlw	3	; case 2
 15223  000F02  B4D8               	btfsc	status,2,c
 15224  000F04  EF8D  F006         	goto	l9282
 15225  000F08  EFF5  F006         	goto	l9308
 15226  000F0C                     l9342:
 15227                           
 15228                           ; BSR set to: 0
 15229                           ;libraries/lcd_highlevel.c: 943:     {;libraries/lcd_highlevel.c: 944:       pixelCount 
      +                          = bmpPtr[0];
 15230  000F0C  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 15231  000F10  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 15232  000F14                     	if	0	;tblptru may be non-zero
 15233  000F14                     	endif
 15234  000F14                     	if	0	;tblptru may be non-zero
 15235  000F14                     	endif
 15236  000F14  0008               	tblrd		*
 15237  000F16  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 15238  000F1A                     
 15239                           ; BSR set to: 0
 15240                           ;libraries/lcd_highlevel.c: 945:       color = RGB2LCD(colorTablePtr+(bmpPtr[1]*4));
 15241  000F1A  0E01               	movlw	1
 15242  000F1C  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 15243  000F1E  6E2D               	movwf	??_LCD_Bitmap^0,c
 15244  000F20  0E00               	movlw	0
 15245  000F22  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 15246  000F24  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 15247  000F26  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 15248  000F2A  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 15249  000F2E                     	if	0	;tblptru may be non-zero
 15250  000F2E                     	endif
 15251  000F2E                     	if	0	;tblptru may be non-zero
 15252  000F2E                     	endif
 15253  000F2E  0008               	tblrd		*
 15254  000F30  50F5               	movf	tablat,w,c
 15255  000F32  0D04               	mullw	4
 15256  000F34  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 15257  000F38  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 15258  000F3C  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 15259  000F3E  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 15260  000F40  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 15261  000F42  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 15262  000F44  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 15263  000F46  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 15264  000F48  EC06  F02C         	call	_RGB2LCD	;wreg free
 15265  000F4C  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 15266  000F50  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 15267  000F54                     
 15268                           ;libraries/lcd_highlevel.c: 946:       for(i=0;i < pixelCount;i++)
 15269  000F54  0E00               	movlw	0
 15270  000F56  0100               	movlb	0	; () banked
 15271  000F58  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 15272  000F5A  0E00               	movlw	0
 15273  000F5C  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 15274  000F5E  EFBD  F007         	goto	l9364
 15275  000F62                     l9348:
 15276                           
 15277                           ; BSR set to: 0
 15278                           ;libraries/lcd_highlevel.c: 947:       {;libraries/lcd_highlevel.c: 948:         curXPos
      +                          ++;
 15279  000F62  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 15280  000F64  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 15281  000F66                     
 15282                           ; BSR set to: 0
 15283                           ;libraries/lcd_highlevel.c: 949:         PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 15284  000F66  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 15285  000F68  6E80               	movwf	128,c	;volatile
 15286  000F6A                     
 15287                           ; BSR set to: 0
 15288  000F6A  968B               	bcf	3979,3,c	;volatile
 15289  000F6C                     
 15290                           ; BSR set to: 0
 15291  000F6C  868B               	bsf	3979,3,c	;volatile
 15292  000F6E                     
 15293                           ; BSR set to: 0
 15294                           ;libraries/lcd_highlevel.c: 950:         PORTA = color; LATC3 = 0; LATC3 = 1;;
 15295  000F6E  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 15296  000F72                     
 15297                           ; BSR set to: 0
 15298  000F72  968B               	bcf	3979,3,c	;volatile
 15299  000F74                     
 15300                           ; BSR set to: 0
 15301  000F74  868B               	bsf	3979,3,c	;volatile
 15302  000F76                     
 15303                           ; BSR set to: 0
 15304                           ;libraries/lcd_highlevel.c: 951:       }
 15305  000F76  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 15306  000F78  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 15307  000F7A                     l9364:
 15308                           
 15309                           ; BSR set to: 0
 15310  000F7A  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 15311  000F7C  6E2D               	movwf	??_LCD_Bitmap^0,c
 15312  000F7E  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 15313  000F80  502D               	movf	??_LCD_Bitmap^0,w,c
 15314  000F82  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 15315  000F84  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 15316  000F86  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 15317  000F88  A0D8               	btfss	status,0,c
 15318  000F8A  EFC9  F007         	goto	u6741
 15319  000F8E  EFCB  F007         	goto	u6740
 15320  000F92                     u6741:
 15321  000F92  EFB1  F007         	goto	l9348
 15322  000F96                     u6740:
 15323  000F96                     
 15324                           ; BSR set to: 0
 15325                           ;libraries/lcd_highlevel.c: 952:       bmpPtr+=2;
 15326  000F96  0E02               	movlw	2
 15327  000F98  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 15328  000F9A  0E00               	movlw	0
 15329  000F9C  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 15330  000F9E                     l9368:
 15331                           
 15332                           ;libraries/lcd_highlevel.c: 954:   }while(endOfImage == 0);
 15333  000F9E  0100               	movlb	0	; () banked
 15334  000FA0  5164               	movf	LCD_Bitmap@endOfImage& (0+255),w,b
 15335  000FA2  B4D8               	btfsc	status,2,c
 15336  000FA4  EFD6  F007         	goto	u6751
 15337  000FA8  EFD8  F007         	goto	u6750
 15338  000FAC                     u6751:
 15339  000FAC  EFFD  F005         	goto	l9216
 15340  000FB0                     u6750:
 15341  000FB0                     
 15342                           ; BSR set to: 0
 15343                           ;libraries/lcd_highlevel.c: 955:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 15344  000FB0  0E36               	movlw	54
 15345  000FB2  6E80               	movwf	128,c	;volatile
 15346  000FB4                     
 15347                           ; BSR set to: 0
 15348  000FB4  988B               	bcf	3979,4,c	;volatile
 15349  000FB6                     
 15350                           ; BSR set to: 0
 15351  000FB6  968B               	bcf	3979,3,c	;volatile
 15352  000FB8                     
 15353                           ; BSR set to: 0
 15354  000FB8  868B               	bsf	3979,3,c	;volatile
 15355  000FBA                     
 15356                           ; BSR set to: 0
 15357  000FBA  888B               	bsf	3979,4,c	;volatile
 15358                           
 15359                           ;libraries/lcd_highlevel.c: 957:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
 15360  000FBC  0E00               	movlw	0
 15361  000FBE  6E80               	movwf	128,c	;volatile
 15362  000FC0                     
 15363                           ; BSR set to: 0
 15364  000FC0  968B               	bcf	3979,3,c	;volatile
 15365  000FC2                     
 15366                           ; BSR set to: 0
 15367  000FC2  868B               	bsf	3979,3,c	;volatile
 15368  000FC4                     l332:
 15369                           
 15370                           ; BSR set to: 0
 15371  000FC4  0012               	return		;funcret
 15372  000FC6                     __end_of_LCD_Bitmap:
 15373                           	callstack 0
 15374                           
 15375 ;; *************** function ___lwmod *****************
 15376 ;; Defined at:
 15377 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 15378 ;; Parameters:    Size  Location     Type
 15379 ;;  dividend        2   17[COMRAM] unsigned int 
 15380 ;;  divisor         2   19[COMRAM] unsigned int 
 15381 ;; Auto vars:     Size  Location     Type
 15382 ;;  counter         1   21[COMRAM] unsigned char 
 15383 ;; Return value:  Size  Location     Type
 15384 ;;                  2   17[COMRAM] unsigned int 
 15385 ;; Registers used:
 15386 ;;		wreg, status,2, status,0
 15387 ;; Tracked objects:
 15388 ;;		On entry : 0/0
 15389 ;;		On exit  : 0/0
 15390 ;;		Unchanged: 0/0
 15391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15392 ;;      Params:         4       0       0       0       0       0       0
 15393 ;;      Locals:         1       0       0       0       0       0       0
 15394 ;;      Temps:          0       0       0       0       0       0       0
 15395 ;;      Totals:         5       0       0       0       0       0       0
 15396 ;;Total ram usage:        5 bytes
 15397 ;; Hardware stack levels used: 1
 15398 ;; Hardware stack levels required when called: 4
 15399 ;; This function calls:
 15400 ;;		Nothing
 15401 ;; This function is called by:
 15402 ;;		_LCD_Bitmap
 15403 ;; This function uses a non-reentrant model
 15404 ;;
 15405                           
 15406                           	psect	text55
 15407  006076                     __ptext55:
 15408                           	callstack 0
 15409  006076                     ___lwmod:
 15410                           	callstack 19
 15411  006076  5014               	movf	___lwmod@divisor^0,w,c
 15412  006078  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
 15413  00607A  B4D8               	btfsc	status,2,c
 15414  00607C  EF42  F030         	goto	u6401
 15415  006080  EF44  F030         	goto	u6400
 15416  006084                     u6401:
 15417  006084  EF68  F030         	goto	l1347
 15418  006088                     u6400:
 15419  006088  0E01               	movlw	1
 15420  00608A  6E16               	movwf	___lwmod@counter^0,c
 15421  00608C  EF4C  F030         	goto	l8800
 15422  006090                     l8798:
 15423  006090  90D8               	bcf	status,0,c
 15424  006092  3614               	rlcf	___lwmod@divisor^0,f,c
 15425  006094  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
 15426  006096  2A16               	incf	___lwmod@counter^0,f,c
 15427  006098                     l8800:
 15428  006098  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
 15429  00609A  EF51  F030         	goto	u6411
 15430  00609E  EF53  F030         	goto	u6410
 15431  0060A2                     u6411:
 15432  0060A2  EF48  F030         	goto	l8798
 15433  0060A6                     u6410:
 15434  0060A6                     l8802:
 15435  0060A6  5014               	movf	___lwmod@divisor^0,w,c
 15436  0060A8  5C12               	subwf	___lwmod@dividend^0,w,c
 15437  0060AA  5015               	movf	(___lwmod@divisor+1)^0,w,c
 15438  0060AC  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
 15439  0060AE  A0D8               	btfss	status,0,c
 15440  0060B0  EF5C  F030         	goto	u6421
 15441  0060B4  EF5E  F030         	goto	u6420
 15442  0060B8                     u6421:
 15443  0060B8  EF62  F030         	goto	l8806
 15444  0060BC                     u6420:
 15445  0060BC  5014               	movf	___lwmod@divisor^0,w,c
 15446  0060BE  5E12               	subwf	___lwmod@dividend^0,f,c
 15447  0060C0  5015               	movf	(___lwmod@divisor+1)^0,w,c
 15448  0060C2  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
 15449  0060C4                     l8806:
 15450  0060C4  90D8               	bcf	status,0,c
 15451  0060C6  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
 15452  0060C8  3214               	rrcf	___lwmod@divisor^0,f,c
 15453  0060CA  2E16               	decfsz	___lwmod@counter^0,f,c
 15454  0060CC  EF53  F030         	goto	l8802
 15455  0060D0                     l1347:
 15456  0060D0  C012  F012         	movff	___lwmod@dividend,?___lwmod
 15457  0060D4  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
 15458  0060D8  0012               	return		;funcret
 15459  0060DA                     __end_of___lwmod:
 15460                           	callstack 0
 15461                           
 15462 ;; *************** function ___lwdiv *****************
 15463 ;; Defined at:
 15464 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;  dividend        2   31[COMRAM] unsigned int 
 15467 ;;  divisor         2   33[COMRAM] unsigned int 
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;  quotient        2   36[COMRAM] unsigned int 
 15470 ;;  counter         1   35[COMRAM] unsigned char 
 15471 ;; Return value:  Size  Location     Type
 15472 ;;                  2   31[COMRAM] unsigned int 
 15473 ;; Registers used:
 15474 ;;		wreg, status,2, status,0
 15475 ;; Tracked objects:
 15476 ;;		On entry : 0/0
 15477 ;;		On exit  : 0/0
 15478 ;;		Unchanged: 0/0
 15479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15480 ;;      Params:         4       0       0       0       0       0       0
 15481 ;;      Locals:         3       0       0       0       0       0       0
 15482 ;;      Temps:          0       0       0       0       0       0       0
 15483 ;;      Totals:         7       0       0       0       0       0       0
 15484 ;;Total ram usage:        7 bytes
 15485 ;; Hardware stack levels used: 1
 15486 ;; Hardware stack levels required when called: 4
 15487 ;; This function calls:
 15488 ;;		Nothing
 15489 ;; This function is called by:
 15490 ;;		_LCD_SliderUpdate
 15491 ;;		_LCD_Bitmap
 15492 ;; This function uses a non-reentrant model
 15493 ;;
 15494                           
 15495                           	psect	text56
 15496  005F9E                     __ptext56:
 15497                           	callstack 0
 15498  005F9E                     ___lwdiv:
 15499                           	callstack 21
 15500  005F9E  0E00               	movlw	0
 15501  005FA0  6E26               	movwf	(___lwdiv@quotient+1)^0,c
 15502  005FA2  0E00               	movlw	0
 15503  005FA4  6E25               	movwf	___lwdiv@quotient^0,c
 15504  005FA6  5022               	movf	___lwdiv@divisor^0,w,c
 15505  005FA8  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
 15506  005FAA  B4D8               	btfsc	status,2,c
 15507  005FAC  EFDA  F02F         	goto	u6371
 15508  005FB0  EFDC  F02F         	goto	u6370
 15509  005FB4                     u6371:
 15510  005FB4  EF04  F030         	goto	l1337
 15511  005FB8                     u6370:
 15512  005FB8  0E01               	movlw	1
 15513  005FBA  6E24               	movwf	___lwdiv@counter^0,c
 15514  005FBC  EFE4  F02F         	goto	l8780
 15515  005FC0                     l8778:
 15516  005FC0  90D8               	bcf	status,0,c
 15517  005FC2  3622               	rlcf	___lwdiv@divisor^0,f,c
 15518  005FC4  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
 15519  005FC6  2A24               	incf	___lwdiv@counter^0,f,c
 15520  005FC8                     l8780:
 15521  005FC8  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
 15522  005FCA  EFE9  F02F         	goto	u6381
 15523  005FCE  EFEB  F02F         	goto	u6380
 15524  005FD2                     u6381:
 15525  005FD2  EFE0  F02F         	goto	l8778
 15526  005FD6                     u6380:
 15527  005FD6                     l8782:
 15528  005FD6  90D8               	bcf	status,0,c
 15529  005FD8  3625               	rlcf	___lwdiv@quotient^0,f,c
 15530  005FDA  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
 15531  005FDC  5022               	movf	___lwdiv@divisor^0,w,c
 15532  005FDE  5C20               	subwf	___lwdiv@dividend^0,w,c
 15533  005FE0  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 15534  005FE2  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
 15535  005FE4  A0D8               	btfss	status,0,c
 15536  005FE6  EFF7  F02F         	goto	u6391
 15537  005FEA  EFF9  F02F         	goto	u6390
 15538  005FEE                     u6391:
 15539  005FEE  EFFE  F02F         	goto	l8790
 15540  005FF2                     u6390:
 15541  005FF2  5022               	movf	___lwdiv@divisor^0,w,c
 15542  005FF4  5E20               	subwf	___lwdiv@dividend^0,f,c
 15543  005FF6  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 15544  005FF8  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
 15545  005FFA  8025               	bsf	___lwdiv@quotient^0,0,c
 15546  005FFC                     l8790:
 15547  005FFC  90D8               	bcf	status,0,c
 15548  005FFE  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
 15549  006000  3222               	rrcf	___lwdiv@divisor^0,f,c
 15550  006002  2E24               	decfsz	___lwdiv@counter^0,f,c
 15551  006004  EFEB  F02F         	goto	l8782
 15552  006008                     l1337:
 15553  006008  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 15554  00600C  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15555  006010  0012               	return		;funcret
 15556  006012                     __end_of___lwdiv:
 15557                           	callstack 0
 15558                           
 15559 ;; *************** function _RGB2LCD *****************
 15560 ;; Defined at:
 15561 ;;		line 799 in file "libraries/lcd_highlevel.c"
 15562 ;; Parameters:    Size  Location     Type
 15563 ;;  colorTableEn    2   17[COMRAM] PTR unsigned char 
 15564 ;;		 -> STR_8(9), STR_7(2), STR_6(9), STR_5(9), 
 15565 ;;		 -> STR_4(11), 
 15566 ;; Auto vars:     Size  Location     Type
 15567 ;;  color           2   29[COMRAM] unsigned short 
 15568 ;;  blue            2   27[COMRAM] unsigned short 
 15569 ;;  green           2   25[COMRAM] unsigned short 
 15570 ;;  red             2   23[COMRAM] unsigned short 
 15571 ;; Return value:  Size  Location     Type
 15572 ;;                  2   17[COMRAM] unsigned short 
 15573 ;; Registers used:
 15574 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 15575 ;; Tracked objects:
 15576 ;;		On entry : 0/0
 15577 ;;		On exit  : 0/0
 15578 ;;		Unchanged: 0/0
 15579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15580 ;;      Params:         2       0       0       0       0       0       0
 15581 ;;      Locals:         8       0       0       0       0       0       0
 15582 ;;      Temps:          4       0       0       0       0       0       0
 15583 ;;      Totals:        14       0       0       0       0       0       0
 15584 ;;Total ram usage:       14 bytes
 15585 ;; Hardware stack levels used: 1
 15586 ;; Hardware stack levels required when called: 4
 15587 ;; This function calls:
 15588 ;;		Nothing
 15589 ;; This function is called by:
 15590 ;;		_LCD_Bitmap
 15591 ;; This function uses a non-reentrant model
 15592 ;;
 15593                           
 15594                           	psect	text57
 15595  00580C                     __ptext57:
 15596                           	callstack 0
 15597  00580C                     _RGB2LCD:
 15598                           	callstack 19
 15599  00580C                     
 15600                           ;libraries/lcd_highlevel.c: 799: uint16_t RGB2LCD(uint8_t * colorTableEntry);libraries/l
      +                          cd_highlevel.c: 800: {;libraries/lcd_highlevel.c: 801:     uint16_t red,green,blue;;libr
      +                          aries/lcd_highlevel.c: 802:     uint16_t color;;libraries/lcd_highlevel.c: 804:     red 
      +                          = colorTableEntry[2] >> 3;
 15601  00580C  0E02               	movlw	2
 15602  00580E  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15603  005810  6E14               	movwf	??_RGB2LCD^0,c
 15604  005812  0E00               	movlw	0
 15605  005814  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15606  005816  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15607  005818  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15608  00581C  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15609  005820                     	if	0	;tblptru may be non-zero
 15610  005820                     	endif
 15611  005820                     	if	0	;tblptru may be non-zero
 15612  005820                     	endif
 15613  005820  0008               	tblrd		*
 15614  005822  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15615  005826  90D8               	bcf	status,0,c
 15616  005828  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15617  00582A  90D8               	bcf	status,0,c
 15618  00582C  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15619  00582E  90D8               	bcf	status,0,c
 15620  005830  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15621  005832  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15622  005834  6E18               	movwf	RGB2LCD@red^0,c
 15623  005836  6A19               	clrf	(RGB2LCD@red+1)^0,c
 15624                           
 15625                           ;libraries/lcd_highlevel.c: 805:     green = colorTableEntry[1] >> 2;
 15626  005838  0E01               	movlw	1
 15627  00583A  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15628  00583C  6E14               	movwf	??_RGB2LCD^0,c
 15629  00583E  0E00               	movlw	0
 15630  005840  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15631  005842  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15632  005844  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15633  005848  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15634  00584C                     	if	0	;tblptru may be non-zero
 15635  00584C                     	endif
 15636  00584C                     	if	0	;tblptru may be non-zero
 15637  00584C                     	endif
 15638  00584C  0008               	tblrd		*
 15639  00584E  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15640  005852  90D8               	bcf	status,0,c
 15641  005854  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15642  005856  90D8               	bcf	status,0,c
 15643  005858  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15644  00585A  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15645  00585C  6E1A               	movwf	RGB2LCD@green^0,c
 15646  00585E  6A1B               	clrf	(RGB2LCD@green+1)^0,c
 15647                           
 15648                           ;libraries/lcd_highlevel.c: 806:     blue = colorTableEntry[0] >> 3;
 15649  005860  C012  FFF6         	movff	RGB2LCD@colorTableEntry,tblptrl
 15650  005864  C013  FFF7         	movff	RGB2LCD@colorTableEntry+1,tblptrh
 15651  005868                     	if	0	;tblptru may be non-zero
 15652  005868                     	endif
 15653  005868                     	if	0	;tblptru may be non-zero
 15654  005868                     	endif
 15655  005868  0008               	tblrd		*
 15656  00586A  CFF5 F014          	movff	tablat,??_RGB2LCD
 15657  00586E  90D8               	bcf	status,0,c
 15658  005870  3214               	rrcf	??_RGB2LCD^0,f,c
 15659  005872  90D8               	bcf	status,0,c
 15660  005874  3214               	rrcf	??_RGB2LCD^0,f,c
 15661  005876  90D8               	bcf	status,0,c
 15662  005878  3214               	rrcf	??_RGB2LCD^0,f,c
 15663  00587A  5014               	movf	??_RGB2LCD^0,w,c
 15664  00587C  6E1C               	movwf	RGB2LCD@blue^0,c
 15665  00587E  6A1D               	clrf	(RGB2LCD@blue+1)^0,c
 15666  005880                     
 15667                           ;libraries/lcd_highlevel.c: 807:     color = (red << 11) | (green << 5) | (blue << 0);
 15668  005880  C01A  F014         	movff	RGB2LCD@green,??_RGB2LCD
 15669  005884  C01B  F015         	movff	RGB2LCD@green+1,??_RGB2LCD+1
 15670  005888  0E05               	movlw	5
 15671  00588A                     u6215:
 15672  00588A  90D8               	bcf	status,0,c
 15673  00588C  3614               	rlcf	??_RGB2LCD^0,f,c
 15674  00588E  3615               	rlcf	(??_RGB2LCD+1)^0,f,c
 15675  005890  2EE8               	decfsz	wreg,f,c
 15676  005892  EF45  F02C         	goto	u6215
 15677  005896  C018  F016         	movff	RGB2LCD@red,??_RGB2LCD+2
 15678  00589A  C019  F017         	movff	RGB2LCD@red+1,??_RGB2LCD+3
 15679  00589E  0E0B               	movlw	11
 15680  0058A0                     u6225:
 15681  0058A0  90D8               	bcf	status,0,c
 15682  0058A2  3616               	rlcf	(??_RGB2LCD+2)^0,f,c
 15683  0058A4  3617               	rlcf	(??_RGB2LCD+3)^0,f,c
 15684  0058A6  2EE8               	decfsz	wreg,f,c
 15685  0058A8  EF50  F02C         	goto	u6225
 15686  0058AC  5014               	movf	??_RGB2LCD^0,w,c
 15687  0058AE  1216               	iorwf	(??_RGB2LCD+2)^0,f,c
 15688  0058B0  5015               	movf	(??_RGB2LCD+1)^0,w,c
 15689  0058B2  1217               	iorwf	(??_RGB2LCD+3)^0,f,c
 15690  0058B4  501C               	movf	RGB2LCD@blue^0,w,c
 15691  0058B6  1016               	iorwf	(??_RGB2LCD+2)^0,w,c
 15692  0058B8  6E1E               	movwf	RGB2LCD@color^0,c
 15693  0058BA  501D               	movf	(RGB2LCD@blue+1)^0,w,c
 15694  0058BC  1017               	iorwf	(??_RGB2LCD+3)^0,w,c
 15695  0058BE  6E1F               	movwf	(RGB2LCD@color+1)^0,c
 15696  0058C0                     
 15697                           ;libraries/lcd_highlevel.c: 808:     return color;
 15698  0058C0  C01E  F012         	movff	RGB2LCD@color,?_RGB2LCD
 15699  0058C4  C01F  F013         	movff	RGB2LCD@color+1,?_RGB2LCD+1
 15700  0058C8  0012               	return		;funcret
 15701  0058CA                     __end_of_RGB2LCD:
 15702                           	callstack 0
 15703                           
 15704 ;; *************** function _Menu_inGameDraw *****************
 15705 ;; Defined at:
 15706 ;;		line 35 in file "class/menu.c"
 15707 ;; Parameters:    Size  Location     Type
 15708 ;;  g               2   50[BANK0 ] PTR struct GameParameter
 15709 ;;		 -> g1(218), 
 15710 ;; Auto vars:     Size  Location     Type
 15711 ;;		None
 15712 ;; Return value:  Size  Location     Type
 15713 ;;                  1    wreg      void 
 15714 ;; Registers used:
 15715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15716 ;; Tracked objects:
 15717 ;;		On entry : 0/0
 15718 ;;		On exit  : 0/0
 15719 ;;		Unchanged: 0/0
 15720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15721 ;;      Params:         0       2       0       0       0       0       0
 15722 ;;      Locals:         0       0       0       0       0       0       0
 15723 ;;      Temps:          0       0       0       0       0       0       0
 15724 ;;      Totals:         0       2       0       0       0       0       0
 15725 ;;Total ram usage:        2 bytes
 15726 ;; Hardware stack levels used: 1
 15727 ;; Hardware stack levels required when called: 13
 15728 ;; This function calls:
 15729 ;;		_Ball_draw
 15730 ;;		_LCD_Fill
 15731 ;;		_Paddle_draw
 15732 ;;		_Score_draw
 15733 ;; This function is called by:
 15734 ;;		_displaySM
 15735 ;; This function uses a non-reentrant model
 15736 ;;
 15737                           
 15738                           	psect	text58
 15739  0062B8                     __ptext58:
 15740                           	callstack 0
 15741  0062B8                     _Menu_inGameDraw:
 15742                           	callstack 15
 15743  0062B8                     
 15744                           ;class/menu.c: 35: void Menu_inGameDraw(GameParameters* g);class/menu.c: 36: {;class/men
      +                          u.c: 37:     LCD_Fill(0b0000000000000000);
 15745  0062B8  0E00               	movlw	0
 15746  0062BA  6E13               	movwf	(LCD_Fill@color+1)^0,c
 15747  0062BC  0E00               	movlw	0
 15748  0062BE  6E12               	movwf	LCD_Fill@color^0,c
 15749  0062C0  ECA5  F02B         	call	_LCD_Fill	;wreg free
 15750  0062C4                     
 15751                           ;class/menu.c: 38:     Score_draw(&g->s1);
 15752  0062C4  0ED4               	movlw	212
 15753  0062C6  0100               	movlb	0	; () banked
 15754  0062C8  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15755  0062CA  6F90               	movwf	Score_draw@s& (0+255),b
 15756  0062CC  0E00               	movlw	0
 15757  0062CE  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15758  0062D0  6F91               	movwf	(Score_draw@s+1)& (0+255),b
 15759  0062D2  ECAF  F029         	call	_Score_draw	;wreg free
 15760  0062D6                     
 15761                           ;class/menu.c: 39:     Paddle_draw(&g->p1);
 15762  0062D6  0EC0               	movlw	192
 15763  0062D8  0100               	movlb	0	; () banked
 15764  0062DA  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15765  0062DC  6E25               	movwf	Paddle_draw@p^0,c
 15766  0062DE  0E00               	movlw	0
 15767  0062E0  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15768  0062E2  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15769  0062E4  ECBF  F022         	call	_Paddle_draw	;wreg free
 15770  0062E8                     
 15771                           ;class/menu.c: 40:     Paddle_draw(&g->p2);
 15772  0062E8  0ECA               	movlw	202
 15773  0062EA  0100               	movlb	0	; () banked
 15774  0062EC  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15775  0062EE  6E25               	movwf	Paddle_draw@p^0,c
 15776  0062F0  0E00               	movlw	0
 15777  0062F2  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15778  0062F4  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15779  0062F6  ECBF  F022         	call	_Paddle_draw	;wreg free
 15780  0062FA                     
 15781                           ;class/menu.c: 41:     Ball_draw(&g->b);
 15782  0062FA  0EB4               	movlw	180
 15783  0062FC  0100               	movlb	0	; () banked
 15784  0062FE  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15785  006300  6E25               	movwf	Ball_draw@b^0,c
 15786  006302  0E00               	movlw	0
 15787  006304  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15788  006306  6E26               	movwf	(Ball_draw@b+1)^0,c
 15789  006308  EC73  F021         	call	_Ball_draw	;wreg free
 15790  00630C  0012               	return		;funcret
 15791  00630E                     __end_of_Menu_inGameDraw:
 15792                           	callstack 0
 15793                           
 15794 ;; *************** function _Score_draw *****************
 15795 ;; Defined at:
 15796 ;;		line 16 in file "class/score.c"
 15797 ;; Parameters:    Size  Location     Type
 15798 ;;  s               2   48[BANK0 ] PTR struct Score
 15799 ;;		 -> g1(218), 
 15800 ;; Auto vars:     Size  Location     Type
 15801 ;;		None
 15802 ;; Return value:  Size  Location     Type
 15803 ;;                  1    wreg      void 
 15804 ;; Registers used:
 15805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15806 ;; Tracked objects:
 15807 ;;		On entry : 0/0
 15808 ;;		On exit  : 0/0
 15809 ;;		Unchanged: 0/0
 15810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15811 ;;      Params:         0       2       0       0       0       0       0
 15812 ;;      Locals:         0       0       0       0       0       0       0
 15813 ;;      Temps:          0       0       0       0       0       0       0
 15814 ;;      Totals:         0       2       0       0       0       0       0
 15815 ;;Total ram usage:        2 bytes
 15816 ;; Hardware stack levels used: 1
 15817 ;; Hardware stack levels required when called: 12
 15818 ;; This function calls:
 15819 ;;		_LCD_DrawText
 15820 ;;		_sprintf
 15821 ;; This function is called by:
 15822 ;;		_Menu_inGameDraw
 15823 ;;		_displayController
 15824 ;; This function uses a non-reentrant model
 15825 ;;
 15826                           
 15827                           	psect	text59
 15828  00535E                     __ptext59:
 15829                           	callstack 0
 15830  00535E                     _Score_draw:
 15831                           	callstack 14
 15832  00535E                     
 15833                           ;class/score.c: 16: void Score_draw(struct Score* s);class/score.c: 17: {;class/score.c:
      +                           18:     sprintf(s->str,"%d",s->homeScore);
 15834  00535E  0E04               	movlw	4
 15835  005360  0100               	movlb	0	; () banked
 15836  005362  2590               	addwf	Score_draw@s& (0+255),w,b
 15837  005364  6F82               	movwf	sprintf@s& (0+255),b
 15838  005366  0E00               	movlw	0
 15839  005368  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15840  00536A  6F83               	movwf	(sprintf@s+1)& (0+255),b
 15841  00536C  0EED               	movlw	low (STR_15+3)
 15842  00536E  6F84               	movwf	sprintf@fmt& (0+255),b
 15843  005370  0E7F               	movlw	high (STR_15+3)
 15844  005372  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
 15845  005374  C090  FFD9         	movff	Score_draw@s,fsr2l
 15846  005378  C091  FFDA         	movff	Score_draw@s+1,fsr2h
 15847  00537C  CFDE F086          	movff	postinc2,?_sprintf+4
 15848  005380  CFDD F087          	movff	postdec2,?_sprintf+5
 15849  005384  EC87  F031         	call	_sprintf	;wreg free
 15850  005388                     
 15851                           ;class/score.c: 19:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_LEFT,0,0,0b11111
      +                          11111111111,0b0000000000000000);
 15852  005388  0E04               	movlw	4
 15853  00538A  0100               	movlb	0	; () banked
 15854  00538C  2590               	addwf	Score_draw@s& (0+255),w,b
 15855  00538E  6E20               	movwf	LCD_DrawText@msg^0,c
 15856  005390  0E00               	movlw	0
 15857  005392  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15858  005394  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15859  005396  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 15860  005398  6E22               	movwf	LCD_DrawText@font^0,c
 15861  00539A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15862  00539C  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15863  00539E  0E00               	movlw	0
 15864  0053A0  6E24               	movwf	LCD_DrawText@align^0,c
 15865  0053A2  0E00               	movlw	0
 15866  0053A4  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15867  0053A6  0E00               	movlw	0
 15868  0053A8  6E25               	movwf	LCD_DrawText@posX^0,c
 15869  0053AA  0E00               	movlw	0
 15870  0053AC  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15871  0053AE  0E00               	movlw	0
 15872  0053B0  6E27               	movwf	LCD_DrawText@posY^0,c
 15873  0053B2  0EFF               	movlw	255
 15874  0053B4  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15875  0053B6  6829               	setf	LCD_DrawText@color^0,c
 15876  0053B8  0E00               	movlw	0
 15877  0053BA  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15878  0053BC  0E00               	movlw	0
 15879  0053BE  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15880  0053C0  EC14  F00F         	call	_LCD_DrawText	;wreg free
 15881  0053C4                     
 15882                           ;class/score.c: 20:     sprintf(s->str,"%d",s->awayScore);
 15883  0053C4  0E04               	movlw	4
 15884  0053C6  0100               	movlb	0	; () banked
 15885  0053C8  2590               	addwf	Score_draw@s& (0+255),w,b
 15886  0053CA  6F82               	movwf	sprintf@s& (0+255),b
 15887  0053CC  0E00               	movlw	0
 15888  0053CE  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15889  0053D0  6F83               	movwf	(sprintf@s+1)& (0+255),b
 15890  0053D2  0EED               	movlw	low (STR_15+3)
 15891  0053D4  6F84               	movwf	sprintf@fmt& (0+255),b
 15892  0053D6  0E7F               	movlw	high (STR_15+3)
 15893  0053D8  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
 15894  0053DA  EE20 F002          	lfsr	2,2
 15895  0053DE  5190               	movf	Score_draw@s& (0+255),w,b
 15896  0053E0  26D9               	addwf	fsr2l,f,c
 15897  0053E2  5191               	movf	(Score_draw@s+1)& (0+255),w,b
 15898  0053E4  22DA               	addwfc	fsr2h,f,c
 15899  0053E6  CFDE F086          	movff	postinc2,?_sprintf+4
 15900  0053EA  CFDD F087          	movff	postdec2,?_sprintf+5
 15901  0053EE  EC87  F031         	call	_sprintf	;wreg free
 15902                           
 15903                           ;class/score.c: 21:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_RIGHT,239,0,0b11
      +                          11111111111111,0b0000000000000000);
 15904  0053F2  0E04               	movlw	4
 15905  0053F4  0100               	movlb	0	; () banked
 15906  0053F6  2590               	addwf	Score_draw@s& (0+255),w,b
 15907  0053F8  6E20               	movwf	LCD_DrawText@msg^0,c
 15908  0053FA  0E00               	movlw	0
 15909  0053FC  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15910  0053FE  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15911  005400  0E7B               	movlw	low _arialNarrow_12ptFontInfo
 15912  005402  6E22               	movwf	LCD_DrawText@font^0,c
 15913  005404  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15914  005406  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15915  005408  0E01               	movlw	1
 15916  00540A  6E24               	movwf	LCD_DrawText@align^0,c
 15917  00540C  0E00               	movlw	0
 15918  00540E  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15919  005410  0EEF               	movlw	239
 15920  005412  6E25               	movwf	LCD_DrawText@posX^0,c
 15921  005414  0E00               	movlw	0
 15922  005416  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15923  005418  0E00               	movlw	0
 15924  00541A  6E27               	movwf	LCD_DrawText@posY^0,c
 15925  00541C  0EFF               	movlw	255
 15926  00541E  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15927  005420  6829               	setf	LCD_DrawText@color^0,c
 15928  005422  0E00               	movlw	0
 15929  005424  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15930  005426  0E00               	movlw	0
 15931  005428  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15932  00542A  EC14  F00F         	call	_LCD_DrawText	;wreg free
 15933  00542E  0012               	return		;funcret
 15934  005430                     __end_of_Score_draw:
 15935                           	callstack 0
 15936                           
 15937 ;; *************** function _sprintf *****************
 15938 ;; Defined at:
 15939 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
 15940 ;; Parameters:    Size  Location     Type
 15941 ;;  s               2   34[BANK0 ] PTR unsigned char 
 15942 ;;		 -> touchScreenController@s(20), g1(218), 
 15943 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
 15944 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15945 ;; Auto vars:     Size  Location     Type
 15946 ;;  f               6   42[BANK0 ] struct _IO_FILE
 15947 ;;  ap              2   40[BANK0 ] PTR void [1]
 15948 ;;		 -> ?_sprintf(2), 
 15949 ;;  ret             2    0        int 
 15950 ;; Return value:  Size  Location     Type
 15951 ;;                  2   34[BANK0 ] int 
 15952 ;; Registers used:
 15953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15954 ;; Tracked objects:
 15955 ;;		On entry : 0/0
 15956 ;;		On exit  : 0/0
 15957 ;;		Unchanged: 0/0
 15958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15959 ;;      Params:         0       6       0       0       0       0       0
 15960 ;;      Locals:         0       8       0       0       0       0       0
 15961 ;;      Temps:          0       0       0       0       0       0       0
 15962 ;;      Totals:         0      14       0       0       0       0       0
 15963 ;;Total ram usage:       14 bytes
 15964 ;; Hardware stack levels used: 1
 15965 ;; Hardware stack levels required when called: 11
 15966 ;; This function calls:
 15967 ;;		_vfprintf
 15968 ;; This function is called by:
 15969 ;;		_Score_draw
 15970 ;;		_touchScreenController
 15971 ;; This function uses a non-reentrant model
 15972 ;;
 15973                           
 15974                           	psect	text60
 15975  00630E                     __ptext60:
 15976                           	callstack 0
 15977  00630E                     _sprintf:
 15978                           	callstack 14
 15979  00630E  0E86               	movlw	low (?_sprintf+4)
 15980  006310  0100               	movlb	0	; () banked
 15981  006312  6F88               	movwf	sprintf@ap& (0+255),b
 15982  006314  0E00               	movlw	high (?_sprintf+4)
 15983  006316  6F89               	movwf	(sprintf@ap+1)& (0+255),b
 15984  006318  C082  F08A         	movff	sprintf@s,sprintf@f
 15985  00631C  C083  F08B         	movff	sprintf@s+1,sprintf@f+1
 15986  006320                     
 15987                           ; BSR set to: 0
 15988  006320  0E00               	movlw	0
 15989  006322  6F8D               	movwf	(sprintf@f+3)& (0+255),b
 15990  006324  0E00               	movlw	0
 15991  006326  6F8C               	movwf	(sprintf@f+2)& (0+255),b
 15992  006328                     
 15993                           ; BSR set to: 0
 15994  006328  0E00               	movlw	0
 15995  00632A  6F8F               	movwf	(sprintf@f+5)& (0+255),b
 15996  00632C  0E00               	movlw	0
 15997  00632E  6F8E               	movwf	(sprintf@f+4)& (0+255),b
 15998  006330                     
 15999                           ; BSR set to: 0
 16000  006330  0E8A               	movlw	low sprintf@f
 16001  006332  6F7A               	movwf	vfprintf@fp& (0+255),b
 16002  006334  0E00               	movlw	high sprintf@f
 16003  006336  6F7B               	movwf	(vfprintf@fp+1)& (0+255),b
 16004  006338  C084  F07C         	movff	sprintf@fmt,vfprintf@fmt
 16005  00633C  C085  F07D         	movff	sprintf@fmt+1,vfprintf@fmt+1
 16006  006340  0E88               	movlw	low sprintf@ap
 16007  006342  6F7E               	movwf	vfprintf@ap& (0+255),b
 16008  006344  0E00               	movlw	high sprintf@ap
 16009  006346  6F7F               	movwf	(vfprintf@ap+1)& (0+255),b
 16010  006348  ECD0  F030         	call	_vfprintf	;wreg free
 16011  00634C  0100               	movlb	0	; () banked
 16012  00634E  518C               	movf	(sprintf@f+2)& (0+255),w,b
 16013  006350  2582               	addwf	sprintf@s& (0+255),w,b
 16014  006352  6ED9               	movwf	fsr2l,c
 16015  006354  518D               	movf	(sprintf@f+3)& (0+255),w,b
 16016  006356  2183               	addwfc	(sprintf@s+1)& (0+255),w,b
 16017  006358  6EDA               	movwf	fsr2h,c
 16018  00635A  0E00               	movlw	0
 16019  00635C  6EDF               	movwf	indf2,c
 16020  00635E                     
 16021                           ; BSR set to: 0
 16022  00635E  0012               	return		;funcret
 16023  006360                     __end_of_sprintf:
 16024                           	callstack 0
 16025                           
 16026 ;; *************** function _vfprintf *****************
 16027 ;; Defined at:
 16028 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16029 ;; Parameters:    Size  Location     Type
 16030 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
 16031 ;;		 -> sprintf@f(6), 
 16032 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
 16033 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 16034 ;;  ap              2   30[BANK0 ] PTR PTR void 
 16035 ;;		 -> sprintf@ap(2), 
 16036 ;; Auto vars:     Size  Location     Type
 16037 ;;  cfmt            2   32[BANK0 ] PTR unsigned char 
 16038 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 16039 ;; Return value:  Size  Location     Type
 16040 ;;                  2   26[BANK0 ] int 
 16041 ;; Registers used:
 16042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16043 ;; Tracked objects:
 16044 ;;		On entry : 0/0
 16045 ;;		On exit  : 0/0
 16046 ;;		Unchanged: 0/0
 16047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16048 ;;      Params:         0       6       0       0       0       0       0
 16049 ;;      Locals:         0       2       0       0       0       0       0
 16050 ;;      Temps:          0       0       0       0       0       0       0
 16051 ;;      Totals:         0       8       0       0       0       0       0
 16052 ;;Total ram usage:        8 bytes
 16053 ;; Hardware stack levels used: 1
 16054 ;; Hardware stack levels required when called: 10
 16055 ;; This function calls:
 16056 ;;		_vfpfcnvrt
 16057 ;; This function is called by:
 16058 ;;		_sprintf
 16059 ;; This function uses a non-reentrant model
 16060 ;;
 16061                           
 16062                           	psect	text61
 16063  0061A0                     __ptext61:
 16064                           	callstack 0
 16065  0061A0                     _vfprintf:
 16066                           	callstack 14
 16067  0061A0                     
 16068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 16069  0061A0  C07C  F080         	movff	vfprintf@fmt,vfprintf@cfmt
 16070  0061A4  C07D  F081         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 16071  0061A8                     
 16072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 16073  0061A8  0E00               	movlw	0
 16074  0061AA  0100               	movlb	0	; () banked
 16075  0061AC  6FDC               	movwf	(_nout+1)& (0+255),b
 16076  0061AE  0E00               	movlw	0
 16077  0061B0  6FDB               	movwf	_nout& (0+255),b
 16078                           
 16079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 16080  0061B2  EFEE  F030         	goto	l9422
 16081  0061B6                     l9420:
 16082                           
 16083                           ; BSR set to: 0
 16084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 16085  0061B6  C07A  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
 16086  0061BA  C07B  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 16087  0061BE  0E80               	movlw	low vfprintf@cfmt
 16088  0061C0  6E41               	movwf	vfpfcnvrt@fmt^0,c
 16089  0061C2  0E00               	movlw	high vfprintf@cfmt
 16090  0061C4  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
 16091  0061C6  C07E  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
 16092  0061CA  C07F  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 16093  0061CE  EC5F  F01E         	call	_vfpfcnvrt	;wreg free
 16094  0061D2  503F               	movf	?_vfpfcnvrt^0,w,c
 16095  0061D4  0100               	movlb	0	; () banked
 16096  0061D6  27DB               	addwf	_nout& (0+255),f,b
 16097  0061D8  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
 16098  0061DA  23DC               	addwfc	(_nout+1)& (0+255),f,b
 16099  0061DC                     l9422:
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 16103  0061DC  C080  FFF6         	movff	vfprintf@cfmt,tblptrl
 16104  0061E0  C081  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 16105  0061E4                     	if	0	;tblptru may be non-zero
 16106  0061E4                     	endif
 16107  0061E4                     	if	0	;tblptru may be non-zero
 16108  0061E4                     	endif
 16109  0061E4  0008               	tblrd		*
 16110  0061E6  50F5               	movf	tablat,w,c
 16111  0061E8  0900               	iorlw	0
 16112  0061EA  A4D8               	btfss	status,2,c
 16113  0061EC  EFFA  F030         	goto	u6771
 16114  0061F0  EFFC  F030         	goto	u6770
 16115  0061F4                     u6771:
 16116  0061F4  EFDB  F030         	goto	l9420
 16117  0061F8                     u6770:
 16118  0061F8                     
 16119                           ; BSR set to: 0
 16120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 16121  0061F8  C0DB  F07A         	movff	_nout,?_vfprintf
 16122  0061FC  C0DC  F07B         	movff	_nout+1,?_vfprintf+1
 16123  006200                     
 16124                           ; BSR set to: 0
 16125  006200  0012               	return		;funcret
 16126  006202                     __end_of_vfprintf:
 16127                           	callstack 0
 16128                           
 16129 ;; *************** function _vfpfcnvrt *****************
 16130 ;; Defined at:
 16131 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16132 ;; Parameters:    Size  Location     Type
 16133 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
 16134 ;;		 -> sprintf@f(6), 
 16135 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
 16136 ;;		 -> vfprintf@cfmt(2), 
 16137 ;;  ap              2   66[COMRAM] PTR PTR void 
 16138 ;;		 -> sprintf@ap(2), 
 16139 ;; Auto vars:     Size  Location     Type
 16140 ;;  ll              8   18[BANK0 ] long long 
 16141 ;;  llu             8    0        unsigned long long 
 16142 ;;  f               4    0        unsigned long long 
 16143 ;;  vp              3    0        PTR void 
 16144 ;;  ct              3    0        unsigned char [3]
 16145 ;;  cp              3    0        PTR unsigned char 
 16146 ;;  i               2    0        int 
 16147 ;;  done            2    0        int 
 16148 ;;  c               1    0        unsigned char 
 16149 ;; Return value:  Size  Location     Type
 16150 ;;                  2   62[COMRAM] int 
 16151 ;; Registers used:
 16152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16153 ;; Tracked objects:
 16154 ;;		On entry : 0/0
 16155 ;;		On exit  : 0/0
 16156 ;;		Unchanged: 0/0
 16157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16158 ;;      Params:         6       0       0       0       0       0       0
 16159 ;;      Locals:         0       8       0       0       0       0       0
 16160 ;;      Temps:          2       0       0       0       0       0       0
 16161 ;;      Totals:         8       8       0       0       0       0       0
 16162 ;;Total ram usage:       16 bytes
 16163 ;; Hardware stack levels used: 1
 16164 ;; Hardware stack levels required when called: 9
 16165 ;; This function calls:
 16166 ;;		_dtoa
 16167 ;;		_fputc
 16168 ;; This function is called by:
 16169 ;;		_vfprintf
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           	psect	text62
 16174  003CBE                     __ptext62:
 16175                           	callstack 0
 16176  003CBE                     _vfpfcnvrt:
 16177                           	callstack 14
 16178  003CBE                     
 16179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 16180  003CBE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16181  003CC2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16182  003CC6  CFDE FFF6          	movff	postinc2,tblptrl
 16183  003CCA  CFDD FFF7          	movff	postdec2,tblptrh
 16184  003CCE                     	if	0	;tblptru may be non-zero
 16185  003CCE                     	endif
 16186  003CCE                     	if	0	;tblptru may be non-zero
 16187  003CCE                     	endif
 16188  003CCE  0008               	tblrd		*
 16189  003CD0  50F5               	movf	tablat,w,c
 16190  003CD2  0A25               	xorlw	37
 16191  003CD4  A4D8               	btfss	status,2,c
 16192  003CD6  EF6F  F01E         	goto	u6431
 16193  003CDA  EF71  F01E         	goto	u6430
 16194  003CDE                     u6431:
 16195  003CDE  EF1D  F01F         	goto	l8844
 16196  003CE2                     u6430:
 16197  003CE2                     
 16198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 16199  003CE2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16200  003CE6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16201  003CEA  2ADE               	incf	postinc2,f,c
 16202  003CEC  0E00               	movlw	0
 16203  003CEE  22DD               	addwfc	postdec2,f,c
 16204  003CF0                     
 16205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 16206  003CF0  0E00               	movlw	0
 16207  003CF2  6E48               	movwf	(_width+1)^0,c
 16208  003CF4  0E00               	movlw	0
 16209  003CF6  6E47               	movwf	_width^0,c
 16210  003CF8  C047  F04B         	movff	_width,_flags
 16211  003CFC  C048  F04C         	movff	_width+1,_flags+1
 16212  003D00                     
 16213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 16214  003D00  6849               	setf	_prec^0,c
 16215  003D02  684A               	setf	(_prec+1)^0,c
 16216  003D04                     
 16217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 16218  003D04  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16219  003D08  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16220  003D0C  CFDE FFF6          	movff	postinc2,tblptrl
 16221  003D10  CFDD FFF7          	movff	postdec2,tblptrh
 16222  003D14                     	if	0	;tblptru may be non-zero
 16223  003D14                     	endif
 16224  003D14                     	if	0	;tblptru may be non-zero
 16225  003D14                     	endif
 16226  003D14  0008               	tblrd		*
 16227  003D16  50F5               	movf	tablat,w,c
 16228  003D18  0A64               	xorlw	100
 16229  003D1A  B4D8               	btfsc	status,2,c
 16230  003D1C  EF92  F01E         	goto	u6441
 16231  003D20  EF94  F01E         	goto	u6440
 16232  003D24                     u6441:
 16233  003D24  EFA6  F01E         	goto	l8822
 16234  003D28                     u6440:
 16235  003D28  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16236  003D2C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16237  003D30  CFDE FFF6          	movff	postinc2,tblptrl
 16238  003D34  CFDD FFF7          	movff	postdec2,tblptrh
 16239  003D38                     	if	0	;tblptru may be non-zero
 16240  003D38                     	endif
 16241  003D38                     	if	0	;tblptru may be non-zero
 16242  003D38                     	endif
 16243  003D38  0008               	tblrd		*
 16244  003D3A  50F5               	movf	tablat,w,c
 16245  003D3C  0A69               	xorlw	105
 16246  003D3E  A4D8               	btfss	status,2,c
 16247  003D40  EFA4  F01E         	goto	u6451
 16248  003D44  EFA6  F01E         	goto	u6450
 16249  003D48                     u6451:
 16250  003D48  EFE7  F01E         	goto	l8828
 16251  003D4C                     u6450:
 16252  003D4C                     l8822:
 16253                           
 16254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 16255  003D4C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16256  003D50  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16257  003D54  2ADE               	incf	postinc2,f,c
 16258  003D56  0E00               	movlw	0
 16259  003D58  22DD               	addwfc	postdec2,f,c
 16260                           
 16261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 16262  003D5A  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 16263  003D5E  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 16264  003D62  CFDF F045          	movff	indf2,??_vfpfcnvrt
 16265  003D66  0E02               	movlw	2
 16266  003D68  26DE               	addwf	postinc2,f,c
 16267  003D6A  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
 16268  003D6E  0E00               	movlw	0
 16269  003D70  22DD               	addwfc	postdec2,f,c
 16270  003D72  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
 16271  003D76  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 16272  003D7A  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
 16273  003D7E  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
 16274  003D82  0100               	movlb	0	; () banked
 16275  003D84  0E00               	movlw	0
 16276  003D86  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 16277  003D88  0EFF               	movlw	-1
 16278  003D8A  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 16279  003D8C  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 16280  003D8E  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 16281  003D90  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 16282  003D92  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 16283  003D94  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 16284  003D96                     
 16285                           ; BSR set to: 0
 16286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 16287  003D96  C03F  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
 16288  003D9A  C040  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 16289  003D9E  C072  F02F         	movff	vfpfcnvrt@ll,dtoa@d
 16290  003DA2  C073  F030         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 16291  003DA6  C074  F031         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 16292  003DAA  C075  F032         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 16293  003DAE  C076  F033         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 16294  003DB2  C077  F034         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 16295  003DB6  C078  F035         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 16296  003DBA  C079  F036         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 16297  003DBE  EC70  F018         	call	_dtoa	;wreg free
 16298  003DC2  C02D  F03F         	movff	?_dtoa,?_vfpfcnvrt
 16299  003DC6  C02E  F040         	movff	?_dtoa+1,?_vfpfcnvrt+1
 16300  003DCA  EF38  F01F         	goto	l1589
 16301  003DCE                     l8828:
 16302                           
 16303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 16304  003DCE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16305  003DD2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16306  003DD6  CFDE FFF6          	movff	postinc2,tblptrl
 16307  003DDA  CFDD FFF7          	movff	postdec2,tblptrh
 16308  003DDE                     	if	0	;tblptru may be non-zero
 16309  003DDE                     	endif
 16310  003DDE                     	if	0	;tblptru may be non-zero
 16311  003DDE                     	endif
 16312  003DDE  0008               	tblrd		*
 16313  003DE0  50F5               	movf	tablat,w,c
 16314  003DE2  0A25               	xorlw	37
 16315  003DE4  A4D8               	btfss	status,2,c
 16316  003DE6  EFF7  F01E         	goto	u6461
 16317  003DEA  EFF9  F01E         	goto	u6460
 16318  003DEE                     u6461:
 16319  003DEE  EF10  F01F         	goto	l8838
 16320  003DF2                     u6460:
 16321  003DF2                     
 16322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 16323  003DF2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16324  003DF6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16325  003DFA  2ADE               	incf	postinc2,f,c
 16326  003DFC  0E00               	movlw	0
 16327  003DFE  22DD               	addwfc	postdec2,f,c
 16328  003E00                     
 16329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 16330  003E00  0E00               	movlw	0
 16331  003E02  6E13               	movwf	(fputc@c+1)^0,c
 16332  003E04  0E25               	movlw	37
 16333  003E06  6E12               	movwf	fputc@c^0,c
 16334  003E08  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 16335  003E0C  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 16336  003E10  EC7D  F02A         	call	_fputc	;wreg free
 16337  003E14                     l8834:
 16338                           
 16339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 16340  003E14  0E00               	movlw	0
 16341  003E16  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 16342  003E18  0E01               	movlw	1
 16343  003E1A  6E3F               	movwf	?_vfpfcnvrt^0,c
 16344  003E1C  EF38  F01F         	goto	l1589
 16345  003E20                     l8838:
 16346                           
 16347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 16348  003E20  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16349  003E24  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16350  003E28  2ADE               	incf	postinc2,f,c
 16351  003E2A  0E00               	movlw	0
 16352  003E2C  22DD               	addwfc	postdec2,f,c
 16353  003E2E                     
 16354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 16355  003E2E  0E00               	movlw	0
 16356  003E30  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 16357  003E32  0E00               	movlw	0
 16358  003E34  6E3F               	movwf	?_vfpfcnvrt^0,c
 16359  003E36  EF38  F01F         	goto	l1589
 16360  003E3A                     l8844:
 16361                           
 16362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 16363  003E3A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16364  003E3E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16365  003E42  CFDE FFF6          	movff	postinc2,tblptrl
 16366  003E46  CFDD FFF7          	movff	postdec2,tblptrh
 16367  003E4A                     	if	0	;tblptru may be non-zero
 16368  003E4A                     	endif
 16369  003E4A                     	if	0	;tblptru may be non-zero
 16370  003E4A                     	endif
 16371  003E4A  0008               	tblrd		*
 16372  003E4C  50F5               	movf	tablat,w,c
 16373  003E4E  6E12               	movwf	fputc@c^0,c
 16374  003E50  6A13               	clrf	(fputc@c+1)^0,c
 16375  003E52  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 16376  003E56  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 16377  003E5A  EC7D  F02A         	call	_fputc	;wreg free
 16378  003E5E                     
 16379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 16380  003E5E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16381  003E62  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16382  003E66  2ADE               	incf	postinc2,f,c
 16383  003E68  0E00               	movlw	0
 16384  003E6A  22DD               	addwfc	postdec2,f,c
 16385  003E6C  EF0A  F01F         	goto	l8834
 16386  003E70                     l1589:
 16387  003E70  0012               	return		;funcret
 16388  003E72                     __end_of_vfpfcnvrt:
 16389                           	callstack 0
 16390                           
 16391 ;; *************** function _dtoa *****************
 16392 ;; Defined at:
 16393 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16394 ;; Parameters:    Size  Location     Type
 16395 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
 16396 ;;		 -> sprintf@f(6), 
 16397 ;;  d               8   46[COMRAM] long long 
 16398 ;; Auto vars:     Size  Location     Type
 16399 ;;  n               8    8[BANK0 ] long long 
 16400 ;;  i               2   16[BANK0 ] int 
 16401 ;;  s               2    6[BANK0 ] int 
 16402 ;;  w               2    4[BANK0 ] int 
 16403 ;;  p               2    2[BANK0 ] int 
 16404 ;; Return value:  Size  Location     Type
 16405 ;;                  2   44[COMRAM] int 
 16406 ;; Registers used:
 16407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16408 ;; Tracked objects:
 16409 ;;		On entry : 0/0
 16410 ;;		On exit  : 0/0
 16411 ;;		Unchanged: 0/0
 16412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16413 ;;      Params:        10       0       0       0       0       0       0
 16414 ;;      Locals:         0      18       0       0       0       0       0
 16415 ;;      Temps:          8       0       0       0       0       0       0
 16416 ;;      Totals:        18      18       0       0       0       0       0
 16417 ;;Total ram usage:       36 bytes
 16418 ;; Hardware stack levels used: 1
 16419 ;; Hardware stack levels required when called: 8
 16420 ;; This function calls:
 16421 ;;		___aodiv
 16422 ;;		___aomod
 16423 ;;		_abs
 16424 ;;		_pad
 16425 ;; This function is called by:
 16426 ;;		_vfpfcnvrt
 16427 ;; This function uses a non-reentrant model
 16428 ;;
 16429                           
 16430                           	psect	text63
 16431  0030E0                     __ptext63:
 16432                           	callstack 0
 16433  0030E0                     _dtoa:
 16434                           	callstack 14
 16435  0030E0                     
 16436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 16437  0030E0  C02F  F068         	movff	dtoa@d,dtoa@n
 16438  0030E4  C030  F069         	movff	dtoa@d+1,dtoa@n+1
 16439  0030E8  C031  F06A         	movff	dtoa@d+2,dtoa@n+2
 16440  0030EC  C032  F06B         	movff	dtoa@d+3,dtoa@n+3
 16441  0030F0  C033  F06C         	movff	dtoa@d+4,dtoa@n+4
 16442  0030F4  C034  F06D         	movff	dtoa@d+5,dtoa@n+5
 16443  0030F8  C035  F06E         	movff	dtoa@d+6,dtoa@n+6
 16444  0030FC  C036  F06F         	movff	dtoa@d+7,dtoa@n+7
 16445  003100                     
 16446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 16447  003100  0100               	movlb	0	; () banked
 16448  003102  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
 16449  003104  EF86  F018         	goto	u5951
 16450  003108  EF89  F018         	goto	u5950
 16451  00310C                     u5951:
 16452  00310C  0E01               	movlw	1
 16453  00310E  EF8A  F018         	goto	u5960
 16454  003112                     u5950:
 16455  003112  0E00               	movlw	0
 16456  003114                     u5960:
 16457  003114  6F66               	movwf	dtoa@s& (0+255),b
 16458  003116  6B67               	clrf	(dtoa@s+1)& (0+255),b
 16459                           
 16460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 16461  003118  5166               	movf	dtoa@s& (0+255),w,b
 16462  00311A  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16463  00311C  B4D8               	btfsc	status,2,c
 16464  00311E  EF93  F018         	goto	u5971
 16465  003122  EF95  F018         	goto	u5970
 16466  003126                     u5971:
 16467  003126  EFA5  F018         	goto	l8194
 16468  00312A                     u5970:
 16469  00312A                     
 16470                           ; BSR set to: 0
 16471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 16472  00312A  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
 16473  00312C  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
 16474  00312E  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
 16475  003130  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
 16476  003132  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
 16477  003134  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
 16478  003136  1F69               	comf	(dtoa@n+1)& (0+255),f,b
 16479  003138  6D68               	negf	dtoa@n& (0+255),b
 16480  00313A  0E00               	movlw	0
 16481  00313C  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
 16482  00313E  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
 16483  003140  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
 16484  003142  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
 16485  003144  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
 16486  003146  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
 16487  003148  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
 16488  00314A                     l8194:
 16489                           
 16490                           ; BSR set to: 0
 16491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 16492  00314A  BE4A               	btfsc	(_prec+1)^0,7,c
 16493  00314C  EFAA  F018         	goto	u5981
 16494  003150  EFAC  F018         	goto	u5980
 16495  003154                     u5981:
 16496  003154  EFAD  F018         	goto	l8198
 16497  003158                     u5980:
 16498  003158                     
 16499                           ; BSR set to: 0
 16500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 16501  003158  924B               	bcf	_flags^0,1,c
 16502  00315A                     l8198:
 16503                           
 16504                           ; BSR set to: 0
 16505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 16506  00315A  BE4A               	btfsc	(_prec+1)^0,7,c
 16507  00315C  EFBA  F018         	goto	u5990
 16508  003160  504A               	movf	(_prec+1)^0,w,c
 16509  003162  E106               	bnz	u5991
 16510  003164  0449               	decf	_prec^0,w,c
 16511  003166  B0D8               	btfsc	status,0,c
 16512  003168  EFB8  F018         	goto	u5991
 16513  00316C  EFBA  F018         	goto	u5990
 16514  003170                     u5991:
 16515  003170  EFC0  F018         	goto	l1562
 16516  003174                     u5990:
 16517  003174                     
 16518                           ; BSR set to: 0
 16519  003174  0E00               	movlw	0
 16520  003176  6F63               	movwf	(dtoa@p+1)& (0+255),b
 16521  003178  0E01               	movlw	1
 16522  00317A  6F62               	movwf	dtoa@p& (0+255),b
 16523  00317C  EFC4  F018         	goto	l1564
 16524  003180                     l1562:
 16525                           
 16526                           ; BSR set to: 0
 16527  003180  C049  F062         	movff	_prec,dtoa@p
 16528  003184  C04A  F063         	movff	_prec+1,dtoa@p+1
 16529  003188                     l1564:
 16530                           
 16531                           ; BSR set to: 0
 16532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 16533  003188  C047  F064         	movff	_width,dtoa@w
 16534  00318C  C048  F065         	movff	_width+1,dtoa@w+1
 16535  003190                     
 16536                           ; BSR set to: 0
 16537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 16538  003190  5166               	movf	dtoa@s& (0+255),w,b
 16539  003192  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16540  003194  A4D8               	btfss	status,2,c
 16541  003196  EFCF  F018         	goto	u6001
 16542  00319A  EFD1  F018         	goto	u6000
 16543  00319E                     u6001:
 16544  00319E  EFD8  F018         	goto	l8206
 16545  0031A2                     u6000:
 16546  0031A2                     
 16547                           ; BSR set to: 0
 16548  0031A2  A44B               	btfss	_flags^0,2,c
 16549  0031A4  EFD6  F018         	goto	u6011
 16550  0031A8  EFD8  F018         	goto	u6010
 16551  0031AC                     u6011:
 16552  0031AC  EFDB  F018         	goto	l8208
 16553  0031B0                     u6010:
 16554  0031B0                     l8206:
 16555                           
 16556                           ; BSR set to: 0
 16557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 16558  0031B0  0764               	decf	dtoa@w& (0+255),f,b
 16559  0031B2  A0D8               	btfss	status,0,c
 16560  0031B4  0765               	decf	(dtoa@w+1)& (0+255),f,b
 16561  0031B6                     l8208:
 16562                           
 16563                           ; BSR set to: 0
 16564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 16565  0031B6  0E00               	movlw	0
 16566  0031B8  6F71               	movwf	(dtoa@i+1)& (0+255),b
 16567  0031BA  0E1F               	movlw	31
 16568  0031BC  6F70               	movwf	dtoa@i& (0+255),b
 16569  0031BE                     
 16570                           ; BSR set to: 0
 16571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 16572  0031BE  0E00               	movlw	0
 16573  0031C0  6FFF               	movwf	(_dbuf+31)& (0+255),b
 16574                           
 16575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16576  0031C2  EF60  F019         	goto	l8222
 16577  0031C6                     l8212:
 16578                           
 16579                           ; BSR set to: 0
 16580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 16581  0031C6  0770               	decf	dtoa@i& (0+255),f,b
 16582  0031C8  A0D8               	btfss	status,0,c
 16583  0031CA  0771               	decf	(dtoa@i+1)& (0+255),f,b
 16584  0031CC                     
 16585                           ; BSR set to: 0
 16586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 16587  0031CC  0EE0               	movlw	low _dbuf
 16588  0031CE  2570               	addwf	dtoa@i& (0+255),w,b
 16589  0031D0  6ED9               	movwf	fsr2l,c
 16590  0031D2  0E00               	movlw	high _dbuf
 16591  0031D4  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16592  0031D6  6EDA               	movwf	fsr2h,c
 16593  0031D8  C068  F012         	movff	dtoa@n,___aomod@dividend
 16594  0031DC  C069  F013         	movff	dtoa@n+1,___aomod@dividend+1
 16595  0031E0  C06A  F014         	movff	dtoa@n+2,___aomod@dividend+2
 16596  0031E4  C06B  F015         	movff	dtoa@n+3,___aomod@dividend+3
 16597  0031E8  C06C  F016         	movff	dtoa@n+4,___aomod@dividend+4
 16598  0031EC  C06D  F017         	movff	dtoa@n+5,___aomod@dividend+5
 16599  0031F0  C06E  F018         	movff	dtoa@n+6,___aomod@dividend+6
 16600  0031F4  C06F  F019         	movff	dtoa@n+7,___aomod@dividend+7
 16601  0031F8  0E0A               	movlw	10
 16602  0031FA  6E1A               	movwf	___aomod@divisor^0,c
 16603  0031FC  0E00               	movlw	0
 16604  0031FE  6E1B               	movwf	(___aomod@divisor+1)^0,c
 16605  003200  0E00               	movlw	0
 16606  003202  6E1C               	movwf	(___aomod@divisor+2)^0,c
 16607  003204  0E00               	movlw	0
 16608  003206  6E1D               	movwf	(___aomod@divisor+3)^0,c
 16609  003208  0E00               	movlw	0
 16610  00320A  6E1E               	movwf	(___aomod@divisor+4)^0,c
 16611  00320C  0E00               	movlw	0
 16612  00320E  6E1F               	movwf	(___aomod@divisor+5)^0,c
 16613  003210  0E00               	movlw	0
 16614  003212  6E20               	movwf	(___aomod@divisor+6)^0,c
 16615  003214  0E00               	movlw	0
 16616  003216  6E21               	movwf	(___aomod@divisor+7)^0,c
 16617  003218  ECC1  F020         	call	___aomod	;wreg free
 16618  00321C  C012  F037         	movff	?___aomod,??_dtoa
 16619  003220  C013  F038         	movff	?___aomod+1,??_dtoa+1
 16620  003224  C014  F039         	movff	?___aomod+2,??_dtoa+2
 16621  003228  C015  F03A         	movff	?___aomod+3,??_dtoa+3
 16622  00322C  C016  F03B         	movff	?___aomod+4,??_dtoa+4
 16623  003230  C017  F03C         	movff	?___aomod+5,??_dtoa+5
 16624  003234  C018  F03D         	movff	?___aomod+6,??_dtoa+6
 16625  003238  C019  F03E         	movff	?___aomod+7,??_dtoa+7
 16626  00323C  C037  F024         	movff	??_dtoa,abs@a
 16627  003240  C039  F025         	movff	??_dtoa+2,abs@a+1
 16628  003244  EC43  F032         	call	_abs	;wreg free
 16629  003248  5024               	movf	?_abs^0,w,c
 16630  00324A  0F30               	addlw	48
 16631  00324C  6EDF               	movwf	indf2,c
 16632  00324E                     
 16633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 16634  00324E  0100               	movlb	0	; () banked
 16635  003250  0762               	decf	dtoa@p& (0+255),f,b
 16636  003252  A0D8               	btfss	status,0,c
 16637  003254  0763               	decf	(dtoa@p+1)& (0+255),f,b
 16638  003256                     
 16639                           ; BSR set to: 0
 16640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 16641  003256  0764               	decf	dtoa@w& (0+255),f,b
 16642  003258  A0D8               	btfss	status,0,c
 16643  00325A  0765               	decf	(dtoa@w+1)& (0+255),f,b
 16644  00325C                     
 16645                           ; BSR set to: 0
 16646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 16647  00325C  C068  F012         	movff	dtoa@n,___aodiv@dividend
 16648  003260  C069  F013         	movff	dtoa@n+1,___aodiv@dividend+1
 16649  003264  C06A  F014         	movff	dtoa@n+2,___aodiv@dividend+2
 16650  003268  C06B  F015         	movff	dtoa@n+3,___aodiv@dividend+3
 16651  00326C  C06C  F016         	movff	dtoa@n+4,___aodiv@dividend+4
 16652  003270  C06D  F017         	movff	dtoa@n+5,___aodiv@dividend+5
 16653  003274  C06E  F018         	movff	dtoa@n+6,___aodiv@dividend+6
 16654  003278  C06F  F019         	movff	dtoa@n+7,___aodiv@dividend+7
 16655  00327C  0E0A               	movlw	10
 16656  00327E  6E1A               	movwf	___aodiv@divisor^0,c
 16657  003280  0E00               	movlw	0
 16658  003282  6E1B               	movwf	(___aodiv@divisor+1)^0,c
 16659  003284  0E00               	movlw	0
 16660  003286  6E1C               	movwf	(___aodiv@divisor+2)^0,c
 16661  003288  0E00               	movlw	0
 16662  00328A  6E1D               	movwf	(___aodiv@divisor+3)^0,c
 16663  00328C  0E00               	movlw	0
 16664  00328E  6E1E               	movwf	(___aodiv@divisor+4)^0,c
 16665  003290  0E00               	movlw	0
 16666  003292  6E1F               	movwf	(___aodiv@divisor+5)^0,c
 16667  003294  0E00               	movlw	0
 16668  003296  6E20               	movwf	(___aodiv@divisor+6)^0,c
 16669  003298  0E00               	movlw	0
 16670  00329A  6E21               	movwf	(___aodiv@divisor+7)^0,c
 16671  00329C  ECFD  F01F         	call	___aodiv	;wreg free
 16672  0032A0  C012  F068         	movff	?___aodiv,dtoa@n
 16673  0032A4  C013  F069         	movff	?___aodiv+1,dtoa@n+1
 16674  0032A8  C014  F06A         	movff	?___aodiv+2,dtoa@n+2
 16675  0032AC  C015  F06B         	movff	?___aodiv+3,dtoa@n+3
 16676  0032B0  C016  F06C         	movff	?___aodiv+4,dtoa@n+4
 16677  0032B4  C017  F06D         	movff	?___aodiv+5,dtoa@n+5
 16678  0032B8  C018  F06E         	movff	?___aodiv+6,dtoa@n+6
 16679  0032BC  C019  F06F         	movff	?___aodiv+7,dtoa@n+7
 16680  0032C0                     l8222:
 16681                           
 16682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16683  0032C0  0100               	movlb	0	; () banked
 16684  0032C2  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
 16685  0032C4  EF6C  F019         	goto	u6021
 16686  0032C8  5171               	movf	(dtoa@i+1)& (0+255),w,b
 16687  0032CA  E108               	bnz	u6020
 16688  0032CC  0570               	decf	dtoa@i& (0+255),w,b
 16689  0032CE  A0D8               	btfss	status,0,c
 16690  0032D0  EF6C  F019         	goto	u6021
 16691  0032D4  EF6E  F019         	goto	u6020
 16692  0032D8                     u6021:
 16693  0032D8  EF9E  F019         	goto	l8232
 16694  0032DC                     u6020:
 16695  0032DC                     
 16696                           ; BSR set to: 0
 16697  0032DC  5168               	movf	dtoa@n& (0+255),w,b
 16698  0032DE  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
 16699  0032E0  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
 16700  0032E2  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
 16701  0032E4  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
 16702  0032E6  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
 16703  0032E8  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
 16704  0032EA  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
 16705  0032EC  A4D8               	btfss	status,2,c
 16706  0032EE  EF7B  F019         	goto	u6031
 16707  0032F2  EF7D  F019         	goto	u6030
 16708  0032F6                     u6031:
 16709  0032F6  EFE3  F018         	goto	l8212
 16710  0032FA                     u6030:
 16711  0032FA                     
 16712                           ; BSR set to: 0
 16713  0032FA  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
 16714  0032FC  EF8A  F019         	goto	u6040
 16715  003300  5163               	movf	(dtoa@p+1)& (0+255),w,b
 16716  003302  E106               	bnz	u6041
 16717  003304  0562               	decf	dtoa@p& (0+255),w,b
 16718  003306  B0D8               	btfsc	status,0,c
 16719  003308  EF88  F019         	goto	u6041
 16720  00330C  EF8A  F019         	goto	u6040
 16721  003310                     u6041:
 16722  003310  EFE3  F018         	goto	l8212
 16723  003314                     u6040:
 16724  003314                     
 16725                           ; BSR set to: 0
 16726  003314  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
 16727  003316  EF95  F019         	goto	u6051
 16728  00331A  5165               	movf	(dtoa@w+1)& (0+255),w,b
 16729  00331C  E108               	bnz	u6050
 16730  00331E  0564               	decf	dtoa@w& (0+255),w,b
 16731  003320  A0D8               	btfss	status,0,c
 16732  003322  EF95  F019         	goto	u6051
 16733  003326  EF97  F019         	goto	u6050
 16734  00332A                     u6051:
 16735  00332A  EF9E  F019         	goto	l8232
 16736  00332E                     u6050:
 16737  00332E                     
 16738                           ; BSR set to: 0
 16739  00332E  B24B               	btfsc	_flags^0,1,c
 16740  003330  EF9C  F019         	goto	u6061
 16741  003334  EF9E  F019         	goto	u6060
 16742  003338                     u6061:
 16743  003338  EFE3  F018         	goto	l8212
 16744  00333C                     u6060:
 16745  00333C                     l8232:
 16746                           
 16747                           ; BSR set to: 0
 16748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 16749  00333C  5166               	movf	dtoa@s& (0+255),w,b
 16750  00333E  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16751  003340  A4D8               	btfss	status,2,c
 16752  003342  EFA5  F019         	goto	u6071
 16753  003346  EFA7  F019         	goto	u6070
 16754  00334A                     u6071:
 16755  00334A  EFAE  F019         	goto	l8236
 16756  00334E                     u6070:
 16757  00334E                     
 16758                           ; BSR set to: 0
 16759  00334E  A44B               	btfss	_flags^0,2,c
 16760  003350  EFAC  F019         	goto	u6081
 16761  003354  EFAE  F019         	goto	u6080
 16762  003358                     u6081:
 16763  003358  EFCC  F019         	goto	l8246
 16764  00335C                     u6080:
 16765  00335C                     l8236:
 16766                           
 16767                           ; BSR set to: 0
 16768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 16769  00335C  0770               	decf	dtoa@i& (0+255),f,b
 16770  00335E  A0D8               	btfss	status,0,c
 16771  003360  0771               	decf	(dtoa@i+1)& (0+255),f,b
 16772  003362                     
 16773                           ; BSR set to: 0
 16774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 16775  003362  5166               	movf	dtoa@s& (0+255),w,b
 16776  003364  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16777  003366  A4D8               	btfss	status,2,c
 16778  003368  EFB8  F019         	goto	u6091
 16779  00336C  EFBA  F019         	goto	u6090
 16780  003370                     u6091:
 16781  003370  EFC0  F019         	goto	l8242
 16782  003374                     u6090:
 16783  003374                     
 16784                           ; BSR set to: 0
 16785  003374  0E00               	movlw	0
 16786  003376  6F61               	movwf	(_dtoa$5327+1)& (0+255),b
 16787  003378  0E2B               	movlw	43
 16788  00337A  6F60               	movwf	_dtoa$5327& (0+255),b
 16789  00337C  EFC4  F019         	goto	l8244
 16790  003380                     l8242:
 16791                           
 16792                           ; BSR set to: 0
 16793  003380  0E00               	movlw	0
 16794  003382  6F61               	movwf	(_dtoa$5327+1)& (0+255),b
 16795  003384  0E2D               	movlw	45
 16796  003386  6F60               	movwf	_dtoa$5327& (0+255),b
 16797  003388                     l8244:
 16798                           
 16799                           ; BSR set to: 0
 16800  003388  0EE0               	movlw	low _dbuf
 16801  00338A  2570               	addwf	dtoa@i& (0+255),w,b
 16802  00338C  6ED9               	movwf	fsr2l,c
 16803  00338E  0E00               	movlw	high _dbuf
 16804  003390  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16805  003392  6EDA               	movwf	fsr2h,c
 16806  003394  C060  FFDF         	movff	_dtoa$5327,indf2
 16807  003398                     l8246:
 16808                           
 16809                           ; BSR set to: 0
 16810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 16811  003398  C02D  F022         	movff	dtoa@fp,pad@fp
 16812  00339C  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
 16813  0033A0  0EE0               	movlw	low _dbuf
 16814  0033A2  2570               	addwf	dtoa@i& (0+255),w,b
 16815  0033A4  6E24               	movwf	pad@buf^0,c
 16816  0033A6  0E00               	movlw	high _dbuf
 16817  0033A8  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16818  0033AA  6E25               	movwf	(pad@buf+1)^0,c
 16819  0033AC  C064  F026         	movff	dtoa@w,pad@p
 16820  0033B0  C065  F027         	movff	dtoa@w+1,pad@p+1
 16821  0033B4  EC44  F02B         	call	_pad	;wreg free
 16822  0033B8  C022  F02D         	movff	?_pad,?_dtoa
 16823  0033BC  C023  F02E         	movff	?_pad+1,?_dtoa+1
 16824  0033C0  0012               	return		;funcret
 16825  0033C2                     __end_of_dtoa:
 16826                           	callstack 0
 16827                           
 16828 ;; *************** function _pad *****************
 16829 ;; Defined at:
 16830 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16831 ;; Parameters:    Size  Location     Type
 16832 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 16833 ;;		 -> sprintf@f(6), 
 16834 ;;  buf             2   35[COMRAM] PTR unsigned char 
 16835 ;;		 -> dbuf(32), 
 16836 ;;  p               2   37[COMRAM] int 
 16837 ;; Auto vars:     Size  Location     Type
 16838 ;;  w               2   42[COMRAM] int 
 16839 ;;  i               2   40[COMRAM] int 
 16840 ;; Return value:  Size  Location     Type
 16841 ;;                  2   33[COMRAM] int 
 16842 ;; Registers used:
 16843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16844 ;; Tracked objects:
 16845 ;;		On entry : 0/0
 16846 ;;		On exit  : 0/0
 16847 ;;		Unchanged: 0/0
 16848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16849 ;;      Params:         6       0       0       0       0       0       0
 16850 ;;      Locals:         4       0       0       0       0       0       0
 16851 ;;      Temps:          1       0       0       0       0       0       0
 16852 ;;      Totals:        11       0       0       0       0       0       0
 16853 ;;Total ram usage:       11 bytes
 16854 ;; Hardware stack levels used: 1
 16855 ;; Hardware stack levels required when called: 7
 16856 ;; This function calls:
 16857 ;;		_fputc
 16858 ;;		_fputs
 16859 ;;		_strlen
 16860 ;; This function is called by:
 16861 ;;		_dtoa
 16862 ;; This function uses a non-reentrant model
 16863 ;;
 16864                           
 16865                           	psect	text64
 16866  005688                     __ptext64:
 16867                           	callstack 0
 16868  005688                     _pad:
 16869                           	callstack 14
 16870  005688                     
 16871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 16872  005688  A04B               	btfss	_flags^0,0,c
 16873  00568A  EF49  F02B         	goto	u5901
 16874  00568E  EF4B  F02B         	goto	u5900
 16875  005692                     u5901:
 16876  005692  EF55  F02B         	goto	l8166
 16877  005696                     u5900:
 16878  005696                     
 16879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 16880  005696  C024  F01B         	movff	pad@buf,fputs@s
 16881  00569A  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16882  00569E  C022  F01D         	movff	pad@fp,fputs@fp
 16883  0056A2  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16884  0056A6  EC21  F032         	call	_fputs	;wreg free
 16885  0056AA                     l8166:
 16886                           
 16887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 16888  0056AA  BE27               	btfsc	(pad@p+1)^0,7,c
 16889  0056AC  EF5A  F02B         	goto	u5911
 16890  0056B0  EF5C  F02B         	goto	u5910
 16891  0056B4                     u5911:
 16892  0056B4  EF62  F02B         	goto	l8170
 16893  0056B8                     u5910:
 16894  0056B8  C026  F02B         	movff	pad@p,pad@w
 16895  0056BC  C027  F02C         	movff	pad@p+1,pad@w+1
 16896  0056C0  EF66  F02B         	goto	l1551
 16897  0056C4                     l8170:
 16898  0056C4  0E00               	movlw	0
 16899  0056C6  6E2C               	movwf	(pad@w+1)^0,c
 16900  0056C8  0E00               	movlw	0
 16901  0056CA  6E2B               	movwf	pad@w^0,c
 16902  0056CC                     l1551:
 16903                           
 16904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 16905  0056CC  0E00               	movlw	0
 16906  0056CE  6E2A               	movwf	(pad@i+1)^0,c
 16907  0056D0  0E00               	movlw	0
 16908  0056D2  6E29               	movwf	pad@i^0,c
 16909                           
 16910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16911  0056D4  EF78  F02B         	goto	l8176
 16912  0056D8                     l8172:
 16913                           
 16914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 16915  0056D8  0E00               	movlw	0
 16916  0056DA  6E13               	movwf	(fputc@c+1)^0,c
 16917  0056DC  0E20               	movlw	32
 16918  0056DE  6E12               	movwf	fputc@c^0,c
 16919  0056E0  C022  F014         	movff	pad@fp,fputc@fp
 16920  0056E4  C023  F015         	movff	pad@fp+1,fputc@fp+1
 16921  0056E8  EC7D  F02A         	call	_fputc	;wreg free
 16922  0056EC                     
 16923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 16924  0056EC  4A29               	infsnz	pad@i^0,f,c
 16925  0056EE  2A2A               	incf	(pad@i+1)^0,f,c
 16926  0056F0                     l8176:
 16927                           
 16928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16929  0056F0  502B               	movf	pad@w^0,w,c
 16930  0056F2  5C29               	subwf	pad@i^0,w,c
 16931  0056F4  502A               	movf	(pad@i+1)^0,w,c
 16932  0056F6  0A80               	xorlw	128
 16933  0056F8  6E28               	movwf	??_pad^0,c
 16934  0056FA  502C               	movf	(pad@w+1)^0,w,c
 16935  0056FC  0A80               	xorlw	128
 16936  0056FE  5828               	subwfb	??_pad^0,w,c
 16937  005700  A0D8               	btfss	status,0,c
 16938  005702  EF85  F02B         	goto	u5921
 16939  005706  EF87  F02B         	goto	u5920
 16940  00570A                     u5921:
 16941  00570A  EF6C  F02B         	goto	l8172
 16942  00570E                     u5920:
 16943  00570E                     
 16944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 16945  00570E  B04B               	btfsc	_flags^0,0,c
 16946  005710  EF8C  F02B         	goto	u5931
 16947  005714  EF8E  F02B         	goto	u5930
 16948  005718                     u5931:
 16949  005718  EF98  F02B         	goto	l8180
 16950  00571C                     u5930:
 16951  00571C                     
 16952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 16953  00571C  C024  F01B         	movff	pad@buf,fputs@s
 16954  005720  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16955  005724  C022  F01D         	movff	pad@fp,fputs@fp
 16956  005728  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16957  00572C  EC21  F032         	call	_fputs	;wreg free
 16958  005730                     l8180:
 16959                           
 16960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 16961  005730  C024  F012         	movff	pad@buf,strlen@s
 16962  005734  C025  F013         	movff	pad@buf+1,strlen@s+1
 16963  005738  ECD8  F031         	call	_strlen	;wreg free
 16964  00573C  502B               	movf	pad@w^0,w,c
 16965  00573E  2412               	addwf	?_strlen^0,w,c
 16966  005740  6E22               	movwf	?_pad^0,c
 16967  005742  502C               	movf	(pad@w+1)^0,w,c
 16968  005744  2013               	addwfc	(?_strlen+1)^0,w,c
 16969  005746  6E23               	movwf	(?_pad+1)^0,c
 16970  005748  0012               	return		;funcret
 16971  00574A                     __end_of_pad:
 16972                           	callstack 0
 16973                           
 16974 ;; *************** function _fputs *****************
 16975 ;; Defined at:
 16976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 16977 ;; Parameters:    Size  Location     Type
 16978 ;;  s               2   26[COMRAM] PTR const unsigned char 
 16979 ;;		 -> dbuf(32), 
 16980 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 16981 ;;		 -> sprintf@f(6), 
 16982 ;; Auto vars:     Size  Location     Type
 16983 ;;  i               2   31[COMRAM] int 
 16984 ;;  c               1   30[COMRAM] unsigned char 
 16985 ;; Return value:  Size  Location     Type
 16986 ;;                  2   26[COMRAM] int 
 16987 ;; Registers used:
 16988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16989 ;; Tracked objects:
 16990 ;;		On entry : 0/0
 16991 ;;		On exit  : 0/0
 16992 ;;		Unchanged: 0/0
 16993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16994 ;;      Params:         4       0       0       0       0       0       0
 16995 ;;      Locals:         3       0       0       0       0       0       0
 16996 ;;      Temps:          0       0       0       0       0       0       0
 16997 ;;      Totals:         7       0       0       0       0       0       0
 16998 ;;Total ram usage:        7 bytes
 16999 ;; Hardware stack levels used: 1
 17000 ;; Hardware stack levels required when called: 6
 17001 ;; This function calls:
 17002 ;;		_fputc
 17003 ;; This function is called by:
 17004 ;;		_pad
 17005 ;; This function uses a non-reentrant model
 17006 ;;
 17007                           
 17008                           	psect	text65
 17009  006442                     __ptext65:
 17010                           	callstack 0
 17011  006442                     _fputs:
 17012                           	callstack 14
 17013  006442  0E00               	movlw	0
 17014  006444  6E21               	movwf	(fputs@i+1)^0,c
 17015  006446  0E00               	movlw	0
 17016  006448  6E20               	movwf	fputs@i^0,c
 17017  00644A  EF32  F032         	goto	l8080
 17018  00644E                     l8076:
 17019  00644E  C01F  F012         	movff	fputs@c,fputc@c
 17020  006452  6A13               	clrf	(fputc@c+1)^0,c
 17021  006454  C01D  F014         	movff	fputs@fp,fputc@fp
 17022  006458  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
 17023  00645C  EC7D  F02A         	call	_fputc	;wreg free
 17024  006460  4A20               	infsnz	fputs@i^0,f,c
 17025  006462  2A21               	incf	(fputs@i+1)^0,f,c
 17026  006464                     l8080:
 17027  006464  5020               	movf	fputs@i^0,w,c
 17028  006466  241B               	addwf	fputs@s^0,w,c
 17029  006468  6ED9               	movwf	fsr2l,c
 17030  00646A  5021               	movf	(fputs@i+1)^0,w,c
 17031  00646C  201C               	addwfc	(fputs@s+1)^0,w,c
 17032  00646E  6EDA               	movwf	fsr2h,c
 17033  006470  50DF               	movf	indf2,w,c
 17034  006472  6E1F               	movwf	fputs@c^0,c
 17035  006474  501F               	movf	fputs@c^0,w,c
 17036  006476  A4D8               	btfss	status,2,c
 17037  006478  EF40  F032         	goto	u5761
 17038  00647C  EF42  F032         	goto	u5760
 17039  006480                     u5761:
 17040  006480  EF27  F032         	goto	l8076
 17041  006484                     u5760:
 17042  006484  0012               	return		;funcret
 17043  006486                     __end_of_fputs:
 17044                           	callstack 0
 17045                           
 17046 ;; *************** function _fputc *****************
 17047 ;; Defined at:
 17048 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;  c               2   17[COMRAM] int 
 17051 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 17052 ;;		 -> sprintf@f(6), 
 17053 ;; Auto vars:     Size  Location     Type
 17054 ;;		None
 17055 ;; Return value:  Size  Location     Type
 17056 ;;                  2   17[COMRAM] int 
 17057 ;; Registers used:
 17058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17059 ;; Tracked objects:
 17060 ;;		On entry : 0/0
 17061 ;;		On exit  : 0/0
 17062 ;;		Unchanged: 0/0
 17063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17064 ;;      Params:         4       0       0       0       0       0       0
 17065 ;;      Locals:         0       0       0       0       0       0       0
 17066 ;;      Temps:          5       0       0       0       0       0       0
 17067 ;;      Totals:         9       0       0       0       0       0       0
 17068 ;;Total ram usage:        9 bytes
 17069 ;; Hardware stack levels used: 1
 17070 ;; Hardware stack levels required when called: 5
 17071 ;; This function calls:
 17072 ;;		_putch
 17073 ;; This function is called by:
 17074 ;;		_pad
 17075 ;;		_vfpfcnvrt
 17076 ;;		_fputs
 17077 ;; This function uses a non-reentrant model
 17078 ;;
 17079                           
 17080                           	psect	text66
 17081  0054FA                     __ptext66:
 17082                           	callstack 0
 17083  0054FA                     _fputc:
 17084                           	callstack 17
 17085  0054FA  5014               	movf	fputc@fp^0,w,c
 17086  0054FC  1015               	iorwf	(fputc@fp+1)^0,w,c
 17087  0054FE  B4D8               	btfsc	status,2,c
 17088  005500  EF84  F02A         	goto	u5701
 17089  005504  EF86  F02A         	goto	u5700
 17090  005508                     u5701:
 17091  005508  EF8F  F02A         	goto	l8054
 17092  00550C                     u5700:
 17093  00550C  5014               	movf	fputc@fp^0,w,c
 17094  00550E  1015               	iorwf	(fputc@fp+1)^0,w,c
 17095  005510  A4D8               	btfss	status,2,c
 17096  005512  EF8D  F02A         	goto	u5711
 17097  005516  EF8F  F02A         	goto	u5710
 17098  00551A                     u5711:
 17099  00551A  EF94  F02A         	goto	l8056
 17100  00551E                     u5710:
 17101  00551E                     l8054:
 17102  00551E  5012               	movf	fputc@c^0,w,c
 17103  005520  ECAF  F033         	call	_putch
 17104  005524  EFE1  F02A         	goto	l1615
 17105  005528                     l8056:
 17106  005528  EE20 F004          	lfsr	2,4
 17107  00552C  5014               	movf	fputc@fp^0,w,c
 17108  00552E  26D9               	addwf	fsr2l,f,c
 17109  005530  5015               	movf	(fputc@fp+1)^0,w,c
 17110  005532  22DA               	addwfc	fsr2h,f,c
 17111  005534  50DE               	movf	postinc2,w,c
 17112  005536  10DE               	iorwf	postinc2,w,c
 17113  005538  B4D8               	btfsc	status,2,c
 17114  00553A  EFA1  F02A         	goto	u5721
 17115  00553E  EFA3  F02A         	goto	u5720
 17116  005542                     u5721:
 17117  005542  EFBE  F02A         	goto	l8060
 17118  005546                     u5720:
 17119  005546  EE20 F004          	lfsr	2,4
 17120  00554A  5014               	movf	fputc@fp^0,w,c
 17121  00554C  26D9               	addwf	fsr2l,f,c
 17122  00554E  5015               	movf	(fputc@fp+1)^0,w,c
 17123  005550  22DA               	addwfc	fsr2h,f,c
 17124  005552  EE10 F002          	lfsr	1,2
 17125  005556  5014               	movf	fputc@fp^0,w,c
 17126  005558  26E1               	addwf	fsr1l,f,c
 17127  00555A  5015               	movf	(fputc@fp+1)^0,w,c
 17128  00555C  22E2               	addwfc	fsr1h,f,c
 17129  00555E  50DE               	movf	postinc2,w,c
 17130  005560  5CE6               	subwf	postinc1,w,c
 17131  005562  50E6               	movf	postinc1,w,c
 17132  005564  0A80               	xorlw	128
 17133  005566  6E1A               	movwf	(??_fputc+4)^0,c
 17134  005568  50DE               	movf	postinc2,w,c
 17135  00556A  0A80               	xorlw	128
 17136  00556C  581A               	subwfb	(??_fputc+4)^0,w,c
 17137  00556E  B0D8               	btfsc	status,0,c
 17138  005570  EFBC  F02A         	goto	u5731
 17139  005574  EFBE  F02A         	goto	u5730
 17140  005578                     u5731:
 17141  005578  EFE1  F02A         	goto	l1615
 17142  00557C                     u5730:
 17143  00557C                     l8060:
 17144  00557C  EE20 F002          	lfsr	2,2
 17145  005580  5014               	movf	fputc@fp^0,w,c
 17146  005582  26D9               	addwf	fsr2l,f,c
 17147  005584  5015               	movf	(fputc@fp+1)^0,w,c
 17148  005586  22DA               	addwfc	fsr2h,f,c
 17149  005588  CFDE F016          	movff	postinc2,??_fputc
 17150  00558C  CFDD F017          	movff	postdec2,??_fputc+1
 17151  005590  C014  FFD9         	movff	fputc@fp,fsr2l
 17152  005594  C015  FFDA         	movff	fputc@fp+1,fsr2h
 17153  005598  CFDE F018          	movff	postinc2,??_fputc+2
 17154  00559C  CFDD F019          	movff	postdec2,??_fputc+3
 17155  0055A0  5016               	movf	??_fputc^0,w,c
 17156  0055A2  2418               	addwf	(??_fputc+2)^0,w,c
 17157  0055A4  6ED9               	movwf	fsr2l,c
 17158  0055A6  5017               	movf	(??_fputc+1)^0,w,c
 17159  0055A8  2019               	addwfc	(??_fputc+3)^0,w,c
 17160  0055AA  6EDA               	movwf	fsr2h,c
 17161  0055AC  C012  FFDF         	movff	fputc@c,indf2
 17162  0055B0  EE20 F002          	lfsr	2,2
 17163  0055B4  5014               	movf	fputc@fp^0,w,c
 17164  0055B6  26D9               	addwf	fsr2l,f,c
 17165  0055B8  5015               	movf	(fputc@fp+1)^0,w,c
 17166  0055BA  22DA               	addwfc	fsr2h,f,c
 17167  0055BC  2ADE               	incf	postinc2,f,c
 17168  0055BE  0E00               	movlw	0
 17169  0055C0  22DD               	addwfc	postdec2,f,c
 17170  0055C2                     l1615:
 17171  0055C2  0012               	return		;funcret
 17172  0055C4                     __end_of_fputc:
 17173                           	callstack 0
 17174                           
 17175 ;; *************** function _putch *****************
 17176 ;; Defined at:
 17177 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 17178 ;; Parameters:    Size  Location     Type
 17179 ;;  c               1    wreg     unsigned char 
 17180 ;; Auto vars:     Size  Location     Type
 17181 ;;  c               1    0[COMRAM] unsigned char 
 17182 ;; Return value:  Size  Location     Type
 17183 ;;                  1    wreg      void 
 17184 ;; Registers used:
 17185 ;;		wreg
 17186 ;; Tracked objects:
 17187 ;;		On entry : 0/0
 17188 ;;		On exit  : 0/0
 17189 ;;		Unchanged: 0/0
 17190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17191 ;;      Params:         0       0       0       0       0       0       0
 17192 ;;      Locals:         0       0       0       0       0       0       0
 17193 ;;      Temps:          0       0       0       0       0       0       0
 17194 ;;      Totals:         0       0       0       0       0       0       0
 17195 ;;Total ram usage:        0 bytes
 17196 ;; Hardware stack levels used: 1
 17197 ;; Hardware stack levels required when called: 4
 17198 ;; This function calls:
 17199 ;;		Nothing
 17200 ;; This function is called by:
 17201 ;;		_fputc
 17202 ;; This function uses a non-reentrant model
 17203 ;;
 17204                           
 17205                           	psect	text67
 17206  00675E                     __ptext67:
 17207                           	callstack 0
 17208  00675E                     _putch:
 17209                           	callstack 17
 17210  00675E  0012               	return		;funcret
 17211  006760                     __end_of_putch:
 17212                           	callstack 0
 17213                           
 17214 ;; *************** function _abs *****************
 17215 ;; Defined at:
 17216 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 17217 ;; Parameters:    Size  Location     Type
 17218 ;;  a               2   35[COMRAM] int 
 17219 ;; Auto vars:     Size  Location     Type
 17220 ;;		None
 17221 ;; Return value:  Size  Location     Type
 17222 ;;                  2   35[COMRAM] int 
 17223 ;; Registers used:
 17224 ;;		wreg, status,2, status,0
 17225 ;; Tracked objects:
 17226 ;;		On entry : 0/0
 17227 ;;		On exit  : 0/0
 17228 ;;		Unchanged: 0/0
 17229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17230 ;;      Params:         2       0       0       0       0       0       0
 17231 ;;      Locals:         0       0       0       0       0       0       0
 17232 ;;      Temps:          2       0       0       0       0       0       0
 17233 ;;      Totals:         4       0       0       0       0       0       0
 17234 ;;Total ram usage:        4 bytes
 17235 ;; Hardware stack levels used: 1
 17236 ;; Hardware stack levels required when called: 4
 17237 ;; This function calls:
 17238 ;;		Nothing
 17239 ;; This function is called by:
 17240 ;;		_dtoa
 17241 ;; This function uses a non-reentrant model
 17242 ;;
 17243                           
 17244                           	psect	text68
 17245  006486                     __ptext68:
 17246                           	callstack 0
 17247  006486                     _abs:
 17248                           	callstack 17
 17249  006486  BE25               	btfsc	(abs@a+1)^0,7,c
 17250  006488  EF50  F032         	goto	u5940
 17251  00648C  5025               	movf	(abs@a+1)^0,w,c
 17252  00648E  E106               	bnz	u5941
 17253  006490  0424               	decf	abs@a^0,w,c
 17254  006492  B0D8               	btfsc	status,0,c
 17255  006494  EF4E  F032         	goto	u5941
 17256  006498  EF50  F032         	goto	u5940
 17257  00649C                     u5941:
 17258  00649C  EF5E  F032         	goto	l1600
 17259  0064A0                     u5940:
 17260  0064A0  C024  F026         	movff	abs@a,??_abs
 17261  0064A4  C025  F027         	movff	abs@a+1,??_abs+1
 17262  0064A8  1E26               	comf	??_abs^0,f,c
 17263  0064AA  1E27               	comf	(??_abs+1)^0,f,c
 17264  0064AC  4A26               	infsnz	??_abs^0,f,c
 17265  0064AE  2A27               	incf	(??_abs+1)^0,f,c
 17266  0064B0  C026  F024         	movff	??_abs,?_abs
 17267  0064B4  C027  F025         	movff	??_abs+1,?_abs+1
 17268  0064B8  EF62  F032         	goto	l1603
 17269  0064BC                     l1600:
 17270  0064BC  C024  F024         	movff	abs@a,?_abs
 17271  0064C0  C025  F025         	movff	abs@a+1,?_abs+1
 17272  0064C4                     l1603:
 17273  0064C4  0012               	return		;funcret
 17274  0064C6                     __end_of_abs:
 17275                           	callstack 0
 17276                           
 17277 ;; *************** function ___aomod *****************
 17278 ;; Defined at:
 17279 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 17280 ;; Parameters:    Size  Location     Type
 17281 ;;  dividend        8   17[COMRAM] long long 
 17282 ;;  divisor         8   25[COMRAM] long long 
 17283 ;; Auto vars:     Size  Location     Type
 17284 ;;  sign            1   34[COMRAM] unsigned char 
 17285 ;;  counter         1   33[COMRAM] unsigned char 
 17286 ;; Return value:  Size  Location     Type
 17287 ;;                  8   17[COMRAM] long long 
 17288 ;; Registers used:
 17289 ;;		wreg, status,2, status,0
 17290 ;; Tracked objects:
 17291 ;;		On entry : 0/0
 17292 ;;		On exit  : 0/0
 17293 ;;		Unchanged: 0/0
 17294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17295 ;;      Params:        16       0       0       0       0       0       0
 17296 ;;      Locals:         2       0       0       0       0       0       0
 17297 ;;      Temps:          0       0       0       0       0       0       0
 17298 ;;      Totals:        18       0       0       0       0       0       0
 17299 ;;Total ram usage:       18 bytes
 17300 ;; Hardware stack levels used: 1
 17301 ;; Hardware stack levels required when called: 4
 17302 ;; This function calls:
 17303 ;;		Nothing
 17304 ;; This function is called by:
 17305 ;;		_dtoa
 17306 ;; This function uses a non-reentrant model
 17307 ;;
 17308                           
 17309                           	psect	text69
 17310  004182                     __ptext69:
 17311                           	callstack 0
 17312  004182                     ___aomod:
 17313                           	callstack 17
 17314  004182  0E00               	movlw	0
 17315  004184  6E23               	movwf	___aomod@sign^0,c
 17316  004186  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
 17317  004188  EFCA  F020         	goto	u5840
 17318  00418C  EFC8  F020         	goto	u5841
 17319  004190                     u5841:
 17320  004190  EFDC  F020         	goto	l8134
 17321  004194                     u5840:
 17322  004194  1E19               	comf	(___aomod@dividend+7)^0,f,c
 17323  004196  1E18               	comf	(___aomod@dividend+6)^0,f,c
 17324  004198  1E17               	comf	(___aomod@dividend+5)^0,f,c
 17325  00419A  1E16               	comf	(___aomod@dividend+4)^0,f,c
 17326  00419C  1E15               	comf	(___aomod@dividend+3)^0,f,c
 17327  00419E  1E14               	comf	(___aomod@dividend+2)^0,f,c
 17328  0041A0  1E13               	comf	(___aomod@dividend+1)^0,f,c
 17329  0041A2  6C12               	negf	___aomod@dividend^0,c
 17330  0041A4  0E00               	movlw	0
 17331  0041A6  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 17332  0041A8  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 17333  0041AA  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 17334  0041AC  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 17335  0041AE  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 17336  0041B0  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 17337  0041B2  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 17338  0041B4  0E01               	movlw	1
 17339  0041B6  6E23               	movwf	___aomod@sign^0,c
 17340  0041B8                     l8134:
 17341  0041B8  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
 17342  0041BA  EFE3  F020         	goto	u5850
 17343  0041BE  EFE1  F020         	goto	u5851
 17344  0041C2                     u5851:
 17345  0041C2  EFF3  F020         	goto	l8138
 17346  0041C6                     u5850:
 17347  0041C6  1E21               	comf	(___aomod@divisor+7)^0,f,c
 17348  0041C8  1E20               	comf	(___aomod@divisor+6)^0,f,c
 17349  0041CA  1E1F               	comf	(___aomod@divisor+5)^0,f,c
 17350  0041CC  1E1E               	comf	(___aomod@divisor+4)^0,f,c
 17351  0041CE  1E1D               	comf	(___aomod@divisor+3)^0,f,c
 17352  0041D0  1E1C               	comf	(___aomod@divisor+2)^0,f,c
 17353  0041D2  1E1B               	comf	(___aomod@divisor+1)^0,f,c
 17354  0041D4  6C1A               	negf	___aomod@divisor^0,c
 17355  0041D6  0E00               	movlw	0
 17356  0041D8  221B               	addwfc	(___aomod@divisor+1)^0,f,c
 17357  0041DA  221C               	addwfc	(___aomod@divisor+2)^0,f,c
 17358  0041DC  221D               	addwfc	(___aomod@divisor+3)^0,f,c
 17359  0041DE  221E               	addwfc	(___aomod@divisor+4)^0,f,c
 17360  0041E0  221F               	addwfc	(___aomod@divisor+5)^0,f,c
 17361  0041E2  2220               	addwfc	(___aomod@divisor+6)^0,f,c
 17362  0041E4  2221               	addwfc	(___aomod@divisor+7)^0,f,c
 17363  0041E6                     l8138:
 17364  0041E6  501A               	movf	___aomod@divisor^0,w,c
 17365  0041E8  101B               	iorwf	(___aomod@divisor+1)^0,w,c
 17366  0041EA  101C               	iorwf	(___aomod@divisor+2)^0,w,c
 17367  0041EC  101D               	iorwf	(___aomod@divisor+3)^0,w,c
 17368  0041EE  101E               	iorwf	(___aomod@divisor+4)^0,w,c
 17369  0041F0  101F               	iorwf	(___aomod@divisor+5)^0,w,c
 17370  0041F2  1020               	iorwf	(___aomod@divisor+6)^0,w,c
 17371  0041F4  1021               	iorwf	(___aomod@divisor+7)^0,w,c
 17372  0041F6  B4D8               	btfsc	status,2,c
 17373  0041F8  EF00  F021         	goto	u5861
 17374  0041FC  EF02  F021         	goto	u5860
 17375  004200                     u5861:
 17376  004200  EF4A  F021         	goto	l8154
 17377  004204                     u5860:
 17378  004204  0E01               	movlw	1
 17379  004206  6E22               	movwf	___aomod@counter^0,c
 17380  004208  EF10  F021         	goto	l8144
 17381  00420C                     l8142:
 17382  00420C  90D8               	bcf	status,0,c
 17383  00420E  361A               	rlcf	___aomod@divisor^0,f,c
 17384  004210  361B               	rlcf	(___aomod@divisor+1)^0,f,c
 17385  004212  361C               	rlcf	(___aomod@divisor+2)^0,f,c
 17386  004214  361D               	rlcf	(___aomod@divisor+3)^0,f,c
 17387  004216  361E               	rlcf	(___aomod@divisor+4)^0,f,c
 17388  004218  361F               	rlcf	(___aomod@divisor+5)^0,f,c
 17389  00421A  3620               	rlcf	(___aomod@divisor+6)^0,f,c
 17390  00421C  3621               	rlcf	(___aomod@divisor+7)^0,f,c
 17391  00421E  2A22               	incf	___aomod@counter^0,f,c
 17392  004220                     l8144:
 17393  004220  AE21               	btfss	(___aomod@divisor+7)^0,7,c
 17394  004222  EF15  F021         	goto	u5871
 17395  004226  EF17  F021         	goto	u5870
 17396  00422A                     u5871:
 17397  00422A  EF06  F021         	goto	l8142
 17398  00422E                     u5870:
 17399  00422E                     l8146:
 17400  00422E  501A               	movf	___aomod@divisor^0,w,c
 17401  004230  5C12               	subwf	___aomod@dividend^0,w,c
 17402  004232  501B               	movf	(___aomod@divisor+1)^0,w,c
 17403  004234  5813               	subwfb	(___aomod@dividend+1)^0,w,c
 17404  004236  501C               	movf	(___aomod@divisor+2)^0,w,c
 17405  004238  5814               	subwfb	(___aomod@dividend+2)^0,w,c
 17406  00423A  501D               	movf	(___aomod@divisor+3)^0,w,c
 17407  00423C  5815               	subwfb	(___aomod@dividend+3)^0,w,c
 17408  00423E  501E               	movf	(___aomod@divisor+4)^0,w,c
 17409  004240  5816               	subwfb	(___aomod@dividend+4)^0,w,c
 17410  004242  501F               	movf	(___aomod@divisor+5)^0,w,c
 17411  004244  5817               	subwfb	(___aomod@dividend+5)^0,w,c
 17412  004246  5020               	movf	(___aomod@divisor+6)^0,w,c
 17413  004248  5818               	subwfb	(___aomod@dividend+6)^0,w,c
 17414  00424A  5021               	movf	(___aomod@divisor+7)^0,w,c
 17415  00424C  5819               	subwfb	(___aomod@dividend+7)^0,w,c
 17416  00424E  A0D8               	btfss	status,0,c
 17417  004250  EF2C  F021         	goto	u5881
 17418  004254  EF2E  F021         	goto	u5880
 17419  004258                     u5881:
 17420  004258  EF3E  F021         	goto	l8150
 17421  00425C                     u5880:
 17422  00425C  501A               	movf	___aomod@divisor^0,w,c
 17423  00425E  5E12               	subwf	___aomod@dividend^0,f,c
 17424  004260  501B               	movf	(___aomod@divisor+1)^0,w,c
 17425  004262  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
 17426  004264  501C               	movf	(___aomod@divisor+2)^0,w,c
 17427  004266  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
 17428  004268  501D               	movf	(___aomod@divisor+3)^0,w,c
 17429  00426A  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
 17430  00426C  501E               	movf	(___aomod@divisor+4)^0,w,c
 17431  00426E  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
 17432  004270  501F               	movf	(___aomod@divisor+5)^0,w,c
 17433  004272  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
 17434  004274  5020               	movf	(___aomod@divisor+6)^0,w,c
 17435  004276  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
 17436  004278  5021               	movf	(___aomod@divisor+7)^0,w,c
 17437  00427A  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
 17438  00427C                     l8150:
 17439  00427C  90D8               	bcf	status,0,c
 17440  00427E  3221               	rrcf	(___aomod@divisor+7)^0,f,c
 17441  004280  3220               	rrcf	(___aomod@divisor+6)^0,f,c
 17442  004282  321F               	rrcf	(___aomod@divisor+5)^0,f,c
 17443  004284  321E               	rrcf	(___aomod@divisor+4)^0,f,c
 17444  004286  321D               	rrcf	(___aomod@divisor+3)^0,f,c
 17445  004288  321C               	rrcf	(___aomod@divisor+2)^0,f,c
 17446  00428A  321B               	rrcf	(___aomod@divisor+1)^0,f,c
 17447  00428C  321A               	rrcf	___aomod@divisor^0,f,c
 17448  00428E  2E22               	decfsz	___aomod@counter^0,f,c
 17449  004290  EF17  F021         	goto	l8146
 17450  004294                     l8154:
 17451  004294  5023               	movf	___aomod@sign^0,w,c
 17452  004296  B4D8               	btfsc	status,2,c
 17453  004298  EF50  F021         	goto	u5891
 17454  00429C  EF52  F021         	goto	u5890
 17455  0042A0                     u5891:
 17456  0042A0  EF62  F021         	goto	l8158
 17457  0042A4                     u5890:
 17458  0042A4  1E19               	comf	(___aomod@dividend+7)^0,f,c
 17459  0042A6  1E18               	comf	(___aomod@dividend+6)^0,f,c
 17460  0042A8  1E17               	comf	(___aomod@dividend+5)^0,f,c
 17461  0042AA  1E16               	comf	(___aomod@dividend+4)^0,f,c
 17462  0042AC  1E15               	comf	(___aomod@dividend+3)^0,f,c
 17463  0042AE  1E14               	comf	(___aomod@dividend+2)^0,f,c
 17464  0042B0  1E13               	comf	(___aomod@dividend+1)^0,f,c
 17465  0042B2  6C12               	negf	___aomod@dividend^0,c
 17466  0042B4  0E00               	movlw	0
 17467  0042B6  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 17468  0042B8  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 17469  0042BA  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 17470  0042BC  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 17471  0042BE  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 17472  0042C0  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 17473  0042C2  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 17474  0042C4                     l8158:
 17475  0042C4  C012  F012         	movff	___aomod@dividend,?___aomod
 17476  0042C8  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
 17477  0042CC  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
 17478  0042D0  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
 17479  0042D4  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
 17480  0042D8  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
 17481  0042DC  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
 17482  0042E0  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
 17483  0042E4  0012               	return		;funcret
 17484  0042E6                     __end_of___aomod:
 17485                           	callstack 0
 17486                           
 17487 ;; *************** function ___aodiv *****************
 17488 ;; Defined at:
 17489 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 17490 ;; Parameters:    Size  Location     Type
 17491 ;;  dividend        8   17[COMRAM] long long 
 17492 ;;  divisor         8   25[COMRAM] long long 
 17493 ;; Auto vars:     Size  Location     Type
 17494 ;;  quotient        8   35[COMRAM] long long 
 17495 ;;  sign            1   34[COMRAM] unsigned char 
 17496 ;;  counter         1   33[COMRAM] unsigned char 
 17497 ;; Return value:  Size  Location     Type
 17498 ;;                  8   17[COMRAM] long long 
 17499 ;; Registers used:
 17500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17501 ;; Tracked objects:
 17502 ;;		On entry : 0/0
 17503 ;;		On exit  : 0/0
 17504 ;;		Unchanged: 0/0
 17505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17506 ;;      Params:        16       0       0       0       0       0       0
 17507 ;;      Locals:        10       0       0       0       0       0       0
 17508 ;;      Temps:          0       0       0       0       0       0       0
 17509 ;;      Totals:        26       0       0       0       0       0       0
 17510 ;;Total ram usage:       26 bytes
 17511 ;; Hardware stack levels used: 1
 17512 ;; Hardware stack levels required when called: 4
 17513 ;; This function calls:
 17514 ;;		Nothing
 17515 ;; This function is called by:
 17516 ;;		_dtoa
 17517 ;; This function uses a non-reentrant model
 17518 ;;
 17519                           
 17520                           	psect	text70
 17521  003FFA                     __ptext70:
 17522                           	callstack 0
 17523  003FFA                     ___aodiv:
 17524                           	callstack 17
 17525  003FFA  0E00               	movlw	0
 17526  003FFC  6E23               	movwf	___aodiv@sign^0,c
 17527  003FFE  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
 17528  004000  EF06  F020         	goto	u5770
 17529  004004  EF04  F020         	goto	u5771
 17530  004008                     u5771:
 17531  004008  EF18  F020         	goto	l8090
 17532  00400C                     u5770:
 17533  00400C  1E21               	comf	(___aodiv@divisor+7)^0,f,c
 17534  00400E  1E20               	comf	(___aodiv@divisor+6)^0,f,c
 17535  004010  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
 17536  004012  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
 17537  004014  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
 17538  004016  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
 17539  004018  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
 17540  00401A  6C1A               	negf	___aodiv@divisor^0,c
 17541  00401C  0E00               	movlw	0
 17542  00401E  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
 17543  004020  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
 17544  004022  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
 17545  004024  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
 17546  004026  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
 17547  004028  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
 17548  00402A  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
 17549  00402C  0E01               	movlw	1
 17550  00402E  6E23               	movwf	___aodiv@sign^0,c
 17551  004030                     l8090:
 17552  004030  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
 17553  004032  EF1F  F020         	goto	u5780
 17554  004036  EF1D  F020         	goto	u5781
 17555  00403A                     u5781:
 17556  00403A  EF31  F020         	goto	l8096
 17557  00403E                     u5780:
 17558  00403E  1E19               	comf	(___aodiv@dividend+7)^0,f,c
 17559  004040  1E18               	comf	(___aodiv@dividend+6)^0,f,c
 17560  004042  1E17               	comf	(___aodiv@dividend+5)^0,f,c
 17561  004044  1E16               	comf	(___aodiv@dividend+4)^0,f,c
 17562  004046  1E15               	comf	(___aodiv@dividend+3)^0,f,c
 17563  004048  1E14               	comf	(___aodiv@dividend+2)^0,f,c
 17564  00404A  1E13               	comf	(___aodiv@dividend+1)^0,f,c
 17565  00404C  6C12               	negf	___aodiv@dividend^0,c
 17566  00404E  0E00               	movlw	0
 17567  004050  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
 17568  004052  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
 17569  004054  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
 17570  004056  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
 17571  004058  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
 17572  00405A  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
 17573  00405C  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
 17574  00405E  0E01               	movlw	1
 17575  004060  1A23               	xorwf	___aodiv@sign^0,f,c
 17576  004062                     l8096:
 17577  004062  EE20  F024         	lfsr	2,___aodiv@quotient
 17578  004066  0E07               	movlw	7
 17579  004068                     u5791:
 17580  004068  6ADE               	clrf	postinc2,c
 17581  00406A  06E8               	decf	wreg,f,c
 17582  00406C  E2FD               	bc	u5791
 17583  00406E  501A               	movf	___aodiv@divisor^0,w,c
 17584  004070  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
 17585  004072  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
 17586  004074  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
 17587  004076  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
 17588  004078  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
 17589  00407A  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
 17590  00407C  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
 17591  00407E  B4D8               	btfsc	status,2,c
 17592  004080  EF44  F020         	goto	u5801
 17593  004084  EF46  F020         	goto	u5800
 17594  004088                     u5801:
 17595  004088  EF98  F020         	goto	l8118
 17596  00408C                     u5800:
 17597  00408C  0E01               	movlw	1
 17598  00408E  6E22               	movwf	___aodiv@counter^0,c
 17599  004090  EF54  F020         	goto	l8104
 17600  004094                     l8102:
 17601  004094  90D8               	bcf	status,0,c
 17602  004096  361A               	rlcf	___aodiv@divisor^0,f,c
 17603  004098  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
 17604  00409A  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
 17605  00409C  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
 17606  00409E  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
 17607  0040A0  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
 17608  0040A2  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
 17609  0040A4  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
 17610  0040A6  2A22               	incf	___aodiv@counter^0,f,c
 17611  0040A8                     l8104:
 17612  0040A8  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
 17613  0040AA  EF59  F020         	goto	u5811
 17614  0040AE  EF5B  F020         	goto	u5810
 17615  0040B2                     u5811:
 17616  0040B2  EF4A  F020         	goto	l8102
 17617  0040B6                     u5810:
 17618  0040B6                     l8106:
 17619  0040B6  90D8               	bcf	status,0,c
 17620  0040B8  3624               	rlcf	___aodiv@quotient^0,f,c
 17621  0040BA  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
 17622  0040BC  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
 17623  0040BE  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
 17624  0040C0  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
 17625  0040C2  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
 17626  0040C4  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
 17627  0040C6  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
 17628  0040C8  501A               	movf	___aodiv@divisor^0,w,c
 17629  0040CA  5C12               	subwf	___aodiv@dividend^0,w,c
 17630  0040CC  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17631  0040CE  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
 17632  0040D0  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17633  0040D2  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
 17634  0040D4  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17635  0040D6  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
 17636  0040D8  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17637  0040DA  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
 17638  0040DC  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17639  0040DE  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
 17640  0040E0  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17641  0040E2  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
 17642  0040E4  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17643  0040E6  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
 17644  0040E8  A0D8               	btfss	status,0,c
 17645  0040EA  EF79  F020         	goto	u5821
 17646  0040EE  EF7B  F020         	goto	u5820
 17647  0040F2                     u5821:
 17648  0040F2  EF8C  F020         	goto	l8114
 17649  0040F6                     u5820:
 17650  0040F6  501A               	movf	___aodiv@divisor^0,w,c
 17651  0040F8  5E12               	subwf	___aodiv@dividend^0,f,c
 17652  0040FA  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17653  0040FC  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
 17654  0040FE  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17655  004100  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
 17656  004102  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17657  004104  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
 17658  004106  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17659  004108  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
 17660  00410A  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17661  00410C  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
 17662  00410E  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17663  004110  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
 17664  004112  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17665  004114  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
 17666  004116  8024               	bsf	___aodiv@quotient^0,0,c
 17667  004118                     l8114:
 17668  004118  90D8               	bcf	status,0,c
 17669  00411A  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
 17670  00411C  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
 17671  00411E  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
 17672  004120  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
 17673  004122  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
 17674  004124  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
 17675  004126  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
 17676  004128  321A               	rrcf	___aodiv@divisor^0,f,c
 17677  00412A  2E22               	decfsz	___aodiv@counter^0,f,c
 17678  00412C  EF5B  F020         	goto	l8106
 17679  004130                     l8118:
 17680  004130  5023               	movf	___aodiv@sign^0,w,c
 17681  004132  B4D8               	btfsc	status,2,c
 17682  004134  EF9E  F020         	goto	u5831
 17683  004138  EFA0  F020         	goto	u5830
 17684  00413C                     u5831:
 17685  00413C  EFB0  F020         	goto	l8122
 17686  004140                     u5830:
 17687  004140  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
 17688  004142  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
 17689  004144  1E29               	comf	(___aodiv@quotient+5)^0,f,c
 17690  004146  1E28               	comf	(___aodiv@quotient+4)^0,f,c
 17691  004148  1E27               	comf	(___aodiv@quotient+3)^0,f,c
 17692  00414A  1E26               	comf	(___aodiv@quotient+2)^0,f,c
 17693  00414C  1E25               	comf	(___aodiv@quotient+1)^0,f,c
 17694  00414E  6C24               	negf	___aodiv@quotient^0,c
 17695  004150  0E00               	movlw	0
 17696  004152  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
 17697  004154  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
 17698  004156  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
 17699  004158  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
 17700  00415A  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
 17701  00415C  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
 17702  00415E  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
 17703  004160                     l8122:
 17704  004160  C024  F012         	movff	___aodiv@quotient,?___aodiv
 17705  004164  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
 17706  004168  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
 17707  00416C  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
 17708  004170  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
 17709  004174  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
 17710  004178  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
 17711  00417C  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
 17712  004180  0012               	return		;funcret
 17713  004182                     __end_of___aodiv:
 17714                           	callstack 0
 17715                           
 17716 ;; *************** function _LCD_DrawText *****************
 17717 ;; Defined at:
 17718 ;;		line 713 in file "libraries/lcd_highlevel.c"
 17719 ;; Parameters:    Size  Location     Type
 17720 ;;  msg             2   31[COMRAM] PTR const unsigned char 
 17721 ;;		 -> g1.str(2), touchScreenController@s(20), STR_14(13), STR_13(13), 
 17722 ;;		 -> STR_12(6), STR_11(11), STR_10(11), STR_9(8), 
 17723 ;;		 -> STR_8(9), STR_7(2), STR_6(9), STR_5(9), 
 17724 ;;		 -> STR_4(11), g1(218), STR_1(10), 
 17725 ;;  font            2   33[COMRAM] PTR const struct .
 17726 ;;		 -> arialNarrow_12ptFontInfo(7), 
 17727 ;;  align           1   35[COMRAM] enum E355
 17728 ;;  posX            2   36[COMRAM] unsigned short 
 17729 ;;  posY            2   38[COMRAM] unsigned short 
 17730 ;;  color           2   40[COMRAM] unsigned short 
 17731 ;;  bg_color        2   42[COMRAM] unsigned short 
 17732 ;; Auto vars:     Size  Location     Type
 17733 ;;  posXEnd         2   58[COMRAM] unsigned short 
 17734 ;;  posYEnd         2   56[COMRAM] unsigned short 
 17735 ;;  yOffset         2   52[COMRAM] unsigned short 
 17736 ;;  offset          2   50[COMRAM] unsigned short 
 17737 ;;  width           1   64[COMRAM] unsigned char 
 17738 ;;  x               1   63[COMRAM] unsigned char 
 17739 ;;  tempChar        1   62[COMRAM] char 
 17740 ;;  i               1   61[COMRAM] unsigned char 
 17741 ;;  y               1   60[COMRAM] unsigned char 
 17742 ;;  fontPixel       1   55[COMRAM] unsigned char 
 17743 ;;  fontByte        1   54[COMRAM] unsigned char 
 17744 ;; Return value:  Size  Location     Type
 17745 ;;                  1    wreg      void 
 17746 ;; Registers used:
 17747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17748 ;; Tracked objects:
 17749 ;;		On entry : 0/0
 17750 ;;		On exit  : 0/0
 17751 ;;		Unchanged: 0/0
 17752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17753 ;;      Params:        13       0       0       0       0       0       0
 17754 ;;      Locals:        15       0       0       0       0       0       0
 17755 ;;      Temps:          6       0       0       0       0       0       0
 17756 ;;      Totals:        34       0       0       0       0       0       0
 17757 ;;Total ram usage:       34 bytes
 17758 ;; Hardware stack levels used: 1
 17759 ;; Hardware stack levels required when called: 5
 17760 ;; This function calls:
 17761 ;;		___awdiv
 17762 ;;		___wmul
 17763 ;;		_strlen
 17764 ;; This function is called by:
 17765 ;;		_Factory_init
 17766 ;;		_Score_draw
 17767 ;;		_Menu_welcomeDraw
 17768 ;;		_Menu_parametersDraw
 17769 ;;		_Menu_endGame
 17770 ;;		_LCD_ButtonDraw
 17771 ;;		_touchScreenController
 17772 ;; This function uses a non-reentrant model
 17773 ;;
 17774                           
 17775                           	psect	text71
 17776  001E28                     __ptext71:
 17777                           	callstack 0
 17778  001E28                     _LCD_DrawText:
 17779                           	callstack 20
 17780  001E28                     
 17781                           ;libraries/lcd_highlevel.c: 713: void LCD_DrawText(const uint8_t * msg,const FONT_INFO *
      +                           font, ALIGN align,;libraries/lcd_highlevel.c: 714:         uint16_t posX, uint16_t posY
      +                          , uint16_t color, uint16_t bg_color);libraries/lcd_highlevel.c: 715: {;libraries/lcd_hig
      +                          hlevel.c: 716:   uint8_t x,y,i;;libraries/lcd_highlevel.c: 717:   int8_t tempChar;;libra
      +                          ries/lcd_highlevel.c: 718:   uint16_t offset;;libraries/lcd_highlevel.c: 719:   uint8_t 
      +                          width=0;
 17782  001E28  0E00               	movlw	0
 17783  001E2A  6E41               	movwf	LCD_DrawText@width^0,c
 17784                           
 17785                           ;libraries/lcd_highlevel.c: 720:   uint8_t fontByte,fontPixel;;libraries/lcd_highlevel.c
      +                          : 721:   uint16_t posYEnd, posXEnd, yOffset;;libraries/lcd_highlevel.c: 725:   for(i=0;i
      +                          <strlen(msg);i++)
 17786  001E2C  0E00               	movlw	0
 17787  001E2E  6E3E               	movwf	LCD_DrawText@i^0,c
 17788  001E30  EF69  F00F         	goto	l8860
 17789  001E34                     l8854:
 17790                           
 17791                           ;libraries/lcd_highlevel.c: 726:   {;libraries/lcd_highlevel.c: 727:     tempChar = (msg
      +                          [i]) - font->start_char;
 17792  001E34  0E01               	movlw	1
 17793  001E36  2422               	addwf	LCD_DrawText@font^0,w,c
 17794  001E38  6E2D               	movwf	??_LCD_DrawText^0,c
 17795  001E3A  0E00               	movlw	0
 17796  001E3C  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17797  001E3E  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17798  001E40  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17799  001E44  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17800  001E48                     	if	0	;tblptru may be non-zero
 17801  001E48                     	endif
 17802  001E48                     	if	0	;tblptru may be non-zero
 17803  001E48                     	endif
 17804  001E48  0008               	tblrd		*
 17805  001E4A  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17806  001E4E  503E               	movf	LCD_DrawText@i^0,w,c
 17807  001E50  2420               	addwf	LCD_DrawText@msg^0,w,c
 17808  001E52  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17809  001E54  0E00               	movlw	0
 17810  001E56  2021               	addwfc	(LCD_DrawText@msg+1)^0,w,c
 17811  001E58  6E31               	movwf	(??_LCD_DrawText+4)^0,c
 17812  001E5A  C030  FFF6         	movff	??_LCD_DrawText+3,tblptrl
 17813  001E5E  C031  FFF7         	movff	??_LCD_DrawText+4,tblptrh
 17814  001E62  6AF8               	clrf	tblptru,c
 17815  001E64  0E05               	movlw	(high __ramtop+-1)
 17816  001E66  64F7               	cpfsgt	tblptrh,c
 17817  001E68  D003               	bra	u6477
 17818  001E6A  0008               	tblrd		*
 17819  001E6C  50F5               	movf	tablat,w,c
 17820  001E6E  D005               	bra	u6470
 17821  001E70                     u6477:
 17822  001E70  CFF6 FFE1          	movff	tblptrl,fsr1l
 17823  001E74  CFF7 FFE2          	movff	tblptrh,fsr1h
 17824  001E78  50E7               	movf	indf1,w,c
 17825  001E7A                     u6470:
 17826  001E7A  6E32               	movwf	(??_LCD_DrawText+5)^0,c
 17827  001E7C  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17828  001E7E  5C32               	subwf	(??_LCD_DrawText+5)^0,w,c
 17829  001E80  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17830  001E82                     
 17831                           ;libraries/lcd_highlevel.c: 728:     width += font->descriptor[tempChar].width+2;
 17832  001E82  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17833  001E84  6E1A               	movwf	___wmul@multiplier^0,c
 17834  001E86  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17835  001E88  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17836  001E8A  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17837  001E8C  0E00               	movlw	0
 17838  001E8E  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17839  001E90  0E03               	movlw	3
 17840  001E92  6E1C               	movwf	___wmul@multiplicand^0,c
 17841  001E94  EC05  F033         	call	___wmul	;wreg free
 17842  001E98  0E03               	movlw	3
 17843  001E9A  2422               	addwf	LCD_DrawText@font^0,w,c
 17844  001E9C  6E2D               	movwf	??_LCD_DrawText^0,c
 17845  001E9E  0E00               	movlw	0
 17846  001EA0  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17847  001EA2  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17848  001EA4  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17849  001EA8  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17850  001EAC                     	if	0	;tblptru may be non-zero
 17851  001EAC                     	endif
 17852  001EAC                     	if	0	;tblptru may be non-zero
 17853  001EAC                     	endif
 17854  001EAC  0009               	tblrd		*+
 17855  001EAE  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17856  001EB2  0009               	tblrd		*+
 17857  001EB4  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17858  001EB8  501A               	movf	?___wmul^0,w,c
 17859  001EBA  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17860  001EBC  501B               	movf	(?___wmul+1)^0,w,c
 17861  001EBE  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17862  001EC0  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17863  001EC4  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17864  001EC8                     	if	0	;tblptru may be non-zero
 17865  001EC8                     	endif
 17866  001EC8                     	if	0	;tblptru may be non-zero
 17867  001EC8                     	endif
 17868  001EC8  0008               	tblrd		*
 17869  001ECA  50F5               	movf	tablat,w,c
 17870  001ECC  0F02               	addlw	2
 17871  001ECE  2641               	addwf	LCD_DrawText@width^0,f,c
 17872  001ED0                     
 17873                           ;libraries/lcd_highlevel.c: 729:   }
 17874  001ED0  2A3E               	incf	LCD_DrawText@i^0,f,c
 17875  001ED2                     l8860:
 17876  001ED2  C020  F012         	movff	LCD_DrawText@msg,strlen@s
 17877  001ED6  C021  F013         	movff	LCD_DrawText@msg+1,strlen@s+1
 17878  001EDA  ECD8  F031         	call	_strlen	;wreg free
 17879  001EDE  503E               	movf	LCD_DrawText@i^0,w,c
 17880  001EE0  6E2D               	movwf	??_LCD_DrawText^0,c
 17881  001EE2  6A2E               	clrf	(??_LCD_DrawText+1)^0,c
 17882  001EE4  5012               	movf	?_strlen^0,w,c
 17883  001EE6  5C2D               	subwf	??_LCD_DrawText^0,w,c
 17884  001EE8  5013               	movf	(?_strlen+1)^0,w,c
 17885  001EEA  582E               	subwfb	(??_LCD_DrawText+1)^0,w,c
 17886  001EEC  A0D8               	btfss	status,0,c
 17887  001EEE  EF7B  F00F         	goto	u6481
 17888  001EF2  EF7D  F00F         	goto	u6480
 17889  001EF6                     u6481:
 17890  001EF6  EF1A  F00F         	goto	l8854
 17891  001EFA                     u6480:
 17892  001EFA                     
 17893                           ;libraries/lcd_highlevel.c: 730:   if(align == A_RIGHT)
 17894  001EFA  0424               	decf	LCD_DrawText@align^0,w,c
 17895  001EFC  A4D8               	btfss	status,2,c
 17896  001EFE  EF83  F00F         	goto	u6491
 17897  001F02  EF85  F00F         	goto	u6490
 17898  001F06                     u6491:
 17899  001F06  EF8E  F00F         	goto	l8866
 17900  001F0A                     u6490:
 17901  001F0A                     
 17902                           ;libraries/lcd_highlevel.c: 731:   {;libraries/lcd_highlevel.c: 732:     posX = posX - w
      +                          idth;
 17903  001F0A  5041               	movf	LCD_DrawText@width^0,w,c
 17904  001F0C  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17905  001F0E  6E25               	movwf	LCD_DrawText@posX^0,c
 17906  001F10  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17907  001F12  A0D8               	btfss	status,0,c
 17908  001F14  0426               	decf	(LCD_DrawText@posX+1)^0,w,c
 17909  001F16  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17910                           
 17911                           ;libraries/lcd_highlevel.c: 733:   }
 17912  001F18  EFA6  F00F         	goto	l8870
 17913  001F1C                     l8866:
 17914  001F1C  0E02               	movlw	2
 17915  001F1E  1824               	xorwf	LCD_DrawText@align^0,w,c
 17916  001F20  A4D8               	btfss	status,2,c
 17917  001F22  EF95  F00F         	goto	u6501
 17918  001F26  EF97  F00F         	goto	u6500
 17919  001F2A                     u6501:
 17920  001F2A  EFA6  F00F         	goto	l8870
 17921  001F2E                     u6500:
 17922  001F2E                     
 17923                           ;libraries/lcd_highlevel.c: 735:   {;libraries/lcd_highlevel.c: 736:     posX = posX - w
      +                          idth / 2;
 17924  001F2E  C041  F012         	movff	LCD_DrawText@width,___awdiv@dividend
 17925  001F32  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17926  001F34  0E00               	movlw	0
 17927  001F36  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17928  001F38  0E02               	movlw	2
 17929  001F3A  6E14               	movwf	___awdiv@divisor^0,c
 17930  001F3C  ECE2  F02A         	call	___awdiv	;wreg free
 17931  001F40  5012               	movf	?___awdiv^0,w,c
 17932  001F42  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17933  001F44  6E25               	movwf	LCD_DrawText@posX^0,c
 17934  001F46  5013               	movf	(?___awdiv+1)^0,w,c
 17935  001F48  5826               	subwfb	(LCD_DrawText@posX+1)^0,w,c
 17936  001F4A  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17937  001F4C                     l8870:
 17938                           
 17939                           ;libraries/lcd_highlevel.c: 740:   {;libraries/lcd_highlevel.c: 741:     tempChar = (*ms
      +                          g) - font->start_char;
 17940  001F4C  0E01               	movlw	1
 17941  001F4E  2422               	addwf	LCD_DrawText@font^0,w,c
 17942  001F50  6E2D               	movwf	??_LCD_DrawText^0,c
 17943  001F52  0E00               	movlw	0
 17944  001F54  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17945  001F56  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17946  001F58  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17947  001F5C  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17948  001F60                     	if	0	;tblptru may be non-zero
 17949  001F60                     	endif
 17950  001F60                     	if	0	;tblptru may be non-zero
 17951  001F60                     	endif
 17952  001F60  0008               	tblrd		*
 17953  001F62  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17954  001F66  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17955  001F6A  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17956  001F6E  6AF8               	clrf	tblptru,c
 17957  001F70  0E05               	movlw	(high __ramtop+-1)
 17958  001F72  64F7               	cpfsgt	tblptrh,c
 17959  001F74  D003               	bra	u6517
 17960  001F76  0008               	tblrd		*
 17961  001F78  50F5               	movf	tablat,w,c
 17962  001F7A  D005               	bra	u6510
 17963  001F7C                     u6517:
 17964  001F7C  CFF6 FFE1          	movff	tblptrl,fsr1l
 17965  001F80  CFF7 FFE2          	movff	tblptrh,fsr1h
 17966  001F84  50E7               	movf	indf1,w,c
 17967  001F86                     u6510:
 17968  001F86  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17969  001F88  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17970  001F8A  5C30               	subwf	(??_LCD_DrawText+3)^0,w,c
 17971  001F8C  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17972  001F8E                     
 17973                           ;libraries/lcd_highlevel.c: 742:     offset = font->descriptor[tempChar].offset;
 17974  001F8E  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17975  001F90  6E1A               	movwf	___wmul@multiplier^0,c
 17976  001F92  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17977  001F94  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17978  001F96  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17979  001F98  0E00               	movlw	0
 17980  001F9A  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17981  001F9C  0E03               	movlw	3
 17982  001F9E  6E1C               	movwf	___wmul@multiplicand^0,c
 17983  001FA0  EC05  F033         	call	___wmul	;wreg free
 17984  001FA4  0E03               	movlw	3
 17985  001FA6  2422               	addwf	LCD_DrawText@font^0,w,c
 17986  001FA8  6E2D               	movwf	??_LCD_DrawText^0,c
 17987  001FAA  0E00               	movlw	0
 17988  001FAC  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17989  001FAE  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17990  001FB0  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17991  001FB4  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17992  001FB8                     	if	0	;tblptru may be non-zero
 17993  001FB8                     	endif
 17994  001FB8                     	if	0	;tblptru may be non-zero
 17995  001FB8                     	endif
 17996  001FB8  0009               	tblrd		*+
 17997  001FBA  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17998  001FBE  0009               	tblrd		*+
 17999  001FC0  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 18000  001FC4  501A               	movf	?___wmul^0,w,c
 18001  001FC6  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 18002  001FC8  501B               	movf	(?___wmul+1)^0,w,c
 18003  001FCA  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 18004  001FCC  0E01               	movlw	1
 18005  001FCE  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 18006  001FD0  0E00               	movlw	0
 18007  001FD2  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 18008  001FD4  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 18009  001FD8  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 18010  001FDC                     	if	0	;tblptru may be non-zero
 18011  001FDC                     	endif
 18012  001FDC                     	if	0	;tblptru may be non-zero
 18013  001FDC                     	endif
 18014  001FDC  0009               	tblrd		*+
 18015  001FDE  CFF5 F033          	movff	tablat,LCD_DrawText@offset
 18016  001FE2  000A               	tblrd		*-
 18017  001FE4  CFF5 F034          	movff	tablat,LCD_DrawText@offset+1
 18018  001FE8                     
 18019                           ;libraries/lcd_highlevel.c: 743:     width = font->descriptor[tempChar].width;
 18020  001FE8  503F               	movf	LCD_DrawText@tempChar^0,w,c
 18021  001FEA  6E1A               	movwf	___wmul@multiplier^0,c
 18022  001FEC  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 18023  001FEE  BE1A               	btfsc	___wmul@multiplier^0,7,c
 18024  001FF0  061B               	decf	(___wmul@multiplier+1)^0,f,c
 18025  001FF2  0E00               	movlw	0
 18026  001FF4  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 18027  001FF6  0E03               	movlw	3
 18028  001FF8  6E1C               	movwf	___wmul@multiplicand^0,c
 18029  001FFA  EC05  F033         	call	___wmul	;wreg free
 18030  001FFE  0E03               	movlw	3
 18031  002000  2422               	addwf	LCD_DrawText@font^0,w,c
 18032  002002  6E2D               	movwf	??_LCD_DrawText^0,c
 18033  002004  0E00               	movlw	0
 18034  002006  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 18035  002008  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 18036  00200A  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 18037  00200E  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 18038  002012                     	if	0	;tblptru may be non-zero
 18039  002012                     	endif
 18040  002012                     	if	0	;tblptru may be non-zero
 18041  002012                     	endif
 18042  002012  0009               	tblrd		*+
 18043  002014  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 18044  002018  0009               	tblrd		*+
 18045  00201A  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 18046  00201E  501A               	movf	?___wmul^0,w,c
 18047  002020  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 18048  002022  501B               	movf	(?___wmul+1)^0,w,c
 18049  002024  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 18050  002026  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 18051  00202A  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 18052  00202E                     	if	0	;tblptru may be non-zero
 18053  00202E                     	endif
 18054  00202E                     	if	0	;tblptru may be non-zero
 18055  00202E                     	endif
 18056  00202E  0008               	tblrd		*
 18057  002030  CFF5 F041          	movff	tablat,LCD_DrawText@width
 18058  002034                     
 18059                           ;libraries/lcd_highlevel.c: 748:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18060  002034  0E2A               	movlw	42
 18061  002036  6E80               	movwf	128,c	;volatile
 18062  002038  988B               	bcf	3979,4,c	;volatile
 18063  00203A  968B               	bcf	3979,3,c	;volatile
 18064  00203C  868B               	bsf	3979,3,c	;volatile
 18065  00203E  888B               	bsf	3979,4,c	;volatile
 18066  002040                     
 18067                           ;libraries/lcd_highlevel.c: 749:     PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 18068  002040  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 18069  002042  6E80               	movwf	128,c	;volatile
 18070  002044  968B               	bcf	3979,3,c	;volatile
 18071  002046  868B               	bsf	3979,3,c	;volatile
 18072  002048                     
 18073                           ;libraries/lcd_highlevel.c: 750:     PORTA = posX; LATC3 = 0; LATC3 = 1;;
 18074  002048  C025  FF80         	movff	LCD_DrawText@posX,3968	;volatile
 18075  00204C  968B               	bcf	3979,3,c	;volatile
 18076  00204E  868B               	bsf	3979,3,c	;volatile
 18077  002050                     
 18078                           ;libraries/lcd_highlevel.c: 751:     posXEnd = posX+width-1+2;
 18079  002050  5041               	movf	LCD_DrawText@width^0,w,c
 18080  002052  2425               	addwf	LCD_DrawText@posX^0,w,c
 18081  002054  6E2D               	movwf	??_LCD_DrawText^0,c
 18082  002056  0E00               	movlw	0
 18083  002058  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 18084  00205A  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 18085  00205C  0E01               	movlw	1
 18086  00205E  242D               	addwf	??_LCD_DrawText^0,w,c
 18087  002060  6E3B               	movwf	LCD_DrawText@posXEnd^0,c
 18088  002062  0E00               	movlw	0
 18089  002064  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 18090  002066  6E3C               	movwf	(LCD_DrawText@posXEnd+1)^0,c
 18091  002068                     
 18092                           ;libraries/lcd_highlevel.c: 752:     PORTA = posXEnd>>8; LATC3 = 0; LATC3 = 1;;
 18093  002068  503C               	movf	(LCD_DrawText@posXEnd+1)^0,w,c
 18094  00206A  6E80               	movwf	128,c	;volatile
 18095  00206C  968B               	bcf	3979,3,c	;volatile
 18096  00206E  868B               	bsf	3979,3,c	;volatile
 18097  002070                     
 18098                           ;libraries/lcd_highlevel.c: 753:     PORTA = posXEnd; LATC3 = 0; LATC3 = 1;;
 18099  002070  C03B  FF80         	movff	LCD_DrawText@posXEnd,3968	;volatile
 18100  002074  968B               	bcf	3979,3,c	;volatile
 18101  002076  868B               	bsf	3979,3,c	;volatile
 18102  002078                     
 18103                           ;libraries/lcd_highlevel.c: 755:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18104  002078  0E2B               	movlw	43
 18105  00207A  6E80               	movwf	128,c	;volatile
 18106  00207C  988B               	bcf	3979,4,c	;volatile
 18107  00207E  968B               	bcf	3979,3,c	;volatile
 18108  002080  868B               	bsf	3979,3,c	;volatile
 18109  002082  888B               	bsf	3979,4,c	;volatile
 18110  002084                     
 18111                           ;libraries/lcd_highlevel.c: 756:     PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 18112  002084  5028               	movf	(LCD_DrawText@posY+1)^0,w,c
 18113  002086  6E80               	movwf	128,c	;volatile
 18114  002088  968B               	bcf	3979,3,c	;volatile
 18115  00208A  868B               	bsf	3979,3,c	;volatile
 18116  00208C                     
 18117                           ;libraries/lcd_highlevel.c: 757:     PORTA = posY; LATC3 = 0; LATC3 = 1;;
 18118  00208C  C027  FF80         	movff	LCD_DrawText@posY,3968	;volatile
 18119  002090  968B               	bcf	3979,3,c	;volatile
 18120  002092  868B               	bsf	3979,3,c	;volatile
 18121  002094                     
 18122                           ;libraries/lcd_highlevel.c: 758:     posYEnd = posY + font->height-1;
 18123  002094  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 18124  002098  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 18125  00209C                     	if	0	;tblptru may be non-zero
 18126  00209C                     	endif
 18127  00209C                     	if	0	;tblptru may be non-zero
 18128  00209C                     	endif
 18129  00209C  0008               	tblrd		*
 18130  00209E  50F5               	movf	tablat,w,c
 18131  0020A0  2427               	addwf	LCD_DrawText@posY^0,w,c
 18132  0020A2  6E2D               	movwf	??_LCD_DrawText^0,c
 18133  0020A4  0E00               	movlw	0
 18134  0020A6  2028               	addwfc	(LCD_DrawText@posY+1)^0,w,c
 18135  0020A8  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 18136  0020AA  0EFF               	movlw	255
 18137  0020AC  242D               	addwf	??_LCD_DrawText^0,w,c
 18138  0020AE  6E39               	movwf	LCD_DrawText@posYEnd^0,c
 18139  0020B0  0EFF               	movlw	255
 18140  0020B2  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 18141  0020B4  6E3A               	movwf	(LCD_DrawText@posYEnd+1)^0,c
 18142  0020B6                     
 18143                           ;libraries/lcd_highlevel.c: 759:     PORTA = posYEnd>>8; LATC3 = 0; LATC3 = 1;;
 18144  0020B6  503A               	movf	(LCD_DrawText@posYEnd+1)^0,w,c
 18145  0020B8  6E80               	movwf	128,c	;volatile
 18146  0020BA  968B               	bcf	3979,3,c	;volatile
 18147  0020BC  868B               	bsf	3979,3,c	;volatile
 18148  0020BE                     
 18149                           ;libraries/lcd_highlevel.c: 760:     PORTA = posYEnd; LATC3 = 0; LATC3 = 1;;
 18150  0020BE  C039  FF80         	movff	LCD_DrawText@posYEnd,3968	;volatile
 18151  0020C2  968B               	bcf	3979,3,c	;volatile
 18152  0020C4  868B               	bsf	3979,3,c	;volatile
 18153  0020C6                     
 18154                           ;libraries/lcd_highlevel.c: 761:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18155  0020C6  0E2C               	movlw	44
 18156  0020C8  6E80               	movwf	128,c	;volatile
 18157  0020CA  988B               	bcf	3979,4,c	;volatile
 18158  0020CC  968B               	bcf	3979,3,c	;volatile
 18159  0020CE  868B               	bsf	3979,3,c	;volatile
 18160  0020D0  888B               	bsf	3979,4,c	;volatile
 18161  0020D2                     
 18162                           ;libraries/lcd_highlevel.c: 763:     for(y=0;y<font->height;y++)
 18163  0020D2  0E00               	movlw	0
 18164  0020D4  6E3D               	movwf	LCD_DrawText@y^0,c
 18165  0020D6  EF04  F011         	goto	l9022
 18166  0020DA                     l8960:
 18167                           
 18168                           ;libraries/lcd_highlevel.c: 764:     {;libraries/lcd_highlevel.c: 765:       yOffset = o
      +                          ffset + (y * ((width+7)/8));
 18169  0020DA  C03D  F01A         	movff	LCD_DrawText@y,___wmul@multiplier
 18170  0020DE  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 18171  0020E0  0E00               	movlw	0
 18172  0020E2  6E15               	movwf	(___awdiv@divisor+1)^0,c
 18173  0020E4  0E08               	movlw	8
 18174  0020E6  6E14               	movwf	___awdiv@divisor^0,c
 18175  0020E8  0E07               	movlw	7
 18176  0020EA  2441               	addwf	LCD_DrawText@width^0,w,c
 18177  0020EC  6E12               	movwf	___awdiv@dividend^0,c
 18178  0020EE  6A13               	clrf	(___awdiv@dividend+1)^0,c
 18179  0020F0  0E00               	movlw	0
 18180  0020F2  2213               	addwfc	(___awdiv@dividend+1)^0,f,c
 18181  0020F4  ECE2  F02A         	call	___awdiv	;wreg free
 18182  0020F8  C012  F01C         	movff	?___awdiv,___wmul@multiplicand
 18183  0020FC  C013  F01D         	movff	?___awdiv+1,___wmul@multiplicand+1
 18184  002100  EC05  F033         	call	___wmul	;wreg free
 18185  002104  5033               	movf	LCD_DrawText@offset^0,w,c
 18186  002106  241A               	addwf	?___wmul^0,w,c
 18187  002108  6E35               	movwf	LCD_DrawText@yOffset^0,c
 18188  00210A  5034               	movf	(LCD_DrawText@offset+1)^0,w,c
 18189  00210C  201B               	addwfc	(?___wmul+1)^0,w,c
 18190  00210E  6E36               	movwf	(LCD_DrawText@yOffset+1)^0,c
 18191  002110                     
 18192                           ;libraries/lcd_highlevel.c: 766:       for(x=0;x<width;x++)
 18193  002110  0E00               	movlw	0
 18194  002112  6E40               	movwf	LCD_DrawText@x^0,c
 18195  002114  EFE3  F010         	goto	l8996
 18196  002118                     l8964:
 18197                           
 18198                           ;libraries/lcd_highlevel.c: 767:       {;libraries/lcd_highlevel.c: 768:         fontByt
      +                          e = font->bitmap[yOffset + (x/8)];
 18199  002118  C040  F012         	movff	LCD_DrawText@x,___awdiv@dividend
 18200  00211C  6A13               	clrf	(___awdiv@dividend+1)^0,c
 18201  00211E  0E00               	movlw	0
 18202  002120  6E15               	movwf	(___awdiv@divisor+1)^0,c
 18203  002122  0E08               	movlw	8
 18204  002124  6E14               	movwf	___awdiv@divisor^0,c
 18205  002126  ECE2  F02A         	call	___awdiv	;wreg free
 18206  00212A  0E05               	movlw	5
 18207  00212C  2422               	addwf	LCD_DrawText@font^0,w,c
 18208  00212E  6E2D               	movwf	??_LCD_DrawText^0,c
 18209  002130  0E00               	movlw	0
 18210  002132  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 18211  002134  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 18212  002136  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 18213  00213A  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 18214  00213E                     	if	0	;tblptru may be non-zero
 18215  00213E                     	endif
 18216  00213E                     	if	0	;tblptru may be non-zero
 18217  00213E                     	endif
 18218  00213E  0009               	tblrd		*+
 18219  002140  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 18220  002144  0009               	tblrd		*+
 18221  002146  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 18222  00214A  5012               	movf	?___awdiv^0,w,c
 18223  00214C  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 18224  00214E  5013               	movf	(?___awdiv+1)^0,w,c
 18225  002150  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 18226  002152  5035               	movf	LCD_DrawText@yOffset^0,w,c
 18227  002154  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 18228  002156  5036               	movf	(LCD_DrawText@yOffset+1)^0,w,c
 18229  002158  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 18230  00215A  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 18231  00215E  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 18232  002162                     	if	0	;tblptru may be non-zero
 18233  002162                     	endif
 18234  002162                     	if	0	;tblptru may be non-zero
 18235  002162                     	endif
 18236  002162  0008               	tblrd		*
 18237  002164  CFF5 F037          	movff	tablat,LCD_DrawText@fontByte
 18238  002168                     
 18239                           ;libraries/lcd_highlevel.c: 769:         fontPixel = fontByte & (0x80 >> (x%8));
 18240  002168  C040  F02D         	movff	LCD_DrawText@x,??_LCD_DrawText
 18241  00216C  0E07               	movlw	7
 18242  00216E  162D               	andwf	??_LCD_DrawText^0,f,c
 18243  002170  0E80               	movlw	128
 18244  002172  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 18245  002174  0E00               	movlw	0
 18246  002176  6E2F               	movwf	(??_LCD_DrawText+2)^0,c
 18247  002178  2A2D               	incf	??_LCD_DrawText^0,f,c
 18248  00217A  EFC2  F010         	goto	u6524
 18249  00217E                     u6525:
 18250  00217E  342F               	rlcf	(??_LCD_DrawText+2)^0,w,c
 18251  002180  322F               	rrcf	(??_LCD_DrawText+2)^0,f,c
 18252  002182  322E               	rrcf	(??_LCD_DrawText+1)^0,f,c
 18253  002184                     u6524:
 18254  002184  2E2D               	decfsz	??_LCD_DrawText^0,f,c
 18255  002186  EFBF  F010         	goto	u6525
 18256  00218A  502E               	movf	(??_LCD_DrawText+1)^0,w,c
 18257  00218C  1437               	andwf	LCD_DrawText@fontByte^0,w,c
 18258  00218E  6E38               	movwf	LCD_DrawText@fontPixel^0,c
 18259  002190                     
 18260                           ;libraries/lcd_highlevel.c: 770:         if(fontPixel != 0)
 18261  002190  5038               	movf	LCD_DrawText@fontPixel^0,w,c
 18262  002192  B4D8               	btfsc	status,2,c
 18263  002194  EFCE  F010         	goto	u6531
 18264  002198  EFD0  F010         	goto	u6530
 18265  00219C                     u6531:
 18266  00219C  EFDA  F010         	goto	l8982
 18267  0021A0                     u6530:
 18268  0021A0                     
 18269                           ;libraries/lcd_highlevel.c: 771:         {;libraries/lcd_highlevel.c: 772:           POR
      +                          TA = color>>8; LATC3 = 0; LATC3 = 1;;
 18270  0021A0  502A               	movf	(LCD_DrawText@color+1)^0,w,c
 18271  0021A2  6E80               	movwf	128,c	;volatile
 18272  0021A4  968B               	bcf	3979,3,c	;volatile
 18273  0021A6  868B               	bsf	3979,3,c	;volatile
 18274  0021A8                     
 18275                           ;libraries/lcd_highlevel.c: 773:           PORTA = color; LATC3 = 0; LATC3 = 1;;
 18276  0021A8  C029  FF80         	movff	LCD_DrawText@color,3968	;volatile
 18277  0021AC                     l8978:
 18278  0021AC  968B               	bcf	3979,3,c	;volatile
 18279  0021AE  868B               	bsf	3979,3,c	;volatile
 18280                           
 18281                           ;libraries/lcd_highlevel.c: 774:         }
 18282  0021B0  EFE2  F010         	goto	l8994
 18283  0021B4                     l8982:
 18284                           
 18285                           ;libraries/lcd_highlevel.c: 776:         {;libraries/lcd_highlevel.c: 777:           POR
      +                          TA = bg_color>>8; LATC3 = 0; LATC3 = 1;;
 18286  0021B4  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 18287  0021B6  6E80               	movwf	128,c	;volatile
 18288  0021B8  968B               	bcf	3979,3,c	;volatile
 18289  0021BA  868B               	bsf	3979,3,c	;volatile
 18290  0021BC                     
 18291                           ;libraries/lcd_highlevel.c: 778:           PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 18292  0021BC  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 18293  0021C0  EFD6  F010         	goto	l8978
 18294  0021C4                     l8994:
 18295                           
 18296                           ;libraries/lcd_highlevel.c: 780:       }
 18297  0021C4  2A40               	incf	LCD_DrawText@x^0,f,c
 18298  0021C6                     l8996:
 18299  0021C6  5041               	movf	LCD_DrawText@width^0,w,c
 18300  0021C8  5C40               	subwf	LCD_DrawText@x^0,w,c
 18301  0021CA  A0D8               	btfss	status,0,c
 18302  0021CC  EFEA  F010         	goto	u6541
 18303  0021D0  EFEC  F010         	goto	u6540
 18304  0021D4                     u6541:
 18305  0021D4  EF8C  F010         	goto	l8964
 18306  0021D8                     u6540:
 18307  0021D8                     
 18308                           ;libraries/lcd_highlevel.c: 781:       for(x=0;x<2;x++)
 18309  0021D8  0E00               	movlw	0
 18310  0021DA  6E40               	movwf	LCD_DrawText@x^0,c
 18311  0021DC                     l9000:
 18312  0021DC  0E01               	movlw	1
 18313  0021DE  6440               	cpfsgt	LCD_DrawText@x^0,c
 18314  0021E0  EFF4  F010         	goto	u6551
 18315  0021E4  EFF6  F010         	goto	u6550
 18316  0021E8                     u6551:
 18317  0021E8  EFF8  F010         	goto	l9004
 18318  0021EC                     u6550:
 18319  0021EC  EF03  F011         	goto	l9020
 18320  0021F0                     l9004:
 18321                           
 18322                           ;libraries/lcd_highlevel.c: 782:       {;libraries/lcd_highlevel.c: 783:         PORTA =
      +                           bg_color>>8; LATC3 = 0; LATC3 = 1;;
 18323  0021F0  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 18324  0021F2  6E80               	movwf	128,c	;volatile
 18325  0021F4  968B               	bcf	3979,3,c	;volatile
 18326  0021F6  868B               	bsf	3979,3,c	;volatile
 18327  0021F8                     
 18328                           ;libraries/lcd_highlevel.c: 784:         PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 18329  0021F8  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 18330  0021FC  968B               	bcf	3979,3,c	;volatile
 18331  0021FE  868B               	bsf	3979,3,c	;volatile
 18332  002200                     
 18333                           ;libraries/lcd_highlevel.c: 785:       }
 18334  002200  2A40               	incf	LCD_DrawText@x^0,f,c
 18335  002202  EFEE  F010         	goto	l9000
 18336  002206                     l9020:
 18337                           
 18338                           ;libraries/lcd_highlevel.c: 786:     }
 18339  002206  2A3D               	incf	LCD_DrawText@y^0,f,c
 18340  002208                     l9022:
 18341  002208  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 18342  00220C  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 18343  002210                     	if	0	;tblptru may be non-zero
 18344  002210                     	endif
 18345  002210                     	if	0	;tblptru may be non-zero
 18346  002210                     	endif
 18347  002210  0009               	tblrd		*+
 18348  002212  50F5               	movf	tablat,w,c
 18349  002214  5C3D               	subwf	LCD_DrawText@y^0,w,c
 18350  002216  A0D8               	btfss	status,0,c
 18351  002218  EF10  F011         	goto	u6561
 18352  00221C  EF12  F011         	goto	u6560
 18353  002220                     u6561:
 18354  002220  EF6D  F010         	goto	l8960
 18355  002224                     u6560:
 18356  002224                     
 18357                           ;libraries/lcd_highlevel.c: 787:     posX = posX + 2 + width;
 18358  002224  5041               	movf	LCD_DrawText@width^0,w,c
 18359  002226  2425               	addwf	LCD_DrawText@posX^0,w,c
 18360  002228  6E2D               	movwf	??_LCD_DrawText^0,c
 18361  00222A  0E00               	movlw	0
 18362  00222C  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 18363  00222E  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 18364  002230  0E02               	movlw	2
 18365  002232  242D               	addwf	??_LCD_DrawText^0,w,c
 18366  002234  6E25               	movwf	LCD_DrawText@posX^0,c
 18367  002236  0E00               	movlw	0
 18368  002238  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 18369  00223A  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 18370  00223C                     
 18371                           ;libraries/lcd_highlevel.c: 788:     msg++;
 18372  00223C  4A20               	infsnz	LCD_DrawText@msg^0,f,c
 18373  00223E  2A21               	incf	(LCD_DrawText@msg+1)^0,f,c
 18374  002240                     
 18375                           ;libraries/lcd_highlevel.c: 789:  }while(*msg != 0);
 18376  002240  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 18377  002244  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 18378  002248  6AF8               	clrf	tblptru,c
 18379  00224A  0E05               	movlw	(high __ramtop+-1)
 18380  00224C  64F7               	cpfsgt	tblptrh,c
 18381  00224E  D003               	bra	u6577
 18382  002250  0008               	tblrd		*
 18383  002252  50F5               	movf	tablat,w,c
 18384  002254  D005               	bra	u6570
 18385  002256                     u6577:
 18386  002256  CFF6 FFE1          	movff	tblptrl,fsr1l
 18387  00225A  CFF7 FFE2          	movff	tblptrh,fsr1h
 18388  00225E  50E7               	movf	indf1,w,c
 18389  002260                     u6570:
 18390  002260  0900               	iorlw	0
 18391  002262  A4D8               	btfss	status,2,c
 18392  002264  EF36  F011         	goto	u6581
 18393  002268  EF38  F011         	goto	u6580
 18394  00226C                     u6581:
 18395  00226C  EFA6  F00F         	goto	l8870
 18396  002270                     u6580:
 18397  002270  0012               	return		;funcret
 18398  002272                     __end_of_LCD_DrawText:
 18399                           	callstack 0
 18400                           
 18401 ;; *************** function _strlen *****************
 18402 ;; Defined at:
 18403 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 18404 ;; Parameters:    Size  Location     Type
 18405 ;;  s               2   17[COMRAM] PTR const unsigned char 
 18406 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 18407 ;;		 -> STR_13(13), STR_12(6), STR_11(11), STR_10(11), 
 18408 ;;		 -> STR_9(8), STR_8(9), STR_7(2), STR_6(9), 
 18409 ;;		 -> STR_5(9), STR_4(11), g1(218), STR_1(10), 
 18410 ;; Auto vars:     Size  Location     Type
 18411 ;;  a               2   19[COMRAM] PTR const unsigned char 
 18412 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 18413 ;;		 -> STR_13(13), STR_12(6), STR_11(11), STR_10(11), 
 18414 ;;		 -> STR_9(8), STR_8(9), STR_7(2), STR_6(9), 
 18415 ;;		 -> STR_5(9), STR_4(11), g1(218), STR_1(10), 
 18416 ;; Return value:  Size  Location     Type
 18417 ;;                  2   17[COMRAM] unsigned int 
 18418 ;; Registers used:
 18419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 18420 ;; Tracked objects:
 18421 ;;		On entry : 0/0
 18422 ;;		On exit  : 0/0
 18423 ;;		Unchanged: 0/0
 18424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18425 ;;      Params:         2       0       0       0       0       0       0
 18426 ;;      Locals:         2       0       0       0       0       0       0
 18427 ;;      Temps:          0       0       0       0       0       0       0
 18428 ;;      Totals:         4       0       0       0       0       0       0
 18429 ;;Total ram usage:        4 bytes
 18430 ;; Hardware stack levels used: 1
 18431 ;; Hardware stack levels required when called: 4
 18432 ;; This function calls:
 18433 ;;		Nothing
 18434 ;; This function is called by:
 18435 ;;		_LCD_ButtonDraw
 18436 ;;		_LCD_DrawText
 18437 ;;		_pad
 18438 ;; This function uses a non-reentrant model
 18439 ;;
 18440                           
 18441                           	psect	text72
 18442  0063B0                     __ptext72:
 18443                           	callstack 0
 18444  0063B0                     _strlen:
 18445                           	callstack 16
 18446  0063B0  C012  F014         	movff	strlen@s,strlen@a
 18447  0063B4  C013  F015         	movff	strlen@s+1,strlen@a+1
 18448  0063B8  EFE0  F031         	goto	l8068
 18449  0063BC                     l8066:
 18450  0063BC  4A12               	infsnz	strlen@s^0,f,c
 18451  0063BE  2A13               	incf	(strlen@s+1)^0,f,c
 18452  0063C0                     l8068:
 18453  0063C0  C012  FFF6         	movff	strlen@s,tblptrl
 18454  0063C4  C013  FFF7         	movff	strlen@s+1,tblptrh
 18455  0063C8  6AF8               	clrf	tblptru,c
 18456  0063CA  0E05               	movlw	(high __ramtop+-1)
 18457  0063CC  64F7               	cpfsgt	tblptrh,c
 18458  0063CE  D003               	bra	u5747
 18459  0063D0  0008               	tblrd		*
 18460  0063D2  50F5               	movf	tablat,w,c
 18461  0063D4  D005               	bra	u5740
 18462  0063D6                     u5747:
 18463  0063D6  CFF6 FFE1          	movff	tblptrl,fsr1l
 18464  0063DA  CFF7 FFE2          	movff	tblptrh,fsr1h
 18465  0063DE  50E7               	movf	indf1,w,c
 18466  0063E0                     u5740:
 18467  0063E0  0900               	iorlw	0
 18468  0063E2  A4D8               	btfss	status,2,c
 18469  0063E4  EFF6  F031         	goto	u5751
 18470  0063E8  EFF8  F031         	goto	u5750
 18471  0063EC                     u5751:
 18472  0063EC  EFDE  F031         	goto	l8066
 18473  0063F0                     u5750:
 18474  0063F0  5014               	movf	strlen@a^0,w,c
 18475  0063F2  5C12               	subwf	strlen@s^0,w,c
 18476  0063F4  6E12               	movwf	?_strlen^0,c
 18477  0063F6  5015               	movf	(strlen@a+1)^0,w,c
 18478  0063F8  5813               	subwfb	(strlen@s+1)^0,w,c
 18479  0063FA  6E13               	movwf	(?_strlen+1)^0,c
 18480  0063FC  0012               	return		;funcret
 18481  0063FE                     __end_of_strlen:
 18482                           	callstack 0
 18483                           
 18484 ;; *************** function ___wmul *****************
 18485 ;; Defined at:
 18486 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 18487 ;; Parameters:    Size  Location     Type
 18488 ;;  multiplier      2   25[COMRAM] unsigned int 
 18489 ;;  multiplicand    2   27[COMRAM] unsigned int 
 18490 ;; Auto vars:     Size  Location     Type
 18491 ;;  product         2   29[COMRAM] unsigned int 
 18492 ;; Return value:  Size  Location     Type
 18493 ;;                  2   25[COMRAM] unsigned int 
 18494 ;; Registers used:
 18495 ;;		wreg, status,2, status,0, prodl, prodh
 18496 ;; Tracked objects:
 18497 ;;		On entry : 0/0
 18498 ;;		On exit  : 0/0
 18499 ;;		Unchanged: 0/0
 18500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18501 ;;      Params:         4       0       0       0       0       0       0
 18502 ;;      Locals:         2       0       0       0       0       0       0
 18503 ;;      Temps:          0       0       0       0       0       0       0
 18504 ;;      Totals:         6       0       0       0       0       0       0
 18505 ;;Total ram usage:        6 bytes
 18506 ;; Hardware stack levels used: 1
 18507 ;; Hardware stack levels required when called: 4
 18508 ;; This function calls:
 18509 ;;		Nothing
 18510 ;; This function is called by:
 18511 ;;		_LCD_SliderUpdate
 18512 ;;		_LCD_DrawText
 18513 ;;		_LCD_Bitmap
 18514 ;;		_XF_init
 18515 ;; This function uses a non-reentrant model
 18516 ;;
 18517                           
 18518                           	psect	text73
 18519  00660A                     __ptext73:
 18520                           	callstack 0
 18521  00660A                     ___wmul:
 18522                           	callstack 21
 18523  00660A  501A               	movf	___wmul@multiplier^0,w,c
 18524  00660C  021C               	mulwf	___wmul@multiplicand^0,c
 18525  00660E  CFF3 F01E          	movff	prodl,___wmul@product
 18526  006612  CFF4 F01F          	movff	prodh,___wmul@product+1
 18527  006616  501A               	movf	___wmul@multiplier^0,w,c
 18528  006618  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 18529  00661A  50F3               	movf	243,w,c
 18530  00661C  261F               	addwf	(___wmul@product+1)^0,f,c
 18531  00661E  501B               	movf	(___wmul@multiplier+1)^0,w,c
 18532  006620  021C               	mulwf	___wmul@multiplicand^0,c
 18533  006622  50F3               	movf	243,w,c
 18534  006624  261F               	addwf	(___wmul@product+1)^0,f,c
 18535  006626  C01E  F01A         	movff	___wmul@product,?___wmul
 18536  00662A  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 18537  00662E  0012               	return		;funcret
 18538  006630                     __end_of___wmul:
 18539                           	callstack 0
 18540                           
 18541 ;; *************** function ___awdiv *****************
 18542 ;; Defined at:
 18543 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 18544 ;; Parameters:    Size  Location     Type
 18545 ;;  dividend        2   17[COMRAM] int 
 18546 ;;  divisor         2   19[COMRAM] int 
 18547 ;; Auto vars:     Size  Location     Type
 18548 ;;  quotient        2   23[COMRAM] int 
 18549 ;;  sign            1   22[COMRAM] unsigned char 
 18550 ;;  counter         1   21[COMRAM] unsigned char 
 18551 ;; Return value:  Size  Location     Type
 18552 ;;                  2   17[COMRAM] int 
 18553 ;; Registers used:
 18554 ;;		wreg, status,2, status,0
 18555 ;; Tracked objects:
 18556 ;;		On entry : 0/0
 18557 ;;		On exit  : 0/0
 18558 ;;		Unchanged: 0/0
 18559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18560 ;;      Params:         4       0       0       0       0       0       0
 18561 ;;      Locals:         4       0       0       0       0       0       0
 18562 ;;      Temps:          0       0       0       0       0       0       0
 18563 ;;      Totals:         8       0       0       0       0       0       0
 18564 ;;Total ram usage:        8 bytes
 18565 ;; Hardware stack levels used: 1
 18566 ;; Hardware stack levels required when called: 4
 18567 ;; This function calls:
 18568 ;;		Nothing
 18569 ;; This function is called by:
 18570 ;;		_LCD_ButtonDraw
 18571 ;;		_LCD_DrawText
 18572 ;; This function uses a non-reentrant model
 18573 ;;
 18574                           
 18575                           	psect	text74
 18576  0055C4                     __ptext74:
 18577                           	callstack 0
 18578  0055C4                     ___awdiv:
 18579                           	callstack 20
 18580  0055C4  0E00               	movlw	0
 18581  0055C6  6E17               	movwf	___awdiv@sign^0,c
 18582  0055C8  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
 18583  0055CA  EFEB  F02A         	goto	u6250
 18584  0055CE  EFE9  F02A         	goto	u6251
 18585  0055D2                     u6251:
 18586  0055D2  EFF1  F02A         	goto	l8700
 18587  0055D6                     u6250:
 18588  0055D6  6C14               	negf	___awdiv@divisor^0,c
 18589  0055D8  1E15               	comf	(___awdiv@divisor+1)^0,f,c
 18590  0055DA  B0D8               	btfsc	status,0,c
 18591  0055DC  2A15               	incf	(___awdiv@divisor+1)^0,f,c
 18592  0055DE  0E01               	movlw	1
 18593  0055E0  6E17               	movwf	___awdiv@sign^0,c
 18594  0055E2                     l8700:
 18595  0055E2  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
 18596  0055E4  EFF8  F02A         	goto	u6260
 18597  0055E8  EFF6  F02A         	goto	u6261
 18598  0055EC                     u6261:
 18599  0055EC  EFFE  F02A         	goto	l8706
 18600  0055F0                     u6260:
 18601  0055F0  6C12               	negf	___awdiv@dividend^0,c
 18602  0055F2  1E13               	comf	(___awdiv@dividend+1)^0,f,c
 18603  0055F4  B0D8               	btfsc	status,0,c
 18604  0055F6  2A13               	incf	(___awdiv@dividend+1)^0,f,c
 18605  0055F8  0E01               	movlw	1
 18606  0055FA  1A17               	xorwf	___awdiv@sign^0,f,c
 18607  0055FC                     l8706:
 18608  0055FC  0E00               	movlw	0
 18609  0055FE  6E19               	movwf	(___awdiv@quotient+1)^0,c
 18610  005600  0E00               	movlw	0
 18611  005602  6E18               	movwf	___awdiv@quotient^0,c
 18612  005604  5014               	movf	___awdiv@divisor^0,w,c
 18613  005606  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
 18614  005608  B4D8               	btfsc	status,2,c
 18615  00560A  EF09  F02B         	goto	u6271
 18616  00560E  EF0B  F02B         	goto	u6270
 18617  005612                     u6271:
 18618  005612  EF33  F02B         	goto	l8728
 18619  005616                     u6270:
 18620  005616  0E01               	movlw	1
 18621  005618  6E16               	movwf	___awdiv@counter^0,c
 18622  00561A  EF13  F02B         	goto	l8714
 18623  00561E                     l8712:
 18624  00561E  90D8               	bcf	status,0,c
 18625  005620  3614               	rlcf	___awdiv@divisor^0,f,c
 18626  005622  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
 18627  005624  2A16               	incf	___awdiv@counter^0,f,c
 18628  005626                     l8714:
 18629  005626  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
 18630  005628  EF18  F02B         	goto	u6281
 18631  00562C  EF1A  F02B         	goto	u6280
 18632  005630                     u6281:
 18633  005630  EF0F  F02B         	goto	l8712
 18634  005634                     u6280:
 18635  005634                     l8716:
 18636  005634  90D8               	bcf	status,0,c
 18637  005636  3618               	rlcf	___awdiv@quotient^0,f,c
 18638  005638  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
 18639  00563A  5014               	movf	___awdiv@divisor^0,w,c
 18640  00563C  5C12               	subwf	___awdiv@dividend^0,w,c
 18641  00563E  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18642  005640  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
 18643  005642  A0D8               	btfss	status,0,c
 18644  005644  EF26  F02B         	goto	u6291
 18645  005648  EF28  F02B         	goto	u6290
 18646  00564C                     u6291:
 18647  00564C  EF2D  F02B         	goto	l8724
 18648  005650                     u6290:
 18649  005650  5014               	movf	___awdiv@divisor^0,w,c
 18650  005652  5E12               	subwf	___awdiv@dividend^0,f,c
 18651  005654  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18652  005656  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
 18653  005658  8018               	bsf	___awdiv@quotient^0,0,c
 18654  00565A                     l8724:
 18655  00565A  90D8               	bcf	status,0,c
 18656  00565C  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
 18657  00565E  3214               	rrcf	___awdiv@divisor^0,f,c
 18658  005660  2E16               	decfsz	___awdiv@counter^0,f,c
 18659  005662  EF1A  F02B         	goto	l8716
 18660  005666                     l8728:
 18661  005666  5017               	movf	___awdiv@sign^0,w,c
 18662  005668  B4D8               	btfsc	status,2,c
 18663  00566A  EF39  F02B         	goto	u6301
 18664  00566E  EF3B  F02B         	goto	u6300
 18665  005672                     u6301:
 18666  005672  EF3F  F02B         	goto	l8732
 18667  005676                     u6300:
 18668  005676  6C18               	negf	___awdiv@quotient^0,c
 18669  005678  1E19               	comf	(___awdiv@quotient+1)^0,f,c
 18670  00567A  B0D8               	btfsc	status,0,c
 18671  00567C  2A19               	incf	(___awdiv@quotient+1)^0,f,c
 18672  00567E                     l8732:
 18673  00567E  C018  F012         	movff	___awdiv@quotient,?___awdiv
 18674  005682  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
 18675  005686  0012               	return		;funcret
 18676  005688                     __end_of___awdiv:
 18677                           	callstack 0
 18678                           
 18679 ;; *************** function _Paddle_draw *****************
 18680 ;; Defined at:
 18681 ;;		line 55 in file "class/paddle.c"
 18682 ;; Parameters:    Size  Location     Type
 18683 ;;  p               2   36[COMRAM] PTR struct Paddle
 18684 ;;		 -> g1(218), 
 18685 ;; Auto vars:     Size  Location     Type
 18686 ;;		None
 18687 ;; Return value:  Size  Location     Type
 18688 ;;                  1    wreg      void 
 18689 ;; Registers used:
 18690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18691 ;; Tracked objects:
 18692 ;;		On entry : 0/0
 18693 ;;		On exit  : 0/0
 18694 ;;		Unchanged: 0/0
 18695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18696 ;;      Params:         2       0       0       0       0       0       0
 18697 ;;      Locals:         0       0       0       0       0       0       0
 18698 ;;      Temps:          4       0       0       0       0       0       0
 18699 ;;      Totals:         6       0       0       0       0       0       0
 18700 ;;Total ram usage:        6 bytes
 18701 ;; Hardware stack levels used: 1
 18702 ;; Hardware stack levels required when called: 5
 18703 ;; This function calls:
 18704 ;;		_LCD_DrawRect
 18705 ;; This function is called by:
 18706 ;;		_Menu_inGameDraw
 18707 ;;		_displayController
 18708 ;; This function uses a non-reentrant model
 18709 ;;
 18710                           
 18711                           	psect	text75
 18712  00457E                     __ptext75:
 18713                           	callstack 0
 18714  00457E                     _Paddle_draw:
 18715                           	callstack 21
 18716  00457E                     
 18717                           ;class/paddle.c: 55: void Paddle_draw(struct Paddle* p);class/paddle.c: 56: {;class/padd
      +                          le.c: 58:     LCD_DrawRect(p->oldx,p->oldy,p->oldx+50,p->oldy+10,1,0b0000000000000000);
 18718  00457E  EE20 F004          	lfsr	2,4
 18719  004582  5025               	movf	Paddle_draw@p^0,w,c
 18720  004584  26D9               	addwf	fsr2l,f,c
 18721  004586  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18722  004588  22DA               	addwfc	fsr2h,f,c
 18723  00458A  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18724  00458E  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18725  004592  EE20 F006          	lfsr	2,6
 18726  004596  5025               	movf	Paddle_draw@p^0,w,c
 18727  004598  26D9               	addwf	fsr2l,f,c
 18728  00459A  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18729  00459C  22DA               	addwfc	fsr2h,f,c
 18730  00459E  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18731  0045A2  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18732  0045A6  EE20 F004          	lfsr	2,4
 18733  0045AA  5025               	movf	Paddle_draw@p^0,w,c
 18734  0045AC  26D9               	addwf	fsr2l,f,c
 18735  0045AE  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18736  0045B0  22DA               	addwfc	fsr2h,f,c
 18737  0045B2  CFDE F027          	movff	postinc2,??_Paddle_draw
 18738  0045B6  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18739  0045BA  0E32               	movlw	50
 18740  0045BC  2427               	addwf	??_Paddle_draw^0,w,c
 18741  0045BE  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18742  0045C0  0E00               	movlw	0
 18743  0045C2  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18744  0045C4  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18745  0045C6  EE20 F006          	lfsr	2,6
 18746  0045CA  5025               	movf	Paddle_draw@p^0,w,c
 18747  0045CC  26D9               	addwf	fsr2l,f,c
 18748  0045CE  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18749  0045D0  22DA               	addwfc	fsr2h,f,c
 18750  0045D2  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18751  0045D6  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18752  0045DA  0E0A               	movlw	10
 18753  0045DC  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18754  0045DE  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18755  0045E0  0E00               	movlw	0
 18756  0045E2  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18757  0045E4  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18758  0045E6  0E01               	movlw	1
 18759  0045E8  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18760  0045EA  0E00               	movlw	0
 18761  0045EC  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18762  0045EE  0E00               	movlw	0
 18763  0045F0  6E1B               	movwf	LCD_DrawRect@color^0,c
 18764  0045F2  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 18765  0045F6                     
 18766                           ;class/paddle.c: 60:     p->oldx=p->x;
 18767  0045F6  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18768  0045FA  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18769  0045FE  EE10 F004          	lfsr	1,4
 18770  004602  5025               	movf	Paddle_draw@p^0,w,c
 18771  004604  26E1               	addwf	fsr1l,f,c
 18772  004606  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18773  004608  22E2               	addwfc	fsr1h,f,c
 18774  00460A  CFDE FFE6          	movff	postinc2,postinc1
 18775  00460E  CFDD FFE5          	movff	postdec2,postdec1
 18776  004612                     
 18777                           ;class/paddle.c: 61:     p->oldy=p->y;
 18778  004612  EE20 F002          	lfsr	2,2
 18779  004616  5025               	movf	Paddle_draw@p^0,w,c
 18780  004618  26D9               	addwf	fsr2l,f,c
 18781  00461A  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18782  00461C  22DA               	addwfc	fsr2h,f,c
 18783  00461E  EE10 F006          	lfsr	1,6
 18784  004622  5025               	movf	Paddle_draw@p^0,w,c
 18785  004624  26E1               	addwf	fsr1l,f,c
 18786  004626  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18787  004628  22E2               	addwfc	fsr1h,f,c
 18788  00462A  CFDE FFE6          	movff	postinc2,postinc1
 18789  00462E  CFDD FFE5          	movff	postdec2,postdec1
 18790                           
 18791                           ;class/paddle.c: 63:     LCD_DrawRect(p->x,p->y,p->x+50,p->y+10,1,p->color);
 18792  004632  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18793  004636  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18794  00463A  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18795  00463E  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18796  004642  EE20 F002          	lfsr	2,2
 18797  004646  5025               	movf	Paddle_draw@p^0,w,c
 18798  004648  26D9               	addwf	fsr2l,f,c
 18799  00464A  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18800  00464C  22DA               	addwfc	fsr2h,f,c
 18801  00464E  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18802  004652  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18803  004656  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18804  00465A  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18805  00465E  CFDE F027          	movff	postinc2,??_Paddle_draw
 18806  004662  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18807  004666  0E32               	movlw	50
 18808  004668  2427               	addwf	??_Paddle_draw^0,w,c
 18809  00466A  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18810  00466C  0E00               	movlw	0
 18811  00466E  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18812  004670  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18813  004672  EE20 F002          	lfsr	2,2
 18814  004676  5025               	movf	Paddle_draw@p^0,w,c
 18815  004678  26D9               	addwf	fsr2l,f,c
 18816  00467A  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18817  00467C  22DA               	addwfc	fsr2h,f,c
 18818  00467E  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18819  004682  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18820  004686  0E0A               	movlw	10
 18821  004688  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18822  00468A  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18823  00468C  0E00               	movlw	0
 18824  00468E  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18825  004690  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18826  004692  0E01               	movlw	1
 18827  004694  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18828  004696  EE20 F008          	lfsr	2,8
 18829  00469A  5025               	movf	Paddle_draw@p^0,w,c
 18830  00469C  26D9               	addwf	fsr2l,f,c
 18831  00469E  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18832  0046A0  22DA               	addwfc	fsr2h,f,c
 18833  0046A2  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 18834  0046A6  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 18835  0046AA  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 18836  0046AE  0012               	return		;funcret
 18837  0046B0                     __end_of_Paddle_draw:
 18838                           	callstack 0
 18839                           
 18840 ;; *************** function _LCD_Fill *****************
 18841 ;; Defined at:
 18842 ;;		line 218 in file "libraries/lcd_highlevel.c"
 18843 ;; Parameters:    Size  Location     Type
 18844 ;;  color           2   17[COMRAM] unsigned short 
 18845 ;; Auto vars:     Size  Location     Type
 18846 ;;  page            2   23[COMRAM] unsigned short 
 18847 ;;  column          2   21[COMRAM] unsigned short 
 18848 ;;  colorL          1   20[COMRAM] unsigned char 
 18849 ;;  colorH          1   19[COMRAM] unsigned char 
 18850 ;; Return value:  Size  Location     Type
 18851 ;;                  1    wreg      void 
 18852 ;; Registers used:
 18853 ;;		wreg, status,2, status,0
 18854 ;; Tracked objects:
 18855 ;;		On entry : 0/0
 18856 ;;		On exit  : 0/0
 18857 ;;		Unchanged: 0/0
 18858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18859 ;;      Params:         2       0       0       0       0       0       0
 18860 ;;      Locals:         6       0       0       0       0       0       0
 18861 ;;      Temps:          0       0       0       0       0       0       0
 18862 ;;      Totals:         8       0       0       0       0       0       0
 18863 ;;Total ram usage:        8 bytes
 18864 ;; Hardware stack levels used: 1
 18865 ;; Hardware stack levels required when called: 4
 18866 ;; This function calls:
 18867 ;;		Nothing
 18868 ;; This function is called by:
 18869 ;;		_Factory_init
 18870 ;;		_Menu_welcomeDraw
 18871 ;;		_Menu_parametersDraw
 18872 ;;		_Menu_inGameDraw
 18873 ;;		_Menu_endGame
 18874 ;; This function uses a non-reentrant model
 18875 ;;
 18876                           
 18877                           	psect	text76
 18878  00574A                     __ptext76:
 18879                           	callstack 0
 18880  00574A                     _LCD_Fill:
 18881                           	callstack 21
 18882  00574A                     
 18883                           ;libraries/lcd_highlevel.c: 218: void LCD_Fill(uint16_t color);libraries/lcd_highlevel.c
      +                          : 219: {;libraries/lcd_highlevel.c: 220:   uint16_t column;;libraries/lcd_highlevel.c: 2
      +                          21:   uint16_t page;;libraries/lcd_highlevel.c: 222:   uint8_t colorH, colorL;;libraries
      +                          /lcd_highlevel.c: 223:   colorH = color >> 8;
 18884  00574A  5013               	movf	(LCD_Fill@color+1)^0,w,c
 18885  00574C  6E14               	movwf	LCD_Fill@colorH^0,c
 18886  00574E                     
 18887                           ;libraries/lcd_highlevel.c: 224:   colorL = color;
 18888  00574E  C012  F015         	movff	LCD_Fill@color,LCD_Fill@colorL
 18889                           
 18890                           ;libraries/lcd_highlevel.c: 226:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18891  005752  0E2A               	movlw	42
 18892  005754  6E80               	movwf	128,c	;volatile
 18893  005756  988B               	bcf	3979,4,c	;volatile
 18894  005758  968B               	bcf	3979,3,c	;volatile
 18895  00575A  868B               	bsf	3979,3,c	;volatile
 18896  00575C  888B               	bsf	3979,4,c	;volatile
 18897                           
 18898                           ;libraries/lcd_highlevel.c: 227:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18899  00575E  0E00               	movlw	0
 18900  005760  6E80               	movwf	128,c	;volatile
 18901  005762  968B               	bcf	3979,3,c	;volatile
 18902  005764  868B               	bsf	3979,3,c	;volatile
 18903                           
 18904                           ;libraries/lcd_highlevel.c: 228:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18905  005766  0E00               	movlw	0
 18906  005768  6E80               	movwf	128,c	;volatile
 18907  00576A  968B               	bcf	3979,3,c	;volatile
 18908  00576C  868B               	bsf	3979,3,c	;volatile
 18909                           
 18910                           ;libraries/lcd_highlevel.c: 229:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18911  00576E  0E00               	movlw	0
 18912  005770  6E80               	movwf	128,c	;volatile
 18913  005772  968B               	bcf	3979,3,c	;volatile
 18914  005774  868B               	bsf	3979,3,c	;volatile
 18915                           
 18916                           ;libraries/lcd_highlevel.c: 230:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 18917  005776  0EEF               	movlw	239
 18918  005778  6E80               	movwf	128,c	;volatile
 18919  00577A  968B               	bcf	3979,3,c	;volatile
 18920  00577C  868B               	bsf	3979,3,c	;volatile
 18921                           
 18922                           ;libraries/lcd_highlevel.c: 232:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18923  00577E  0E2B               	movlw	43
 18924  005780  6E80               	movwf	128,c	;volatile
 18925  005782  988B               	bcf	3979,4,c	;volatile
 18926  005784  968B               	bcf	3979,3,c	;volatile
 18927  005786  868B               	bsf	3979,3,c	;volatile
 18928  005788  888B               	bsf	3979,4,c	;volatile
 18929                           
 18930                           ;libraries/lcd_highlevel.c: 233:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18931  00578A  0E00               	movlw	0
 18932  00578C  6E80               	movwf	128,c	;volatile
 18933  00578E  968B               	bcf	3979,3,c	;volatile
 18934  005790  868B               	bsf	3979,3,c	;volatile
 18935                           
 18936                           ;libraries/lcd_highlevel.c: 234:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18937  005792  0E00               	movlw	0
 18938  005794  6E80               	movwf	128,c	;volatile
 18939  005796  968B               	bcf	3979,3,c	;volatile
 18940  005798  868B               	bsf	3979,3,c	;volatile
 18941                           
 18942                           ;libraries/lcd_highlevel.c: 235:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18943  00579A  0E01               	movlw	1
 18944  00579C  6E80               	movwf	128,c	;volatile
 18945  00579E  968B               	bcf	3979,3,c	;volatile
 18946  0057A0  868B               	bsf	3979,3,c	;volatile
 18947                           
 18948                           ;libraries/lcd_highlevel.c: 236:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18949  0057A2  0E3F               	movlw	63
 18950  0057A4  6E80               	movwf	128,c	;volatile
 18951  0057A6  968B               	bcf	3979,3,c	;volatile
 18952  0057A8  868B               	bsf	3979,3,c	;volatile
 18953                           
 18954                           ;libraries/lcd_highlevel.c: 238:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18955  0057AA  0E2C               	movlw	44
 18956  0057AC  6E80               	movwf	128,c	;volatile
 18957  0057AE  988B               	bcf	3979,4,c	;volatile
 18958  0057B0  968B               	bcf	3979,3,c	;volatile
 18959  0057B2  868B               	bsf	3979,3,c	;volatile
 18960  0057B4  888B               	bsf	3979,4,c	;volatile
 18961                           
 18962                           ;libraries/lcd_highlevel.c: 239:   for(column=0; column<320; column++)
 18963  0057B6  0E00               	movlw	0
 18964  0057B8  6E17               	movwf	(LCD_Fill@column+1)^0,c
 18965  0057BA  0E00               	movlw	0
 18966  0057BC  6E16               	movwf	LCD_Fill@column^0,c
 18967  0057BE                     l9528:
 18968                           
 18969                           ;libraries/lcd_highlevel.c: 240:   {;libraries/lcd_highlevel.c: 241:     for(page=0; pag
      +                          e<240; page++)
 18970  0057BE  0E00               	movlw	0
 18971  0057C0  6E19               	movwf	(LCD_Fill@page+1)^0,c
 18972  0057C2  0E00               	movlw	0
 18973  0057C4  6E18               	movwf	LCD_Fill@page^0,c
 18974  0057C6                     l227:
 18975                           
 18976                           ;libraries/lcd_highlevel.c: 242:     {;libraries/lcd_highlevel.c: 243:       PORTA = col
      +                          orH;
 18977  0057C6  C014  FF80         	movff	LCD_Fill@colorH,3968	;volatile
 18978                           
 18979                           ;libraries/lcd_highlevel.c: 244:       LATC3 = 0;
 18980  0057CA  968B               	bcf	3979,3,c	;volatile
 18981                           
 18982                           ;libraries/lcd_highlevel.c: 245:       LATC3 = 1;
 18983  0057CC  868B               	bsf	3979,3,c	;volatile
 18984                           
 18985                           ;libraries/lcd_highlevel.c: 246:       PORTA = colorL;
 18986  0057CE  C015  FF80         	movff	LCD_Fill@colorL,3968	;volatile
 18987                           
 18988                           ;libraries/lcd_highlevel.c: 247:       LATC3 = 0;
 18989  0057D2  968B               	bcf	3979,3,c	;volatile
 18990                           
 18991                           ;libraries/lcd_highlevel.c: 248:       LATC3 = 1;
 18992  0057D4  868B               	bsf	3979,3,c	;volatile
 18993  0057D6                     
 18994                           ;libraries/lcd_highlevel.c: 249:     }
 18995  0057D6  4A18               	infsnz	LCD_Fill@page^0,f,c
 18996  0057D8  2A19               	incf	(LCD_Fill@page+1)^0,f,c
 18997  0057DA  5019               	movf	(LCD_Fill@page+1)^0,w,c
 18998  0057DC  E109               	bnz	u6820
 18999  0057DE  0EF0               	movlw	240
 19000  0057E0  5C18               	subwf	LCD_Fill@page^0,w,c
 19001  0057E2  A0D8               	btfss	status,0,c
 19002  0057E4  EFF6  F02B         	goto	u6821
 19003  0057E8  EFF8  F02B         	goto	u6820
 19004  0057EC                     u6821:
 19005  0057EC  EFE3  F02B         	goto	l227
 19006  0057F0                     u6820:
 19007  0057F0                     
 19008                           ;libraries/lcd_highlevel.c: 250:   }
 19009  0057F0  4A16               	infsnz	LCD_Fill@column^0,f,c
 19010  0057F2  2A17               	incf	(LCD_Fill@column+1)^0,f,c
 19011  0057F4  0E40               	movlw	64
 19012  0057F6  5C16               	subwf	LCD_Fill@column^0,w,c
 19013  0057F8  0E01               	movlw	1
 19014  0057FA  5817               	subwfb	(LCD_Fill@column+1)^0,w,c
 19015  0057FC  A0D8               	btfss	status,0,c
 19016  0057FE  EF03  F02C         	goto	u6831
 19017  005802  EF05  F02C         	goto	u6830
 19018  005806                     u6831:
 19019  005806  EFDF  F02B         	goto	l9528
 19020  00580A                     u6830:
 19021  00580A  0012               	return		;funcret
 19022  00580C                     __end_of_LCD_Fill:
 19023                           	callstack 0
 19024                           
 19025 ;; *************** function _Ball_draw *****************
 19026 ;; Defined at:
 19027 ;;		line 16 in file "class/ball.c"
 19028 ;; Parameters:    Size  Location     Type
 19029 ;;  b               2   36[COMRAM] PTR struct Ball
 19030 ;;		 -> g1(218), 
 19031 ;; Auto vars:     Size  Location     Type
 19032 ;;		None
 19033 ;; Return value:  Size  Location     Type
 19034 ;;                  1    wreg      void 
 19035 ;; Registers used:
 19036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19037 ;; Tracked objects:
 19038 ;;		On entry : 0/0
 19039 ;;		On exit  : 0/0
 19040 ;;		Unchanged: 0/0
 19041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19042 ;;      Params:         2       0       0       0       0       0       0
 19043 ;;      Locals:         0       0       0       0       0       0       0
 19044 ;;      Temps:          8       0       0       0       0       0       0
 19045 ;;      Totals:        10       0       0       0       0       0       0
 19046 ;;Total ram usage:       10 bytes
 19047 ;; Hardware stack levels used: 1
 19048 ;; Hardware stack levels required when called: 5
 19049 ;; This function calls:
 19050 ;;		_LCD_DrawRect
 19051 ;; This function is called by:
 19052 ;;		_Menu_inGameDraw
 19053 ;;		_displayController
 19054 ;; This function uses a non-reentrant model
 19055 ;;
 19056                           
 19057                           	psect	text77
 19058  0042E6                     __ptext77:
 19059                           	callstack 0
 19060  0042E6                     _Ball_draw:
 19061                           	callstack 21
 19062  0042E6                     
 19063                           ;class/ball.c: 16: void Ball_draw(struct Ball* b);class/ball.c: 17: {;class/ball.c: 18: 
      +                              LCD_DrawRect(b->oldx-8,b->oldy-8,b->oldx+8,b->oldy+8,1,0b0000000000000000);
 19064  0042E6  EE20 F004          	lfsr	2,4
 19065  0042EA  5025               	movf	Ball_draw@b^0,w,c
 19066  0042EC  26D9               	addwf	fsr2l,f,c
 19067  0042EE  5026               	movf	(Ball_draw@b+1)^0,w,c
 19068  0042F0  22DA               	addwfc	fsr2h,f,c
 19069  0042F2  CFDE F027          	movff	postinc2,??_Ball_draw
 19070  0042F6  CFDD F028          	movff	postdec2,??_Ball_draw+1
 19071  0042FA  0EF8               	movlw	248
 19072  0042FC  2427               	addwf	??_Ball_draw^0,w,c
 19073  0042FE  6E12               	movwf	LCD_DrawRect@posX1^0,c
 19074  004300  0EFF               	movlw	255
 19075  004302  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 19076  004304  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 19077  004306  EE20 F006          	lfsr	2,6
 19078  00430A  5025               	movf	Ball_draw@b^0,w,c
 19079  00430C  26D9               	addwf	fsr2l,f,c
 19080  00430E  5026               	movf	(Ball_draw@b+1)^0,w,c
 19081  004310  22DA               	addwfc	fsr2h,f,c
 19082  004312  CFDE F029          	movff	postinc2,??_Ball_draw+2
 19083  004316  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 19084  00431A  0EF8               	movlw	248
 19085  00431C  2429               	addwf	(??_Ball_draw+2)^0,w,c
 19086  00431E  6E14               	movwf	LCD_DrawRect@posY1^0,c
 19087  004320  0EFF               	movlw	255
 19088  004322  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 19089  004324  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 19090  004326  EE20 F004          	lfsr	2,4
 19091  00432A  5025               	movf	Ball_draw@b^0,w,c
 19092  00432C  26D9               	addwf	fsr2l,f,c
 19093  00432E  5026               	movf	(Ball_draw@b+1)^0,w,c
 19094  004330  22DA               	addwfc	fsr2h,f,c
 19095  004332  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 19096  004336  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 19097  00433A  0E08               	movlw	8
 19098  00433C  242B               	addwf	(??_Ball_draw+4)^0,w,c
 19099  00433E  6E16               	movwf	LCD_DrawRect@posX2^0,c
 19100  004340  0E00               	movlw	0
 19101  004342  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 19102  004344  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 19103  004346  EE20 F006          	lfsr	2,6
 19104  00434A  5025               	movf	Ball_draw@b^0,w,c
 19105  00434C  26D9               	addwf	fsr2l,f,c
 19106  00434E  5026               	movf	(Ball_draw@b+1)^0,w,c
 19107  004350  22DA               	addwfc	fsr2h,f,c
 19108  004352  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 19109  004356  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 19110  00435A  0E08               	movlw	8
 19111  00435C  242D               	addwf	(??_Ball_draw+6)^0,w,c
 19112  00435E  6E18               	movwf	LCD_DrawRect@posY2^0,c
 19113  004360  0E00               	movlw	0
 19114  004362  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 19115  004364  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 19116  004366  0E01               	movlw	1
 19117  004368  6E1A               	movwf	LCD_DrawRect@fill^0,c
 19118  00436A  0E00               	movlw	0
 19119  00436C  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 19120  00436E  0E00               	movlw	0
 19121  004370  6E1B               	movwf	LCD_DrawRect@color^0,c
 19122  004372  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 19123  004376                     
 19124                           ;class/ball.c: 19:     b->oldx=b->x;
 19125  004376  C025  FFD9         	movff	Ball_draw@b,fsr2l
 19126  00437A  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 19127  00437E  EE10 F004          	lfsr	1,4
 19128  004382  5025               	movf	Ball_draw@b^0,w,c
 19129  004384  26E1               	addwf	fsr1l,f,c
 19130  004386  5026               	movf	(Ball_draw@b+1)^0,w,c
 19131  004388  22E2               	addwfc	fsr1h,f,c
 19132  00438A  CFDE FFE6          	movff	postinc2,postinc1
 19133  00438E  CFDD FFE5          	movff	postdec2,postdec1
 19134  004392                     
 19135                           ;class/ball.c: 20:     b->oldy=b->y;
 19136  004392  EE20 F002          	lfsr	2,2
 19137  004396  5025               	movf	Ball_draw@b^0,w,c
 19138  004398  26D9               	addwf	fsr2l,f,c
 19139  00439A  5026               	movf	(Ball_draw@b+1)^0,w,c
 19140  00439C  22DA               	addwfc	fsr2h,f,c
 19141  00439E  EE10 F006          	lfsr	1,6
 19142  0043A2  5025               	movf	Ball_draw@b^0,w,c
 19143  0043A4  26E1               	addwf	fsr1l,f,c
 19144  0043A6  5026               	movf	(Ball_draw@b+1)^0,w,c
 19145  0043A8  22E2               	addwfc	fsr1h,f,c
 19146  0043AA  CFDE FFE6          	movff	postinc2,postinc1
 19147  0043AE  CFDD FFE5          	movff	postdec2,postdec1
 19148                           
 19149                           ;class/ball.c: 21:     LCD_DrawRect(b->x-8,b->y-8,b->x+8,b->y+8,1,0b1111100000000000);
 19150  0043B2  C025  FFD9         	movff	Ball_draw@b,fsr2l
 19151  0043B6  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 19152  0043BA  CFDE F027          	movff	postinc2,??_Ball_draw
 19153  0043BE  CFDD F028          	movff	postdec2,??_Ball_draw+1
 19154  0043C2  0EF8               	movlw	248
 19155  0043C4  2427               	addwf	??_Ball_draw^0,w,c
 19156  0043C6  6E12               	movwf	LCD_DrawRect@posX1^0,c
 19157  0043C8  0EFF               	movlw	255
 19158  0043CA  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 19159  0043CC  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 19160  0043CE  EE20 F002          	lfsr	2,2
 19161  0043D2  5025               	movf	Ball_draw@b^0,w,c
 19162  0043D4  26D9               	addwf	fsr2l,f,c
 19163  0043D6  5026               	movf	(Ball_draw@b+1)^0,w,c
 19164  0043D8  22DA               	addwfc	fsr2h,f,c
 19165  0043DA  CFDE F029          	movff	postinc2,??_Ball_draw+2
 19166  0043DE  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 19167  0043E2  0EF8               	movlw	248
 19168  0043E4  2429               	addwf	(??_Ball_draw+2)^0,w,c
 19169  0043E6  6E14               	movwf	LCD_DrawRect@posY1^0,c
 19170  0043E8  0EFF               	movlw	255
 19171  0043EA  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 19172  0043EC  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 19173  0043EE  C025  FFD9         	movff	Ball_draw@b,fsr2l
 19174  0043F2  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 19175  0043F6  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 19176  0043FA  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 19177  0043FE  0E08               	movlw	8
 19178  004400  242B               	addwf	(??_Ball_draw+4)^0,w,c
 19179  004402  6E16               	movwf	LCD_DrawRect@posX2^0,c
 19180  004404  0E00               	movlw	0
 19181  004406  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 19182  004408  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 19183  00440A  EE20 F002          	lfsr	2,2
 19184  00440E  5025               	movf	Ball_draw@b^0,w,c
 19185  004410  26D9               	addwf	fsr2l,f,c
 19186  004412  5026               	movf	(Ball_draw@b+1)^0,w,c
 19187  004414  22DA               	addwfc	fsr2h,f,c
 19188  004416  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 19189  00441A  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 19190  00441E  0E08               	movlw	8
 19191  004420  242D               	addwf	(??_Ball_draw+6)^0,w,c
 19192  004422  6E18               	movwf	LCD_DrawRect@posY2^0,c
 19193  004424  0E00               	movlw	0
 19194  004426  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 19195  004428  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 19196  00442A  0E01               	movlw	1
 19197  00442C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 19198  00442E  0EF8               	movlw	248
 19199  004430  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 19200  004432  0E00               	movlw	0
 19201  004434  6E1B               	movwf	LCD_DrawRect@color^0,c
 19202  004436  ECD3  F016         	call	_LCD_DrawRect	;wreg free
 19203  00443A  0012               	return		;funcret
 19204  00443C                     __end_of_Ball_draw:
 19205                           	callstack 0
 19206                           
 19207 ;; *************** function _LCD_DrawRect *****************
 19208 ;; Defined at:
 19209 ;;		line 584 in file "libraries/lcd_highlevel.c"
 19210 ;; Parameters:    Size  Location     Type
 19211 ;;  posX1           2   17[COMRAM] unsigned short 
 19212 ;;  posY1           2   19[COMRAM] unsigned short 
 19213 ;;  posX2           2   21[COMRAM] unsigned short 
 19214 ;;  posY2           2   23[COMRAM] unsigned short 
 19215 ;;  fill            1   25[COMRAM] unsigned char 
 19216 ;;  color           2   26[COMRAM] unsigned short 
 19217 ;; Auto vars:     Size  Location     Type
 19218 ;;  i               2   34[COMRAM] unsigned short 
 19219 ;;  temp            2   30[COMRAM] unsigned short 
 19220 ;;  j               2   28[COMRAM] unsigned short 
 19221 ;;  colorL          1   33[COMRAM] unsigned char 
 19222 ;;  colorH          1   32[COMRAM] unsigned char 
 19223 ;; Return value:  Size  Location     Type
 19224 ;;                  1    wreg      void 
 19225 ;; Registers used:
 19226 ;;		wreg, status,2, status,0
 19227 ;; Tracked objects:
 19228 ;;		On entry : 0/0
 19229 ;;		On exit  : 0/0
 19230 ;;		Unchanged: 0/0
 19231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19232 ;;      Params:        11       0       0       0       0       0       0
 19233 ;;      Locals:         8       0       0       0       0       0       0
 19234 ;;      Temps:          0       0       0       0       0       0       0
 19235 ;;      Totals:        19       0       0       0       0       0       0
 19236 ;;Total ram usage:       19 bytes
 19237 ;; Hardware stack levels used: 1
 19238 ;; Hardware stack levels required when called: 4
 19239 ;; This function calls:
 19240 ;;		Nothing
 19241 ;; This function is called by:
 19242 ;;		_Ball_draw
 19243 ;;		_Paddle_draw
 19244 ;;		_LCD_SliderUpdate
 19245 ;;		_LCD_SliderDraw
 19246 ;;		_LCD_ButtonUpdate
 19247 ;;		_LCD_ButtonDraw
 19248 ;; This function uses a non-reentrant model
 19249 ;;
 19250                           
 19251                           	psect	text78
 19252  002DA6                     __ptext78:
 19253                           	callstack 0
 19254  002DA6                     _LCD_DrawRect:
 19255                           	callstack 21
 19256  002DA6                     
 19257                           ;libraries/lcd_highlevel.c: 584: void LCD_DrawRect(uint16_t posX1,uint16_t posY1, uint16
      +                          _t posX2,;libraries/lcd_highlevel.c: 585:   uint16_t posY2,uint8_t fill,uint16_t color);
      +                          libraries/lcd_highlevel.c: 586: {;libraries/lcd_highlevel.c: 587:   uint16_t i;;librarie
      +                          s/lcd_highlevel.c: 588:   uint16_t j;;libraries/lcd_highlevel.c: 589:   uint16_t temp;;l
      +                          ibraries/lcd_highlevel.c: 590:   uint8_t colorH,colorL;;libraries/lcd_highlevel.c: 592: 
      +                            colorH = color>>8;
 19258  002DA6  501C               	movf	(LCD_DrawRect@color+1)^0,w,c
 19259  002DA8  6E21               	movwf	LCD_DrawRect@colorH^0,c
 19260  002DAA                     
 19261                           ;libraries/lcd_highlevel.c: 593:   colorL = color;
 19262  002DAA  C01B  F022         	movff	LCD_DrawRect@color,LCD_DrawRect@colorL
 19263  002DAE                     
 19264                           ;libraries/lcd_highlevel.c: 597:   if(posX1 > posX2)
 19265  002DAE  5012               	movf	LCD_DrawRect@posX1^0,w,c
 19266  002DB0  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 19267  002DB2  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19268  002DB4  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 19269  002DB6  B0D8               	btfsc	status,0,c
 19270  002DB8  EFE0  F016         	goto	u6101
 19271  002DBC  EFE2  F016         	goto	u6100
 19272  002DC0                     u6101:
 19273  002DC0  EFEE  F016         	goto	l8258
 19274  002DC4                     u6100:
 19275  002DC4                     
 19276                           ;libraries/lcd_highlevel.c: 598:   {;libraries/lcd_highlevel.c: 599:     temp = posX1;
 19277  002DC4  C012  F01F         	movff	LCD_DrawRect@posX1,LCD_DrawRect@temp
 19278  002DC8  C013  F020         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@temp+1
 19279                           
 19280                           ;libraries/lcd_highlevel.c: 600:     posX1 = posX2;
 19281  002DCC  C016  F012         	movff	LCD_DrawRect@posX2,LCD_DrawRect@posX1
 19282  002DD0  C017  F013         	movff	LCD_DrawRect@posX2+1,LCD_DrawRect@posX1+1
 19283                           
 19284                           ;libraries/lcd_highlevel.c: 601:     posX2 = temp;
 19285  002DD4  C01F  F016         	movff	LCD_DrawRect@temp,LCD_DrawRect@posX2
 19286  002DD8  C020  F017         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posX2+1
 19287  002DDC                     l8258:
 19288                           
 19289                           ;libraries/lcd_highlevel.c: 603:   if(posY1 > posY2)
 19290  002DDC  5014               	movf	LCD_DrawRect@posY1^0,w,c
 19291  002DDE  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19292  002DE0  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 19293  002DE2  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19294  002DE4  B0D8               	btfsc	status,0,c
 19295  002DE6  EFF7  F016         	goto	u6111
 19296  002DEA  EFF9  F016         	goto	u6110
 19297  002DEE                     u6111:
 19298  002DEE  EF05  F017         	goto	l8262
 19299  002DF2                     u6110:
 19300  002DF2                     
 19301                           ;libraries/lcd_highlevel.c: 604:   {;libraries/lcd_highlevel.c: 605:     temp = posY1;
 19302  002DF2  C014  F01F         	movff	LCD_DrawRect@posY1,LCD_DrawRect@temp
 19303  002DF6  C015  F020         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@temp+1
 19304                           
 19305                           ;libraries/lcd_highlevel.c: 606:     posY1 = posY2;
 19306  002DFA  C018  F014         	movff	LCD_DrawRect@posY2,LCD_DrawRect@posY1
 19307  002DFE  C019  F015         	movff	LCD_DrawRect@posY2+1,LCD_DrawRect@posY1+1
 19308                           
 19309                           ;libraries/lcd_highlevel.c: 607:     posY2 = temp;
 19310  002E02  C01F  F018         	movff	LCD_DrawRect@temp,LCD_DrawRect@posY2
 19311  002E06  C020  F019         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posY2+1
 19312  002E0A                     l8262:
 19313                           
 19314                           ;libraries/lcd_highlevel.c: 610:   if(fill==1)
 19315  002E0A  041A               	decf	LCD_DrawRect@fill^0,w,c
 19316  002E0C  A4D8               	btfss	status,2,c
 19317  002E0E  EF0B  F017         	goto	u6121
 19318  002E12  EF0D  F017         	goto	u6120
 19319  002E16                     u6121:
 19320  002E16  EF6F  F017         	goto	l8338
 19321  002E1A                     u6120:
 19322  002E1A                     
 19323                           ;libraries/lcd_highlevel.c: 611:   {;libraries/lcd_highlevel.c: 613:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 19324  002E1A  0E2A               	movlw	42
 19325  002E1C  6E80               	movwf	128,c	;volatile
 19326  002E1E  988B               	bcf	3979,4,c	;volatile
 19327  002E20  968B               	bcf	3979,3,c	;volatile
 19328  002E22  868B               	bsf	3979,3,c	;volatile
 19329  002E24  888B               	bsf	3979,4,c	;volatile
 19330                           
 19331                           ;libraries/lcd_highlevel.c: 614:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19332  002E26  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19333  002E28  6E80               	movwf	128,c	;volatile
 19334  002E2A  968B               	bcf	3979,3,c	;volatile
 19335  002E2C  868B               	bsf	3979,3,c	;volatile
 19336  002E2E                     
 19337                           ;libraries/lcd_highlevel.c: 615:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19338  002E2E  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19339  002E32  968B               	bcf	3979,3,c	;volatile
 19340  002E34  868B               	bsf	3979,3,c	;volatile
 19341                           
 19342                           ;libraries/lcd_highlevel.c: 616:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19343  002E36  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19344  002E38  6E80               	movwf	128,c	;volatile
 19345  002E3A  968B               	bcf	3979,3,c	;volatile
 19346  002E3C  868B               	bsf	3979,3,c	;volatile
 19347  002E3E                     
 19348                           ;libraries/lcd_highlevel.c: 617:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19349  002E3E  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19350  002E42  968B               	bcf	3979,3,c	;volatile
 19351  002E44  868B               	bsf	3979,3,c	;volatile
 19352                           
 19353                           ;libraries/lcd_highlevel.c: 619:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19354  002E46  0E2B               	movlw	43
 19355  002E48  6E80               	movwf	128,c	;volatile
 19356  002E4A  988B               	bcf	3979,4,c	;volatile
 19357  002E4C  968B               	bcf	3979,3,c	;volatile
 19358  002E4E  868B               	bsf	3979,3,c	;volatile
 19359  002E50  888B               	bsf	3979,4,c	;volatile
 19360                           
 19361                           ;libraries/lcd_highlevel.c: 620:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 19362  002E52  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 19363  002E54  6E80               	movwf	128,c	;volatile
 19364  002E56  968B               	bcf	3979,3,c	;volatile
 19365  002E58  868B               	bsf	3979,3,c	;volatile
 19366  002E5A                     
 19367                           ;libraries/lcd_highlevel.c: 621:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 19368  002E5A  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 19369  002E5E  968B               	bcf	3979,3,c	;volatile
 19370  002E60  868B               	bsf	3979,3,c	;volatile
 19371                           
 19372                           ;libraries/lcd_highlevel.c: 622:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 19373  002E62  0E01               	movlw	1
 19374  002E64  6E80               	movwf	128,c	;volatile
 19375  002E66  968B               	bcf	3979,3,c	;volatile
 19376  002E68  868B               	bsf	3979,3,c	;volatile
 19377                           
 19378                           ;libraries/lcd_highlevel.c: 623:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 19379  002E6A  0E3F               	movlw	63
 19380  002E6C  6E80               	movwf	128,c	;volatile
 19381  002E6E  968B               	bcf	3979,3,c	;volatile
 19382  002E70  868B               	bsf	3979,3,c	;volatile
 19383                           
 19384                           ;libraries/lcd_highlevel.c: 625:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19385  002E72  0E2C               	movlw	44
 19386  002E74  6E80               	movwf	128,c	;volatile
 19387  002E76  988B               	bcf	3979,4,c	;volatile
 19388  002E78  968B               	bcf	3979,3,c	;volatile
 19389  002E7A  868B               	bsf	3979,3,c	;volatile
 19390  002E7C  888B               	bsf	3979,4,c	;volatile
 19391  002E7E                     
 19392                           ;libraries/lcd_highlevel.c: 626:     for(i=posX1;i<=posX2;i++)
 19393  002E7E  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 19394  002E82  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 19395  002E86  EF62  F017         	goto	l8336
 19396  002E8A                     l284:
 19397                           
 19398                           ;libraries/lcd_highlevel.c: 627:     {;libraries/lcd_highlevel.c: 628:       for(j=posY1
      +                          ;j<=posY2;j++)
 19399  002E8A  C014  F01D         	movff	LCD_DrawRect@posY1,LCD_DrawRect@j
 19400  002E8E  C015  F01E         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@j+1
 19401  002E92  EF55  F017         	goto	l8332
 19402  002E96                     l286:
 19403                           
 19404                           ;libraries/lcd_highlevel.c: 629:       {;libraries/lcd_highlevel.c: 630:         PORTA =
      +                           colorH; LATC3 = 0; LATC3 = 1;;
 19405  002E96  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19406  002E9A  968B               	bcf	3979,3,c	;volatile
 19407  002E9C  868B               	bsf	3979,3,c	;volatile
 19408                           
 19409                           ;libraries/lcd_highlevel.c: 631:         PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19410  002E9E  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19411  002EA2  968B               	bcf	3979,3,c	;volatile
 19412  002EA4  868B               	bsf	3979,3,c	;volatile
 19413  002EA6                     
 19414                           ;libraries/lcd_highlevel.c: 632:       }
 19415  002EA6  4A1D               	infsnz	LCD_DrawRect@j^0,f,c
 19416  002EA8  2A1E               	incf	(LCD_DrawRect@j+1)^0,f,c
 19417  002EAA                     l8332:
 19418  002EAA  501D               	movf	LCD_DrawRect@j^0,w,c
 19419  002EAC  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19420  002EAE  501E               	movf	(LCD_DrawRect@j+1)^0,w,c
 19421  002EB0  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19422  002EB2  B0D8               	btfsc	status,0,c
 19423  002EB4  EF5E  F017         	goto	u6131
 19424  002EB8  EF60  F017         	goto	u6130
 19425  002EBC                     u6131:
 19426  002EBC  EF4B  F017         	goto	l286
 19427  002EC0                     u6130:
 19428  002EC0                     
 19429                           ;libraries/lcd_highlevel.c: 633:     }
 19430  002EC0  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19431  002EC2  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19432  002EC4                     l8336:
 19433  002EC4  5023               	movf	LCD_DrawRect@i^0,w,c
 19434  002EC6  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 19435  002EC8  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19436  002ECA  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 19437  002ECC  B0D8               	btfsc	status,0,c
 19438  002ECE  EF6B  F017         	goto	u6141
 19439  002ED2  EF6D  F017         	goto	u6140
 19440  002ED6                     u6141:
 19441  002ED6  EF45  F017         	goto	l284
 19442  002EDA                     u6140:
 19443  002EDA  EF6F  F018         	goto	l302
 19444  002EDE                     l8338:
 19445                           
 19446                           ;libraries/lcd_highlevel.c: 637:   {;libraries/lcd_highlevel.c: 639:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 19447  002EDE  0E2A               	movlw	42
 19448  002EE0  6E80               	movwf	128,c	;volatile
 19449  002EE2  988B               	bcf	3979,4,c	;volatile
 19450  002EE4  968B               	bcf	3979,3,c	;volatile
 19451  002EE6  868B               	bsf	3979,3,c	;volatile
 19452  002EE8  888B               	bsf	3979,4,c	;volatile
 19453                           
 19454                           ;libraries/lcd_highlevel.c: 640:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19455  002EEA  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19456  002EEC  6E80               	movwf	128,c	;volatile
 19457  002EEE  968B               	bcf	3979,3,c	;volatile
 19458  002EF0  868B               	bsf	3979,3,c	;volatile
 19459  002EF2                     
 19460                           ;libraries/lcd_highlevel.c: 641:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19461  002EF2  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19462  002EF6  968B               	bcf	3979,3,c	;volatile
 19463  002EF8  868B               	bsf	3979,3,c	;volatile
 19464                           
 19465                           ;libraries/lcd_highlevel.c: 642:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19466  002EFA  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19467  002EFC  6E80               	movwf	128,c	;volatile
 19468  002EFE  968B               	bcf	3979,3,c	;volatile
 19469  002F00  868B               	bsf	3979,3,c	;volatile
 19470  002F02                     
 19471                           ;libraries/lcd_highlevel.c: 643:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19472  002F02  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19473  002F06  968B               	bcf	3979,3,c	;volatile
 19474  002F08  868B               	bsf	3979,3,c	;volatile
 19475                           
 19476                           ;libraries/lcd_highlevel.c: 645:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19477  002F0A  0E2B               	movlw	43
 19478  002F0C  6E80               	movwf	128,c	;volatile
 19479  002F0E  988B               	bcf	3979,4,c	;volatile
 19480  002F10  968B               	bcf	3979,3,c	;volatile
 19481  002F12  868B               	bsf	3979,3,c	;volatile
 19482  002F14  888B               	bsf	3979,4,c	;volatile
 19483                           
 19484                           ;libraries/lcd_highlevel.c: 646:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 19485  002F16  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 19486  002F18  6E80               	movwf	128,c	;volatile
 19487  002F1A  968B               	bcf	3979,3,c	;volatile
 19488  002F1C  868B               	bsf	3979,3,c	;volatile
 19489  002F1E                     
 19490                           ;libraries/lcd_highlevel.c: 647:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 19491  002F1E  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 19492  002F22  968B               	bcf	3979,3,c	;volatile
 19493  002F24  868B               	bsf	3979,3,c	;volatile
 19494                           
 19495                           ;libraries/lcd_highlevel.c: 648:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 19496  002F26  0E01               	movlw	1
 19497  002F28  6E80               	movwf	128,c	;volatile
 19498  002F2A  968B               	bcf	3979,3,c	;volatile
 19499  002F2C  868B               	bsf	3979,3,c	;volatile
 19500                           
 19501                           ;libraries/lcd_highlevel.c: 649:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 19502  002F2E  0E3F               	movlw	63
 19503  002F30  6E80               	movwf	128,c	;volatile
 19504  002F32  968B               	bcf	3979,3,c	;volatile
 19505  002F34  868B               	bsf	3979,3,c	;volatile
 19506                           
 19507                           ;libraries/lcd_highlevel.c: 651:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19508  002F36  0E2C               	movlw	44
 19509  002F38  6E80               	movwf	128,c	;volatile
 19510  002F3A  988B               	bcf	3979,4,c	;volatile
 19511  002F3C  968B               	bcf	3979,3,c	;volatile
 19512  002F3E  868B               	bsf	3979,3,c	;volatile
 19513  002F40  888B               	bsf	3979,4,c	;volatile
 19514  002F42                     
 19515                           ;libraries/lcd_highlevel.c: 653:     for(i=posX1;i<=posX2;i++)
 19516  002F42  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 19517  002F46  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 19518  002F4A  EFB1  F017         	goto	l8406
 19519  002F4E                     l291:
 19520                           
 19521                           ;libraries/lcd_highlevel.c: 654:     {;libraries/lcd_highlevel.c: 655:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19522  002F4E  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19523  002F52  968B               	bcf	3979,3,c	;volatile
 19524  002F54  868B               	bsf	3979,3,c	;volatile
 19525                           
 19526                           ;libraries/lcd_highlevel.c: 656:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19527  002F56  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19528  002F5A  968B               	bcf	3979,3,c	;volatile
 19529  002F5C  868B               	bsf	3979,3,c	;volatile
 19530  002F5E                     
 19531                           ;libraries/lcd_highlevel.c: 657:     }
 19532  002F5E  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19533  002F60  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19534  002F62                     l8406:
 19535  002F62  5023               	movf	LCD_DrawRect@i^0,w,c
 19536  002F64  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 19537  002F66  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19538  002F68  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 19539  002F6A  B0D8               	btfsc	status,0,c
 19540  002F6C  EFBA  F017         	goto	u6151
 19541  002F70  EFBC  F017         	goto	u6150
 19542  002F74                     u6151:
 19543  002F74  EFA7  F017         	goto	l291
 19544  002F78                     u6150:
 19545  002F78                     
 19546                           ;libraries/lcd_highlevel.c: 659:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19547  002F78  0E2B               	movlw	43
 19548  002F7A  6E80               	movwf	128,c	;volatile
 19549  002F7C  988B               	bcf	3979,4,c	;volatile
 19550  002F7E  968B               	bcf	3979,3,c	;volatile
 19551  002F80  868B               	bsf	3979,3,c	;volatile
 19552  002F82  888B               	bsf	3979,4,c	;volatile
 19553                           
 19554                           ;libraries/lcd_highlevel.c: 660:     PORTA = posY2>>8; LATC3 = 0; LATC3 = 1;;
 19555  002F84  5019               	movf	(LCD_DrawRect@posY2+1)^0,w,c
 19556  002F86  6E80               	movwf	128,c	;volatile
 19557  002F88  968B               	bcf	3979,3,c	;volatile
 19558  002F8A  868B               	bsf	3979,3,c	;volatile
 19559  002F8C                     
 19560                           ;libraries/lcd_highlevel.c: 661:     PORTA = posY2; LATC3 = 0; LATC3 = 1;;
 19561  002F8C  C018  FF80         	movff	LCD_DrawRect@posY2,3968	;volatile
 19562  002F90  968B               	bcf	3979,3,c	;volatile
 19563  002F92  868B               	bsf	3979,3,c	;volatile
 19564                           
 19565                           ;libraries/lcd_highlevel.c: 662:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19566  002F94  0E2C               	movlw	44
 19567  002F96  6E80               	movwf	128,c	;volatile
 19568  002F98  988B               	bcf	3979,4,c	;volatile
 19569  002F9A  968B               	bcf	3979,3,c	;volatile
 19570  002F9C  868B               	bsf	3979,3,c	;volatile
 19571  002F9E  888B               	bsf	3979,4,c	;volatile
 19572  002FA0                     
 19573                           ;libraries/lcd_highlevel.c: 663:     for(i=posX1;i<=posX2;i++)
 19574  002FA0  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 19575  002FA4  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 19576  002FA8  EFE0  F017         	goto	l8440
 19577  002FAC                     l294:
 19578                           
 19579                           ;libraries/lcd_highlevel.c: 664:     {;libraries/lcd_highlevel.c: 665:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19580  002FAC  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19581  002FB0  968B               	bcf	3979,3,c	;volatile
 19582  002FB2  868B               	bsf	3979,3,c	;volatile
 19583                           
 19584                           ;libraries/lcd_highlevel.c: 666:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19585  002FB4  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19586  002FB8  968B               	bcf	3979,3,c	;volatile
 19587  002FBA  868B               	bsf	3979,3,c	;volatile
 19588  002FBC                     
 19589                           ;libraries/lcd_highlevel.c: 667:     }
 19590  002FBC  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19591  002FBE  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19592  002FC0                     l8440:
 19593  002FC0  5023               	movf	LCD_DrawRect@i^0,w,c
 19594  002FC2  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 19595  002FC4  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19596  002FC6  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 19597  002FC8  B0D8               	btfsc	status,0,c
 19598  002FCA  EFE9  F017         	goto	u6161
 19599  002FCE  EFEB  F017         	goto	u6160
 19600  002FD2                     u6161:
 19601  002FD2  EFD6  F017         	goto	l294
 19602  002FD6                     u6160:
 19603  002FD6                     
 19604                           ;libraries/lcd_highlevel.c: 669:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19605  002FD6  0E2A               	movlw	42
 19606  002FD8  6E80               	movwf	128,c	;volatile
 19607  002FDA  988B               	bcf	3979,4,c	;volatile
 19608  002FDC  968B               	bcf	3979,3,c	;volatile
 19609  002FDE  868B               	bsf	3979,3,c	;volatile
 19610  002FE0  888B               	bsf	3979,4,c	;volatile
 19611                           
 19612                           ;libraries/lcd_highlevel.c: 670:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19613  002FE2  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19614  002FE4  6E80               	movwf	128,c	;volatile
 19615  002FE6  968B               	bcf	3979,3,c	;volatile
 19616  002FE8  868B               	bsf	3979,3,c	;volatile
 19617  002FEA                     
 19618                           ;libraries/lcd_highlevel.c: 671:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19619  002FEA  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19620  002FEE  968B               	bcf	3979,3,c	;volatile
 19621  002FF0  868B               	bsf	3979,3,c	;volatile
 19622                           
 19623                           ;libraries/lcd_highlevel.c: 672:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19624  002FF2  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19625  002FF4  6E80               	movwf	128,c	;volatile
 19626  002FF6  968B               	bcf	3979,3,c	;volatile
 19627  002FF8  868B               	bsf	3979,3,c	;volatile
 19628  002FFA                     
 19629                           ;libraries/lcd_highlevel.c: 673:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19630  002FFA  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19631  002FFE  968B               	bcf	3979,3,c	;volatile
 19632  003000  868B               	bsf	3979,3,c	;volatile
 19633                           
 19634                           ;libraries/lcd_highlevel.c: 675:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19635  003002  0E2B               	movlw	43
 19636  003004  6E80               	movwf	128,c	;volatile
 19637  003006  988B               	bcf	3979,4,c	;volatile
 19638  003008  968B               	bcf	3979,3,c	;volatile
 19639  00300A  868B               	bsf	3979,3,c	;volatile
 19640  00300C  888B               	bsf	3979,4,c	;volatile
 19641                           
 19642                           ;libraries/lcd_highlevel.c: 676:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 19643  00300E  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 19644  003010  6E80               	movwf	128,c	;volatile
 19645  003012  968B               	bcf	3979,3,c	;volatile
 19646  003014  868B               	bsf	3979,3,c	;volatile
 19647  003016                     
 19648                           ;libraries/lcd_highlevel.c: 677:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 19649  003016  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 19650  00301A  968B               	bcf	3979,3,c	;volatile
 19651  00301C  868B               	bsf	3979,3,c	;volatile
 19652                           
 19653                           ;libraries/lcd_highlevel.c: 678:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 19654  00301E  0E01               	movlw	1
 19655  003020  6E80               	movwf	128,c	;volatile
 19656  003022  968B               	bcf	3979,3,c	;volatile
 19657  003024  868B               	bsf	3979,3,c	;volatile
 19658                           
 19659                           ;libraries/lcd_highlevel.c: 679:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 19660  003026  0E3F               	movlw	63
 19661  003028  6E80               	movwf	128,c	;volatile
 19662  00302A  968B               	bcf	3979,3,c	;volatile
 19663  00302C  868B               	bsf	3979,3,c	;volatile
 19664                           
 19665                           ;libraries/lcd_highlevel.c: 680:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19666  00302E  0E2C               	movlw	44
 19667  003030  6E80               	movwf	128,c	;volatile
 19668  003032  988B               	bcf	3979,4,c	;volatile
 19669  003034  968B               	bcf	3979,3,c	;volatile
 19670  003036  868B               	bsf	3979,3,c	;volatile
 19671  003038  888B               	bsf	3979,4,c	;volatile
 19672  00303A                     
 19673                           ;libraries/lcd_highlevel.c: 681:     for(i=posY1;i<=posY2;i++)
 19674  00303A  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19675  00303E  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19676  003042  EF2D  F018         	goto	l8510
 19677  003046                     l297:
 19678                           
 19679                           ;libraries/lcd_highlevel.c: 682:     {;libraries/lcd_highlevel.c: 683:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19680  003046  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19681  00304A  968B               	bcf	3979,3,c	;volatile
 19682  00304C  868B               	bsf	3979,3,c	;volatile
 19683                           
 19684                           ;libraries/lcd_highlevel.c: 684:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19685  00304E  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19686  003052  968B               	bcf	3979,3,c	;volatile
 19687  003054  868B               	bsf	3979,3,c	;volatile
 19688  003056                     
 19689                           ;libraries/lcd_highlevel.c: 685:     }
 19690  003056  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19691  003058  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19692  00305A                     l8510:
 19693  00305A  5023               	movf	LCD_DrawRect@i^0,w,c
 19694  00305C  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19695  00305E  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19696  003060  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19697  003062  B0D8               	btfsc	status,0,c
 19698  003064  EF36  F018         	goto	u6171
 19699  003068  EF38  F018         	goto	u6170
 19700  00306C                     u6171:
 19701  00306C  EF23  F018         	goto	l297
 19702  003070                     u6170:
 19703  003070                     
 19704                           ;libraries/lcd_highlevel.c: 687:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19705  003070  0E2A               	movlw	42
 19706  003072  6E80               	movwf	128,c	;volatile
 19707  003074  988B               	bcf	3979,4,c	;volatile
 19708  003076  968B               	bcf	3979,3,c	;volatile
 19709  003078  868B               	bsf	3979,3,c	;volatile
 19710  00307A  888B               	bsf	3979,4,c	;volatile
 19711                           
 19712                           ;libraries/lcd_highlevel.c: 688:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19713  00307C  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19714  00307E  6E80               	movwf	128,c	;volatile
 19715  003080  968B               	bcf	3979,3,c	;volatile
 19716  003082  868B               	bsf	3979,3,c	;volatile
 19717  003084                     
 19718                           ;libraries/lcd_highlevel.c: 689:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19719  003084  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19720  003088  968B               	bcf	3979,3,c	;volatile
 19721  00308A  868B               	bsf	3979,3,c	;volatile
 19722                           
 19723                           ;libraries/lcd_highlevel.c: 690:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19724  00308C  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19725  00308E  6E80               	movwf	128,c	;volatile
 19726  003090  968B               	bcf	3979,3,c	;volatile
 19727  003092  868B               	bsf	3979,3,c	;volatile
 19728  003094                     
 19729                           ;libraries/lcd_highlevel.c: 691:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19730  003094  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19731  003098  968B               	bcf	3979,3,c	;volatile
 19732  00309A  868B               	bsf	3979,3,c	;volatile
 19733                           
 19734                           ;libraries/lcd_highlevel.c: 692:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19735  00309C  0E2C               	movlw	44
 19736  00309E  6E80               	movwf	128,c	;volatile
 19737  0030A0  988B               	bcf	3979,4,c	;volatile
 19738  0030A2  968B               	bcf	3979,3,c	;volatile
 19739  0030A4  868B               	bsf	3979,3,c	;volatile
 19740  0030A6  888B               	bsf	3979,4,c	;volatile
 19741  0030A8                     
 19742                           ;libraries/lcd_highlevel.c: 693:     for(i=posY1;i<=posY2;i++)
 19743  0030A8  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19744  0030AC  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19745  0030B0  EF64  F018         	goto	l8554
 19746  0030B4                     l300:
 19747                           
 19748                           ;libraries/lcd_highlevel.c: 694:     {;libraries/lcd_highlevel.c: 695:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19749  0030B4  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19750  0030B8  968B               	bcf	3979,3,c	;volatile
 19751  0030BA  868B               	bsf	3979,3,c	;volatile
 19752                           
 19753                           ;libraries/lcd_highlevel.c: 696:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19754  0030BC  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19755  0030C0  968B               	bcf	3979,3,c	;volatile
 19756  0030C2  868B               	bsf	3979,3,c	;volatile
 19757  0030C4                     
 19758                           ;libraries/lcd_highlevel.c: 697:     }
 19759  0030C4  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19760  0030C6  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19761  0030C8                     l8554:
 19762  0030C8  5023               	movf	LCD_DrawRect@i^0,w,c
 19763  0030CA  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19764  0030CC  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19765  0030CE  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19766  0030D0  B0D8               	btfsc	status,0,c
 19767  0030D2  EF6D  F018         	goto	u6181
 19768  0030D6  EF6F  F018         	goto	u6180
 19769  0030DA                     u6181:
 19770  0030DA  EF5A  F018         	goto	l300
 19771  0030DE                     u6180:
 19772  0030DE                     l302:
 19773  0030DE  0012               	return		;funcret
 19774  0030E0                     __end_of_LCD_DrawRect:
 19775                           	callstack 0
 19776                           
 19777 ;; *************** function _XF_popEvent *****************
 19778 ;; Defined at:
 19779 ;;		line 72 in file "xf/xf.c"
 19780 ;; Parameters:    Size  Location     Type
 19781 ;;  inISR           1    wreg     _Bool 
 19782 ;; Auto vars:     Size  Location     Type
 19783 ;;  inISR           1   24[COMRAM] _Bool 
 19784 ;;  ev              1   23[COMRAM] unsigned char 
 19785 ;; Return value:  Size  Location     Type
 19786 ;;                  1    wreg      unsigned char 
 19787 ;; Registers used:
 19788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19789 ;; Tracked objects:
 19790 ;;		On entry : 0/0
 19791 ;;		On exit  : 0/0
 19792 ;;		Unchanged: 0/0
 19793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19794 ;;      Params:         0       0       0       0       0       0       0
 19795 ;;      Locals:         2       0       0       0       0       0       0
 19796 ;;      Temps:          0       0       0       0       0       0       0
 19797 ;;      Totals:         2       0       0       0       0       0       0
 19798 ;;Total ram usage:        2 bytes
 19799 ;; Hardware stack levels used: 1
 19800 ;; Hardware stack levels required when called: 5
 19801 ;; This function calls:
 19802 ;;		_ENTERCRITICAL
 19803 ;;		_LEAVECRITICAL
 19804 ;;		___awmod
 19805 ;; This function is called by:
 19806 ;;		_Factory_exec
 19807 ;; This function uses a non-reentrant model
 19808 ;;
 19809                           
 19810                           	psect	text79
 19811  006202                     __ptext79:
 19812                           	callstack 0
 19813  006202                     _XF_popEvent:
 19814                           	callstack 24
 19815                           
 19816                           ;incstack = 0
 19817                           ;XF_popEvent@inISR stored from wreg
 19818  006202  6E19               	movwf	XF_popEvent@inISR^0,c
 19819  006204                     
 19820                           ;xf/xf.c: 76:     ENTERCRITICAL(inISR);
 19821  006204  5019               	movf	XF_popEvent@inISR^0,w,c
 19822  006206  EC7F  F033         	call	_ENTERCRITICAL
 19823  00620A                     
 19824                           ;xf/xf.c: 77:     if(theXF.in == theXF.out)
 19825  00620A  0100               	movlb	0	; () banked
 19826  00620C  51DA               	movf	(_theXF+37)& (0+255),w,b
 19827  00620E  19D9               	xorwf	(_theXF+36)& (0+255),w,b
 19828  006210  A4D8               	btfss	status,2,c
 19829  006212  EF0D  F031         	goto	u8161
 19830  006216  EF0F  F031         	goto	u8160
 19831  00621A                     u8161:
 19832  00621A  EF15  F031         	goto	l10502
 19833  00621E                     u8160:
 19834  00621E                     
 19835                           ; BSR set to: 0
 19836                           ;xf/xf.c: 78:     {;xf/xf.c: 79:       LEAVECRITICAL(inISR);
 19837  00621E  5019               	movf	XF_popEvent@inISR^0,w,c
 19838  006220  EC74  F033         	call	_LEAVECRITICAL
 19839  006224                     
 19840                           ;xf/xf.c: 80:       return ev;
 19841  006224  0E00               	movlw	0
 19842  006226  EF30  F031         	goto	l681
 19843  00622A                     l10502:
 19844                           
 19845                           ; BSR set to: 0
 19846                           ;xf/xf.c: 82:     ev = theXF.eventQueue[theXF.out];
 19847  00622A  0ECD               	movlw	low (_theXF+24)
 19848  00622C  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19849  00622E  6ED9               	movwf	fsr2l,c
 19850  006230  6ADA               	clrf	fsr2h,c
 19851  006232  0E00               	movlw	high (_theXF+24)
 19852  006234  22DA               	addwfc	fsr2h,f,c
 19853  006236  50DF               	movf	indf2,w,c
 19854  006238  6E18               	movwf	XF_popEvent@ev^0,c
 19855  00623A                     
 19856                           ; BSR set to: 0
 19857                           ;xf/xf.c: 83:     theXF.out = (theXF.out + 1)%(uint8_t)sizeof(theXF.eventQueue);
 19858  00623A  0E01               	movlw	1
 19859  00623C  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19860  00623E  6E12               	movwf	___awmod@dividend^0,c
 19861  006240  6A13               	clrf	(___awmod@dividend+1)^0,c
 19862  006242  0E00               	movlw	0
 19863  006244  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 19864  006246  0E00               	movlw	0
 19865  006248  6E15               	movwf	(___awmod@divisor+1)^0,c
 19866  00624A  0E0C               	movlw	12
 19867  00624C  6E14               	movwf	___awmod@divisor^0,c
 19868  00624E  ECCF  F02D         	call	___awmod	;wreg free
 19869  006252  5012               	movf	?___awmod^0,w,c
 19870  006254  0100               	movlb	0	; () banked
 19871  006256  6FDA               	movwf	(_theXF+37)& (0+255),b
 19872  006258                     
 19873                           ; BSR set to: 0
 19874                           ;xf/xf.c: 84:     LEAVECRITICAL(inISR);
 19875  006258  5019               	movf	XF_popEvent@inISR^0,w,c
 19876  00625A  EC74  F033         	call	_LEAVECRITICAL
 19877  00625E                     
 19878                           ;xf/xf.c: 85:     return ev;
 19879  00625E  5018               	movf	XF_popEvent@ev^0,w,c
 19880  006260                     l681:
 19881  006260  0012               	return		;funcret
 19882  006262                     __end_of_XF_popEvent:
 19883                           	callstack 0
 19884                           
 19885 ;; *************** function ___awmod *****************
 19886 ;; Defined at:
 19887 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 19888 ;; Parameters:    Size  Location     Type
 19889 ;;  dividend        2   17[COMRAM] int 
 19890 ;;  divisor         2   19[COMRAM] int 
 19891 ;; Auto vars:     Size  Location     Type
 19892 ;;  sign            1   22[COMRAM] unsigned char 
 19893 ;;  counter         1   21[COMRAM] unsigned char 
 19894 ;; Return value:  Size  Location     Type
 19895 ;;                  2   17[COMRAM] int 
 19896 ;; Registers used:
 19897 ;;		wreg, status,2, status,0
 19898 ;; Tracked objects:
 19899 ;;		On entry : 0/0
 19900 ;;		On exit  : 0/0
 19901 ;;		Unchanged: 0/0
 19902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19903 ;;      Params:         4       0       0       0       0       0       0
 19904 ;;      Locals:         2       0       0       0       0       0       0
 19905 ;;      Temps:          0       0       0       0       0       0       0
 19906 ;;      Totals:         6       0       0       0       0       0       0
 19907 ;;Total ram usage:        6 bytes
 19908 ;; Hardware stack levels used: 1
 19909 ;; Hardware stack levels required when called: 4
 19910 ;; This function calls:
 19911 ;;		Nothing
 19912 ;; This function is called by:
 19913 ;;		_XF_pushEvent
 19914 ;;		_XF_popEvent
 19915 ;; This function uses a non-reentrant model
 19916 ;;
 19917                           
 19918                           	psect	text80
 19919  005B9E                     __ptext80:
 19920                           	callstack 0
 19921  005B9E                     ___awmod:
 19922                           	callstack 20
 19923  005B9E  0E00               	movlw	0
 19924  005BA0  6E17               	movwf	___awmod@sign^0,c
 19925  005BA2  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
 19926  005BA4  EFD8  F02D         	goto	u6310
 19927  005BA8  EFD6  F02D         	goto	u6311
 19928  005BAC                     u6311:
 19929  005BAC  EFDE  F02D         	goto	l8744
 19930  005BB0                     u6310:
 19931  005BB0  6C12               	negf	___awmod@dividend^0,c
 19932  005BB2  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19933  005BB4  B0D8               	btfsc	status,0,c
 19934  005BB6  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19935  005BB8  0E01               	movlw	1
 19936  005BBA  6E17               	movwf	___awmod@sign^0,c
 19937  005BBC                     l8744:
 19938  005BBC  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
 19939  005BBE  EFE5  F02D         	goto	u6320
 19940  005BC2  EFE3  F02D         	goto	u6321
 19941  005BC6                     u6321:
 19942  005BC6  EFE9  F02D         	goto	l8748
 19943  005BCA                     u6320:
 19944  005BCA  6C14               	negf	___awmod@divisor^0,c
 19945  005BCC  1E15               	comf	(___awmod@divisor+1)^0,f,c
 19946  005BCE  B0D8               	btfsc	status,0,c
 19947  005BD0  2A15               	incf	(___awmod@divisor+1)^0,f,c
 19948  005BD2                     l8748:
 19949  005BD2  5014               	movf	___awmod@divisor^0,w,c
 19950  005BD4  1015               	iorwf	(___awmod@divisor+1)^0,w,c
 19951  005BD6  B4D8               	btfsc	status,2,c
 19952  005BD8  EFF0  F02D         	goto	u6331
 19953  005BDC  EFF2  F02D         	goto	u6330
 19954  005BE0                     u6331:
 19955  005BE0  EF16  F02E         	goto	l8764
 19956  005BE4                     u6330:
 19957  005BE4  0E01               	movlw	1
 19958  005BE6  6E16               	movwf	___awmod@counter^0,c
 19959  005BE8  EFFA  F02D         	goto	l8754
 19960  005BEC                     l8752:
 19961  005BEC  90D8               	bcf	status,0,c
 19962  005BEE  3614               	rlcf	___awmod@divisor^0,f,c
 19963  005BF0  3615               	rlcf	(___awmod@divisor+1)^0,f,c
 19964  005BF2  2A16               	incf	___awmod@counter^0,f,c
 19965  005BF4                     l8754:
 19966  005BF4  AE15               	btfss	(___awmod@divisor+1)^0,7,c
 19967  005BF6  EFFF  F02D         	goto	u6341
 19968  005BFA  EF01  F02E         	goto	u6340
 19969  005BFE                     u6341:
 19970  005BFE  EFF6  F02D         	goto	l8752
 19971  005C02                     u6340:
 19972  005C02                     l8756:
 19973  005C02  5014               	movf	___awmod@divisor^0,w,c
 19974  005C04  5C12               	subwf	___awmod@dividend^0,w,c
 19975  005C06  5015               	movf	(___awmod@divisor+1)^0,w,c
 19976  005C08  5813               	subwfb	(___awmod@dividend+1)^0,w,c
 19977  005C0A  A0D8               	btfss	status,0,c
 19978  005C0C  EF0A  F02E         	goto	u6351
 19979  005C10  EF0C  F02E         	goto	u6350
 19980  005C14                     u6351:
 19981  005C14  EF10  F02E         	goto	l8760
 19982  005C18                     u6350:
 19983  005C18  5014               	movf	___awmod@divisor^0,w,c
 19984  005C1A  5E12               	subwf	___awmod@dividend^0,f,c
 19985  005C1C  5015               	movf	(___awmod@divisor+1)^0,w,c
 19986  005C1E  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
 19987  005C20                     l8760:
 19988  005C20  90D8               	bcf	status,0,c
 19989  005C22  3215               	rrcf	(___awmod@divisor+1)^0,f,c
 19990  005C24  3214               	rrcf	___awmod@divisor^0,f,c
 19991  005C26  2E16               	decfsz	___awmod@counter^0,f,c
 19992  005C28  EF01  F02E         	goto	l8756
 19993  005C2C                     l8764:
 19994  005C2C  5017               	movf	___awmod@sign^0,w,c
 19995  005C2E  B4D8               	btfsc	status,2,c
 19996  005C30  EF1C  F02E         	goto	u6361
 19997  005C34  EF1E  F02E         	goto	u6360
 19998  005C38                     u6361:
 19999  005C38  EF22  F02E         	goto	l8768
 20000  005C3C                     u6360:
 20001  005C3C  6C12               	negf	___awmod@dividend^0,c
 20002  005C3E  1E13               	comf	(___awmod@dividend+1)^0,f,c
 20003  005C40  B0D8               	btfsc	status,0,c
 20004  005C42  2A13               	incf	(___awmod@dividend+1)^0,f,c
 20005  005C44                     l8768:
 20006  005C44  C012  F012         	movff	___awmod@dividend,?___awmod
 20007  005C48  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
 20008  005C4C  0012               	return		;funcret
 20009  005C4E                     __end_of___awmod:
 20010                           	callstack 0
 20011                           
 20012 ;; *************** function _LEAVECRITICAL *****************
 20013 ;; Defined at:
 20014 ;;		line 186 in file "xf/xf.c"
 20015 ;; Parameters:    Size  Location     Type
 20016 ;;  inISR           1    wreg     _Bool 
 20017 ;; Auto vars:     Size  Location     Type
 20018 ;;  inISR           1   17[COMRAM] _Bool 
 20019 ;; Return value:  Size  Location     Type
 20020 ;;                  1    wreg      void 
 20021 ;; Registers used:
 20022 ;;		wreg, status,2
 20023 ;; Tracked objects:
 20024 ;;		On entry : 0/0
 20025 ;;		On exit  : 0/0
 20026 ;;		Unchanged: 0/0
 20027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20028 ;;      Params:         0       0       0       0       0       0       0
 20029 ;;      Locals:         1       0       0       0       0       0       0
 20030 ;;      Temps:          0       0       0       0       0       0       0
 20031 ;;      Totals:         1       0       0       0       0       0       0
 20032 ;;Total ram usage:        1 bytes
 20033 ;; Hardware stack levels used: 1
 20034 ;; Hardware stack levels required when called: 4
 20035 ;; This function calls:
 20036 ;;		Nothing
 20037 ;; This function is called by:
 20038 ;;		_XF_pushEvent
 20039 ;;		_XF_popEvent
 20040 ;;		_XF_scheduleTimer
 20041 ;; This function uses a non-reentrant model
 20042 ;;
 20043                           
 20044                           	psect	text81
 20045  0066E8                     __ptext81:
 20046                           	callstack 0
 20047  0066E8                     _LEAVECRITICAL:
 20048                           	callstack 20
 20049                           
 20050                           ;incstack = 0
 20051                           ;LEAVECRITICAL@inISR stored from wreg
 20052  0066E8  6E12               	movwf	LEAVECRITICAL@inISR^0,c
 20053  0066EA                     
 20054                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 20055  0066EA  5012               	movf	LEAVECRITICAL@inISR^0,w,c
 20056  0066EC  A4D8               	btfss	status,2,c
 20057  0066EE  EF7B  F033         	goto	u6241
 20058  0066F2  EF7D  F033         	goto	u6240
 20059  0066F6                     u6241:
 20060  0066F6  EF7E  F033         	goto	l707
 20061  0066FA                     u6240:
 20062  0066FA                     
 20063                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 20064  0066FA  8EF2               	bsf	4082,7,c	;volatile
 20065  0066FC                     l707:
 20066  0066FC  0012               	return		;funcret
 20067  0066FE                     __end_of_LEAVECRITICAL:
 20068                           	callstack 0
 20069                           
 20070 ;; *************** function _ENTERCRITICAL *****************
 20071 ;; Defined at:
 20072 ;;		line 172 in file "xf/xf.c"
 20073 ;; Parameters:    Size  Location     Type
 20074 ;;  inISR           1    wreg     _Bool 
 20075 ;; Auto vars:     Size  Location     Type
 20076 ;;  inISR           1   17[COMRAM] _Bool 
 20077 ;; Return value:  Size  Location     Type
 20078 ;;                  1    wreg      void 
 20079 ;; Registers used:
 20080 ;;		wreg, status,2
 20081 ;; Tracked objects:
 20082 ;;		On entry : 0/0
 20083 ;;		On exit  : 0/0
 20084 ;;		Unchanged: 0/0
 20085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20086 ;;      Params:         0       0       0       0       0       0       0
 20087 ;;      Locals:         1       0       0       0       0       0       0
 20088 ;;      Temps:          0       0       0       0       0       0       0
 20089 ;;      Totals:         1       0       0       0       0       0       0
 20090 ;;Total ram usage:        1 bytes
 20091 ;; Hardware stack levels used: 1
 20092 ;; Hardware stack levels required when called: 4
 20093 ;; This function calls:
 20094 ;;		Nothing
 20095 ;; This function is called by:
 20096 ;;		_XF_pushEvent
 20097 ;;		_XF_popEvent
 20098 ;;		_XF_scheduleTimer
 20099 ;; This function uses a non-reentrant model
 20100 ;;
 20101                           
 20102                           	psect	text82
 20103  0066FE                     __ptext82:
 20104                           	callstack 0
 20105  0066FE                     _ENTERCRITICAL:
 20106                           	callstack 20
 20107                           
 20108                           ;incstack = 0
 20109                           ;ENTERCRITICAL@inISR stored from wreg
 20110  0066FE  6E12               	movwf	ENTERCRITICAL@inISR^0,c
 20111  006700                     
 20112                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 20113  006700  5012               	movf	ENTERCRITICAL@inISR^0,w,c
 20114  006702  A4D8               	btfss	status,2,c
 20115  006704  EF86  F033         	goto	u6231
 20116  006708  EF88  F033         	goto	u6230
 20117  00670C                     u6231:
 20118  00670C  EF89  F033         	goto	l703
 20119  006710                     u6230:
 20120  006710                     
 20121                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 20122  006710  9EF2               	bcf	4082,7,c	;volatile
 20123  006712                     l703:
 20124  006712  0012               	return		;funcret
 20125  006714                     __end_of_ENTERCRITICAL:
 20126                           	callstack 0
 20127                           
 20128 ;; *************** function _isr *****************
 20129 ;; Defined at:
 20130 ;;		line 18 in file "main.c"
 20131 ;; Parameters:    Size  Location     Type
 20132 ;;		None
 20133 ;; Auto vars:     Size  Location     Type
 20134 ;;		None
 20135 ;; Return value:  Size  Location     Type
 20136 ;;                  1    wreg      void 
 20137 ;; Registers used:
 20138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20139 ;; Tracked objects:
 20140 ;;		On entry : 0/0
 20141 ;;		On exit  : 0/0
 20142 ;;		Unchanged: 0/0
 20143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20144 ;;      Params:         0       0       0       0       0       0       0
 20145 ;;      Locals:         0       0       0       0       0       0       0
 20146 ;;      Temps:          4       0       0       0       0       0       0
 20147 ;;      Totals:         4       0       0       0       0       0       0
 20148 ;;Total ram usage:        4 bytes
 20149 ;; Hardware stack levels used: 1
 20150 ;; Hardware stack levels required when called: 3
 20151 ;; This function calls:
 20152 ;;		_XF_decrementAndQueueTimers
 20153 ;;		i2_XF_pushEvent
 20154 ;; This function is called by:
 20155 ;;		Interrupt level 2
 20156 ;; This function uses a non-reentrant model
 20157 ;;
 20158                           
 20159                           	psect	intcode
 20160  000008                     __pintcode:
 20161                           	callstack 0
 20162  000008                     _isr:
 20163                           	callstack 14
 20164                           
 20165                           ;incstack = 0
 20166  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 20167  00000A  CFD9 F00E          	movff	fsr2l,??_isr
 20168  00000E  CFDA F00F          	movff	fsr2h,??_isr+1
 20169  000012  CFF3 F010          	movff	prodl,??_isr+2
 20170  000016  CFF4 F011          	movff	prodh,??_isr+3
 20171  00001A                     
 20172                           ;main.c: 20:     if((INT1IF==1)&&(INT1IE==1))
 20173  00001A  A0F0               	btfss	4080,0,c	;volatile
 20174  00001C  EF12  F000         	goto	i2u564_41
 20175  000020  EF14  F000         	goto	i2u564_40
 20176  000024                     i2u564_41:
 20177  000024  EF39  F000         	goto	i2l7846
 20178  000028                     i2u564_40:
 20179  000028  A6F0               	btfss	4080,3,c	;volatile
 20180  00002A  EF19  F000         	goto	i2u565_41
 20181  00002E  EF1B  F000         	goto	i2u565_40
 20182  000032                     i2u565_41:
 20183  000032  EF39  F000         	goto	i2l7846
 20184  000036                     i2u565_40:
 20185  000036                     
 20186                           ;main.c: 21:     {;main.c: 22:         if(INTEDG1==0)
 20187  000036  BAF1               	btfsc	4081,5,c	;volatile
 20188  000038  EF20  F000         	goto	i2u566_41
 20189  00003C  EF22  F000         	goto	i2u566_40
 20190  000040                     i2u566_41:
 20191  000040  EF2B  F000         	goto	i2l741
 20192  000044                     i2u566_40:
 20193  000044                     
 20194                           ;main.c: 23:         {;main.c: 24:             INTEDG1=1;
 20195  000044  8AF1               	bsf	4081,5,c	;volatile
 20196                           
 20197                           ;main.c: 25:             INT1IF=0;
 20198  000046  90F0               	bcf	4080,0,c	;volatile
 20199  000048                     
 20200                           ;main.c: 26:             XF_pushEvent(evPress,1);
 20201  000048  0E01               	movlw	1
 20202  00004A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 20203  00004C  0E01               	movlw	1
 20204  00004E  EC6D  F030         	call	i2_XF_pushEvent
 20205                           
 20206                           ;main.c: 28:         }
 20207  000052  EF39  F000         	goto	i2l7846
 20208  000056                     i2l741:
 20209  000056  AAF1               	btfss	4081,5,c	;volatile
 20210  000058  EF30  F000         	goto	i2u567_41
 20211  00005C  EF32  F000         	goto	i2u567_40
 20212  000060                     i2u567_41:
 20213  000060  EF39  F000         	goto	i2l7846
 20214  000064                     i2u567_40:
 20215  000064                     
 20216                           ;main.c: 30:         {;main.c: 31:             INTEDG1=0;
 20217  000064  9AF1               	bcf	4081,5,c	;volatile
 20218                           
 20219                           ;main.c: 32:             INT1IF=0;
 20220  000066  90F0               	bcf	4080,0,c	;volatile
 20221  000068                     
 20222                           ;main.c: 33:             XF_pushEvent(evRelease,1);
 20223  000068  0E01               	movlw	1
 20224  00006A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 20225  00006C  0E02               	movlw	2
 20226  00006E  EC6D  F030         	call	i2_XF_pushEvent
 20227  000072                     i2l7846:
 20228                           
 20229                           ;main.c: 39:     if((TMR0IF==1)&&(TMR0IE==1))
 20230  000072  A4F2               	btfss	4082,2,c	;volatile
 20231  000074  EF3E  F000         	goto	i2u568_41
 20232  000078  EF40  F000         	goto	i2u568_40
 20233  00007C                     i2u568_41:
 20234  00007C  EF4E  F000         	goto	i2l745
 20235  000080                     i2u568_40:
 20236  000080  AAF2               	btfss	4082,5,c	;volatile
 20237  000082  EF45  F000         	goto	i2u569_41
 20238  000086  EF47  F000         	goto	i2u569_40
 20239  00008A                     i2u569_41:
 20240  00008A  EF4E  F000         	goto	i2l745
 20241  00008E                     i2u569_40:
 20242  00008E                     
 20243                           ;main.c: 40:     {;main.c: 41:         XF_decrementAndQueueTimers();
 20244  00008E  EC58  F023         	call	_XF_decrementAndQueueTimers	;wreg free
 20245  000092                     
 20246                           ;main.c: 42:         TMR0H=0xFB;
 20247  000092  0EFB               	movlw	251
 20248  000094  6ED7               	movwf	215,c	;volatile
 20249  000096                     
 20250                           ;main.c: 43:         TMR0L=0x1D;
 20251  000096  0E1D               	movlw	29
 20252  000098  6ED6               	movwf	214,c	;volatile
 20253  00009A                     
 20254                           ;main.c: 44:         TMR0IF=0;
 20255  00009A  94F2               	bcf	4082,2,c	;volatile
 20256  00009C                     i2l745:
 20257  00009C  C011  FFF4         	movff	??_isr+3,prodh
 20258  0000A0  C010  FFF3         	movff	??_isr+2,prodl
 20259  0000A4  C00F  FFDA         	movff	??_isr+1,fsr2h
 20260  0000A8  C00E  FFD9         	movff	??_isr,fsr2l
 20261  0000AC  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 20262  0000AE  0011               	retfie		f
 20263  0000B0                     __end_of_isr:
 20264                           	callstack 0
 20265                           
 20266 ;; *************** function _XF_decrementAndQueueTimers *****************
 20267 ;; Defined at:
 20268 ;;		line 139 in file "xf/xf.c"
 20269 ;; Parameters:    Size  Location     Type
 20270 ;;		None
 20271 ;; Auto vars:     Size  Location     Type
 20272 ;;  i               2   11[COMRAM] int 
 20273 ;; Return value:  Size  Location     Type
 20274 ;;                  1    wreg      void 
 20275 ;; Registers used:
 20276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20277 ;; Tracked objects:
 20278 ;;		On entry : 0/0
 20279 ;;		On exit  : 0/0
 20280 ;;		Unchanged: 0/0
 20281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20282 ;;      Params:         0       0       0       0       0       0       0
 20283 ;;      Locals:         2       0       0       0       0       0       0
 20284 ;;      Temps:          2       0       0       0       0       0       0
 20285 ;;      Totals:         4       0       0       0       0       0       0
 20286 ;;Total ram usage:        4 bytes
 20287 ;; Hardware stack levels used: 1
 20288 ;; Hardware stack levels required when called: 2
 20289 ;; This function calls:
 20290 ;;		_XF_unscheduleTimer
 20291 ;;		i2_XF_pushEvent
 20292 ;;		i2___wmul
 20293 ;; This function is called by:
 20294 ;;		_isr
 20295 ;; This function uses a non-reentrant model
 20296 ;;
 20297                           
 20298                           	psect	text84
 20299  0046B0                     __ptext84:
 20300                           	callstack 0
 20301  0046B0                     _XF_decrementAndQueueTimers:
 20302                           	callstack 14
 20303  0046B0                     
 20304                           ;xf/xf.c: 141:     int i;;xf/xf.c: 142:     for (i=0; i<8; i++)
 20305  0046B0  0E00               	movlw	0
 20306  0046B2  6E0D               	movwf	(XF_decrementAndQueueTimers@i+1)^0,c
 20307  0046B4  0E00               	movlw	0
 20308  0046B6  6E0C               	movwf	XF_decrementAndQueueTimers@i^0,c
 20309  0046B8                     i2l7818:
 20310                           
 20311                           ;xf/xf.c: 143:     {;xf/xf.c: 144:         if (theXF.timerList[i].ev != NULLEVENT)
 20312  0046B8  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 20313  0046BC  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 20314  0046C0  0E00               	movlw	0
 20315  0046C2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 20316  0046C4  0E03               	movlw	3
 20317  0046C6  6E03               	movwf	i2___wmul@multiplicand^0,c
 20318  0046C8  EC18  F033         	call	i2___wmul	;wreg free
 20319  0046CC  0EB7               	movlw	low (_theXF+2)
 20320  0046CE  2401               	addwf	?i2___wmul^0,w,c
 20321  0046D0  6ED9               	movwf	fsr2l,c
 20322  0046D2  0E00               	movlw	high (_theXF+2)
 20323  0046D4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 20324  0046D6  6EDA               	movwf	fsr2h,c
 20325  0046D8  50DF               	movf	indf2,w,c
 20326  0046DA  B4D8               	btfsc	status,2,c
 20327  0046DC  EF72  F023         	goto	i2u560_41
 20328  0046E0  EF74  F023         	goto	i2u560_40
 20329  0046E4                     i2u560_41:
 20330  0046E4  EFD8  F023         	goto	i2l7828
 20331  0046E8                     i2u560_40:
 20332  0046E8                     
 20333                           ;xf/xf.c: 145:         {;xf/xf.c: 147:             theXF.timerList[i].tm-=1;
 20334  0046E8  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 20335  0046EC  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 20336  0046F0  0E00               	movlw	0
 20337  0046F2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 20338  0046F4  0E03               	movlw	3
 20339  0046F6  6E03               	movwf	i2___wmul@multiplicand^0,c
 20340  0046F8  EC18  F033         	call	i2___wmul	;wreg free
 20341  0046FC  0EB5               	movlw	low _theXF
 20342  0046FE  2401               	addwf	?i2___wmul^0,w,c
 20343  004700  6ED9               	movwf	fsr2l,c
 20344  004702  0E00               	movlw	high _theXF
 20345  004704  2002               	addwfc	(?i2___wmul+1)^0,w,c
 20346  004706  6EDA               	movwf	fsr2h,c
 20347  004708  06DE               	decf	postinc2,f,c
 20348  00470A  0E00               	movlw	0
 20349  00470C  5ADD               	subwfb	postdec2,f,c
 20350                           
 20351                           ;xf/xf.c: 148:             if (theXF.timerList[i].tm ==0)
 20352  00470E  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 20353  004712  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 20354  004716  0E00               	movlw	0
 20355  004718  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 20356  00471A  0E03               	movlw	3
 20357  00471C  6E03               	movwf	i2___wmul@multiplicand^0,c
 20358  00471E  EC18  F033         	call	i2___wmul	;wreg free
 20359  004722  0EB5               	movlw	low _theXF
 20360  004724  2401               	addwf	?i2___wmul^0,w,c
 20361  004726  6ED9               	movwf	fsr2l,c
 20362  004728  0E00               	movlw	high _theXF
 20363  00472A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 20364  00472C  6EDA               	movwf	fsr2h,c
 20365  00472E  50DE               	movf	postinc2,w,c
 20366  004730  10DE               	iorwf	postinc2,w,c
 20367  004732  A4D8               	btfss	status,2,c
 20368  004734  EF9E  F023         	goto	i2u561_41
 20369  004738  EFA0  F023         	goto	i2u561_40
 20370  00473C                     i2u561_41:
 20371  00473C  EFD8  F023         	goto	i2l7828
 20372  004740                     i2u561_40:
 20373  004740                     
 20374                           ;xf/xf.c: 149:             {;xf/xf.c: 150:                 if(XF_pushEvent(theXF.timerLi
      +                          st[i].ev, 1) == 1)
 20375  004740  0E01               	movlw	1
 20376  004742  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 20377  004744  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 20378  004748  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 20379  00474C  0E00               	movlw	0
 20380  00474E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 20381  004750  0E03               	movlw	3
 20382  004752  6E03               	movwf	i2___wmul@multiplicand^0,c
 20383  004754  EC18  F033         	call	i2___wmul	;wreg free
 20384  004758  0EB7               	movlw	low (_theXF+2)
 20385  00475A  2401               	addwf	?i2___wmul^0,w,c
 20386  00475C  6ED9               	movwf	fsr2l,c
 20387  00475E  0E00               	movlw	high (_theXF+2)
 20388  004760  2002               	addwfc	(?i2___wmul+1)^0,w,c
 20389  004762  6EDA               	movwf	fsr2h,c
 20390  004764  50DF               	movf	indf2,w,c
 20391  004766  EC6D  F030         	call	i2_XF_pushEvent
 20392  00476A  06E8               	decf	wreg,f,c
 20393  00476C  A4D8               	btfss	status,2,c
 20394  00476E  EFBB  F023         	goto	i2u562_41
 20395  004772  EFBD  F023         	goto	i2u562_40
 20396  004776                     i2u562_41:
 20397  004776  EFC4  F023         	goto	i2l7826
 20398  00477A                     i2u562_40:
 20399  00477A                     
 20400                           ;xf/xf.c: 151:                 {;xf/xf.c: 152:                   XF_unscheduleTimer(i, 1
      +                          );
 20401  00477A  0E01               	movlw	1
 20402  00477C  6E02               	movwf	XF_unscheduleTimer@inISR^0,c
 20403  00477E  500C               	movf	XF_decrementAndQueueTimers@i^0,w,c
 20404  004780  EC63  F032         	call	_XF_unscheduleTimer
 20405                           
 20406                           ;xf/xf.c: 153:                 }
 20407  004784  EFD8  F023         	goto	i2l7828
 20408  004788                     i2l7826:
 20409                           
 20410                           ;xf/xf.c: 155:                 {;xf/xf.c: 156:                   theXF.timerList[i].tm=1
      +                          ;
 20411  004788  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 20412  00478C  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 20413  004790  0E00               	movlw	0
 20414  004792  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 20415  004794  0E03               	movlw	3
 20416  004796  6E03               	movwf	i2___wmul@multiplicand^0,c
 20417  004798  EC18  F033         	call	i2___wmul	;wreg free
 20418  00479C  0EB5               	movlw	low _theXF
 20419  00479E  2401               	addwf	?i2___wmul^0,w,c
 20420  0047A0  6ED9               	movwf	fsr2l,c
 20421  0047A2  0E00               	movlw	high _theXF
 20422  0047A4  2002               	addwfc	(?i2___wmul+1)^0,w,c
 20423  0047A6  6EDA               	movwf	fsr2h,c
 20424  0047A8  0E01               	movlw	1
 20425  0047AA  6EDE               	movwf	postinc2,c
 20426  0047AC  0E00               	movlw	0
 20427  0047AE  6EDD               	movwf	postdec2,c
 20428  0047B0                     i2l7828:
 20429                           
 20430                           ;xf/xf.c: 160:     }
 20431  0047B0  4A0C               	infsnz	XF_decrementAndQueueTimers@i^0,f,c
 20432  0047B2  2A0D               	incf	(XF_decrementAndQueueTimers@i+1)^0,f,c
 20433  0047B4  BE0D               	btfsc	(XF_decrementAndQueueTimers@i+1)^0,7,c
 20434  0047B6  EFE6  F023         	goto	i2u563_41
 20435  0047BA  500D               	movf	(XF_decrementAndQueueTimers@i+1)^0,w,c
 20436  0047BC  E109               	bnz	i2u563_40
 20437  0047BE  0E08               	movlw	8
 20438  0047C0  5C0C               	subwf	XF_decrementAndQueueTimers@i^0,w,c
 20439  0047C2  A0D8               	btfss	status,0,c
 20440  0047C4  EFE6  F023         	goto	i2u563_41
 20441  0047C8  EFE8  F023         	goto	i2u563_40
 20442  0047CC                     i2u563_41:
 20443  0047CC  EF5C  F023         	goto	i2l7818
 20444  0047D0                     i2u563_40:
 20445  0047D0  0012               	return		;funcret
 20446  0047D2                     __end_of_XF_decrementAndQueueTimers:
 20447                           	callstack 0
 20448                           
 20449 ;; *************** function i2___wmul *****************
 20450 ;; Defined at:
 20451 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 20452 ;; Parameters:    Size  Location     Type
 20453 ;;  multiplier      2    0[COMRAM] unsigned int 
 20454 ;;  multiplicand    2    2[COMRAM] unsigned int 
 20455 ;; Auto vars:     Size  Location     Type
 20456 ;;  product         2    4[COMRAM] unsigned int 
 20457 ;; Return value:  Size  Location     Type
 20458 ;;                  2    0[COMRAM] unsigned int 
 20459 ;; Registers used:
 20460 ;;		wreg, status,2, status,0, prodl, prodh
 20461 ;; Tracked objects:
 20462 ;;		On entry : 0/0
 20463 ;;		On exit  : 0/0
 20464 ;;		Unchanged: 0/0
 20465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20466 ;;      Params:         4       0       0       0       0       0       0
 20467 ;;      Locals:         2       0       0       0       0       0       0
 20468 ;;      Temps:          0       0       0       0       0       0       0
 20469 ;;      Totals:         6       0       0       0       0       0       0
 20470 ;;Total ram usage:        6 bytes
 20471 ;; Hardware stack levels used: 1
 20472 ;; This function calls:
 20473 ;;		Nothing
 20474 ;; This function is called by:
 20475 ;;		_XF_decrementAndQueueTimers
 20476 ;; This function uses a non-reentrant model
 20477 ;;
 20478                           
 20479                           	psect	text85
 20480  006630                     __ptext85:
 20481                           	callstack 0
 20482  006630                     i2___wmul:
 20483                           	callstack 15
 20484  006630  5001               	movf	i2___wmul@multiplier^0,w,c
 20485  006632  0203               	mulwf	i2___wmul@multiplicand^0,c
 20486  006634  CFF3 F005          	movff	prodl,i2___wmul@product
 20487  006638  CFF4 F006          	movff	prodh,i2___wmul@product+1
 20488  00663C  5001               	movf	i2___wmul@multiplier^0,w,c
 20489  00663E  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 20490  006640  50F3               	movf	243,w,c
 20491  006642  2606               	addwf	(i2___wmul@product+1)^0,f,c
 20492  006644  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 20493  006646  0203               	mulwf	i2___wmul@multiplicand^0,c
 20494  006648  50F3               	movf	243,w,c
 20495  00664A  2606               	addwf	(i2___wmul@product+1)^0,f,c
 20496  00664C  C005  F001         	movff	i2___wmul@product,?i2___wmul
 20497  006650  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 20498  006654  0012               	return		;funcret
 20499  006656                     __end_ofi2___wmul:
 20500                           	callstack 0
 20501                           
 20502 ;; *************** function i2_XF_pushEvent *****************
 20503 ;; Defined at:
 20504 ;;		line 49 in file "xf/xf.c"
 20505 ;; Parameters:    Size  Location     Type
 20506 ;;  ev              1    wreg     unsigned char 
 20507 ;;  inISR           1    6[COMRAM] _Bool 
 20508 ;; Auto vars:     Size  Location     Type
 20509 ;;  ev              1    7[COMRAM] unsigned char 
 20510 ;;  temp            1    8[COMRAM] unsigned char 
 20511 ;; Return value:  Size  Location     Type
 20512 ;;                  1    wreg      _Bool 
 20513 ;; Registers used:
 20514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20515 ;; Tracked objects:
 20516 ;;		On entry : 0/0
 20517 ;;		On exit  : 0/0
 20518 ;;		Unchanged: 0/0
 20519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20520 ;;      Params:         1       0       0       0       0       0       0
 20521 ;;      Locals:         2       0       0       0       0       0       0
 20522 ;;      Temps:          0       0       0       0       0       0       0
 20523 ;;      Totals:         3       0       0       0       0       0       0
 20524 ;;Total ram usage:        3 bytes
 20525 ;; Hardware stack levels used: 1
 20526 ;; Hardware stack levels required when called: 1
 20527 ;; This function calls:
 20528 ;;		i2_ENTERCRITICAL
 20529 ;;		i2_LEAVECRITICAL
 20530 ;;		i2___awmod
 20531 ;; This function is called by:
 20532 ;;		_XF_decrementAndQueueTimers
 20533 ;;		_isr
 20534 ;; This function uses a non-reentrant model
 20535 ;;
 20536                           
 20537                           	psect	text86
 20538  0060DA                     __ptext86:
 20539                           	callstack 0
 20540  0060DA                     i2_XF_pushEvent:
 20541                           	callstack 15
 20542                           
 20543                           ;incstack = 0
 20544                           ;i2XF_pushEvent@ev stored from wreg
 20545  0060DA  6E08               	movwf	i2XF_pushEvent@ev^0,c
 20546  0060DC                     
 20547                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 20548  0060DC  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20549  0060DE  EC95  F033         	call	i2_ENTERCRITICAL
 20550  0060E2                     
 20551                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 20552  0060E2  0E01               	movlw	1
 20553  0060E4  0100               	movlb	0	; () banked
 20554  0060E6  25D9               	addwf	(_theXF+36)& (0+255),w,b
 20555  0060E8  6E01               	movwf	i2___awmod@dividend^0,c
 20556  0060EA  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 20557  0060EC  0E00               	movlw	0
 20558  0060EE  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
 20559  0060F0  0E00               	movlw	0
 20560  0060F2  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 20561  0060F4  0E0C               	movlw	12
 20562  0060F6  6E03               	movwf	i2___awmod@divisor^0,c
 20563  0060F8  EC27  F02E         	call	i2___awmod	;wreg free
 20564  0060FC  5001               	movf	?i2___awmod^0,w,c
 20565  0060FE  6E09               	movwf	i2XF_pushEvent@temp^0,c
 20566  006100                     
 20567                           ;xf/xf.c: 55:     if(temp == theXF.out)
 20568  006100  5009               	movf	i2XF_pushEvent@temp^0,w,c
 20569  006102  0100               	movlb	0	; () banked
 20570  006104  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 20571  006106  A4D8               	btfss	status,2,c
 20572  006108  EF88  F030         	goto	i2u558_41
 20573  00610C  EF8A  F030         	goto	i2u558_40
 20574  006110                     i2u558_41:
 20575  006110  EF90  F030         	goto	i2l7728
 20576  006114                     i2u558_40:
 20577  006114                     
 20578                           ; BSR set to: 0
 20579                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 20580  006114  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20581  006116  EC8A  F033         	call	i2_LEAVECRITICAL
 20582  00611A                     
 20583                           ;xf/xf.c: 58:       return 0;
 20584  00611A  0E00               	movlw	0
 20585  00611C  EF9E  F030         	goto	i2l677
 20586  006120                     i2l7728:
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 20590  006120  0ECD               	movlw	low (_theXF+24)
 20591  006122  25D9               	addwf	(_theXF+36)& (0+255),w,b
 20592  006124  6ED9               	movwf	fsr2l,c
 20593  006126  6ADA               	clrf	fsr2h,c
 20594  006128  0E00               	movlw	high (_theXF+24)
 20595  00612A  22DA               	addwfc	fsr2h,f,c
 20596  00612C  C008  FFDF         	movff	i2XF_pushEvent@ev,indf2
 20597  006130                     
 20598                           ; BSR set to: 0
 20599                           ;xf/xf.c: 61:     theXF.in = temp;
 20600  006130  C009  F0D9         	movff	i2XF_pushEvent@temp,_theXF+36
 20601  006134                     
 20602                           ; BSR set to: 0
 20603                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 20604  006134  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20605  006136  EC8A  F033         	call	i2_LEAVECRITICAL
 20606  00613A                     
 20607                           ;xf/xf.c: 63:     return 1;
 20608  00613A  0E01               	movlw	1
 20609  00613C                     i2l677:
 20610  00613C  0012               	return		;funcret
 20611  00613E                     __end_ofi2_XF_pushEvent:
 20612                           	callstack 0
 20613                           
 20614 ;; *************** function i2___awmod *****************
 20615 ;; Defined at:
 20616 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 20617 ;; Parameters:    Size  Location     Type
 20618 ;;  dividend        2    0[COMRAM] int 
 20619 ;;  divisor         2    2[COMRAM] int 
 20620 ;; Auto vars:     Size  Location     Type
 20621 ;;  sign            1    5[COMRAM] unsigned char 
 20622 ;;  counter         1    4[COMRAM] unsigned char 
 20623 ;; Return value:  Size  Location     Type
 20624 ;;                  2    0[COMRAM] int 
 20625 ;; Registers used:
 20626 ;;		wreg, status,2, status,0
 20627 ;; Tracked objects:
 20628 ;;		On entry : 0/0
 20629 ;;		On exit  : 0/0
 20630 ;;		Unchanged: 0/0
 20631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20632 ;;      Params:         4       0       0       0       0       0       0
 20633 ;;      Locals:         2       0       0       0       0       0       0
 20634 ;;      Temps:          0       0       0       0       0       0       0
 20635 ;;      Totals:         6       0       0       0       0       0       0
 20636 ;;Total ram usage:        6 bytes
 20637 ;; Hardware stack levels used: 1
 20638 ;; This function calls:
 20639 ;;		Nothing
 20640 ;; This function is called by:
 20641 ;;		i2_XF_pushEvent
 20642 ;; This function uses a non-reentrant model
 20643 ;;
 20644                           
 20645                           	psect	text87
 20646  005C4E                     __ptext87:
 20647                           	callstack 0
 20648  005C4E                     i2___awmod:
 20649                           	callstack 15
 20650  005C4E  0E00               	movlw	0
 20651  005C50  6E06               	movwf	i2___awmod@sign^0,c
 20652  005C52  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 20653  005C54  EF30  F02E         	goto	i2u533_40
 20654  005C58  EF2E  F02E         	goto	i2u533_41
 20655  005C5C                     i2u533_41:
 20656  005C5C  EF36  F02E         	goto	i2l7496
 20657  005C60                     i2u533_40:
 20658  005C60  6C01               	negf	i2___awmod@dividend^0,c
 20659  005C62  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20660  005C64  B0D8               	btfsc	status,0,c
 20661  005C66  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20662  005C68  0E01               	movlw	1
 20663  005C6A  6E06               	movwf	i2___awmod@sign^0,c
 20664  005C6C                     i2l7496:
 20665  005C6C  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 20666  005C6E  EF3D  F02E         	goto	i2u534_40
 20667  005C72  EF3B  F02E         	goto	i2u534_41
 20668  005C76                     i2u534_41:
 20669  005C76  EF41  F02E         	goto	i2l7500
 20670  005C7A                     i2u534_40:
 20671  005C7A  6C03               	negf	i2___awmod@divisor^0,c
 20672  005C7C  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 20673  005C7E  B0D8               	btfsc	status,0,c
 20674  005C80  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 20675  005C82                     i2l7500:
 20676  005C82  5003               	movf	i2___awmod@divisor^0,w,c
 20677  005C84  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 20678  005C86  B4D8               	btfsc	status,2,c
 20679  005C88  EF48  F02E         	goto	i2u535_41
 20680  005C8C  EF4A  F02E         	goto	i2u535_40
 20681  005C90                     i2u535_41:
 20682  005C90  EF6E  F02E         	goto	i2l7516
 20683  005C94                     i2u535_40:
 20684  005C94  0E01               	movlw	1
 20685  005C96  6E05               	movwf	i2___awmod@counter^0,c
 20686  005C98  EF52  F02E         	goto	i2l7506
 20687  005C9C                     i2l7504:
 20688  005C9C  90D8               	bcf	status,0,c
 20689  005C9E  3603               	rlcf	i2___awmod@divisor^0,f,c
 20690  005CA0  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 20691  005CA2  2A05               	incf	i2___awmod@counter^0,f,c
 20692  005CA4                     i2l7506:
 20693  005CA4  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 20694  005CA6  EF57  F02E         	goto	i2u536_41
 20695  005CAA  EF59  F02E         	goto	i2u536_40
 20696  005CAE                     i2u536_41:
 20697  005CAE  EF4E  F02E         	goto	i2l7504
 20698  005CB2                     i2u536_40:
 20699  005CB2                     i2l7508:
 20700  005CB2  5003               	movf	i2___awmod@divisor^0,w,c
 20701  005CB4  5C01               	subwf	i2___awmod@dividend^0,w,c
 20702  005CB6  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20703  005CB8  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 20704  005CBA  A0D8               	btfss	status,0,c
 20705  005CBC  EF62  F02E         	goto	i2u537_41
 20706  005CC0  EF64  F02E         	goto	i2u537_40
 20707  005CC4                     i2u537_41:
 20708  005CC4  EF68  F02E         	goto	i2l7512
 20709  005CC8                     i2u537_40:
 20710  005CC8  5003               	movf	i2___awmod@divisor^0,w,c
 20711  005CCA  5E01               	subwf	i2___awmod@dividend^0,f,c
 20712  005CCC  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20713  005CCE  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 20714  005CD0                     i2l7512:
 20715  005CD0  90D8               	bcf	status,0,c
 20716  005CD2  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 20717  005CD4  3203               	rrcf	i2___awmod@divisor^0,f,c
 20718  005CD6  2E05               	decfsz	i2___awmod@counter^0,f,c
 20719  005CD8  EF59  F02E         	goto	i2l7508
 20720  005CDC                     i2l7516:
 20721  005CDC  5006               	movf	i2___awmod@sign^0,w,c
 20722  005CDE  B4D8               	btfsc	status,2,c
 20723  005CE0  EF74  F02E         	goto	i2u538_41
 20724  005CE4  EF76  F02E         	goto	i2u538_40
 20725  005CE8                     i2u538_41:
 20726  005CE8  EF7A  F02E         	goto	i2l7520
 20727  005CEC                     i2u538_40:
 20728  005CEC  6C01               	negf	i2___awmod@dividend^0,c
 20729  005CEE  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20730  005CF0  B0D8               	btfsc	status,0,c
 20731  005CF2  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20732  005CF4                     i2l7520:
 20733  005CF4  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 20734  005CF8  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 20735  005CFC  0012               	return		;funcret
 20736  005CFE                     __end_ofi2___awmod:
 20737                           	callstack 0
 20738                           
 20739 ;; *************** function _XF_unscheduleTimer *****************
 20740 ;; Defined at:
 20741 ;;		line 125 in file "xf/xf.c"
 20742 ;; Parameters:    Size  Location     Type
 20743 ;;  id              1    wreg     unsigned char 
 20744 ;;  inISR           1    1[COMRAM] _Bool 
 20745 ;; Auto vars:     Size  Location     Type
 20746 ;;  id              1    2[COMRAM] unsigned char 
 20747 ;; Return value:  Size  Location     Type
 20748 ;;                  1    wreg      void 
 20749 ;; Registers used:
 20750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20751 ;; Tracked objects:
 20752 ;;		On entry : 0/0
 20753 ;;		On exit  : 0/0
 20754 ;;		Unchanged: 0/0
 20755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20756 ;;      Params:         1       0       0       0       0       0       0
 20757 ;;      Locals:         1       0       0       0       0       0       0
 20758 ;;      Temps:          0       0       0       0       0       0       0
 20759 ;;      Totals:         2       0       0       0       0       0       0
 20760 ;;Total ram usage:        2 bytes
 20761 ;; Hardware stack levels used: 1
 20762 ;; Hardware stack levels required when called: 1
 20763 ;; This function calls:
 20764 ;;		i2_ENTERCRITICAL
 20765 ;;		i2_LEAVECRITICAL
 20766 ;; This function is called by:
 20767 ;;		_XF_decrementAndQueueTimers
 20768 ;; This function uses a non-reentrant model
 20769 ;;
 20770                           
 20771                           	psect	text88
 20772  0064C6                     __ptext88:
 20773                           	callstack 0
 20774  0064C6                     _XF_unscheduleTimer:
 20775                           	callstack 14
 20776                           
 20777                           ;incstack = 0
 20778                           ;XF_unscheduleTimer@id stored from wreg
 20779  0064C6  6E03               	movwf	XF_unscheduleTimer@id^0,c
 20780  0064C8                     
 20781                           ;xf/xf.c: 125: void XF_unscheduleTimer(TimerID id, _Bool inISR);xf/xf.c: 126: {;xf/xf.c:
      +                           127:     ENTERCRITICAL(inISR);
 20782  0064C8  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20783  0064CA  EC95  F033         	call	i2_ENTERCRITICAL
 20784  0064CE                     
 20785                           ;xf/xf.c: 128:     theXF.timerList[id].tm = 0;
 20786  0064CE  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20787  0064D0  0D03               	mullw	3
 20788  0064D2  0EB5               	movlw	low _theXF
 20789  0064D4  24F3               	addwf	243,w,c
 20790  0064D6  6ED9               	movwf	fsr2l,c
 20791  0064D8  0E00               	movlw	high _theXF
 20792  0064DA  20F4               	addwfc	prodh,w,c
 20793  0064DC  6EDA               	movwf	fsr2h,c
 20794  0064DE  0E00               	movlw	0
 20795  0064E0  6EDE               	movwf	postinc2,c
 20796  0064E2  0E00               	movlw	0
 20797  0064E4  6EDD               	movwf	postdec2,c
 20798  0064E6                     
 20799                           ;xf/xf.c: 129:     theXF.timerList[id].ev = NULLEVENT;
 20800  0064E6  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20801  0064E8  0D03               	mullw	3
 20802  0064EA  0EB7               	movlw	low (_theXF+2)
 20803  0064EC  24F3               	addwf	243,w,c
 20804  0064EE  6ED9               	movwf	fsr2l,c
 20805  0064F0  0E00               	movlw	high (_theXF+2)
 20806  0064F2  20F4               	addwfc	prodh,w,c
 20807  0064F4  6EDA               	movwf	fsr2h,c
 20808  0064F6  0E00               	movlw	0
 20809  0064F8  6EDF               	movwf	indf2,c
 20810                           
 20811                           ;xf/xf.c: 130:     LEAVECRITICAL(inISR);
 20812  0064FA  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20813  0064FC  EC8A  F033         	call	i2_LEAVECRITICAL
 20814  006500  0012               	return		;funcret
 20815  006502                     __end_of_XF_unscheduleTimer:
 20816                           	callstack 0
 20817                           
 20818 ;; *************** function i2_LEAVECRITICAL *****************
 20819 ;; Defined at:
 20820 ;;		line 186 in file "xf/xf.c"
 20821 ;; Parameters:    Size  Location     Type
 20822 ;;  inISR           1    wreg     _Bool 
 20823 ;; Auto vars:     Size  Location     Type
 20824 ;;  inISR           1    0[COMRAM] _Bool 
 20825 ;; Return value:  Size  Location     Type
 20826 ;;                  1    wreg      void 
 20827 ;; Registers used:
 20828 ;;		wreg, status,2
 20829 ;; Tracked objects:
 20830 ;;		On entry : 0/0
 20831 ;;		On exit  : 0/0
 20832 ;;		Unchanged: 0/0
 20833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20834 ;;      Params:         0       0       0       0       0       0       0
 20835 ;;      Locals:         1       0       0       0       0       0       0
 20836 ;;      Temps:          0       0       0       0       0       0       0
 20837 ;;      Totals:         1       0       0       0       0       0       0
 20838 ;;Total ram usage:        1 bytes
 20839 ;; Hardware stack levels used: 1
 20840 ;; This function calls:
 20841 ;;		Nothing
 20842 ;; This function is called by:
 20843 ;;		_XF_unscheduleTimer
 20844 ;;		i2_XF_pushEvent
 20845 ;; This function uses a non-reentrant model
 20846 ;;
 20847                           
 20848                           	psect	text89
 20849  006714                     __ptext89:
 20850                           	callstack 0
 20851  006714                     i2_LEAVECRITICAL:
 20852                           	callstack 15
 20853                           
 20854                           ;incstack = 0
 20855                           ;i2LEAVECRITICAL@inISR stored from wreg
 20856  006714  6E01               	movwf	i2LEAVECRITICAL@inISR^0,c
 20857  006716                     
 20858                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 20859  006716  5001               	movf	i2LEAVECRITICAL@inISR^0,w,c
 20860  006718  A4D8               	btfss	status,2,c
 20861  00671A  EF91  F033         	goto	i2u532_41
 20862  00671E  EF93  F033         	goto	i2u532_40
 20863  006722                     i2u532_41:
 20864  006722  EF94  F033         	goto	i2l707
 20865  006726                     i2u532_40:
 20866  006726                     
 20867                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 20868  006726  8EF2               	bsf	4082,7,c	;volatile
 20869  006728                     i2l707:
 20870  006728  0012               	return		;funcret
 20871  00672A                     __end_ofi2_LEAVECRITICAL:
 20872                           	callstack 0
 20873                           
 20874 ;; *************** function i2_ENTERCRITICAL *****************
 20875 ;; Defined at:
 20876 ;;		line 172 in file "xf/xf.c"
 20877 ;; Parameters:    Size  Location     Type
 20878 ;;  inISR           1    wreg     _Bool 
 20879 ;; Auto vars:     Size  Location     Type
 20880 ;;  inISR           1    0[COMRAM] _Bool 
 20881 ;; Return value:  Size  Location     Type
 20882 ;;                  1    wreg      void 
 20883 ;; Registers used:
 20884 ;;		wreg, status,2
 20885 ;; Tracked objects:
 20886 ;;		On entry : 0/0
 20887 ;;		On exit  : 0/0
 20888 ;;		Unchanged: 0/0
 20889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20890 ;;      Params:         0       0       0       0       0       0       0
 20891 ;;      Locals:         1       0       0       0       0       0       0
 20892 ;;      Temps:          0       0       0       0       0       0       0
 20893 ;;      Totals:         1       0       0       0       0       0       0
 20894 ;;Total ram usage:        1 bytes
 20895 ;; Hardware stack levels used: 1
 20896 ;; This function calls:
 20897 ;;		Nothing
 20898 ;; This function is called by:
 20899 ;;		_XF_unscheduleTimer
 20900 ;;		i2_XF_pushEvent
 20901 ;; This function uses a non-reentrant model
 20902 ;;
 20903                           
 20904                           	psect	text90
 20905  00672A                     __ptext90:
 20906                           	callstack 0
 20907  00672A                     i2_ENTERCRITICAL:
 20908                           	callstack 15
 20909                           
 20910                           ;incstack = 0
 20911                           ;i2ENTERCRITICAL@inISR stored from wreg
 20912  00672A  6E01               	movwf	i2ENTERCRITICAL@inISR^0,c
 20913  00672C                     
 20914                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 20915  00672C  5001               	movf	i2ENTERCRITICAL@inISR^0,w,c
 20916  00672E  A4D8               	btfss	status,2,c
 20917  006730  EF9C  F033         	goto	i2u531_41
 20918  006734  EF9E  F033         	goto	i2u531_40
 20919  006738                     i2u531_41:
 20920  006738  EF9F  F033         	goto	i2l703
 20921  00673C                     i2u531_40:
 20922  00673C                     
 20923                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 20924  00673C  9EF2               	bcf	4082,7,c	;volatile
 20925  00673E                     i2l703:
 20926  00673E  0012               	return		;funcret
 20927  006740                     __end_ofi2_ENTERCRITICAL:
 20928                           	callstack 0
 20929                           
 20930                           	psect	rparam
 20931  0000                     
 20932                           	psect	temp
 20933  00004E                     btemp:
 20934                           	callstack 0
 20935  00004E                     	ds	1
 20936  0000                     int$flags	set	btemp
 20937  0000                     wtemp8	set	btemp+1
 20938  0000                     ttemp5	set	btemp+1
 20939  0000                     ttemp6	set	btemp+4
 20940  0000                     ttemp7	set	btemp+8
 20941                           
 20942                           	psect	idloc
 20943                           
 20944                           ;Config register IDLOC0 @ 0x200000
 20945                           ;	unspecified, using default values
 20946  200000                     	org	2097152
 20947  200000  FF                 	db	255
 20948                           
 20949                           ;Config register IDLOC1 @ 0x200001
 20950                           ;	unspecified, using default values
 20951  200001                     	org	2097153
 20952  200001  FF                 	db	255
 20953                           
 20954                           ;Config register IDLOC2 @ 0x200002
 20955                           ;	unspecified, using default values
 20956  200002                     	org	2097154
 20957  200002  FF                 	db	255
 20958                           
 20959                           ;Config register IDLOC3 @ 0x200003
 20960                           ;	unspecified, using default values
 20961  200003                     	org	2097155
 20962  200003  FF                 	db	255
 20963                           
 20964                           ;Config register IDLOC4 @ 0x200004
 20965                           ;	unspecified, using default values
 20966  200004                     	org	2097156
 20967  200004  FF                 	db	255
 20968                           
 20969                           ;Config register IDLOC5 @ 0x200005
 20970                           ;	unspecified, using default values
 20971  200005                     	org	2097157
 20972  200005  FF                 	db	255
 20973                           
 20974                           ;Config register IDLOC6 @ 0x200006
 20975                           ;	unspecified, using default values
 20976  200006                     	org	2097158
 20977  200006  FF                 	db	255
 20978                           
 20979                           ;Config register IDLOC7 @ 0x200007
 20980                           ;	unspecified, using default values
 20981  200007                     	org	2097159
 20982  200007  FF                 	db	255
 20983                           
 20984                           	psect	config
 20985                           
 20986                           ; Padding undefined space
 20987  300000                     	org	3145728
 20988  300000  FF                 	db	255
 20989                           
 20990                           ;Config register CONFIG1H @ 0x300001
 20991                           ;	Oscillator Selection bits
 20992                           ;	FOSC = INTIO67, Internal oscillator block
 20993                           ;	4X PLL Enable
 20994                           ;	PLLCFG = ON, Oscillator multiplied by 4
 20995                           ;	Primary clock enable bit
 20996                           ;	PRICLKEN = ON, Primary clock is always enabled
 20997                           ;	Fail-Safe Clock Monitor Enable bit
 20998                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 20999                           ;	Internal/External Oscillator Switchover bit
 21000                           ;	IESO = OFF, Oscillator Switchover mode disabled
 21001  300001                     	org	3145729
 21002  300001  38                 	db	56
 21003                           
 21004                           ;Config register CONFIG2L @ 0x300002
 21005                           ;	Power-up Timer Enable bit
 21006                           ;	PWRTEN = OFF, Power up timer disabled
 21007                           ;	Brown-out Reset Enable bits
 21008                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 21009                           ;	Brown Out Reset Voltage bits
 21010                           ;	BORV = 190, VBOR set to 1.90 V nominal
 21011  300002                     	org	3145730
 21012  300002  1F                 	db	31
 21013                           
 21014                           ;Config register CONFIG2H @ 0x300003
 21015                           ;	Watchdog Timer Enable bits
 21016                           ;	WDTEN = SWON, WDT is controlled by SWDTEN bit of the WDTCON register
 21017                           ;	Watchdog Timer Postscale Select bits
 21018                           ;	WDTPS = 32768, 1:32768
 21019  300003                     	org	3145731
 21020  300003  3E                 	db	62
 21021                           
 21022                           ; Padding undefined space
 21023  300004                     	org	3145732
 21024  300004  FF                 	db	255
 21025                           
 21026                           ;Config register CONFIG3H @ 0x300005
 21027                           ;	CCP2 MUX bit
 21028                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 21029                           ;	PORTB A/D Enable bit
 21030                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 21031                           ;	P3A/CCP3 Mux bit
 21032                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 21033                           ;	HFINTOSC Fast Start-up
 21034                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 21035                           ;	Timer3 Clock input mux bit
 21036                           ;	T3CMX = PORTC0, T3CKI is on RC0
 21037                           ;	ECCP2 B output mux bit
 21038                           ;	P2BMX = PORTB5, P2B is on RB5
 21039                           ;	MCLR Pin Enable bit
 21040                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 21041  300005                     	org	3145733
 21042  300005  BD                 	db	189
 21043                           
 21044                           ;Config register CONFIG4L @ 0x300006
 21045                           ;	Stack Full/Underflow Reset Enable bit
 21046                           ;	STVREN = ON, Stack full/underflow will cause Reset
 21047                           ;	Single-Supply ICSP Enable bit
 21048                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 21049                           ;	Extended Instruction Set Enable bit
 21050                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 21051                           ;	Background Debug
 21052                           ;	DEBUG = 0x1, unprogrammed default
 21053  300006                     	org	3145734
 21054  300006  85                 	db	133
 21055                           
 21056                           ; Padding undefined space
 21057  300007                     	org	3145735
 21058  300007  FF                 	db	255
 21059                           
 21060                           ;Config register CONFIG5L @ 0x300008
 21061                           ;	Code Protection Block 0
 21062                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 21063                           ;	Code Protection Block 1
 21064                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 21065                           ;	Code Protection Block 2
 21066                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 21067                           ;	Code Protection Block 3
 21068                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 21069  300008                     	org	3145736
 21070  300008  0F                 	db	15
 21071                           
 21072                           ;Config register CONFIG5H @ 0x300009
 21073                           ;	Boot Block Code Protection bit
 21074                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 21075                           ;	Data EEPROM Code Protection bit
 21076                           ;	CPD = OFF, Data EEPROM not code-protected
 21077  300009                     	org	3145737
 21078  300009  C0                 	db	192
 21079                           
 21080                           ;Config register CONFIG6L @ 0x30000A
 21081                           ;	Write Protection Block 0
 21082                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 21083                           ;	Write Protection Block 1
 21084                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 21085                           ;	Write Protection Block 2
 21086                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 21087                           ;	Write Protection Block 3
 21088                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 21089  30000A                     	org	3145738
 21090  30000A  0F                 	db	15
 21091                           
 21092                           ;Config register CONFIG6H @ 0x30000B
 21093                           ;	Configuration Register Write Protection bit
 21094                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 21095                           ;	Boot Block Write Protection bit
 21096                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 21097                           ;	Data EEPROM Write Protection bit
 21098                           ;	WRTD = OFF, Data EEPROM not write-protected
 21099  30000B                     	org	3145739
 21100  30000B  E0                 	db	224
 21101                           
 21102                           ;Config register CONFIG7L @ 0x30000C
 21103                           ;	Table Read Protection Block 0
 21104                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 21105                           ;	Table Read Protection Block 1
 21106                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 21107                           ;	Table Read Protection Block 2
 21108                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 21109                           ;	Table Read Protection Block 3
 21110                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 21111  30000C                     	org	3145740
 21112  30000C  0F                 	db	15
 21113                           
 21114                           ;Config register CONFIG7H @ 0x30000D
 21115                           ;	Boot Block Table Read Protection bit
 21116                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 21117  30000D                     	org	3145741
 21118  30000D  40                 	db	64
 21119                           tosu	equ	0xFFF
 21120                           tosh	equ	0xFFE
 21121                           tosl	equ	0xFFD
 21122                           stkptr	equ	0xFFC
 21123                           pclatu	equ	0xFFB
 21124                           pclath	equ	0xFFA
 21125                           pcl	equ	0xFF9
 21126                           tblptru	equ	0xFF8
 21127                           tblptrh	equ	0xFF7
 21128                           tblptrl	equ	0xFF6
 21129                           tablat	equ	0xFF5
 21130                           prodh	equ	0xFF4
 21131                           prodl	equ	0xFF3
 21132                           indf0	equ	0xFEF
 21133                           postinc0	equ	0xFEE
 21134                           postdec0	equ	0xFED
 21135                           preinc0	equ	0xFEC
 21136                           plusw0	equ	0xFEB
 21137                           fsr0h	equ	0xFEA
 21138                           fsr0l	equ	0xFE9
 21139                           wreg	equ	0xFE8
 21140                           indf1	equ	0xFE7
 21141                           postinc1	equ	0xFE6
 21142                           postdec1	equ	0xFE5
 21143                           preinc1	equ	0xFE4
 21144                           plusw1	equ	0xFE3
 21145                           fsr1h	equ	0xFE2
 21146                           fsr1l	equ	0xFE1
 21147                           bsr	equ	0xFE0
 21148                           indf2	equ	0xFDF
 21149                           postinc2	equ	0xFDE
 21150                           postdec2	equ	0xFDD
 21151                           preinc2	equ	0xFDC
 21152                           plusw2	equ	0xFDB
 21153                           fsr2h	equ	0xFDA
 21154                           fsr2l	equ	0xFD9
 21155                           status	equ	0xFD8

Data Sizes:
    Strings     124
    Constant    1867
    Data        0
    BSS         300
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      77
    BANK0           160     85     160
    BANK1           256      1     219
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    g1.font.bitmap	PTR const unsigned char  size(2) Largest target is 0
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    g1.font.descriptor	PTR const struct . size(2) Largest target is 0
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    g1.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.font	PTR struct . size(2) Largest target is 0
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.text	PTR const unsigned char  size(2) Largest target is 0
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    g1.fpPress	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 228
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[6]), STR_11(CODE[11]), STR_10(CODE[11]), 
		 -> STR_9(CODE[8]), STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[218]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 228
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[6]), STR_11(CODE[11]), STR_10(CODE[11]), 
		 -> STR_9(CODE[8]), STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[218]), STR_1(CODE[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 228
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[218]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 228
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[218]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S5258_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 228
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[218]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 228
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[218]), 

    levelController@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    levelController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    levelController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    levelController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    levelController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    levelController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    levelController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    levelController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    levelController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    levelController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    levelController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    levelController@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    backlightController@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    backlightController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    backlightController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    backlightController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    backlightController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    backlightController@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    checkCollision@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    checkCollision@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    checkCollision@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    checkCollision@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    checkCollision@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    checkCollision@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    mooveBall@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    mooveBall@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    mooveBall@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    mooveBall@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    mooveBall@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    mooveBall@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    moovePaddle2@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle2@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    moovePaddle2@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle2@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    moovePaddle2@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle2@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    moovePaddle2@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle2@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    moovePaddle2@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle2@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle2@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    moovePaddle2@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    moovePaddle1@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle1@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    moovePaddle1@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle1@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    moovePaddle1@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle1@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    moovePaddle1@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle1@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    moovePaddle1@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle1@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle1@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    moovePaddle1@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    gameControllerController@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    gameControllerController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    gameControllerController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    gameControllerController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    gameControllerController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    gameControllerController@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    gameControllerSM@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    gameControllerSM@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    gameControllerSM@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    gameControllerSM@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    gameControllerSM@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerSM@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerSM@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    gameControllerSM@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    gameControllerInit@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    displayController@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    displayController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    displayController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    displayController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    displayController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    displayController@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    displaySM@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    displayInit@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    touchScreenController@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    touchScreenSM@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    sleepInit@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    LCD_Bitmap@colorTablePtr	PTR unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    LCD_Bitmap@bmpPtr	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    LCD_Bitmap@strPtr	PTR struct . size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    RGB2LCD@colorTableEntry	PTR unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    LCD_DrawText@font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_DrawText@font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_DrawText@font	PTR const struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_DrawText@msg	PTR const unsigned char  size(2) Largest target is 228
		 -> g1.str(BANK1[2]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[6]), STR_11(CODE[11]), STR_10(CODE[11]), STR_9(CODE[8]), 
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), g1(BANK1[218]), STR_1(CODE[10]), 

    LCD_InSlider@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InSlider@slider	PTR struct . size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    LCD_InButton@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_InButton@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    LCD_InButton@button	PTR struct . size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    LCD_ButtonDraw@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonDraw@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonDraw@bmpPtr	PTR struct . size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    LCD_ButtonDraw@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonDraw@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    LCD_ButtonDraw@button	PTR struct . size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    LCD_ButtonUpdate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonUpdate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    LCD_ButtonUpdate@button	PTR struct . size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    LCD_ButtonCreate@fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonCreate@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonCreate@font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@textOrBmp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    LCD_ButtonCreate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    LCD_ButtonCreate@button	PTR struct . size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    LCD_SliderDraw@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderDraw@slider	PTR struct . size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    LCD_SliderUpdate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderUpdate@slider	PTR struct . size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    LCD_SliderCreate@fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider	PTR struct . size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Menu_endGame@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_endGame@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_endGame@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_endGame@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_endGame@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_endGame@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Menu_inGameDraw@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_inGameDraw@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Menu_parametersDraw@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_parametersDraw@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Menu_welcomeDraw@g.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    Menu_welcomeDraw@g	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    GameParameters_setY@s.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setY@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setY@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setY@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setY@s	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    GameParameters_setX@s.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setX@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setX@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setX@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setX@s	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    GameParameters_resetPos@s.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_resetPos@s	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    GameParameters_setPlayer@s.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setLevel@s.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setLevel@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setLevel@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setLevel@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setLevel@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setLevel@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setLevel@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setLevel@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setLevel@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setLevel@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setLevel@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setLevel@s	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    GameParameters_setBackLight@s.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_setBackLight@s	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    GameParameters_init@s.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_init@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_init@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_init@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_init@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    GameParameters_init@s	PTR struct GameParameters size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Score_draw@s	PTR struct Score size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Score_init@s	PTR struct Score size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    g1.sldLevel.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S135$fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.sldBackLight.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    g1.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    g1.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    g1.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    S108$fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    S108$text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    g1.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[2]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), 

    S99$bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    arialNarrow_12ptFontInfo.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    S99$descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    arialNarrow_12ptFontInfo.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    Paddle_draw@p	PTR struct Paddle size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Paddle_addX@p	PTR struct Paddle size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Paddle_init@p	PTR struct Paddle size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Ball_draw@b	PTR struct Ball size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Ball_Update@b	PTR struct Ball size(2) Largest target is 228
		 -> g1(BANK1[218]), 

    Ball_init@b	PTR struct Ball size(2) Largest target is 228
		 -> g1(BANK1[218]), 


Critical Paths under _main in COMRAM

    _gameControllerInit->_gameControllerController
    _XF_init->___wmul
    _LCD_Init->_LCD_Lowlevel_Init
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _gameControllerSM->_gameControllerController
    _gameControllerController->_LCD_SliderUpdate
    _moovePaddle2->_Paddle_addX
    _moovePaddle1->_Paddle_addX
    _mooveBall->_checkCollision
    _checkCollision->_XF_pushEvent
    _XF_pushEvent->___awmod
    _levelController->_GameParameters_setLevel
    _backlightController->_GameParameters_setBackLight
    _XF_scheduleTimer->_ENTERCRITICAL
    _XF_scheduleTimer->_LEAVECRITICAL
    _GameParameters_init->_LCD_ButtonCreate
    _Menu_welcomeDraw->_LCD_DrawText
    _Menu_parametersDraw->_LCD_SliderDraw
    _LCD_SliderDraw->_LCD_SliderUpdate
    _LCD_SliderUpdate->___lwdiv
    _Menu_endGame->_LCD_DrawText
    _LCD_ButtonDraw->_LCD_DrawText
    _LCD_ButtonUpdate->_LCD_DrawRect
    _LCD_Bitmap->___lwdiv
    ___lwdiv->___wmul
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_DrawText->___wmul
    ___wmul->___awdiv
    _Paddle_draw->_LCD_DrawRect
    _Ball_draw->_LCD_DrawRect
    _XF_popEvent->___awmod

Critical Paths under _isr in COMRAM

    _isr->_XF_decrementAndQueueTimers
    _XF_decrementAndQueueTimers->i2_XF_pushEvent
    i2_XF_pushEvent->i2___awmod
    i2_XF_pushEvent->i2___wmul
    _XF_unscheduleTimer->i2_ENTERCRITICAL
    _XF_unscheduleTimer->i2_LEAVECRITICAL

Critical Paths under _main in BANK0

    _Factory_init->_sleepInit
    _sleepInit->_displayInit
    _displayInit->_displayController
    _Factory_exec->_touchScreenSM
    _touchScreenSM->_touchScreenController
    _touchScreenController->_sprintf
    _displaySM->_displayController
    _displayController->_Menu_endGame
    _displayController->_Menu_parametersDraw
    _displayController->_Menu_welcomeDraw
    _Menu_welcomeDraw->_LCD_ButtonDraw
    _Menu_parametersDraw->_LCD_ButtonDraw
    _Menu_endGame->_LCD_ButtonDraw
    _LCD_ButtonDraw->_LCD_Bitmap
    _Menu_inGameDraw->_Score_draw
    _Score_draw->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Factory_exec

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  726310
                       _Factory_exec
                       _Factory_init
 ---------------------------------------------------------------------------------
 (1) _Factory_init                                         2     2      0  337886
                                             71 BANK0      2     2      0
                _GameParameters_init
                       _LCD_DrawText
                           _LCD_Fill
                           _LCD_Init
                            _XF_init
                          _sleepInit
 ---------------------------------------------------------------------------------
 (2) _sleepInit                                            2     0      2  309378
                                             69 BANK0      2     0      2
                        _displayInit
                 _gameControllerInit
                    _sleepController
                    _touchScreenInit
 ---------------------------------------------------------------------------------
 (3) _touchScreenInit                                      0     0      0       0
                        _configTouch
 ---------------------------------------------------------------------------------
 (3) _sleepController                                      2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _gameControllerInit                                   2     0      2   57864
                                             59 COMRAM     2     0      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (3) _displayInit                                          2     0      2  251362
                                             67 BANK0      2     0      2
                  _displayController
 ---------------------------------------------------------------------------------
 (2) _XF_init                                              2     2      0    3031
                                             31 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      90
                                             22 COMRAM     2     2      0
                  _LCD_Lowlevel_Init
 ---------------------------------------------------------------------------------
 (3) _LCD_Lowlevel_Init                                    5     5      0      60
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Factory_exec                                         1     1      0  388424
                                              0 BANK1      1     1      0
                        _XF_popEvent
                          _displaySM
                   _gameControllerSM
                            _sleepSM
                      _touchScreenSM
 ---------------------------------------------------------------------------------
 (2) _touchScreenSM                                        5     3      2   29890
                                             80 BANK0      5     3      2
              _touchScreenController
 ---------------------------------------------------------------------------------
 (3) _touchScreenController                               32    30      2   29614
                                             48 BANK0     32    30      2
                _GameParameters_setX
                _GameParameters_setY
                       _LCD_DrawText
                   _XF_scheduleTimer
                            ___fldiv
                            ___fltol
                           ___xxtofl
                      _configMeasure
                        _configTouch
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _configTouch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _configMeasure                                        1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     566
                                             17 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             56 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2003
                                             31 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setY                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setX                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sleepSM                                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _gameControllerSM                                     5     3      2   60781
                                             59 COMRAM     5     3      2
                   _XF_scheduleTimer
           _gameControllerController
 ---------------------------------------------------------------------------------
 (4) _gameControllerController                             5     2      3   57743
                                             54 COMRAM     5     2      3
                _GameParameters_init
            _GameParameters_resetPos
                       _LCD_InButton
                       _LCD_InSlider
                   _LCD_SliderUpdate
                       _XF_pushEvent
                   _XF_scheduleTimer
                _backlightController
                    _levelController
                          _mooveBall
                       _moovePaddle1
                       _moovePaddle2
 ---------------------------------------------------------------------------------
 (5) _moovePaddle2                                         6     4      2    4107
                                             27 COMRAM     6     4      2
                        _Paddle_addX
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (5) _moovePaddle1                                         4     2      2    4920
                                             27 COMRAM     4     2      2
            _GameParameters_resetPos
                        _Paddle_addX
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _Paddle_addX                                         10     4      6    1452
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (6) _GameParameters_resetPos                              2     0      2     782
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _mooveBall                                            2     0      2    7632
                                             36 COMRAM     2     0      2
                        _Ball_Update
                       _XF_pushEvent
                     _checkCollision
 ---------------------------------------------------------------------------------
 (6) _checkCollision                                      30    28      2    4825
                                             26 COMRAM    10     8      2
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _XF_pushEvent                                         3     2      1    2379
                                             23 COMRAM     3     2      1
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _Ball_Update                                          6     4      2     276
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _levelController                                      4     2      2     971
                                             21 COMRAM     4     2      2
            _GameParameters_setLevel
 ---------------------------------------------------------------------------------
 (6) _GameParameters_setLevel                              4     0      4     602
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _backlightController                                  4     2      2    3552
                                             23 COMRAM     4     2      2
        _GameParameters_setBackLight
 ---------------------------------------------------------------------------------
 (6) _GameParameters_setBackLight                          6     2      4    2284
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _XF_scheduleTimer                                     5     1      4    2514
                                             18 COMRAM     5     1      4
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (5) _LCD_InSlider                                        10     4      6     850
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _LCD_InButton                                        10     4      6    1660
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _GameParameters_init                                  2     0      2   11030
                                             42 COMRAM     2     0      2
                          _Ball_init
                   _LCD_ButtonCreate
                   _LCD_SliderCreate
                        _Paddle_init
                         _Score_init
 ---------------------------------------------------------------------------------
 (6) _Score_init                                           2     0      2     152
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Paddle_init                                          4     0      4     639
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderCreate                                    22     0     22    2662
                                             17 COMRAM    22     0     22
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonCreate                                    25     0     25    6625
                                             17 COMRAM    25     0     25
 ---------------------------------------------------------------------------------
 (6) _Ball_init                                            2     0      2     245
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _displaySM                                            5     3      2  296579
                                             67 BANK0      5     3      2
                    _Menu_inGameDraw
                  _displayController
 ---------------------------------------------------------------------------------
 (4) _displayController                                    5     2      3  251241
                                             62 BANK0      5     2      3
                          _Ball_draw
                       _Menu_endGame
                _Menu_parametersDraw
                   _Menu_welcomeDraw
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Menu_welcomeDraw                                     2     0      2   60086
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (5) _Menu_parametersDraw                                  2     0      2   85770
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
                     _LCD_SliderDraw
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderDraw                                      14    12      2   25560
                                             54 COMRAM    14    12      2
                       _LCD_DrawRect
                   _LCD_SliderUpdate
 ---------------------------------------------------------------------------------
 (5) _LCD_SliderUpdate                                    16    14      2   15206
                                             38 COMRAM    16    14      2
                       _LCD_DrawRect
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _Menu_endGame                                         4     2      2   60055
                                             65 COMRAM     2     2      0
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonDraw                                      32    30      2   45546
                                             28 BANK0     32    30      2
                         _LCD_Bitmap
                   _LCD_ButtonUpdate
                       _LCD_DrawRect
                       _LCD_DrawText
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _LCD_ButtonUpdate                                    18    16      2   11351
                                             36 COMRAM    18    16      2
                       _LCD_DrawRect
                           _LCD_Read
 ---------------------------------------------------------------------------------
 (8) _LCD_Read                                            10     6      4     548
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _LCD_Bitmap                                          38    32      6    7372
                                             38 COMRAM    10     4      6
                                              0 BANK0     28    28      0
                            _RGB2LCD
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     901
                                             31 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _RGB2LCD                                             14    12      2     499
                                             17 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (3) _Menu_inGameDraw                                      2     0      2   44659
                                             50 BANK0      2     0      2
                          _Ball_draw
                           _LCD_Fill
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Score_draw                                           2     0      2   23144
                                             48 BANK0      2     0      2
                       _LCD_DrawText
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             16    10      6    9137
                                             34 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             8     2      6    8111
                                             26 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           42    36      6    7638
                                             62 COMRAM     8     2      6
                                             18 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _dtoa                                                36    26     10    5863
                                             44 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (10) _pad                                                11     5      6    3597
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _fputs                                               7     3      4    1537
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2     183
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (10) ___aomod                                            18     2     16     613
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (10) ___aodiv                                            26    10     16     625
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawText                                        34    21     13   13641
                                             31 COMRAM    34    21     13
                            ___awdiv
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _strlen                                              4     2      2     400
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2802
                                             25 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1105
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _Paddle_draw                                          6     4      2   10398
                                             36 COMRAM     6     4      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_Fill                                             8     6      2     716
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Ball_draw                                           10     8      2   10187
                                             36 COMRAM    10     8      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawRect                                        19     8     11    9635
                                             17 COMRAM    19     8     11
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                          2     2      0    1016
                                             23 COMRAM     2     2      0
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     793
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _LEAVECRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ENTERCRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _isr                                                 4     4      0    2011
                                             13 COMRAM     4     4      0
         _XF_decrementAndQueueTimers
                     i2_XF_pushEvent
 ---------------------------------------------------------------------------------
 (15) _XF_decrementAndQueueTimers                          4     4      0    1408
                                              9 COMRAM     4     4      0
                 _XF_unscheduleTimer
                     i2_XF_pushEvent
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     419
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2_XF_pushEvent                                      3     2      1     603
                                              6 COMRAM     3     2      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
                          i2___awmod
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) _XF_unscheduleTimer                                  2     1      1     208
                                              1 COMRAM     2     1      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (16) i2_LEAVECRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_ENTERCRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Factory_exec
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _displaySM
       _Menu_inGameDraw
         _Ball_draw
           _LCD_DrawRect
         _LCD_Fill
         _Paddle_draw
           _LCD_DrawRect
         _Score_draw
           _LCD_DrawText
             ___awdiv
             ___wmul
               ___awdiv (ARG)
             _strlen
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                     _strlen
                 _fputc
       _displayController
         _Ball_draw
         _Menu_endGame
           _LCD_ButtonDraw
             _LCD_Bitmap
               _RGB2LCD
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
               ___wmul
             _LCD_ButtonUpdate
               _LCD_DrawRect
               _LCD_Read
             _LCD_DrawRect
             _LCD_DrawText
             ___awdiv
             _strlen
           _LCD_DrawText
           _LCD_Fill
         _Menu_parametersDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
           _LCD_SliderDraw
             _LCD_DrawRect
             _LCD_SliderUpdate
               _LCD_DrawRect
               ___lwdiv
               ___wmul
         _Menu_welcomeDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
         _Paddle_draw
         _Score_draw
     _gameControllerSM
       _XF_scheduleTimer
         _ENTERCRITICAL
         _LEAVECRITICAL
       _gameControllerController
         _GameParameters_init
           _Ball_init
           _LCD_ButtonCreate
           _LCD_SliderCreate
           _Paddle_init
           _Score_init
         _GameParameters_resetPos
         _LCD_InButton
         _LCD_InSlider
         _LCD_SliderUpdate
         _XF_pushEvent
           _ENTERCRITICAL
           _LEAVECRITICAL
           ___awmod
         _XF_scheduleTimer
         _backlightController
           _GameParameters_setBackLight
         _levelController
           _GameParameters_setLevel
         _mooveBall
           _Ball_Update
           _XF_pushEvent
           _checkCollision
             _XF_pushEvent
         _moovePaddle1
           _GameParameters_resetPos
           _Paddle_addX
           _XF_pushEvent
         _moovePaddle2
           _Paddle_addX
           _XF_pushEvent
     _sleepSM
     _touchScreenSM
       _touchScreenController
         _GameParameters_setX
         _GameParameters_setY
         _LCD_DrawText
         _XF_scheduleTimer
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _configMeasure
         _configTouch
         _sprintf
   _Factory_init
     _GameParameters_init
     _LCD_DrawText
     _LCD_Fill
     _LCD_Init
       _LCD_Lowlevel_Init
     _XF_init
       ___wmul
     _sleepInit
       _displayInit
         _displayController
       _gameControllerInit
         _gameControllerController
       _sleepController
       _touchScreenInit
         _configTouch

 _isr (ROOT)
   _XF_decrementAndQueueTimers
     _XF_unscheduleTimer
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
     i2_XF_pushEvent
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
       i2___awmod
       i2___wmul (ARG)
     i2___wmul
   i2_XF_pushEvent

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      1      DB       6       85.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     55      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4D       1       81.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C8       9        0.0%
DATA                 0      0     1C8      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 07 12:50:53 2021

                      _LCD_ButtonDraw 0FC6                           ?_LCD_Bitmap 0027  
                                   l5 619E                                     l8 5EB0  
                        ___fldiv@aexp 0038                          ___fldiv@bexp 0037  
                    _LCD_ButtonCreate 4D0A                          ___fldiv@sign 0030  
                        ?_displayInit 00A3                  __end_of_Factory_exec 62B8  
                __end_of_Factory_init 5986                                    l11 443A  
                                  l18 5AEC                                    l26 50CA  
                                  l29 46AE                                    _g1 0100  
                        ___awdiv@sign 0017               __end_of_sleepController 6538  
                   ??i2_ENTERCRITICAL 0001              __end_of_Menu_welcomeDraw 5F2A  
                 ___wmul@multiplicand 001C                  backlightController@g 0018  
                    _LCD_ButtonUpdate 38D4                         ?_LCD_InButton 0012  
                       ?_LCD_InSlider 0012                         ?_LCD_DrawRect 0012  
                       ?_LCD_DrawText 0020                                   l102 5984  
                                 l106 62B6                                   l115 6608  
                                 l300 30B4                                   l124 542E  
                                 l141 2DA4                                   l302 30DE  
                                 l222 3668                                   l161 66BA  
                                 l402 457C                                   l242 1988  
                                 l146 6440                                   l227 57C6  
                                 l323 2270                                   l235 4FE6  
                                 l155 6592                                   l332 0FC4  
                                 l180 5F28                                   l229 580A  
                                 l245 49FE                                   l149 66E6  
                                 l501 5E2E                                   l326 58C8  
                                 l254 3B08                                   l158 66D0  
                                 l263 14B2                                   l191 5B9C  
                                 l183 48F0                                   l415 65BA  
                                 l248 4E02                                   l512 3742  
                                 l521 6676                                   l505 366E  
                                 l186 630C                                   l274 51A8  
                                 l418 675C                                   l610 66A4  
                                 l291 2F4E                                   l267 5286  
                                 l507 3678                                   l427 6536  
                                 l284 2E8A                                   l508 3680  
                                 l294 2FAC                                   l286 2E96  
                                 l526 63AE                                   l518 38D2  
                                 l703 6712                                   l616 3F5A  
                                 l632 3FF8                                   l297 3046  
                                 l801 08CA                                   l810 09CE  
                                 l490 675A                                   l707 66FC  
                                 l547 668E                                   l396 5D9A  
                                 l565 4D08                                   l637 22D4  
                                 l830 1E0A                                   l638 2332  
                                 l750 6744                                   l639 2394  
                                 l681 6260                                   l673 5A3C  
                                 l658 2674                                   l579 4C08  
                                 l843 4EF8                                   l771 54EE  
                                 l836 1E26                                   l772 54F8  
                                 l677 6074                                   l781 65E2  
                                 l846 662E                                   l790 055E  
                                 l687 5F9C                                   l960 4180  
                                 l784 015A                                   l785 020E  
                                 l778 535C                                   l973 42E4  
                                 _GIE 007F97                                   _PR2 000FBB  
                                 _abs 6486                                   _pad 5688  
                                 _isr 0008                  configMeasure@channel 0012  
                     ??_ENTERCRITICAL 0012                          ___awmod@sign 0017  
                                 prod 000FF3                                   wreg 000FE8  
              __size_of_touchScreenSM 0094                       __end_of_RGB2LCD 58CA  
                        ___fltol@exp1 0042                      _touchScreenState 00DE  
                         _Ball_Update 5E30                         ??_Paddle_addX 0018  
                                ?_abs 0024                                  l1143 4B04  
                                l1090 5C4C                                  l1077 5686  
                                l1501 3B60                                  l1430 286E  
                                l1600 64BC                                  l1344 6010  
                                l1504 3CBC                                  l4000 5D66  
                                l1337 6008                                  l1441 292C  
                                l1433 2832                                  l1354 60D8  
                                l1442 291A                                  l4002 5D74  
                                l1603 64C4                                  l1347 60D0  
                                l1515 3C54                                  l1524 635E  
                                l1428 2A0E                                  l1508 3BF8  
                                l4004 5D80                                  l1615 55C2  
                                l1623 6484                                  l1551 56CC  
                                l1439 28B4                                  l1632 63FC  
                                l4200 345A                                  l4120 33C2  
                                l1626 675E                                  l1554 570E  
                                l1562 3180                                  l4210 3468  
                                l4202 345C                                  l4130 33D0  
                                l4122 33C6                                  l1556 5748  
                                l1564 3188                                  l4300 34FE  
                                l4220 347A                                  l4212 346E  
                                l4204 3462                                  l4140 33E4  
                                l4132 33D2                                  l4124 33CA  
                                l1582 33C0                                  l4310 3510  
                                l4302 3500                                  l4230 348C  
                                l4222 347C                                  l4214 3470  
                                l4206 3464                                  l4150 3400  
                                l4142 33F6                                  l4126 33CC  
                                l4400 35BE                                  l4320 3522  
                                l4312 3512                                  l4304 3502  
                                l4240 349A                                  l4232 348E  
                                l4224 3482                                  l4216 3476  
                                l4208 3466                                  l4160 3412  
                                l4152 3406                                  l4144 33FA  
                                l4128 33CE                                  l4410 35D4  
                                l4402 35C4                                  l4330 3538  
                                l4322 3528                                  l4314 3518  
                                l4306 3508                                  l4250 34A8  
                                l4242 349C                                  l4234 3490  
                                l4226 3484                                  l4218 3478  
                                l4170 3424                                  l4162 3414  
                                l4154 3408                                  l4146 33FC  
                                l4138 33D6                                  l1595 61F8  
                                l1596 6200                                  l4420 35E6  
                                l4412 35D6                                  l4404 35C6  
                                l4340 354A                                  l4332 353A  
                                l4324 352A                                  l4316 351A  
                                l4308 350A                                  l4260 34BA  
                                l4252 34AA                                  l4244 349E  
                                l4236 3496                                  l4228 348A  
                                l4180 3436                                  l4172 3426  
                                l4164 341A                                  l4156 340E  
                                l4148 33FE                                  l1589 3E70  
                                l4430 35F8                                  l4422 35EC  
                                l4414 35DC                                  l4406 35CC  
                                l4350 3560                                  l4342 3550  
                                l4334 3540                                  l4326 3530  
                                l4318 3520                                  l4270 34CC  
                                l4262 34BC                                  l4254 34B0  
                                l4246 34A4                                  l4238 3498  
                                l4190 3448                                  l4182 3438  
                                l4174 3428                                  l4166 341C  
                                l4158 3410                                  l4440 360A  
                                l4432 35FA                                  l4424 35EE  
                                l4416 35DE                                  l4408 35CE  
                                l4360 3572                                  l4352 3562  
                                l4344 3552                                  l4336 3542  
                                l4328 3532                                  l4280 34DA  
                                l4272 34CE                                  l4264 34BE  
                                l4256 34B2                                  l4248 34A6  
                                l4192 344E                                  l4184 343E  
                                l4176 342E                                  l4168 3422  
                                l4450 3620                                  l4442 3610  
                                l4434 3600                                  l4426 35F4  
                                l4418 35E4                                  l4370 3584  
                                l4362 3578                                  l4354 3568  
                                l4346 3558                                  l4338 3548  
                                l4290 34EC                                  l4282 34E0  
                                l4274 34D0                                  l4266 34C4  
                                l4258 34B8                                  l4194 3450  
                                l4186 3440                                  l4178 3430  
                                l4460 362E                                  l4452 3622  
                                l4444 3612                                  l4436 3602  
                                l4428 35F6                                  l4380 3596  
                                l4372 3586                                  l4364 357A  
                                l4356 356A                                  l4348 355A  
                                l4292 34EE                                  l4284 34E2  
                                l4276 34D2                                  l4268 34C6  
                                l4196 3452                                  l4188 3446  
                                l4470 3644                                  l4462 3634  
                                l4454 3624                                  l4446 3618  
                                l4438 3608                                  l4390 35AC  
                                l4382 359C                                  l4374 358C  
                                l4366 357C                                  l4358 3570  
                                l4294 34F4                                  l4286 34E4  
                                l4278 34D8                                  l4198 3454  
                                ?_pad 0022                                  l4480 3652  
                                l4472 3646                                  l4464 3636  
                                l4456 3626                                  l4448 361A  
                                l4392 35AE                                  l4384 359E  
                                l4376 358E                                  l4368 357E  
                                l4296 34F6                                  l4288 34E6  
                                l4490 3664                                  l4482 3658  
                                l4474 364C                                  l4466 363C  
                                l4458 362C                                  l4394 35B4  
                                l4386 35A4                                  l4378 3594  
                                l4298 34FC                                  l8100 408C  
                                l4492 3666                                  l4484 365A  
                                l4476 364E                                  l4468 363E  
                                l4396 35B6                                  l4388 35A6  
                                l8110 40F6                                  l8102 4094  
                                l4486 3660                                  l4478 3650  
                                l4398 35BC                                  l9000 21DC  
                                l8120 4140                                  l8112 4116  
                                l8104 40A8                                  l8200 3174  
                                l4488 3662                                  l9010 21F8  
                                l8122 4160                                  l8114 4118  
                                l8106 40B6                                  l8130 4194  
                                l8050 54FA                                  l8210 31BE  
                                l8202 3190                                  l8300 2E50  
                                l9012 21FC                                  l9020 2206  
                                l9004 21F0                                  l8116 412A  
                                l8108 40C8                                  l8140 4204  
                                l8132 41B4                                  l8060 557C  
                                l8052 550C                                  l8220 325C  
                                l8212 31C6                                  l8204 31A2  
                                l9100 0A46                                  l3980 5D0E  
                                l3972 5CFE                                  l7420 6502  
                                l8310 2E60                                  l8302 2E56  
                                l8070 63F0                                  l9014 21FE  
                                l9006 21F4                                  l9022 2208  
                                l8118 4130                                  l8150 427C  
                                l8142 420C                                  l8134 41B8  
                                l8126 4182                                  l8054 551E  
                                l8230 332E                                  l8214 31CC  
                                l8222 32C0                                  l8206 31B0  
                                l9110 0AF4                                  l9102 0A72  
                                l9030 14B4                                  l3990 5D30  
                                l3982 5D10                                  l3974 5D06  
                                l8400 2F40                                  l8320 2E76  
                                l8312 2E66                                  l8304 2E58  
                                l8064 63B0                                  l9024 2224  
                                l9016 2200                                  l9008 21F6  
                                l8152 428E                                  l8144 4220  
                                l8136 41C6                                  l8128 4186  
                                l8056 5528                                  l8080 6464  
                                l8240 3374                                  l8224 32DC  
                                l8232 333C                                  l8216 324E  
                                l8208 31B6                                  l9200 0BDC  
                                l9120 0B02                                  l9112 0AF6  
                                l9104 0AA8                                  l9032 14D2  
                                l9040 15EA                                  l3992 5D3C  
                                l3976 5D0A                                  l7424 6502  
                                l8410 2F7C                                  l8402 2F42  
                                l8330 2EA6                                  l8322 2E78  
                                l8314 2E68                                  l8306 2E5A  
                                l8250 2DA6                                  l8066 63BC  
                                l9026 223C                                  l8090 4030  
                                l8082 3FFA                                  l8146 422E  
                                l8154 4294                                  l8138 41E6  
                                l8058 5546                                  l8074 6442  
                                l8170 56C4                                  l8162 5688  
                                l8242 3380                                  l8234 334E  
                                l8226 32FA                                  l8218 3256  
                                l9210 0BE8                                  l9202 0BDE  
                                l9130 0B34                                  l9122 0B04  
                                l9114 0AF8                                  l9106 0ACA  
                                l9050 170E                                  l9042 1606  
                                l9034 1562                                  l3994 5D56  
                                l3978 5D0C                                  l8500 3034  
                                l8420 2F8A                                  l8412 2F7E  
                                l8404 2F5E                                  l8340 2EE2  
                                l8332 2EAA                                  l8324 2E7A  
                                l8316 2E6E                                  l8308 2E5E  
                                l8260 2DF2                                  l8252 2DAA  
                                l8068 63C0                                  l9028 2240  
                                l8092 403E                                  l8084 3FFE  
                                l8156 42A4                                  l8148 425C  
                                l8076 644E                                  l8180 5730  
                                l8172 56D8                                  l8164 5696  
                                l8244 3388                                  l8236 335C  
                                l8228 3314                                  l9300 0D86  
                                l9220 0C1A                                  l9212 0BEA  
                                l9204 0BE2                                  l9140 0B40  
                                l9132 0B36                                  l9124 0B10  
                                l9116 0AFA                                  l9108 0AF0  
                                l9060 17F8                                  l9052 172E  
                                l9044 1676                                  l9036 158A  
                                l3988 5D22                                  ?_isr 0001  
                                l8510 305A                                  l8502 3036  
                                l8430 2F9A                                  l8422 2F8C  
                                l8414 2F80                                  l8406 2F62  
                                l8350 2EF0                                  l8342 2EE4  
                                l8334 2EC0                                  l8326 2E7C  
                                l8318 2E70                                  l8270 2E22  
                                l8262 2E0A                                  l8254 2DAE  
                                l8094 405E                                  l8086 400C  
                                l8158 42C4                                  l8078 6460  
                                l8174 56EC                                  l8166 56AA  
                                l8238 3362                                  l8246 3398  
                                l8190 3100                                  l9310 0E04  
                                l9302 0D8A                                  l9230 0C36  
                                l9222 0C22                                  l9214 0BF2  
                                l9206 0BE4                                  l9150 0B4C  
                                l9142 0B42                                  l9134 0B38  
                                l9126 0B1C                                  l9118 0B00  
                                l9070 194C                                  l9054 174C  
                                l9062 1838                                  l9046 1696  
                                l9038 15AA                                  l8520 307A  
                                l8512 3070                                  l8504 3038  
                                l8440 2FC0                                  l8432 2F9C  
                                l8424 2F90                                  l8416 2F82  
                                l8408 2F78                                  l8360 2F00  
                                l8352 2EF2                                  l8344 2EE6  
                                l8336 2EC4                                  l8328 2E7E  
                                l8280 2E32                                  l8272 2E24  
                                l8264 2E1A                                  l8256 2DC4  
                                l8096 4062                                  l8088 402C  
                                l8184 6486                                  l8176 56F0  
                                l8168 56B8                                  l8192 312A  
                                l9320 0E5E                                  l9312 0E10  
                                l9304 0DA0                                  l9240 0C64  
                                l9232 0C3A                                  l9224 0C2E  
                                l9216 0BFA                                  l9208 0BE6  
                                l9160 0B72                                  l9152 0B66  
                                l9144 0B44                                  l9136 0B3A  
                                l9128 0B30                                  l8600 4482  
                                l9080 395C                                  l9072 38D4  
                                l9064 18C8                                  l9056 1768  
                                l9048 16D2                                  l9400 604C  
                                l8530 308A                                  l8522 3080  
                                l8514 3074                                  l8506 303A  
                                l8450 2FE0                                  l8442 2FD6  
                                l8434 2F9E                                  l8426 2F92  
                                l8418 2F88                                  l8370 2F10  
                                l8362 2F02                                  l8354 2EF6  
                                l8346 2EE8                                  l8290 2E42  
                                l8282 2E34                                  l8274 2E2A  
                                l8266 2E1E                                  l8338 2EDE  
                                l8258 2DDC                                  l8098 406E  
                                l8186 64A0                                  l8178 571C  
                                l8194 314A                                  l9322 0E60  
                                l9314 0E52                                  l9330 0E6C  
                                l9306 0DDE                                  l9250 0C86  
                                l9242 0C6C                                  l9234 0C3C  
                                l9226 0C32                                  l9170 0B7E  
                                l9162 0B74                                  l9154 0B6A  
                                l9146 0B48                                  l9138 0B3C  
                                l8610 4498                                  l8602 4488  
                                l9090 3A08                                  l9082 3978  
                                l9074 38E4                                  l9066 18F0  
                                l9058 17D8                                  l9410 606C  
                                l9402 6052                                  l8540 309A  
                                l8532 3090                                  l8524 3082  
                                l8516 3076                                  l8508 3056  
                                l8460 2FF0                                  l8452 2FE6  
                                l8444 2FDA                                  l8436 2FA0  
                                l8428 2F98                                  l8380 2F1E  
                                l8372 2F12                                  l8364 2F06  
                                l8356 2EF8                                  l8348 2EEE  
                                l8292 2E44                                  l8284 2E3A  
                                l8276 2E2C                                  l8268 2E20  
                                l9500 578E                                  l8700 55E2  
                                l8196 3158                                  l8188 30E0  
                                l9420 61B6                                  l9332 0E88  
                                l9324 0E64                                  l9316 0E58  
                                l9308 0DEA                                  l9252 0C88  
                                l9260 0C94                                  l9244 0C74  
                                l9236 0C3E                                  l9228 0C34  
                                l9340 0EC4                                  l9180 0BAC  
                                l9172 0B80                                  l9164 0B76  
                                l9156 0B6C                                  l9148 0B4A  
                                l9092 09D0                                  l8620 44A2  
                                l8612 449A                                  l8604 448A  
                                l9084 39A4                                  l9076 3914  
                                l9068 1910                                  l9412 6072  
                                l8550 30A8                                  l8542 30A0  
                                l8534 3092                                  l8526 3084  
                                l8518 3078                                  l8470 3000  
                                l8462 2FF6                                  l8454 2FE8  
                                l8446 2FDC                                  l8438 2FBC  
                                l8390 2F32                                  l8382 2F22  
                                l8374 2F14                                  l8366 2F08  
                                l8358 2EFE                                  l8294 2E4A  
                                l8286 2E3C                                  l8278 2E2E  
                                l9510 57A0                                  l9502 5790  
                                l8710 5616                                  l8702 55F0  
                                l8198 315A                                  l9422 61DC  
                                l9350 0F66                                  l9334 0E98  
                                l9326 0E66                                  l9318 0E5C  
                                l9270 0CCA                                  l9262 0CB6  
                                l9254 0C8C                                  l9246 0C80  
                                l9238 0C42                                  l9342 0F0C  
                                l9190 0BCE                                  l9182 0BAE  
                                l9174 0B82                                  l9166 0B7A  
                                l9158 0B6E                                  l9094 09D8  
                                l8630 44AC                                  l8622 44A4  
                                l8614 449C                                  l8606 4490  
                                l9086 39C4                                  l9078 3928  
                                l9430 6176                                  l9406 6058  
                                l8552 30C4                                  l8544 30A2  
                                l8536 3094                                  l8528 3088  
                                l8480 3012                                  l8472 3006  
                                l8464 2FF8                                  l8456 2FEA  
                                l8448 2FDE                                  l8392 2F34  
                                l8384 2F24                                  l8376 2F1A  
                                l8368 2F0E                                  l8296 2E4C  
                                l8288 2E3E                                  l9520 57B2  
                                l9512 57A6                                  l9504 5796  
                                l8720 5650                                  l8712 561E  
                                l8704 55F8                                  l9416 61A0  
                                l8800 6098                                  l9360 0F74  
                                l9352 0F6A                                  l9344 0F1A  
                                l9336 0EB8                                  l9328 0E68  
                                l9280 0D12                                  l9272 0CCE  
                                l9264 0CC2                                  l9256 0C8E  
                                l9248 0C84                                  l9192 0BD2  
                                l9184 0BB2                                  l9176 0BA6  
                                l9168 0B7C                                  l9096 0A06  
                                l8640 44F6                                  l8632 44AE  
                                l8624 44A6                                  l8616 449E  
                                l8608 4492                                  l8560 4442  
                                l9088 39D8                                  l9432 618A  
                                l9424 613E                                  l9600 4F96  
                                l9440 5A78                                  l9408 6068  
                                l8554 30C8                                  l8546 30A4  
                                l8538 3098                                  l8490 3022  
                                l8482 3014                                  l8474 3008  
                                l8466 2FFA                                  l8458 2FEE  
                                l8394 2F3A                                  l8386 2F2A  
                                l8378 2F1C                                  l8298 2E4E  
                                l9522 57B4                                  l9514 57A8  
                                l9506 5798                                  l8730 5676  
                                l8722 5658                                  l8714 5626  
                                l8706 55FC                                  l8810 3CBE  
                                l9418 61A8                                  l8802 60A6  
                                l9370 0FB0                                  l9362 0F76  
                                l9354 0F6C                                  l9346 0F54  
                                l9290 0D7A                                  l9282 0D1A  
                                l9274 0CD0                                  l9266 0CC6  
                                l9258 0C90                                  l9194 0BD4  
                                l9186 0BB4                                  l9178 0BAA  
                                l9098 0A26                                  l8650 451E  
                                l8642 44F8                                  l8634 44B4  
                                l8626 44A8                                  l8618 44A0  
                                l8570 4450                                  l8562 4444  
                                l9426 614E                                  l9602 4FAA  
                                l9450 5AD8                                  l9442 5A88  
                                l9610 640E                                  l9434 5E30  
                                l8740 5BB0                                  l8548 30A6  
                                l8492 3024                                  l8484 3016  
                                l8476 300A                                  l8468 2FFE  
                                l8396 2F3C                                  l8388 2F2C  
                                l9540 57F4                                  l9516 57AE  
                                l9508 579E                                  l8732 567E  
                                l8724 565A                                  l8716 5634  
                                l8708 5604                                  l8900 2068  
                                l8820 3D28                                  l8812 3CE2  
                                l8804 60BC                                  l9380 0FC0  
                                l9372 0FB4                                  l9356 0F6E  
                                l9348 0F62                                  l9364 0F7A  
                                l9292 0D7C                                  l9284 0D66  
                                l9276 0CD2                                  l9268 0CC8  
                                l9196 0BD6                                  l9188 0BB6  
                                l8660 4546                                  l8652 453C  
                                l8644 44FA                                  l8636 44B6  
                                l8628 44AA                                  l8580 4464  
                                l8572 4454                                  l8564 4446  
                                l8556 443C                                  l9620 0FC6  
                                l9428 6162                                  l9604 4FBE  
                                l9444 5A9C                                  l9436 5A3E  
                                l9612 642A                                  l9700 048E  
                                l9460 508E                                  l9452 4FE8  
                                l8750 5BE4                                  l8742 5BB8  
                                l8494 302A                                  l8486 301A  
                                l8478 300C                                  l8398 2F3E  
                                l9534 57D6                                  l9518 57B0  
                                l9470 5758                                  l8726 5660  
                                l8718 563A                                  l8910 2076  
                                l8902 206C                                  l8830 3DF2  
                                l8822 3D4C                                  l8814 3CF0  
                                l9550 6328                                  l8670 580C  
                                l8806 60C4                                  l9382 0FC2  
                                l9374 0FB6                                  l9366 0F96  
                                l9358 0F72                                  l9294 0D7E  
                                l9286 0D72                                  l9278 0CD6  
                                l9198 0BDA                                  l8662 4568  
                                l8654 453E                                  l8646 4500  
                                l8638 44D8                                  l8590 4472  
                                l8582 4466                                  l8574 4456  
                                l8566 444C                                  l8558 4440  
                                l9630 1058                                  l9622 0FD0  
                                l9606 4FD2                                  l9446 5AB4  
                                l9438 5A66                                  l9542 65E4  
                                l9614 6430                                  l9710 05D2  
                                l9702 04D4                                  l9462 50A2  
                                l9454 4FFA                                  l8680 6710  
                                l8760 5C20                                  l8752 5BEC  
                                l8744 5BBC                                  l8736 5B9E  
                                l8496 302C                                  l8488 301C  
                                l9536 57DA                                  l9528 57BE  
                                l9480 576A                                  l9472 575A  
                                l9464 574A                                  l8728 5666  
                                l8920 2082                                  l8912 2078  
                                l8904 206E                                  l8840 3E2E  
                                l8832 3E00                                  l8824 3D96  
                                l8816 3D00                                  l9552 6330  
                                l8672 5880                                  l8808 60CA  
                                l9376 0FB8                                  l9296 0D82  
                                l9288 0D76                                  l9368 0F9E  
                                l8664 4570                                  l8656 4540  
                                l8648 4502                                  l8592 4478  
                                l8584 446C                                  l8576 445C  
                                l8568 444E                                  l9640 1178  
                                l9632 1088                                  l9624 0FE0  
                                l9800 5EB2                                  l9560 4D1A  
                                l9448 5AC4                                  l9544 65F4  
                                l9608 63FE                                  l9616 66D2  
                                l9720 073A                                  l9712 0610  
                                l9704 051A                                  l9456 5050  
                                l8682 66EA                                  l8762 5C26  
                                l8754 5BF4                                  l8746 5BCA  
                                l8738 5BA2                                  l8498 3032  
                                l9538 57F0                                  l9490 577C  
                                l9482 576C                                  l9474 575C  
                                l9466 574E                                  l8930 2090  
                                l8922 2084                                  l8914 207C  
                                l8906 2070                                  l8834 3E14  
                                l8818 3D04                                  l9554 634C  
                                l9546 630E                                  l8674 58C0  
                                l9378 0FBA                                  l9298 0D84  
                                l8666 4574                                  l8658 4544  
                                l8594 447A                                  l8586 446E  
                                l8578 445E                                  l9650 1304  
                                l9642 11F4                                  l9634 1102  
                                l9626 1010                                  l9810 47D2  
                                l9802 5EBC                                  l9570 4D7E  
                                l9562 4D2E                                  l9394 6014  
                                l9730 0886                                  l9722 0780  
                                l9714 0666                                  l9706 0570  
                                l9618 656A                                  l9458 5064  
                       ??_Paddle_draw 0027                                  l8684 66FA  
                                l8756 5C02                                  l8764 5C2C  
                                l8748 5BD2                                  l9492 5782  
                                l9484 5772                                  l9476 5762  
                                l9468 5756                                  l8692 55C4  
                                l8940 20BC                                  l8932 2092  
                                l8924 2088                                  l8916 207E  
                                l8908 2074                                  l8860 1ED2  
                                l8852 1E28                                  l8828 3DCE  
                                l8844 3E3A                                  l9548 6320  
                                l8780 5FC8                                  l8772 5F9E  
                                l8596 447C                                  l8588 4470  
                                l9660 143E                                  l9652 135E  
                                l9644 126C                                  l9636 112C  
                                l9628 1024                                  l9820 4852  
                                l9812 47DC                                  l9804 5EF2  
                                l9580 4DE2                                  l9572 4D92  
                                l9564 4D42                                  l9396 601A  
                                l9740 0962                                  l9732 08DC  
                                l9724 07C6                                  l9716 06AC  
                                l9708 057A                                  l8678 6700  
                                l8766 5C3C                                  l8758 5C18  
                                l9750 4392                                  l9494 5784  
                                l9486 5774                                  l9478 5764  
                                l8694 55C8                                  l8686 660A  
                                l8950 20CA                                  l8942 20BE  
                                l8934 2094                                  l8926 208A  
                                l8918 2080                                  l8870 1F4C  
                                l8862 1EFA                                  l8854 1E34  
                                l8846 3E5E                                  l8838 3E20  
                                l8790 5FFC                                  l8782 5FD6  
                                l8774 5FA6                                  l8598 4480  
                                l9654 13BA                                  l9662 14A6  
                                l9638 1164                                  l9646 128C  
                                l9830 5AFA                                  l9670 4946  
                                l9822 4888                                  l9814 4812  
                                l9806 5F04                                  l9582 4DF2  
                                l9574 4DA6                                  l9566 4D56  
                                l9558 4D0A                                  l9590 4F32  
                                l9910 5F96                                  l9902 5F34  
                                l9398 6038                                  l9742 09B0  
                                l9726 07FA                                  l9718 06F4  
                                l9734 08E6                                  l8768 5C44  
                                l9496 5786                                  l9488 577A  
                                l9752 457E                                  l8696 55D6  
                                l8688 6626                                  l8960 20DA  
                                l8952 20CC                                  l8944 20C2  
                                l8936 20B6                                  l8928 208C  
                                l8880 203A                                  l8872 1F8E  
                                l8864 1F0A                                  l8856 1E82  
                                l8792 6002                                  l8784 5FDC  
                                l8776 5FB8                                  l9656 13BC  
                                l9648 12FC                                  l9832 5B0C  
                                l9672 497A                                  l9664 48F2  
                                l9824 48AA                                  l9816 4824  
                                l9808 5F16                                  l9576 4DBA  
                                l9568 4D6A                                  l9592 4F46  
                                l9584 4EFA                                  l9760 2A20  
                                l9840 51C8                                  l9904 5F54  
                                l9920 19EA                                  l9744 09BA  
                                l9736 0944                                  l9728 0840  
                                l9680 0102                                  l9746 42E6  
                                l9498 5788                                  l9754 45F6  
                                l8698 55DE                                  l8970 21A0  
                                l8962 2110                                  l8954 20CE  
                                l8946 20C4                                  l8938 20BA  
                                l8890 2046                                  l8882 203C  
                                l8874 1FE8                                  l8866 1F1C  
                                l8858 1ED0                                  l8786 5FF2  
                                l8778 5FC0                                  l8794 6076  
                                l9658 13F2                                  l9834 5B2C  
                                l9674 49B6                                  l9666 4902  
                                l9826 48BA                                  l9818 4842  
                                l9578 4DCE                                  l9594 4F5A  
                                l9586 4F0A                                  l9770 2A72  
                                l9762 2A22                                  l9850 5214  
                                l9906 5F84                                  l9930 1A92  
                                l9922 1A0E                                  l9914 198A  
                                l9738 094E                                  l9690 0340  
                                l9682 01B6                                  l9748 4376  
                                l9756 4612                                  l8980 21AE  
                                l8972 21A4                                  l8964 2118  
                                l8956 20D0                                  l8948 20C6  
                                l8892 2048                                  l8884 203E  
                                l8876 2034                                  l8868 1F2E  
                                l8788 5FFA                                  l8796 6088  
                                l9836 5B66                                  l9828 5AEE  
                                l9676 49F2                                  l9668 4932  
                                l9596 4F6E                                  l9588 4F1E  
                                l9780 2AD6                                  l9772 2A82  
                                l9764 2A36                                  l9844 51CE  
                                l9908 5F86                                  l9940 1B2E  
                                l9932 1AAA                                  l9924 1A32  
                                l9916 19AE                                  l9692 0388  
                                l9684 0266                                  l8974 21A6  
                                l8982 21B4                                  l8966 2168  
                                l8958 20D2                                  l8894 204C  
                                l8886 2040                                  l8878 2038  
                                l8798 6090                                  l9598 4F82  
                                l9790 2CE8                                  l9782 2B40  
                                l9774 2A92                                  l9766 2A4A  
                                l9758 2A10                                  l9862 5284  
                                l9838 51AA                                  l9950 1BCA  
                                l9942 1B52                                  l9934 1ACE  
                                l9926 1A4A                                  l9918 19D2  
                                l9694 03CE                                  l9686 02A4  
                                l9678 00B4                   __end_of_XF_popEvent 6262  
                                STR_1 7FBD                                  l8984 21B8  
                                l8976 21A8                                  l8968 2190  
                                l8896 204E                                  l8888 2044  
                                l9792 2D46                                  l9784 2BAA  
                                l9776 2AA6                                  l9768 2A5E  
                                l9856 523A                                  l9872 50F0  
                                l9960 1C72                                  l9952 1BEE  
                                l9944 1B6A                                  l9936 1AF2  
                                l9928 1A6E                                  l9696 0414  
                                l9688 02FA                                  STR_2 7FED  
                                STR_3 7FED                                  l8986 21BA  
                                l8994 21C4                                  l8978 21AC  
                                l8898 2050                                  l9794 535E  
                                l9786 2C14                                  l9778 2ABE  
                                l9890 51A6                                  l9866 50CC  
                                l9970 1D0E                                  l9962 1C8A  
                                l9954 1C12                                  l9946 1B8E  
                                l9938 1B0A                                  l9698 045A  
                                STR_4 7FB2                                  STR_5 7FD0  
                                l8988 21BC                                  l8996 21C6  
                                l9796 5388                                  l9788 2C7E  
                                l9884 515C                                  l9868 50EA  
                                l9980 1DAA                                  l9972 1D32  
                                l9964 1CAE                                  l9956 1C2A  
                                l9948 1BB2                                  STR_6 7FD9  
                                STR_7 7FFC                                  l8998 21D8  
                                l9798 53C4                                  l9878 5136  
                                l9894 5F2A                                  l9982 1DCE  
                                l9974 1D4A                                  l9966 1CD2  
                                l9958 1C4E                                  l9990 4E28  
                                STR_8 7FC7                                  STR_9 7FE2  
                                l9896 5F30                                  l9984 1DF2  
                                l9976 1D6E                                  l9968 1CEA  
                                l9992 4E4C                                  l9978 1D92  
                                l9986 1E0A                                  l9994 4E64  
                                l9996 4E88                                  l9988 4E04  
                                l9998 4EAC                         ??_Paddle_init 0016  
                                u2400 5D56                                  u2401 5D52  
                                u2410 5D9A                                  u2411 5D96  
                                u2550 33F6                                  u2551 33F2  
                                u6000 31A2                                  u6001 319E  
                                u6010 31B0                                  u6011 31AC  
                                u6100 2DC4                                  u6020 32DC  
                                u6101 2DC0                                  u6021 32D8  
                                u6110 2DF2                                  u6030 32FA  
                                u6111 2DEE                                  u6031 32F6  
                                u6120 2E1A                                  u6040 3314  
                                u7000 0666                                  u6121 2E16  
                                u6041 3310                                  u7001 0662  
                                u6130 2EC0                                  u6050 332E  
                                u7010 06AC                                  u6131 2EBC  
                                u6051 332A                                  u7011 06A8  
                                u6140 2EDA                                  u6300 5676  
                                u6060 333C                                  u7100 5236  
                                u7020 073A                                  u6141 2ED6  
                                u6301 5672                                  u6061 3338  
                                u6205 4528                                  u7101 5232  
                                u7021 0736                                  u6230 6710  
                                u6310 5BB0                                  u6150 2F78  
                                u6070 334E                                  u7110 5280  
                                u7030 07C6                                  u6231 670C  
                                u6311 5BAC                                  u6151 2F74  
                                u6071 334A                                  u6215 588A  
                                u7111 527C                                  u7031 07C2  
                                u6240 66FA                                  u6320 5BCA  
                                u6160 2FD6                                  u6080 335C  
                                u6400 6088                                  u7120 50EA  
                                u7200 1A0E                                  u7040 0840  
                                u8000 3B2A                                  u6241 66F6  
                                u6321 5BC6                                  u6161 2FD2  
                                u6081 3358                                  u6225 58A0  
                                u6401 6084                                  u7121 50E6  
                                u7201 1A0A                                  u7041 083C  
                                u8001 3B26                                  u6330 5BE4  
                                u6170 3070                                  u6250 55D6  
                                u6090 3374                                  u6410 60A6  
                                u7130 5132                                  u7210 1A32  
                                u7050 0944                                  u8010 3B86  
                                u6331 5BE0                                  u6171 306C  
                                u6251 55D2                                  u6091 3370  
                                u6411 60A2                                  u7131 512E  
                                u7211 1A2E                                  u7051 0940  
                                u8011 3B82                                  u6340 5C02  
                                u6180 30DE                                  u6260 55F0  
                                u6500 1F2E                                  u5700 550C  
                                u6420 60BC                                  u7140 5158  
                                u7300 1BEE                                  u7220 1A6E  
                                u7060 09B0                                  u8020 3BDC  
                                u8100 36B8                                  u6341 5BFE  
                                u6181 30DA                                  u6261 55EC  
                                u6501 1F2A                                  u5701 5508  
                                u6421 60B8                                  u7141 5154  
                                u7301 1BEA                                  u7221 1A6A  
                                u7061 09AC                                  u8021 3BD8  
                                u8101 36B4                                  u6350 5C18  
                                u6270 5616                                  u6510 1F86  
                                u5710 551E                                  u6430 3CE2  
                                u7070 5B2C                                  u7150 51A2  
                                u7310 1C12                                  u7230 1A92  
                                u8030 3C26                                  u8110 3750  
                                u6351 5C14                                  u6271 5612  
                                u5711 551A                                  u6431 3CDE  
                                u7071 5B28                                  u7151 519E  
                                u7311 1C0E                                  u7231 1A8E  
                                u8031 3C22                                  u8111 374C  
                                u6360 5C3C                                  u6280 5634  
                                u5800 408C                                  u5720 5546  
                                u6440 3D28                                  u6600 174C  
                                u8200 4C24                                  u7080 51C8  
                                u7160 5F54                                  u7400 1DCE  
                                u7320 1C4E                                  u7240 1ACE  
                                u8040 3C44                                  u8120 377A  
                                u6361 5C38                                  u6281 5630  
                                u5801 4088                                  u5721 5542  
                                u6441 3D24                                  u6601 1748  
                                u8201 4C20                                  u7081 51C4  
                                u7161 5F50                                  u7401 1DCA  
                                u7321 1C4A                                  u7241 1ACA  
                                u8041 3C40                                  u8121 3776  
                                u6290 5650                                  u6530 21A0  
                                u5810 40B6                                  u5730 557C  
                                u6450 3D4C                                  u6370 5FB8  
                                u6610 3978                                  u8210 4C36  
                                u7090 5210                                  u7170 5F96  
                                u7410 1DF2                                  u7330 1C72  
                                u7250 1AF2                                  u8050 3C54  
                                u8130 37D2                                  u6291 564C  
                                u6531 219C                                  u5811 40B2  
                                u5731 5578                                  u6451 3D48  
                                u6371 5FB4                                  u6195 44E2  
                                u6611 3974                                  u8211 4C32  
                                u7091 520C                                  u7171 5F92  
                                u7411 1DEE                                  u7331 1C6E  
                                u7251 1AEE                                  u8051 3C50  
                                u8131 37CE                                  u5740 63E0  
                                u6540 21D8                                  u6524 2184  
                                u5820 40F6                                  u5900 5696  
                                u6460 3DF2                                  u6380 5FD6  
                                u6700 0D12                                  u6620 3A08  
                                u8220 4C6A                                  u7340 1CAE  
                                u7260 1B2E                                  u7180 19AE  
                                u7420 4E28                                  u7500 5332  
                                u8300 3F42                                  u8060 3C62  
                                u8140 59BE                                  u6541 21D4  
                                u6525 217E                                  u6517 1F7C  
                                u5821 40F2                                  u5901 5692  
                                u6461 3DEE                                  u6381 5FD2  
                                u6701 0D0E                                  u6621 3A04  
                                u8221 4C66                                  u7341 1CAA  
                                u7261 1B2A                                  u7181 19AA  
                                u7421 4E24                                  u7501 532E  
                                u8301 3F3E                                  u8061 3C5E  
                                u8141 59BA                                  u5750 63F0  
                                u6550 21EC                                  u6470 1E7A  
                                u5830 4140                                  u5910 56B8  
                                u6390 5FF2                                  u6710 0DA0  
                                u6630 0A72                                  u8230 4C94  
                                u7350 1CD2                                  u7270 1B52  
                                u7190 19D2                                  u7430 4E4C  
                                u8310 3F80                                  u8070 3C9C  
                                u7510 6372                                  u8150 5A32  
                                u5751 63EC                                  u6551 21E8  
                                u5831 413C                                  u5911 56B4  
                                u6391 5FEE                                  u6711 0D9C  
                                u6631 0A6E                                  u8231 4C90  
                                u7351 1CCE                                  u7271 1B4E  
                                u7191 19CE                                  u7431 4E48  
                                u8311 3F7C                                  u8071 3C98  
                                u7511 636E                                  u8151 5A2E  
                                u8160 621E                                  u6560 2224  
                                u6480 1EFA                                  u5840 4194  
                                u5760 6484                                  u5920 570E  
                                u6720 0E88                                  u6640 0AA4  
                                u8240 4CAE                                  u7360 1D0E  
                                u7280 1B8E                                  u7440 4E88  
                                u6800 5050                                  u7600 23E0  
                                u8320 3F9A                                  u8080 3CAA  
                                u7520 6398                                  u8161 621A  
                                u6561 2220                                  u6481 1EF6  
                                u5841 4190                                  u5761 6480  
                                u5921 570A                                  u6721 0E84  
                                u6641 0AA0                                  u8241 4CAA  
                                u7361 1D0A                                  u7281 1B8A  
                                u7441 4E84                                  u6801 504C  
                                u7601 23DC                                  u8321 3F96  
                                u8081 3CA6                                  u7521 6394  
                                u6570 2260                                  u6490 1F0A  
                                u5770 400C                                  u5850 41C6  
                                u5930 571C                                  u6730 0E98  
                                u6650 0ACA                                  u7530 4B3C  
                                u8250 4CC8                                  u7370 1D32  
                                u7290 1BB2                                  u7450 4EAC  
                                u6810 508E                                  u7610 2450  
                                u8090 368E                                  u8170 5DB4  
                                u8330 627C                                  u5747 63D6  
                                u6491 1F06                                  u5771 4008  
                                u5851 41C2                                  u5931 5718  
                                u6731 0E94                                  u6651 0AC6  
                                u7531 4B38                                  u8251 4CC4  
                                u7371 1D2E                                  u7291 1BAE  
                                u7451 4EA8                                  u6811 508A  
                                u7611 244C                                  u8091 368A  
                                u8171 5DB0                                  u8331 6278  
                                u6820 57F0                                  u6580 2270  
                                u5780 403E                                  u5860 4204  
                                u5940 64A0                                  u6740 0F96  
                                u6660 0AEC                                  u7540 4B60  
                                u7380 1D6E                                  u6900 01B6  
                                u7460 544E                                  u7620 24C0  
                                u8260 3E9A                                  u7700 26A2  
                                u8180 5DDA                                  u6821 57EC  
                                u6581 226C                                  u6477 1E70  
                                u5781 403A                                  u5861 4200  
                                u5941 649C                                  u6741 0F92  
                                u6661 0AE8                                  u7541 4B5C  
                                u7381 1D6A                                  u6901 01B2  
                                u7461 544A                                  u7621 24BC  
                                u8261 3E96                                  u7701 269E  
                                u8181 5DD6                                  u6830 580A  
                                u5870 422E                                  u5950 3112  
                                u6750 0FB0                                  u6670 0C16  
                                u6590 14D2                                  u7550 4B84  
                                u7390 1D92                                  u6910 0266  
                                u7470 5472                                  u7630 24EC  
                                u8270 3EB0                                  u7710 26B2  
                                u8190 5DFE                                  u6831 5806  
                                u5791 4068                                  u5871 422A  
                                u5951 310C                                  u6751 0FAC  
                                u6671 0C12                                  u6591 14CE  
                                u7551 4B80                                  u7391 1D8E  
                                u6911 0262                                  u7471 546E  
                                u7631 24E8                                  u8271 3EAC  
                                u7711 26AE                                  u8191 5DFA  
                                u5880 425C                                  u5960 3114  
                                u6680 0C64                                  u7560 4BA8  
                                u6840 642A                                  u6760 604C  
                                u6920 02A4                                  u7480 54C2  
                                u7640 250E                                  u8280 3ED4  
                                u7800 287E                                  u7720 26F6  
                                u6577 2256                                  u5881 4258  
                                u6681 0C60                                  u7561 4BA4  
                                u6841 6426                                  u6761 6048  
                                u6921 02A0                                  u7481 54BE  
                                u7641 250A                                  u8281 3ED0  
                                u7801 287A                                  u7721 26F2  
                                u5890 42A4                                  u5970 312A  
                                u6770 61F8                                  u6690 0CB6  
                                u6850 1088                                  u6930 02FA  
                                u7490 52C6                                  u7650 2546  
                                u7570 22BE                                  u8290 3F0C  
                                u7810 2894                                  u7730 2708  
                                u5891 42A0                                  u5971 3126  
                                u6771 61F4                                  u6691 0CB2  
                                u6851 1084                                  u6931 02F6  
                                u7491 52C2                                  u7651 2542  
                                u7571 22BA                                  u8291 3F08  
                                u7811 2890                                  u7731 2704  
                                u8347 58DC                                  u5980 3158  
                                u6860 112C                                  u6780 5A78  
                                u6940 0340                                  u7660 257E  
                                u7580 231C                                  u7900 29CE  
                                u7820 28B2                                  u7740 2718  
                                u5981 3154                                  u6861 1128  
                                u6781 5A74                                  u6941 033C  
                                u7661 257A                                  u7581 2318  
                                u7901 29CA                                  u7821 28AE  
                                u7741 2714                                  u8357 33DC  
                                _RBPU 007F8F                                  u5990 3174  
                                u6870 1164                                  u6950 03CE  
                                u6790 4FFA                                  u7670 25B4  
                                u7590 237A                                  u7910 29FC  
                                u7830 28D2                                  u7750 2758  
                                u5991 3170                                  u6871 1160  
                                u6951 03CA                                  u6791 4FF6  
                                u7671 25B0                                  u7591 2376  
                                u7911 29F8                                  u7831 28CE  
                                u7751 2754                                  u8367 5D28  
                                u6880 13F2                                  u6960 045A  
                                u7680 2614                                  u7840 28E4  
                                u7760 2798                                  u7920 4A16  
                                u6881 13EE                                  u6961 0456  
                                u7681 2610                                  u7841 28E0  
                                u7761 2794                                  u7921 4A12  
                                u8377 5D6C                                  u6970 04D4  
                                u6890 0102                                  u7850 2912  
                                u7770 280E                                  u7690 2690  
                                u7930 4A4A                                  u6971 04D0  
                                u6891 00FE                                  u7851 290E  
                                u7771 280A                                  u7691 268C  
                                u6980 05D2                                  u7860 2928  
                                u7780 2830                                  u7940 4A78  
                                u6981 05CE                                  u7861 2924  
                                u7781 282C                                  u7941 4A74  
                                u6990 0610                                  u7870 293C  
                                u7790 285A                                  u7950 4A8C  
                                u6991 060C                                  u7871 2938  
                                u7791 2856                                  u7951 4A88  
                                u7935 4A40                                  u7880 2956  
                                u7960 4AB4                                  u7881 2952  
                                u7961 4AB0                                  u7890 299E  
                                u7970 4AD4                                  u7891 299A  
                                u7971 4AD0                                  u7980 4AE4  
                                u7981 4AE0                                  u7990 3B1C  
                                u7991 3B18                                  _WPUB 000F61  
                         displaySM@ev 00A7                           LCD_Bitmap@i 007A  
                                abs@a 0024                                  _dbuf 00E0  
                     ?_checkCollision 001B             __size_of_LCD_SliderCreate 00EE  
                                _main 6740                                  _dtoa 30E0  
                    _XF_scheduleTimer 5F2A                                  _prec 0049  
                                _nout 00DB                                  pad@i 0029  
                                pad@p 0026                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf1 000FE7  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 002B                                  fsr2l 000FD9  
                                btemp 004E                      Menu_inGameDraw@g 0092  
                      touchScreenSM@g 00B0                                  prodh 000FF4  
                                prodl 000FF3      __end_of_arialNarrow_12ptFontInfo 7F82  
                                start 00B0                           RGB2LCD@blue 001C  
              __end_of_LCD_ButtonDraw 14B4             __size_of_LCD_SliderUpdate 04D6  
                     ___fldiv@new_exp 0031                        _LCD_SliderDraw 48F2  
                  LCD_InSlider@slider 0012                       __end_of_XF_init 5A3E  
                        ___param_bank 000000                      _gameStateMachine 004D  
              LCD_ButtonCreate@height 0018                    XF_scheduleTimer@ev 0015  
                  XF_scheduleTimer@tm 0013                LCD_ButtonCreate@button 0028  
                               ??_abs 0026                                 ??_pad 0028  
                               ??_isr 000E                      __end_of_LCD_Fill 580C  
                      ??_LCD_InButton 0018                      __end_of_LCD_Init 366A  
                    __end_of_LCD_Read 457E                        ??_LCD_InSlider 0018  
                      ??_LCD_DrawRect 001D           LCD_SliderCreate@cursorWidth 0020  
                               l10000 4EC4                                 l10002 4ED8  
                               l10010 549E                                 l10012 54C2  
                               l10004 5430                                 l10020 52F4  
                               l10100 2398                                 l10014 65BC  
                               l10006 544E                                 l10022 5332  
                               l10110 245C                                 l10102 23E0  
                               l10030 6664                                 l10008 5472  
                               l10016 5288                                 l10120 24EC  
                               l10112 246C                                 l10104 23FC  
                               l10024 66BC                                 l10200 2774  
                               l10040 6670                                 l10032 6668  
                               l10018 52C6                                 l10130 2546  
                               l10122 24FC                                 l10114 2478  
                               l10106 2408                                 l10026 66A6  
                               l10050 6384                                 l10042 6672  
                               l10034 666A                                 l10060 4B0A  
                               l10140 25CC                                 l10132 255E  
                               l10124 250E                                 l10116 24C0  
                               l10108 2450                                 l10220 27F6  
                               l10212 27AC                                 l10204 2788  
                               l10300 4A54                                 l10052 6388  
                               l10044 6674                                 l10036 666C  
                               l10028 6656                                 l10070 4B60  
                               l10062 4B1A                                 l10142 2614  
                               l10134 257E                                 l10126 251A  
                               l10118 24DA                                 l10230 283C  
                               l10222 27FE                                 l10214 27C6  
                               l10206 2798                                 l10302 4A56  
                               l10054 6398                                 l10046 6362  
                               l10038 666E                                 l10080 4BBC  
                               l10072 4B70                                 l10064 4B2A  
                               l10144 262A                                 l10136 2596  
                               l10128 2526                                 l10240 2894  
                               l10232 285A                                 l10224 280E  
                               l10216 27D6                                 l10208 2798  
                               l10160 2692                                 l10304 4A66  
                               l10056 63AA                                 l10048 6372  
                               l10400 6750                                 l10074 4B84  
                               l10066 4B3C                                 l10058 4B06  
                               l10138 25B4                                 l10090 2272  
                               l10250 28D2                                 l10242 289A  
                               l10234 285C                                 l10226 2822  
                               l10218 27E6                                 l10162 26A2  
                               l10170 26CC                                 l10154 2676  
                               l10330 4AE4                                 l10314 4A90  
                               l10306 4A6A                                 l10410 368E  
                               l10402 6756                                 l10076 4B94  
                               l10068 4B4C                                 l10084 4BCC  
                               l10092 2276                                 l10148 2632  
                               l10260 293C                                 l10252 28D6  
                               l10244 28A4                                 l10236 286C  
                               l10228 2830                                 l10180 26F8  
                               l10172 26DC                                 l10164 26B2  
                               l10156 2682                                 l10332 4AF4  
                               l10324 4AB8                                 l10316 4A9A  
                               l10308 4A78                                 l10340 3B2A  
                               l10420 3750                                 l10412 36B8  
                               l10404 366A                                 l10502 622A  
                               l10078 4BA8                                 l10094 22BE  
                               l10270 299E                                 l10262 2948  
                               l10254 28E4                                 l10246 28B2  
                               l10238 287E                                 l10182 2708  
                               l10190 2732                                 l10174 26E2  
                               l10166 26C2                                 l10158 2690  
                               l10326 4AC4                                 l10318 4AA4  
                               l10350 3BA2                                 l10342 3B70  
                               l10430 37C0                                 l10422 377A  
                               l10414 36C0                                 l10406 3670  
                               l10504 623A                                 l10096 231C  
                               l10600 3EEC                                 l10280 29FC  
                               l10272 29B4                                 l10264 2956  
                               l10256 2912                                 l10248 28C4  
                               l10192 2742                                 l10184 2718  
                               l10176 26E8                                 l10168 26C4  
                               l10328 4AD4                                 l10360 3C2A  
                               l10352 3BAE                                 l10344 3B86  
                               l10336 3B0C                                 l10440 383A  
                               l10432 37C4                                 l10424 3782  
                               l10416 372A                                 l10408 367A  
                               l10520 5DC8                                 l10512 5DA0  
                               l10506 6258                                 l10098 237A  
                               l10602 3F0C                                 l10282 2A02  
                               l10274 29CE                                 l10266 2980  
                               l10194 2758                                 l10186 2728  
                               l10178 26F6                                 l10370 3C68  
                               l10362 3C36                                 l10354 3BE0  
                               l10338 3B1C                                 l10442 3858  
                               l10434 37D2                                 l10426 37A8  
                               l10418 373C                                 l10522 5DDA  
                               l10514 5DA4                                 l10508 625E  
                               l10540 4C12                                 l10620 3F88  
                               l10604 3F24                                 l10284 2A04  
                               l10276 29EA                                 l10268 2984  
                               l10196 2768                                 l10188 272A  
                               l10292 4A00                                 l10372 3C8C  
                               l10364 3C44                                 l10356 3BE2  
                               l10348 3B9A                                 l10436 37F0  
                               l10428 37BC                                 l10524 5DDE  
                               l10516 5DB4                                 l10532 5E02  
                               l10700 6294                                 l10460 598E  
                               l10390 62FA                                 l10382 62B8  
                               l10550 4C56                                 l10542 4C24  
                               l10622 3F9A                                 l10614 3F5E  
                               l10606 3F42                                 l10630 3FB6  
                               l10278 29EE                                 l10198 2770  
                               l10294 4A16                                 l10374 3C9C  
                               l10366 3C62                                 l10358 3BEE  
                               l10438 3826                                 l10446 38A6  
                               l10526 5DEA                                 l10518 5DB8  
                               l10702 62A6                                 l10462 599E  
                               l10454 5986                                 l10384 62C4  
                               l10552 4C6A                                 l10544 4C36  
                               l10624 3FA2                                 l10616 3F6E  
                               l10376 3CAA                                 l10368 3C64  
                               l10472 59C6                                 l10464 59A2  
                               l10392 6678                                 l10480 6594  
                               l10640 58D0                                 l10704 6740  
                               l10490 6204                                 l10386 62D6  
                               l10570 4CB6                                 l10562 4C9C  
                               l10554 4C6E                                 l10546 4C3A  
                               l10538 4C0E                                 l10618 3F80  
                               l10298 4A2A                                 l10378 3CAC  
                               l10474 5A12                                 l10466 59BE  
                               l10394 667E                                 l10482 659A  
                               l10650 5932                                 l10642 58EA  
                               l10492 6204                                 l10388 62E8  
                               l10564 4CAE                                 l10556 4C82  
                               l10548 4C46                                 l10900 38BC  
                               l10476 5A16                                 l10396 6690  
                               l10484 65A6                                 l10660 593E  
                               l10652 5934                                 l10644 58EE  
                               l10636 58CA                                 l10494 620A  
                               l10910 0EEE                                 l10558 4C94  
                               l10902 3FCA                                 l10590 3E9A  
                               l10478 5A32                                 l10398 6694  
                               l10486 65B2                                 l10670 594C  
                               l10662 5942                                 l10654 5936  
                               l10646 58FA                                 l10638 58CC  
                      ??_LCD_DrawText 002D                                 l10496 621E  
                               l10904 2646                                 l10592 3E9E  
                               l10584 3E74                                 l10488 65B6  
                               l10680 595E                                 l10672 5954  
                               l10664 5946                                 l10656 5938  
                               l10648 5930                                 l10498 6224  
                               l10906 4CE2                                 l10578 4CCC  
                               l10594 3EB0                                 l10586 3E78  
                               l10690 5976                                 l10682 5960  
                               l10674 5956                                 l10666 5948  
                               l10658 593A                                 l10908 4BE2  
                               l10596 3EB4                                 l10588 3E88  
                               l10692 6262                                 l10684 5962  
                               l10676 595A                                 l10668 594A  
                               l10598 3ED4                                 l10694 626C  
                               l10686 5966                                 l10678 595C  
                               l10696 627C                                 l10688 596A  
                               l10698 6282                                 l10896 6518  
                               l10898 5E18                         ___fltol@sign1 0041  
                     __end_of___aodiv 4182                                 ?_main 0001  
                               ?_dtoa 002D                       __end_of___aomod 42E6  
                     LCD_ButtonDraw@i 0099                       __end_of___fldiv 2A10  
                     __end_of___awdiv 5688                                 STR_10 7F9C  
                               STR_11 7FA7                                 STR_12 7FF6  
                               STR_13 7F8F                                 STR_14 7F82  
                               STR_15 7FEA                                 STR_16 7FF0  
                     __end_of___awmod 5C4E                                 _ANSB1 0079C9  
                               _ANSB2 0079CA                       __end_of___fltol 4B06  
                               _T0CON 000FD5                       ___awdiv@divisor 0014  
                               _LATB1 007C51                                 _LATC0 007C58  
                               _LATB2 007C52                                 _LATB3 007C53  
                               _LATC2 007C5A                                 _LATB4 007C54  
                               _LATC3 007C5B                                 _LATC4 007C5C  
                               _LATC5 007C5D                       __end_of___lwdiv 6012  
                     __end_of___lwmod 60DA                                 i2l703 673E  
                               i2l707 6728                                 i2l741 0056  
                               i2l745 009C                                 i2l690 6500  
                               i2l677 613C                                 i2l846 6654  
                               i2l699 47D0                       ___awdiv@counter 0016  
                               _PLLEN 007CDE                          vfpfcnvrt@fmt 0041  
                               _TMR0H 000FD7                                 _TMR0L 000FD6  
                               _PORTA 000F80                       ??_configMeasure 0012  
                               _TRISA 000F92                   LCD_Bitmap@bfOffBits 0060  
                        LCD_Fill@page 0018                                 _flags 004B  
                        displayInit@g 00A3                                 _fputc 54FA  
                               _theXF 00B5                                 _fputs 6442  
              LCD_ButtonDraw@tempChar 008A                   __size_of_LCD_Bitmap 05F6  
                               pad@fp 0022                                 _width 0047  
                               _putch 675E                                 dtoa@d 002F  
                               dtoa@i 0070                                 dtoa@n 0068  
                               dtoa@p 0062                                 dtoa@s 0066  
                               dtoa@w 0064                  __end_of_XF_pushEvent 6076  
                     __end_of_sleepSM 675E                          Paddle_addX@p 0012  
                               tablat 000FF5            ??_gameControllerController 003A  
                     touchScreenSM@ev 00B4                      __end_ofi2___wmul 6656  
                               plusw2 000FDB           ?_XF_decrementAndQueueTimers 0001  
                               ttemp5 004F                                 ttemp6 0052  
                               ttemp7 0056                                 status 000FD8  
                               wtemp8 004F                          Paddle_draw@p 0025  
                     __end_of_sprintf 6360                          RGB2LCD@color 001E  
                        RGB2LCD@green 001A                __end_of_LCD_SliderDraw 4A00  
                       ?_Menu_endGame 009C                          Paddle_init@p 0012  
            __size_of_touchScreenInit 000C               LCD_ButtonCreate@bgColor 001C  
                  __size_ofi2___awmod 00B0                   __end_of_Paddle_addX 50CC  
                     ?_LCD_ButtonDraw 007C                     ?_gameControllerSM 003C  
                 __end_of_Paddle_draw 46B0                         _touchScreenSM 5D9C  
                 __end_of_Paddle_init 5AEE                    __size_of_Ball_draw 0156  
                        LCD_Read@posX 0012                          LCD_Read@posY 0014  
                  __size_of_Ball_init 0062                       __initialization 6538  
                     _levelController 4E04                    ??_gameControllerSM 003E  
                        __end_of_main 6750                          __end_of_dtoa 33C2  
             LCD_ButtonCreate@fpPress 0022                touchScreenController@g 0090  
              touchScreenController@s 0098                      ?_sleepController 0001  
                    i2XF_pushEvent@ev 0008                                ??_main 0047  
                              ??_dtoa 0037          GameParameters_setLevel@value 0014  
                       __activetblptr 000002                             ??_RGB2LCD 0014  
                         _XF_popEvent 6202                                _ADCON0 000FC2  
                              _ADCON2 000FC0                      LCD_ButtonDraw@x1 008D  
                    LCD_ButtonDraw@x2 008F                      LCD_ButtonDraw@y1 0091  
                    LCD_ButtonDraw@y2 0093                                ?_fputc 0012  
                              ?_fputs 001B                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                _CCPR2L 000F67  
                    ___awdiv@dividend 0012               _GameParameters_setLevel 66D2  
                              ?_putch 0001                                _INT1IE 007F83  
                              _INT1IF 007F80                    LCD_DrawRect@colorH 0021  
                  LCD_DrawRect@colorL 0022               _GameParameters_resetPos 656A  
                              i2l1090 5CFC                                i2l7500 5C82  
                              i2l7510 5CC8                                i2l7502 5C94  
                              i2l7520 5CF4                                i2l7512 5CD0  
                              i2l7504 5C9C                                i2l7514 5CD6  
                              i2l7506 5CA4                                i2l7508 5CB2  
                              i2l7516 5CDC                                i2l7710 64C8  
                              i2l7518 5CEC                                i2l7480 672C  
                              i2l7712 64CE                                i2l7720 6100  
                              i2l7482 673C                                i2l7714 64E6  
                              i2l7490 5C52                                i2l7730 6130  
                              i2l7722 6114                                i2l7484 6716  
                              i2l7492 5C60                                i2l7732 6134  
                              i2l7724 611A                                i2l7716 60DC  
                              i2l7740 664C                                i2l7820 46E8  
                              i2l7812 46B0                                i2l7486 6726  
                              i2l7494 5C68                                i2l7734 613A  
                              i2l7718 60E2                                i2l7830 47B4  
                              i2l7822 4740                                i2l7496 5C6C  
                              i2l7488 5C4E                                i2l7728 6120  
                              i2l7824 477A                                i2l7840 0048  
                              i2l7832 001A                                i2l7498 5C7A  
                              i2l7738 6630                                i2l7826 4788  
                              i2l7818 46B8                                i2l7850 008E  
                              i2l7842 0064                                i2l7834 0028  
                              i2l7828 47B0                                i2l7852 0092  
                              i2l7844 0068                                i2l7836 0036  
                              i2l7854 0096                                i2l7838 0044  
                              i2l7846 0072                                i2l7856 009A  
                              i2l7848 0080                                _OSCCON 000FD3  
                           ??_XF_init 0020                                _TMR0IE 007F95  
                              _TMR0IF 007F92                                _TMR2IF 007CF1  
                      ??_Menu_endGame 0042                                _TRISB1 007C99  
                              _TRISC0 007CA0                                _TRISB2 007C9A  
                              _TRISC1 007CA1                                _TRISB3 007C9B  
                              _TRISC2 007CA2                                _TRISB4 007C9C  
                              _TRISC3 007CA3                                _TRISC4 007CA4  
                              _TRISC5 007CA5                      __end_of___xxtofl 3CBE  
                     ?_LCD_SliderDraw 0037                   i2XF_pushEvent@inISR 0007  
                LCD_DrawText@bg_color 002B                            _Score_draw 535E  
                          _Score_init 65E4                        ?_touchScreenSM 00B0  
                     i2_LEAVECRITICAL 6714                 __size_of_Factory_exec 0056  
               __size_of_Factory_init 00BC                          vfprintf@cfmt 0080  
                 LCD_Bitmap@jumpColor 0078                   LCD_Bitmap@jumpCount 0065  
                 _Menu_parametersDraw 47D2                  __size_of_configTouch 0022  
          __end_of_gameControllerInit 66A6                             ??___aodiv 0022  
                           ??___aomod 0022                                ___wmul 660A  
                           ??___fldiv 0028                             ??___awdiv 0016  
                           ??___awmod 0016                         LCD_Fill@color 0012  
                           ??___fltol 003D                LCD_ButtonUpdate@button 0025  
                           ??___lwdiv 0024                             ??___lwmod 0016  
          gameControllerController@ev 0039                  LCD_DrawText@fontByte 0037  
        __size_of_GameParameters_init 0396                                clear_0 653E  
                              clear_1 654A                                clear_2 6556  
        __size_of_GameParameters_setX 0016          __size_of_GameParameters_setY 0016  
                    ___awdiv@quotient 0018             LCD_ButtonCreate@textOrBmp 001E  
               _touchScreenController 366A                       ___awmod@divisor 0014  
                              isa$std 000001                       ___awmod@counter 0016  
                __size_of_displayInit 0018                                pad@buf 0024  
                              dtoa@fp 002D                                _strlen 63B0  
                       LCD_DrawRect@i 0023                         LCD_DrawRect@j 001D  
                              fputc@c 0012                                fputs@c 001F  
                              fputs@i 0020                                fputs@s 001B  
        ?_GameParameters_setBackLight 0012                         LCD_DrawText@i 003E  
                   __end_ofi2___awmod 5CFE                         LCD_DrawText@x 0040  
                       LCD_DrawText@y 003D                  LCD_DrawText@tempChar 003F  
                        __mediumconst 7836                                tblptrh 000FF7  
                           ??_sleepSM 0012                                tblptrl 000FF6  
                              tblptru 000FF8                     __end_of_Ball_draw 443C  
                   __end_of_Ball_init 61A0                  ?_Menu_parametersDraw 009C  
                              putch@c 0001                      __end_of_vfprintf 6202  
                      i2___awmod@sign 0006                             ??_sprintf 0047  
            __end_of_LCD_ButtonCreate 4E04                           _Paddle_addX 4FE8  
                        _Factory_exec 6262                          _Factory_init 58CA  
                         _Paddle_draw 457E                           _Paddle_init 5A3E  
                    XF_pushEvent@temp 001A                          ___xxtofl@arg 001C  
               LCD_SliderCreate@width 0016                          ___xxtofl@exp 001B  
                        ___xxtofl@val 0012                  __end_of_LCD_InButton 5288  
               LCD_SliderCreate@steps 0022              __end_of_LCD_ButtonUpdate 3B0A  
                          __accesstop 0060               __end_of__initialization 655C  
                           ?_LCD_Fill 0012                      _LCD_SliderCreate 4EFA  
                           ?_LCD_Init 0001                             ?_LCD_Read 0012  
                __end_of_LCD_InSlider 51AA               __end_of_levelController 4EFA  
                __end_of_LCD_DrawRect 30E0                  __end_of_LCD_DrawText 2272  
         __size_of_XF_unscheduleTimer 003C                       i2_ENTERCRITICAL 672A  
                       ___rparam_used 000001                            ___fltol@f1 0039  
                       LCD_Read@color 0018                      _LCD_SliderUpdate 14B4  
                  LEAVECRITICAL@inISR 0012                             LCD_Init@i 0018  
                      __pcstackCOMRAM 0001                          ??_LCD_Bitmap 002D  
                   ??_touchScreenInit 0012           __end_of_backlightController 1E28  
                       __end_of_fputc 55C4                         __end_of_fputs 6486  
                 gameControllerInit@g 003C            LCD_ButtonCreate@fpReleased 0024  
                       __end_of_putch 6760                     LCD_Bitmap@biWidth 0076  
                   ?_Menu_welcomeDraw 009C                  LCD_Bitmap@endOfImage 0064  
            __end_of_XF_scheduleTimer 5F9E                             ?i2___wmul 0001  
                  ??_Menu_welcomeDraw 0042                     LCD_Bitmap@curXPos 006F  
 __size_of_XF_decrementAndQueueTimers 0122                     LCD_Bitmap@curYPos 0067  
               __size_of_XF_pushEvent 0064             ??_GameParameters_setLevel 0016  
               ??_Menu_parametersDraw 0045         ??_GameParameters_setBackLight 0016  
                        Ball_Update@b 0012             ??_GameParameters_resetPos 0014  
             _arialNarrow_12ptBitmaps 7837                      ??_checkCollision 001D  
                  __size_of_displaySM 0100                 __end_of_LEAVECRITICAL 66FE  
                  LCD_DrawText@offset 0033                               ??_fputc 0016  
                             ??_fputs 001F                          ?_Ball_Update 0012  
                             ??_putch 0012      __end_of_gameControllerController 2676  
           gameControllerController@g 0037               __end_ofi2_LEAVECRITICAL 672A  
                      XF_pushEvent@ev 0019                            __pbssBANK0 00B5  
                          __pbssBANK1 0100                    __end_of_LCD_Bitmap 0FC6  
                          ??_LCD_Fill 0014                            ??_LCD_Init 0017  
                          ??_LCD_Read 0016                       ??_touchScreenSM 00B2  
            LCD_ButtonCreate@txtColor 001A                           ?_Score_draw 0090  
                         ?_Score_init 0012                    ENTERCRITICAL@inISR 0012  
            __size_of_Menu_inGameDraw 0056                           Score_draw@s 0090  
                         Score_init@s 0012                               ?___wmul 001A  
              ?_touchScreenController 0090                          _XF_pushEvent 6012  
                  __size_of_mooveBall 0028                    __size_of_sleepInit 0028  
                             ?_strlen 0012                  __end_of_Menu_endGame 5B9E  
                          ??i2___wmul 0005               __size_ofi2_XF_pushEvent 0064  
                             _RGB2LCD 580C                               _INTEDG1 007F8D  
                GameParameters_init@s 002B                             ?___xxtofl 0012  
                GameParameters_setX@s 0012                  GameParameters_setY@s 0012  
                  __size_of_vfpfcnvrt 01B4                 __end_of_ENTERCRITICAL 6714  
                       ?_moovePaddle1 001C                         ?_moovePaddle2 001C  
             __end_ofi2_ENTERCRITICAL 6740                      ??_LCD_ButtonDraw 007E  
                Menu_parametersDraw@g 009C   __end_of_arialNarrow_12ptDescriptors 7F7B  
         _arialNarrow_12ptDescriptors 7E5E                               _XF_init 5986  
                 LCD_ButtonDraw@xText 0095                      ?_levelController 0016  
                 LCD_ButtonDraw@yText 0097                   LCD_ButtonDraw@width 008B  
                             __Hparam 0000                               __Lparam 0000  
                             ___aodiv 3FFA                     __end_of_displaySM 4D0A  
                             ___aomod 4182                               ___fldiv 2676  
                             ___awdiv 55C4                               ___awmod 5B9E  
                             ___fltol 4A00                       __size_of___wmul 0026  
             LCD_ButtonUpdate@colorIn 002D                               ___lwdiv 5F9E  
                             ___lwmod 6076                             ?_vfprintf 007A  
                      LCD_Bitmap@newY 0073                        LCD_Bitmap@posX 0029  
                      LCD_Bitmap@posY 002B                        LCD_Fill@colorH 0014  
                      LCD_Fill@colorL 0015                               __pcinit 6538  
                      LCD_Fill@column 0016                               __ramtop 0600  
                             __ptext0 6740                               __ptext1 58CA  
                             __ptext2 6594                               __ptext3 6750  
                             __ptext4 6502                               __ptext5 6690  
                             __ptext6 6678                               __ptext7 5986  
                             __ptext8 33C2                               __ptext9 5CFE  
                     __size_of_strlen 004E             __size_of_gameControllerSM 0188  
                           _T2CONbits 000FBA                          __size_of_abs 0040  
                        __size_of_pad 00C2                          __size_of_isr 00A8  
                        ?_XF_popEvent 0001                            ??___xxtofl 0016  
                LCD_Bitmap@pixelCount 0075                   __size_of_Score_draw 00D2  
                    ___awmod@dividend 0012                   __size_of_Score_init 0026  
               LCD_DrawText@fontPixel 0038                               _sleepSM 675C  
               __end_of_configMeasure 63B0                 __size_of_LCD_InButton 00DE  
             XF_unscheduleTimer@inISR 0002                        ??_moovePaddle1 001E  
                      ??_moovePaddle2 001E                 __size_of_LCD_InSlider 00DE  
                   Menu_welcomeDraw@g 009C                 __size_of_LCD_DrawRect 033A  
                             _sprintf 630E                 __size_of_LCD_DrawText 044A  
                    ??_LCD_SliderDraw 0039                  end_of_initialization 655C  
                    ?i2_LEAVECRITICAL 0001                   _GameParameters_init 2A10  
                 _GameParameters_setX 66BC                   _GameParameters_setY 66A6  
                   __end_of_mooveBall 65E4                               fputc@fp 0014  
                       __Lmediumconst 7836                               fputs@fp 001D  
                      Paddle_addX@add 0016                   i2___wmul@multiplier 0001  
                   __end_of_sleepInit 65BC                   displayController@ev 00A0  
                   __end_of_vfpfcnvrt 3E72                            _sleepState 00DF  
                             postdec1 000FE5                               postdec2 000FDD  
                   _LCD_Lowlevel_Init 5CFE                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                          ??_vfprintf 0047     __size_of_gameControllerController 0404  
                ?_GameParameters_init 002B             ?_gameControllerController 0037  
                   ??_Menu_inGameDraw 0047                  ?_GameParameters_setX 0012  
                  ?_LCD_Lowlevel_Init 0001                  ?_GameParameters_setY 0012  
                             strlen@a 0014                               strlen@s 0012  
                        _LCD_InButton 51AA                             _PORTBbits 000F81  
            __end_of_LCD_SliderCreate 4FE8                LCD_SliderCreate@height 0018  
                        _LCD_InSlider 50CC                          _displayState 00DD  
                        _LCD_DrawRect 2DA6                          _LCD_DrawText 1E28  
                   XF_pushEvent@inISR 0018              __end_of_LCD_SliderUpdate 198A  
                    XF_popEvent@inISR 0019                LCD_SliderCreate@slider 0026  
                 ??_LCD_Lowlevel_Init 0012                         ___xxtofl@sign 001A  
                  _gameControllerInit 6690              __size_of_sleepController 0036  
                      Factory_exec@ev 01DA                           ___fldiv@grs 0033  
                         ___fldiv@rem 002C                             i2___awmod 5C4E  
                    ?i2_ENTERCRITICAL 0001                     ?_LCD_ButtonCreate 0012  
                        ?_Paddle_addX 0012                          ?_Paddle_draw 0025  
                           _Ball_draw 42E6                          ?_Paddle_init 0012  
                           _Ball_init 613E                   ?_gameControllerInit 003C  
                __size_of_Ball_Update 0082                    ??_LCD_ButtonCreate 002B  
                   ?_LCD_ButtonUpdate 0025                       _touchScreenInit 6750  
                   _displayController 4B06                           _CCP2CONbits 000F66  
                          displaySM@g 00A3                        LCD_Read@temp16 001A  
     __end_of_arialNarrow_12ptBitmaps 7E5E                RGB2LCD@colorTableEntry 0012  
                       ??_configTouch 0012                    ??_LCD_ButtonUpdate 0027  
                   __size_of_LCD_Fill 00C2                     __size_of_LCD_Init 02A8  
                   __size_of_LCD_Read 0142                    ?_displayController 009E  
                          RGB2LCD@red 0018             __end_of_LCD_Lowlevel_Init 5D9C  
                  LCD_Lowlevel_Init@i 0013                 LCD_ButtonCreate@fpOut 0026  
                   XF_scheduleTimer@i 0017                 LCD_ButtonCreate@index 002A  
               LCD_ButtonCreate@width 0016                         ??_displayInit 0047  
               __size_of_Menu_endGame 00B0                 ??_GameParameters_init 002D  
               ??_GameParameters_setX 0016                 ??_GameParameters_setY 0016  
                 ??_displayController 00A1                           vfpfcnvrt@ap 0043  
                         vfpfcnvrt@fp 003F                           vfpfcnvrt@ll 0072  
                      __end_of___wmul 6630                  ??_gameControllerInit 003E  
                  LCD_Bitmap@biHeight 006B                  XF_unscheduleTimer@id 0003  
                      i2_XF_pushEvent 60DA                      i2___wmul@product 0005  
                   ?_XF_scheduleTimer 0013                        __end_of_strlen 63FE  
                       XF_popEvent@ev 0018                   start_initialization 6538  
                   __size_ofi2___wmul 0026                    ??_XF_scheduleTimer 0017  
                         __end_of_abs 64C6                    LCD_InButton@button 0012  
                         __end_of_pad 574A                           __end_of_isr 00B0  
               XF_scheduleTimer@inISR 0016                            ?i2___awmod 0001  
                          ?_Ball_draw 0025                            ?_Ball_init 0012  
           __end_of_displayController 4C0A             __size_of_Menu_welcomeDraw 0078  
          __end_of_XF_unscheduleTimer 6502                          ??_Score_draw 0047  
                   LCD_DrawRect@color 001B                          _Menu_endGame 5AEE  
                        ??_Score_init 0014                     LCD_DrawRect@posX1 0012  
                   LCD_DrawRect@posX2 0016                     LCD_DrawRect@posY1 0014  
                   LCD_DrawRect@posY2 0018                    i2XF_pushEvent@temp 0009  
             ??_touchScreenController 0092                           vfprintf@fmt 007C  
                            ??___wmul 001E                  __end_of_moovePaddle1 54FA  
                __end_of_moovePaddle2 535E                   LCD_DrawText@yOffset 0035  
                 __end_of_configTouch 6678                __end_ofi2_XF_pushEvent 613E  
                 LCD_DrawText@posXEnd 003B                   LCD_DrawText@posYEnd 0039  
            _arialNarrow_12ptFontInfo 7F7B           __end_of_Menu_parametersDraw 48F2  
                            ??_strlen 0014                  LCD_SliderCreate@posX 0012  
                LCD_SliderCreate@posY 0014                      _gameControllerSM 3E72  
                 __end_of_displayInit 6690                             ___fldiv@a 0024  
                           ___fldiv@b 0020                              ?_RGB2LCD 0012  
        __size_of_backlightController 049E                           __pbssCOMRAM 0047  
              LCD_SliderUpdate@slider 0027                         Menu_endGame@g 009C  
         XF_decrementAndQueueTimers@i 000C                         __pcstackBANK0 0060  
                       __pcstackBANK1 01DA                    __end_of_Score_draw 5430  
                LCD_SliderDraw@slider 0037                    __end_of_Score_init 660A  
                    ___aodiv@dividend 0012                    gameControllerSM@ev 0040  
             __end_of_touchScreenInit 675C                  __size_of_XF_popEvent 0060  
                   __size_of___xxtofl 01B4                         moovePaddle1@g 001C  
                       moovePaddle2@g 001C                      LCD_InButton@posX 0014  
                    LCD_InButton@posY 0016                      LCD_Bitmap@bmpPtr 0027  
                   LCD_DrawText@align 0024                              ?_XF_init 0001  
                   LCD_DrawText@color 0029                     ??_sleepController 0012  
                    LCD_Bitmap@strPtr 0071          ??_XF_decrementAndQueueTimers 000A  
                   LCD_DrawText@width 0041                 __end_of_touchScreenSM 5E30  
             LCD_Bitmap@colorTablePtr 0069                  i2LEAVECRITICAL@inISR 0001  
                    LCD_SliderDraw@x1 003D                      LCD_SliderDraw@x2 003F  
                    LCD_SliderDraw@y1 0041                      LCD_SliderDraw@y2 0043  
          __size_of_LCD_Lowlevel_Init 009E                      ___lwdiv@dividend 0020  
                           _dtoa$5327 0060                             __pintcode 0008  
                       __pmediumconst 7836                              ?___aodiv 0012  
                            ?___aomod 0012                              ?___fldiv 0020  
                            ?___awdiv 0012                      ___aodiv@quotient 0024  
                            ?___awmod 0012                              ?___fltol 0039  
                            ?___lwdiv 0020                              ?___lwmod 0012  
              __size_of_LEAVECRITICAL 0016                       ?i2_XF_pushEvent 0007  
                           _displaySM 4C0A                     __size_of_vfprintf 0062  
            ?_GameParameters_setLevel 0012   __end_of_GameParameters_setBackLight 6442  
         _GameParameters_setBackLight 63FE              ?_GameParameters_resetPos 0012  
                          mooveBall@g 0025                              ?_sleepSM 0001  
                    levelController@g 0016                      ___lwdiv@quotient 0025  
         touchScreenController@valueX 00AE           touchScreenController@valueY 00AC  
                         ??i2___awmod 0005                              ?_sprintf 0082  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                      __size_of_putch 0002                           ??_Ball_draw 0027  
                         ??_Ball_init 0014            __size_of_displayController 0104  
                          sleepInit@g 00A5                              _LCD_Fill 574A  
                            _LCD_Init 33C2                              _LCD_Read 443C  
                      ___wmul@product 001E                  __size_of_Paddle_addX 00E4  
                __size_of_Paddle_draw 0132                  __size_of_Paddle_init 00B0  
                     _Menu_inGameDraw 62B8                  i2ENTERCRITICAL@inISR 0001  
                  LCD_SliderUpdate@x1 0035                    LCD_SliderUpdate@x2 002F  
                  LCD_SliderUpdate@y1 0031                    LCD_SliderUpdate@y2 0033  
                  displayController@g 009E               __size_of_checkCollision 091C  
                           _mooveBall 65BC                           _configTouch 6656  
                            i2u531_40 673C                              i2u531_41 6738  
                            i2u532_40 6726                              i2u532_41 6722  
                            i2u533_40 5C60                              i2u533_41 5C5C  
                            XF_init@i 0020                              i2u534_40 5C7A  
                            i2u534_41 5C76                              i2u535_40 5C94  
                            i2u535_41 5C90                              i2u536_40 5CB2  
                            i2u560_40 46E8                              i2u536_41 5CAE  
                            i2u560_41 46E4                             _sleepInit 6594  
                            i2u537_40 5CC8                              i2u561_40 4740  
                            i2u537_41 5CC4                              i2u561_41 473C  
                            i2u538_40 5CEC                              i2u562_40 477A  
                            i2u538_41 5CE8                              i2u562_41 4776  
                            i2u563_40 47D0                              i2u563_41 47CC  
                            i2u564_40 0028                              i2u564_41 0024  
                            i2u565_40 0036                              i2u565_41 0032  
                            i2u558_40 6114                              i2u566_40 0044  
                            i2u558_41 6110                              i2u566_41 0040  
                            i2u567_40 0064                              i2u567_41 0060  
                            i2u568_40 0080                              i2u568_41 007C  
                            i2u569_40 008E                              i2u569_41 008A  
              __size_of_ENTERCRITICAL 0016              __size_of_levelController 00F6  
                         _displayInit 6678                             _vfpfcnvrt 3CBE  
                          ?_displaySM 00A3                     ___wmul@multiplier 001A  
                   ?_LCD_SliderCreate 0012                              i2___wmul 6630  
    GameParameters_setBackLight@value 0014                    LCD_ButtonUpdate@x1 0033  
                  LCD_ButtonUpdate@x2 002F                    LCD_ButtonUpdate@y1 0031  
                  LCD_ButtonUpdate@y2 0035                    ??_LCD_SliderCreate 0028  
                    __size_of_RGB2LCD 00BE                     ?_LCD_SliderUpdate 0027  
                    LCD_InSlider@posX 0014                      LCD_InSlider@posY 0016  
                LCD_ButtonCreate@font 0020                  LCD_ButtonCreate@posX 0012  
                LCD_ButtonCreate@posY 0014                  LCD_ButtonDraw@bmpPtr 009A  
                    ?_touchScreenInit 0001                    ??_LCD_SliderUpdate 0029  
                LCD_ButtonDraw@button 007C                         _LEAVECRITICAL 66E8  
                       ?_Factory_exec 0001                         ?_Factory_init 0001  
                  i2___awmod@dividend 0001                      _Menu_welcomeDraw 5EB2  
                     checkCollision@g 001B                      __size_of_XF_init 00B8  
               __size_of_moovePaddle1 00CA                 __size_of_moovePaddle2 00D6  
                    LCD_DrawRect@fill 001A                            ?_mooveBall 0025  
                            __Hrparam 0000                      LCD_DrawRect@temp 001F  
                          ?_sleepInit 00A5              __size_ofi2_LEAVECRITICAL 0016  
                          vfprintf@ap 007E                              __Lrparam 0000  
                          vfprintf@fp 007A               __size_of_LCD_ButtonDraw 04EE  
              __size_of_configMeasure 0050       __end_of_GameParameters_setLevel 66E8  
           __size_of_LCD_ButtonCreate 00FA                      __size_of___aodiv 0188  
     __end_of_GameParameters_resetPos 6594                      __size_of___aomod 0164  
                    __size_of___fldiv 039A                      __size_of___awdiv 00C4  
                    __size_of___awmod 00B0                      __size_of___fltol 0106  
               i2___wmul@multiplicand 0003                            ?_vfpfcnvrt 003F  
                    __size_of___lwdiv 0074                      __size_of___lwmod 0064  
           __size_of_LCD_ButtonUpdate 0236                     gameControllerSM@g 003C  
                     ___aodiv@divisor 001A                      Paddle_addX@value 0014  
            LCD_ButtonUpdate@colorOut 002B                       ___aodiv@counter 0022  
            GameParameters_setX@value 0014                       LCD_Bitmap@color 006D  
            GameParameters_setY@value 0014                      LCD_DrawText@font 0022  
                          sprintf@fmt 0084                      LCD_DrawText@posX 0025  
                    LCD_DrawText@posY 0027              GameParameters_setLevel@s 0012  
                            ___xxtofl 3B0A                            Ball_draw@b 0025  
                     ___lwdiv@divisor 0022                            Ball_init@b 0012  
                     ___lwdiv@counter 0024                              __ptext10 6262  
                            __ptext11 5D9C                              __ptext20 675C  
                            __ptext12 366A                              __ptext21 3E72  
                            __ptext13 6656                              __ptext30 5E30  
                            __ptext22 2272                              __ptext14 6360  
                            __ptext31 4E04                              __ptext23 5288  
                            __ptext15 3B0A                              __ptext40 5A3E  
                            __ptext32 66D2                              __ptext24 5430  
                            __ptext16 4A00                              __ptext41 4EFA  
                            __ptext33 198A                              __ptext25 4FE8  
                            __ptext17 2676                              __ptext50 5AEE  
                            __ptext42 4D0A                              __ptext34 63FE  
                            __ptext26 656A                              __ptext18 66A6  
                            __ptext51 0FC6                              __ptext43 613E  
                            __ptext35 5F2A                              __ptext27 65BC  
                            __ptext19 66BC                              __ptext60 630E  
                            __ptext52 38D4                              __ptext44 4C0A  
                            __ptext36 50CC                              __ptext28 00B4  
                            __ptext61 61A0                              __ptext53 443C  
                            __ptext45 4B06                              __ptext37 51AA  
                            __ptext29 6012                              __ptext70 3FFA  
                            __ptext62 3CBE                              __ptext54 09D0  
                            __ptext46 5EB2                              __ptext38 2A10  
                            __ptext71 1E28                              __ptext63 30E0  
                            __ptext55 6076                              __ptext47 47D2  
                            __ptext39 65E4                              __ptext80 5B9E  
                            __ptext72 63B0                              __ptext64 5688  
                            __ptext56 5F9E                              __ptext48 48F2  
                            __ptext81 66E8                              __ptext73 660A  
                            __ptext65 6442                              __ptext57 580C  
                            __ptext49 14B4                              __ptext90 672A  
                            __ptext82 66FE                              __ptext74 55C4  
                            __ptext66 54FA                              __ptext58 62B8  
                            __ptext75 457E                              __ptext67 675E  
                            __ptext59 535E                              __ptext84 46B0  
                            __ptext76 574A                              __ptext68 6486  
                            __ptext85 6630                              __ptext77 42E6  
                            __ptext69 4182                              __ptext86 60DA  
                            __ptext78 2DA6                              __ptext87 5C4E  
                            __ptext79 6202                              __ptext88 64C6  
                            __ptext89 6714                      __size_of_sleepSM 0002  
                      ?_LEAVECRITICAL 0001                         _ENTERCRITICAL 66FE  
                       ??_Ball_Update 0014                        ??_Factory_exec 0047  
                      ??_Factory_init 00A7               __end_of_Menu_inGameDraw 630E  
                        _moovePaddle1 5430                          _moovePaddle2 5288  
            GameParameters_resetPos@s 0012                      __size_of_sprintf 0052  
  __end_of_XF_decrementAndQueueTimers 47D2            _XF_decrementAndQueueTimers 46B0  
                       __size_of_main 0010                             sleepSM@ev 0001  
                       __size_of_dtoa 02E2             __size_of_XF_scheduleTimer 0074  
            __end_of_gameControllerSM 3FFA                   _backlightController 198A  
         __end_of_GameParameters_init 2DA6           __end_of_GameParameters_setX 66D2  
         __end_of_GameParameters_setY 66BC              __size_ofi2_ENTERCRITICAL 0016  
             __size_of_LCD_SliderDraw 010E          GameParameters_setBackLight@s 0012  
            _gameControllerController 2272                              isa$xinst 000000  
                          _LCD_Bitmap 09D0        __size_of_touchScreenController 026A  
                  _XF_unscheduleTimer 64C6         __end_of_touchScreenController 38D4  
                            int$flags 004E                              _vfprintf 61A0  
                       ?_XF_pushEvent 0018           __size_of_gameControllerInit 0016  
                         ??_displaySM 00A5                      ___aomod@dividend 0012  
                 ?_XF_unscheduleTimer 0002                     i2___awmod@divisor 0003  
                   ??_levelController 0018                     i2___awmod@counter 0005  
                ?_backlightController 0018                       _sleepController 6502  
                      ?_ENTERCRITICAL 0001                         _configMeasure 6360  
                            intlevel2 0000                             sprintf@ap 0088  
                     LCD_DrawText@msg 0020                      ___lwmod@dividend 0012  
                ??_XF_unscheduleTimer 0003                   __end_of_Ball_Update 5EB2  
                      _checkCollision 00B4                           ??_mooveBall 0027  
                         ??_sleepInit 0047                      ??i2_XF_pushEvent 0008  
                      ??_XF_pushEvent 0019                       ___aomod@divisor 001A  
                         ??_vfpfcnvrt 0045                       ___aomod@counter 0022  
                   ??i2_LEAVECRITICAL 0001                              sprintf@f 008A  
                            sprintf@s 0082                 ??_backlightController 001A  
                       ??_XF_popEvent 0018                       ___lwmod@divisor 0014  
             LCD_SliderCreate@bgColor 001C                       ___lwmod@counter 0016  
                     ??_LEAVECRITICAL 0012                        ?_configMeasure 0001  
         LCD_SliderCreate@borderColor 001E          __size_of_Menu_parametersDraw 0120  
            LCD_SliderCreate@sldColor 001A               LCD_SliderCreate@fpPress 0024  
                    ?_Menu_inGameDraw 0092                          ___aodiv@sign 0023  
    __size_of_GameParameters_setLevel 0016                       Paddle_init@team 0014  
              __end_of_checkCollision 09D0      __size_of_GameParameters_resetPos 002A  
__size_of_GameParameters_setBackLight 0044                          ___aomod@sign 0023  
                        ?_configTouch 0001  
