

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 07 08:46:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	text83,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	text86,global,reloc=2,class=CODE,delta=1
   100                           	psect	text87,global,reloc=2,class=CODE,delta=1
   101                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   105                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   106  0000                     
   107                           ; Version 2.32
   108                           ; Generated 02/02/2021 GMT
   109                           ; 
   110                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   111                           ; All rights reserved.
   112                           ; 
   113                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   114                           ; 
   115                           ; Redistribution and use in source and binary forms, with or without modification, are
   116                           ; permitted provided that the following conditions are met:
   117                           ; 
   118                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   119                           ;        conditions and the following disclaimer.
   120                           ; 
   121                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   122                           ;        of conditions and the following disclaimer in the documentation and/or other
   123                           ;        materials provided with the distribution. Publication is not required when
   124                           ;        this file is used in an embedded application.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18LF25K22 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     
   143                           	psect	mediumconst
   144  00783A                     __pmediumconst:
   145                           	callstack 0
   146  00783A  00                 	db	0
   147  00783B                     _arialNarrow_12ptBitmaps:
   148                           	callstack 0
   149  00783B  00                 	db	0
   150  00783C  00                 	db	0
   151  00783D  00                 	db	0
   152  00783E  00                 	db	0
   153  00783F  00                 	db	0
   154  007840  00                 	db	0
   155  007841  00                 	db	0
   156  007842  00                 	db	0
   157  007843  00                 	db	0
   158  007844  00                 	db	0
   159  007845  00                 	db	0
   160  007846  00                 	db	0
   161  007847  00                 	db	0
   162  007848  00                 	db	0
   163  007849  00                 	db	0
   164  00784A  00                 	db	0
   165  00784B  C0                 	db	192
   166  00784C  C0                 	db	192
   167  00784D  C0                 	db	192
   168  00784E  C0                 	db	192
   169  00784F  C0                 	db	192
   170  007850  C0                 	db	192
   171  007851  C0                 	db	192
   172  007852  C0                 	db	192
   173  007853  00                 	db	0
   174  007854  C0                 	db	192
   175  007855  C0                 	db	192
   176  007856  00                 	db	0
   177  007857  00                 	db	0
   178  007858  00                 	db	0
   179  007859  00                 	db	0
   180  00785A  D8                 	db	216
   181  00785B  D8                 	db	216
   182  00785C  D8                 	db	216
   183  00785D  D8                 	db	216
   184  00785E  00                 	db	0
   185  00785F  00                 	db	0
   186  007860  00                 	db	0
   187  007861  00                 	db	0
   188  007862  00                 	db	0
   189  007863  00                 	db	0
   190  007864  00                 	db	0
   191  007865  00                 	db	0
   192  007866  00                 	db	0
   193  007867  00                 	db	0
   194  007868  00                 	db	0
   195  007869  12                 	db	18
   196  00786A  12                 	db	18
   197  00786B  24                 	db	36
   198  00786C  FE                 	db	254
   199  00786D  FE                 	db	254
   200  00786E  48                 	db	72
   201  00786F  FE                 	db	254
   202  007870  FE                 	db	254
   203  007871  48                 	db	72
   204  007872  90                 	db	144
   205  007873  90                 	db	144
   206  007874  00                 	db	0
   207  007875  00                 	db	0
   208  007876  00                 	db	0
   209  007877  10                 	db	16
   210  007878  7C                 	db	124
   211  007879  FC                 	db	252
   212  00787A  D6                 	db	214
   213  00787B  D0                 	db	208
   214  00787C  F0                 	db	240
   215  00787D  7C                 	db	124
   216  00787E  1E                 	db	30
   217  00787F  16                 	db	22
   218  007880  D6                 	db	214
   219  007881  7E                 	db	126
   220  007882  7C                 	db	124
   221  007883  10                 	db	16
   222  007884  00                 	db	0
   223  007885  00                 	db	0
   224  007886  00                 	db	0
   225  007887  00                 	db	0
   226  007888  61                 	db	97
   227  007889  00                 	db	0
   228  00788A  91                 	db	145
   229  00788B  00                 	db	0
   230  00788C  92                 	db	146
   231  00788D  00                 	db	0
   232  00788E  92                 	db	146
   233  00788F  00                 	db	0
   234  007890  94                 	db	148
   235  007891  00                 	db	0
   236  007892  65                 	db	101
   237  007893  80                 	db	128
   238  007894  06                 	db	6
   239  007895  40                 	db	64
   240  007896  0A                 	db	10
   241  007897  40                 	db	64
   242  007898  0A                 	db	10
   243  007899  40                 	db	64
   244  00789A  12                 	db	18
   245  00789B  40                 	db	64
   246  00789C  11                 	db	17
   247  00789D  80                 	db	128
   248  00789E  00                 	db	0
   249  00789F  00                 	db	0
   250  0078A0  00                 	db	0
   251  0078A1  00                 	db	0
   252  0078A2  00                 	db	0
   253  0078A3  00                 	db	0
   254  0078A4  00                 	db	0
   255  0078A5  38                 	db	56
   256  0078A6  7C                 	db	124
   257  0078A7  6C                 	db	108
   258  0078A8  7C                 	db	124
   259  0078A9  30                 	db	48
   260  0078AA  78                 	db	120
   261  0078AB  DA                 	db	218
   262  0078AC  CE                 	db	206
   263  0078AD  CE                 	db	206
   264  0078AE  FF                 	db	255
   265  0078AF  7A                 	db	122
   266  0078B0  00                 	db	0
   267  0078B1  00                 	db	0
   268  0078B2  00                 	db	0
   269  0078B3  00                 	db	0
   270  0078B4  C0                 	db	192
   271  0078B5  C0                 	db	192
   272  0078B6  C0                 	db	192
   273  0078B7  C0                 	db	192
   274  0078B8  00                 	db	0
   275  0078B9  00                 	db	0
   276  0078BA  00                 	db	0
   277  0078BB  00                 	db	0
   278  0078BC  00                 	db	0
   279  0078BD  00                 	db	0
   280  0078BE  00                 	db	0
   281  0078BF  00                 	db	0
   282  0078C0  00                 	db	0
   283  0078C1  00                 	db	0
   284  0078C2  00                 	db	0
   285  0078C3  10                 	db	16
   286  0078C4  20                 	db	32
   287  0078C5  60                 	db	96
   288  0078C6  60                 	db	96
   289  0078C7  C0                 	db	192
   290  0078C8  C0                 	db	192
   291  0078C9  C0                 	db	192
   292  0078CA  C0                 	db	192
   293  0078CB  C0                 	db	192
   294  0078CC  C0                 	db	192
   295  0078CD  60                 	db	96
   296  0078CE  60                 	db	96
   297  0078CF  20                 	db	32
   298  0078D0  10                 	db	16
   299  0078D1  00                 	db	0
   300  0078D2  80                 	db	128
   301  0078D3  40                 	db	64
   302  0078D4  60                 	db	96
   303  0078D5  20                 	db	32
   304  0078D6  30                 	db	48
   305  0078D7  30                 	db	48
   306  0078D8  30                 	db	48
   307  0078D9  30                 	db	48
   308  0078DA  30                 	db	48
   309  0078DB  30                 	db	48
   310  0078DC  60                 	db	96
   311  0078DD  60                 	db	96
   312  0078DE  40                 	db	64
   313  0078DF  80                 	db	128
   314  0078E0  00                 	db	0
   315  0078E1  20                 	db	32
   316  0078E2  A8                 	db	168
   317  0078E3  F8                 	db	248
   318  0078E4  20                 	db	32
   319  0078E5  50                 	db	80
   320  0078E6  50                 	db	80
   321  0078E7  00                 	db	0
   322  0078E8  00                 	db	0
   323  0078E9  00                 	db	0
   324  0078EA  00                 	db	0
   325  0078EB  00                 	db	0
   326  0078EC  00                 	db	0
   327  0078ED  00                 	db	0
   328  0078EE  00                 	db	0
   329  0078EF  00                 	db	0
   330  0078F0  00                 	db	0
   331  0078F1  00                 	db	0
   332  0078F2  00                 	db	0
   333  0078F3  30                 	db	48
   334  0078F4  30                 	db	48
   335  0078F5  30                 	db	48
   336  0078F6  FC                 	db	252
   337  0078F7  FC                 	db	252
   338  0078F8  30                 	db	48
   339  0078F9  30                 	db	48
   340  0078FA  30                 	db	48
   341  0078FB  00                 	db	0
   342  0078FC  00                 	db	0
   343  0078FD  00                 	db	0
   344  0078FE  00                 	db	0
   345  0078FF  00                 	db	0
   346  007900  00                 	db	0
   347  007901  00                 	db	0
   348  007902  00                 	db	0
   349  007903  00                 	db	0
   350  007904  00                 	db	0
   351  007905  00                 	db	0
   352  007906  00                 	db	0
   353  007907  00                 	db	0
   354  007908  C0                 	db	192
   355  007909  C0                 	db	192
   356  00790A  40                 	db	64
   357  00790B  40                 	db	64
   358  00790C  80                 	db	128
   359  00790D  00                 	db	0
   360  00790E  00                 	db	0
   361  00790F  00                 	db	0
   362  007910  00                 	db	0
   363  007911  00                 	db	0
   364  007912  00                 	db	0
   365  007913  00                 	db	0
   366  007914  F0                 	db	240
   367  007915  F0                 	db	240
   368  007916  00                 	db	0
   369  007917  00                 	db	0
   370  007918  00                 	db	0
   371  007919  00                 	db	0
   372  00791A  00                 	db	0
   373  00791B  00                 	db	0
   374  00791C  00                 	db	0
   375  00791D  00                 	db	0
   376  00791E  00                 	db	0
   377  00791F  00                 	db	0
   378  007920  00                 	db	0
   379  007921  00                 	db	0
   380  007922  00                 	db	0
   381  007923  00                 	db	0
   382  007924  00                 	db	0
   383  007925  00                 	db	0
   384  007926  C0                 	db	192
   385  007927  C0                 	db	192
   386  007928  00                 	db	0
   387  007929  00                 	db	0
   388  00792A  00                 	db	0
   389  00792B  00                 	db	0
   390  00792C  30                 	db	48
   391  00792D  30                 	db	48
   392  00792E  30                 	db	48
   393  00792F  60                 	db	96
   394  007930  60                 	db	96
   395  007931  60                 	db	96
   396  007932  60                 	db	96
   397  007933  60                 	db	96
   398  007934  C0                 	db	192
   399  007935  C0                 	db	192
   400  007936  C0                 	db	192
   401  007937  00                 	db	0
   402  007938  00                 	db	0
   403  007939  00                 	db	0
   404  00793A  00                 	db	0
   405  00793B  78                 	db	120
   406  00793C  78                 	db	120
   407  00793D  CC                 	db	204
   408  00793E  CC                 	db	204
   409  00793F  CC                 	db	204
   410  007940  CC                 	db	204
   411  007941  CC                 	db	204
   412  007942  CC                 	db	204
   413  007943  CC                 	db	204
   414  007944  78                 	db	120
   415  007945  78                 	db	120
   416  007946  00                 	db	0
   417  007947  00                 	db	0
   418  007948  00                 	db	0
   419  007949  00                 	db	0
   420  00794A  30                 	db	48
   421  00794B  30                 	db	48
   422  00794C  70                 	db	112
   423  00794D  F0                 	db	240
   424  00794E  B0                 	db	176
   425  00794F  30                 	db	48
   426  007950  30                 	db	48
   427  007951  30                 	db	48
   428  007952  30                 	db	48
   429  007953  30                 	db	48
   430  007954  30                 	db	48
   431  007955  00                 	db	0
   432  007956  00                 	db	0
   433  007957  00                 	db	0
   434  007958  00                 	db	0
   435  007959  38                 	db	56
   436  00795A  7C                 	db	124
   437  00795B  CC                 	db	204
   438  00795C  CC                 	db	204
   439  00795D  0C                 	db	12
   440  00795E  18                 	db	24
   441  00795F  38                 	db	56
   442  007960  70                 	db	112
   443  007961  60                 	db	96
   444  007962  FC                 	db	252
   445  007963  FC                 	db	252
   446  007964  00                 	db	0
   447  007965  00                 	db	0
   448  007966  00                 	db	0
   449  007967  00                 	db	0
   450  007968  78                 	db	120
   451  007969  FC                 	db	252
   452  00796A  CC                 	db	204
   453  00796B  0C                 	db	12
   454  00796C  38                 	db	56
   455  00796D  38                 	db	56
   456  00796E  0C                 	db	12
   457  00796F  0C                 	db	12
   458  007970  CC                 	db	204
   459  007971  F8                 	db	248
   460  007972  78                 	db	120
   461  007973  00                 	db	0
   462  007974  00                 	db	0
   463  007975  00                 	db	0
   464  007976  00                 	db	0
   465  007977  0C                 	db	12
   466  007978  1C                 	db	28
   467  007979  1C                 	db	28
   468  00797A  3C                 	db	60
   469  00797B  2C                 	db	44
   470  00797C  6C                 	db	108
   471  00797D  CC                 	db	204
   472  00797E  FE                 	db	254
   473  00797F  FE                 	db	254
   474  007980  0C                 	db	12
   475  007981  0C                 	db	12
   476  007982  00                 	db	0
   477  007983  00                 	db	0
   478  007984  00                 	db	0
   479  007985  00                 	db	0
   480  007986  7C                 	db	124
   481  007987  7C                 	db	124
   482  007988  60                 	db	96
   483  007989  D8                 	db	216
   484  00798A  FC                 	db	252
   485  00798B  CC                 	db	204
   486  00798C  0C                 	db	12
   487  00798D  CC                 	db	204
   488  00798E  CC                 	db	204
   489  00798F  78                 	db	120
   490  007990  78                 	db	120
   491  007991  00                 	db	0
   492  007992  00                 	db	0
   493  007993  00                 	db	0
   494  007994  00                 	db	0
   495  007995  70                 	db	112
   496  007996  78                 	db	120
   497  007997  D8                 	db	216
   498  007998  C0                 	db	192
   499  007999  F0                 	db	240
   500  00799A  F8                 	db	248
   501  00799B  D8                 	db	216
   502  00799C  D8                 	db	216
   503  00799D  D8                 	db	216
   504  00799E  78                 	db	120
   505  00799F  70                 	db	112
   506  0079A0  00                 	db	0
   507  0079A1  00                 	db	0
   508  0079A2  00                 	db	0
   509  0079A3  00                 	db	0
   510  0079A4  F8                 	db	248
   511  0079A5  F8                 	db	248
   512  0079A6  18                 	db	24
   513  0079A7  10                 	db	16
   514  0079A8  30                 	db	48
   515  0079A9  30                 	db	48
   516  0079AA  20                 	db	32
   517  0079AB  60                 	db	96
   518  0079AC  60                 	db	96
   519  0079AD  60                 	db	96
   520  0079AE  60                 	db	96
   521  0079AF  00                 	db	0
   522  0079B0  00                 	db	0
   523  0079B1  00                 	db	0
   524  0079B2  00                 	db	0
   525  0079B3  78                 	db	120
   526  0079B4  FC                 	db	252
   527  0079B5  CC                 	db	204
   528  0079B6  CC                 	db	204
   529  0079B7  78                 	db	120
   530  0079B8  78                 	db	120
   531  0079B9  CC                 	db	204
   532  0079BA  CC                 	db	204
   533  0079BB  CC                 	db	204
   534  0079BC  FC                 	db	252
   535  0079BD  78                 	db	120
   536  0079BE  00                 	db	0
   537  0079BF  00                 	db	0
   538  0079C0  00                 	db	0
   539  0079C1  00                 	db	0
   540  0079C2  70                 	db	112
   541  0079C3  F8                 	db	248
   542  0079C4  CC                 	db	204
   543  0079C5  CC                 	db	204
   544  0079C6  CC                 	db	204
   545  0079C7  FC                 	db	252
   546  0079C8  7C                 	db	124
   547  0079C9  0C                 	db	12
   548  0079CA  CC                 	db	204
   549  0079CB  F8                 	db	248
   550  0079CC  70                 	db	112
   551  0079CD  00                 	db	0
   552  0079CE  00                 	db	0
   553  0079CF  00                 	db	0
   554  0079D0  00                 	db	0
   555  0079D1  00                 	db	0
   556  0079D2  00                 	db	0
   557  0079D3  00                 	db	0
   558  0079D4  C0                 	db	192
   559  0079D5  C0                 	db	192
   560  0079D6  00                 	db	0
   561  0079D7  00                 	db	0
   562  0079D8  00                 	db	0
   563  0079D9  00                 	db	0
   564  0079DA  C0                 	db	192
   565  0079DB  C0                 	db	192
   566  0079DC  00                 	db	0
   567  0079DD  00                 	db	0
   568  0079DE  00                 	db	0
   569  0079DF  00                 	db	0
   570  0079E0  00                 	db	0
   571  0079E1  00                 	db	0
   572  0079E2  00                 	db	0
   573  0079E3  C0                 	db	192
   574  0079E4  C0                 	db	192
   575  0079E5  00                 	db	0
   576  0079E6  00                 	db	0
   577  0079E7  00                 	db	0
   578  0079E8  00                 	db	0
   579  0079E9  C0                 	db	192
   580  0079EA  C0                 	db	192
   581  0079EB  40                 	db	64
   582  0079EC  40                 	db	64
   583  0079ED  80                 	db	128
   584  0079EE  00                 	db	0
   585  0079EF  00                 	db	0
   586  0079F0  04                 	db	4
   587  0079F1  1C                 	db	28
   588  0079F2  38                 	db	56
   589  0079F3  F0                 	db	240
   590  0079F4  C0                 	db	192
   591  0079F5  F0                 	db	240
   592  0079F6  38                 	db	56
   593  0079F7  1C                 	db	28
   594  0079F8  04                 	db	4
   595  0079F9  00                 	db	0
   596  0079FA  00                 	db	0
   597  0079FB  00                 	db	0
   598  0079FC  00                 	db	0
   599  0079FD  00                 	db	0
   600  0079FE  00                 	db	0
   601  0079FF  00                 	db	0
   602  007A00  00                 	db	0
   603  007A01  FC                 	db	252
   604  007A02  FC                 	db	252
   605  007A03  00                 	db	0
   606  007A04  FC                 	db	252
   607  007A05  FC                 	db	252
   608  007A06  00                 	db	0
   609  007A07  00                 	db	0
   610  007A08  00                 	db	0
   611  007A09  00                 	db	0
   612  007A0A  00                 	db	0
   613  007A0B  00                 	db	0
   614  007A0C  00                 	db	0
   615  007A0D  00                 	db	0
   616  007A0E  80                 	db	128
   617  007A0F  E0                 	db	224
   618  007A10  70                 	db	112
   619  007A11  3C                 	db	60
   620  007A12  0C                 	db	12
   621  007A13  1C                 	db	28
   622  007A14  70                 	db	112
   623  007A15  E0                 	db	224
   624  007A16  80                 	db	128
   625  007A17  00                 	db	0
   626  007A18  00                 	db	0
   627  007A19  00                 	db	0
   628  007A1A  00                 	db	0
   629  007A1B  00                 	db	0
   630  007A1C  78                 	db	120
   631  007A1D  FC                 	db	252
   632  007A1E  CC                 	db	204
   633  007A1F  CC                 	db	204
   634  007A20  1C                 	db	28
   635  007A21  18                 	db	24
   636  007A22  30                 	db	48
   637  007A23  30                 	db	48
   638  007A24  00                 	db	0
   639  007A25  30                 	db	48
   640  007A26  30                 	db	48
   641  007A27  00                 	db	0
   642  007A28  00                 	db	0
   643  007A29  00                 	db	0
   644  007A2A  00                 	db	0
   645  007A2B  00                 	db	0
   646  007A2C  0F                 	db	15
   647  007A2D  C0                 	db	192
   648  007A2E  1F                 	db	31
   649  007A2F  E0                 	db	224
   650  007A30  30                 	db	48
   651  007A31  30                 	db	48
   652  007A32  66                 	db	102
   653  007A33  D8                 	db	216
   654  007A34  EF                 	db	239
   655  007A35  D8                 	db	216
   656  007A36  DD                 	db	221
   657  007A37  D8                 	db	216
   658  007A38  D8                 	db	216
   659  007A39  98                 	db	152
   660  007A3A  D9                 	db	217
   661  007A3B  98                 	db	152
   662  007A3C  D9                 	db	217
   663  007A3D  B0                 	db	176
   664  007A3E  DF                 	db	223
   665  007A3F  F0                 	db	240
   666  007A40  6E                 	db	110
   667  007A41  C8                 	db	200
   668  007A42  70                 	db	112
   669  007A43  10                 	db	16
   670  007A44  3F                 	db	63
   671  007A45  E0                 	db	224
   672  007A46  0F                 	db	15
   673  007A47  C0                 	db	192
   674  007A48  00                 	db	0
   675  007A49  00                 	db	0
   676  007A4A  1C                 	db	28
   677  007A4B  00                 	db	0
   678  007A4C  1C                 	db	28
   679  007A4D  00                 	db	0
   680  007A4E  1C                 	db	28
   681  007A4F  00                 	db	0
   682  007A50  36                 	db	54
   683  007A51  00                 	db	0
   684  007A52  36                 	db	54
   685  007A53  00                 	db	0
   686  007A54  36                 	db	54
   687  007A55  00                 	db	0
   688  007A56  63                 	db	99
   689  007A57  00                 	db	0
   690  007A58  7F                 	db	127
   691  007A59  00                 	db	0
   692  007A5A  7F                 	db	127
   693  007A5B  00                 	db	0
   694  007A5C  C1                 	db	193
   695  007A5D  80                 	db	128
   696  007A5E  C1                 	db	193
   697  007A5F  80                 	db	128
   698  007A60  00                 	db	0
   699  007A61  00                 	db	0
   700  007A62  00                 	db	0
   701  007A63  00                 	db	0
   702  007A64  00                 	db	0
   703  007A65  00                 	db	0
   704  007A66  00                 	db	0
   705  007A67  FC                 	db	252
   706  007A68  FE                 	db	254
   707  007A69  C6                 	db	198
   708  007A6A  C6                 	db	198
   709  007A6B  FC                 	db	252
   710  007A6C  FC                 	db	252
   711  007A6D  C6                 	db	198
   712  007A6E  C6                 	db	198
   713  007A6F  C6                 	db	198
   714  007A70  FE                 	db	254
   715  007A71  FC                 	db	252
   716  007A72  00                 	db	0
   717  007A73  00                 	db	0
   718  007A74  00                 	db	0
   719  007A75  00                 	db	0
   720  007A76  3C                 	db	60
   721  007A77  7E                 	db	126
   722  007A78  67                 	db	103
   723  007A79  C2                 	db	194
   724  007A7A  C0                 	db	192
   725  007A7B  C0                 	db	192
   726  007A7C  C0                 	db	192
   727  007A7D  C2                 	db	194
   728  007A7E  67                 	db	103
   729  007A7F  7E                 	db	126
   730  007A80  3C                 	db	60
   731  007A81  00                 	db	0
   732  007A82  00                 	db	0
   733  007A83  00                 	db	0
   734  007A84  00                 	db	0
   735  007A85  F8                 	db	248
   736  007A86  FC                 	db	252
   737  007A87  CE                 	db	206
   738  007A88  C6                 	db	198
   739  007A89  C6                 	db	198
   740  007A8A  C6                 	db	198
   741  007A8B  C6                 	db	198
   742  007A8C  C6                 	db	198
   743  007A8D  CE                 	db	206
   744  007A8E  FC                 	db	252
   745  007A8F  F8                 	db	248
   746  007A90  00                 	db	0
   747  007A91  00                 	db	0
   748  007A92  00                 	db	0
   749  007A93  00                 	db	0
   750  007A94  FE                 	db	254
   751  007A95  FE                 	db	254
   752  007A96  C0                 	db	192
   753  007A97  C0                 	db	192
   754  007A98  FE                 	db	254
   755  007A99  FE                 	db	254
   756  007A9A  C0                 	db	192
   757  007A9B  C0                 	db	192
   758  007A9C  C0                 	db	192
   759  007A9D  FE                 	db	254
   760  007A9E  FE                 	db	254
   761  007A9F  00                 	db	0
   762  007AA0  00                 	db	0
   763  007AA1  00                 	db	0
   764  007AA2  00                 	db	0
   765  007AA3  FC                 	db	252
   766  007AA4  FC                 	db	252
   767  007AA5  C0                 	db	192
   768  007AA6  C0                 	db	192
   769  007AA7  F8                 	db	248
   770  007AA8  F8                 	db	248
   771  007AA9  C0                 	db	192
   772  007AAA  C0                 	db	192
   773  007AAB  C0                 	db	192
   774  007AAC  C0                 	db	192
   775  007AAD  C0                 	db	192
   776  007AAE  00                 	db	0
   777  007AAF  00                 	db	0
   778  007AB0  00                 	db	0
   779  007AB1  00                 	db	0
   780  007AB2  3C                 	db	60
   781  007AB3  7E                 	db	126
   782  007AB4  67                 	db	103
   783  007AB5  C3                 	db	195
   784  007AB6  C0                 	db	192
   785  007AB7  CF                 	db	207
   786  007AB8  CF                 	db	207
   787  007AB9  C3                 	db	195
   788  007ABA  63                 	db	99
   789  007ABB  7F                 	db	127
   790  007ABC  3C                 	db	60
   791  007ABD  00                 	db	0
   792  007ABE  00                 	db	0
   793  007ABF  00                 	db	0
   794  007AC0  00                 	db	0
   795  007AC1  C6                 	db	198
   796  007AC2  C6                 	db	198
   797  007AC3  C6                 	db	198
   798  007AC4  C6                 	db	198
   799  007AC5  FE                 	db	254
   800  007AC6  FE                 	db	254
   801  007AC7  C6                 	db	198
   802  007AC8  C6                 	db	198
   803  007AC9  C6                 	db	198
   804  007ACA  C6                 	db	198
   805  007ACB  C6                 	db	198
   806  007ACC  00                 	db	0
   807  007ACD  00                 	db	0
   808  007ACE  00                 	db	0
   809  007ACF  00                 	db	0
   810  007AD0  C0                 	db	192
   811  007AD1  C0                 	db	192
   812  007AD2  C0                 	db	192
   813  007AD3  C0                 	db	192
   814  007AD4  C0                 	db	192
   815  007AD5  C0                 	db	192
   816  007AD6  C0                 	db	192
   817  007AD7  C0                 	db	192
   818  007AD8  C0                 	db	192
   819  007AD9  C0                 	db	192
   820  007ADA  C0                 	db	192
   821  007ADB  00                 	db	0
   822  007ADC  00                 	db	0
   823  007ADD  00                 	db	0
   824  007ADE  00                 	db	0
   825  007ADF  0C                 	db	12
   826  007AE0  0C                 	db	12
   827  007AE1  0C                 	db	12
   828  007AE2  0C                 	db	12
   829  007AE3  0C                 	db	12
   830  007AE4  0C                 	db	12
   831  007AE5  0C                 	db	12
   832  007AE6  CC                 	db	204
   833  007AE7  CC                 	db	204
   834  007AE8  FC                 	db	252
   835  007AE9  78                 	db	120
   836  007AEA  00                 	db	0
   837  007AEB  00                 	db	0
   838  007AEC  00                 	db	0
   839  007AED  00                 	db	0
   840  007AEE  C3                 	db	195
   841  007AEF  C6                 	db	198
   842  007AF0  CC                 	db	204
   843  007AF1  CC                 	db	204
   844  007AF2  D8                 	db	216
   845  007AF3  FC                 	db	252
   846  007AF4  EC                 	db	236
   847  007AF5  C6                 	db	198
   848  007AF6  C6                 	db	198
   849  007AF7  C3                 	db	195
   850  007AF8  C3                 	db	195
   851  007AF9  00                 	db	0
   852  007AFA  00                 	db	0
   853  007AFB  00                 	db	0
   854  007AFC  00                 	db	0
   855  007AFD  C0                 	db	192
   856  007AFE  C0                 	db	192
   857  007AFF  C0                 	db	192
   858  007B00  C0                 	db	192
   859  007B01  C0                 	db	192
   860  007B02  C0                 	db	192
   861  007B03  C0                 	db	192
   862  007B04  C0                 	db	192
   863  007B05  C0                 	db	192
   864  007B06  FE                 	db	254
   865  007B07  FE                 	db	254
   866  007B08  00                 	db	0
   867  007B09  00                 	db	0
   868  007B0A  00                 	db	0
   869  007B0B  00                 	db	0
   870  007B0C  00                 	db	0
   871  007B0D  E3                 	db	227
   872  007B0E  80                 	db	128
   873  007B0F  E3                 	db	227
   874  007B10  80                 	db	128
   875  007B11  E3                 	db	227
   876  007B12  80                 	db	128
   877  007B13  F7                 	db	247
   878  007B14  80                 	db	128
   879  007B15  D5                 	db	213
   880  007B16  80                 	db	128
   881  007B17  D5                 	db	213
   882  007B18  80                 	db	128
   883  007B19  D5                 	db	213
   884  007B1A  80                 	db	128
   885  007B1B  D5                 	db	213
   886  007B1C  80                 	db	128
   887  007B1D  DD                 	db	221
   888  007B1E  80                 	db	128
   889  007B1F  D9                 	db	217
   890  007B20  80                 	db	128
   891  007B21  C9                 	db	201
   892  007B22  80                 	db	128
   893  007B23  00                 	db	0
   894  007B24  00                 	db	0
   895  007B25  00                 	db	0
   896  007B26  00                 	db	0
   897  007B27  00                 	db	0
   898  007B28  00                 	db	0
   899  007B29  00                 	db	0
   900  007B2A  C6                 	db	198
   901  007B2B  E6                 	db	230
   902  007B2C  E6                 	db	230
   903  007B2D  E6                 	db	230
   904  007B2E  F6                 	db	246
   905  007B2F  D6                 	db	214
   906  007B30  DE                 	db	222
   907  007B31  DE                 	db	222
   908  007B32  CE                 	db	206
   909  007B33  CE                 	db	206
   910  007B34  C6                 	db	198
   911  007B35  00                 	db	0
   912  007B36  00                 	db	0
   913  007B37  00                 	db	0
   914  007B38  00                 	db	0
   915  007B39  3C                 	db	60
   916  007B3A  7E                 	db	126
   917  007B3B  67                 	db	103
   918  007B3C  C3                 	db	195
   919  007B3D  C3                 	db	195
   920  007B3E  C3                 	db	195
   921  007B3F  C3                 	db	195
   922  007B40  C3                 	db	195
   923  007B41  66                 	db	102
   924  007B42  7E                 	db	126
   925  007B43  3C                 	db	60
   926  007B44  00                 	db	0
   927  007B45  00                 	db	0
   928  007B46  00                 	db	0
   929  007B47  00                 	db	0
   930  007B48  FC                 	db	252
   931  007B49  FE                 	db	254
   932  007B4A  C6                 	db	198
   933  007B4B  C6                 	db	198
   934  007B4C  C6                 	db	198
   935  007B4D  FE                 	db	254
   936  007B4E  FC                 	db	252
   937  007B4F  C0                 	db	192
   938  007B50  C0                 	db	192
   939  007B51  C0                 	db	192
   940  007B52  C0                 	db	192
   941  007B53  00                 	db	0
   942  007B54  00                 	db	0
   943  007B55  00                 	db	0
   944  007B56  00                 	db	0
   945  007B57  00                 	db	0
   946  007B58  3C                 	db	60
   947  007B59  00                 	db	0
   948  007B5A  7E                 	db	126
   949  007B5B  00                 	db	0
   950  007B5C  E7                 	db	231
   951  007B5D  00                 	db	0
   952  007B5E  C3                 	db	195
   953  007B5F  00                 	db	0
   954  007B60  C3                 	db	195
   955  007B61  00                 	db	0
   956  007B62  C3                 	db	195
   957  007B63  00                 	db	0
   958  007B64  C3                 	db	195
   959  007B65  00                 	db	0
   960  007B66  CB                 	db	203
   961  007B67  00                 	db	0
   962  007B68  66                 	db	102
   963  007B69  00                 	db	0
   964  007B6A  7F                 	db	127
   965  007B6B  00                 	db	0
   966  007B6C  3D                 	db	61
   967  007B6D  80                 	db	128
   968  007B6E  00                 	db	0
   969  007B6F  80                 	db	128
   970  007B70  00                 	db	0
   971  007B71  00                 	db	0
   972  007B72  00                 	db	0
   973  007B73  00                 	db	0
   974  007B74  00                 	db	0
   975  007B75  FC                 	db	252
   976  007B76  FE                 	db	254
   977  007B77  C6                 	db	198
   978  007B78  C6                 	db	198
   979  007B79  FE                 	db	254
   980  007B7A  FC                 	db	252
   981  007B7B  CC                 	db	204
   982  007B7C  C6                 	db	198
   983  007B7D  C6                 	db	198
   984  007B7E  C6                 	db	198
   985  007B7F  C3                 	db	195
   986  007B80  00                 	db	0
   987  007B81  00                 	db	0
   988  007B82  00                 	db	0
   989  007B83  00                 	db	0
   990  007B84  7C                 	db	124
   991  007B85  FE                 	db	254
   992  007B86  C6                 	db	198
   993  007B87  C6                 	db	198
   994  007B88  F0                 	db	240
   995  007B89  7C                 	db	124
   996  007B8A  0E                 	db	14
   997  007B8B  C6                 	db	198
   998  007B8C  C6                 	db	198
   999  007B8D  FE                 	db	254
  1000  007B8E  7C                 	db	124
  1001  007B8F  00                 	db	0
  1002  007B90  00                 	db	0
  1003  007B91  00                 	db	0
  1004  007B92  00                 	db	0
  1005  007B93  FF                 	db	255
  1006  007B94  FF                 	db	255
  1007  007B95  18                 	db	24
  1008  007B96  18                 	db	24
  1009  007B97  18                 	db	24
  1010  007B98  18                 	db	24
  1011  007B99  18                 	db	24
  1012  007B9A  18                 	db	24
  1013  007B9B  18                 	db	24
  1014  007B9C  18                 	db	24
  1015  007B9D  18                 	db	24
  1016  007B9E  00                 	db	0
  1017  007B9F  00                 	db	0
  1018  007BA0  00                 	db	0
  1019  007BA1  00                 	db	0
  1020  007BA2  C6                 	db	198
  1021  007BA3  C6                 	db	198
  1022  007BA4  C6                 	db	198
  1023  007BA5  C6                 	db	198
  1024  007BA6  C6                 	db	198
  1025  007BA7  C6                 	db	198
  1026  007BA8  C6                 	db	198
  1027  007BA9  C6                 	db	198
  1028  007BAA  C6                 	db	198
  1029  007BAB  7E                 	db	126
  1030  007BAC  38                 	db	56
  1031  007BAD  00                 	db	0
  1032  007BAE  00                 	db	0
  1033  007BAF  00                 	db	0
  1034  007BB0  00                 	db	0
  1035  007BB1  00                 	db	0
  1036  007BB2  C1                 	db	193
  1037  007BB3  80                 	db	128
  1038  007BB4  C1                 	db	193
  1039  007BB5  80                 	db	128
  1040  007BB6  63                 	db	99
  1041  007BB7  00                 	db	0
  1042  007BB8  63                 	db	99
  1043  007BB9  00                 	db	0
  1044  007BBA  63                 	db	99
  1045  007BBB  00                 	db	0
  1046  007BBC  36                 	db	54
  1047  007BBD  00                 	db	0
  1048  007BBE  36                 	db	54
  1049  007BBF  00                 	db	0
  1050  007BC0  36                 	db	54
  1051  007BC1  00                 	db	0
  1052  007BC2  1C                 	db	28
  1053  007BC3  00                 	db	0
  1054  007BC4  1C                 	db	28
  1055  007BC5  00                 	db	0
  1056  007BC6  1C                 	db	28
  1057  007BC7  00                 	db	0
  1058  007BC8  00                 	db	0
  1059  007BC9  00                 	db	0
  1060  007BCA  00                 	db	0
  1061  007BCB  00                 	db	0
  1062  007BCC  00                 	db	0
  1063  007BCD  00                 	db	0
  1064  007BCE  00                 	db	0
  1065  007BCF  00                 	db	0
  1066  007BD0  C4                 	db	196
  1067  007BD1  60                 	db	96
  1068  007BD2  C4                 	db	196
  1069  007BD3  60                 	db	96
  1070  007BD4  CA                 	db	202
  1071  007BD5  60                 	db	96
  1072  007BD6  6A                 	db	106
  1073  007BD7  C0                 	db	192
  1074  007BD8  6A                 	db	106
  1075  007BD9  C0                 	db	192
  1076  007BDA  6A                 	db	106
  1077  007BDB  C0                 	db	192
  1078  007BDC  6A                 	db	106
  1079  007BDD  C0                 	db	192
  1080  007BDE  6A                 	db	106
  1081  007BDF  C0                 	db	192
  1082  007BE0  31                 	db	49
  1083  007BE1  80                 	db	128
  1084  007BE2  31                 	db	49
  1085  007BE3  80                 	db	128
  1086  007BE4  31                 	db	49
  1087  007BE5  80                 	db	128
  1088  007BE6  00                 	db	0
  1089  007BE7  00                 	db	0
  1090  007BE8  00                 	db	0
  1091  007BE9  00                 	db	0
  1092  007BEA  00                 	db	0
  1093  007BEB  00                 	db	0
  1094  007BEC  00                 	db	0
  1095  007BED  00                 	db	0
  1096  007BEE  C1                 	db	193
  1097  007BEF  80                 	db	128
  1098  007BF0  63                 	db	99
  1099  007BF1  00                 	db	0
  1100  007BF2  36                 	db	54
  1101  007BF3  00                 	db	0
  1102  007BF4  36                 	db	54
  1103  007BF5  00                 	db	0
  1104  007BF6  1C                 	db	28
  1105  007BF7  00                 	db	0
  1106  007BF8  1C                 	db	28
  1107  007BF9  00                 	db	0
  1108  007BFA  1C                 	db	28
  1109  007BFB  00                 	db	0
  1110  007BFC  36                 	db	54
  1111  007BFD  00                 	db	0
  1112  007BFE  36                 	db	54
  1113  007BFF  00                 	db	0
  1114  007C00  63                 	db	99
  1115  007C01  00                 	db	0
  1116  007C02  C1                 	db	193
  1117  007C03  80                 	db	128
  1118  007C04  00                 	db	0
  1119  007C05  00                 	db	0
  1120  007C06  00                 	db	0
  1121  007C07  00                 	db	0
  1122  007C08  00                 	db	0
  1123  007C09  00                 	db	0
  1124  007C0A  00                 	db	0
  1125  007C0B  C3                 	db	195
  1126  007C0C  66                 	db	102
  1127  007C0D  66                 	db	102
  1128  007C0E  3C                 	db	60
  1129  007C0F  3C                 	db	60
  1130  007C10  18                 	db	24
  1131  007C11  18                 	db	24
  1132  007C12  18                 	db	24
  1133  007C13  18                 	db	24
  1134  007C14  18                 	db	24
  1135  007C15  18                 	db	24
  1136  007C16  00                 	db	0
  1137  007C17  00                 	db	0
  1138  007C18  00                 	db	0
  1139  007C19  00                 	db	0
  1140  007C1A  FE                 	db	254
  1141  007C1B  FE                 	db	254
  1142  007C1C  06                 	db	6
  1143  007C1D  0C                 	db	12
  1144  007C1E  18                 	db	24
  1145  007C1F  30                 	db	48
  1146  007C20  30                 	db	48
  1147  007C21  60                 	db	96
  1148  007C22  C0                 	db	192
  1149  007C23  FE                 	db	254
  1150  007C24  FE                 	db	254
  1151  007C25  00                 	db	0
  1152  007C26  00                 	db	0
  1153  007C27  00                 	db	0
  1154  007C28  00                 	db	0
  1155  007C29  E0                 	db	224
  1156  007C2A  E0                 	db	224
  1157  007C2B  C0                 	db	192
  1158  007C2C  C0                 	db	192
  1159  007C2D  C0                 	db	192
  1160  007C2E  C0                 	db	192
  1161  007C2F  C0                 	db	192
  1162  007C30  C0                 	db	192
  1163  007C31  C0                 	db	192
  1164  007C32  C0                 	db	192
  1165  007C33  C0                 	db	192
  1166  007C34  C0                 	db	192
  1167  007C35  E0                 	db	224
  1168  007C36  E0                 	db	224
  1169  007C37  00                 	db	0
  1170  007C38  C0                 	db	192
  1171  007C39  C0                 	db	192
  1172  007C3A  C0                 	db	192
  1173  007C3B  60                 	db	96
  1174  007C3C  60                 	db	96
  1175  007C3D  60                 	db	96
  1176  007C3E  60                 	db	96
  1177  007C3F  60                 	db	96
  1178  007C40  30                 	db	48
  1179  007C41  30                 	db	48
  1180  007C42  30                 	db	48
  1181  007C43  00                 	db	0
  1182  007C44  00                 	db	0
  1183  007C45  00                 	db	0
  1184  007C46  00                 	db	0
  1185  007C47  E0                 	db	224
  1186  007C48  E0                 	db	224
  1187  007C49  60                 	db	96
  1188  007C4A  60                 	db	96
  1189  007C4B  60                 	db	96
  1190  007C4C  60                 	db	96
  1191  007C4D  60                 	db	96
  1192  007C4E  60                 	db	96
  1193  007C4F  60                 	db	96
  1194  007C50  60                 	db	96
  1195  007C51  60                 	db	96
  1196  007C52  60                 	db	96
  1197  007C53  E0                 	db	224
  1198  007C54  E0                 	db	224
  1199  007C55  00                 	db	0
  1200  007C56  38                 	db	56
  1201  007C57  38                 	db	56
  1202  007C58  6C                 	db	108
  1203  007C59  6C                 	db	108
  1204  007C5A  6C                 	db	108
  1205  007C5B  C6                 	db	198
  1206  007C5C  00                 	db	0
  1207  007C5D  00                 	db	0
  1208  007C5E  00                 	db	0
  1209  007C5F  00                 	db	0
  1210  007C60  00                 	db	0
  1211  007C61  00                 	db	0
  1212  007C62  00                 	db	0
  1213  007C63  00                 	db	0
  1214  007C64  00                 	db	0
  1215  007C65  00                 	db	0
  1216  007C66  00                 	db	0
  1217  007C67  00                 	db	0
  1218  007C68  00                 	db	0
  1219  007C69  00                 	db	0
  1220  007C6A  00                 	db	0
  1221  007C6B  00                 	db	0
  1222  007C6C  00                 	db	0
  1223  007C6D  00                 	db	0
  1224  007C6E  00                 	db	0
  1225  007C6F  00                 	db	0
  1226  007C70  00                 	db	0
  1227  007C71  FE                 	db	254
  1228  007C72  00                 	db	0
  1229  007C73  00                 	db	0
  1230  007C74  C0                 	db	192
  1231  007C75  60                 	db	96
  1232  007C76  00                 	db	0
  1233  007C77  00                 	db	0
  1234  007C78  00                 	db	0
  1235  007C79  00                 	db	0
  1236  007C7A  00                 	db	0
  1237  007C7B  00                 	db	0
  1238  007C7C  00                 	db	0
  1239  007C7D  00                 	db	0
  1240  007C7E  00                 	db	0
  1241  007C7F  00                 	db	0
  1242  007C80  00                 	db	0
  1243  007C81  00                 	db	0
  1244  007C82  00                 	db	0
  1245  007C83  00                 	db	0
  1246  007C84  00                 	db	0
  1247  007C85  00                 	db	0
  1248  007C86  78                 	db	120
  1249  007C87  FC                 	db	252
  1250  007C88  CC                 	db	204
  1251  007C89  3C                 	db	60
  1252  007C8A  FC                 	db	252
  1253  007C8B  CC                 	db	204
  1254  007C8C  FC                 	db	252
  1255  007C8D  6C                 	db	108
  1256  007C8E  00                 	db	0
  1257  007C8F  00                 	db	0
  1258  007C90  00                 	db	0
  1259  007C91  00                 	db	0
  1260  007C92  C0                 	db	192
  1261  007C93  C0                 	db	192
  1262  007C94  C0                 	db	192
  1263  007C95  F8                 	db	248
  1264  007C96  FC                 	db	252
  1265  007C97  CC                 	db	204
  1266  007C98  CC                 	db	204
  1267  007C99  CC                 	db	204
  1268  007C9A  CC                 	db	204
  1269  007C9B  F8                 	db	248
  1270  007C9C  F8                 	db	248
  1271  007C9D  00                 	db	0
  1272  007C9E  00                 	db	0
  1273  007C9F  00                 	db	0
  1274  007CA0  00                 	db	0
  1275  007CA1  00                 	db	0
  1276  007CA2  00                 	db	0
  1277  007CA3  00                 	db	0
  1278  007CA4  70                 	db	112
  1279  007CA5  78                 	db	120
  1280  007CA6  D8                 	db	216
  1281  007CA7  C0                 	db	192
  1282  007CA8  C0                 	db	192
  1283  007CA9  D8                 	db	216
  1284  007CAA  78                 	db	120
  1285  007CAB  70                 	db	112
  1286  007CAC  00                 	db	0
  1287  007CAD  00                 	db	0
  1288  007CAE  00                 	db	0
  1289  007CAF  00                 	db	0
  1290  007CB0  0C                 	db	12
  1291  007CB1  0C                 	db	12
  1292  007CB2  0C                 	db	12
  1293  007CB3  7C                 	db	124
  1294  007CB4  FC                 	db	252
  1295  007CB5  CC                 	db	204
  1296  007CB6  CC                 	db	204
  1297  007CB7  CC                 	db	204
  1298  007CB8  CC                 	db	204
  1299  007CB9  FC                 	db	252
  1300  007CBA  7C                 	db	124
  1301  007CBB  00                 	db	0
  1302  007CBC  00                 	db	0
  1303  007CBD  00                 	db	0
  1304  007CBE  00                 	db	0
  1305  007CBF  00                 	db	0
  1306  007CC0  00                 	db	0
  1307  007CC1  00                 	db	0
  1308  007CC2  70                 	db	112
  1309  007CC3  F8                 	db	248
  1310  007CC4  D8                 	db	216
  1311  007CC5  F8                 	db	248
  1312  007CC6  C0                 	db	192
  1313  007CC7  D8                 	db	216
  1314  007CC8  F8                 	db	248
  1315  007CC9  70                 	db	112
  1316  007CCA  00                 	db	0
  1317  007CCB  00                 	db	0
  1318  007CCC  00                 	db	0
  1319  007CCD  00                 	db	0
  1320  007CCE  30                 	db	48
  1321  007CCF  70                 	db	112
  1322  007CD0  60                 	db	96
  1323  007CD1  F0                 	db	240
  1324  007CD2  F0                 	db	240
  1325  007CD3  60                 	db	96
  1326  007CD4  60                 	db	96
  1327  007CD5  60                 	db	96
  1328  007CD6  60                 	db	96
  1329  007CD7  60                 	db	96
  1330  007CD8  60                 	db	96
  1331  007CD9  00                 	db	0
  1332  007CDA  00                 	db	0
  1333  007CDB  00                 	db	0
  1334  007CDC  00                 	db	0
  1335  007CDD  00                 	db	0
  1336  007CDE  00                 	db	0
  1337  007CDF  00                 	db	0
  1338  007CE0  6C                 	db	108
  1339  007CE1  FC                 	db	252
  1340  007CE2  CC                 	db	204
  1341  007CE3  CC                 	db	204
  1342  007CE4  CC                 	db	204
  1343  007CE5  CC                 	db	204
  1344  007CE6  FC                 	db	252
  1345  007CE7  6C                 	db	108
  1346  007CE8  0C                 	db	12
  1347  007CE9  CC                 	db	204
  1348  007CEA  78                 	db	120
  1349  007CEB  00                 	db	0
  1350  007CEC  C0                 	db	192
  1351  007CED  C0                 	db	192
  1352  007CEE  C0                 	db	192
  1353  007CEF  D8                 	db	216
  1354  007CF0  FC                 	db	252
  1355  007CF1  CC                 	db	204
  1356  007CF2  CC                 	db	204
  1357  007CF3  CC                 	db	204
  1358  007CF4  CC                 	db	204
  1359  007CF5  CC                 	db	204
  1360  007CF6  CC                 	db	204
  1361  007CF7  00                 	db	0
  1362  007CF8  00                 	db	0
  1363  007CF9  00                 	db	0
  1364  007CFA  00                 	db	0
  1365  007CFB  C0                 	db	192
  1366  007CFC  C0                 	db	192
  1367  007CFD  00                 	db	0
  1368  007CFE  C0                 	db	192
  1369  007CFF  C0                 	db	192
  1370  007D00  C0                 	db	192
  1371  007D01  C0                 	db	192
  1372  007D02  C0                 	db	192
  1373  007D03  C0                 	db	192
  1374  007D04  C0                 	db	192
  1375  007D05  C0                 	db	192
  1376  007D06  00                 	db	0
  1377  007D07  00                 	db	0
  1378  007D08  00                 	db	0
  1379  007D09  00                 	db	0
  1380  007D0A  30                 	db	48
  1381  007D0B  30                 	db	48
  1382  007D0C  00                 	db	0
  1383  007D0D  30                 	db	48
  1384  007D0E  30                 	db	48
  1385  007D0F  30                 	db	48
  1386  007D10  30                 	db	48
  1387  007D11  30                 	db	48
  1388  007D12  30                 	db	48
  1389  007D13  30                 	db	48
  1390  007D14  30                 	db	48
  1391  007D15  30                 	db	48
  1392  007D16  F0                 	db	240
  1393  007D17  E0                 	db	224
  1394  007D18  00                 	db	0
  1395  007D19  C0                 	db	192
  1396  007D1A  C0                 	db	192
  1397  007D1B  C0                 	db	192
  1398  007D1C  CC                 	db	204
  1399  007D1D  D8                 	db	216
  1400  007D1E  F0                 	db	240
  1401  007D1F  F8                 	db	248
  1402  007D20  D8                 	db	216
  1403  007D21  D8                 	db	216
  1404  007D22  CC                 	db	204
  1405  007D23  CC                 	db	204
  1406  007D24  00                 	db	0
  1407  007D25  00                 	db	0
  1408  007D26  00                 	db	0
  1409  007D27  00                 	db	0
  1410  007D28  C0                 	db	192
  1411  007D29  C0                 	db	192
  1412  007D2A  C0                 	db	192
  1413  007D2B  C0                 	db	192
  1414  007D2C  C0                 	db	192
  1415  007D2D  C0                 	db	192
  1416  007D2E  C0                 	db	192
  1417  007D2F  C0                 	db	192
  1418  007D30  C0                 	db	192
  1419  007D31  C0                 	db	192
  1420  007D32  C0                 	db	192
  1421  007D33  00                 	db	0
  1422  007D34  00                 	db	0
  1423  007D35  00                 	db	0
  1424  007D36  00                 	db	0
  1425  007D37  00                 	db	0
  1426  007D38  00                 	db	0
  1427  007D39  00                 	db	0
  1428  007D3A  00                 	db	0
  1429  007D3B  00                 	db	0
  1430  007D3C  00                 	db	0
  1431  007D3D  00                 	db	0
  1432  007D3E  D9                 	db	217
  1433  007D3F  80                 	db	128
  1434  007D40  FF                 	db	255
  1435  007D41  C0                 	db	192
  1436  007D42  CC                 	db	204
  1437  007D43  C0                 	db	192
  1438  007D44  CC                 	db	204
  1439  007D45  C0                 	db	192
  1440  007D46  CC                 	db	204
  1441  007D47  C0                 	db	192
  1442  007D48  CC                 	db	204
  1443  007D49  C0                 	db	192
  1444  007D4A  CC                 	db	204
  1445  007D4B  C0                 	db	192
  1446  007D4C  CC                 	db	204
  1447  007D4D  C0                 	db	192
  1448  007D4E  00                 	db	0
  1449  007D4F  00                 	db	0
  1450  007D50  00                 	db	0
  1451  007D51  00                 	db	0
  1452  007D52  00                 	db	0
  1453  007D53  00                 	db	0
  1454  007D54  00                 	db	0
  1455  007D55  00                 	db	0
  1456  007D56  00                 	db	0
  1457  007D57  00                 	db	0
  1458  007D58  D8                 	db	216
  1459  007D59  FC                 	db	252
  1460  007D5A  CC                 	db	204
  1461  007D5B  CC                 	db	204
  1462  007D5C  CC                 	db	204
  1463  007D5D  CC                 	db	204
  1464  007D5E  CC                 	db	204
  1465  007D5F  CC                 	db	204
  1466  007D60  00                 	db	0
  1467  007D61  00                 	db	0
  1468  007D62  00                 	db	0
  1469  007D63  00                 	db	0
  1470  007D64  00                 	db	0
  1471  007D65  00                 	db	0
  1472  007D66  00                 	db	0
  1473  007D67  78                 	db	120
  1474  007D68  78                 	db	120
  1475  007D69  CC                 	db	204
  1476  007D6A  CC                 	db	204
  1477  007D6B  CC                 	db	204
  1478  007D6C  CC                 	db	204
  1479  007D6D  78                 	db	120
  1480  007D6E  78                 	db	120
  1481  007D6F  00                 	db	0
  1482  007D70  00                 	db	0
  1483  007D71  00                 	db	0
  1484  007D72  00                 	db	0
  1485  007D73  00                 	db	0
  1486  007D74  00                 	db	0
  1487  007D75  00                 	db	0
  1488  007D76  D8                 	db	216
  1489  007D77  FC                 	db	252
  1490  007D78  CC                 	db	204
  1491  007D79  CC                 	db	204
  1492  007D7A  CC                 	db	204
  1493  007D7B  CC                 	db	204
  1494  007D7C  F8                 	db	248
  1495  007D7D  D8                 	db	216
  1496  007D7E  C0                 	db	192
  1497  007D7F  C0                 	db	192
  1498  007D80  C0                 	db	192
  1499  007D81  00                 	db	0
  1500  007D82  00                 	db	0
  1501  007D83  00                 	db	0
  1502  007D84  00                 	db	0
  1503  007D85  6C                 	db	108
  1504  007D86  FC                 	db	252
  1505  007D87  CC                 	db	204
  1506  007D88  CC                 	db	204
  1507  007D89  CC                 	db	204
  1508  007D8A  CC                 	db	204
  1509  007D8B  FC                 	db	252
  1510  007D8C  6C                 	db	108
  1511  007D8D  0C                 	db	12
  1512  007D8E  0C                 	db	12
  1513  007D8F  0C                 	db	12
  1514  007D90  00                 	db	0
  1515  007D91  00                 	db	0
  1516  007D92  00                 	db	0
  1517  007D93  00                 	db	0
  1518  007D94  D0                 	db	208
  1519  007D95  F0                 	db	240
  1520  007D96  C0                 	db	192
  1521  007D97  C0                 	db	192
  1522  007D98  C0                 	db	192
  1523  007D99  C0                 	db	192
  1524  007D9A  C0                 	db	192
  1525  007D9B  C0                 	db	192
  1526  007D9C  00                 	db	0
  1527  007D9D  00                 	db	0
  1528  007D9E  00                 	db	0
  1529  007D9F  00                 	db	0
  1530  007DA0  00                 	db	0
  1531  007DA1  00                 	db	0
  1532  007DA2  00                 	db	0
  1533  007DA3  70                 	db	112
  1534  007DA4  F8                 	db	248
  1535  007DA5  C8                 	db	200
  1536  007DA6  E0                 	db	224
  1537  007DA7  38                 	db	56
  1538  007DA8  98                 	db	152
  1539  007DA9  F8                 	db	248
  1540  007DAA  70                 	db	112
  1541  007DAB  00                 	db	0
  1542  007DAC  00                 	db	0
  1543  007DAD  00                 	db	0
  1544  007DAE  00                 	db	0
  1545  007DAF  20                 	db	32
  1546  007DB0  60                 	db	96
  1547  007DB1  60                 	db	96
  1548  007DB2  F0                 	db	240
  1549  007DB3  F0                 	db	240
  1550  007DB4  60                 	db	96
  1551  007DB5  60                 	db	96
  1552  007DB6  60                 	db	96
  1553  007DB7  60                 	db	96
  1554  007DB8  70                 	db	112
  1555  007DB9  70                 	db	112
  1556  007DBA  00                 	db	0
  1557  007DBB  00                 	db	0
  1558  007DBC  00                 	db	0
  1559  007DBD  00                 	db	0
  1560  007DBE  00                 	db	0
  1561  007DBF  00                 	db	0
  1562  007DC0  00                 	db	0
  1563  007DC1  CC                 	db	204
  1564  007DC2  CC                 	db	204
  1565  007DC3  CC                 	db	204
  1566  007DC4  CC                 	db	204
  1567  007DC5  CC                 	db	204
  1568  007DC6  CC                 	db	204
  1569  007DC7  FC                 	db	252
  1570  007DC8  6C                 	db	108
  1571  007DC9  00                 	db	0
  1572  007DCA  00                 	db	0
  1573  007DCB  00                 	db	0
  1574  007DCC  00                 	db	0
  1575  007DCD  00                 	db	0
  1576  007DCE  00                 	db	0
  1577  007DCF  00                 	db	0
  1578  007DD0  C6                 	db	198
  1579  007DD1  C6                 	db	198
  1580  007DD2  6C                 	db	108
  1581  007DD3  6C                 	db	108
  1582  007DD4  6C                 	db	108
  1583  007DD5  38                 	db	56
  1584  007DD6  38                 	db	56
  1585  007DD7  38                 	db	56
  1586  007DD8  00                 	db	0
  1587  007DD9  00                 	db	0
  1588  007DDA  00                 	db	0
  1589  007DDB  00                 	db	0
  1590  007DDC  00                 	db	0
  1591  007DDD  00                 	db	0
  1592  007DDE  00                 	db	0
  1593  007DDF  00                 	db	0
  1594  007DE0  00                 	db	0
  1595  007DE1  00                 	db	0
  1596  007DE2  00                 	db	0
  1597  007DE3  DD                 	db	221
  1598  007DE4  80                 	db	128
  1599  007DE5  DD                 	db	221
  1600  007DE6  80                 	db	128
  1601  007DE7  DD                 	db	221
  1602  007DE8  80                 	db	128
  1603  007DE9  D5                 	db	213
  1604  007DEA  80                 	db	128
  1605  007DEB  55                 	db	85
  1606  007DEC  00                 	db	0
  1607  007DED  77                 	db	119
  1608  007DEE  00                 	db	0
  1609  007DEF  77                 	db	119
  1610  007DF0  00                 	db	0
  1611  007DF1  77                 	db	119
  1612  007DF2  00                 	db	0
  1613  007DF3  00                 	db	0
  1614  007DF4  00                 	db	0
  1615  007DF5  00                 	db	0
  1616  007DF6  00                 	db	0
  1617  007DF7  00                 	db	0
  1618  007DF8  00                 	db	0
  1619  007DF9  00                 	db	0
  1620  007DFA  00                 	db	0
  1621  007DFB  00                 	db	0
  1622  007DFC  00                 	db	0
  1623  007DFD  CC                 	db	204
  1624  007DFE  78                 	db	120
  1625  007DFF  78                 	db	120
  1626  007E00  30                 	db	48
  1627  007E01  30                 	db	48
  1628  007E02  78                 	db	120
  1629  007E03  78                 	db	120
  1630  007E04  CC                 	db	204
  1631  007E05  00                 	db	0
  1632  007E06  00                 	db	0
  1633  007E07  00                 	db	0
  1634  007E08  00                 	db	0
  1635  007E09  00                 	db	0
  1636  007E0A  00                 	db	0
  1637  007E0B  00                 	db	0
  1638  007E0C  C6                 	db	198
  1639  007E0D  C6                 	db	198
  1640  007E0E  6C                 	db	108
  1641  007E0F  6C                 	db	108
  1642  007E10  6C                 	db	108
  1643  007E11  38                 	db	56
  1644  007E12  38                 	db	56
  1645  007E13  38                 	db	56
  1646  007E14  30                 	db	48
  1647  007E15  F0                 	db	240
  1648  007E16  E0                 	db	224
  1649  007E17  00                 	db	0
  1650  007E18  00                 	db	0
  1651  007E19  00                 	db	0
  1652  007E1A  00                 	db	0
  1653  007E1B  FC                 	db	252
  1654  007E1C  FC                 	db	252
  1655  007E1D  18                 	db	24
  1656  007E1E  30                 	db	48
  1657  007E1F  30                 	db	48
  1658  007E20  60                 	db	96
  1659  007E21  FC                 	db	252
  1660  007E22  FC                 	db	252
  1661  007E23  00                 	db	0
  1662  007E24  00                 	db	0
  1663  007E25  00                 	db	0
  1664  007E26  00                 	db	0
  1665  007E27  30                 	db	48
  1666  007E28  70                 	db	112
  1667  007E29  60                 	db	96
  1668  007E2A  60                 	db	96
  1669  007E2B  60                 	db	96
  1670  007E2C  60                 	db	96
  1671  007E2D  C0                 	db	192
  1672  007E2E  C0                 	db	192
  1673  007E2F  60                 	db	96
  1674  007E30  60                 	db	96
  1675  007E31  60                 	db	96
  1676  007E32  60                 	db	96
  1677  007E33  70                 	db	112
  1678  007E34  30                 	db	48
  1679  007E35  00                 	db	0
  1680  007E36  C0                 	db	192
  1681  007E37  C0                 	db	192
  1682  007E38  C0                 	db	192
  1683  007E39  C0                 	db	192
  1684  007E3A  C0                 	db	192
  1685  007E3B  C0                 	db	192
  1686  007E3C  C0                 	db	192
  1687  007E3D  C0                 	db	192
  1688  007E3E  C0                 	db	192
  1689  007E3F  C0                 	db	192
  1690  007E40  C0                 	db	192
  1691  007E41  C0                 	db	192
  1692  007E42  C0                 	db	192
  1693  007E43  C0                 	db	192
  1694  007E44  00                 	db	0
  1695  007E45  C0                 	db	192
  1696  007E46  E0                 	db	224
  1697  007E47  60                 	db	96
  1698  007E48  60                 	db	96
  1699  007E49  60                 	db	96
  1700  007E4A  60                 	db	96
  1701  007E4B  30                 	db	48
  1702  007E4C  30                 	db	48
  1703  007E4D  60                 	db	96
  1704  007E4E  60                 	db	96
  1705  007E4F  60                 	db	96
  1706  007E50  60                 	db	96
  1707  007E51  E0                 	db	224
  1708  007E52  C0                 	db	192
  1709  007E53  00                 	db	0
  1710  007E54  00                 	db	0
  1711  007E55  00                 	db	0
  1712  007E56  00                 	db	0
  1713  007E57  00                 	db	0
  1714  007E58  E4                 	db	228
  1715  007E59  FC                 	db	252
  1716  007E5A  9C                 	db	156
  1717  007E5B  00                 	db	0
  1718  007E5C  00                 	db	0
  1719  007E5D  00                 	db	0
  1720  007E5E  00                 	db	0
  1721  007E5F  00                 	db	0
  1722  007E60  00                 	db	0
  1723  007E61  00                 	db	0
  1724  007E62                     __end_of_arialNarrow_12ptBitmaps:
  1725                           	callstack 0
  1726  007E62                     _arialNarrow_12ptDescriptors:
  1727                           	callstack 0
  1728  007E62  08                 	db	8
  1729  007E63  0000               	dw	0
  1730  007E65  02                 	db	2
  1731  007E66  000F               	dw	15
  1732  007E68  05                 	db	5
  1733  007E69  001E               	dw	30
  1734  007E6B  07                 	db	7
  1735  007E6C  002D               	dw	45
  1736  007E6E  07                 	db	7
  1737  007E6F  003C               	dw	60
  1738  007E71  0A                 	db	10
  1739  007E72  004B               	dw	75
  1740  007E74  08                 	db	8
  1741  007E75  0069               	dw	105
  1742  007E77  02                 	db	2
  1743  007E78  0078               	dw	120
  1744  007E7A  04                 	db	4
  1745  007E7B  0087               	dw	135
  1746  007E7D  04                 	db	4
  1747  007E7E  0096               	dw	150
  1748  007E80  05                 	db	5
  1749  007E81  00A5               	dw	165
  1750  007E83  06                 	db	6
  1751  007E84  00B4               	dw	180
  1752  007E86  02                 	db	2
  1753  007E87  00C3               	dw	195
  1754  007E89  04                 	db	4
  1755  007E8A  00D2               	dw	210
  1756  007E8C  02                 	db	2
  1757  007E8D  00E1               	dw	225
  1758  007E8F  04                 	db	4
  1759  007E90  00F0               	dw	240
  1760  007E92  06                 	db	6
  1761  007E93  00FF               	dw	255
  1762  007E95  04                 	db	4
  1763  007E96  010E               	dw	270
  1764  007E98  06                 	db	6
  1765  007E99  011D               	dw	285
  1766  007E9B  06                 	db	6
  1767  007E9C  012C               	dw	300
  1768  007E9E  07                 	db	7
  1769  007E9F  013B               	dw	315
  1770  007EA1  06                 	db	6
  1771  007EA2  014A               	dw	330
  1772  007EA4  05                 	db	5
  1773  007EA5  0159               	dw	345
  1774  007EA7  05                 	db	5
  1775  007EA8  0168               	dw	360
  1776  007EAA  06                 	db	6
  1777  007EAB  0177               	dw	375
  1778  007EAD  06                 	db	6
  1779  007EAE  0186               	dw	390
  1780  007EB0  02                 	db	2
  1781  007EB1  0195               	dw	405
  1782  007EB3  02                 	db	2
  1783  007EB4  01A4               	dw	420
  1784  007EB6  06                 	db	6
  1785  007EB7  01B3               	dw	435
  1786  007EB9  06                 	db	6
  1787  007EBA  01C2               	dw	450
  1788  007EBC  06                 	db	6
  1789  007EBD  01D1               	dw	465
  1790  007EBF  06                 	db	6
  1791  007EC0  01E0               	dw	480
  1792  007EC2  0D                 	db	13
  1793  007EC3  01EF               	dw	495
  1794  007EC5  09                 	db	9
  1795  007EC6  020D               	dw	525
  1796  007EC8  07                 	db	7
  1797  007EC9  022B               	dw	555
  1798  007ECB  08                 	db	8
  1799  007ECC  023A               	dw	570
  1800  007ECE  07                 	db	7
  1801  007ECF  0249               	dw	585
  1802  007ED1  07                 	db	7
  1803  007ED2  0258               	dw	600
  1804  007ED4  06                 	db	6
  1805  007ED5  0267               	dw	615
  1806  007ED7  08                 	db	8
  1807  007ED8  0276               	dw	630
  1808  007EDA  07                 	db	7
  1809  007EDB  0285               	dw	645
  1810  007EDD  02                 	db	2
  1811  007EDE  0294               	dw	660
  1812  007EE0  06                 	db	6
  1813  007EE1  02A3               	dw	675
  1814  007EE3  08                 	db	8
  1815  007EE4  02B2               	dw	690
  1816  007EE6  07                 	db	7
  1817  007EE7  02C1               	dw	705
  1818  007EE9  09                 	db	9
  1819  007EEA  02D0               	dw	720
  1820  007EEC  07                 	db	7
  1821  007EED  02EE               	dw	750
  1822  007EEF  08                 	db	8
  1823  007EF0  02FD               	dw	765
  1824  007EF2  07                 	db	7
  1825  007EF3  030C               	dw	780
  1826  007EF5  09                 	db	9
  1827  007EF6  031B               	dw	795
  1828  007EF8  08                 	db	8
  1829  007EF9  0339               	dw	825
  1830  007EFB  07                 	db	7
  1831  007EFC  0348               	dw	840
  1832  007EFE  08                 	db	8
  1833  007EFF  0357               	dw	855
  1834  007F01  07                 	db	7
  1835  007F02  0366               	dw	870
  1836  007F04  09                 	db	9
  1837  007F05  0375               	dw	885
  1838  007F07  0B                 	db	11
  1839  007F08  0393               	dw	915
  1840  007F0A  09                 	db	9
  1841  007F0B  03B1               	dw	945
  1842  007F0D  08                 	db	8
  1843  007F0E  03CF               	dw	975
  1844  007F10  07                 	db	7
  1845  007F11  03DE               	dw	990
  1846  007F13  03                 	db	3
  1847  007F14  03ED               	dw	1005
  1848  007F16  04                 	db	4
  1849  007F17  03FC               	dw	1020
  1850  007F19  03                 	db	3
  1851  007F1A  040B               	dw	1035
  1852  007F1C  07                 	db	7
  1853  007F1D  041A               	dw	1050
  1854  007F1F  07                 	db	7
  1855  007F20  0429               	dw	1065
  1856  007F22  03                 	db	3
  1857  007F23  0438               	dw	1080
  1858  007F25  06                 	db	6
  1859  007F26  0447               	dw	1095
  1860  007F28  06                 	db	6
  1861  007F29  0456               	dw	1110
  1862  007F2B  05                 	db	5
  1863  007F2C  0465               	dw	1125
  1864  007F2E  06                 	db	6
  1865  007F2F  0474               	dw	1140
  1866  007F31  05                 	db	5
  1867  007F32  0483               	dw	1155
  1868  007F34  04                 	db	4
  1869  007F35  0492               	dw	1170
  1870  007F37  06                 	db	6
  1871  007F38  04A1               	dw	1185
  1872  007F3A  06                 	db	6
  1873  007F3B  04B0               	dw	1200
  1874  007F3D  02                 	db	2
  1875  007F3E  04BF               	dw	1215
  1876  007F40  04                 	db	4
  1877  007F41  04CE               	dw	1230
  1878  007F43  06                 	db	6
  1879  007F44  04DD               	dw	1245
  1880  007F46  02                 	db	2
  1881  007F47  04EC               	dw	1260
  1882  007F49  0A                 	db	10
  1883  007F4A  04FB               	dw	1275
  1884  007F4C  06                 	db	6
  1885  007F4D  0519               	dw	1305
  1886  007F4F  06                 	db	6
  1887  007F50  0528               	dw	1320
  1888  007F52  06                 	db	6
  1889  007F53  0537               	dw	1335
  1890  007F55  06                 	db	6
  1891  007F56  0546               	dw	1350
  1892  007F58  04                 	db	4
  1893  007F59  0555               	dw	1365
  1894  007F5B  05                 	db	5
  1895  007F5C  0564               	dw	1380
  1896  007F5E  04                 	db	4
  1897  007F5F  0573               	dw	1395
  1898  007F61  06                 	db	6
  1899  007F62  0582               	dw	1410
  1900  007F64  07                 	db	7
  1901  007F65  0591               	dw	1425
  1902  007F67  09                 	db	9
  1903  007F68  05A0               	dw	1440
  1904  007F6A  06                 	db	6
  1905  007F6B  05BE               	dw	1470
  1906  007F6D  07                 	db	7
  1907  007F6E  05CD               	dw	1485
  1908  007F70  06                 	db	6
  1909  007F71  05DC               	dw	1500
  1910  007F73  04                 	db	4
  1911  007F74  05EB               	dw	1515
  1912  007F76  02                 	db	2
  1913  007F77  05FA               	dw	1530
  1914  007F79  04                 	db	4
  1915  007F7A  0609               	dw	1545
  1916  007F7C  06                 	db	6
  1917  007F7D  0618               	dw	1560
  1918  007F7F                     __end_of_arialNarrow_12ptDescriptors:
  1919                           	callstack 0
  1920  007F7F                     _arialNarrow_12ptFontInfo:
  1921                           	callstack 0
  1922  007F7F  0F                 	db	15
  1923  007F80  20                 	db	32
  1924  007F81  7E                 	db	126
  1925  007F82  62                 	db	low _arialNarrow_12ptDescriptors
  1926  007F83  7E                 	db	high _arialNarrow_12ptDescriptors
  1927  007F84  3B                 	db	low _arialNarrow_12ptBitmaps
  1928  007F85  78                 	db	high _arialNarrow_12ptBitmaps
  1929  007F86                     __end_of_arialNarrow_12ptFontInfo:
  1930                           	callstack 0
  1931  0000                     _ANSB2	set	31178
  1932  0000                     _ANSB1	set	31177
  1933  0000                     _WPUB	set	3937
  1934  0000                     _PORTBbits	set	3969
  1935  0000                     _ADRESL	set	4035
  1936  0000                     _ADRESH	set	4036
  1937  0000                     _ADCON0	set	4034
  1938  0000                     _TRISA	set	3986
  1939  0000                     _PORTA	set	3968
  1940  0000                     _ADCON2	set	4032
  1941  0000                     _T2CONbits	set	4026
  1942  0000                     _CCPR2L	set	3943
  1943  0000                     _CCP2CONbits	set	3942
  1944  0000                     _PR2	set	4027
  1945  0000                     _TMR0L	set	4054
  1946  0000                     _TMR0H	set	4055
  1947  0000                     _T0CON	set	4053
  1948  0000                     _OSCCON	set	4051
  1949  0000                     _TMR0IF	set	32658
  1950  0000                     _LATB4	set	31828
  1951  0000                     _LATB1	set	31825
  1952  0000                     _INT1IF	set	32640
  1953  0000                     _TRISB4	set	31900
  1954  0000                     _LATB3	set	31827
  1955  0000                     _TRISB3	set	31899
  1956  0000                     _RBPU	set	32655
  1957  0000                     _TRISB1	set	31897
  1958  0000                     _LATB2	set	31826
  1959  0000                     _TRISB2	set	31898
  1960  0000                     _LATC2	set	31834
  1961  0000                     _LATC5	set	31837
  1962  0000                     _TRISC4	set	31908
  1963  0000                     _TRISC3	set	31907
  1964  0000                     _TRISC2	set	31906
  1965  0000                     _TRISC5	set	31909
  1966  0000                     _LATC3	set	31835
  1967  0000                     _LATC4	set	31836
  1968  0000                     _TMR2IF	set	31985
  1969  0000                     _TRISC1	set	31905
  1970  0000                     _TMR0IE	set	32661
  1971  0000                     _LATC0	set	31832
  1972  0000                     _TRISC0	set	31904
  1973  0000                     _INTEDG1	set	32653
  1974  0000                     _INT1IE	set	32643
  1975  0000                     _GIE	set	32663
  1976  0000                     _PLLEN	set	31966
  1977  007F86                     STR_14:
  1978  007F86  50                 	db	80	;'P'
  1979  007F87  4C                 	db	76	;'L'
  1980  007F88  41                 	db	65	;'A'
  1981  007F89  59                 	db	89	;'Y'
  1982  007F8A  45                 	db	69	;'E'
  1983  007F8B  52                 	db	82	;'R'
  1984  007F8C  20                 	db	32
  1985  007F8D  31                 	db	49	;'1'
  1986  007F8E  20                 	db	32
  1987  007F8F  57                 	db	87	;'W'
  1988  007F90  49                 	db	73	;'I'
  1989  007F91  4E                 	db	78	;'N'
  1990  007F92  00                 	db	0
  1991  007F93                     STR_13:
  1992  007F93  50                 	db	80	;'P'
  1993  007F94  4C                 	db	76	;'L'
  1994  007F95  41                 	db	65	;'A'
  1995  007F96  59                 	db	89	;'Y'
  1996  007F97  45                 	db	69	;'E'
  1997  007F98  52                 	db	82	;'R'
  1998  007F99  20                 	db	32
  1999  007F9A  32                 	db	50	;'2'
  2000  007F9B  20                 	db	32
  2001  007F9C  57                 	db	87	;'W'
  2002  007F9D  49                 	db	73	;'I'
  2003  007F9E  4E                 	db	78	;'N'
  2004  007F9F  00                 	db	0
  2005  007FA0                     STR_12:
  2006  007FA0  50                 	db	80	;'P'
  2007  007FA1  41                 	db	65	;'A'
  2008  007FA2  52                 	db	82	;'R'
  2009  007FA3  41                 	db	65	;'A'
  2010  007FA4  4D                 	db	77	;'M'
  2011  007FA5  45                 	db	69	;'E'
  2012  007FA6  54                 	db	84	;'T'
  2013  007FA7  45                 	db	69	;'E'
  2014  007FA8  52                 	db	82	;'R'
  2015  007FA9  53                 	db	83	;'S'
  2016  007FAA  00                 	db	0
  2017  007FAB                     STR_4:
  2018  007FAB  50                 	db	80	;'P'
  2019  007FAC  61                 	db	97	;'a'
  2020  007FAD  72                 	db	114	;'r'
  2021  007FAE  61                 	db	97	;'a'
  2022  007FAF  6D                 	db	109	;'m'
  2023  007FB0  65                 	db	101	;'e'
  2024  007FB1  74                 	db	116	;'t'
  2025  007FB2  72                 	db	114	;'r'
  2026  007FB3  65                 	db	101	;'e'
  2027  007FB4  73                 	db	115	;'s'
  2028  007FB5  00                 	db	0
  2029  007FB6                     STR_1:
  2030  007FB6  4D                 	db	77	;'M'
  2031  007FB7  65                 	db	101	;'e'
  2032  007FB8  6E                 	db	110	;'n'
  2033  007FB9  75                 	db	117	;'u'
  2034  007FBA  53                 	db	83	;'S'
  2035  007FBB  74                 	db	116	;'t'
  2036  007FBC  61                 	db	97	;'a'
  2037  007FBD  72                 	db	114	;'r'
  2038  007FBE  74                 	db	116	;'t'
  2039  007FBF  00                 	db	0
  2040  007FC0                     STR_10:
  2041  007FC0  4E                 	db	78	;'N'
  2042  007FC1  65                 	db	101	;'e'
  2043  007FC2  77                 	db	119	;'w'
  2044  007FC3  20                 	db	32
  2045  007FC4  47                 	db	71	;'G'
  2046  007FC5  61                 	db	97	;'a'
  2047  007FC6  6D                 	db	109	;'m'
  2048  007FC7  65                 	db	101	;'e'
  2049  007FC8  00                 	db	0
  2050  007FC9                     STR_5:
  2051  007FC9  31                 	db	49	;'1'
  2052  007FCA  20                 	db	32
  2053  007FCB  50                 	db	80	;'P'
  2054  007FCC  6C                 	db	108	;'l'
  2055  007FCD  61                 	db	97	;'a'
  2056  007FCE  79                 	db	121	;'y'
  2057  007FCF  65                 	db	101	;'e'
  2058  007FD0  72                 	db	114	;'r'
  2059  007FD1  00                 	db	0
  2060  007FD2                     STR_6:
  2061  007FD2  32                 	db	50	;'2'
  2062  007FD3  20                 	db	32
  2063  007FD4  50                 	db	80	;'P'
  2064  007FD5  6C                 	db	108	;'l'
  2065  007FD6  61                 	db	97	;'a'
  2066  007FD7  79                 	db	121	;'y'
  2067  007FD8  65                 	db	101	;'e'
  2068  007FD9  72                 	db	114	;'r'
  2069  007FDA  00                 	db	0
  2070  007FDB                     STR_11:
  2071  007FDB  57                 	db	87	;'W'
  2072  007FDC  45                 	db	69	;'E'
  2073  007FDD  4C                 	db	76	;'L'
  2074  007FDE  43                 	db	67	;'C'
  2075  007FDF  4F                 	db	79	;'O'
  2076  007FE0  4D                 	db	77	;'M'
  2077  007FE1  45                 	db	69	;'E'
  2078  007FE2  00                 	db	0
  2079  007FE3                     STR_7:
  2080  007FE3  51                 	db	81	;'Q'
  2081  007FE4  55                 	db	85	;'U'
  2082  007FE5  49                 	db	73	;'I'
  2083  007FE6  54                 	db	84	;'T'
  2084  007FE7  54                 	db	84	;'T'
  2085  007FE8  45                 	db	69	;'E'
  2086  007FE9  52                 	db	82	;'R'
  2087  007FEA  00                 	db	0
  2088  007FEB                     STR_15:
  2089  007FEB  58                 	db	88	;'X'
  2090  007FEC  3A                 	db	58	;':'
  2091  007FED  20                 	db	32
  2092  007FEE  25                 	db	37
  2093  007FEF  64                 	db	100	;'d'
  2094  007FF0  00                 	db	0
  2095  007FF1                     STR_16:
  2096  007FF1  59                 	db	89	;'Y'
  2097  007FF2  3A                 	db	58	;':'
  2098  007FF3  20                 	db	32
  2099  007FF4  25                 	db	37
  2100  007FF5  64                 	db	100	;'d'
  2101  007FF6  00                 	db	0
  2102  007FF7                     STR_8:
  2103  007FF7  3C                 	db	60	;'<'
  2104  007FF8  2D                 	db	45
  2105  007FF9  2D                 	db	45
  2106  007FFA  00                 	db	0
  2107  007FFB                     STR_9:
  2108  007FFB  2D                 	db	45
  2109  007FFC  2D                 	db	45
  2110  007FFD  3E                 	db	62	;'>'
  2111  007FFE  00                 	db	0
  2112  007FFF  00                 	db	0	; dummy byte at the end
  2113  0000                     
  2114                           ; #config settings
  2115                           
  2116                           	psect	cinit
  2117  0061B8                     __pcinit:
  2118                           	callstack 0
  2119  0061B8                     start_initialization:
  2120                           	callstack 0
  2121  0061B8                     __initialization:
  2122                           	callstack 0
  2123                           
  2124                           ; Clear objects allocated to BANK1 (239 bytes)
  2125  0061B8  EE01  F000         	lfsr	0,__pbssBANK1
  2126  0061BC  0EEF               	movlw	239
  2127  0061BE                     clear_0:
  2128  0061BE  6AEE               	clrf	postinc0,c
  2129  0061C0  06E8               	decf	wreg,f,c
  2130  0061C2  E1FD               	bnz	clear_0
  2131                           
  2132                           ; Clear objects allocated to BANK0 (75 bytes)
  2133  0061C4  EE00  F0B5         	lfsr	0,__pbssBANK0
  2134  0061C8  0E4B               	movlw	75
  2135  0061CA                     clear_1:
  2136  0061CA  6AEE               	clrf	postinc0,c
  2137  0061CC  06E8               	decf	wreg,f,c
  2138  0061CE  E1FD               	bnz	clear_1
  2139                           
  2140                           ; Clear objects allocated to COMRAM (7 bytes)
  2141  0061D0  EE00  F047         	lfsr	0,__pbssCOMRAM
  2142  0061D4  0E07               	movlw	7
  2143  0061D6                     clear_2:
  2144  0061D6  6AEE               	clrf	postinc0,c
  2145  0061D8  06E8               	decf	wreg,f,c
  2146  0061DA  E1FD               	bnz	clear_2
  2147  0061DC                     end_of_initialization:
  2148                           	callstack 0
  2149  0061DC                     __end_of__initialization:
  2150                           	callstack 0
  2151  0061DC  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2152  0061DE  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2153  0061E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2154  0061E2  6EF8               	movwf	tblptru,c
  2155  0061E4  0100               	movlb	0
  2156  0061E6  EFD5  F031         	goto	_main	;jump to C main() function
  2157                           
  2158                           	psect	bssCOMRAM
  2159  000047                     __pbssCOMRAM:
  2160                           	callstack 0
  2161  000047                     _width:
  2162                           	callstack 0
  2163  000047                     	ds	2
  2164  000049                     _prec:
  2165                           	callstack 0
  2166  000049                     	ds	2
  2167  00004B                     _flags:
  2168                           	callstack 0
  2169  00004B                     	ds	2
  2170  00004D                     _gameStateMachine:
  2171                           	callstack 0
  2172  00004D                     	ds	1
  2173                           
  2174                           	psect	bssBANK0
  2175  0000B5                     __pbssBANK0:
  2176                           	callstack 0
  2177  0000B5                     _theXF:
  2178                           	callstack 0
  2179  0000B5                     	ds	38
  2180  0000DB                     _nout:
  2181                           	callstack 0
  2182  0000DB                     	ds	2
  2183  0000DD                     _displayState:
  2184                           	callstack 0
  2185  0000DD                     	ds	1
  2186  0000DE                     _touchScreenState:
  2187                           	callstack 0
  2188  0000DE                     	ds	1
  2189  0000DF                     _sleepState:
  2190                           	callstack 0
  2191  0000DF                     	ds	1
  2192  0000E0                     _dbuf:
  2193                           	callstack 0
  2194  0000E0                     	ds	32
  2195                           
  2196                           	psect	bssBANK1
  2197  000100                     __pbssBANK1:
  2198                           	callstack 0
  2199  000100                     _g1:
  2200                           	callstack 0
  2201  000100                     	ds	239
  2202                           
  2203                           	psect	cstackBANK1
  2204  0001EF                     __pcstackBANK1:
  2205                           	callstack 0
  2206  0001EF                     Factory_exec@ev:
  2207                           	callstack 0
  2208                           
  2209                           ; 1 bytes @ 0x0
  2210  0001EF                     	ds	1
  2211                           
  2212                           	psect	cstackBANK0
  2213  000060                     __pcstackBANK0:
  2214                           	callstack 0
  2215  000060                     _dtoa$4924:
  2216                           	callstack 0
  2217  000060                     LCD_Bitmap@bfOffBits:
  2218                           	callstack 0
  2219                           
  2220                           ; 4 bytes @ 0x0
  2221  000060                     	ds	2
  2222  000062                     dtoa@p:
  2223                           	callstack 0
  2224                           
  2225                           ; 2 bytes @ 0x2
  2226  000062                     	ds	2
  2227  000064                     LCD_Bitmap@endOfImage:
  2228                           	callstack 0
  2229  000064                     dtoa@w:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x4
  2233  000064                     	ds	1
  2234  000065                     LCD_Bitmap@jumpCount:
  2235                           	callstack 0
  2236                           
  2237                           ; 2 bytes @ 0x5
  2238  000065                     	ds	1
  2239  000066                     dtoa@s:
  2240                           	callstack 0
  2241                           
  2242                           ; 2 bytes @ 0x6
  2243  000066                     	ds	1
  2244  000067                     LCD_Bitmap@curYPos:
  2245                           	callstack 0
  2246                           
  2247                           ; 2 bytes @ 0x7
  2248  000067                     	ds	1
  2249  000068                     dtoa@n:
  2250                           	callstack 0
  2251                           
  2252                           ; 8 bytes @ 0x8
  2253  000068                     	ds	1
  2254  000069                     LCD_Bitmap@colorTablePtr:
  2255                           	callstack 0
  2256                           
  2257                           ; 2 bytes @ 0x9
  2258  000069                     	ds	2
  2259  00006B                     LCD_Bitmap@biHeight:
  2260                           	callstack 0
  2261                           
  2262                           ; 2 bytes @ 0xB
  2263  00006B                     	ds	2
  2264  00006D                     LCD_Bitmap@color:
  2265                           	callstack 0
  2266                           
  2267                           ; 2 bytes @ 0xD
  2268  00006D                     	ds	2
  2269  00006F                     LCD_Bitmap@curXPos:
  2270                           	callstack 0
  2271                           
  2272                           ; 2 bytes @ 0xF
  2273  00006F                     	ds	1
  2274  000070                     dtoa@i:
  2275                           	callstack 0
  2276                           
  2277                           ; 2 bytes @ 0x10
  2278  000070                     	ds	1
  2279  000071                     LCD_Bitmap@strPtr:
  2280                           	callstack 0
  2281                           
  2282                           ; 2 bytes @ 0x11
  2283  000071                     	ds	1
  2284  000072                     vfpfcnvrt@ll:
  2285                           	callstack 0
  2286                           
  2287                           ; 8 bytes @ 0x12
  2288  000072                     	ds	1
  2289  000073                     LCD_Bitmap@newY:
  2290                           	callstack 0
  2291                           
  2292                           ; 2 bytes @ 0x13
  2293  000073                     	ds	2
  2294  000075                     LCD_Bitmap@pixelCount:
  2295                           	callstack 0
  2296                           
  2297                           ; 1 bytes @ 0x15
  2298  000075                     	ds	1
  2299  000076                     LCD_Bitmap@biWidth:
  2300                           	callstack 0
  2301                           
  2302                           ; 2 bytes @ 0x16
  2303  000076                     	ds	2
  2304  000078                     LCD_Bitmap@jumpColor:
  2305                           	callstack 0
  2306                           
  2307                           ; 2 bytes @ 0x18
  2308  000078                     	ds	2
  2309  00007A                     ?_vfprintf:
  2310                           	callstack 0
  2311  00007A                     LCD_Bitmap@i:
  2312                           	callstack 0
  2313  00007A                     vfprintf@fp:
  2314                           	callstack 0
  2315                           
  2316                           ; 2 bytes @ 0x1A
  2317  00007A                     	ds	2
  2318  00007C                     LCD_ButtonDraw@button:
  2319                           	callstack 0
  2320  00007C                     vfprintf@fmt:
  2321                           	callstack 0
  2322                           
  2323                           ; 2 bytes @ 0x1C
  2324  00007C                     	ds	2
  2325  00007E                     ??_LCD_ButtonDraw:
  2326  00007E                     vfprintf@ap:
  2327                           	callstack 0
  2328                           
  2329                           ; 2 bytes @ 0x1E
  2330  00007E                     	ds	2
  2331  000080                     vfprintf@cfmt:
  2332                           	callstack 0
  2333                           
  2334                           ; 2 bytes @ 0x20
  2335  000080                     	ds	2
  2336  000082                     ?_sprintf:
  2337                           	callstack 0
  2338  000082                     sprintf@s:
  2339                           	callstack 0
  2340                           
  2341                           ; 2 bytes @ 0x22
  2342  000082                     	ds	2
  2343  000084                     sprintf@fmt:
  2344                           	callstack 0
  2345                           
  2346                           ; 2 bytes @ 0x24
  2347  000084                     	ds	4
  2348  000088                     sprintf@ap:
  2349                           	callstack 0
  2350                           
  2351                           ; 2 bytes @ 0x28
  2352  000088                     	ds	2
  2353  00008A                     LCD_ButtonDraw@tempChar:
  2354                           	callstack 0
  2355  00008A                     sprintf@f:
  2356                           	callstack 0
  2357                           
  2358                           ; 6 bytes @ 0x2A
  2359  00008A                     	ds	1
  2360  00008B                     LCD_ButtonDraw@width:
  2361                           	callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x2B
  2364  00008B                     	ds	2
  2365  00008D                     LCD_ButtonDraw@x1:
  2366                           	callstack 0
  2367                           
  2368                           ; 2 bytes @ 0x2D
  2369  00008D                     	ds	2
  2370  00008F                     LCD_ButtonDraw@x2:
  2371                           	callstack 0
  2372                           
  2373                           ; 2 bytes @ 0x2F
  2374  00008F                     	ds	1
  2375  000090                     Score_draw@s:
  2376                           	callstack 0
  2377  000090                     touchScreenController@g:
  2378                           	callstack 0
  2379                           
  2380                           ; 2 bytes @ 0x30
  2381  000090                     	ds	1
  2382  000091                     LCD_ButtonDraw@y1:
  2383                           	callstack 0
  2384                           
  2385                           ; 2 bytes @ 0x31
  2386  000091                     	ds	1
  2387  000092                     ??_touchScreenController:
  2388  000092                     Menu_inGameDraw@g:
  2389                           	callstack 0
  2390                           
  2391                           ; 2 bytes @ 0x32
  2392  000092                     	ds	1
  2393  000093                     LCD_ButtonDraw@y2:
  2394                           	callstack 0
  2395                           
  2396                           ; 2 bytes @ 0x33
  2397  000093                     	ds	2
  2398  000095                     LCD_ButtonDraw@xText:
  2399                           	callstack 0
  2400                           
  2401                           ; 2 bytes @ 0x35
  2402  000095                     	ds	2
  2403  000097                     LCD_ButtonDraw@yText:
  2404                           	callstack 0
  2405                           
  2406                           ; 2 bytes @ 0x37
  2407  000097                     	ds	1
  2408  000098                     touchScreenController@s:
  2409                           	callstack 0
  2410                           
  2411                           ; 20 bytes @ 0x38
  2412  000098                     	ds	1
  2413  000099                     LCD_ButtonDraw@i:
  2414                           	callstack 0
  2415                           
  2416                           ; 1 bytes @ 0x39
  2417  000099                     	ds	1
  2418  00009A                     LCD_ButtonDraw@bmpPtr:
  2419                           	callstack 0
  2420                           
  2421                           ; 2 bytes @ 0x3A
  2422  00009A                     	ds	2
  2423  00009C                     Menu_welcomeDraw@g:
  2424                           	callstack 0
  2425  00009C                     Menu_parametersDraw@g:
  2426                           	callstack 0
  2427  00009C                     Menu_endGame@g:
  2428                           	callstack 0
  2429                           
  2430                           ; 2 bytes @ 0x3C
  2431  00009C                     	ds	2
  2432  00009E                     displayController@g:
  2433                           	callstack 0
  2434                           
  2435                           ; 2 bytes @ 0x3E
  2436  00009E                     	ds	2
  2437  0000A0                     displayController@ev:
  2438                           	callstack 0
  2439                           
  2440                           ; 1 bytes @ 0x40
  2441  0000A0                     	ds	1
  2442  0000A1                     ??_displayController:
  2443                           
  2444                           ; 1 bytes @ 0x41
  2445  0000A1                     	ds	2
  2446  0000A3                     displayInit@g:
  2447                           	callstack 0
  2448  0000A3                     displaySM@g:
  2449                           	callstack 0
  2450                           
  2451                           ; 2 bytes @ 0x43
  2452  0000A3                     	ds	2
  2453  0000A5                     ??_displaySM:
  2454  0000A5                     sleepInit@g:
  2455                           	callstack 0
  2456                           
  2457                           ; 2 bytes @ 0x45
  2458  0000A5                     	ds	2
  2459  0000A7                     ??_Factory_init:
  2460  0000A7                     displaySM@ev:
  2461                           	callstack 0
  2462                           
  2463                           ; 1 bytes @ 0x47
  2464  0000A7                     	ds	5
  2465  0000AC                     touchScreenController@valueY:
  2466                           	callstack 0
  2467                           
  2468                           ; 2 bytes @ 0x4C
  2469  0000AC                     	ds	2
  2470  0000AE                     touchScreenController@valueX:
  2471                           	callstack 0
  2472                           
  2473                           ; 2 bytes @ 0x4E
  2474  0000AE                     	ds	2
  2475  0000B0                     touchScreenSM@g:
  2476                           	callstack 0
  2477                           
  2478                           ; 2 bytes @ 0x50
  2479  0000B0                     	ds	2
  2480  0000B2                     ??_touchScreenSM:
  2481                           
  2482                           ; 1 bytes @ 0x52
  2483  0000B2                     	ds	2
  2484  0000B4                     touchScreenSM@ev:
  2485                           	callstack 0
  2486                           
  2487                           ; 1 bytes @ 0x54
  2488  0000B4                     	ds	1
  2489                           
  2490                           	psect	cstackCOMRAM
  2491  000001                     __pcstackCOMRAM:
  2492                           	callstack 0
  2493  000001                     ?i2___wmul:
  2494                           	callstack 0
  2495  000001                     ?i2___awmod:
  2496                           	callstack 0
  2497  000001                     i2ENTERCRITICAL@inISR:
  2498                           	callstack 0
  2499  000001                     i2LEAVECRITICAL@inISR:
  2500                           	callstack 0
  2501  000001                     i2___wmul@multiplier:
  2502                           	callstack 0
  2503  000001                     i2___awmod@dividend:
  2504                           	callstack 0
  2505                           
  2506                           ; 2 bytes @ 0x0
  2507  000001                     	ds	1
  2508  000002                     XF_unscheduleTimer@inISR:
  2509                           	callstack 0
  2510                           
  2511                           ; 1 bytes @ 0x1
  2512  000002                     	ds	1
  2513  000003                     XF_unscheduleTimer@id:
  2514                           	callstack 0
  2515  000003                     i2___wmul@multiplicand:
  2516                           	callstack 0
  2517  000003                     i2___awmod@divisor:
  2518                           	callstack 0
  2519                           
  2520                           ; 2 bytes @ 0x2
  2521  000003                     	ds	2
  2522  000005                     i2___awmod@counter:
  2523                           	callstack 0
  2524  000005                     i2___wmul@product:
  2525                           	callstack 0
  2526                           
  2527                           ; 2 bytes @ 0x4
  2528  000005                     	ds	1
  2529  000006                     i2___awmod@sign:
  2530                           	callstack 0
  2531                           
  2532                           ; 1 bytes @ 0x5
  2533  000006                     	ds	1
  2534  000007                     i2XF_pushEvent@inISR:
  2535                           	callstack 0
  2536                           
  2537                           ; 1 bytes @ 0x6
  2538  000007                     	ds	1
  2539  000008                     i2XF_pushEvent@ev:
  2540                           	callstack 0
  2541                           
  2542                           ; 1 bytes @ 0x7
  2543  000008                     	ds	1
  2544  000009                     i2XF_pushEvent@temp:
  2545                           	callstack 0
  2546                           
  2547                           ; 1 bytes @ 0x8
  2548  000009                     	ds	1
  2549  00000A                     
  2550                           ; 1 bytes @ 0x9
  2551  00000A                     	ds	2
  2552  00000C                     XF_decrementAndQueueTimers@i:
  2553                           	callstack 0
  2554                           
  2555                           ; 2 bytes @ 0xB
  2556  00000C                     	ds	2
  2557  00000E                     ??_isr:
  2558                           
  2559                           ; 1 bytes @ 0xD
  2560  00000E                     	ds	4
  2561  000012                     ??_LCD_Lowlevel_Init:
  2562  000012                     ??_sleepController:
  2563  000012                     ?_LCD_Read:
  2564                           	callstack 0
  2565  000012                     ?_strlen:
  2566                           	callstack 0
  2567  000012                     ?_RGB2LCD:
  2568                           	callstack 0
  2569  000012                     ?___awdiv:
  2570                           	callstack 0
  2571  000012                     ?___awmod:
  2572                           	callstack 0
  2573  000012                     ?___lwmod:
  2574                           	callstack 0
  2575  000012                     ?___xxtofl:
  2576                           	callstack 0
  2577  000012                     ?___aodiv:
  2578                           	callstack 0
  2579  000012                     ?___aomod:
  2580                           	callstack 0
  2581  000012                     configMeasure@channel:
  2582                           	callstack 0
  2583  000012                     ENTERCRITICAL@inISR:
  2584                           	callstack 0
  2585  000012                     LEAVECRITICAL@inISR:
  2586                           	callstack 0
  2587  000012                     Ball_init@b:
  2588                           	callstack 0
  2589  000012                     Ball_Update@b:
  2590                           	callstack 0
  2591  000012                     Paddle_init@p:
  2592                           	callstack 0
  2593  000012                     Paddle_addX@p:
  2594                           	callstack 0
  2595  000012                     Score_init@s:
  2596                           	callstack 0
  2597  000012                     GameParameters_setBackLight@s:
  2598                           	callstack 0
  2599  000012                     GameParameters_resetPos@s:
  2600                           	callstack 0
  2601  000012                     GameParameters_setX@s:
  2602                           	callstack 0
  2603  000012                     GameParameters_setY@s:
  2604                           	callstack 0
  2605  000012                     LCD_Fill@color:
  2606                           	callstack 0
  2607  000012                     LCD_SliderCreate@posX:
  2608                           	callstack 0
  2609  000012                     LCD_ButtonCreate@posX:
  2610                           	callstack 0
  2611  000012                     LCD_InButton@button:
  2612                           	callstack 0
  2613  000012                     LCD_InSlider@slider:
  2614                           	callstack 0
  2615  000012                     LCD_DrawRect@posX1:
  2616                           	callstack 0
  2617  000012                     RGB2LCD@colorTableEntry:
  2618                           	callstack 0
  2619  000012                     LCD_Read@posX:
  2620                           	callstack 0
  2621  000012                     ___awdiv@dividend:
  2622                           	callstack 0
  2623  000012                     ___awmod@dividend:
  2624                           	callstack 0
  2625  000012                     ___lwmod@dividend:
  2626                           	callstack 0
  2627  000012                     fputc@c:
  2628                           	callstack 0
  2629  000012                     strlen@s:
  2630                           	callstack 0
  2631  000012                     ___xxtofl@val:
  2632                           	callstack 0
  2633  000012                     ___aodiv@dividend:
  2634                           	callstack 0
  2635  000012                     ___aomod@dividend:
  2636                           	callstack 0
  2637                           
  2638                           ; 8 bytes @ 0x11
  2639  000012                     	ds	1
  2640  000013                     XF_scheduleTimer@tm:
  2641                           	callstack 0
  2642  000013                     LCD_Lowlevel_Init@i:
  2643                           	callstack 0
  2644                           
  2645                           ; 4 bytes @ 0x12
  2646  000013                     	ds	1
  2647  000014                     ??_Ball_Update:
  2648  000014                     ??_RGB2LCD:
  2649  000014                     LCD_Fill@colorH:
  2650                           	callstack 0
  2651  000014                     Paddle_init@team:
  2652                           	callstack 0
  2653  000014                     Paddle_addX@value:
  2654                           	callstack 0
  2655  000014                     GameParameters_setBackLight@value:
  2656                           	callstack 0
  2657  000014                     GameParameters_setX@value:
  2658                           	callstack 0
  2659  000014                     GameParameters_setY@value:
  2660                           	callstack 0
  2661  000014                     LCD_SliderCreate@posY:
  2662                           	callstack 0
  2663  000014                     LCD_ButtonCreate@posY:
  2664                           	callstack 0
  2665  000014                     LCD_InButton@posX:
  2666                           	callstack 0
  2667  000014                     LCD_InSlider@posX:
  2668                           	callstack 0
  2669  000014                     LCD_DrawRect@posY1:
  2670                           	callstack 0
  2671  000014                     LCD_Read@posY:
  2672                           	callstack 0
  2673  000014                     ___awdiv@divisor:
  2674                           	callstack 0
  2675  000014                     ___awmod@divisor:
  2676                           	callstack 0
  2677  000014                     ___lwmod@divisor:
  2678                           	callstack 0
  2679  000014                     fputc@fp:
  2680                           	callstack 0
  2681  000014                     strlen@a:
  2682                           	callstack 0
  2683                           
  2684                           ; 2 bytes @ 0x13
  2685  000014                     	ds	1
  2686  000015                     LCD_Fill@colorL:
  2687                           	callstack 0
  2688  000015                     XF_scheduleTimer@ev:
  2689                           	callstack 0
  2690                           
  2691                           ; 1 bytes @ 0x14
  2692  000015                     	ds	1
  2693  000016                     ??_LCD_Read:
  2694  000016                     ??_fputc:
  2695  000016                     ??___xxtofl:
  2696  000016                     XF_scheduleTimer@inISR:
  2697                           	callstack 0
  2698  000016                     ___awdiv@counter:
  2699                           	callstack 0
  2700  000016                     ___awmod@counter:
  2701                           	callstack 0
  2702  000016                     ___lwmod@counter:
  2703                           	callstack 0
  2704  000016                     Paddle_addX@add:
  2705                           	callstack 0
  2706  000016                     LCD_Fill@column:
  2707                           	callstack 0
  2708  000016                     LCD_SliderCreate@width:
  2709                           	callstack 0
  2710  000016                     LCD_ButtonCreate@width:
  2711                           	callstack 0
  2712  000016                     LCD_InButton@posY:
  2713                           	callstack 0
  2714  000016                     LCD_InSlider@posY:
  2715                           	callstack 0
  2716  000016                     LCD_DrawRect@posX2:
  2717                           	callstack 0
  2718                           
  2719                           ; 2 bytes @ 0x15
  2720  000016                     	ds	1
  2721  000017                     ??_LCD_Init:
  2722  000017                     XF_scheduleTimer@i:
  2723                           	callstack 0
  2724  000017                     ___awdiv@sign:
  2725                           	callstack 0
  2726  000017                     ___awmod@sign:
  2727                           	callstack 0
  2728                           
  2729                           ; 1 bytes @ 0x16
  2730  000017                     	ds	1
  2731  000018                     ??_Paddle_addX:
  2732  000018                     ??_LCD_InButton:
  2733  000018                     ??_LCD_InSlider:
  2734  000018                     LCD_Init@i:
  2735                           	callstack 0
  2736  000018                     XF_pushEvent@inISR:
  2737                           	callstack 0
  2738  000018                     XF_popEvent@ev:
  2739                           	callstack 0
  2740  000018                     LCD_Fill@page:
  2741                           	callstack 0
  2742  000018                     LCD_SliderCreate@height:
  2743                           	callstack 0
  2744  000018                     LCD_ButtonCreate@height:
  2745                           	callstack 0
  2746  000018                     LCD_DrawRect@posY2:
  2747                           	callstack 0
  2748  000018                     RGB2LCD@red:
  2749                           	callstack 0
  2750  000018                     LCD_Read@color:
  2751                           	callstack 0
  2752  000018                     backlightController@g:
  2753                           	callstack 0
  2754  000018                     ___awdiv@quotient:
  2755                           	callstack 0
  2756                           
  2757                           ; 2 bytes @ 0x17
  2758  000018                     	ds	1
  2759  000019                     XF_pushEvent@ev:
  2760                           	callstack 0
  2761  000019                     XF_popEvent@inISR:
  2762                           	callstack 0
  2763                           
  2764                           ; 1 bytes @ 0x18
  2765  000019                     	ds	1
  2766  00001A                     ?___wmul:
  2767                           	callstack 0
  2768  00001A                     LCD_DrawRect@fill:
  2769                           	callstack 0
  2770  00001A                     XF_pushEvent@temp:
  2771                           	callstack 0
  2772  00001A                     ___xxtofl@sign:
  2773                           	callstack 0
  2774  00001A                     LCD_SliderCreate@sldColor:
  2775                           	callstack 0
  2776  00001A                     LCD_ButtonCreate@txtColor:
  2777                           	callstack 0
  2778  00001A                     RGB2LCD@green:
  2779                           	callstack 0
  2780  00001A                     LCD_Read@temp16:
  2781                           	callstack 0
  2782  00001A                     ___wmul@multiplier:
  2783                           	callstack 0
  2784  00001A                     ___aodiv@divisor:
  2785                           	callstack 0
  2786  00001A                     ___aomod@divisor:
  2787                           	callstack 0
  2788                           
  2789                           ; 8 bytes @ 0x19
  2790  00001A                     	ds	1
  2791  00001B                     ___xxtofl@exp:
  2792                           	callstack 0
  2793  00001B                     LCD_DrawRect@color:
  2794                           	callstack 0
  2795  00001B                     checkCollision@g:
  2796                           	callstack 0
  2797  00001B                     fputs@s:
  2798                           	callstack 0
  2799                           
  2800                           ; 2 bytes @ 0x1A
  2801  00001B                     	ds	1
  2802  00001C                     LCD_SliderCreate@bgColor:
  2803                           	callstack 0
  2804  00001C                     LCD_ButtonCreate@bgColor:
  2805                           	callstack 0
  2806  00001C                     RGB2LCD@blue:
  2807                           	callstack 0
  2808  00001C                     moovePaddle@g:
  2809                           	callstack 0
  2810  00001C                     ___wmul@multiplicand:
  2811                           	callstack 0
  2812  00001C                     ___xxtofl@arg:
  2813                           	callstack 0
  2814                           
  2815                           ; 4 bytes @ 0x1B
  2816  00001C                     	ds	1
  2817  00001D                     ??_checkCollision:
  2818  00001D                     LCD_DrawRect@j:
  2819                           	callstack 0
  2820  00001D                     fputs@fp:
  2821                           	callstack 0
  2822                           
  2823                           ; 2 bytes @ 0x1C
  2824  00001D                     	ds	1
  2825  00001E                     LCD_SliderCreate@borderColor:
  2826                           	callstack 0
  2827  00001E                     LCD_ButtonCreate@textOrBmp:
  2828                           	callstack 0
  2829  00001E                     RGB2LCD@color:
  2830                           	callstack 0
  2831  00001E                     ___wmul@product:
  2832                           	callstack 0
  2833                           
  2834                           ; 2 bytes @ 0x1D
  2835  00001E                     	ds	1
  2836  00001F                     fputs@c:
  2837                           	callstack 0
  2838  00001F                     LCD_DrawRect@temp:
  2839                           	callstack 0
  2840                           
  2841                           ; 2 bytes @ 0x1E
  2842  00001F                     	ds	1
  2843  000020                     ?___lwdiv:
  2844                           	callstack 0
  2845  000020                     ?___fldiv:
  2846                           	callstack 0
  2847  000020                     LCD_SliderCreate@cursorWidth:
  2848                           	callstack 0
  2849  000020                     LCD_ButtonCreate@font:
  2850                           	callstack 0
  2851  000020                     LCD_DrawText@msg:
  2852                           	callstack 0
  2853  000020                     XF_init@i:
  2854                           	callstack 0
  2855  000020                     ___lwdiv@dividend:
  2856                           	callstack 0
  2857  000020                     fputs@i:
  2858                           	callstack 0
  2859  000020                     ___fldiv@b:
  2860                           	callstack 0
  2861                           
  2862                           ; 4 bytes @ 0x1F
  2863  000020                     	ds	1
  2864  000021                     LCD_DrawRect@colorH:
  2865                           	callstack 0
  2866                           
  2867                           ; 1 bytes @ 0x20
  2868  000021                     	ds	1
  2869  000022                     ?_pad:
  2870                           	callstack 0
  2871  000022                     LCD_DrawRect@colorL:
  2872                           	callstack 0
  2873  000022                     ___aodiv@counter:
  2874                           	callstack 0
  2875  000022                     ___aomod@counter:
  2876                           	callstack 0
  2877  000022                     LCD_SliderCreate@steps:
  2878                           	callstack 0
  2879  000022                     LCD_ButtonCreate@fpPress:
  2880                           	callstack 0
  2881  000022                     LCD_DrawText@font:
  2882                           	callstack 0
  2883  000022                     ___lwdiv@divisor:
  2884                           	callstack 0
  2885  000022                     pad@fp:
  2886                           	callstack 0
  2887                           
  2888                           ; 2 bytes @ 0x21
  2889  000022                     	ds	1
  2890  000023                     ___aodiv@sign:
  2891                           	callstack 0
  2892  000023                     ___aomod@sign:
  2893                           	callstack 0
  2894  000023                     LCD_DrawRect@i:
  2895                           	callstack 0
  2896                           
  2897                           ; 2 bytes @ 0x22
  2898  000023                     	ds	1
  2899  000024                     ?_abs:
  2900                           	callstack 0
  2901  000024                     LCD_DrawText@align:
  2902                           	callstack 0
  2903  000024                     ___lwdiv@counter:
  2904                           	callstack 0
  2905  000024                     LCD_SliderCreate@fpPress:
  2906                           	callstack 0
  2907  000024                     LCD_ButtonCreate@fpReleased:
  2908                           	callstack 0
  2909  000024                     pad@buf:
  2910                           	callstack 0
  2911  000024                     abs@a:
  2912                           	callstack 0
  2913  000024                     ___fldiv@a:
  2914                           	callstack 0
  2915  000024                     ___aodiv@quotient:
  2916                           	callstack 0
  2917                           
  2918                           ; 8 bytes @ 0x23
  2919  000024                     	ds	1
  2920  000025                     Ball_draw@b:
  2921                           	callstack 0
  2922  000025                     Paddle_draw@p:
  2923                           	callstack 0
  2924  000025                     LCD_ButtonUpdate@button:
  2925                           	callstack 0
  2926  000025                     LCD_DrawText@posX:
  2927                           	callstack 0
  2928  000025                     mooveBall@g:
  2929                           	callstack 0
  2930  000025                     ___lwdiv@quotient:
  2931                           	callstack 0
  2932                           
  2933                           ; 2 bytes @ 0x24
  2934  000025                     	ds	1
  2935  000026                     ??_abs:
  2936  000026                     LCD_SliderCreate@slider:
  2937                           	callstack 0
  2938  000026                     LCD_ButtonCreate@fpOut:
  2939                           	callstack 0
  2940  000026                     pad@p:
  2941                           	callstack 0
  2942                           
  2943                           ; 2 bytes @ 0x25
  2944  000026                     	ds	1
  2945  000027                     ??_Ball_draw:
  2946  000027                     ??_Paddle_draw:
  2947  000027                     ??_LCD_ButtonUpdate:
  2948  000027                     LCD_SliderUpdate@slider:
  2949                           	callstack 0
  2950  000027                     LCD_DrawText@posY:
  2951                           	callstack 0
  2952  000027                     LCD_Bitmap@bmpPtr:
  2953                           	callstack 0
  2954                           
  2955                           ; 2 bytes @ 0x26
  2956  000027                     	ds	1
  2957  000028                     ??___fldiv:
  2958  000028                     ??_pad:
  2959  000028                     LCD_ButtonCreate@button:
  2960                           	callstack 0
  2961                           
  2962                           ; 2 bytes @ 0x27
  2963  000028                     	ds	1
  2964  000029                     ??_LCD_SliderUpdate:
  2965  000029                     LCD_DrawText@color:
  2966                           	callstack 0
  2967  000029                     LCD_Bitmap@posX:
  2968                           	callstack 0
  2969  000029                     pad@i:
  2970                           	callstack 0
  2971                           
  2972                           ; 2 bytes @ 0x28
  2973  000029                     	ds	1
  2974  00002A                     LCD_ButtonCreate@index:
  2975                           	callstack 0
  2976                           
  2977                           ; 1 bytes @ 0x29
  2978  00002A                     	ds	1
  2979  00002B                     GameParameters_init@s:
  2980                           	callstack 0
  2981  00002B                     LCD_ButtonUpdate@colorOut:
  2982                           	callstack 0
  2983  00002B                     LCD_DrawText@bg_color:
  2984                           	callstack 0
  2985  00002B                     LCD_Bitmap@posY:
  2986                           	callstack 0
  2987  00002B                     pad@w:
  2988                           	callstack 0
  2989                           
  2990                           ; 2 bytes @ 0x2A
  2991  00002B                     	ds	1
  2992  00002C                     ___fldiv@rem:
  2993                           	callstack 0
  2994                           
  2995                           ; 4 bytes @ 0x2B
  2996  00002C                     	ds	1
  2997  00002D                     ??_LCD_DrawText:
  2998  00002D                     ??_LCD_Bitmap:
  2999  00002D                     ?_dtoa:
  3000                           	callstack 0
  3001  00002D                     LCD_ButtonUpdate@colorIn:
  3002                           	callstack 0
  3003  00002D                     dtoa@fp:
  3004                           	callstack 0
  3005                           
  3006                           ; 2 bytes @ 0x2C
  3007  00002D                     	ds	2
  3008  00002F                     LCD_SliderUpdate@x2:
  3009                           	callstack 0
  3010  00002F                     LCD_ButtonUpdate@x2:
  3011                           	callstack 0
  3012  00002F                     dtoa@d:
  3013                           	callstack 0
  3014                           
  3015                           ; 8 bytes @ 0x2E
  3016  00002F                     	ds	1
  3017  000030                     ___fldiv@sign:
  3018                           	callstack 0
  3019                           
  3020                           ; 1 bytes @ 0x2F
  3021  000030                     	ds	1
  3022  000031                     LCD_SliderUpdate@y1:
  3023                           	callstack 0
  3024  000031                     LCD_ButtonUpdate@y1:
  3025                           	callstack 0
  3026  000031                     ___fldiv@new_exp:
  3027                           	callstack 0
  3028                           
  3029                           ; 2 bytes @ 0x30
  3030  000031                     	ds	2
  3031  000033                     LCD_SliderUpdate@y2:
  3032                           	callstack 0
  3033  000033                     LCD_ButtonUpdate@x1:
  3034                           	callstack 0
  3035  000033                     LCD_DrawText@offset:
  3036                           	callstack 0
  3037  000033                     ___fldiv@grs:
  3038                           	callstack 0
  3039                           
  3040                           ; 4 bytes @ 0x32
  3041  000033                     	ds	2
  3042  000035                     LCD_SliderUpdate@x1:
  3043                           	callstack 0
  3044  000035                     LCD_ButtonUpdate@y2:
  3045                           	callstack 0
  3046  000035                     LCD_DrawText@yOffset:
  3047                           	callstack 0
  3048                           
  3049                           ; 2 bytes @ 0x34
  3050  000035                     	ds	2
  3051  000037                     ??_dtoa:
  3052  000037                     LCD_DrawText@fontByte:
  3053                           	callstack 0
  3054  000037                     ___fldiv@bexp:
  3055                           	callstack 0
  3056  000037                     LCD_SliderDraw@slider:
  3057                           	callstack 0
  3058  000037                     gameControllerController@g:
  3059                           	callstack 0
  3060                           
  3061                           ; 2 bytes @ 0x36
  3062  000037                     	ds	1
  3063  000038                     LCD_DrawText@fontPixel:
  3064                           	callstack 0
  3065  000038                     ___fldiv@aexp:
  3066                           	callstack 0
  3067                           
  3068                           ; 1 bytes @ 0x37
  3069  000038                     	ds	1
  3070  000039                     ??_LCD_SliderDraw:
  3071  000039                     ?___fltol:
  3072                           	callstack 0
  3073  000039                     gameControllerController@ev:
  3074                           	callstack 0
  3075  000039                     LCD_DrawText@posYEnd:
  3076                           	callstack 0
  3077  000039                     ___fltol@f1:
  3078                           	callstack 0
  3079                           
  3080                           ; 4 bytes @ 0x38
  3081  000039                     	ds	1
  3082  00003A                     ??_gameControllerController:
  3083                           
  3084                           ; 1 bytes @ 0x39
  3085  00003A                     	ds	1
  3086  00003B                     LCD_DrawText@posXEnd:
  3087                           	callstack 0
  3088                           
  3089                           ; 2 bytes @ 0x3A
  3090  00003B                     	ds	1
  3091  00003C                     gameControllerInit@g:
  3092                           	callstack 0
  3093  00003C                     gameControllerSM@g:
  3094                           	callstack 0
  3095                           
  3096                           ; 2 bytes @ 0x3B
  3097  00003C                     	ds	1
  3098  00003D                     ??___fltol:
  3099  00003D                     LCD_DrawText@y:
  3100                           	callstack 0
  3101  00003D                     LCD_SliderDraw@x1:
  3102                           	callstack 0
  3103                           
  3104                           ; 2 bytes @ 0x3C
  3105  00003D                     	ds	1
  3106  00003E                     ??_gameControllerSM:
  3107  00003E                     LCD_DrawText@i:
  3108                           	callstack 0
  3109                           
  3110                           ; 1 bytes @ 0x3D
  3111  00003E                     	ds	1
  3112  00003F                     ?_vfpfcnvrt:
  3113                           	callstack 0
  3114  00003F                     LCD_DrawText@tempChar:
  3115                           	callstack 0
  3116  00003F                     LCD_SliderDraw@x2:
  3117                           	callstack 0
  3118  00003F                     vfpfcnvrt@fp:
  3119                           	callstack 0
  3120                           
  3121                           ; 2 bytes @ 0x3E
  3122  00003F                     	ds	1
  3123  000040                     LCD_DrawText@x:
  3124                           	callstack 0
  3125  000040                     gameControllerSM@ev:
  3126                           	callstack 0
  3127                           
  3128                           ; 1 bytes @ 0x3F
  3129  000040                     	ds	1
  3130  000041                     LCD_DrawText@width:
  3131                           	callstack 0
  3132  000041                     ___fltol@sign1:
  3133                           	callstack 0
  3134  000041                     LCD_SliderDraw@y1:
  3135                           	callstack 0
  3136  000041                     vfpfcnvrt@fmt:
  3137                           	callstack 0
  3138                           
  3139                           ; 2 bytes @ 0x40
  3140  000041                     	ds	1
  3141  000042                     ___fltol@exp1:
  3142                           	callstack 0
  3143                           
  3144                           ; 1 bytes @ 0x41
  3145  000042                     	ds	1
  3146  000043                     LCD_SliderDraw@y2:
  3147                           	callstack 0
  3148  000043                     vfpfcnvrt@ap:
  3149                           	callstack 0
  3150                           
  3151                           ; 2 bytes @ 0x42
  3152  000043                     	ds	2
  3153  000045                     ??_vfpfcnvrt:
  3154                           
  3155                           ; 1 bytes @ 0x44
  3156  000045                     	ds	2
  3157  000047                     
  3158                           ; 1 bytes @ 0x46
  3159 ;;
  3160 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3161 ;;
  3162 ;; *************** function _main *****************
  3163 ;; Defined at:
  3164 ;;		line 47 in file "main.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3178 ;;      Params:         0       0       0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels required when called: 17
  3184 ;; This function calls:
  3185 ;;		_Factory_exec
  3186 ;;		_Factory_init
  3187 ;; This function is called by:
  3188 ;;		Startup code after reset
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text0
  3193  0063AA                     __ptext0:
  3194                           	callstack 0
  3195  0063AA                     _main:
  3196                           	callstack 14
  3197  0063AA                     
  3198                           ;main.c: 49:     Factory_init();
  3199  0063AA  EC5A  F02A         	call	_Factory_init	;wreg free
  3200  0063AE                     l803:
  3201                           
  3202                           ;main.c: 51:     {;main.c: 52:         Factory_exec();
  3203  0063AE  EC71  F02F         	call	_Factory_exec	;wreg free
  3204  0063B2  EFD7  F031         	goto	l803
  3205  0063B6  EF58  F000         	goto	start
  3206  0063BA                     __end_of_main:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _Factory_init *****************
  3210 ;; Defined at:
  3211 ;;		line 11 in file "class/factory.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3225 ;;      Params:         0       0       0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0
  3227 ;;      Temps:          0       2       0       0       0       0       0
  3228 ;;      Totals:         0       2       0       0       0       0       0
  3229 ;;Total ram usage:        2 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 16
  3232 ;; This function calls:
  3233 ;;		_GameParameters_init
  3234 ;;		_LCD_DrawText
  3235 ;;		_LCD_Fill
  3236 ;;		_LCD_Init
  3237 ;;		_XF_init
  3238 ;;		_sleepInit
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text1
  3245  0054B4                     __ptext1:
  3246                           	callstack 0
  3247  0054B4                     _Factory_init:
  3248                           	callstack 14
  3249  0054B4                     
  3250                           ;class/factory.c: 14:     PLLEN = 1;
  3251  0054B4  8C9B               	bsf	3995,6,c	;volatile
  3252  0054B6                     
  3253                           ;class/factory.c: 15:     OSCCON = 0b01110000;
  3254  0054B6  0E70               	movlw	112
  3255  0054B8  6ED3               	movwf	211,c	;volatile
  3256  0054BA                     
  3257                           ;class/factory.c: 16:     _delay((unsigned long)((100)*(64000000L/4000.0)));
  3258  0054BA  0E09               	movlw	9
  3259  0054BC  0100               	movlb	0	; () banked
  3260  0054BE  6FA8               	movwf	(??_Factory_init+1)& (0+255),b
  3261  0054C0  0E1E               	movlw	30
  3262  0054C2  6FA7               	movwf	??_Factory_init& (0+255),b
  3263  0054C4  0EE4               	movlw	228
  3264  0054C6                     u7927:
  3265  0054C6  2EE8               	decfsz	wreg,f,c
  3266  0054C8  D7FE               	bra	u7927
  3267  0054CA  2FA7               	decfsz	??_Factory_init& (0+255),f,b
  3268  0054CC  D7FC               	bra	u7927
  3269  0054CE  2FA8               	decfsz	(??_Factory_init+1)& (0+255),f,b
  3270  0054D0  D7FA               	bra	u7927
  3271  0054D2  F000               	nop	
  3272  0054D4                     
  3273                           ;class/factory.c: 18:     LCD_Init();
  3274  0054D4  EC92  F019         	call	_LCD_Init	;wreg free
  3275  0054D8                     
  3276                           ;class/factory.c: 19:     LCD_Fill(0b0000000000011111);
  3277  0054D8  0E00               	movlw	0
  3278  0054DA  6E13               	movwf	(LCD_Fill@color+1)^0,c
  3279  0054DC  0E1F               	movlw	31
  3280  0054DE  6E12               	movwf	LCD_Fill@color^0,c
  3281  0054E0  EC9A  F029         	call	_LCD_Fill	;wreg free
  3282  0054E4                     
  3283                           ;class/factory.c: 20:     LCD_DrawText("MenuStart",&arialNarrow_12ptFontInfo,A_CENTER,50
      +                          ,50,0b0000000000000000,0b1111111111111111);
  3284  0054E4  0EB6               	movlw	low STR_1
  3285  0054E6  6E20               	movwf	LCD_DrawText@msg^0,c
  3286  0054E8  0E7F               	movlw	high STR_1
  3287  0054EA  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  3288  0054EC  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  3289  0054EE  6E22               	movwf	LCD_DrawText@font^0,c
  3290  0054F0  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  3291  0054F2  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  3292  0054F4  0E02               	movlw	2
  3293  0054F6  6E24               	movwf	LCD_DrawText@align^0,c
  3294  0054F8  0E00               	movlw	0
  3295  0054FA  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  3296  0054FC  0E32               	movlw	50
  3297  0054FE  6E25               	movwf	LCD_DrawText@posX^0,c
  3298  005500  0E00               	movlw	0
  3299  005502  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  3300  005504  0E32               	movlw	50
  3301  005506  6E27               	movwf	LCD_DrawText@posY^0,c
  3302  005508  0E00               	movlw	0
  3303  00550A  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  3304  00550C  0E00               	movlw	0
  3305  00550E  6E29               	movwf	LCD_DrawText@color^0,c
  3306  005510  0EFF               	movlw	255
  3307  005512  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  3308  005514  682B               	setf	LCD_DrawText@bg_color^0,c
  3309  005516  ECEB  F00E         	call	_LCD_DrawText	;wreg free
  3310  00551A                     
  3311                           ;class/factory.c: 25:     GIE=1;
  3312  00551A  8EF2               	bsf	4082,7,c	;volatile
  3313  00551C                     
  3314                           ;class/factory.c: 26:     INT1IE=0;
  3315  00551C  96F0               	bcf	4080,3,c	;volatile
  3316  00551E                     
  3317                           ;class/factory.c: 27:     INTEDG1=0;
  3318  00551E  9AF1               	bcf	4081,5,c	;volatile
  3319  005520                     
  3320                           ;class/factory.c: 28:     TRISC0=0;
  3321  005520  9094               	bcf	3988,0,c	;volatile
  3322  005522                     
  3323                           ;class/factory.c: 29:     LATC0=1;
  3324  005522  808B               	bsf	3979,0,c	;volatile
  3325  005524                     
  3326                           ;class/factory.c: 32:     T0CON=0b10000110;
  3327  005524  0E86               	movlw	134
  3328  005526  6ED5               	movwf	213,c	;volatile
  3329  005528                     
  3330                           ;class/factory.c: 33:     TMR0H=0xFB;
  3331  005528  0EFB               	movlw	251
  3332  00552A  6ED7               	movwf	215,c	;volatile
  3333  00552C                     
  3334                           ;class/factory.c: 34:     TMR0L=0x1D;
  3335  00552C  0E1D               	movlw	29
  3336  00552E  6ED6               	movwf	214,c	;volatile
  3337  005530                     
  3338                           ;class/factory.c: 35:     TMR0IE=1;
  3339  005530  8AF2               	bsf	4082,5,c	;volatile
  3340  005532                     
  3341                           ;class/factory.c: 38:     TRISC1=0;
  3342  005532  9294               	bcf	3988,1,c	;volatile
  3343  005534                     
  3344                           ;class/factory.c: 39:     PR2=255;
  3345  005534  68BB               	setf	187,c	;volatile
  3346  005536                     
  3347                           ;class/factory.c: 40:     CCP2CONbits.CCP2M = 0xC;
  3348  005536  5066               	movf	102,w,c	;volatile
  3349  005538  0BF0               	andlw	-16
  3350  00553A  090C               	iorlw	12
  3351  00553C  6E66               	movwf	102,c	;volatile
  3352  00553E                     
  3353                           ;class/factory.c: 41:     CCPR2L = 255;
  3354  00553E  6867               	setf	103,c	;volatile
  3355  005540                     
  3356                           ;class/factory.c: 42:     CCP2CONbits.DC2B = 0;
  3357  005540  0ECF               	movlw	-49
  3358  005542  1666               	andwf	102,f,c	;volatile
  3359  005544                     
  3360                           ;class/factory.c: 43:     TMR2IF=0;
  3361  005544  929E               	bcf	3998,1,c	;volatile
  3362  005546                     
  3363                           ;class/factory.c: 44:     T2CONbits.T2CKPS0 = 1;
  3364  005546  80BA               	bsf	186,0,c	;volatile
  3365  005548                     
  3366                           ;class/factory.c: 45:     T2CONbits.T2CKPS1 = 0;
  3367  005548  92BA               	bcf	186,1,c	;volatile
  3368  00554A                     
  3369                           ;class/factory.c: 46:     T2CONbits.TMR2ON = 1;
  3370  00554A  84BA               	bsf	186,2,c	;volatile
  3371  00554C                     
  3372                           ;class/factory.c: 48:     ADCON2=0b10100110;
  3373  00554C  0EA6               	movlw	166
  3374  00554E  6EC0               	movwf	192,c	;volatile
  3375  005550                     
  3376                           ;class/factory.c: 51:     XF_init();
  3377  005550  ECB8  F02A         	call	_XF_init	;wreg free
  3378  005554                     
  3379                           ;class/factory.c: 52:     GameParameters_init(&g1);
  3380  005554  0E00               	movlw	low _g1
  3381  005556  6E2B               	movwf	GameParameters_init@s^0,c
  3382  005558  0E01               	movlw	high _g1
  3383  00555A  6E2C               	movwf	(GameParameters_init@s+1)^0,c
  3384  00555C  EC10  F011         	call	_GameParameters_init	;wreg free
  3385  005560                     
  3386                           ;class/factory.c: 53:     sleepInit(&g1);
  3387  005560  0E00               	movlw	low _g1
  3388  005562  0100               	movlb	0	; () banked
  3389  005564  6FA5               	movwf	sleepInit@g& (0+255),b
  3390  005566  0E01               	movlw	high _g1
  3391  005568  6FA6               	movwf	(sleepInit@g+1)& (0+255),b
  3392  00556A  EC0A  F031         	call	_sleepInit	;wreg free
  3393  00556E  0012               	return		;funcret
  3394  005570                     __end_of_Factory_init:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _sleepInit *****************
  3398 ;; Defined at:
  3399 ;;		line 11 in file "stateMachine/sleepSM.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  g               2   69[BANK0 ] PTR struct GameParameter
  3402 ;;		 -> g1(239), 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3414 ;;      Params:         0       2       0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0       0       0
  3417 ;;      Totals:         0       2       0       0       0       0       0
  3418 ;;Total ram usage:        2 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 15
  3421 ;; This function calls:
  3422 ;;		_displayInit
  3423 ;;		_gameControllerInit
  3424 ;;		_sleepController
  3425 ;;		_touchScreenInit
  3426 ;; This function is called by:
  3427 ;;		_Factory_init
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text2
  3432  006214                     __ptext2:
  3433                           	callstack 0
  3434  006214                     _sleepInit:
  3435                           	callstack 14
  3436  006214                     
  3437                           ;stateMachine/sleepSM.c: 11: void sleepInit(GameParameters* g);stateMachine/sleepSM.c: 1
      +                          2: {;stateMachine/sleepSM.c: 13:     sleepState=WAKEUP;
  3438  006214  0E00               	movlw	0
  3439  006216  0100               	movlb	0	; () banked
  3440  006218  6FDF               	movwf	_sleepState& (0+255),b
  3441  00621A                     
  3442                           ; BSR set to: 0
  3443                           ;stateMachine/sleepSM.c: 14:     displayInit(g);
  3444  00621A  C0A5  F0A3         	movff	sleepInit@g,displayInit@g
  3445  00621E  C0A6  F0A4         	movff	sleepInit@g+1,displayInit@g+1
  3446  006222  EC7C  F031         	call	_displayInit	;wreg free
  3447  006226                     
  3448                           ;stateMachine/sleepSM.c: 15:     gameControllerInit(g);
  3449  006226  C0A5  F03C         	movff	sleepInit@g,gameControllerInit@g
  3450  00622A  C0A6  F03D         	movff	sleepInit@g+1,gameControllerInit@g+1
  3451  00622E  EC88  F031         	call	_gameControllerInit	;wreg free
  3452  006232                     
  3453                           ;stateMachine/sleepSM.c: 16:     touchScreenInit();
  3454  006232  ECDD  F031         	call	_touchScreenInit	;wreg free
  3455  006236                     
  3456                           ;stateMachine/sleepSM.c: 17:     sleepController();
  3457  006236  ECC1  F030         	call	_sleepController	;wreg free
  3458  00623A  0012               	return		;funcret
  3459  00623C                     __end_of_sleepInit:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _touchScreenInit *****************
  3463 ;; Defined at:
  3464 ;;		line 17 in file "stateMachine/touchScreenSM.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3478 ;;      Params:         0       0       0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0
  3481 ;;      Totals:         0       0       0       0       0       0       0
  3482 ;;Total ram usage:        0 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 5
  3485 ;; This function calls:
  3486 ;;		_configTouch
  3487 ;; This function is called by:
  3488 ;;		_sleepInit
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text3
  3493  0063BA                     __ptext3:
  3494                           	callstack 0
  3495  0063BA                     _touchScreenInit:
  3496                           	callstack 23
  3497  0063BA                     
  3498                           ;stateMachine/touchScreenSM.c: 19:     touchScreenState=WAITING;
  3499  0063BA  0E00               	movlw	0
  3500  0063BC  0100               	movlb	0	; () banked
  3501  0063BE  6FDE               	movwf	_touchScreenState& (0+255),b
  3502  0063C0                     
  3503                           ; BSR set to: 0
  3504                           ;stateMachine/touchScreenSM.c: 20:     configTouch();
  3505  0063C0  EC6B  F031         	call	_configTouch	;wreg free
  3506  0063C4  0012               	return		;funcret
  3507  0063C6                     __end_of_touchScreenInit:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _sleepController *****************
  3511 ;; Defined at:
  3512 ;;		line 53 in file "stateMachine/sleepSM.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3526 ;;      Params:         0       0       0       0       0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0       0
  3528 ;;      Temps:          2       0       0       0       0       0       0
  3529 ;;      Totals:         2       0       0       0       0       0       0
  3530 ;;Total ram usage:        2 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 4
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_sleepInit
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text4
  3541  006182                     __ptext4:
  3542                           	callstack 0
  3543  006182                     _sleepController:
  3544                           	callstack 24
  3545  006182  0100               	movlb	0	; () banked
  3546  006184  51DF               	movf	_sleepState& (0+255),w,b
  3547  006186  6E12               	movwf	??_sleepController^0,c
  3548  006188  6A13               	clrf	(??_sleepController+1)^0,c
  3549                           
  3550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3551                           ; Switch size 1, requested type "simple"
  3552                           ; Number of cases is 1, Range of values is 0 to 0
  3553                           ; switch strategies available:
  3554                           ; Name         Instructions Cycles
  3555                           ; simple_byte            4     3 (average)
  3556                           ;	Chosen strategy is simple_byte
  3557  00618A  5013               	movf	(??_sleepController+1)^0,w,c
  3558  00618C  0A00               	xorlw	0	; case 0
  3559  00618E  B4D8               	btfsc	status,2,c
  3560  006190  EFCC  F030         	goto	l10679
  3561  006194  EFDB  F030         	goto	l424
  3562  006198                     l10679:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ; Switch size 1, requested type "simple"
  3566                           ; Number of cases is 3, Range of values is 0 to 2
  3567                           ; switch strategies available:
  3568                           ; Name         Instructions Cycles
  3569                           ; simple_byte           10     6 (average)
  3570                           ;	Chosen strategy is simple_byte
  3571  006198  5012               	movf	??_sleepController^0,w,c
  3572  00619A  0A00               	xorlw	0	; case 0
  3573  00619C  B4D8               	btfsc	status,2,c
  3574  00619E  EFDB  F030         	goto	l424
  3575  0061A2  0A01               	xorlw	1	; case 1
  3576  0061A4  B4D8               	btfsc	status,2,c
  3577  0061A6  EFDB  F030         	goto	l424
  3578  0061AA  0A03               	xorlw	3	; case 2
  3579  0061AC  B4D8               	btfsc	status,2,c
  3580  0061AE  EFDB  F030         	goto	l424
  3581  0061B2  EFDB  F030         	goto	l424
  3582  0061B6                     l424:
  3583                           
  3584                           ; BSR set to: 0
  3585  0061B6  0012               	return		;funcret
  3586  0061B8                     __end_of_sleepController:
  3587                           	callstack 0
  3588                           
  3589 ;; *************** function _gameControllerInit *****************
  3590 ;; Defined at:
  3591 ;;		line 13 in file "stateMachine/gameController.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  g               2   59[COMRAM] PTR struct GameParameter
  3594 ;;		 -> g1(239), 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3606 ;;      Params:         2       0       0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0
  3609 ;;      Totals:         2       0       0       0       0       0       0
  3610 ;;Total ram usage:        2 bytes
  3611 ;; Hardware stack levels used: 1
  3612 ;; Hardware stack levels required when called: 9
  3613 ;; This function calls:
  3614 ;;		_gameControllerController
  3615 ;; This function is called by:
  3616 ;;		_sleepInit
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text5
  3621  006310                     __ptext5:
  3622                           	callstack 0
  3623  006310                     _gameControllerInit:
  3624                           	callstack 19
  3625  006310                     
  3626                           ;stateMachine/gameController.c: 13: void gameControllerInit(GameParameters* g);stateMach
      +                          ine/gameController.c: 14: {;stateMachine/gameController.c: 15:     gameStateMachine=NOGA
      +                          ME;
  3627  006310  0E00               	movlw	0
  3628  006312  6E4D               	movwf	_gameStateMachine^0,c
  3629  006314                     
  3630                           ;stateMachine/gameController.c: 16:     gameControllerController(g,NULLEVENT);
  3631  006314  C03C  F037         	movff	gameControllerInit@g,gameControllerController@g
  3632  006318  C03D  F038         	movff	gameControllerInit@g+1,gameControllerController@g+1
  3633  00631C  0E00               	movlw	0
  3634  00631E  6E39               	movwf	gameControllerController@ev^0,c
  3635  006320  ECCF  F014         	call	_gameControllerController	;wreg free
  3636  006324  0012               	return		;funcret
  3637  006326                     __end_of_gameControllerInit:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _displayInit *****************
  3641 ;; Defined at:
  3642 ;;		line 16 in file "stateMachine/display.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  g               2   67[BANK0 ] PTR struct GameParameter
  3645 ;;		 -> g1(239), 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3657 ;;      Params:         0       2       0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0
  3660 ;;      Totals:         0       2       0       0       0       0       0
  3661 ;;Total ram usage:        2 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 14
  3664 ;; This function calls:
  3665 ;;		_displayController
  3666 ;; This function is called by:
  3667 ;;		_sleepInit
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text6
  3672  0062F8                     __ptext6:
  3673                           	callstack 0
  3674  0062F8                     _displayInit:
  3675                           	callstack 14
  3676  0062F8                     
  3677                           ;stateMachine/display.c: 16: void displayInit(GameParameters* g);stateMachine/display.c:
      +                           17: {;stateMachine/display.c: 19:     displayState=WELCOME;
  3678  0062F8  0E00               	movlw	0
  3679  0062FA  0100               	movlb	0	; () banked
  3680  0062FC  6FDD               	movwf	_displayState& (0+255),b
  3681  0062FE                     
  3682                           ; BSR set to: 0
  3683                           ;stateMachine/display.c: 20:     displayController(g,NULLEVENT);
  3684  0062FE  C0A3  F09E         	movff	displayInit@g,displayController@g
  3685  006302  C0A4  F09F         	movff	displayInit@g+1,displayController@g+1
  3686  006306  0E00               	movlw	0
  3687  006308  6FA0               	movwf	displayController@ev& (0+255),b
  3688  00630A  ECE0  F023         	call	_displayController	;wreg free
  3689  00630E  0012               	return		;funcret
  3690  006310                     __end_of_displayInit:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _XF_init *****************
  3694 ;; Defined at:
  3695 ;;		line 25 in file "xf/xf.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  i               2   31[COMRAM] int 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3709 ;;      Params:         0       0       0       0       0       0       0
  3710 ;;      Locals:         2       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0
  3712 ;;      Totals:         2       0       0       0       0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 5
  3716 ;; This function calls:
  3717 ;;		___wmul
  3718 ;; This function is called by:
  3719 ;;		_Factory_init
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text7
  3724  005570                     __ptext7:
  3725                           	callstack 0
  3726  005570                     _XF_init:
  3727                           	callstack 24
  3728  005570                     
  3729                           ;xf/xf.c: 27:     int i;;xf/xf.c: 28:     for (i=0; i<12; i++)
  3730  005570  0E00               	movlw	0
  3731  005572  6E21               	movwf	(XF_init@i+1)^0,c
  3732  005574  0E00               	movlw	0
  3733  005576  6E20               	movwf	XF_init@i^0,c
  3734  005578                     l10257:
  3735                           
  3736                           ;xf/xf.c: 29:     {;xf/xf.c: 30:         theXF.eventQueue[i] = NULLEVENT;
  3737  005578  0ECD               	movlw	low (_theXF+24)
  3738  00557A  2420               	addwf	XF_init@i^0,w,c
  3739  00557C  6ED9               	movwf	fsr2l,c
  3740  00557E  0E00               	movlw	high (_theXF+24)
  3741  005580  2021               	addwfc	(XF_init@i+1)^0,w,c
  3742  005582  6EDA               	movwf	fsr2h,c
  3743  005584  0E00               	movlw	0
  3744  005586  6EDF               	movwf	indf2,c
  3745  005588                     
  3746                           ;xf/xf.c: 31:     }
  3747  005588  4A20               	infsnz	XF_init@i^0,f,c
  3748  00558A  2A21               	incf	(XF_init@i+1)^0,f,c
  3749  00558C  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3750  00558E  EFD2  F02A         	goto	u7761
  3751  005592  5021               	movf	(XF_init@i+1)^0,w,c
  3752  005594  E109               	bnz	u7760
  3753  005596  0E0C               	movlw	12
  3754  005598  5C20               	subwf	XF_init@i^0,w,c
  3755  00559A  A0D8               	btfss	status,0,c
  3756  00559C  EFD2  F02A         	goto	u7761
  3757  0055A0  EFD4  F02A         	goto	u7760
  3758  0055A4                     u7761:
  3759  0055A4  EFBC  F02A         	goto	l10257
  3760  0055A8                     u7760:
  3761  0055A8                     
  3762                           ;xf/xf.c: 33:     for (i=0; i<8; i++)
  3763  0055A8  0E00               	movlw	0
  3764  0055AA  6E21               	movwf	(XF_init@i+1)^0,c
  3765  0055AC  0E00               	movlw	0
  3766  0055AE  6E20               	movwf	XF_init@i^0,c
  3767  0055B0                     l10269:
  3768                           
  3769                           ;xf/xf.c: 34:     {;xf/xf.c: 35:         theXF.timerList[i].tm = 0;
  3770  0055B0  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3771  0055B4  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3772  0055B8  0E00               	movlw	0
  3773  0055BA  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3774  0055BC  0E03               	movlw	3
  3775  0055BE  6E1C               	movwf	___wmul@multiplicand^0,c
  3776  0055C0  EC45  F031         	call	___wmul	;wreg free
  3777  0055C4  0EB5               	movlw	low _theXF
  3778  0055C6  241A               	addwf	?___wmul^0,w,c
  3779  0055C8  6ED9               	movwf	fsr2l,c
  3780  0055CA  0E00               	movlw	high _theXF
  3781  0055CC  201B               	addwfc	(?___wmul+1)^0,w,c
  3782  0055CE  6EDA               	movwf	fsr2h,c
  3783  0055D0  0E00               	movlw	0
  3784  0055D2  6EDE               	movwf	postinc2,c
  3785  0055D4  0E00               	movlw	0
  3786  0055D6  6EDD               	movwf	postdec2,c
  3787                           
  3788                           ;xf/xf.c: 36:         theXF.timerList[i].ev = NULLEVENT;
  3789  0055D8  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3790  0055DC  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3791  0055E0  0E00               	movlw	0
  3792  0055E2  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3793  0055E4  0E03               	movlw	3
  3794  0055E6  6E1C               	movwf	___wmul@multiplicand^0,c
  3795  0055E8  EC45  F031         	call	___wmul	;wreg free
  3796  0055EC  0EB7               	movlw	low (_theXF+2)
  3797  0055EE  241A               	addwf	?___wmul^0,w,c
  3798  0055F0  6ED9               	movwf	fsr2l,c
  3799  0055F2  0E00               	movlw	high (_theXF+2)
  3800  0055F4  201B               	addwfc	(?___wmul+1)^0,w,c
  3801  0055F6  6EDA               	movwf	fsr2h,c
  3802  0055F8  0E00               	movlw	0
  3803  0055FA  6EDF               	movwf	indf2,c
  3804  0055FC                     
  3805                           ;xf/xf.c: 37:     }
  3806  0055FC  4A20               	infsnz	XF_init@i^0,f,c
  3807  0055FE  2A21               	incf	(XF_init@i+1)^0,f,c
  3808  005600  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3809  005602  EF0C  F02B         	goto	u7771
  3810  005606  5021               	movf	(XF_init@i+1)^0,w,c
  3811  005608  E109               	bnz	u7770
  3812  00560A  0E08               	movlw	8
  3813  00560C  5C20               	subwf	XF_init@i^0,w,c
  3814  00560E  A0D8               	btfss	status,0,c
  3815  005610  EF0C  F02B         	goto	u7771
  3816  005614  EF0E  F02B         	goto	u7770
  3817  005618                     u7771:
  3818  005618  EFD8  F02A         	goto	l10269
  3819  00561C                     u7770:
  3820  00561C                     
  3821                           ;xf/xf.c: 38:     theXF.in = 0;
  3822  00561C  0E00               	movlw	0
  3823  00561E  0100               	movlb	0	; () banked
  3824  005620  6FD9               	movwf	(_theXF+36)& (0+255),b
  3825                           
  3826                           ;xf/xf.c: 39:     theXF.out = 0;
  3827  005622  0E00               	movlw	0
  3828  005624  6FDA               	movwf	(_theXF+37)& (0+255),b
  3829  005626                     
  3830                           ; BSR set to: 0
  3831  005626  0012               	return		;funcret
  3832  005628                     __end_of_XF_init:
  3833                           	callstack 0
  3834                           
  3835 ;; *************** function _LCD_Init *****************
  3836 ;; Defined at:
  3837 ;;		line 20 in file "libraries/lcd_highlevel.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  i               1   23[COMRAM] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3851 ;;      Params:         0       0       0       0       0       0       0
  3852 ;;      Locals:         1       0       0       0       0       0       0
  3853 ;;      Temps:          1       0       0       0       0       0       0
  3854 ;;      Totals:         2       0       0       0       0       0       0
  3855 ;;Total ram usage:        2 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; Hardware stack levels required when called: 5
  3858 ;; This function calls:
  3859 ;;		_LCD_Lowlevel_Init
  3860 ;; This function is called by:
  3861 ;;		_Factory_init
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text8
  3866  003324                     __ptext8:
  3867                           	callstack 0
  3868  003324                     _LCD_Init:
  3869                           	callstack 24
  3870  003324                     
  3871                           ;libraries/lcd_highlevel.c: 22:   uint8_t i;;libraries/lcd_highlevel.c: 86:   LCD_Lowlev
      +                          el_Init();
  3872  003324  EC74  F02C         	call	_LCD_Lowlevel_Init	;wreg free
  3873  003328                     
  3874                           ;libraries/lcd_highlevel.c: 87:   PORTA = 0x11; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3875  003328  0E11               	movlw	17
  3876  00332A  6E80               	movwf	128,c	;volatile
  3877  00332C  988B               	bcf	3979,4,c	;volatile
  3878  00332E  968B               	bcf	3979,3,c	;volatile
  3879  003330  868B               	bsf	3979,3,c	;volatile
  3880  003332  888B               	bsf	3979,4,c	;volatile
  3881  003334                     
  3882                           ;libraries/lcd_highlevel.c: 88:   for(i=0;i<10;i++)
  3883  003334  0E00               	movlw	0
  3884  003336  6E18               	movwf	LCD_Init@i^0,c
  3885  003338                     l4055:
  3886                           
  3887                           ;libraries/lcd_highlevel.c: 89:   {;libraries/lcd_highlevel.c: 90:     _delay((unsigned 
      +                          long)((10)*(64000000L/4000.0)));
  3888  003338  0ED0               	movlw	208
  3889  00333A  6E17               	movwf	??_LCD_Init^0,c
  3890  00333C  0ECA               	movlw	202
  3891  00333E                     u7937:
  3892  00333E  2EE8               	decfsz	wreg,f,c
  3893  003340  D7FE               	bra	u7937
  3894  003342  2E17               	decfsz	??_LCD_Init^0,f,c
  3895  003344  D7FC               	bra	u7937
  3896  003346                     
  3897                           ;libraries/lcd_highlevel.c: 91:   }
  3898  003346  2A18               	incf	LCD_Init@i^0,f,c
  3899  003348  0E09               	movlw	9
  3900  00334A  6418               	cpfsgt	LCD_Init@i^0,c
  3901  00334C  EFAA  F019         	goto	u2451
  3902  003350  EFAC  F019         	goto	u2450
  3903  003354                     u2451:
  3904  003354  EF9C  F019         	goto	l4055
  3905  003358                     u2450:
  3906  003358                     
  3907                           ;libraries/lcd_highlevel.c: 92:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3908  003358  0E36               	movlw	54
  3909  00335A  6E80               	movwf	128,c	;volatile
  3910  00335C  988B               	bcf	3979,4,c	;volatile
  3911  00335E  968B               	bcf	3979,3,c	;volatile
  3912  003360  868B               	bsf	3979,3,c	;volatile
  3913  003362  888B               	bsf	3979,4,c	;volatile
  3914                           
  3915                           ;libraries/lcd_highlevel.c: 93:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
  3916  003364  0E00               	movlw	0
  3917  003366  6E80               	movwf	128,c	;volatile
  3918  003368  968B               	bcf	3979,3,c	;volatile
  3919  00336A  868B               	bsf	3979,3,c	;volatile
  3920                           
  3921                           ;libraries/lcd_highlevel.c: 94:   PORTA = 0x3A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3922  00336C  0E3A               	movlw	58
  3923  00336E  6E80               	movwf	128,c	;volatile
  3924  003370  988B               	bcf	3979,4,c	;volatile
  3925  003372  968B               	bcf	3979,3,c	;volatile
  3926  003374  868B               	bsf	3979,3,c	;volatile
  3927  003376  888B               	bsf	3979,4,c	;volatile
  3928                           
  3929                           ;libraries/lcd_highlevel.c: 95:   PORTA = 0x55; LATC3 = 0; LATC3 = 1;;
  3930  003378  0E55               	movlw	85
  3931  00337A  6E80               	movwf	128,c	;volatile
  3932  00337C  968B               	bcf	3979,3,c	;volatile
  3933  00337E  868B               	bsf	3979,3,c	;volatile
  3934                           
  3935                           ;libraries/lcd_highlevel.c: 96:   PORTA = 0xB2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3936  003380  0EB2               	movlw	178
  3937  003382  6E80               	movwf	128,c	;volatile
  3938  003384  988B               	bcf	3979,4,c	;volatile
  3939  003386  968B               	bcf	3979,3,c	;volatile
  3940  003388  868B               	bsf	3979,3,c	;volatile
  3941  00338A  888B               	bsf	3979,4,c	;volatile
  3942                           
  3943                           ;libraries/lcd_highlevel.c: 97:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3944  00338C  0E0C               	movlw	12
  3945  00338E  6E80               	movwf	128,c	;volatile
  3946  003390  968B               	bcf	3979,3,c	;volatile
  3947  003392  868B               	bsf	3979,3,c	;volatile
  3948                           
  3949                           ;libraries/lcd_highlevel.c: 98:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3950  003394  0E0C               	movlw	12
  3951  003396  6E80               	movwf	128,c	;volatile
  3952  003398  968B               	bcf	3979,3,c	;volatile
  3953  00339A  868B               	bsf	3979,3,c	;volatile
  3954                           
  3955                           ;libraries/lcd_highlevel.c: 99:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3956  00339C  0E33               	movlw	51
  3957  00339E  6E80               	movwf	128,c	;volatile
  3958  0033A0  968B               	bcf	3979,3,c	;volatile
  3959  0033A2  868B               	bsf	3979,3,c	;volatile
  3960                           
  3961                           ;libraries/lcd_highlevel.c: 100:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3962  0033A4  0E33               	movlw	51
  3963  0033A6  6E80               	movwf	128,c	;volatile
  3964  0033A8  968B               	bcf	3979,3,c	;volatile
  3965  0033AA  868B               	bsf	3979,3,c	;volatile
  3966                           
  3967                           ;libraries/lcd_highlevel.c: 101:   PORTA = 0xB7; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3968  0033AC  0EB7               	movlw	183
  3969  0033AE  6E80               	movwf	128,c	;volatile
  3970  0033B0  988B               	bcf	3979,4,c	;volatile
  3971  0033B2  968B               	bcf	3979,3,c	;volatile
  3972  0033B4  868B               	bsf	3979,3,c	;volatile
  3973  0033B6  888B               	bsf	3979,4,c	;volatile
  3974                           
  3975                           ;libraries/lcd_highlevel.c: 102:   PORTA = 0x35; LATC3 = 0; LATC3 = 1;;
  3976  0033B8  0E35               	movlw	53
  3977  0033BA  6E80               	movwf	128,c	;volatile
  3978  0033BC  968B               	bcf	3979,3,c	;volatile
  3979  0033BE  868B               	bsf	3979,3,c	;volatile
  3980                           
  3981                           ;libraries/lcd_highlevel.c: 103:   PORTA = 0xBB; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3982  0033C0  0EBB               	movlw	187
  3983  0033C2  6E80               	movwf	128,c	;volatile
  3984  0033C4  988B               	bcf	3979,4,c	;volatile
  3985  0033C6  968B               	bcf	3979,3,c	;volatile
  3986  0033C8  868B               	bsf	3979,3,c	;volatile
  3987  0033CA  888B               	bsf	3979,4,c	;volatile
  3988                           
  3989                           ;libraries/lcd_highlevel.c: 104:   PORTA = 0x2B; LATC3 = 0; LATC3 = 1;;
  3990  0033CC  0E2B               	movlw	43
  3991  0033CE  6E80               	movwf	128,c	;volatile
  3992  0033D0  968B               	bcf	3979,3,c	;volatile
  3993  0033D2  868B               	bsf	3979,3,c	;volatile
  3994                           
  3995                           ;libraries/lcd_highlevel.c: 105:   PORTA = 0xC0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3996  0033D4  0EC0               	movlw	192
  3997  0033D6  6E80               	movwf	128,c	;volatile
  3998  0033D8  988B               	bcf	3979,4,c	;volatile
  3999  0033DA  968B               	bcf	3979,3,c	;volatile
  4000  0033DC  868B               	bsf	3979,3,c	;volatile
  4001  0033DE  888B               	bsf	3979,4,c	;volatile
  4002                           
  4003                           ;libraries/lcd_highlevel.c: 106:   PORTA = 0x2C; LATC3 = 0; LATC3 = 1;;
  4004  0033E0  0E2C               	movlw	44
  4005  0033E2  6E80               	movwf	128,c	;volatile
  4006  0033E4  968B               	bcf	3979,3,c	;volatile
  4007  0033E6  868B               	bsf	3979,3,c	;volatile
  4008                           
  4009                           ;libraries/lcd_highlevel.c: 107:   PORTA = 0xC2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4010  0033E8  0EC2               	movlw	194
  4011  0033EA  6E80               	movwf	128,c	;volatile
  4012  0033EC  988B               	bcf	3979,4,c	;volatile
  4013  0033EE  968B               	bcf	3979,3,c	;volatile
  4014  0033F0  868B               	bsf	3979,3,c	;volatile
  4015  0033F2  888B               	bsf	3979,4,c	;volatile
  4016                           
  4017                           ;libraries/lcd_highlevel.c: 108:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4018  0033F4  0E01               	movlw	1
  4019  0033F6  6E80               	movwf	128,c	;volatile
  4020  0033F8  968B               	bcf	3979,3,c	;volatile
  4021  0033FA  868B               	bsf	3979,3,c	;volatile
  4022  0033FC                     
  4023                           ;libraries/lcd_highlevel.c: 109:   PORTA = 0xFF; LATC3 = 0; LATC3 = 1;;
  4024  0033FC  6880               	setf	128,c	;volatile
  4025  0033FE  968B               	bcf	3979,3,c	;volatile
  4026  003400  868B               	bsf	3979,3,c	;volatile
  4027                           
  4028                           ;libraries/lcd_highlevel.c: 110:   PORTA = 0XC3; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4029  003402  0EC3               	movlw	195
  4030  003404  6E80               	movwf	128,c	;volatile
  4031  003406  988B               	bcf	3979,4,c	;volatile
  4032  003408  968B               	bcf	3979,3,c	;volatile
  4033  00340A  868B               	bsf	3979,3,c	;volatile
  4034  00340C  888B               	bsf	3979,4,c	;volatile
  4035                           
  4036                           ;libraries/lcd_highlevel.c: 111:   PORTA = 0x11; LATC3 = 0; LATC3 = 1;;
  4037  00340E  0E11               	movlw	17
  4038  003410  6E80               	movwf	128,c	;volatile
  4039  003412  968B               	bcf	3979,3,c	;volatile
  4040  003414  868B               	bsf	3979,3,c	;volatile
  4041                           
  4042                           ;libraries/lcd_highlevel.c: 112:   PORTA = 0xC4; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4043  003416  0EC4               	movlw	196
  4044  003418  6E80               	movwf	128,c	;volatile
  4045  00341A  988B               	bcf	3979,4,c	;volatile
  4046  00341C  968B               	bcf	3979,3,c	;volatile
  4047  00341E  868B               	bsf	3979,3,c	;volatile
  4048  003420  888B               	bsf	3979,4,c	;volatile
  4049                           
  4050                           ;libraries/lcd_highlevel.c: 113:   PORTA = 0x20; LATC3 = 0; LATC3 = 1;;
  4051  003422  0E20               	movlw	32
  4052  003424  6E80               	movwf	128,c	;volatile
  4053  003426  968B               	bcf	3979,3,c	;volatile
  4054  003428  868B               	bsf	3979,3,c	;volatile
  4055                           
  4056                           ;libraries/lcd_highlevel.c: 114:   PORTA = 0xC6; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4057  00342A  0EC6               	movlw	198
  4058  00342C  6E80               	movwf	128,c	;volatile
  4059  00342E  988B               	bcf	3979,4,c	;volatile
  4060  003430  968B               	bcf	3979,3,c	;volatile
  4061  003432  868B               	bsf	3979,3,c	;volatile
  4062  003434  888B               	bsf	3979,4,c	;volatile
  4063                           
  4064                           ;libraries/lcd_highlevel.c: 115:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4065  003436  0E09               	movlw	9
  4066  003438  6E80               	movwf	128,c	;volatile
  4067  00343A  968B               	bcf	3979,3,c	;volatile
  4068  00343C  868B               	bsf	3979,3,c	;volatile
  4069                           
  4070                           ;libraries/lcd_highlevel.c: 116:   PORTA = 0xD0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4071  00343E  0ED0               	movlw	208
  4072  003440  6E80               	movwf	128,c	;volatile
  4073  003442  988B               	bcf	3979,4,c	;volatile
  4074  003444  968B               	bcf	3979,3,c	;volatile
  4075  003446  868B               	bsf	3979,3,c	;volatile
  4076  003448  888B               	bsf	3979,4,c	;volatile
  4077                           
  4078                           ;libraries/lcd_highlevel.c: 117:   PORTA = 0xA4; LATC3 = 0; LATC3 = 1;;
  4079  00344A  0EA4               	movlw	164
  4080  00344C  6E80               	movwf	128,c	;volatile
  4081  00344E  968B               	bcf	3979,3,c	;volatile
  4082  003450  868B               	bsf	3979,3,c	;volatile
  4083                           
  4084                           ;libraries/lcd_highlevel.c: 118:   PORTA = 0xA1; LATC3 = 0; LATC3 = 1;;
  4085  003452  0EA1               	movlw	161
  4086  003454  6E80               	movwf	128,c	;volatile
  4087  003456  968B               	bcf	3979,3,c	;volatile
  4088  003458  868B               	bsf	3979,3,c	;volatile
  4089                           
  4090                           ;libraries/lcd_highlevel.c: 119:   PORTA = 0xE0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4091  00345A  0EE0               	movlw	224
  4092  00345C  6E80               	movwf	128,c	;volatile
  4093  00345E  988B               	bcf	3979,4,c	;volatile
  4094  003460  968B               	bcf	3979,3,c	;volatile
  4095  003462  868B               	bsf	3979,3,c	;volatile
  4096  003464  888B               	bsf	3979,4,c	;volatile
  4097                           
  4098                           ;libraries/lcd_highlevel.c: 120:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4099  003466  0ED0               	movlw	208
  4100  003468  6E80               	movwf	128,c	;volatile
  4101  00346A  968B               	bcf	3979,3,c	;volatile
  4102  00346C  868B               	bsf	3979,3,c	;volatile
  4103                           
  4104                           ;libraries/lcd_highlevel.c: 121:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4105  00346E  0E00               	movlw	0
  4106  003470  6E80               	movwf	128,c	;volatile
  4107  003472  968B               	bcf	3979,3,c	;volatile
  4108  003474  868B               	bsf	3979,3,c	;volatile
  4109                           
  4110                           ;libraries/lcd_highlevel.c: 122:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4111  003476  0E05               	movlw	5
  4112  003478  6E80               	movwf	128,c	;volatile
  4113  00347A  968B               	bcf	3979,3,c	;volatile
  4114  00347C  868B               	bsf	3979,3,c	;volatile
  4115                           
  4116                           ;libraries/lcd_highlevel.c: 123:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4117  00347E  0E0E               	movlw	14
  4118  003480  6E80               	movwf	128,c	;volatile
  4119  003482  968B               	bcf	3979,3,c	;volatile
  4120  003484  868B               	bsf	3979,3,c	;volatile
  4121                           
  4122                           ;libraries/lcd_highlevel.c: 124:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4123  003486  0E15               	movlw	21
  4124  003488  6E80               	movwf	128,c	;volatile
  4125  00348A  968B               	bcf	3979,3,c	;volatile
  4126  00348C  868B               	bsf	3979,3,c	;volatile
  4127                           
  4128                           ;libraries/lcd_highlevel.c: 125:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4129  00348E  0E0D               	movlw	13
  4130  003490  6E80               	movwf	128,c	;volatile
  4131  003492  968B               	bcf	3979,3,c	;volatile
  4132  003494  868B               	bsf	3979,3,c	;volatile
  4133                           
  4134                           ;libraries/lcd_highlevel.c: 126:   PORTA = 0x37; LATC3 = 0; LATC3 = 1;;
  4135  003496  0E37               	movlw	55
  4136  003498  6E80               	movwf	128,c	;volatile
  4137  00349A  968B               	bcf	3979,3,c	;volatile
  4138  00349C  868B               	bsf	3979,3,c	;volatile
  4139                           
  4140                           ;libraries/lcd_highlevel.c: 127:   PORTA = 0x43; LATC3 = 0; LATC3 = 1;;
  4141  00349E  0E43               	movlw	67
  4142  0034A0  6E80               	movwf	128,c	;volatile
  4143  0034A2  968B               	bcf	3979,3,c	;volatile
  4144  0034A4  868B               	bsf	3979,3,c	;volatile
  4145                           
  4146                           ;libraries/lcd_highlevel.c: 128:   PORTA = 0x47; LATC3 = 0; LATC3 = 1;;
  4147  0034A6  0E47               	movlw	71
  4148  0034A8  6E80               	movwf	128,c	;volatile
  4149  0034AA  968B               	bcf	3979,3,c	;volatile
  4150  0034AC  868B               	bsf	3979,3,c	;volatile
  4151                           
  4152                           ;libraries/lcd_highlevel.c: 129:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4153  0034AE  0E09               	movlw	9
  4154  0034B0  6E80               	movwf	128,c	;volatile
  4155  0034B2  968B               	bcf	3979,3,c	;volatile
  4156  0034B4  868B               	bsf	3979,3,c	;volatile
  4157                           
  4158                           ;libraries/lcd_highlevel.c: 130:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4159  0034B6  0E15               	movlw	21
  4160  0034B8  6E80               	movwf	128,c	;volatile
  4161  0034BA  968B               	bcf	3979,3,c	;volatile
  4162  0034BC  868B               	bsf	3979,3,c	;volatile
  4163                           
  4164                           ;libraries/lcd_highlevel.c: 131:   PORTA = 0x12; LATC3 = 0; LATC3 = 1;;
  4165  0034BE  0E12               	movlw	18
  4166  0034C0  6E80               	movwf	128,c	;volatile
  4167  0034C2  968B               	bcf	3979,3,c	;volatile
  4168  0034C4  868B               	bsf	3979,3,c	;volatile
  4169                           
  4170                           ;libraries/lcd_highlevel.c: 132:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4171  0034C6  0E16               	movlw	22
  4172  0034C8  6E80               	movwf	128,c	;volatile
  4173  0034CA  968B               	bcf	3979,3,c	;volatile
  4174  0034CC  868B               	bsf	3979,3,c	;volatile
  4175                           
  4176                           ;libraries/lcd_highlevel.c: 133:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4177  0034CE  0E19               	movlw	25
  4178  0034D0  6E80               	movwf	128,c	;volatile
  4179  0034D2  968B               	bcf	3979,3,c	;volatile
  4180  0034D4  868B               	bsf	3979,3,c	;volatile
  4181                           
  4182                           ;libraries/lcd_highlevel.c: 134:   PORTA = 0xE1; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4183  0034D6  0EE1               	movlw	225
  4184  0034D8  6E80               	movwf	128,c	;volatile
  4185  0034DA  988B               	bcf	3979,4,c	;volatile
  4186  0034DC  968B               	bcf	3979,3,c	;volatile
  4187  0034DE  868B               	bsf	3979,3,c	;volatile
  4188  0034E0  888B               	bsf	3979,4,c	;volatile
  4189                           
  4190                           ;libraries/lcd_highlevel.c: 135:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4191  0034E2  0ED0               	movlw	208
  4192  0034E4  6E80               	movwf	128,c	;volatile
  4193  0034E6  968B               	bcf	3979,3,c	;volatile
  4194  0034E8  868B               	bsf	3979,3,c	;volatile
  4195                           
  4196                           ;libraries/lcd_highlevel.c: 136:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4197  0034EA  0E00               	movlw	0
  4198  0034EC  6E80               	movwf	128,c	;volatile
  4199  0034EE  968B               	bcf	3979,3,c	;volatile
  4200  0034F0  868B               	bsf	3979,3,c	;volatile
  4201                           
  4202                           ;libraries/lcd_highlevel.c: 137:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4203  0034F2  0E05               	movlw	5
  4204  0034F4  6E80               	movwf	128,c	;volatile
  4205  0034F6  968B               	bcf	3979,3,c	;volatile
  4206  0034F8  868B               	bsf	3979,3,c	;volatile
  4207                           
  4208                           ;libraries/lcd_highlevel.c: 138:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4209  0034FA  0E0D               	movlw	13
  4210  0034FC  6E80               	movwf	128,c	;volatile
  4211  0034FE  968B               	bcf	3979,3,c	;volatile
  4212  003500  868B               	bsf	3979,3,c	;volatile
  4213                           
  4214                           ;libraries/lcd_highlevel.c: 139:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  4215  003502  0E0C               	movlw	12
  4216  003504  6E80               	movwf	128,c	;volatile
  4217  003506  968B               	bcf	3979,3,c	;volatile
  4218  003508  868B               	bsf	3979,3,c	;volatile
  4219                           
  4220                           ;libraries/lcd_highlevel.c: 140:   PORTA = 0x06; LATC3 = 0; LATC3 = 1;;
  4221  00350A  0E06               	movlw	6
  4222  00350C  6E80               	movwf	128,c	;volatile
  4223  00350E  968B               	bcf	3979,3,c	;volatile
  4224  003510  868B               	bsf	3979,3,c	;volatile
  4225                           
  4226                           ;libraries/lcd_highlevel.c: 141:   PORTA = 0x2D; LATC3 = 0; LATC3 = 1;;
  4227  003512  0E2D               	movlw	45
  4228  003514  6E80               	movwf	128,c	;volatile
  4229  003516  968B               	bcf	3979,3,c	;volatile
  4230  003518  868B               	bsf	3979,3,c	;volatile
  4231                           
  4232                           ;libraries/lcd_highlevel.c: 142:   PORTA = 0x44; LATC3 = 0; LATC3 = 1;;
  4233  00351A  0E44               	movlw	68
  4234  00351C  6E80               	movwf	128,c	;volatile
  4235  00351E  968B               	bcf	3979,3,c	;volatile
  4236  003520  868B               	bsf	3979,3,c	;volatile
  4237                           
  4238                           ;libraries/lcd_highlevel.c: 143:   PORTA = 0x40; LATC3 = 0; LATC3 = 1;;
  4239  003522  0E40               	movlw	64
  4240  003524  6E80               	movwf	128,c	;volatile
  4241  003526  968B               	bcf	3979,3,c	;volatile
  4242  003528  868B               	bsf	3979,3,c	;volatile
  4243                           
  4244                           ;libraries/lcd_highlevel.c: 144:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4245  00352A  0E0E               	movlw	14
  4246  00352C  6E80               	movwf	128,c	;volatile
  4247  00352E  968B               	bcf	3979,3,c	;volatile
  4248  003530  868B               	bsf	3979,3,c	;volatile
  4249                           
  4250                           ;libraries/lcd_highlevel.c: 145:   PORTA = 0x1C; LATC3 = 0; LATC3 = 1;;
  4251  003532  0E1C               	movlw	28
  4252  003534  6E80               	movwf	128,c	;volatile
  4253  003536  968B               	bcf	3979,3,c	;volatile
  4254  003538  868B               	bsf	3979,3,c	;volatile
  4255                           
  4256                           ;libraries/lcd_highlevel.c: 146:   PORTA = 0x18; LATC3 = 0; LATC3 = 1;;
  4257  00353A  0E18               	movlw	24
  4258  00353C  6E80               	movwf	128,c	;volatile
  4259  00353E  968B               	bcf	3979,3,c	;volatile
  4260  003540  868B               	bsf	3979,3,c	;volatile
  4261                           
  4262                           ;libraries/lcd_highlevel.c: 147:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4263  003542  0E16               	movlw	22
  4264  003544  6E80               	movwf	128,c	;volatile
  4265  003546  968B               	bcf	3979,3,c	;volatile
  4266  003548  868B               	bsf	3979,3,c	;volatile
  4267                           
  4268                           ;libraries/lcd_highlevel.c: 148:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4269  00354A  0E19               	movlw	25
  4270  00354C  6E80               	movwf	128,c	;volatile
  4271  00354E  968B               	bcf	3979,3,c	;volatile
  4272  003550  868B               	bsf	3979,3,c	;volatile
  4273                           
  4274                           ;libraries/lcd_highlevel.c: 149:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4275  003552  0E2A               	movlw	42
  4276  003554  6E80               	movwf	128,c	;volatile
  4277  003556  988B               	bcf	3979,4,c	;volatile
  4278  003558  968B               	bcf	3979,3,c	;volatile
  4279  00355A  868B               	bsf	3979,3,c	;volatile
  4280  00355C  888B               	bsf	3979,4,c	;volatile
  4281                           
  4282                           ;libraries/lcd_highlevel.c: 150:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4283  00355E  0E00               	movlw	0
  4284  003560  6E80               	movwf	128,c	;volatile
  4285  003562  968B               	bcf	3979,3,c	;volatile
  4286  003564  868B               	bsf	3979,3,c	;volatile
  4287                           
  4288                           ;libraries/lcd_highlevel.c: 151:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4289  003566  0E00               	movlw	0
  4290  003568  6E80               	movwf	128,c	;volatile
  4291  00356A  968B               	bcf	3979,3,c	;volatile
  4292  00356C  868B               	bsf	3979,3,c	;volatile
  4293                           
  4294                           ;libraries/lcd_highlevel.c: 152:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4295  00356E  0E00               	movlw	0
  4296  003570  6E80               	movwf	128,c	;volatile
  4297  003572  968B               	bcf	3979,3,c	;volatile
  4298  003574  868B               	bsf	3979,3,c	;volatile
  4299                           
  4300                           ;libraries/lcd_highlevel.c: 153:   PORTA = 0xEF; LATC3 = 0; LATC3 = 1;;
  4301  003576  0EEF               	movlw	239
  4302  003578  6E80               	movwf	128,c	;volatile
  4303  00357A  968B               	bcf	3979,3,c	;volatile
  4304  00357C  868B               	bsf	3979,3,c	;volatile
  4305                           
  4306                           ;libraries/lcd_highlevel.c: 154:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4307  00357E  0E2B               	movlw	43
  4308  003580  6E80               	movwf	128,c	;volatile
  4309  003582  988B               	bcf	3979,4,c	;volatile
  4310  003584  968B               	bcf	3979,3,c	;volatile
  4311  003586  868B               	bsf	3979,3,c	;volatile
  4312  003588  888B               	bsf	3979,4,c	;volatile
  4313                           
  4314                           ;libraries/lcd_highlevel.c: 155:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4315  00358A  0E00               	movlw	0
  4316  00358C  6E80               	movwf	128,c	;volatile
  4317  00358E  968B               	bcf	3979,3,c	;volatile
  4318  003590  868B               	bsf	3979,3,c	;volatile
  4319                           
  4320                           ;libraries/lcd_highlevel.c: 156:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4321  003592  0E00               	movlw	0
  4322  003594  6E80               	movwf	128,c	;volatile
  4323  003596  968B               	bcf	3979,3,c	;volatile
  4324  003598  868B               	bsf	3979,3,c	;volatile
  4325                           
  4326                           ;libraries/lcd_highlevel.c: 157:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4327  00359A  0E01               	movlw	1
  4328  00359C  6E80               	movwf	128,c	;volatile
  4329  00359E  968B               	bcf	3979,3,c	;volatile
  4330  0035A0  868B               	bsf	3979,3,c	;volatile
  4331                           
  4332                           ;libraries/lcd_highlevel.c: 158:   PORTA = 0x3F; LATC3 = 0; LATC3 = 1;;
  4333  0035A2  0E3F               	movlw	63
  4334  0035A4  6E80               	movwf	128,c	;volatile
  4335  0035A6  968B               	bcf	3979,3,c	;volatile
  4336  0035A8  868B               	bsf	3979,3,c	;volatile
  4337                           
  4338                           ;libraries/lcd_highlevel.c: 159:   PORTA = 0x26; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4339  0035AA  0E26               	movlw	38
  4340  0035AC  6E80               	movwf	128,c	;volatile
  4341  0035AE  988B               	bcf	3979,4,c	;volatile
  4342  0035B0  968B               	bcf	3979,3,c	;volatile
  4343  0035B2  868B               	bsf	3979,3,c	;volatile
  4344  0035B4  888B               	bsf	3979,4,c	;volatile
  4345                           
  4346                           ;libraries/lcd_highlevel.c: 160:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4347  0035B6  0E01               	movlw	1
  4348  0035B8  6E80               	movwf	128,c	;volatile
  4349  0035BA  968B               	bcf	3979,3,c	;volatile
  4350  0035BC  868B               	bsf	3979,3,c	;volatile
  4351                           
  4352                           ;libraries/lcd_highlevel.c: 161:   PORTA = 0x29; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4353  0035BE  0E29               	movlw	41
  4354  0035C0  6E80               	movwf	128,c	;volatile
  4355  0035C2  988B               	bcf	3979,4,c	;volatile
  4356  0035C4  968B               	bcf	3979,3,c	;volatile
  4357  0035C6  868B               	bsf	3979,3,c	;volatile
  4358  0035C8  888B               	bsf	3979,4,c	;volatile
  4359  0035CA  0012               	return		;funcret
  4360  0035CC                     __end_of_LCD_Init:
  4361                           	callstack 0
  4362                           
  4363 ;; *************** function _LCD_Lowlevel_Init *****************
  4364 ;; Defined at:
  4365 ;;		line 17 in file "libraries/lcd_lowlevel.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  i               4   18[COMRAM] unsigned long 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4379 ;;      Params:         0       0       0       0       0       0       0
  4380 ;;      Locals:         4       0       0       0       0       0       0
  4381 ;;      Temps:          1       0       0       0       0       0       0
  4382 ;;      Totals:         5       0       0       0       0       0       0
  4383 ;;Total ram usage:        5 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 4
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_LCD_Init
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text9
  4394  0058E8                     __ptext9:
  4395                           	callstack 0
  4396  0058E8                     _LCD_Lowlevel_Init:
  4397                           	callstack 24
  4398  0058E8                     
  4399                           ;libraries/lcd_lowlevel.c: 19:   uint32_t i;;libraries/lcd_lowlevel.c: 20:   TRISC5 = 0;
  4400  0058E8  9A94               	bcf	3988,5,c	;volatile
  4401                           
  4402                           ;libraries/lcd_lowlevel.c: 21:   TRISC2 = 0;
  4403  0058EA  9494               	bcf	3988,2,c	;volatile
  4404                           
  4405                           ;libraries/lcd_lowlevel.c: 22:   TRISC3 = 0;
  4406  0058EC  9694               	bcf	3988,3,c	;volatile
  4407                           
  4408                           ;libraries/lcd_lowlevel.c: 23:   TRISC4 = 0;
  4409  0058EE  9894               	bcf	3988,4,c	;volatile
  4410  0058F0                     
  4411                           ;libraries/lcd_lowlevel.c: 25:   TRISA = 0x00;
  4412  0058F0  0E00               	movlw	0
  4413  0058F2  6E92               	movwf	146,c	;volatile
  4414  0058F4                     
  4415                           ;libraries/lcd_lowlevel.c: 28:  LATC5 = 0;
  4416  0058F4  9A8B               	bcf	3979,5,c	;volatile
  4417  0058F6                     
  4418                           ;libraries/lcd_lowlevel.c: 29:  LATC2 = 1;
  4419  0058F6  848B               	bsf	3979,2,c	;volatile
  4420  0058F8                     
  4421                           ;libraries/lcd_lowlevel.c: 30:  LATC3 = 1;
  4422  0058F8  868B               	bsf	3979,3,c	;volatile
  4423  0058FA                     
  4424                           ;libraries/lcd_lowlevel.c: 31:  LATC4 = 1;
  4425  0058FA  888B               	bsf	3979,4,c	;volatile
  4426                           
  4427                           ;libraries/lcd_lowlevel.c: 33:   for(i=0;i<12;i++)
  4428  0058FC  0E00               	movlw	0
  4429  0058FE  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4430  005900  0E00               	movlw	0
  4431  005902  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4432  005904  0E00               	movlw	0
  4433  005906  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4434  005908  0E00               	movlw	0
  4435  00590A  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4436  00590C                     l3905:
  4437                           
  4438                           ;libraries/lcd_lowlevel.c: 34:   {;libraries/lcd_lowlevel.c: 35:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4439  00590C  0ED0               	movlw	208
  4440  00590E  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4441  005910  0ECA               	movlw	202
  4442  005912                     u7947:
  4443  005912  2EE8               	decfsz	wreg,f,c
  4444  005914  D7FE               	bra	u7947
  4445  005916  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4446  005918  D7FC               	bra	u7947
  4447  00591A                     
  4448                           ;libraries/lcd_lowlevel.c: 36:   }
  4449  00591A  0E01               	movlw	1
  4450  00591C  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4451  00591E  0E00               	movlw	0
  4452  005920  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4453  005922  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4454  005924  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4455  005926  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4456  005928  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4457  00592A  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4458  00592C  E109               	bnz	u2300
  4459  00592E  0E0C               	movlw	12
  4460  005930  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4461  005932  A0D8               	btfss	status,0,c
  4462  005934  EF9E  F02C         	goto	u2301
  4463  005938  EFA0  F02C         	goto	u2300
  4464  00593C                     u2301:
  4465  00593C  EF86  F02C         	goto	l3905
  4466  005940                     u2300:
  4467  005940                     
  4468                           ;libraries/lcd_lowlevel.c: 38:   for(i=0;i<12;i++)
  4469  005940  0E00               	movlw	0
  4470  005942  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4471  005944  0E00               	movlw	0
  4472  005946  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4473  005948  0E00               	movlw	0
  4474  00594A  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4475  00594C  0E00               	movlw	0
  4476  00594E  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4477  005950                     l3917:
  4478                           
  4479                           ;libraries/lcd_lowlevel.c: 39:   {;libraries/lcd_lowlevel.c: 40:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4480  005950  0ED0               	movlw	208
  4481  005952  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4482  005954  0ECA               	movlw	202
  4483  005956                     u7957:
  4484  005956  2EE8               	decfsz	wreg,f,c
  4485  005958  D7FE               	bra	u7957
  4486  00595A  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4487  00595C  D7FC               	bra	u7957
  4488  00595E                     
  4489                           ;libraries/lcd_lowlevel.c: 41:   }
  4490  00595E  0E01               	movlw	1
  4491  005960  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4492  005962  0E00               	movlw	0
  4493  005964  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4494  005966  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4495  005968  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4496  00596A  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4497  00596C  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4498  00596E  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4499  005970  E109               	bnz	u2310
  4500  005972  0E0C               	movlw	12
  4501  005974  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4502  005976  A0D8               	btfss	status,0,c
  4503  005978  EFC0  F02C         	goto	u2311
  4504  00597C  EFC2  F02C         	goto	u2310
  4505  005980                     u2311:
  4506  005980  EFA8  F02C         	goto	l3917
  4507  005984                     u2310:
  4508  005984  0012               	return		;funcret
  4509  005986                     __end_of_LCD_Lowlevel_Init:
  4510                           	callstack 0
  4511                           
  4512 ;; *************** function _Factory_exec *****************
  4513 ;; Defined at:
  4514 ;;		line 56 in file "class/factory.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  ev              1    0[BANK1 ] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4528 ;;      Params:         0       0       0       0       0       0       0
  4529 ;;      Locals:         0       0       1       0       0       0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0
  4531 ;;      Totals:         0       0       1       0       0       0       0
  4532 ;;Total ram usage:        1 bytes
  4533 ;; Hardware stack levels used: 1
  4534 ;; Hardware stack levels required when called: 15
  4535 ;; This function calls:
  4536 ;;		_XF_popEvent
  4537 ;;		_displaySM
  4538 ;;		_gameControllerSM
  4539 ;;		_sleepSM
  4540 ;;		_touchScreenSM
  4541 ;; This function is called by:
  4542 ;;		_main
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text10
  4547  005EE2                     __ptext10:
  4548                           	callstack 0
  4549  005EE2                     _Factory_exec:
  4550                           	callstack 15
  4551  005EE2                     
  4552                           ;class/factory.c: 59:     Event ev;;class/factory.c: 60:     ev = XF_popEvent(0);
  4553  005EE2  0E00               	movlw	0
  4554  005EE4  EC41  F02F         	call	_XF_popEvent
  4555  005EE8  0101               	movlb	1	; () banked
  4556  005EEA  6FEF               	movwf	Factory_exec@ev& (0+255),b
  4557  005EEC                     
  4558                           ; BSR set to: 1
  4559                           ;class/factory.c: 61:     if (ev != NULLEVENT)
  4560  005EEC  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4561  005EEE  B4D8               	btfsc	status,2,c
  4562  005EF0  EF7C  F02F         	goto	u7911
  4563  005EF4  EF7E  F02F         	goto	u7910
  4564  005EF8                     u7911:
  4565  005EF8  EF9B  F02F         	goto	l106
  4566  005EFC                     u7910:
  4567  005EFC                     
  4568                           ; BSR set to: 1
  4569                           ;class/factory.c: 62:     {;class/factory.c: 63:         sleepSM(ev);
  4570  005EFC  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4571  005EFE  ECE3  F031         	call	_sleepSM
  4572  005F02                     
  4573                           ;class/factory.c: 64:         touchScreenSM(ev,&g1);
  4574  005F02  0E00               	movlw	low _g1
  4575  005F04  0100               	movlb	0	; () banked
  4576  005F06  6FB0               	movwf	touchScreenSM@g& (0+255),b
  4577  005F08  0E01               	movlw	high _g1
  4578  005F0A  6FB1               	movwf	(touchScreenSM@g+1)& (0+255),b
  4579  005F0C  0101               	movlb	1	; () banked
  4580  005F0E  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4581  005F10  ECC3  F02C         	call	_touchScreenSM
  4582  005F14                     
  4583                           ;class/factory.c: 65:         displaySM(ev,&g1);
  4584  005F14  0E00               	movlw	low _g1
  4585  005F16  0100               	movlb	0	; () banked
  4586  005F18  6FA3               	movwf	displaySM@g& (0+255),b
  4587  005F1A  0E01               	movlw	high _g1
  4588  005F1C  6FA4               	movwf	(displaySM@g+1)& (0+255),b
  4589  005F1E  0101               	movlb	1	; () banked
  4590  005F20  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4591  005F22  EC62  F024         	call	_displaySM
  4592  005F26                     
  4593                           ;class/factory.c: 66:         gameControllerSM(ev,&g1);
  4594  005F26  0E00               	movlw	low _g1
  4595  005F28  6E3C               	movwf	gameControllerSM@g^0,c
  4596  005F2A  0E01               	movlw	high _g1
  4597  005F2C  6E3D               	movwf	(gameControllerSM@g+1)^0,c
  4598  005F2E  0101               	movlb	1	; () banked
  4599  005F30  51EF               	movf	Factory_exec@ev& (0+255),w,b
  4600  005F32  EC2E  F027         	call	_gameControllerSM
  4601  005F36                     l106:
  4602  005F36  0012               	return		;funcret
  4603  005F38                     __end_of_Factory_exec:
  4604                           	callstack 0
  4605                           
  4606 ;; *************** function _touchScreenSM *****************
  4607 ;; Defined at:
  4608 ;;		line 25 in file "stateMachine/touchScreenSM.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  ev              1    wreg     unsigned char 
  4611 ;;  g               2   80[BANK0 ] PTR struct GameParameter
  4612 ;;		 -> g1(239), 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  ev              1   84[BANK0 ] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4624 ;;      Params:         0       2       0       0       0       0       0
  4625 ;;      Locals:         0       1       0       0       0       0       0
  4626 ;;      Temps:          0       2       0       0       0       0       0
  4627 ;;      Totals:         0       5       0       0       0       0       0
  4628 ;;Total ram usage:        5 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 13
  4631 ;; This function calls:
  4632 ;;		_touchScreenController
  4633 ;; This function is called by:
  4634 ;;		_Factory_exec
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text11
  4639  005986                     __ptext11:
  4640                           	callstack 0
  4641  005986                     _touchScreenSM:
  4642                           	callstack 16
  4643                           
  4644                           ;incstack = 0
  4645                           ;touchScreenSM@ev stored from wreg
  4646  005986  0100               	movlb	0	; () banked
  4647  005988  6FB4               	movwf	touchScreenSM@ev& (0+255),b
  4648  00598A                     
  4649                           ;stateMachine/touchScreenSM.c: 25: void touchScreenSM(Event ev, GameParameters* g);state
      +                          Machine/touchScreenSM.c: 26: {;stateMachine/touchScreenSM.c: 27:     switch(touchScreenS
      +                          tate)
  4650  00598A  EFF6  F02C         	goto	l10329
  4651  00598E                     l10311:
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;stateMachine/touchScreenSM.c: 30:             if(ev==evPress)
  4655  00598E  05B4               	decf	touchScreenSM@ev& (0+255),w,b
  4656  005990  A4D8               	btfss	status,2,c
  4657  005992  EFCD  F02C         	goto	u7791
  4658  005996  EFCF  F02C         	goto	u7790
  4659  00599A                     u7791:
  4660  00599A  EF0C  F02D         	goto	l498
  4661  00599E                     u7790:
  4662  00599E                     
  4663                           ; BSR set to: 0
  4664                           ;stateMachine/touchScreenSM.c: 31:             {;stateMachine/touchScreenSM.c: 32:      
      +                                     touchScreenState=CALCULATEPOSITION;
  4665  00599E  0E01               	movlw	1
  4666  0059A0  6FDE               	movwf	_touchScreenState& (0+255),b
  4667  0059A2                     l10315:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;stateMachine/touchScreenSM.c: 33:                 touchScreenController(g);
  4671  0059A2  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  4672  0059A6  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  4673  0059AA  ECE6  F01A         	call	_touchScreenController	;wreg free
  4674  0059AE  EF0C  F02D         	goto	l498
  4675  0059B2                     l10317:
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;stateMachine/touchScreenSM.c: 37:             if(ev==evRelease)
  4679  0059B2  0E02               	movlw	2
  4680  0059B4  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  4681  0059B6  A4D8               	btfss	status,2,c
  4682  0059B8  EFE0  F02C         	goto	u7801
  4683  0059BC  EFE2  F02C         	goto	u7800
  4684  0059C0                     u7801:
  4685  0059C0  EFEA  F02C         	goto	l10323
  4686  0059C4                     u7800:
  4687  0059C4                     
  4688                           ; BSR set to: 0
  4689                           ;stateMachine/touchScreenSM.c: 38:             {;stateMachine/touchScreenSM.c: 39:      
      +                                     touchScreenState=WAITING;
  4690  0059C4  0E00               	movlw	0
  4691  0059C6  6FDE               	movwf	_touchScreenState& (0+255),b
  4692  0059C8                     
  4693                           ; BSR set to: 0
  4694                           ;stateMachine/touchScreenSM.c: 40:                 touchScreenController(g);
  4695  0059C8  C0B0  F090         	movff	touchScreenSM@g,touchScreenController@g
  4696  0059CC  C0B1  F091         	movff	touchScreenSM@g+1,touchScreenController@g+1
  4697  0059D0  ECE6  F01A         	call	_touchScreenController	;wreg free
  4698  0059D4                     l10323:
  4699                           
  4700                           ;stateMachine/touchScreenSM.c: 42:             if(ev==evTimerPos)
  4701  0059D4  0E04               	movlw	4
  4702  0059D6  0100               	movlb	0	; () banked
  4703  0059D8  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  4704  0059DA  A4D8               	btfss	status,2,c
  4705  0059DC  EFF2  F02C         	goto	u7811
  4706  0059E0  EFF4  F02C         	goto	u7810
  4707  0059E4                     u7811:
  4708  0059E4  EF0C  F02D         	goto	l498
  4709  0059E8                     u7810:
  4710  0059E8  EFD1  F02C         	goto	l10315
  4711  0059EC                     l10329:
  4712  0059EC  0100               	movlb	0	; () banked
  4713  0059EE  51DE               	movf	_touchScreenState& (0+255),w,b
  4714  0059F0  6FB2               	movwf	??_touchScreenSM& (0+255),b
  4715  0059F2  6BB3               	clrf	(??_touchScreenSM+1)& (0+255),b
  4716                           
  4717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4718                           ; Switch size 1, requested type "simple"
  4719                           ; Number of cases is 1, Range of values is 0 to 0
  4720                           ; switch strategies available:
  4721                           ; Name         Instructions Cycles
  4722                           ; simple_byte            4     3 (average)
  4723                           ;	Chosen strategy is simple_byte
  4724  0059F4  51B3               	movf	(??_touchScreenSM+1)& (0+255),w,b
  4725  0059F6  0A00               	xorlw	0	; case 0
  4726  0059F8  B4D8               	btfsc	status,2,c
  4727  0059FA  EF01  F02D         	goto	l10681
  4728  0059FE  EF0C  F02D         	goto	l498
  4729  005A02                     l10681:
  4730                           
  4731                           ; BSR set to: 0
  4732                           ; Switch size 1, requested type "simple"
  4733                           ; Number of cases is 2, Range of values is 0 to 1
  4734                           ; switch strategies available:
  4735                           ; Name         Instructions Cycles
  4736                           ; simple_byte            7     4 (average)
  4737                           ;	Chosen strategy is simple_byte
  4738  005A02  51B2               	movf	??_touchScreenSM& (0+255),w,b
  4739  005A04  0A00               	xorlw	0	; case 0
  4740  005A06  B4D8               	btfsc	status,2,c
  4741  005A08  EFC7  F02C         	goto	l10311
  4742  005A0C  0A01               	xorlw	1	; case 1
  4743  005A0E  B4D8               	btfsc	status,2,c
  4744  005A10  EFD9  F02C         	goto	l10317
  4745  005A14  EF0C  F02D         	goto	l498
  4746  005A18                     l498:
  4747  005A18  0012               	return		;funcret
  4748  005A1A                     __end_of_touchScreenSM:
  4749                           	callstack 0
  4750                           
  4751 ;; *************** function _touchScreenController *****************
  4752 ;; Defined at:
  4753 ;;		line 54 in file "stateMachine/touchScreenSM.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  g               2   48[BANK0 ] PTR struct GameParameter
  4756 ;;		 -> g1(239), 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  valueX          2   78[BANK0 ] unsigned short 
  4759 ;;  valueY          2   76[BANK0 ] unsigned short 
  4760 ;;  s              20   56[BANK0 ] unsigned char [20]
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4770 ;;      Params:         0       2       0       0       0       0       0
  4771 ;;      Locals:         0      24       0       0       0       0       0
  4772 ;;      Temps:          0       6       0       0       0       0       0
  4773 ;;      Totals:         0      32       0       0       0       0       0
  4774 ;;Total ram usage:       32 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 12
  4777 ;; This function calls:
  4778 ;;		_GameParameters_setX
  4779 ;;		_GameParameters_setY
  4780 ;;		_LCD_DrawText
  4781 ;;		_XF_scheduleTimer
  4782 ;;		___fldiv
  4783 ;;		___fltol
  4784 ;;		___xxtofl
  4785 ;;		_configMeasure
  4786 ;;		_configTouch
  4787 ;;		_sprintf
  4788 ;; This function is called by:
  4789 ;;		_touchScreenSM
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text12
  4794  0035CC                     __ptext12:
  4795                           	callstack 0
  4796  0035CC                     _touchScreenController:
  4797                           	callstack 16
  4798  0035CC                     
  4799                           ;stateMachine/touchScreenSM.c: 54: void touchScreenController(GameParameters* g);stateMa
      +                          chine/touchScreenSM.c: 55: {;stateMachine/touchScreenSM.c: 56:     char s[20];;stateMach
      +                          ine/touchScreenSM.c: 58:     switch(touchScreenState)
  4800  0035CC  EF04  F01C         	goto	l10243
  4801  0035D0                     l502:
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;stateMachine/touchScreenSM.c: 63:             INTEDG1=0;
  4805  0035D0  9AF1               	bcf	4081,5,c	;volatile
  4806  0035D2                     
  4807                           ; BSR set to: 0
  4808                           ;stateMachine/touchScreenSM.c: 64:             configTouch();
  4809  0035D2  EC6B  F031         	call	_configTouch	;wreg free
  4810                           
  4811                           ;stateMachine/touchScreenSM.c: 67:             break;
  4812  0035D6  EF1A  F01C         	goto	l515
  4813  0035DA                     l504:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;stateMachine/touchScreenSM.c: 72:             INT1IE=0;
  4817  0035DA  96F0               	bcf	4080,3,c	;volatile
  4818  0035DC                     
  4819                           ; BSR set to: 0
  4820                           ;stateMachine/touchScreenSM.c: 73:             configMeasure(0);
  4821  0035DC  0E00               	movlw	0
  4822  0035DE  ECF0  F02F         	call	_configMeasure
  4823  0035E2                     l505:
  4824  0035E2  B2C2               	btfsc	194,1,c	;volatile
  4825  0035E4  EFF6  F01A         	goto	u7711
  4826  0035E8  EFF8  F01A         	goto	u7710
  4827  0035EC                     u7711:
  4828  0035EC  EFF1  F01A         	goto	l505
  4829  0035F0                     u7710:
  4830  0035F0                     
  4831                           ;stateMachine/touchScreenSM.c: 75:             uint16_t valueX;;stateMachine/touchScreen
      +                          SM.c: 76:             valueX=(ADRESH<<8)+ADRESL;
  4832  0035F0  50C4               	movf	196,w,c	;volatile
  4833  0035F2  0100               	movlb	0	; () banked
  4834  0035F4  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4835  0035F6  6B92               	clrf	??_touchScreenController& (0+255),b
  4836  0035F8  50C3               	movf	195,w,c	;volatile
  4837  0035FA  2592               	addwf	??_touchScreenController& (0+255),w,b
  4838  0035FC  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4839  0035FE  0E00               	movlw	0
  4840  003600  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  4841  003602  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4842                           
  4843                           ;stateMachine/touchScreenSM.c: 77:             if(valueX<=120)
  4844  003604  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  4845  003606  E107               	bnz	u7721
  4846  003608  0E79               	movlw	121
  4847  00360A  5DAE               	subwf	touchScreenController@valueX& (0+255),w,b
  4848  00360C  B0D8               	btfsc	status,0,c
  4849  00360E  EF0B  F01B         	goto	u7721
  4850  003612  EF0D  F01B         	goto	u7720
  4851  003616                     u7721:
  4852  003616  EF11  F01B         	goto	l10211
  4853  00361A                     u7720:
  4854  00361A                     
  4855                           ; BSR set to: 0
  4856                           ;stateMachine/touchScreenSM.c: 78:             {;stateMachine/touchScreenSM.c: 79:      
      +                                     valueX=120;
  4857  00361A  0E00               	movlw	0
  4858  00361C  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4859  00361E  0E78               	movlw	120
  4860  003620  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4861  003622                     l10211:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;stateMachine/touchScreenSM.c: 81:             valueX=(valueX-120)/2.35;
  4865  003622  0E66               	movlw	102
  4866  003624  6E24               	movwf	___fldiv@a^0,c
  4867  003626  0E66               	movlw	102
  4868  003628  6E25               	movwf	(___fldiv@a+1)^0,c
  4869  00362A  0E16               	movlw	22
  4870  00362C  6E26               	movwf	(___fldiv@a+2)^0,c
  4871  00362E  0E40               	movlw	64
  4872  003630  6E27               	movwf	(___fldiv@a+3)^0,c
  4873  003632  0E88               	movlw	136
  4874  003634  6F92               	movwf	??_touchScreenController& (0+255),b
  4875  003636  0EFF               	movlw	255
  4876  003638  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4877  00363A  C0AE  F094         	movff	touchScreenController@valueX,??_touchScreenController+2
  4878  00363E  C0AF  F095         	movff	touchScreenController@valueX+1,??_touchScreenController+3
  4879  003642  5192               	movf	??_touchScreenController& (0+255),w,b
  4880  003644  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  4881  003646  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  4882  003648  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  4883  00364A  C094  F012         	movff	??_touchScreenController+2,___xxtofl@val
  4884  00364E  C095  F013         	movff	??_touchScreenController+3,___xxtofl@val+1
  4885  003652  6A14               	clrf	(___xxtofl@val+2)^0,c
  4886  003654  6A15               	clrf	(___xxtofl@val+3)^0,c
  4887  003656  0E00               	movlw	0
  4888  003658  EC36  F01D         	call	___xxtofl
  4889  00365C  C012  F020         	movff	?___xxtofl,___fldiv@b
  4890  003660  C013  F021         	movff	?___xxtofl+1,___fldiv@b+1
  4891  003664  C014  F022         	movff	?___xxtofl+2,___fldiv@b+2
  4892  003668  C015  F023         	movff	?___xxtofl+3,___fldiv@b+3
  4893  00366C  EC02  F013         	call	___fldiv	;wreg free
  4894  003670  C020  F039         	movff	?___fldiv,___fltol@f1
  4895  003674  C021  F03A         	movff	?___fldiv+1,___fltol@f1+1
  4896  003678  C022  F03B         	movff	?___fldiv+2,___fltol@f1+2
  4897  00367C  C023  F03C         	movff	?___fldiv+3,___fltol@f1+3
  4898  003680  EC5D  F023         	call	___fltol	;wreg free
  4899  003684  C039  F0AE         	movff	?___fltol,touchScreenController@valueX
  4900  003688  C03A  F0AF         	movff	?___fltol+1,touchScreenController@valueX+1
  4901  00368C                     
  4902                           ;stateMachine/touchScreenSM.c: 82:             valueX=240 -valueX;
  4903  00368C  0100               	movlb	0	; () banked
  4904  00368E  51AE               	movf	touchScreenController@valueX& (0+255),w,b
  4905  003690  08F0               	sublw	240
  4906  003692  6FAE               	movwf	touchScreenController@valueX& (0+255),b
  4907  003694  51AF               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  4908  003696  A0D8               	btfss	status,0,c
  4909  003698  2AE8               	incf	wreg,f,c
  4910  00369A  0800               	sublw	0
  4911  00369C  6FAF               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4912  00369E                     
  4913                           ; BSR set to: 0
  4914                           ;stateMachine/touchScreenSM.c: 84:             configMeasure(1);
  4915  00369E  0E01               	movlw	1
  4916  0036A0  ECF0  F02F         	call	_configMeasure
  4917  0036A4                     l509:
  4918  0036A4  B2C2               	btfsc	194,1,c	;volatile
  4919  0036A6  EF57  F01B         	goto	u7731
  4920  0036AA  EF59  F01B         	goto	u7730
  4921  0036AE                     u7731:
  4922  0036AE  EF52  F01B         	goto	l509
  4923  0036B2                     u7730:
  4924  0036B2                     
  4925                           ;stateMachine/touchScreenSM.c: 86:             uint16_t valueY;;stateMachine/touchScreen
      +                          SM.c: 87:             valueY=(ADRESH<<8)+ADRESL;
  4926  0036B2  50C4               	movf	196,w,c	;volatile
  4927  0036B4  0100               	movlb	0	; () banked
  4928  0036B6  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4929  0036B8  6B92               	clrf	??_touchScreenController& (0+255),b
  4930  0036BA  50C3               	movf	195,w,c	;volatile
  4931  0036BC  2592               	addwf	??_touchScreenController& (0+255),w,b
  4932  0036BE  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4933  0036C0  0E00               	movlw	0
  4934  0036C2  2193               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  4935  0036C4  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  4936                           
  4937                           ;stateMachine/touchScreenSM.c: 88:             if(valueY<=105)
  4938  0036C6  51AD               	movf	(touchScreenController@valueY+1)& (0+255),w,b
  4939  0036C8  E107               	bnz	u7741
  4940  0036CA  0E6A               	movlw	106
  4941  0036CC  5DAC               	subwf	touchScreenController@valueY& (0+255),w,b
  4942  0036CE  B0D8               	btfsc	status,0,c
  4943  0036D0  EF6C  F01B         	goto	u7741
  4944  0036D4  EF6E  F01B         	goto	u7740
  4945  0036D8                     u7741:
  4946  0036D8  EF72  F01B         	goto	l10221
  4947  0036DC                     u7740:
  4948  0036DC                     
  4949                           ; BSR set to: 0
  4950                           ;stateMachine/touchScreenSM.c: 89:             {;stateMachine/touchScreenSM.c: 90:      
      +                                     valueY=105;
  4951  0036DC  0E00               	movlw	0
  4952  0036DE  6FAD               	movwf	(touchScreenController@valueY+1)& (0+255),b
  4953  0036E0  0E69               	movlw	105
  4954  0036E2  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4955  0036E4                     l10221:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;stateMachine/touchScreenSM.c: 92:             valueY=(valueY-105)/2;
  4959  0036E4  0E97               	movlw	151
  4960  0036E6  6F92               	movwf	??_touchScreenController& (0+255),b
  4961  0036E8  0EFF               	movlw	255
  4962  0036EA  6F93               	movwf	(??_touchScreenController+1)& (0+255),b
  4963  0036EC  C0AC  F094         	movff	touchScreenController@valueY,??_touchScreenController+2
  4964  0036F0  C0AD  F095         	movff	touchScreenController@valueY+1,??_touchScreenController+3
  4965  0036F4  5192               	movf	??_touchScreenController& (0+255),w,b
  4966  0036F6  2794               	addwf	(??_touchScreenController+2)& (0+255),f,b
  4967  0036F8  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  4968  0036FA  2395               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  4969  0036FC  90D8               	bcf	status,0,c
  4970  0036FE  3195               	rrcf	(??_touchScreenController+3)& (0+255),w,b
  4971  003700  6F96               	movwf	(??_touchScreenController+4)& (0+255),b
  4972  003702  3194               	rrcf	(??_touchScreenController+2)& (0+255),w,b
  4973  003704  6FAC               	movwf	touchScreenController@valueY& (0+255),b
  4974  003706  C096  F0AD         	movff	??_touchScreenController+4,touchScreenController@valueY+1
  4975  00370A                     
  4976                           ; BSR set to: 0
  4977                           ;stateMachine/touchScreenSM.c: 93:             XF_scheduleTimer(9,evTimerPos,0);
  4978  00370A  0E00               	movlw	0
  4979  00370C  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  4980  00370E  0E09               	movlw	9
  4981  003710  6E13               	movwf	XF_scheduleTimer@tm^0,c
  4982  003712  0E04               	movlw	4
  4983  003714  6E15               	movwf	XF_scheduleTimer@ev^0,c
  4984  003716  0E00               	movlw	0
  4985  003718  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  4986  00371A  EC06  F02E         	call	_XF_scheduleTimer	;wreg free
  4987  00371E                     
  4988                           ;stateMachine/touchScreenSM.c: 96:             ADCON0=0b00101000;
  4989  00371E  0E28               	movlw	40
  4990  003720  6EC2               	movwf	194,c	;volatile
  4991  003722                     
  4992                           ;stateMachine/touchScreenSM.c: 97:             configTouch();
  4993  003722  EC6B  F031         	call	_configTouch	;wreg free
  4994  003726                     
  4995                           ;stateMachine/touchScreenSM.c: 100:             if(PORTBbits.RB1 == 0)
  4996  003726  B281               	btfsc	129,1,c	;volatile
  4997  003728  EF98  F01B         	goto	u7751
  4998  00372C  EF9A  F01B         	goto	u7750
  4999  003730                     u7751:
  5000  003730  EF1A  F01C         	goto	l515
  5001  003734                     u7750:
  5002  003734                     
  5003                           ;stateMachine/touchScreenSM.c: 101:             {;stateMachine/touchScreenSM.c: 102:    
      +                                       sprintf(s,"X: %d",valueX);
  5004  003734  0E98               	movlw	low touchScreenController@s
  5005  003736  0100               	movlb	0	; () banked
  5006  003738  6F82               	movwf	sprintf@s& (0+255),b
  5007  00373A  0E00               	movlw	high touchScreenController@s
  5008  00373C  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5009  00373E  0EEB               	movlw	low STR_15
  5010  003740  6F84               	movwf	sprintf@fmt& (0+255),b
  5011  003742  0E7F               	movlw	high STR_15
  5012  003744  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5013  003746  C0AE  F086         	movff	touchScreenController@valueX,?_sprintf+4
  5014  00374A  C0AF  F087         	movff	touchScreenController@valueX+1,?_sprintf+5
  5015  00374E  ECC7  F02F         	call	_sprintf	;wreg free
  5016  003752                     
  5017                           ;stateMachine/touchScreenSM.c: 103:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,200,0b0000000000000000,0b1111111111111111);
  5018  003752  0E98               	movlw	low touchScreenController@s
  5019  003754  6E20               	movwf	LCD_DrawText@msg^0,c
  5020  003756  0E00               	movlw	high touchScreenController@s
  5021  003758  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5022  00375A  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  5023  00375C  6E22               	movwf	LCD_DrawText@font^0,c
  5024  00375E  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5025  003760  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5026  003762  0E01               	movlw	1
  5027  003764  6E24               	movwf	LCD_DrawText@align^0,c
  5028  003766  0E00               	movlw	0
  5029  003768  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5030  00376A  0EC8               	movlw	200
  5031  00376C  6E25               	movwf	LCD_DrawText@posX^0,c
  5032  00376E  0E00               	movlw	0
  5033  003770  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5034  003772  0EC8               	movlw	200
  5035  003774  6E27               	movwf	LCD_DrawText@posY^0,c
  5036  003776  0E00               	movlw	0
  5037  003778  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5038  00377A  0E00               	movlw	0
  5039  00377C  6E29               	movwf	LCD_DrawText@color^0,c
  5040  00377E  0EFF               	movlw	255
  5041  003780  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5042  003782  682B               	setf	LCD_DrawText@bg_color^0,c
  5043  003784  ECEB  F00E         	call	_LCD_DrawText	;wreg free
  5044  003788                     
  5045                           ;stateMachine/touchScreenSM.c: 104:                 GameParameters_setX(g,valueX);
  5046  003788  C090  F012         	movff	touchScreenController@g,GameParameters_setX@s
  5047  00378C  C091  F013         	movff	touchScreenController@g+1,GameParameters_setX@s+1
  5048  003790  C0AE  F014         	movff	touchScreenController@valueX,GameParameters_setX@value
  5049  003794  C0AF  F015         	movff	touchScreenController@valueX+1,GameParameters_setX@value+1
  5050  003798  EC9E  F031         	call	_GameParameters_setX	;wreg free
  5051  00379C                     
  5052                           ;stateMachine/touchScreenSM.c: 105:                 sprintf(s,"Y: %d",valueY);
  5053  00379C  0E98               	movlw	low touchScreenController@s
  5054  00379E  0100               	movlb	0	; () banked
  5055  0037A0  6F82               	movwf	sprintf@s& (0+255),b
  5056  0037A2  0E00               	movlw	high touchScreenController@s
  5057  0037A4  6F83               	movwf	(sprintf@s+1)& (0+255),b
  5058  0037A6  0EF1               	movlw	low STR_16
  5059  0037A8  6F84               	movwf	sprintf@fmt& (0+255),b
  5060  0037AA  0E7F               	movlw	high STR_16
  5061  0037AC  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  5062  0037AE  C0AC  F086         	movff	touchScreenController@valueY,?_sprintf+4
  5063  0037B2  C0AD  F087         	movff	touchScreenController@valueY+1,?_sprintf+5
  5064  0037B6  ECC7  F02F         	call	_sprintf	;wreg free
  5065  0037BA                     
  5066                           ;stateMachine/touchScreenSM.c: 106:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,250,0b0000000000000000,0b1111111111111111);
  5067  0037BA  0E98               	movlw	low touchScreenController@s
  5068  0037BC  6E20               	movwf	LCD_DrawText@msg^0,c
  5069  0037BE  0E00               	movlw	high touchScreenController@s
  5070  0037C0  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5071  0037C2  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  5072  0037C4  6E22               	movwf	LCD_DrawText@font^0,c
  5073  0037C6  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5074  0037C8  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5075  0037CA  0E01               	movlw	1
  5076  0037CC  6E24               	movwf	LCD_DrawText@align^0,c
  5077  0037CE  0E00               	movlw	0
  5078  0037D0  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5079  0037D2  0EC8               	movlw	200
  5080  0037D4  6E25               	movwf	LCD_DrawText@posX^0,c
  5081  0037D6  0E00               	movlw	0
  5082  0037D8  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5083  0037DA  0EFA               	movlw	250
  5084  0037DC  6E27               	movwf	LCD_DrawText@posY^0,c
  5085  0037DE  0E00               	movlw	0
  5086  0037E0  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5087  0037E2  0E00               	movlw	0
  5088  0037E4  6E29               	movwf	LCD_DrawText@color^0,c
  5089  0037E6  0EFF               	movlw	255
  5090  0037E8  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5091  0037EA  682B               	setf	LCD_DrawText@bg_color^0,c
  5092  0037EC  ECEB  F00E         	call	_LCD_DrawText	;wreg free
  5093                           
  5094                           ;stateMachine/touchScreenSM.c: 107:                 GameParameters_setY(g,valueY);
  5095  0037F0  C090  F012         	movff	touchScreenController@g,GameParameters_setY@s
  5096  0037F4  C091  F013         	movff	touchScreenController@g+1,GameParameters_setY@s+1
  5097  0037F8  C0AC  F014         	movff	touchScreenController@valueY,GameParameters_setY@value
  5098  0037FC  C0AD  F015         	movff	touchScreenController@valueY+1,GameParameters_setY@value+1
  5099  003800  EC93  F031         	call	_GameParameters_setY	;wreg free
  5100  003804  EF1A  F01C         	goto	l515
  5101  003808                     l10243:
  5102  003808  0100               	movlb	0	; () banked
  5103  00380A  51DE               	movf	_touchScreenState& (0+255),w,b
  5104  00380C  6F92               	movwf	??_touchScreenController& (0+255),b
  5105  00380E  6B93               	clrf	(??_touchScreenController+1)& (0+255),b
  5106                           
  5107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5108                           ; Switch size 1, requested type "simple"
  5109                           ; Number of cases is 1, Range of values is 0 to 0
  5110                           ; switch strategies available:
  5111                           ; Name         Instructions Cycles
  5112                           ; simple_byte            4     3 (average)
  5113                           ;	Chosen strategy is simple_byte
  5114  003810  5193               	movf	(??_touchScreenController+1)& (0+255),w,b
  5115  003812  0A00               	xorlw	0	; case 0
  5116  003814  B4D8               	btfsc	status,2,c
  5117  003816  EF0F  F01C         	goto	l10683
  5118  00381A  EF1A  F01C         	goto	l515
  5119  00381E                     l10683:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ; Switch size 1, requested type "simple"
  5123                           ; Number of cases is 2, Range of values is 0 to 1
  5124                           ; switch strategies available:
  5125                           ; Name         Instructions Cycles
  5126                           ; simple_byte            7     4 (average)
  5127                           ;	Chosen strategy is simple_byte
  5128  00381E  5192               	movf	??_touchScreenController& (0+255),w,b
  5129  003820  0A00               	xorlw	0	; case 0
  5130  003822  B4D8               	btfsc	status,2,c
  5131  003824  EFE8  F01A         	goto	l502
  5132  003828  0A01               	xorlw	1	; case 1
  5133  00382A  B4D8               	btfsc	status,2,c
  5134  00382C  EFED  F01A         	goto	l504
  5135  003830  EF1A  F01C         	goto	l515
  5136  003834                     l515:
  5137  003834  0012               	return		;funcret
  5138  003836                     __end_of_touchScreenController:
  5139                           	callstack 0
  5140                           
  5141 ;; *************** function _configTouch *****************
  5142 ;; Defined at:
  5143 ;;		line 118 in file "stateMachine/touchScreenSM.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5157 ;;      Params:         0       0       0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0
  5160 ;;      Totals:         0       0       0       0       0       0       0
  5161 ;;Total ram usage:        0 bytes
  5162 ;; Hardware stack levels used: 1
  5163 ;; Hardware stack levels required when called: 4
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_touchScreenInit
  5168 ;;		_touchScreenController
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text13
  5173  0062D6                     __ptext13:
  5174                           	callstack 0
  5175  0062D6                     _configTouch:
  5176                           	callstack 23
  5177  0062D6                     
  5178                           ;stateMachine/touchScreenSM.c: 120:     ANSB1=0;
  5179  0062D6  010F               	movlb	15	; () banked
  5180  0062D8  9339               	bcf	57,1,b	;volatile
  5181                           
  5182                           ;stateMachine/touchScreenSM.c: 121:     ANSB2=0;
  5183  0062DA  9539               	bcf	57,2,b	;volatile
  5184                           
  5185                           ;stateMachine/touchScreenSM.c: 122:     TRISB2=0;
  5186  0062DC  9493               	bcf	3987,2,c	;volatile
  5187                           
  5188                           ;stateMachine/touchScreenSM.c: 123:     LATB2=0;
  5189  0062DE  948A               	bcf	3978,2,c	;volatile
  5190                           
  5191                           ;stateMachine/touchScreenSM.c: 124:     TRISB1=1;
  5192  0062E0  8293               	bsf	3987,1,c	;volatile
  5193                           
  5194                           ;stateMachine/touchScreenSM.c: 125:     RBPU=0;
  5195  0062E2  9EF1               	bcf	4081,7,c	;volatile
  5196  0062E4                     
  5197                           ; BSR set to: 15
  5198                           ;stateMachine/touchScreenSM.c: 126:     WPUB=0b00000010;
  5199  0062E4  0E02               	movlw	2
  5200  0062E6  6E61               	movwf	97,c	;volatile
  5201  0062E8                     
  5202                           ; BSR set to: 15
  5203                           ;stateMachine/touchScreenSM.c: 127:     TRISB3=0;
  5204  0062E8  9693               	bcf	3987,3,c	;volatile
  5205  0062EA                     
  5206                           ; BSR set to: 15
  5207                           ;stateMachine/touchScreenSM.c: 128:     LATB3=1;
  5208  0062EA  868A               	bsf	3978,3,c	;volatile
  5209  0062EC                     
  5210                           ; BSR set to: 15
  5211                           ;stateMachine/touchScreenSM.c: 129:     __nop();
  5212  0062EC  F000               	nop	
  5213  0062EE                     
  5214                           ;stateMachine/touchScreenSM.c: 130:     TRISB3=1;
  5215  0062EE  8693               	bsf	3987,3,c	;volatile
  5216  0062F0                     
  5217                           ;stateMachine/touchScreenSM.c: 131:     TRISB4=1;
  5218  0062F0  8893               	bsf	3987,4,c	;volatile
  5219  0062F2                     
  5220                           ;stateMachine/touchScreenSM.c: 132:     INT1IF = 0;
  5221  0062F2  90F0               	bcf	4080,0,c	;volatile
  5222  0062F4                     
  5223                           ;stateMachine/touchScreenSM.c: 133:     INT1IE=1;
  5224  0062F4  86F0               	bsf	4080,3,c	;volatile
  5225  0062F6  0012               	return		;funcret
  5226  0062F8                     __end_of_configTouch:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function _configMeasure *****************
  5230 ;; Defined at:
  5231 ;;		line 135 in file "stateMachine/touchScreenSM.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  channel         1    wreg     _Bool 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  channel         1   17[COMRAM] _Bool 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      void 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5245 ;;      Params:         0       0       0       0       0       0       0
  5246 ;;      Locals:         1       0       0       0       0       0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0
  5248 ;;      Totals:         1       0       0       0       0       0       0
  5249 ;;Total ram usage:        1 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 4
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_touchScreenController
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text14
  5260  005FE0                     __ptext14:
  5261                           	callstack 0
  5262  005FE0                     _configMeasure:
  5263                           	callstack 23
  5264                           
  5265                           ;incstack = 0
  5266                           ;configMeasure@channel stored from wreg
  5267  005FE0  6E12               	movwf	configMeasure@channel^0,c
  5268  005FE2                     
  5269                           ;stateMachine/touchScreenSM.c: 135: void configMeasure(_Bool channel);stateMachine/touch
      +                          ScreenSM.c: 136: {;stateMachine/touchScreenSM.c: 137:     if(channel==0)
  5270  005FE2  5012               	movf	configMeasure@channel^0,w,c
  5271  005FE4  A4D8               	btfss	status,2,c
  5272  005FE6  EFF7  F02F         	goto	u7161
  5273  005FEA  EFF9  F02F         	goto	u7160
  5274  005FEE                     u7161:
  5275  005FEE  EF04  F030         	goto	l9861
  5276  005FF2                     u7160:
  5277  005FF2                     
  5278                           ;stateMachine/touchScreenSM.c: 138:     {;stateMachine/touchScreenSM.c: 139:         ANS
      +                          B1=0;
  5279  005FF2  010F               	movlb	15	; () banked
  5280  005FF4  9339               	bcf	57,1,b	;volatile
  5281                           
  5282                           ;stateMachine/touchScreenSM.c: 140:         TRISB1=0;
  5283  005FF6  9293               	bcf	3987,1,c	;volatile
  5284                           
  5285                           ;stateMachine/touchScreenSM.c: 141:         LATB1=0;
  5286  005FF8  928A               	bcf	3978,1,c	;volatile
  5287                           
  5288                           ;stateMachine/touchScreenSM.c: 142:         TRISB3=0;
  5289  005FFA  9693               	bcf	3987,3,c	;volatile
  5290                           
  5291                           ;stateMachine/touchScreenSM.c: 143:         LATB3=1;
  5292  005FFC  868A               	bsf	3978,3,c	;volatile
  5293                           
  5294                           ;stateMachine/touchScreenSM.c: 144:         TRISB4=1;
  5295  005FFE  8893               	bsf	3987,4,c	;volatile
  5296                           
  5297                           ;stateMachine/touchScreenSM.c: 145:         TRISB2=1;
  5298  006000  8493               	bsf	3987,2,c	;volatile
  5299                           
  5300                           ;stateMachine/touchScreenSM.c: 146:         ANSB2=1;
  5301  006002  8539               	bsf	57,2,b	;volatile
  5302  006004                     
  5303                           ; BSR set to: 15
  5304                           ;stateMachine/touchScreenSM.c: 147:         ADCON0=0b00100011;
  5305  006004  0E23               	movlw	35
  5306  006006  6EC2               	movwf	194,c	;volatile
  5307  006008                     l9861:
  5308                           
  5309                           ;stateMachine/touchScreenSM.c: 149:     if(channel==1)
  5310  006008  0412               	decf	configMeasure@channel^0,w,c
  5311  00600A  A4D8               	btfss	status,2,c
  5312  00600C  EF0A  F030         	goto	u7171
  5313  006010  EF0C  F030         	goto	u7170
  5314  006014                     u7171:
  5315  006014  EF17  F030         	goto	l523
  5316  006018                     u7170:
  5317  006018                     
  5318                           ;stateMachine/touchScreenSM.c: 150:     {;stateMachine/touchScreenSM.c: 151:         ANS
      +                          B2=0;
  5319  006018  010F               	movlb	15	; () banked
  5320  00601A  9539               	bcf	57,2,b	;volatile
  5321                           
  5322                           ;stateMachine/touchScreenSM.c: 152:         TRISB2=0;
  5323  00601C  9493               	bcf	3987,2,c	;volatile
  5324                           
  5325                           ;stateMachine/touchScreenSM.c: 153:         LATB2=0;
  5326  00601E  948A               	bcf	3978,2,c	;volatile
  5327                           
  5328                           ;stateMachine/touchScreenSM.c: 154:         TRISB4=0;
  5329  006020  9893               	bcf	3987,4,c	;volatile
  5330                           
  5331                           ;stateMachine/touchScreenSM.c: 155:         LATB4=1;
  5332  006022  888A               	bsf	3978,4,c	;volatile
  5333                           
  5334                           ;stateMachine/touchScreenSM.c: 156:         TRISB3=1;
  5335  006024  8693               	bsf	3987,3,c	;volatile
  5336                           
  5337                           ;stateMachine/touchScreenSM.c: 157:         TRISB1=1;
  5338  006026  8293               	bsf	3987,1,c	;volatile
  5339                           
  5340                           ;stateMachine/touchScreenSM.c: 158:         ANSB1=1;
  5341  006028  8339               	bsf	57,1,b	;volatile
  5342  00602A                     
  5343                           ; BSR set to: 15
  5344                           ;stateMachine/touchScreenSM.c: 159:         ADCON0=0b00101011;
  5345  00602A  0E2B               	movlw	43
  5346  00602C  6EC2               	movwf	194,c	;volatile
  5347  00602E                     l523:
  5348  00602E  0012               	return		;funcret
  5349  006030                     __end_of_configMeasure:
  5350                           	callstack 0
  5351                           
  5352 ;; *************** function ___xxtofl *****************
  5353 ;; Defined at:
  5354 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  sign            1    wreg     unsigned char 
  5357 ;;  val             4   17[COMRAM] long 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  sign            1   25[COMRAM] unsigned char 
  5360 ;;  arg             4   27[COMRAM] unsigned long 
  5361 ;;  exp             1   26[COMRAM] unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  4   17[COMRAM] unsigned char 
  5364 ;; Registers used:
  5365 ;;		wreg, status,2, status,0
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5371 ;;      Params:         4       0       0       0       0       0       0
  5372 ;;      Locals:         6       0       0       0       0       0       0
  5373 ;;      Temps:          4       0       0       0       0       0       0
  5374 ;;      Totals:        14       0       0       0       0       0       0
  5375 ;;Total ram usage:       14 bytes
  5376 ;; Hardware stack levels used: 1
  5377 ;; Hardware stack levels required when called: 4
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_touchScreenController
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text15
  5386  003A6C                     __ptext15:
  5387                           	callstack 0
  5388  003A6C                     ___xxtofl:
  5389                           	callstack 23
  5390                           
  5391                           ;incstack = 0
  5392                           ;___xxtofl@sign stored from wreg
  5393  003A6C  6E1A               	movwf	___xxtofl@sign^0,c
  5394  003A6E  501A               	movf	___xxtofl@sign^0,w,c
  5395  003A70  B4D8               	btfsc	status,2,c
  5396  003A72  EF3D  F01D         	goto	u7611
  5397  003A76  EF3F  F01D         	goto	u7610
  5398  003A7A                     u7611:
  5399  003A7A  EF61  F01D         	goto	l1464
  5400  003A7E                     u7610:
  5401  003A7E  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5402  003A80  EF46  F01D         	goto	u7620
  5403  003A84  EF44  F01D         	goto	u7621
  5404  003A88                     u7621:
  5405  003A88  EF61  F01D         	goto	l1464
  5406  003A8C                     u7620:
  5407  003A8C  C012  F016         	movff	___xxtofl@val,??___xxtofl
  5408  003A90  C013  F017         	movff	___xxtofl@val+1,??___xxtofl+1
  5409  003A94  C014  F018         	movff	___xxtofl@val+2,??___xxtofl+2
  5410  003A98  C015  F019         	movff	___xxtofl@val+3,??___xxtofl+3
  5411  003A9C  1E16               	comf	??___xxtofl^0,f,c
  5412  003A9E  1E17               	comf	(??___xxtofl+1)^0,f,c
  5413  003AA0  1E18               	comf	(??___xxtofl+2)^0,f,c
  5414  003AA2  1E19               	comf	(??___xxtofl+3)^0,f,c
  5415  003AA4  2A16               	incf	??___xxtofl^0,f,c
  5416  003AA6  0E00               	movlw	0
  5417  003AA8  2217               	addwfc	(??___xxtofl+1)^0,f,c
  5418  003AAA  2218               	addwfc	(??___xxtofl+2)^0,f,c
  5419  003AAC  2219               	addwfc	(??___xxtofl+3)^0,f,c
  5420  003AAE  C016  F01C         	movff	??___xxtofl,___xxtofl@arg
  5421  003AB2  C017  F01D         	movff	??___xxtofl+1,___xxtofl@arg+1
  5422  003AB6  C018  F01E         	movff	??___xxtofl+2,___xxtofl@arg+2
  5423  003ABA  C019  F01F         	movff	??___xxtofl+3,___xxtofl@arg+3
  5424  003ABE  EF69  F01D         	goto	l10139
  5425  003AC2                     l1464:
  5426  003AC2  C012  F01C         	movff	___xxtofl@val,___xxtofl@arg
  5427  003AC6  C013  F01D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5428  003ACA  C014  F01E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5429  003ACE  C015  F01F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5430  003AD2                     l10139:
  5431  003AD2  5012               	movf	___xxtofl@val^0,w,c
  5432  003AD4  1013               	iorwf	(___xxtofl@val+1)^0,w,c
  5433  003AD6  1014               	iorwf	(___xxtofl@val+2)^0,w,c
  5434  003AD8  1015               	iorwf	(___xxtofl@val+3)^0,w,c
  5435  003ADA  A4D8               	btfss	status,2,c
  5436  003ADC  EF72  F01D         	goto	u7631
  5437  003AE0  EF74  F01D         	goto	u7630
  5438  003AE4                     u7631:
  5439  003AE4  EF7E  F01D         	goto	l10145
  5440  003AE8                     u7630:
  5441  003AE8  0E00               	movlw	0
  5442  003AEA  6E12               	movwf	?___xxtofl^0,c
  5443  003AEC  0E00               	movlw	0
  5444  003AEE  6E13               	movwf	(?___xxtofl+1)^0,c
  5445  003AF0  0E00               	movlw	0
  5446  003AF2  6E14               	movwf	(?___xxtofl+2)^0,c
  5447  003AF4  0E00               	movlw	0
  5448  003AF6  6E15               	movwf	(?___xxtofl+3)^0,c
  5449  003AF8  EF0F  F01E         	goto	l1467
  5450  003AFC                     l10145:
  5451  003AFC  0E96               	movlw	150
  5452  003AFE  6E1B               	movwf	___xxtofl@exp^0,c
  5453  003B00  EF88  F01D         	goto	l10149
  5454  003B04                     l10147:
  5455  003B04  2A1B               	incf	___xxtofl@exp^0,f,c
  5456  003B06  90D8               	bcf	status,0,c
  5457  003B08  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5458  003B0A  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5459  003B0C  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5460  003B0E  321C               	rrcf	___xxtofl@arg^0,f,c
  5461  003B10                     l10149:
  5462  003B10  0E00               	movlw	0
  5463  003B12  141C               	andwf	___xxtofl@arg^0,w,c
  5464  003B14  6E16               	movwf	??___xxtofl^0,c
  5465  003B16  0E00               	movlw	0
  5466  003B18  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  5467  003B1A  6E17               	movwf	(??___xxtofl+1)^0,c
  5468  003B1C  0E00               	movlw	0
  5469  003B1E  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  5470  003B20  6E18               	movwf	(??___xxtofl+2)^0,c
  5471  003B22  0EFE               	movlw	254
  5472  003B24  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  5473  003B26  6E19               	movwf	(??___xxtofl+3)^0,c
  5474  003B28  5016               	movf	??___xxtofl^0,w,c
  5475  003B2A  1017               	iorwf	(??___xxtofl+1)^0,w,c
  5476  003B2C  1018               	iorwf	(??___xxtofl+2)^0,w,c
  5477  003B2E  1019               	iorwf	(??___xxtofl+3)^0,w,c
  5478  003B30  A4D8               	btfss	status,2,c
  5479  003B32  EF9D  F01D         	goto	u7641
  5480  003B36  EF9F  F01D         	goto	u7640
  5481  003B3A                     u7641:
  5482  003B3A  EF82  F01D         	goto	l10147
  5483  003B3E                     u7640:
  5484  003B3E  EFAD  F01D         	goto	l1471
  5485  003B42                     l10151:
  5486  003B42  2A1B               	incf	___xxtofl@exp^0,f,c
  5487  003B44  0E01               	movlw	1
  5488  003B46  261C               	addwf	___xxtofl@arg^0,f,c
  5489  003B48  0E00               	movlw	0
  5490  003B4A  221D               	addwfc	(___xxtofl@arg+1)^0,f,c
  5491  003B4C  221E               	addwfc	(___xxtofl@arg+2)^0,f,c
  5492  003B4E  221F               	addwfc	(___xxtofl@arg+3)^0,f,c
  5493  003B50  90D8               	bcf	status,0,c
  5494  003B52  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5495  003B54  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5496  003B56  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5497  003B58  321C               	rrcf	___xxtofl@arg^0,f,c
  5498  003B5A                     l1471:
  5499  003B5A  0E00               	movlw	0
  5500  003B5C  141C               	andwf	___xxtofl@arg^0,w,c
  5501  003B5E  6E16               	movwf	??___xxtofl^0,c
  5502  003B60  0E00               	movlw	0
  5503  003B62  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  5504  003B64  6E17               	movwf	(??___xxtofl+1)^0,c
  5505  003B66  0E00               	movlw	0
  5506  003B68  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  5507  003B6A  6E18               	movwf	(??___xxtofl+2)^0,c
  5508  003B6C  0EFF               	movlw	255
  5509  003B6E  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  5510  003B70  6E19               	movwf	(??___xxtofl+3)^0,c
  5511  003B72  5016               	movf	??___xxtofl^0,w,c
  5512  003B74  1017               	iorwf	(??___xxtofl+1)^0,w,c
  5513  003B76  1018               	iorwf	(??___xxtofl+2)^0,w,c
  5514  003B78  1019               	iorwf	(??___xxtofl+3)^0,w,c
  5515  003B7A  A4D8               	btfss	status,2,c
  5516  003B7C  EFC2  F01D         	goto	u7651
  5517  003B80  EFC4  F01D         	goto	u7650
  5518  003B84                     u7651:
  5519  003B84  EFA1  F01D         	goto	l10151
  5520  003B88                     u7650:
  5521  003B88  EFCC  F01D         	goto	l10159
  5522  003B8C                     l10157:
  5523  003B8C  061B               	decf	___xxtofl@exp^0,f,c
  5524  003B8E  90D8               	bcf	status,0,c
  5525  003B90  361C               	rlcf	___xxtofl@arg^0,f,c
  5526  003B92  361D               	rlcf	(___xxtofl@arg+1)^0,f,c
  5527  003B94  361E               	rlcf	(___xxtofl@arg+2)^0,f,c
  5528  003B96  361F               	rlcf	(___xxtofl@arg+3)^0,f,c
  5529  003B98                     l10159:
  5530  003B98  BE1E               	btfsc	(___xxtofl@arg+2)^0,7,c
  5531  003B9A  EFD1  F01D         	goto	u7661
  5532  003B9E  EFD3  F01D         	goto	u7660
  5533  003BA2                     u7661:
  5534  003BA2  EFDB  F01D         	goto	l1478
  5535  003BA6                     u7660:
  5536  003BA6  0E02               	movlw	2
  5537  003BA8  601B               	cpfslt	___xxtofl@exp^0,c
  5538  003BAA  EFD9  F01D         	goto	u7671
  5539  003BAE  EFDB  F01D         	goto	u7670
  5540  003BB2                     u7671:
  5541  003BB2  EFC6  F01D         	goto	l10157
  5542  003BB6                     u7670:
  5543  003BB6                     l1478:
  5544  003BB6  B01B               	btfsc	___xxtofl@exp^0,0,c
  5545  003BB8  EFE0  F01D         	goto	u7681
  5546  003BBC  EFE2  F01D         	goto	u7680
  5547  003BC0                     u7681:
  5548  003BC0  EFE3  F01D         	goto	l10165
  5549  003BC4                     u7680:
  5550  003BC4  9E1E               	bcf	(___xxtofl@arg+2)^0,7,c
  5551  003BC6                     l10165:
  5552  003BC6  90D8               	bcf	status,0,c
  5553  003BC8  321B               	rrcf	___xxtofl@exp^0,f,c
  5554  003BCA  C01B  F016         	movff	___xxtofl@exp,??___xxtofl
  5555  003BCE  6A17               	clrf	(??___xxtofl+1)^0,c
  5556  003BD0  6A18               	clrf	(??___xxtofl+2)^0,c
  5557  003BD2  6A19               	clrf	(??___xxtofl+3)^0,c
  5558  003BD4  C016  F019         	movff	??___xxtofl,??___xxtofl+3
  5559  003BD8  6A18               	clrf	(??___xxtofl+2)^0,c
  5560  003BDA  6A17               	clrf	(??___xxtofl+1)^0,c
  5561  003BDC  6A16               	clrf	??___xxtofl^0,c
  5562  003BDE  5016               	movf	??___xxtofl^0,w,c
  5563  003BE0  121C               	iorwf	___xxtofl@arg^0,f,c
  5564  003BE2  5017               	movf	(??___xxtofl+1)^0,w,c
  5565  003BE4  121D               	iorwf	(___xxtofl@arg+1)^0,f,c
  5566  003BE6  5018               	movf	(??___xxtofl+2)^0,w,c
  5567  003BE8  121E               	iorwf	(___xxtofl@arg+2)^0,f,c
  5568  003BEA  5019               	movf	(??___xxtofl+3)^0,w,c
  5569  003BEC  121F               	iorwf	(___xxtofl@arg+3)^0,f,c
  5570  003BEE  501A               	movf	___xxtofl@sign^0,w,c
  5571  003BF0  B4D8               	btfsc	status,2,c
  5572  003BF2  EFFD  F01D         	goto	u7691
  5573  003BF6  EFFF  F01D         	goto	u7690
  5574  003BFA                     u7691:
  5575  003BFA  EF07  F01E         	goto	l10175
  5576  003BFE                     u7690:
  5577  003BFE  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5578  003C00  EF06  F01E         	goto	u7700
  5579  003C04  EF04  F01E         	goto	u7701
  5580  003C08                     u7701:
  5581  003C08  EF07  F01E         	goto	l10175
  5582  003C0C                     u7700:
  5583  003C0C  8E1F               	bsf	(___xxtofl@arg+3)^0,7,c
  5584  003C0E                     l10175:
  5585  003C0E  C01C  F012         	movff	___xxtofl@arg,?___xxtofl
  5586  003C12  C01D  F013         	movff	___xxtofl@arg+1,?___xxtofl+1
  5587  003C16  C01E  F014         	movff	___xxtofl@arg+2,?___xxtofl+2
  5588  003C1A  C01F  F015         	movff	___xxtofl@arg+3,?___xxtofl+3
  5589  003C1E                     l1467:
  5590  003C1E  0012               	return		;funcret
  5591  003C20                     __end_of___xxtofl:
  5592                           	callstack 0
  5593                           
  5594 ;; *************** function ___fltol *****************
  5595 ;; Defined at:
  5596 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  f1              4   56[COMRAM] unsigned char 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  exp1            1   65[COMRAM] unsigned char 
  5601 ;;  sign1           1   64[COMRAM] unsigned char 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  4   56[COMRAM] long 
  5604 ;; Registers used:
  5605 ;;		wreg, status,2, status,0
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5611 ;;      Params:         4       0       0       0       0       0       0
  5612 ;;      Locals:         2       0       0       0       0       0       0
  5613 ;;      Temps:          4       0       0       0       0       0       0
  5614 ;;      Totals:        10       0       0       0       0       0       0
  5615 ;;Total ram usage:       10 bytes
  5616 ;; Hardware stack levels used: 1
  5617 ;; Hardware stack levels required when called: 4
  5618 ;; This function calls:
  5619 ;;		Nothing
  5620 ;; This function is called by:
  5621 ;;		_touchScreenController
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text16
  5626  0046BA                     __ptext16:
  5627                           	callstack 0
  5628  0046BA                     ___fltol:
  5629                           	callstack 23
  5630  0046BA  343B               	rlcf	(___fltol@f1+2)^0,w,c
  5631  0046BC  343C               	rlcf	(___fltol@f1+3)^0,w,c
  5632  0046BE  6E42               	movwf	___fltol@exp1^0,c
  5633  0046C0  5042               	movf	___fltol@exp1^0,w,c
  5634  0046C2  A4D8               	btfss	status,2,c
  5635  0046C4  EF66  F023         	goto	u7541
  5636  0046C8  EF68  F023         	goto	u7540
  5637  0046CC                     u7541:
  5638  0046CC  EF72  F023         	goto	l10095
  5639  0046D0                     u7540:
  5640  0046D0                     l10091:
  5641  0046D0  0E00               	movlw	0
  5642  0046D2  6E39               	movwf	?___fltol^0,c
  5643  0046D4  0E00               	movlw	0
  5644  0046D6  6E3A               	movwf	(?___fltol+1)^0,c
  5645  0046D8  0E00               	movlw	0
  5646  0046DA  6E3B               	movwf	(?___fltol+2)^0,c
  5647  0046DC  0E00               	movlw	0
  5648  0046DE  6E3C               	movwf	(?___fltol+3)^0,c
  5649  0046E0  EFDF  F023         	goto	l1106
  5650  0046E4                     l10095:
  5651  0046E4  C039  F03D         	movff	___fltol@f1,??___fltol
  5652  0046E8  C03A  F03E         	movff	___fltol@f1+1,??___fltol+1
  5653  0046EC  C03B  F03F         	movff	___fltol@f1+2,??___fltol+2
  5654  0046F0  C03C  F040         	movff	___fltol@f1+3,??___fltol+3
  5655  0046F4  0E20               	movlw	32
  5656  0046F6  EF82  F023         	goto	u7550
  5657  0046FA                     u7555:
  5658  0046FA  90D8               	bcf	status,0,c
  5659  0046FC  3240               	rrcf	(??___fltol+3)^0,f,c
  5660  0046FE  323F               	rrcf	(??___fltol+2)^0,f,c
  5661  004700  323E               	rrcf	(??___fltol+1)^0,f,c
  5662  004702  323D               	rrcf	??___fltol^0,f,c
  5663  004704                     u7550:
  5664  004704  2EE8               	decfsz	wreg,f,c
  5665  004706  EF7D  F023         	goto	u7555
  5666  00470A  503D               	movf	??___fltol^0,w,c
  5667  00470C  6E41               	movwf	___fltol@sign1^0,c
  5668  00470E  8E3B               	bsf	(___fltol@f1+2)^0,7,c
  5669  004710  0EFF               	movlw	255
  5670  004712  1639               	andwf	___fltol@f1^0,f,c
  5671  004714  0EFF               	movlw	255
  5672  004716  163A               	andwf	(___fltol@f1+1)^0,f,c
  5673  004718  0EFF               	movlw	255
  5674  00471A  163B               	andwf	(___fltol@f1+2)^0,f,c
  5675  00471C  0E00               	movlw	0
  5676  00471E  163C               	andwf	(___fltol@f1+3)^0,f,c
  5677  004720  0E96               	movlw	150
  5678  004722  5E42               	subwf	___fltol@exp1^0,f,c
  5679  004724  BE42               	btfsc	___fltol@exp1^0,7,c
  5680  004726  EF99  F023         	goto	u7560
  5681  00472A  EF97  F023         	goto	u7561
  5682  00472E                     u7561:
  5683  00472E  EFAF  F023         	goto	l10115
  5684  004732                     u7560:
  5685  004732  5042               	movf	___fltol@exp1^0,w,c
  5686  004734  0A80               	xorlw	128
  5687  004736  0F97               	addlw	151
  5688  004738  B0D8               	btfsc	status,0,c
  5689  00473A  EFA1  F023         	goto	u7571
  5690  00473E  EFA3  F023         	goto	u7570
  5691  004742                     u7571:
  5692  004742  EFA5  F023         	goto	l10111
  5693  004746                     u7570:
  5694  004746  EF68  F023         	goto	l10091
  5695  00474A                     l10111:
  5696  00474A  90D8               	bcf	status,0,c
  5697  00474C  323C               	rrcf	(___fltol@f1+3)^0,f,c
  5698  00474E  323B               	rrcf	(___fltol@f1+2)^0,f,c
  5699  004750  323A               	rrcf	(___fltol@f1+1)^0,f,c
  5700  004752  3239               	rrcf	___fltol@f1^0,f,c
  5701  004754  3E42               	incfsz	___fltol@exp1^0,f,c
  5702  004756  EFA5  F023         	goto	l10111
  5703  00475A  EFC7  F023         	goto	l10125
  5704  00475E                     l10115:
  5705  00475E  0E1F               	movlw	31
  5706  004760  6442               	cpfsgt	___fltol@exp1^0,c
  5707  004762  EFB5  F023         	goto	u7581
  5708  004766  EFB7  F023         	goto	u7580
  5709  00476A                     u7581:
  5710  00476A  EFBF  F023         	goto	l10123
  5711  00476E                     u7580:
  5712  00476E  EF68  F023         	goto	l10091
  5713  004772                     l10121:
  5714  004772  90D8               	bcf	status,0,c
  5715  004774  3639               	rlcf	___fltol@f1^0,f,c
  5716  004776  363A               	rlcf	(___fltol@f1+1)^0,f,c
  5717  004778  363B               	rlcf	(___fltol@f1+2)^0,f,c
  5718  00477A  363C               	rlcf	(___fltol@f1+3)^0,f,c
  5719  00477C  0642               	decf	___fltol@exp1^0,f,c
  5720  00477E                     l10123:
  5721  00477E  5042               	movf	___fltol@exp1^0,w,c
  5722  004780  A4D8               	btfss	status,2,c
  5723  004782  EFC5  F023         	goto	u7591
  5724  004786  EFC7  F023         	goto	u7590
  5725  00478A                     u7591:
  5726  00478A  EFB9  F023         	goto	l10121
  5727  00478E                     u7590:
  5728  00478E                     l10125:
  5729  00478E  5041               	movf	___fltol@sign1^0,w,c
  5730  004790  B4D8               	btfsc	status,2,c
  5731  004792  EFCD  F023         	goto	u7601
  5732  004796  EFCF  F023         	goto	u7600
  5733  00479A                     u7601:
  5734  00479A  EFD7  F023         	goto	l10129
  5735  00479E                     u7600:
  5736  00479E  1E3C               	comf	(___fltol@f1+3)^0,f,c
  5737  0047A0  1E3B               	comf	(___fltol@f1+2)^0,f,c
  5738  0047A2  1E3A               	comf	(___fltol@f1+1)^0,f,c
  5739  0047A4  6C39               	negf	___fltol@f1^0,c
  5740  0047A6  0E00               	movlw	0
  5741  0047A8  223A               	addwfc	(___fltol@f1+1)^0,f,c
  5742  0047AA  223B               	addwfc	(___fltol@f1+2)^0,f,c
  5743  0047AC  223C               	addwfc	(___fltol@f1+3)^0,f,c
  5744  0047AE                     l10129:
  5745  0047AE  C039  F039         	movff	___fltol@f1,?___fltol
  5746  0047B2  C03A  F03A         	movff	___fltol@f1+1,?___fltol+1
  5747  0047B6  C03B  F03B         	movff	___fltol@f1+2,?___fltol+2
  5748  0047BA  C03C  F03C         	movff	___fltol@f1+3,?___fltol+3
  5749  0047BE                     l1106:
  5750  0047BE  0012               	return		;funcret
  5751  0047C0                     __end_of___fltol:
  5752                           	callstack 0
  5753                           
  5754 ;; *************** function ___fldiv *****************
  5755 ;; Defined at:
  5756 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  b               4   31[COMRAM] long 
  5759 ;;  a               4   35[COMRAM] long 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  grs             4   50[COMRAM] unsigned long 
  5762 ;;  rem             4   43[COMRAM] unsigned long 
  5763 ;;  new_exp         2   48[COMRAM] short 
  5764 ;;  aexp            1   55[COMRAM] unsigned char 
  5765 ;;  bexp            1   54[COMRAM] unsigned char 
  5766 ;;  sign            1   47[COMRAM] unsigned char 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  4   31[COMRAM] unsigned char 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5776 ;;      Params:         8       0       0       0       0       0       0
  5777 ;;      Locals:        13       0       0       0       0       0       0
  5778 ;;      Temps:          4       0       0       0       0       0       0
  5779 ;;      Totals:        25       0       0       0       0       0       0
  5780 ;;Total ram usage:       25 bytes
  5781 ;; Hardware stack levels used: 1
  5782 ;; Hardware stack levels required when called: 4
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_touchScreenController
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text17
  5791  002604                     __ptext17:
  5792                           	callstack 0
  5793  002604                     ___fldiv:
  5794                           	callstack 23
  5795  002604  5023               	movf	(___fldiv@b+3)^0,w,c
  5796  002606  0B80               	andlw	128
  5797  002608  6E30               	movwf	___fldiv@sign^0,c
  5798  00260A  5023               	movf	(___fldiv@b+3)^0,w,c
  5799  00260C  2423               	addwf	(___fldiv@b+3)^0,w,c
  5800  00260E  6E37               	movwf	___fldiv@bexp^0,c
  5801  002610  AE22               	btfss	(___fldiv@b+2)^0,7,c
  5802  002612  EF0D  F013         	goto	u7311
  5803  002616  EF0F  F013         	goto	u7310
  5804  00261A                     u7311:
  5805  00261A  EF10  F013         	goto	l9957
  5806  00261E                     u7310:
  5807  00261E  8037               	bsf	___fldiv@bexp^0,0,c
  5808  002620                     l9957:
  5809  002620  5037               	movf	___fldiv@bexp^0,w,c
  5810  002622  B4D8               	btfsc	status,2,c
  5811  002624  EF16  F013         	goto	u7321
  5812  002628  EF18  F013         	goto	u7320
  5813  00262C                     u7321:
  5814  00262C  EF2D  F013         	goto	l9967
  5815  002630                     u7320:
  5816  002630  2837               	incf	___fldiv@bexp^0,w,c
  5817  002632  A4D8               	btfss	status,2,c
  5818  002634  EF1E  F013         	goto	u7331
  5819  002638  EF20  F013         	goto	u7330
  5820  00263C                     u7331:
  5821  00263C  EF28  F013         	goto	l9963
  5822  002640                     u7330:
  5823  002640  0E00               	movlw	0
  5824  002642  6E20               	movwf	___fldiv@b^0,c
  5825  002644  0E00               	movlw	0
  5826  002646  6E21               	movwf	(___fldiv@b+1)^0,c
  5827  002648  0E00               	movlw	0
  5828  00264A  6E22               	movwf	(___fldiv@b+2)^0,c
  5829  00264C  0E00               	movlw	0
  5830  00264E  6E23               	movwf	(___fldiv@b+3)^0,c
  5831  002650                     l9963:
  5832  002650  8E22               	bsf	(___fldiv@b+2)^0,7,c
  5833  002652  0E00               	movlw	0
  5834  002654  6E23               	movwf	(___fldiv@b+3)^0,c
  5835  002656  EF35  F013         	goto	l9969
  5836  00265A                     l9967:
  5837  00265A  0E00               	movlw	0
  5838  00265C  6E20               	movwf	___fldiv@b^0,c
  5839  00265E  0E00               	movlw	0
  5840  002660  6E21               	movwf	(___fldiv@b+1)^0,c
  5841  002662  0E00               	movlw	0
  5842  002664  6E22               	movwf	(___fldiv@b+2)^0,c
  5843  002666  0E00               	movlw	0
  5844  002668  6E23               	movwf	(___fldiv@b+3)^0,c
  5845  00266A                     l9969:
  5846  00266A  5027               	movf	(___fldiv@a+3)^0,w,c
  5847  00266C  0B80               	andlw	128
  5848  00266E  1A30               	xorwf	___fldiv@sign^0,f,c
  5849  002670  5027               	movf	(___fldiv@a+3)^0,w,c
  5850  002672  2427               	addwf	(___fldiv@a+3)^0,w,c
  5851  002674  6E38               	movwf	___fldiv@aexp^0,c
  5852  002676  AE26               	btfss	(___fldiv@a+2)^0,7,c
  5853  002678  EF40  F013         	goto	u7341
  5854  00267C  EF42  F013         	goto	u7340
  5855  002680                     u7341:
  5856  002680  EF43  F013         	goto	l9977
  5857  002684                     u7340:
  5858  002684  8038               	bsf	___fldiv@aexp^0,0,c
  5859  002686                     l9977:
  5860  002686  5038               	movf	___fldiv@aexp^0,w,c
  5861  002688  B4D8               	btfsc	status,2,c
  5862  00268A  EF49  F013         	goto	u7351
  5863  00268E  EF4B  F013         	goto	u7350
  5864  002692                     u7351:
  5865  002692  EF60  F013         	goto	l9987
  5866  002696                     u7350:
  5867  002696  2838               	incf	___fldiv@aexp^0,w,c
  5868  002698  A4D8               	btfss	status,2,c
  5869  00269A  EF51  F013         	goto	u7361
  5870  00269E  EF53  F013         	goto	u7360
  5871  0026A2                     u7361:
  5872  0026A2  EF5B  F013         	goto	l9983
  5873  0026A6                     u7360:
  5874  0026A6  0E00               	movlw	0
  5875  0026A8  6E24               	movwf	___fldiv@a^0,c
  5876  0026AA  0E00               	movlw	0
  5877  0026AC  6E25               	movwf	(___fldiv@a+1)^0,c
  5878  0026AE  0E00               	movlw	0
  5879  0026B0  6E26               	movwf	(___fldiv@a+2)^0,c
  5880  0026B2  0E00               	movlw	0
  5881  0026B4  6E27               	movwf	(___fldiv@a+3)^0,c
  5882  0026B6                     l9983:
  5883  0026B6  8E26               	bsf	(___fldiv@a+2)^0,7,c
  5884  0026B8  0E00               	movlw	0
  5885  0026BA  6E27               	movwf	(___fldiv@a+3)^0,c
  5886  0026BC  EF68  F013         	goto	l9989
  5887  0026C0                     l9987:
  5888  0026C0  0E00               	movlw	0
  5889  0026C2  6E24               	movwf	___fldiv@a^0,c
  5890  0026C4  0E00               	movlw	0
  5891  0026C6  6E25               	movwf	(___fldiv@a+1)^0,c
  5892  0026C8  0E00               	movlw	0
  5893  0026CA  6E26               	movwf	(___fldiv@a+2)^0,c
  5894  0026CC  0E00               	movlw	0
  5895  0026CE  6E27               	movwf	(___fldiv@a+3)^0,c
  5896  0026D0                     l9989:
  5897  0026D0  5024               	movf	___fldiv@a^0,w,c
  5898  0026D2  1025               	iorwf	(___fldiv@a+1)^0,w,c
  5899  0026D4  1026               	iorwf	(___fldiv@a+2)^0,w,c
  5900  0026D6  1027               	iorwf	(___fldiv@a+3)^0,w,c
  5901  0026D8  A4D8               	btfss	status,2,c
  5902  0026DA  EF71  F013         	goto	u7371
  5903  0026DE  EF73  F013         	goto	u7370
  5904  0026E2                     u7371:
  5905  0026E2  EF8B  F013         	goto	l10001
  5906  0026E6                     u7370:
  5907  0026E6  0E00               	movlw	0
  5908  0026E8  6E20               	movwf	___fldiv@b^0,c
  5909  0026EA  0E00               	movlw	0
  5910  0026EC  6E21               	movwf	(___fldiv@b+1)^0,c
  5911  0026EE  0E00               	movlw	0
  5912  0026F0  6E22               	movwf	(___fldiv@b+2)^0,c
  5913  0026F2  0E00               	movlw	0
  5914  0026F4  6E23               	movwf	(___fldiv@b+3)^0,c
  5915  0026F6  0E80               	movlw	128
  5916  0026F8  1222               	iorwf	(___fldiv@b+2)^0,f,c
  5917  0026FA  0E7F               	movlw	127
  5918  0026FC  1223               	iorwf	(___fldiv@b+3)^0,f,c
  5919  0026FE                     l9995:
  5920  0026FE  5030               	movf	___fldiv@sign^0,w,c
  5921  002700  1223               	iorwf	(___fldiv@b+3)^0,f,c
  5922  002702  C020  F020         	movff	___fldiv@b,?___fldiv
  5923  002706  C021  F021         	movff	___fldiv@b+1,?___fldiv+1
  5924  00270A  C022  F022         	movff	___fldiv@b+2,?___fldiv+2
  5925  00270E  C023  F023         	movff	___fldiv@b+3,?___fldiv+3
  5926  002712  EFCE  F014         	goto	l1391
  5927  002716                     l10001:
  5928  002716  5037               	movf	___fldiv@bexp^0,w,c
  5929  002718  A4D8               	btfss	status,2,c
  5930  00271A  EF91  F013         	goto	u7381
  5931  00271E  EF93  F013         	goto	u7380
  5932  002722                     u7381:
  5933  002722  EF9D  F013         	goto	l10009
  5934  002726                     u7380:
  5935  002726  0E00               	movlw	0
  5936  002728  6E20               	movwf	?___fldiv^0,c
  5937  00272A  0E00               	movlw	0
  5938  00272C  6E21               	movwf	(?___fldiv+1)^0,c
  5939  00272E  0E00               	movlw	0
  5940  002730  6E22               	movwf	(?___fldiv+2)^0,c
  5941  002732  0E00               	movlw	0
  5942  002734  6E23               	movwf	(?___fldiv+3)^0,c
  5943  002736  EFCE  F014         	goto	l1391
  5944  00273A                     l10009:
  5945  00273A  5038               	movf	___fldiv@aexp^0,w,c
  5946  00273C  C037  F028         	movff	___fldiv@bexp,??___fldiv
  5947  002740  6A29               	clrf	(??___fldiv+1)^0,c
  5948  002742  5E28               	subwf	??___fldiv^0,f,c
  5949  002744  0E00               	movlw	0
  5950  002746  5A29               	subwfb	(??___fldiv+1)^0,f,c
  5951  002748  0E7F               	movlw	127
  5952  00274A  2428               	addwf	??___fldiv^0,w,c
  5953  00274C  6E31               	movwf	___fldiv@new_exp^0,c
  5954  00274E  0E00               	movlw	0
  5955  002750  2029               	addwfc	(??___fldiv+1)^0,w,c
  5956  002752  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  5957  002754  C020  F02C         	movff	___fldiv@b,___fldiv@rem
  5958  002758  C021  F02D         	movff	___fldiv@b+1,___fldiv@rem+1
  5959  00275C  C022  F02E         	movff	___fldiv@b+2,___fldiv@rem+2
  5960  002760  C023  F02F         	movff	___fldiv@b+3,___fldiv@rem+3
  5961  002764  0E00               	movlw	0
  5962  002766  6E20               	movwf	___fldiv@b^0,c
  5963  002768  0E00               	movlw	0
  5964  00276A  6E21               	movwf	(___fldiv@b+1)^0,c
  5965  00276C  0E00               	movlw	0
  5966  00276E  6E22               	movwf	(___fldiv@b+2)^0,c
  5967  002770  0E00               	movlw	0
  5968  002772  6E23               	movwf	(___fldiv@b+3)^0,c
  5969  002774  0E00               	movlw	0
  5970  002776  6E33               	movwf	___fldiv@grs^0,c
  5971  002778  0E00               	movlw	0
  5972  00277A  6E34               	movwf	(___fldiv@grs+1)^0,c
  5973  00277C  0E00               	movlw	0
  5974  00277E  6E35               	movwf	(___fldiv@grs+2)^0,c
  5975  002780  0E00               	movlw	0
  5976  002782  6E36               	movwf	(___fldiv@grs+3)^0,c
  5977  002784  0E00               	movlw	0
  5978  002786  6E38               	movwf	___fldiv@aexp^0,c
  5979  002788  EFFE  F013         	goto	l1393
  5980  00278C                     l10019:
  5981  00278C  5038               	movf	___fldiv@aexp^0,w,c
  5982  00278E  B4D8               	btfsc	status,2,c
  5983  002790  EFCC  F013         	goto	u7391
  5984  002794  EFCE  F013         	goto	u7390
  5985  002798                     u7391:
  5986  002798  EFE5  F013         	goto	l10027
  5987  00279C                     u7390:
  5988  00279C  90D8               	bcf	status,0,c
  5989  00279E  362C               	rlcf	___fldiv@rem^0,f,c
  5990  0027A0  362D               	rlcf	(___fldiv@rem+1)^0,f,c
  5991  0027A2  362E               	rlcf	(___fldiv@rem+2)^0,f,c
  5992  0027A4  362F               	rlcf	(___fldiv@rem+3)^0,f,c
  5993  0027A6  90D8               	bcf	status,0,c
  5994  0027A8  3620               	rlcf	___fldiv@b^0,f,c
  5995  0027AA  3621               	rlcf	(___fldiv@b+1)^0,f,c
  5996  0027AC  3622               	rlcf	(___fldiv@b+2)^0,f,c
  5997  0027AE  3623               	rlcf	(___fldiv@b+3)^0,f,c
  5998  0027B0  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  5999  0027B2  EFDD  F013         	goto	u7401
  6000  0027B6  EFDF  F013         	goto	u7400
  6001  0027BA                     u7401:
  6002  0027BA  EFE0  F013         	goto	l1396
  6003  0027BE                     u7400:
  6004  0027BE  8020               	bsf	___fldiv@b^0,0,c
  6005  0027C0                     l1396:
  6006  0027C0  90D8               	bcf	status,0,c
  6007  0027C2  3633               	rlcf	___fldiv@grs^0,f,c
  6008  0027C4  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  6009  0027C6  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  6010  0027C8  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  6011  0027CA                     l10027:
  6012  0027CA  5024               	movf	___fldiv@a^0,w,c
  6013  0027CC  5C2C               	subwf	___fldiv@rem^0,w,c
  6014  0027CE  5025               	movf	(___fldiv@a+1)^0,w,c
  6015  0027D0  582D               	subwfb	(___fldiv@rem+1)^0,w,c
  6016  0027D2  5026               	movf	(___fldiv@a+2)^0,w,c
  6017  0027D4  582E               	subwfb	(___fldiv@rem+2)^0,w,c
  6018  0027D6  5027               	movf	(___fldiv@a+3)^0,w,c
  6019  0027D8  582F               	subwfb	(___fldiv@rem+3)^0,w,c
  6020  0027DA  A0D8               	btfss	status,0,c
  6021  0027DC  EFF2  F013         	goto	u7411
  6022  0027E0  EFF4  F013         	goto	u7410
  6023  0027E4                     u7411:
  6024  0027E4  EFFD  F013         	goto	l10033
  6025  0027E8                     u7410:
  6026  0027E8  8C36               	bsf	(___fldiv@grs+3)^0,6,c
  6027  0027EA  5024               	movf	___fldiv@a^0,w,c
  6028  0027EC  5E2C               	subwf	___fldiv@rem^0,f,c
  6029  0027EE  5025               	movf	(___fldiv@a+1)^0,w,c
  6030  0027F0  5A2D               	subwfb	(___fldiv@rem+1)^0,f,c
  6031  0027F2  5026               	movf	(___fldiv@a+2)^0,w,c
  6032  0027F4  5A2E               	subwfb	(___fldiv@rem+2)^0,f,c
  6033  0027F6  5027               	movf	(___fldiv@a+3)^0,w,c
  6034  0027F8  5A2F               	subwfb	(___fldiv@rem+3)^0,f,c
  6035  0027FA                     l10033:
  6036  0027FA  2A38               	incf	___fldiv@aexp^0,f,c
  6037  0027FC                     l1393:
  6038  0027FC  0E19               	movlw	25
  6039  0027FE  6438               	cpfsgt	___fldiv@aexp^0,c
  6040  002800  EF04  F014         	goto	u7421
  6041  002804  EF06  F014         	goto	u7420
  6042  002808                     u7421:
  6043  002808  EFC6  F013         	goto	l10019
  6044  00280C                     u7420:
  6045  00280C  502C               	movf	___fldiv@rem^0,w,c
  6046  00280E  102D               	iorwf	(___fldiv@rem+1)^0,w,c
  6047  002810  102E               	iorwf	(___fldiv@rem+2)^0,w,c
  6048  002812  102F               	iorwf	(___fldiv@rem+3)^0,w,c
  6049  002814  B4D8               	btfsc	status,2,c
  6050  002816  EF0F  F014         	goto	u7431
  6051  00281A  EF11  F014         	goto	u7430
  6052  00281E                     u7431:
  6053  00281E  EF29  F014         	goto	l10045
  6054  002822                     u7430:
  6055  002822  8033               	bsf	___fldiv@grs^0,0,c
  6056  002824  EF29  F014         	goto	l10045
  6057  002828                     l10039:
  6058  002828  90D8               	bcf	status,0,c
  6059  00282A  3620               	rlcf	___fldiv@b^0,f,c
  6060  00282C  3621               	rlcf	(___fldiv@b+1)^0,f,c
  6061  00282E  3622               	rlcf	(___fldiv@b+2)^0,f,c
  6062  002830  3623               	rlcf	(___fldiv@b+3)^0,f,c
  6063  002832  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6064  002834  EF1E  F014         	goto	u7441
  6065  002838  EF20  F014         	goto	u7440
  6066  00283C                     u7441:
  6067  00283C  EF21  F014         	goto	l1402
  6068  002840                     u7440:
  6069  002840  8020               	bsf	___fldiv@b^0,0,c
  6070  002842                     l1402:
  6071  002842  90D8               	bcf	status,0,c
  6072  002844  3633               	rlcf	___fldiv@grs^0,f,c
  6073  002846  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  6074  002848  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  6075  00284A  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  6076  00284C  0631               	decf	___fldiv@new_exp^0,f,c
  6077  00284E  A0D8               	btfss	status,0,c
  6078  002850  0632               	decf	(___fldiv@new_exp+1)^0,f,c
  6079  002852                     l10045:
  6080  002852  AE22               	btfss	(___fldiv@b+2)^0,7,c
  6081  002854  EF2E  F014         	goto	u7451
  6082  002858  EF30  F014         	goto	u7450
  6083  00285C                     u7451:
  6084  00285C  EF14  F014         	goto	l10039
  6085  002860                     u7450:
  6086  002860  0E00               	movlw	0
  6087  002862  6E38               	movwf	___fldiv@aexp^0,c
  6088  002864  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6089  002866  EF37  F014         	goto	u7461
  6090  00286A  EF39  F014         	goto	u7460
  6091  00286E                     u7461:
  6092  00286E  EF5D  F014         	goto	l1404
  6093  002872                     u7460:
  6094  002872  0EFF               	movlw	255
  6095  002874  1433               	andwf	___fldiv@grs^0,w,c
  6096  002876  6E28               	movwf	??___fldiv^0,c
  6097  002878  0EFF               	movlw	255
  6098  00287A  1434               	andwf	(___fldiv@grs+1)^0,w,c
  6099  00287C  6E29               	movwf	(??___fldiv+1)^0,c
  6100  00287E  0EFF               	movlw	255
  6101  002880  1435               	andwf	(___fldiv@grs+2)^0,w,c
  6102  002882  6E2A               	movwf	(??___fldiv+2)^0,c
  6103  002884  0E7F               	movlw	127
  6104  002886  1436               	andwf	(___fldiv@grs+3)^0,w,c
  6105  002888  6E2B               	movwf	(??___fldiv+3)^0,c
  6106  00288A  5028               	movf	??___fldiv^0,w,c
  6107  00288C  1029               	iorwf	(??___fldiv+1)^0,w,c
  6108  00288E  102A               	iorwf	(??___fldiv+2)^0,w,c
  6109  002890  102B               	iorwf	(??___fldiv+3)^0,w,c
  6110  002892  B4D8               	btfsc	status,2,c
  6111  002894  EF4E  F014         	goto	u7471
  6112  002898  EF50  F014         	goto	u7470
  6113  00289C                     u7471:
  6114  00289C  EF54  F014         	goto	l1405
  6115  0028A0                     u7470:
  6116  0028A0                     l10053:
  6117  0028A0  0E01               	movlw	1
  6118  0028A2  6E38               	movwf	___fldiv@aexp^0,c
  6119  0028A4  EF5D  F014         	goto	l1404
  6120  0028A8                     l1405:
  6121  0028A8  A020               	btfss	___fldiv@b^0,0,c
  6122  0028AA  EF59  F014         	goto	u7481
  6123  0028AE  EF5B  F014         	goto	u7480
  6124  0028B2                     u7481:
  6125  0028B2  EF5D  F014         	goto	l1404
  6126  0028B6                     u7480:
  6127  0028B6  EF50  F014         	goto	l10053
  6128  0028BA                     l1404:
  6129  0028BA  5038               	movf	___fldiv@aexp^0,w,c
  6130  0028BC  B4D8               	btfsc	status,2,c
  6131  0028BE  EF63  F014         	goto	u7491
  6132  0028C2  EF65  F014         	goto	u7490
  6133  0028C6                     u7491:
  6134  0028C6  EF89  F014         	goto	l10065
  6135  0028CA                     u7490:
  6136  0028CA  0E01               	movlw	1
  6137  0028CC  2620               	addwf	___fldiv@b^0,f,c
  6138  0028CE  0E00               	movlw	0
  6139  0028D0  2221               	addwfc	(___fldiv@b+1)^0,f,c
  6140  0028D2  2222               	addwfc	(___fldiv@b+2)^0,f,c
  6141  0028D4  2223               	addwfc	(___fldiv@b+3)^0,f,c
  6142  0028D6  A023               	btfss	(___fldiv@b+3)^0,0,c
  6143  0028D8  EF70  F014         	goto	u7501
  6144  0028DC  EF72  F014         	goto	u7500
  6145  0028E0                     u7501:
  6146  0028E0  EF89  F014         	goto	l10065
  6147  0028E4                     u7500:
  6148  0028E4  C020  F028         	movff	___fldiv@b,??___fldiv
  6149  0028E8  C021  F029         	movff	___fldiv@b+1,??___fldiv+1
  6150  0028EC  C022  F02A         	movff	___fldiv@b+2,??___fldiv+2
  6151  0028F0  C023  F02B         	movff	___fldiv@b+3,??___fldiv+3
  6152  0028F4  342B               	rlcf	(??___fldiv+3)^0,w,c
  6153  0028F6  322B               	rrcf	(??___fldiv+3)^0,f,c
  6154  0028F8  322A               	rrcf	(??___fldiv+2)^0,f,c
  6155  0028FA  3229               	rrcf	(??___fldiv+1)^0,f,c
  6156  0028FC  3228               	rrcf	??___fldiv^0,f,c
  6157  0028FE  C028  F020         	movff	??___fldiv,___fldiv@b
  6158  002902  C029  F021         	movff	??___fldiv+1,___fldiv@b+1
  6159  002906  C02A  F022         	movff	??___fldiv+2,___fldiv@b+2
  6160  00290A  C02B  F023         	movff	??___fldiv+3,___fldiv@b+3
  6161  00290E  4A31               	infsnz	___fldiv@new_exp^0,f,c
  6162  002910  2A32               	incf	(___fldiv@new_exp+1)^0,f,c
  6163  002912                     l10065:
  6164  002912  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6165  002914  EF94  F014         	goto	u7511
  6166  002918  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  6167  00291A  E108               	bnz	u7510
  6168  00291C  2831               	incf	___fldiv@new_exp^0,w,c
  6169  00291E  A0D8               	btfss	status,0,c
  6170  002920  EF94  F014         	goto	u7511
  6171  002924  EF96  F014         	goto	u7510
  6172  002928                     u7511:
  6173  002928  EFA1  F014         	goto	l10069
  6174  00292C                     u7510:
  6175  00292C  0E00               	movlw	0
  6176  00292E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  6177  002930  6831               	setf	___fldiv@new_exp^0,c
  6178  002932  0E00               	movlw	0
  6179  002934  6E20               	movwf	___fldiv@b^0,c
  6180  002936  0E00               	movlw	0
  6181  002938  6E21               	movwf	(___fldiv@b+1)^0,c
  6182  00293A  0E00               	movlw	0
  6183  00293C  6E22               	movwf	(___fldiv@b+2)^0,c
  6184  00293E  0E00               	movlw	0
  6185  002940  6E23               	movwf	(___fldiv@b+3)^0,c
  6186  002942                     l10069:
  6187  002942  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6188  002944  EFAE  F014         	goto	u7520
  6189  002948  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  6190  00294A  E106               	bnz	u7521
  6191  00294C  0431               	decf	___fldiv@new_exp^0,w,c
  6192  00294E  B0D8               	btfsc	status,0,c
  6193  002950  EFAC  F014         	goto	u7521
  6194  002954  EFAE  F014         	goto	u7520
  6195  002958                     u7521:
  6196  002958  EFBC  F014         	goto	l10073
  6197  00295C                     u7520:
  6198  00295C  0E00               	movlw	0
  6199  00295E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  6200  002960  0E00               	movlw	0
  6201  002962  6E31               	movwf	___fldiv@new_exp^0,c
  6202  002964  0E00               	movlw	0
  6203  002966  6E20               	movwf	___fldiv@b^0,c
  6204  002968  0E00               	movlw	0
  6205  00296A  6E21               	movwf	(___fldiv@b+1)^0,c
  6206  00296C  0E00               	movlw	0
  6207  00296E  6E22               	movwf	(___fldiv@b+2)^0,c
  6208  002970  0E00               	movlw	0
  6209  002972  6E23               	movwf	(___fldiv@b+3)^0,c
  6210  002974  0E00               	movlw	0
  6211  002976  6E30               	movwf	___fldiv@sign^0,c
  6212  002978                     l10073:
  6213  002978  C031  F037         	movff	___fldiv@new_exp,___fldiv@bexp
  6214  00297C  A037               	btfss	___fldiv@bexp^0,0,c
  6215  00297E  EFC3  F014         	goto	u7531
  6216  002982  EFC5  F014         	goto	u7530
  6217  002986                     u7531:
  6218  002986  EFC8  F014         	goto	l10079
  6219  00298A                     u7530:
  6220  00298A  8E22               	bsf	(___fldiv@b+2)^0,7,c
  6221  00298C  EFC9  F014         	goto	l10081
  6222  002990                     l10079:
  6223  002990  9E22               	bcf	(___fldiv@b+2)^0,7,c
  6224  002992                     l10081:
  6225  002992  90D8               	bcf	status,0,c
  6226  002994  3037               	rrcf	___fldiv@bexp^0,w,c
  6227  002996  6E23               	movwf	(___fldiv@b+3)^0,c
  6228  002998  EF7F  F013         	goto	l9995
  6229  00299C                     l1391:
  6230  00299C  0012               	return		;funcret
  6231  00299E                     __end_of___fldiv:
  6232                           	callstack 0
  6233                           
  6234 ;; *************** function _GameParameters_setY *****************
  6235 ;; Defined at:
  6236 ;;		line 48 in file "class/gameParameters.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  s               2   17[COMRAM] PTR struct GameParameter
  6239 ;;		 -> g1(239), 
  6240 ;;  value           2   19[COMRAM] unsigned short 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;		None
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6252 ;;      Params:         4       0       0       0       0       0       0
  6253 ;;      Locals:         0       0       0       0       0       0       0
  6254 ;;      Temps:          0       0       0       0       0       0       0
  6255 ;;      Totals:         4       0       0       0       0       0       0
  6256 ;;Total ram usage:        4 bytes
  6257 ;; Hardware stack levels used: 1
  6258 ;; Hardware stack levels required when called: 4
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_touchScreenController
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text18
  6267  006326                     __ptext18:
  6268                           	callstack 0
  6269  006326                     _GameParameters_setY:
  6270                           	callstack 23
  6271  006326                     
  6272                           ;class/gameParameters.c: 48: void GameParameters_setY(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 49: {;class/gameParameters.c: 50:     s->y=value;
  6273  006326  EE20 F006          	lfsr	2,6
  6274  00632A  5012               	movf	GameParameters_setY@s^0,w,c
  6275  00632C  26D9               	addwf	fsr2l,f,c
  6276  00632E  5013               	movf	(GameParameters_setY@s+1)^0,w,c
  6277  006330  22DA               	addwfc	fsr2h,f,c
  6278  006332  C014  FFDE         	movff	GameParameters_setY@value,postinc2
  6279  006336  C015  FFDD         	movff	GameParameters_setY@value+1,postdec2
  6280  00633A  0012               	return		;funcret
  6281  00633C                     __end_of_GameParameters_setY:
  6282                           	callstack 0
  6283                           
  6284 ;; *************** function _GameParameters_setX *****************
  6285 ;; Defined at:
  6286 ;;		line 44 in file "class/gameParameters.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  s               2   17[COMRAM] PTR struct GameParameter
  6289 ;;		 -> g1(239), 
  6290 ;;  value           2   19[COMRAM] unsigned short 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6302 ;;      Params:         4       0       0       0       0       0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0
  6305 ;;      Totals:         4       0       0       0       0       0       0
  6306 ;;Total ram usage:        4 bytes
  6307 ;; Hardware stack levels used: 1
  6308 ;; Hardware stack levels required when called: 4
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_touchScreenController
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text19
  6317  00633C                     __ptext19:
  6318                           	callstack 0
  6319  00633C                     _GameParameters_setX:
  6320                           	callstack 23
  6321  00633C                     
  6322                           ;class/gameParameters.c: 44: void GameParameters_setX(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 45: {;class/gameParameters.c: 46:     s->x=value;
  6323  00633C  EE20 F004          	lfsr	2,4
  6324  006340  5012               	movf	GameParameters_setX@s^0,w,c
  6325  006342  26D9               	addwf	fsr2l,f,c
  6326  006344  5013               	movf	(GameParameters_setX@s+1)^0,w,c
  6327  006346  22DA               	addwfc	fsr2h,f,c
  6328  006348  C014  FFDE         	movff	GameParameters_setX@value,postinc2
  6329  00634C  C015  FFDD         	movff	GameParameters_setX@value+1,postdec2
  6330  006350  0012               	return		;funcret
  6331  006352                     __end_of_GameParameters_setX:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _sleepSM *****************
  6335 ;; Defined at:
  6336 ;;		line 19 in file "stateMachine/sleepSM.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  ev              1    wreg     unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  ev              1    0[COMRAM] unsigned char 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6350 ;;      Params:         0       0       0       0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0
  6353 ;;      Totals:         0       0       0       0       0       0       0
  6354 ;;Total ram usage:        0 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; Hardware stack levels required when called: 4
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_Factory_exec
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text20
  6365  0063C6                     __ptext20:
  6366                           	callstack 0
  6367  0063C6                     _sleepSM:
  6368                           	callstack 25
  6369  0063C6  0012               	return		;funcret
  6370  0063C8                     __end_of_sleepSM:
  6371                           	callstack 0
  6372                           
  6373 ;; *************** function _gameControllerSM *****************
  6374 ;; Defined at:
  6375 ;;		line 22 in file "stateMachine/gameController.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  ev              1    wreg     unsigned char 
  6378 ;;  g               2   59[COMRAM] PTR struct GameParameter
  6379 ;;		 -> g1(239), 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  ev              1   63[COMRAM] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6391 ;;      Params:         2       0       0       0       0       0       0
  6392 ;;      Locals:         1       0       0       0       0       0       0
  6393 ;;      Temps:          2       0       0       0       0       0       0
  6394 ;;      Totals:         5       0       0       0       0       0       0
  6395 ;;Total ram usage:        5 bytes
  6396 ;; Hardware stack levels used: 1
  6397 ;; Hardware stack levels required when called: 9
  6398 ;; This function calls:
  6399 ;;		_XF_scheduleTimer
  6400 ;;		_gameControllerController
  6401 ;; This function is called by:
  6402 ;;		_Factory_exec
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text21
  6407  004E5C                     __ptext21:
  6408                           	callstack 0
  6409  004E5C                     _gameControllerSM:
  6410                           	callstack 20
  6411                           
  6412                           ;incstack = 0
  6413                           ;gameControllerSM@ev stored from wreg
  6414  004E5C  6E40               	movwf	gameControllerSM@ev^0,c
  6415  004E5E                     
  6416                           ;stateMachine/gameController.c: 22: void gameControllerSM(Event ev,GameParameters* g);st
      +                          ateMachine/gameController.c: 23: {;stateMachine/gameController.c: 24:    switch(gameStat
      +                          eMachine)
  6417  004E5E  EF7A  F027         	goto	l10413
  6418  004E62                     l10383:
  6419                           
  6420                           ;stateMachine/gameController.c: 28:             gameControllerController(g,NULLEVENT);
  6421  004E62  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6422  004E66  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6423  004E6A  0E00               	movlw	0
  6424  004E6C  6E39               	movwf	gameControllerController@ev^0,c
  6425  004E6E  ECCF  F014         	call	_gameControllerController	;wreg free
  6426  004E72                     
  6427                           ;stateMachine/gameController.c: 29:             if(ev==evParameters)
  6428  004E72  0E07               	movlw	7
  6429  004E74  1840               	xorwf	gameControllerSM@ev^0,w,c
  6430  004E76  A4D8               	btfss	status,2,c
  6431  004E78  EF40  F027         	goto	u7881
  6432  004E7C  EF42  F027         	goto	u7880
  6433  004E80                     u7881:
  6434  004E80  EF44  F027         	goto	l10389
  6435  004E84                     u7880:
  6436  004E84                     
  6437                           ;stateMachine/gameController.c: 30:             {;stateMachine/gameController.c: 31:    
      +                                       gameStateMachine=PARAMETERS;
  6438  004E84  0E01               	movlw	1
  6439  004E86  6E4D               	movwf	_gameStateMachine^0,c
  6440  004E88                     l10389:
  6441                           
  6442                           ;stateMachine/gameController.c: 33:             if(ev==evOnePlayer)
  6443  004E88  0E05               	movlw	5
  6444  004E8A  1840               	xorwf	gameControllerSM@ev^0,w,c
  6445  004E8C  A4D8               	btfss	status,2,c
  6446  004E8E  EF4B  F027         	goto	u7891
  6447  004E92  EF4D  F027         	goto	u7890
  6448  004E96                     u7891:
  6449  004E96  EF9B  F027         	goto	l626
  6450  004E9A                     u7890:
  6451  004E9A                     
  6452                           ;stateMachine/gameController.c: 34:             {;stateMachine/gameController.c: 35:    
      +                                       gameStateMachine=LOCAL;
  6453  004E9A  0E02               	movlw	2
  6454  004E9C  6E4D               	movwf	_gameStateMachine^0,c
  6455  004E9E                     
  6456                           ;stateMachine/gameController.c: 36:                 XF_scheduleTimer(5,evGameUpdate,1);
  6457  004E9E  0E00               	movlw	0
  6458  004EA0  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  6459  004EA2  0E05               	movlw	5
  6460  004EA4  6E13               	movwf	XF_scheduleTimer@tm^0,c
  6461  004EA6  0E0A               	movlw	10
  6462  004EA8  6E15               	movwf	XF_scheduleTimer@ev^0,c
  6463  004EAA  0E01               	movlw	1
  6464  004EAC  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  6465  004EAE  EC06  F02E         	call	_XF_scheduleTimer	;wreg free
  6466  004EB2  EF9B  F027         	goto	l626
  6467  004EB6                     l10401:
  6468                           
  6469                           ;stateMachine/gameController.c: 45:             gameControllerController(g,NULLEVENT);
  6470  004EB6  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6471  004EBA  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6472  004EBE  0E00               	movlw	0
  6473  004EC0  6E39               	movwf	gameControllerController@ev^0,c
  6474  004EC2  ECCF  F014         	call	_gameControllerController	;wreg free
  6475  004EC6                     
  6476                           ;stateMachine/gameController.c: 46:             if(ev==evLeaveParam)
  6477  004EC6  0E08               	movlw	8
  6478  004EC8  1840               	xorwf	gameControllerSM@ev^0,w,c
  6479  004ECA  A4D8               	btfss	status,2,c
  6480  004ECC  EF6A  F027         	goto	u7901
  6481  004ED0  EF6C  F027         	goto	u7900
  6482  004ED4                     u7901:
  6483  004ED4  EF9B  F027         	goto	l626
  6484  004ED8                     u7900:
  6485  004ED8                     
  6486                           ;stateMachine/gameController.c: 47:             {;stateMachine/gameController.c: 48:    
      +                                       gameStateMachine=NOGAME;
  6487  004ED8  0E00               	movlw	0
  6488  004EDA  6E4D               	movwf	_gameStateMachine^0,c
  6489  004EDC  EF9B  F027         	goto	l626
  6490  004EE0                     l10407:
  6491                           
  6492                           ;stateMachine/gameController.c: 52:             gameControllerController(g,ev);
  6493  004EE0  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6494  004EE4  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6495  004EE8  C040  F039         	movff	gameControllerSM@ev,gameControllerController@ev
  6496  004EEC  ECCF  F014         	call	_gameControllerController	;wreg free
  6497                           
  6498                           ;stateMachine/gameController.c: 53:             break;
  6499  004EF0  EF9B  F027         	goto	l626
  6500  004EF4                     l10413:
  6501  004EF4  504D               	movf	_gameStateMachine^0,w,c
  6502  004EF6  6E3E               	movwf	??_gameControllerSM^0,c
  6503  004EF8  6A3F               	clrf	(??_gameControllerSM+1)^0,c
  6504                           
  6505                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6506                           ; Switch size 1, requested type "simple"
  6507                           ; Number of cases is 1, Range of values is 0 to 0
  6508                           ; switch strategies available:
  6509                           ; Name         Instructions Cycles
  6510                           ; simple_byte            4     3 (average)
  6511                           ;	Chosen strategy is simple_byte
  6512  004EFA  503F               	movf	(??_gameControllerSM+1)^0,w,c
  6513  004EFC  0A00               	xorlw	0	; case 0
  6514  004EFE  B4D8               	btfsc	status,2,c
  6515  004F00  EF84  F027         	goto	l10685
  6516  004F04  EF9B  F027         	goto	l626
  6517  004F08                     l10685:
  6518                           
  6519                           ; Switch size 1, requested type "simple"
  6520                           ; Number of cases is 5, Range of values is 0 to 4
  6521                           ; switch strategies available:
  6522                           ; Name         Instructions Cycles
  6523                           ; simple_byte           16     9 (average)
  6524                           ;	Chosen strategy is simple_byte
  6525  004F08  503E               	movf	??_gameControllerSM^0,w,c
  6526  004F0A  0A00               	xorlw	0	; case 0
  6527  004F0C  B4D8               	btfsc	status,2,c
  6528  004F0E  EF31  F027         	goto	l10383
  6529  004F12  0A01               	xorlw	1	; case 1
  6530  004F14  B4D8               	btfsc	status,2,c
  6531  004F16  EF5B  F027         	goto	l10401
  6532  004F1A  0A03               	xorlw	3	; case 2
  6533  004F1C  B4D8               	btfsc	status,2,c
  6534  004F1E  EF70  F027         	goto	l10407
  6535  004F22  0A01               	xorlw	1	; case 3
  6536  004F24  B4D8               	btfsc	status,2,c
  6537  004F26  EF9B  F027         	goto	l626
  6538  004F2A  0A07               	xorlw	7	; case 4
  6539  004F2C  B4D8               	btfsc	status,2,c
  6540  004F2E  EF70  F027         	goto	l10407
  6541  004F32  EF9B  F027         	goto	l626
  6542  004F36                     l626:
  6543  004F36  0012               	return		;funcret
  6544  004F38                     __end_of_gameControllerSM:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function _gameControllerController *****************
  6548 ;; Defined at:
  6549 ;;		line 68 in file "stateMachine/gameController.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  g               2   54[COMRAM] PTR struct GameParameter
  6552 ;;		 -> g1(239), 
  6553 ;;  ev              1   56[COMRAM] unsigned char 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6565 ;;      Params:         3       0       0       0       0       0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0
  6567 ;;      Temps:          2       0       0       0       0       0       0
  6568 ;;      Totals:         5       0       0       0       0       0       0
  6569 ;;Total ram usage:        5 bytes
  6570 ;; Hardware stack levels used: 1
  6571 ;; Hardware stack levels required when called: 8
  6572 ;; This function calls:
  6573 ;;		_GameParameters_init
  6574 ;;		_GameParameters_resetPos
  6575 ;;		_LCD_InButton
  6576 ;;		_LCD_InSlider
  6577 ;;		_LCD_SliderUpdate
  6578 ;;		_XF_pushEvent
  6579 ;;		_XF_scheduleTimer
  6580 ;;		_backlightController
  6581 ;;		_mooveBall
  6582 ;;		_moovePaddle
  6583 ;; This function is called by:
  6584 ;;		_gameControllerInit
  6585 ;;		_gameControllerSM
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text22
  6590  00299E                     __ptext22:
  6591                           	callstack 0
  6592  00299E                     _gameControllerController:
  6593                           	callstack 19
  6594  00299E                     
  6595                           ;stateMachine/gameController.c: 68: void gameControllerController(GameParameters* g,Even
      +                          t ev);stateMachine/gameController.c: 69: {;stateMachine/gameController.c: 70:     switch
      +                          (gameStateMachine)
  6596  00299E  EF62  F016         	goto	l9945
  6597  0029A2                     l9901:
  6598                           
  6599                           ;stateMachine/gameController.c: 74:             if(LCD_InButton(&(g->btnParam),g->x,g->y
      +                          ))
  6600  0029A2  0E08               	movlw	8
  6601  0029A4  2437               	addwf	gameControllerController@g^0,w,c
  6602  0029A6  6E12               	movwf	LCD_InButton@button^0,c
  6603  0029A8  0E00               	movlw	0
  6604  0029AA  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6605  0029AC  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6606  0029AE  EE20 F004          	lfsr	2,4
  6607  0029B2  5037               	movf	gameControllerController@g^0,w,c
  6608  0029B4  26D9               	addwf	fsr2l,f,c
  6609  0029B6  5038               	movf	(gameControllerController@g+1)^0,w,c
  6610  0029B8  22DA               	addwfc	fsr2h,f,c
  6611  0029BA  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6612  0029BE  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6613  0029C2  EE20 F006          	lfsr	2,6
  6614  0029C6  5037               	movf	gameControllerController@g^0,w,c
  6615  0029C8  26D9               	addwf	fsr2l,f,c
  6616  0029CA  5038               	movf	(gameControllerController@g+1)^0,w,c
  6617  0029CC  22DA               	addwfc	fsr2h,f,c
  6618  0029CE  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6619  0029D2  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6620  0029D6  EC50  F026         	call	_LCD_InButton	;wreg free
  6621  0029DA  0900               	iorlw	0
  6622  0029DC  B4D8               	btfsc	status,2,c
  6623  0029DE  EFF3  F014         	goto	u7221
  6624  0029E2  EFF5  F014         	goto	u7220
  6625  0029E6                     u7221:
  6626  0029E6  EF00  F015         	goto	l631
  6627  0029EA                     u7220:
  6628  0029EA                     
  6629                           ;stateMachine/gameController.c: 75:             {;stateMachine/gameController.c: 76:    
      +                                       XF_pushEvent(evParameters,0);
  6630  0029EA  0E00               	movlw	0
  6631  0029EC  6E18               	movwf	XF_pushEvent@inISR^0,c
  6632  0029EE  0E07               	movlw	7
  6633  0029F0  EC7A  F02E         	call	_XF_pushEvent
  6634                           
  6635                           ;stateMachine/gameController.c: 77:                 GameParameters_resetPos(g);
  6636  0029F4  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6637  0029F8  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6638  0029FC  ECF5  F030         	call	_GameParameters_resetPos	;wreg free
  6639  002A00                     l631:
  6640                           
  6641                           ;stateMachine/gameController.c: 79:             if(LCD_InButton(&(g->btnOnePlayer),g->x,
      +                          g->y))
  6642  002A00  0E20               	movlw	32
  6643  002A02  2437               	addwf	gameControllerController@g^0,w,c
  6644  002A04  6E12               	movwf	LCD_InButton@button^0,c
  6645  002A06  0E00               	movlw	0
  6646  002A08  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6647  002A0A  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6648  002A0C  EE20 F004          	lfsr	2,4
  6649  002A10  5037               	movf	gameControllerController@g^0,w,c
  6650  002A12  26D9               	addwf	fsr2l,f,c
  6651  002A14  5038               	movf	(gameControllerController@g+1)^0,w,c
  6652  002A16  22DA               	addwfc	fsr2h,f,c
  6653  002A18  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6654  002A1C  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6655  002A20  EE20 F006          	lfsr	2,6
  6656  002A24  5037               	movf	gameControllerController@g^0,w,c
  6657  002A26  26D9               	addwf	fsr2l,f,c
  6658  002A28  5038               	movf	(gameControllerController@g+1)^0,w,c
  6659  002A2A  22DA               	addwfc	fsr2h,f,c
  6660  002A2C  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6661  002A30  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6662  002A34  EC50  F026         	call	_LCD_InButton	;wreg free
  6663  002A38  0900               	iorlw	0
  6664  002A3A  B4D8               	btfsc	status,2,c
  6665  002A3C  EF22  F015         	goto	u7231
  6666  002A40  EF24  F015         	goto	u7230
  6667  002A44                     u7231:
  6668  002A44  EF2F  F015         	goto	l632
  6669  002A48                     u7230:
  6670  002A48                     
  6671                           ;stateMachine/gameController.c: 80:             {;stateMachine/gameController.c: 81:    
      +                                       XF_pushEvent(evOnePlayer,0);
  6672  002A48  0E00               	movlw	0
  6673  002A4A  6E18               	movwf	XF_pushEvent@inISR^0,c
  6674  002A4C  0E05               	movlw	5
  6675  002A4E  EC7A  F02E         	call	_XF_pushEvent
  6676                           
  6677                           ;stateMachine/gameController.c: 82:                 GameParameters_resetPos(g);
  6678  002A52  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6679  002A56  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6680  002A5A  ECF5  F030         	call	_GameParameters_resetPos	;wreg free
  6681  002A5E                     l632:
  6682                           
  6683                           ;stateMachine/gameController.c: 84:             if(LCD_InButton(&(g->btnTwoPlayer),g->x,
      +                          g->y))
  6684  002A5E  0E38               	movlw	56
  6685  002A60  2437               	addwf	gameControllerController@g^0,w,c
  6686  002A62  6E12               	movwf	LCD_InButton@button^0,c
  6687  002A64  0E00               	movlw	0
  6688  002A66  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6689  002A68  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6690  002A6A  EE20 F004          	lfsr	2,4
  6691  002A6E  5037               	movf	gameControllerController@g^0,w,c
  6692  002A70  26D9               	addwf	fsr2l,f,c
  6693  002A72  5038               	movf	(gameControllerController@g+1)^0,w,c
  6694  002A74  22DA               	addwfc	fsr2h,f,c
  6695  002A76  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6696  002A7A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6697  002A7E  EE20 F006          	lfsr	2,6
  6698  002A82  5037               	movf	gameControllerController@g^0,w,c
  6699  002A84  26D9               	addwf	fsr2l,f,c
  6700  002A86  5038               	movf	(gameControllerController@g+1)^0,w,c
  6701  002A88  22DA               	addwfc	fsr2h,f,c
  6702  002A8A  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6703  002A8E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6704  002A92  EC50  F026         	call	_LCD_InButton	;wreg free
  6705  002A96  0900               	iorlw	0
  6706  002A98  B4D8               	btfsc	status,2,c
  6707  002A9A  EF51  F015         	goto	u7241
  6708  002A9E  EF53  F015         	goto	u7240
  6709  002AA2                     u7241:
  6710  002AA2  EF83  F016         	goto	l648
  6711  002AA6                     u7240:
  6712  002AA6                     
  6713                           ;stateMachine/gameController.c: 85:             {;stateMachine/gameController.c: 86:    
      +                                       XF_pushEvent(evTwoPlayer,0);
  6714  002AA6  0E00               	movlw	0
  6715  002AA8  6E18               	movwf	XF_pushEvent@inISR^0,c
  6716  002AAA  0E06               	movlw	6
  6717  002AAC  EC7A  F02E         	call	_XF_pushEvent
  6718                           
  6719                           ;stateMachine/gameController.c: 87:                 GameParameters_resetPos(g);
  6720  002AB0  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6721  002AB4  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6722  002AB8  ECF5  F030         	call	_GameParameters_resetPos	;wreg free
  6723  002ABC  EF83  F016         	goto	l648
  6724  002AC0                     l9909:
  6725                           
  6726                           ;stateMachine/gameController.c: 92:             if(LCD_InSlider(&(g->sldParam),g->x,g->y
      +                          ))
  6727  002AC0  0EB0               	movlw	176
  6728  002AC2  2437               	addwf	gameControllerController@g^0,w,c
  6729  002AC4  6E12               	movwf	LCD_InSlider@slider^0,c
  6730  002AC6  0E00               	movlw	0
  6731  002AC8  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6732  002ACA  6E13               	movwf	(LCD_InSlider@slider+1)^0,c
  6733  002ACC  EE20 F004          	lfsr	2,4
  6734  002AD0  5037               	movf	gameControllerController@g^0,w,c
  6735  002AD2  26D9               	addwf	fsr2l,f,c
  6736  002AD4  5038               	movf	(gameControllerController@g+1)^0,w,c
  6737  002AD6  22DA               	addwfc	fsr2h,f,c
  6738  002AD8  CFDE F014          	movff	postinc2,LCD_InSlider@posX
  6739  002ADC  CFDD F015          	movff	postdec2,LCD_InSlider@posX+1
  6740  002AE0  EE20 F006          	lfsr	2,6
  6741  002AE4  5037               	movf	gameControllerController@g^0,w,c
  6742  002AE6  26D9               	addwf	fsr2l,f,c
  6743  002AE8  5038               	movf	(gameControllerController@g+1)^0,w,c
  6744  002AEA  22DA               	addwfc	fsr2h,f,c
  6745  002AEC  CFDE F016          	movff	postinc2,LCD_InSlider@posY
  6746  002AF0  CFDD F017          	movff	postdec2,LCD_InSlider@posY+1
  6747  002AF4  ECBF  F026         	call	_LCD_InSlider	;wreg free
  6748  002AF8  0900               	iorlw	0
  6749  002AFA  B4D8               	btfsc	status,2,c
  6750  002AFC  EF82  F015         	goto	u7251
  6751  002B00  EF84  F015         	goto	u7250
  6752  002B04                     u7251:
  6753  002B04  EF98  F015         	goto	l9915
  6754  002B08                     u7250:
  6755  002B08                     
  6756                           ;stateMachine/gameController.c: 93:             {;stateMachine/gameController.c: 94:    
      +                                       backlightController(g);
  6757  002B08  C037  F018         	movff	gameControllerController@g,backlightController@g
  6758  002B0C  C038  F019         	movff	gameControllerController@g+1,backlightController@g+1
  6759  002B10  EC9C  F00C         	call	_backlightController	;wreg free
  6760                           
  6761                           ;stateMachine/gameController.c: 95:                 LCD_SliderUpdate(&(g->sldParam));
  6762  002B14  0EB0               	movlw	176
  6763  002B16  2437               	addwf	gameControllerController@g^0,w,c
  6764  002B18  6E27               	movwf	LCD_SliderUpdate@slider^0,c
  6765  002B1A  0E00               	movlw	0
  6766  002B1C  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6767  002B1E  6E28               	movwf	(LCD_SliderUpdate@slider+1)^0,c
  6768  002B20  EC31  F00A         	call	_LCD_SliderUpdate	;wreg free
  6769  002B24                     
  6770                           ;stateMachine/gameController.c: 96:                 GameParameters_resetPos(g);
  6771  002B24  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6772  002B28  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6773  002B2C  ECF5  F030         	call	_GameParameters_resetPos	;wreg free
  6774  002B30                     l9915:
  6775                           
  6776                           ;stateMachine/gameController.c: 99:             if(LCD_InButton(&(g->btnLeaveParam),g->x
      +                          ,g->y))
  6777  002B30  0E50               	movlw	80
  6778  002B32  2437               	addwf	gameControllerController@g^0,w,c
  6779  002B34  6E12               	movwf	LCD_InButton@button^0,c
  6780  002B36  0E00               	movlw	0
  6781  002B38  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6782  002B3A  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6783  002B3C  EE20 F004          	lfsr	2,4
  6784  002B40  5037               	movf	gameControllerController@g^0,w,c
  6785  002B42  26D9               	addwf	fsr2l,f,c
  6786  002B44  5038               	movf	(gameControllerController@g+1)^0,w,c
  6787  002B46  22DA               	addwfc	fsr2h,f,c
  6788  002B48  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6789  002B4C  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6790  002B50  EE20 F006          	lfsr	2,6
  6791  002B54  5037               	movf	gameControllerController@g^0,w,c
  6792  002B56  26D9               	addwf	fsr2l,f,c
  6793  002B58  5038               	movf	(gameControllerController@g+1)^0,w,c
  6794  002B5A  22DA               	addwfc	fsr2h,f,c
  6795  002B5C  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6796  002B60  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6797  002B64  EC50  F026         	call	_LCD_InButton	;wreg free
  6798  002B68  0900               	iorlw	0
  6799  002B6A  B4D8               	btfsc	status,2,c
  6800  002B6C  EFBA  F015         	goto	u7261
  6801  002B70  EFBC  F015         	goto	u7260
  6802  002B74                     u7261:
  6803  002B74  EF83  F016         	goto	l648
  6804  002B78                     u7260:
  6805  002B78                     
  6806                           ;stateMachine/gameController.c: 100:             {;stateMachine/gameController.c: 101:  
      +                                         XF_pushEvent(evLeaveParam,0);
  6807  002B78  0E00               	movlw	0
  6808  002B7A  6E18               	movwf	XF_pushEvent@inISR^0,c
  6809  002B7C  0E08               	movlw	8
  6810  002B7E  EC7A  F02E         	call	_XF_pushEvent
  6811                           
  6812                           ;stateMachine/gameController.c: 102:                 GameParameters_resetPos(g);
  6813  002B82  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6814  002B86  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6815  002B8A  ECF5  F030         	call	_GameParameters_resetPos	;wreg free
  6816  002B8E  EF83  F016         	goto	l648
  6817  002B92                     l9919:
  6818                           
  6819                           ;stateMachine/gameController.c: 106:             if (ev==evTimerPos)
  6820  002B92  0E04               	movlw	4
  6821  002B94  1839               	xorwf	gameControllerController@ev^0,w,c
  6822  002B96  A4D8               	btfss	status,2,c
  6823  002B98  EFD0  F015         	goto	u7271
  6824  002B9C  EFD2  F015         	goto	u7270
  6825  002BA0                     u7271:
  6826  002BA0  EFDA  F015         	goto	l9923
  6827  002BA4                     u7270:
  6828  002BA4                     
  6829                           ;stateMachine/gameController.c: 107:             {;stateMachine/gameController.c: 109:  
      +                                         moovePaddle(g);
  6830  002BA4  C037  F01C         	movff	gameControllerController@g,moovePaddle@g
  6831  002BA8  C038  F01D         	movff	gameControllerController@g+1,moovePaddle@g+1
  6832  002BAC  EC5F  F025         	call	_moovePaddle	;wreg free
  6833                           
  6834                           ;stateMachine/gameController.c: 111:             }
  6835  002BB0  EF83  F016         	goto	l648
  6836  002BB4                     l9923:
  6837  002BB4  0E0A               	movlw	10
  6838  002BB6  1839               	xorwf	gameControllerController@ev^0,w,c
  6839  002BB8  A4D8               	btfss	status,2,c
  6840  002BBA  EFE1  F015         	goto	u7281
  6841  002BBE  EFE3  F015         	goto	u7280
  6842  002BC2                     u7281:
  6843  002BC2  EF83  F016         	goto	l648
  6844  002BC6                     u7280:
  6845  002BC6                     
  6846                           ;stateMachine/gameController.c: 113:             {;stateMachine/gameController.c: 115:  
      +                                         mooveBall(g);
  6847  002BC6  C037  F025         	movff	gameControllerController@g,mooveBall@g
  6848  002BCA  C038  F026         	movff	gameControllerController@g+1,mooveBall@g+1
  6849  002BCE  EC1E  F031         	call	_mooveBall	;wreg free
  6850  002BD2                     
  6851                           ;stateMachine/gameController.c: 118:                 if(g->b.x+50>=239)
  6852  002BD2  EE20 F0C9          	lfsr	2,201
  6853  002BD6  5037               	movf	gameControllerController@g^0,w,c
  6854  002BD8  26D9               	addwf	fsr2l,f,c
  6855  002BDA  5038               	movf	(gameControllerController@g+1)^0,w,c
  6856  002BDC  22DA               	addwfc	fsr2h,f,c
  6857  002BDE  CFDE F03A          	movff	postinc2,??_gameControllerController
  6858  002BE2  CFDD F03B          	movff	postdec2,??_gameControllerController+1
  6859  002BE6  0E32               	movlw	50
  6860  002BE8  263A               	addwf	??_gameControllerController^0,f,c
  6861  002BEA  0E00               	movlw	0
  6862  002BEC  223B               	addwfc	(??_gameControllerController+1)^0,f,c
  6863  002BEE  503B               	movf	(??_gameControllerController+1)^0,w,c
  6864  002BF0  E109               	bnz	u7290
  6865  002BF2  0EEF               	movlw	239
  6866  002BF4  5C3A               	subwf	??_gameControllerController^0,w,c
  6867  002BF6  A0D8               	btfss	status,0,c
  6868  002BF8  EF00  F016         	goto	u7291
  6869  002BFC  EF02  F016         	goto	u7290
  6870  002C00                     u7291:
  6871  002C00  EF0E  F016         	goto	l9931
  6872  002C04                     u7290:
  6873  002C04                     
  6874                           ;stateMachine/gameController.c: 119:                 {;stateMachine/gameController.c: 12
      +                          0:                     g->p2.x=239-50;
  6875  002C04  EE20 F0DF          	lfsr	2,223
  6876  002C08  5037               	movf	gameControllerController@g^0,w,c
  6877  002C0A  26D9               	addwf	fsr2l,f,c
  6878  002C0C  5038               	movf	(gameControllerController@g+1)^0,w,c
  6879  002C0E  22DA               	addwfc	fsr2h,f,c
  6880  002C10  0EBD               	movlw	189
  6881  002C12  6EDE               	movwf	postinc2,c
  6882  002C14  0E00               	movlw	0
  6883  002C16  6EDD               	movwf	postdec2,c
  6884                           
  6885                           ;stateMachine/gameController.c: 121:                 }
  6886  002C18  EF1E  F016         	goto	l9933
  6887  002C1C                     l9931:
  6888                           
  6889                           ;stateMachine/gameController.c: 123:                 {;stateMachine/gameController.c: 12
      +                          4:                     g->p2.x=g->b.x;
  6890  002C1C  EE20 F0C9          	lfsr	2,201
  6891  002C20  5037               	movf	gameControllerController@g^0,w,c
  6892  002C22  26D9               	addwf	fsr2l,f,c
  6893  002C24  5038               	movf	(gameControllerController@g+1)^0,w,c
  6894  002C26  22DA               	addwfc	fsr2h,f,c
  6895  002C28  EE10 F0DF          	lfsr	1,223
  6896  002C2C  5037               	movf	gameControllerController@g^0,w,c
  6897  002C2E  26E1               	addwf	fsr1l,f,c
  6898  002C30  5038               	movf	(gameControllerController@g+1)^0,w,c
  6899  002C32  22E2               	addwfc	fsr1h,f,c
  6900  002C34  CFDE FFE6          	movff	postinc2,postinc1
  6901  002C38  CFDD FFE5          	movff	postdec2,postdec1
  6902  002C3C                     l9933:
  6903                           
  6904                           ;stateMachine/gameController.c: 126:                 XF_pushEvent(evRedrawPaddle2,0);
  6905  002C3C  0E00               	movlw	0
  6906  002C3E  6E18               	movwf	XF_pushEvent@inISR^0,c
  6907  002C40  0E0C               	movlw	12
  6908  002C42  EC7A  F02E         	call	_XF_pushEvent
  6909  002C46                     
  6910                           ;stateMachine/gameController.c: 127:                 XF_scheduleTimer(5,evGameUpdate,1);
  6911  002C46  0E00               	movlw	0
  6912  002C48  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  6913  002C4A  0E05               	movlw	5
  6914  002C4C  6E13               	movwf	XF_scheduleTimer@tm^0,c
  6915  002C4E  0E0A               	movlw	10
  6916  002C50  6E15               	movwf	XF_scheduleTimer@ev^0,c
  6917  002C52  0E01               	movlw	1
  6918  002C54  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  6919  002C56  EC06  F02E         	call	_XF_scheduleTimer	;wreg free
  6920  002C5A  EF83  F016         	goto	l648
  6921  002C5E                     l9937:
  6922                           
  6923                           ;stateMachine/gameController.c: 133:             if(LCD_InButton(&(g->btnNewGame),g->x,g
      +                          ->y))
  6924  002C5E  0E80               	movlw	128
  6925  002C60  2437               	addwf	gameControllerController@g^0,w,c
  6926  002C62  6E12               	movwf	LCD_InButton@button^0,c
  6927  002C64  0E00               	movlw	0
  6928  002C66  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6929  002C68  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6930  002C6A  EE20 F004          	lfsr	2,4
  6931  002C6E  5037               	movf	gameControllerController@g^0,w,c
  6932  002C70  26D9               	addwf	fsr2l,f,c
  6933  002C72  5038               	movf	(gameControllerController@g+1)^0,w,c
  6934  002C74  22DA               	addwfc	fsr2h,f,c
  6935  002C76  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6936  002C7A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6937  002C7E  EE20 F006          	lfsr	2,6
  6938  002C82  5037               	movf	gameControllerController@g^0,w,c
  6939  002C84  26D9               	addwf	fsr2l,f,c
  6940  002C86  5038               	movf	(gameControllerController@g+1)^0,w,c
  6941  002C88  22DA               	addwfc	fsr2h,f,c
  6942  002C8A  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6943  002C8E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6944  002C92  EC50  F026         	call	_LCD_InButton	;wreg free
  6945  002C96  0900               	iorlw	0
  6946  002C98  B4D8               	btfsc	status,2,c
  6947  002C9A  EF51  F016         	goto	u7301
  6948  002C9E  EF53  F016         	goto	u7300
  6949  002CA2                     u7301:
  6950  002CA2  EF83  F016         	goto	l648
  6951  002CA6                     u7300:
  6952  002CA6                     
  6953                           ;stateMachine/gameController.c: 134:             {;stateMachine/gameController.c: 136:  
      +                                         GameParameters_init(g);
  6954  002CA6  C037  F02B         	movff	gameControllerController@g,GameParameters_init@s
  6955  002CAA  C038  F02C         	movff	gameControllerController@g+1,GameParameters_init@s+1
  6956  002CAE  EC10  F011         	call	_GameParameters_init	;wreg free
  6957                           
  6958                           ;stateMachine/gameController.c: 137:                 XF_pushEvent(evNewGame,0);
  6959  002CB2  0E00               	movlw	0
  6960  002CB4  6E18               	movwf	XF_pushEvent@inISR^0,c
  6961  002CB6  0E0F               	movlw	15
  6962  002CB8  EC7A  F02E         	call	_XF_pushEvent
  6963  002CBC                     
  6964                           ;stateMachine/gameController.c: 138:                 gameStateMachine=NOGAME;
  6965  002CBC  0E00               	movlw	0
  6966  002CBE  6E4D               	movwf	_gameStateMachine^0,c
  6967  002CC0  EF83  F016         	goto	l648
  6968  002CC4                     l9945:
  6969  002CC4  504D               	movf	_gameStateMachine^0,w,c
  6970  002CC6  6E3A               	movwf	??_gameControllerController^0,c
  6971  002CC8  6A3B               	clrf	(??_gameControllerController+1)^0,c
  6972                           
  6973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6974                           ; Switch size 1, requested type "simple"
  6975                           ; Number of cases is 1, Range of values is 0 to 0
  6976                           ; switch strategies available:
  6977                           ; Name         Instructions Cycles
  6978                           ; simple_byte            4     3 (average)
  6979                           ;	Chosen strategy is simple_byte
  6980  002CCA  503B               	movf	(??_gameControllerController+1)^0,w,c
  6981  002CCC  0A00               	xorlw	0	; case 0
  6982  002CCE  B4D8               	btfsc	status,2,c
  6983  002CD0  EF6C  F016         	goto	l10687
  6984  002CD4  EF83  F016         	goto	l648
  6985  002CD8                     l10687:
  6986                           
  6987                           ; Switch size 1, requested type "simple"
  6988                           ; Number of cases is 5, Range of values is 0 to 4
  6989                           ; switch strategies available:
  6990                           ; Name         Instructions Cycles
  6991                           ; simple_byte           16     9 (average)
  6992                           ;	Chosen strategy is simple_byte
  6993  002CD8  503A               	movf	??_gameControllerController^0,w,c
  6994  002CDA  0A00               	xorlw	0	; case 0
  6995  002CDC  B4D8               	btfsc	status,2,c
  6996  002CDE  EFD1  F014         	goto	l9901
  6997  002CE2  0A01               	xorlw	1	; case 1
  6998  002CE4  B4D8               	btfsc	status,2,c
  6999  002CE6  EF60  F015         	goto	l9909
  7000  002CEA  0A03               	xorlw	3	; case 2
  7001  002CEC  B4D8               	btfsc	status,2,c
  7002  002CEE  EFC9  F015         	goto	l9919
  7003  002CF2  0A01               	xorlw	1	; case 3
  7004  002CF4  B4D8               	btfsc	status,2,c
  7005  002CF6  EF83  F016         	goto	l648
  7006  002CFA  0A07               	xorlw	7	; case 4
  7007  002CFC  B4D8               	btfsc	status,2,c
  7008  002CFE  EF2F  F016         	goto	l9937
  7009  002D02  EF83  F016         	goto	l648
  7010  002D06                     l648:
  7011  002D06  0012               	return		;funcret
  7012  002D08                     __end_of_gameControllerController:
  7013                           	callstack 0
  7014                           
  7015 ;; *************** function _moovePaddle *****************
  7016 ;; Defined at:
  7017 ;;		line 145 in file "stateMachine/gameController.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  g               2   27[COMRAM] PTR struct GameParameter
  7020 ;;		 -> g1(239), 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;		None
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      void 
  7025 ;; Registers used:
  7026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7032 ;;      Params:         2       0       0       0       0       0       0
  7033 ;;      Locals:         0       0       0       0       0       0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0
  7035 ;;      Totals:         2       0       0       0       0       0       0
  7036 ;;Total ram usage:        2 bytes
  7037 ;; Hardware stack levels used: 1
  7038 ;; Hardware stack levels required when called: 6
  7039 ;; This function calls:
  7040 ;;		_GameParameters_resetPos
  7041 ;;		_LCD_InButton
  7042 ;;		_Paddle_addX
  7043 ;;		_XF_pushEvent
  7044 ;; This function is called by:
  7045 ;;		_gameControllerController
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           	psect	text23
  7050  004ABE                     __ptext23:
  7051                           	callstack 0
  7052  004ABE                     _moovePaddle:
  7053                           	callstack 20
  7054  004ABE                     
  7055                           ;stateMachine/gameController.c: 145: void moovePaddle(GameParameters* g);stateMachine/ga
      +                          meController.c: 146: {;stateMachine/gameController.c: 148:     if(LCD_InButton(&(g->btnL
      +                          eft),g->x,g->y))
  7056  004ABE  0E68               	movlw	104
  7057  004AC0  241C               	addwf	moovePaddle@g^0,w,c
  7058  004AC2  6E12               	movwf	LCD_InButton@button^0,c
  7059  004AC4  0E00               	movlw	0
  7060  004AC6  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7061  004AC8  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7062  004ACA  EE20 F004          	lfsr	2,4
  7063  004ACE  501C               	movf	moovePaddle@g^0,w,c
  7064  004AD0  26D9               	addwf	fsr2l,f,c
  7065  004AD2  501D               	movf	(moovePaddle@g+1)^0,w,c
  7066  004AD4  22DA               	addwfc	fsr2h,f,c
  7067  004AD6  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7068  004ADA  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7069  004ADE  EE20 F006          	lfsr	2,6
  7070  004AE2  501C               	movf	moovePaddle@g^0,w,c
  7071  004AE4  26D9               	addwf	fsr2l,f,c
  7072  004AE6  501D               	movf	(moovePaddle@g+1)^0,w,c
  7073  004AE8  22DA               	addwfc	fsr2h,f,c
  7074  004AEA  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7075  004AEE  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7076  004AF2  EC50  F026         	call	_LCD_InButton	;wreg free
  7077  004AF6  0900               	iorlw	0
  7078  004AF8  B4D8               	btfsc	status,2,c
  7079  004AFA  EF81  F025         	goto	u7141
  7080  004AFE  EF83  F025         	goto	u7140
  7081  004B02                     u7141:
  7082  004B02  EF99  F025         	goto	l651
  7083  004B06                     u7140:
  7084  004B06                     
  7085                           ;stateMachine/gameController.c: 149:     {;stateMachine/gameController.c: 150:         G
      +                          ameParameters_resetPos(g);
  7086  004B06  C01C  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  7087  004B0A  C01D  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  7088  004B0E  ECF5  F030         	call	_GameParameters_resetPos	;wreg free
  7089                           
  7090                           ;stateMachine/gameController.c: 151:         Paddle_addX(&g->p1,20,0);
  7091  004B12  0ED5               	movlw	213
  7092  004B14  241C               	addwf	moovePaddle@g^0,w,c
  7093  004B16  6E12               	movwf	Paddle_addX@p^0,c
  7094  004B18  0E00               	movlw	0
  7095  004B1A  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7096  004B1C  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7097  004B1E  0E00               	movlw	0
  7098  004B20  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7099  004B22  0E14               	movlw	20
  7100  004B24  6E14               	movwf	Paddle_addX@value^0,c
  7101  004B26  0E00               	movlw	0
  7102  004B28  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7103  004B2A  0E00               	movlw	0
  7104  004B2C  6E16               	movwf	Paddle_addX@add^0,c
  7105  004B2E  EC9C  F027         	call	_Paddle_addX	;wreg free
  7106  004B32                     l651:
  7107                           
  7108                           ;stateMachine/gameController.c: 154:     if(LCD_InButton(&(g->btnRight),g->x,g->y))
  7109  004B32  0E98               	movlw	152
  7110  004B34  241C               	addwf	moovePaddle@g^0,w,c
  7111  004B36  6E12               	movwf	LCD_InButton@button^0,c
  7112  004B38  0E00               	movlw	0
  7113  004B3A  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7114  004B3C  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7115  004B3E  EE20 F004          	lfsr	2,4
  7116  004B42  501C               	movf	moovePaddle@g^0,w,c
  7117  004B44  26D9               	addwf	fsr2l,f,c
  7118  004B46  501D               	movf	(moovePaddle@g+1)^0,w,c
  7119  004B48  22DA               	addwfc	fsr2h,f,c
  7120  004B4A  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7121  004B4E  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7122  004B52  EE20 F006          	lfsr	2,6
  7123  004B56  501C               	movf	moovePaddle@g^0,w,c
  7124  004B58  26D9               	addwf	fsr2l,f,c
  7125  004B5A  501D               	movf	(moovePaddle@g+1)^0,w,c
  7126  004B5C  22DA               	addwfc	fsr2h,f,c
  7127  004B5E  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7128  004B62  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7129  004B66  EC50  F026         	call	_LCD_InButton	;wreg free
  7130  004B6A  0900               	iorlw	0
  7131  004B6C  B4D8               	btfsc	status,2,c
  7132  004B6E  EFBB  F025         	goto	u7151
  7133  004B72  EFBD  F025         	goto	u7150
  7134  004B76                     u7151:
  7135  004B76  EFD3  F025         	goto	l652
  7136  004B7A                     u7150:
  7137  004B7A                     
  7138                           ;stateMachine/gameController.c: 155:     {;stateMachine/gameController.c: 156:         G
      +                          ameParameters_resetPos(g);
  7139  004B7A  C01C  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  7140  004B7E  C01D  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  7141  004B82  ECF5  F030         	call	_GameParameters_resetPos	;wreg free
  7142                           
  7143                           ;stateMachine/gameController.c: 157:         Paddle_addX(&g->p1,20,1);
  7144  004B86  0ED5               	movlw	213
  7145  004B88  241C               	addwf	moovePaddle@g^0,w,c
  7146  004B8A  6E12               	movwf	Paddle_addX@p^0,c
  7147  004B8C  0E00               	movlw	0
  7148  004B8E  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7149  004B90  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7150  004B92  0E00               	movlw	0
  7151  004B94  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7152  004B96  0E14               	movlw	20
  7153  004B98  6E14               	movwf	Paddle_addX@value^0,c
  7154  004B9A  0E00               	movlw	0
  7155  004B9C  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7156  004B9E  0E01               	movlw	1
  7157  004BA0  6E16               	movwf	Paddle_addX@add^0,c
  7158  004BA2  EC9C  F027         	call	_Paddle_addX	;wreg free
  7159  004BA6                     l652:
  7160                           
  7161                           ;stateMachine/gameController.c: 159:     XF_pushEvent(evRedrawPaddle1,0);
  7162  004BA6  0E00               	movlw	0
  7163  004BA8  6E18               	movwf	XF_pushEvent@inISR^0,c
  7164  004BAA  0E0B               	movlw	11
  7165  004BAC  EC7A  F02E         	call	_XF_pushEvent
  7166  004BB0  0012               	return		;funcret
  7167  004BB2                     __end_of_moovePaddle:
  7168                           	callstack 0
  7169                           
  7170 ;; *************** function _Paddle_addX *****************
  7171 ;; Defined at:
  7172 ;;		line 28 in file "class/paddle.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  p               2   17[COMRAM] PTR struct Paddle
  7175 ;;		 -> g1(239), 
  7176 ;;  value           2   19[COMRAM] unsigned short 
  7177 ;;  add             2   21[COMRAM] unsigned short 
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;		None
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      void 
  7182 ;; Registers used:
  7183 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7189 ;;      Params:         6       0       0       0       0       0       0
  7190 ;;      Locals:         0       0       0       0       0       0       0
  7191 ;;      Temps:          2       0       0       0       0       0       0
  7192 ;;      Totals:         8       0       0       0       0       0       0
  7193 ;;Total ram usage:        8 bytes
  7194 ;; Hardware stack levels used: 1
  7195 ;; Hardware stack levels required when called: 4
  7196 ;; This function calls:
  7197 ;;		Nothing
  7198 ;; This function is called by:
  7199 ;;		_moovePaddle
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text24
  7204  004F38                     __ptext24:
  7205                           	callstack 0
  7206  004F38                     _Paddle_addX:
  7207                           	callstack 21
  7208  004F38                     
  7209                           ;class/paddle.c: 28: void Paddle_addX(struct Paddle* p,uint16_t value,uint16_t add);clas
      +                          s/paddle.c: 29: {;class/paddle.c: 30:     if(add==1)
  7210  004F38  0416               	decf	Paddle_addX@add^0,w,c
  7211  004F3A  1017               	iorwf	(Paddle_addX@add+1)^0,w,c
  7212  004F3C  A4D8               	btfss	status,2,c
  7213  004F3E  EFA3  F027         	goto	u6511
  7214  004F42  EFA5  F027         	goto	u6510
  7215  004F46                     u6511:
  7216  004F46  EFDA  F027         	goto	l9303
  7217  004F4A                     u6510:
  7218  004F4A                     
  7219                           ;class/paddle.c: 31:     {;class/paddle.c: 32:         p->x=(p->x)+value;
  7220  004F4A  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7221  004F4E  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7222  004F52  CFDE F018          	movff	postinc2,??_Paddle_addX
  7223  004F56  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7224  004F5A  5014               	movf	Paddle_addX@value^0,w,c
  7225  004F5C  2618               	addwf	??_Paddle_addX^0,f,c
  7226  004F5E  5015               	movf	(Paddle_addX@value+1)^0,w,c
  7227  004F60  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  7228  004F62  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7229  004F66  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7230  004F6A  C018  FFDE         	movff	??_Paddle_addX,postinc2
  7231  004F6E  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  7232                           
  7233                           ;class/paddle.c: 33:         if((p->x+50)>239)
  7234  004F72  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7235  004F76  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7236  004F7A  CFDE F018          	movff	postinc2,??_Paddle_addX
  7237  004F7E  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7238  004F82  0E32               	movlw	50
  7239  004F84  2618               	addwf	??_Paddle_addX^0,f,c
  7240  004F86  0E00               	movlw	0
  7241  004F88  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  7242  004F8A  5019               	movf	(??_Paddle_addX+1)^0,w,c
  7243  004F8C  E109               	bnz	u6520
  7244  004F8E  0EF0               	movlw	240
  7245  004F90  5C18               	subwf	??_Paddle_addX^0,w,c
  7246  004F92  A0D8               	btfss	status,0,c
  7247  004F94  EFCE  F027         	goto	u6521
  7248  004F98  EFD0  F027         	goto	u6520
  7249  004F9C                     u6521:
  7250  004F9C  EF08  F028         	goto	l26
  7251  004FA0                     u6520:
  7252  004FA0                     
  7253                           ;class/paddle.c: 34:         {;class/paddle.c: 35:             p->x=239-(50);
  7254  004FA0  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7255  004FA4  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7256  004FA8  0EBD               	movlw	189
  7257  004FAA  6EDE               	movwf	postinc2,c
  7258  004FAC  0E00               	movlw	0
  7259  004FAE  6EDD               	movwf	postdec2,c
  7260  004FB0  EF08  F028         	goto	l26
  7261  004FB4                     l9303:
  7262                           
  7263                           ;class/paddle.c: 39:     {;class/paddle.c: 40:         if((p->x)<21)
  7264  004FB4  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7265  004FB8  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7266  004FBC  0E01               	movlw	1
  7267  004FBE  50DB               	movf	plusw2,w,c
  7268  004FC0  E107               	bnz	u6531
  7269  004FC2  0E15               	movlw	21
  7270  004FC4  5CDE               	subwf	postinc2,w,c
  7271  004FC6  B0D8               	btfsc	status,0,c
  7272  004FC8  EFE8  F027         	goto	u6531
  7273  004FCC  EFEA  F027         	goto	u6530
  7274  004FD0                     u6531:
  7275  004FD0  EFF4  F027         	goto	l9307
  7276  004FD4                     u6530:
  7277  004FD4                     
  7278                           ;class/paddle.c: 41:         {;class/paddle.c: 42:             p->x=0;
  7279  004FD4  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7280  004FD8  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7281  004FDC  0E00               	movlw	0
  7282  004FDE  6EDE               	movwf	postinc2,c
  7283  004FE0  0E00               	movlw	0
  7284  004FE2  6EDD               	movwf	postdec2,c
  7285                           
  7286                           ;class/paddle.c: 43:         }
  7287  004FE4  EF08  F028         	goto	l26
  7288  004FE8                     l9307:
  7289                           
  7290                           ;class/paddle.c: 45:         {;class/paddle.c: 46:             p->x=(p->x)-value;
  7291  004FE8  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7292  004FEC  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7293  004FF0  CFDE F018          	movff	postinc2,??_Paddle_addX
  7294  004FF4  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7295  004FF8  5014               	movf	Paddle_addX@value^0,w,c
  7296  004FFA  5E18               	subwf	??_Paddle_addX^0,f,c
  7297  004FFC  5015               	movf	(Paddle_addX@value+1)^0,w,c
  7298  004FFE  5A19               	subwfb	(??_Paddle_addX+1)^0,f,c
  7299  005000  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7300  005004  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7301  005008  C018  FFDE         	movff	??_Paddle_addX,postinc2
  7302  00500C  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  7303  005010                     l26:
  7304  005010  0012               	return		;funcret
  7305  005012                     __end_of_Paddle_addX:
  7306                           	callstack 0
  7307                           
  7308 ;; *************** function _LCD_InButton *****************
  7309 ;; Defined at:
  7310 ;;		line 514 in file "libraries/lcd_highlevel.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;  button          2   17[COMRAM] PTR struct .
  7313 ;;		 -> g1(239), 
  7314 ;;  posX            2   19[COMRAM] unsigned short 
  7315 ;;  posY            2   21[COMRAM] unsigned short 
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;		None
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  1    wreg      unsigned char 
  7320 ;; Registers used:
  7321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7327 ;;      Params:         6       0       0       0       0       0       0
  7328 ;;      Locals:         0       0       0       0       0       0       0
  7329 ;;      Temps:          4       0       0       0       0       0       0
  7330 ;;      Totals:        10       0       0       0       0       0       0
  7331 ;;Total ram usage:       10 bytes
  7332 ;; Hardware stack levels used: 1
  7333 ;; Hardware stack levels required when called: 4
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_gameControllerController
  7338 ;;		_moovePaddle
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text25
  7343  004CA0                     __ptext25:
  7344                           	callstack 0
  7345  004CA0                     _LCD_InButton:
  7346                           	callstack 21
  7347  004CA0                     
  7348                           ;libraries/lcd_highlevel.c: 514: uint8_t LCD_InButton(btn_t * button, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 515: {;libraries/lcd_highlevel.c: 517:   if(posX 
      +                          < button->posX)
  7349  004CA0  C012  FFD9         	movff	LCD_InButton@button,fsr2l
  7350  004CA4  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
  7351  004CA8  50DE               	movf	postinc2,w,c
  7352  004CAA  5C14               	subwf	LCD_InButton@posX^0,w,c
  7353  004CAC  50DE               	movf	postinc2,w,c
  7354  004CAE  5815               	subwfb	(LCD_InButton@posX+1)^0,w,c
  7355  004CB0  B0D8               	btfsc	status,0,c
  7356  004CB2  EF5D  F026         	goto	u6611
  7357  004CB6  EF5F  F026         	goto	u6610
  7358  004CBA                     u6611:
  7359  004CBA  EF62  F026         	goto	l9527
  7360  004CBE                     u6610:
  7361  004CBE                     l9523:
  7362                           
  7363                           ;libraries/lcd_highlevel.c: 518:   {;libraries/lcd_highlevel.c: 519:     return 0;
  7364  004CBE  0E00               	movlw	0
  7365  004CC0  EFBE  F026         	goto	l264
  7366  004CC4                     l9527:
  7367                           
  7368                           ;libraries/lcd_highlevel.c: 522:   if(posX > (button->posX + button->width))
  7369  004CC4  EE20 F004          	lfsr	2,4
  7370  004CC8  5012               	movf	LCD_InButton@button^0,w,c
  7371  004CCA  26D9               	addwf	fsr2l,f,c
  7372  004CCC  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7373  004CCE  22DA               	addwfc	fsr2h,f,c
  7374  004CD0  CFDE F018          	movff	postinc2,??_LCD_InButton
  7375  004CD4  CFDD F019          	movff	postdec2,??_LCD_InButton+1
  7376  004CD8  C012  FFD9         	movff	LCD_InButton@button,fsr2l
  7377  004CDC  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
  7378  004CE0  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
  7379  004CE4  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
  7380  004CE8  5018               	movf	??_LCD_InButton^0,w,c
  7381  004CEA  261A               	addwf	(??_LCD_InButton+2)^0,f,c
  7382  004CEC  5019               	movf	(??_LCD_InButton+1)^0,w,c
  7383  004CEE  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
  7384  004CF0  5014               	movf	LCD_InButton@posX^0,w,c
  7385  004CF2  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
  7386  004CF4  5015               	movf	(LCD_InButton@posX+1)^0,w,c
  7387  004CF6  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
  7388  004CF8  B0D8               	btfsc	status,0,c
  7389  004CFA  EF81  F026         	goto	u6621
  7390  004CFE  EF83  F026         	goto	u6620
  7391  004D02                     u6621:
  7392  004D02  EF85  F026         	goto	l9533
  7393  004D06                     u6620:
  7394  004D06  EF5F  F026         	goto	l9523
  7395  004D0A                     l9533:
  7396                           
  7397                           ;libraries/lcd_highlevel.c: 527:   if(posY < button->posY)
  7398  004D0A  EE20 F002          	lfsr	2,2
  7399  004D0E  5012               	movf	LCD_InButton@button^0,w,c
  7400  004D10  26D9               	addwf	fsr2l,f,c
  7401  004D12  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7402  004D14  22DA               	addwfc	fsr2h,f,c
  7403  004D16  50DE               	movf	postinc2,w,c
  7404  004D18  5C16               	subwf	LCD_InButton@posY^0,w,c
  7405  004D1A  50DE               	movf	postinc2,w,c
  7406  004D1C  5817               	subwfb	(LCD_InButton@posY+1)^0,w,c
  7407  004D1E  B0D8               	btfsc	status,0,c
  7408  004D20  EF94  F026         	goto	u6631
  7409  004D24  EF96  F026         	goto	u6630
  7410  004D28                     u6631:
  7411  004D28  EF98  F026         	goto	l9539
  7412  004D2C                     u6630:
  7413  004D2C  EF5F  F026         	goto	l9523
  7414  004D30                     l9539:
  7415                           
  7416                           ;libraries/lcd_highlevel.c: 532:   if(posY > (button->posY + button->height))
  7417  004D30  EE20 F006          	lfsr	2,6
  7418  004D34  5012               	movf	LCD_InButton@button^0,w,c
  7419  004D36  26D9               	addwf	fsr2l,f,c
  7420  004D38  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7421  004D3A  22DA               	addwfc	fsr2h,f,c
  7422  004D3C  CFDE F018          	movff	postinc2,??_LCD_InButton
  7423  004D40  CFDD F019          	movff	postdec2,??_LCD_InButton+1
  7424  004D44  EE20 F002          	lfsr	2,2
  7425  004D48  5012               	movf	LCD_InButton@button^0,w,c
  7426  004D4A  26D9               	addwf	fsr2l,f,c
  7427  004D4C  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7428  004D4E  22DA               	addwfc	fsr2h,f,c
  7429  004D50  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
  7430  004D54  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
  7431  004D58  5018               	movf	??_LCD_InButton^0,w,c
  7432  004D5A  261A               	addwf	(??_LCD_InButton+2)^0,f,c
  7433  004D5C  5019               	movf	(??_LCD_InButton+1)^0,w,c
  7434  004D5E  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
  7435  004D60  5016               	movf	LCD_InButton@posY^0,w,c
  7436  004D62  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
  7437  004D64  5017               	movf	(LCD_InButton@posY+1)^0,w,c
  7438  004D66  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
  7439  004D68  B0D8               	btfsc	status,0,c
  7440  004D6A  EFB9  F026         	goto	u6641
  7441  004D6E  EFBB  F026         	goto	u6640
  7442  004D72                     u6641:
  7443  004D72  EFBD  F026         	goto	l9545
  7444  004D76                     u6640:
  7445  004D76  EF5F  F026         	goto	l9523
  7446  004D7A                     l9545:
  7447                           
  7448                           ;libraries/lcd_highlevel.c: 536:   return 1;
  7449  004D7A  0E01               	movlw	1
  7450  004D7C                     l264:
  7451  004D7C  0012               	return		;funcret
  7452  004D7E                     __end_of_LCD_InButton:
  7453                           	callstack 0
  7454                           
  7455 ;; *************** function _GameParameters_resetPos *****************
  7456 ;; Defined at:
  7457 ;;		line 39 in file "class/gameParameters.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  s               2   17[COMRAM] PTR struct GameParameter
  7460 ;;		 -> g1(239), 
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;		None
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  1    wreg      void 
  7465 ;; Registers used:
  7466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7472 ;;      Params:         2       0       0       0       0       0       0
  7473 ;;      Locals:         0       0       0       0       0       0       0
  7474 ;;      Temps:          0       0       0       0       0       0       0
  7475 ;;      Totals:         2       0       0       0       0       0       0
  7476 ;;Total ram usage:        2 bytes
  7477 ;; Hardware stack levels used: 1
  7478 ;; Hardware stack levels required when called: 4
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_gameControllerController
  7483 ;;		_moovePaddle
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text26
  7488  0061EA                     __ptext26:
  7489                           	callstack 0
  7490  0061EA                     _GameParameters_resetPos:
  7491                           	callstack 21
  7492  0061EA                     
  7493                           ;class/gameParameters.c: 39: void GameParameters_resetPos(struct GameParameters* s);clas
      +                          s/gameParameters.c: 40: {;class/gameParameters.c: 41:     s->x=0;
  7494  0061EA  EE20 F004          	lfsr	2,4
  7495  0061EE  5012               	movf	GameParameters_resetPos@s^0,w,c
  7496  0061F0  26D9               	addwf	fsr2l,f,c
  7497  0061F2  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  7498  0061F4  22DA               	addwfc	fsr2h,f,c
  7499  0061F6  0E00               	movlw	0
  7500  0061F8  6EDE               	movwf	postinc2,c
  7501  0061FA  0E00               	movlw	0
  7502  0061FC  6EDD               	movwf	postdec2,c
  7503                           
  7504                           ;class/gameParameters.c: 42:     s->y=0;
  7505  0061FE  EE20 F006          	lfsr	2,6
  7506  006202  5012               	movf	GameParameters_resetPos@s^0,w,c
  7507  006204  26D9               	addwf	fsr2l,f,c
  7508  006206  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  7509  006208  22DA               	addwfc	fsr2h,f,c
  7510  00620A  0E00               	movlw	0
  7511  00620C  6EDE               	movwf	postinc2,c
  7512  00620E  0E00               	movlw	0
  7513  006210  6EDD               	movwf	postdec2,c
  7514  006212  0012               	return		;funcret
  7515  006214                     __end_of_GameParameters_resetPos:
  7516                           	callstack 0
  7517                           
  7518 ;; *************** function _mooveBall *****************
  7519 ;; Defined at:
  7520 ;;		line 161 in file "stateMachine/gameController.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;  g               2   36[COMRAM] PTR struct GameParameter
  7523 ;;		 -> g1(239), 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;		None
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7535 ;;      Params:         2       0       0       0       0       0       0
  7536 ;;      Locals:         0       0       0       0       0       0       0
  7537 ;;      Temps:          0       0       0       0       0       0       0
  7538 ;;      Totals:         2       0       0       0       0       0       0
  7539 ;;Total ram usage:        2 bytes
  7540 ;; Hardware stack levels used: 1
  7541 ;; Hardware stack levels required when called: 7
  7542 ;; This function calls:
  7543 ;;		_Ball_Update
  7544 ;;		_XF_pushEvent
  7545 ;;		_checkCollision
  7546 ;; This function is called by:
  7547 ;;		_gameControllerController
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           	psect	text27
  7552  00623C                     __ptext27:
  7553                           	callstack 0
  7554  00623C                     _mooveBall:
  7555                           	callstack 19
  7556  00623C                     
  7557                           ;stateMachine/gameController.c: 161: void mooveBall(GameParameters* g);stateMachine/game
      +                          Controller.c: 162: {;stateMachine/gameController.c: 163:     checkCollision(g);
  7558  00623C  C025  F01B         	movff	mooveBall@g,checkCollision@g
  7559  006240  C026  F01C         	movff	mooveBall@g+1,checkCollision@g+1
  7560  006244  EC5A  F000         	call	_checkCollision	;wreg free
  7561                           
  7562                           ;stateMachine/gameController.c: 164:     Ball_Update(&g->b);
  7563  006248  0EC9               	movlw	201
  7564  00624A  2425               	addwf	mooveBall@g^0,w,c
  7565  00624C  6E12               	movwf	Ball_Update@b^0,c
  7566  00624E  0E00               	movlw	0
  7567  006250  2026               	addwfc	(mooveBall@g+1)^0,w,c
  7568  006252  6E13               	movwf	(Ball_Update@b+1)^0,c
  7569  006254  EC0D  F02D         	call	_Ball_Update	;wreg free
  7570                           
  7571                           ;stateMachine/gameController.c: 165:     XF_pushEvent(evRedrawBall,0);
  7572  006258  0E00               	movlw	0
  7573  00625A  6E18               	movwf	XF_pushEvent@inISR^0,c
  7574  00625C  0E0D               	movlw	13
  7575  00625E  EC7A  F02E         	call	_XF_pushEvent
  7576  006262  0012               	return		;funcret
  7577  006264                     __end_of_mooveBall:
  7578                           	callstack 0
  7579                           
  7580 ;; *************** function _checkCollision *****************
  7581 ;; Defined at:
  7582 ;;		line 167 in file "stateMachine/gameController.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  g               2   26[COMRAM] PTR struct GameParameter
  7585 ;;		 -> g1(239), 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;  s              20    0        unsigned char [20]
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  1    wreg      void 
  7590 ;; Registers used:
  7591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7597 ;;      Params:         2       0       0       0       0       0       0
  7598 ;;      Locals:         0       0       0       0       0       0       0
  7599 ;;      Temps:          8       0       0       0       0       0       0
  7600 ;;      Totals:        10       0       0       0       0       0       0
  7601 ;;Total ram usage:       10 bytes
  7602 ;; Hardware stack levels used: 1
  7603 ;; Hardware stack levels required when called: 6
  7604 ;; This function calls:
  7605 ;;		_XF_pushEvent
  7606 ;; This function is called by:
  7607 ;;		_mooveBall
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           	psect	text28
  7612  0000B4                     __ptext28:
  7613                           	callstack 0
  7614  0000B4                     _checkCollision:
  7615                           	callstack 19
  7616  0000B4                     
  7617                           ;stateMachine/gameController.c: 167: void checkCollision(GameParameters* g);stateMachine
      +                          /gameController.c: 168: {;stateMachine/gameController.c: 169:     char s[20];;stateMachi
      +                          ne/gameController.c: 171:     if(g->b.x+g->b.dx+8>=239)
  7618  0000B4  EE20 F0D1          	lfsr	2,209
  7619  0000B8  501B               	movf	checkCollision@g^0,w,c
  7620  0000BA  26D9               	addwf	fsr2l,f,c
  7621  0000BC  501C               	movf	(checkCollision@g+1)^0,w,c
  7622  0000BE  22DA               	addwfc	fsr2h,f,c
  7623  0000C0  CFDE F01D          	movff	postinc2,??_checkCollision
  7624  0000C4  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7625  0000C8  EE20 F0C9          	lfsr	2,201
  7626  0000CC  501B               	movf	checkCollision@g^0,w,c
  7627  0000CE  26D9               	addwf	fsr2l,f,c
  7628  0000D0  501C               	movf	(checkCollision@g+1)^0,w,c
  7629  0000D2  22DA               	addwfc	fsr2h,f,c
  7630  0000D4  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7631  0000D8  CFDD F020          	movff	postdec2,??_checkCollision+3
  7632  0000DC  501D               	movf	??_checkCollision^0,w,c
  7633  0000DE  261F               	addwf	(??_checkCollision+2)^0,f,c
  7634  0000E0  501E               	movf	(??_checkCollision+1)^0,w,c
  7635  0000E2  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7636  0000E4  0E08               	movlw	8
  7637  0000E6  261F               	addwf	(??_checkCollision+2)^0,f,c
  7638  0000E8  0E00               	movlw	0
  7639  0000EA  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7640  0000EC  5020               	movf	(??_checkCollision+3)^0,w,c
  7641  0000EE  E109               	bnz	u6650
  7642  0000F0  0EEF               	movlw	239
  7643  0000F2  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7644  0000F4  A0D8               	btfss	status,0,c
  7645  0000F6  EF7F  F000         	goto	u6651
  7646  0000FA  EF81  F000         	goto	u6650
  7647  0000FE                     u6651:
  7648  0000FE  EF99  F000         	goto	l659
  7649  000102                     u6650:
  7650  000102                     
  7651                           ;stateMachine/gameController.c: 172:     {;stateMachine/gameController.c: 173:         g
      +                          ->b.dx=-g->b.dx;
  7652  000102  EE20 F0D1          	lfsr	2,209
  7653  000106  501B               	movf	checkCollision@g^0,w,c
  7654  000108  26D9               	addwf	fsr2l,f,c
  7655  00010A  501C               	movf	(checkCollision@g+1)^0,w,c
  7656  00010C  22DA               	addwfc	fsr2h,f,c
  7657  00010E  CFDE F01D          	movff	postinc2,??_checkCollision
  7658  000112  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7659  000116  1E1D               	comf	??_checkCollision^0,f,c
  7660  000118  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7661  00011A  4A1D               	infsnz	??_checkCollision^0,f,c
  7662  00011C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7663  00011E  EE20 F0D1          	lfsr	2,209
  7664  000122  501B               	movf	checkCollision@g^0,w,c
  7665  000124  26D9               	addwf	fsr2l,f,c
  7666  000126  501C               	movf	(checkCollision@g+1)^0,w,c
  7667  000128  22DA               	addwfc	fsr2h,f,c
  7668  00012A  C01D  FFDE         	movff	??_checkCollision,postinc2
  7669  00012E  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7670  000132                     l659:
  7671                           
  7672                           ;stateMachine/gameController.c: 175:     if(g->b.x+g->b.dx-8<=3)
  7673  000132  0EF8               	movlw	248
  7674  000134  6E1D               	movwf	??_checkCollision^0,c
  7675  000136  0EFF               	movlw	255
  7676  000138  6E1E               	movwf	(??_checkCollision+1)^0,c
  7677  00013A  EE20 F0D1          	lfsr	2,209
  7678  00013E  501B               	movf	checkCollision@g^0,w,c
  7679  000140  26D9               	addwf	fsr2l,f,c
  7680  000142  501C               	movf	(checkCollision@g+1)^0,w,c
  7681  000144  22DA               	addwfc	fsr2h,f,c
  7682  000146  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7683  00014A  CFDD F020          	movff	postdec2,??_checkCollision+3
  7684  00014E  EE20 F0C9          	lfsr	2,201
  7685  000152  501B               	movf	checkCollision@g^0,w,c
  7686  000154  26D9               	addwf	fsr2l,f,c
  7687  000156  501C               	movf	(checkCollision@g+1)^0,w,c
  7688  000158  22DA               	addwfc	fsr2h,f,c
  7689  00015A  CFDE F021          	movff	postinc2,??_checkCollision+4
  7690  00015E  CFDD F022          	movff	postdec2,??_checkCollision+5
  7691  000162  501F               	movf	(??_checkCollision+2)^0,w,c
  7692  000164  2621               	addwf	(??_checkCollision+4)^0,f,c
  7693  000166  5020               	movf	(??_checkCollision+3)^0,w,c
  7694  000168  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7695  00016A  501D               	movf	??_checkCollision^0,w,c
  7696  00016C  2621               	addwf	(??_checkCollision+4)^0,f,c
  7697  00016E  501E               	movf	(??_checkCollision+1)^0,w,c
  7698  000170  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7699  000172  5022               	movf	(??_checkCollision+5)^0,w,c
  7700  000174  E107               	bnz	u6661
  7701  000176  0E04               	movlw	4
  7702  000178  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7703  00017A  B0D8               	btfsc	status,0,c
  7704  00017C  EFC2  F000         	goto	u6661
  7705  000180  EFC4  F000         	goto	u6660
  7706  000184                     u6661:
  7707  000184  EFDC  F000         	goto	l660
  7708  000188                     u6660:
  7709  000188                     
  7710                           ;stateMachine/gameController.c: 176:     {;stateMachine/gameController.c: 177:         g
      +                          ->b.dx=-g->b.dx;
  7711  000188  EE20 F0D1          	lfsr	2,209
  7712  00018C  501B               	movf	checkCollision@g^0,w,c
  7713  00018E  26D9               	addwf	fsr2l,f,c
  7714  000190  501C               	movf	(checkCollision@g+1)^0,w,c
  7715  000192  22DA               	addwfc	fsr2h,f,c
  7716  000194  CFDE F01D          	movff	postinc2,??_checkCollision
  7717  000198  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7718  00019C  1E1D               	comf	??_checkCollision^0,f,c
  7719  00019E  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7720  0001A0  4A1D               	infsnz	??_checkCollision^0,f,c
  7721  0001A2  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7722  0001A4  EE20 F0D1          	lfsr	2,209
  7723  0001A8  501B               	movf	checkCollision@g^0,w,c
  7724  0001AA  26D9               	addwf	fsr2l,f,c
  7725  0001AC  501C               	movf	(checkCollision@g+1)^0,w,c
  7726  0001AE  22DA               	addwfc	fsr2h,f,c
  7727  0001B0  C01D  FFDE         	movff	??_checkCollision,postinc2
  7728  0001B4  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7729  0001B8                     l660:
  7730                           
  7731                           ;stateMachine/gameController.c: 180:     if(g->b.y+8>=g->p1.y-1)
  7732  0001B8  0EFF               	movlw	255
  7733  0001BA  6E1D               	movwf	??_checkCollision^0,c
  7734  0001BC  0EFF               	movlw	255
  7735  0001BE  6E1E               	movwf	(??_checkCollision+1)^0,c
  7736  0001C0  EE20 F0D7          	lfsr	2,215
  7737  0001C4  501B               	movf	checkCollision@g^0,w,c
  7738  0001C6  26D9               	addwf	fsr2l,f,c
  7739  0001C8  501C               	movf	(checkCollision@g+1)^0,w,c
  7740  0001CA  22DA               	addwfc	fsr2h,f,c
  7741  0001CC  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7742  0001D0  CFDD F020          	movff	postdec2,??_checkCollision+3
  7743  0001D4  501D               	movf	??_checkCollision^0,w,c
  7744  0001D6  261F               	addwf	(??_checkCollision+2)^0,f,c
  7745  0001D8  501E               	movf	(??_checkCollision+1)^0,w,c
  7746  0001DA  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7747  0001DC  EE20 F0CB          	lfsr	2,203
  7748  0001E0  501B               	movf	checkCollision@g^0,w,c
  7749  0001E2  26D9               	addwf	fsr2l,f,c
  7750  0001E4  501C               	movf	(checkCollision@g+1)^0,w,c
  7751  0001E6  22DA               	addwfc	fsr2h,f,c
  7752  0001E8  CFDE F021          	movff	postinc2,??_checkCollision+4
  7753  0001EC  CFDD F022          	movff	postdec2,??_checkCollision+5
  7754  0001F0  0E08               	movlw	8
  7755  0001F2  2621               	addwf	(??_checkCollision+4)^0,f,c
  7756  0001F4  0E00               	movlw	0
  7757  0001F6  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7758  0001F8  501F               	movf	(??_checkCollision+2)^0,w,c
  7759  0001FA  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7760  0001FC  5020               	movf	(??_checkCollision+3)^0,w,c
  7761  0001FE  5822               	subwfb	(??_checkCollision+5)^0,w,c
  7762  000200  A0D8               	btfss	status,0,c
  7763  000202  EF05  F001         	goto	u6671
  7764  000206  EF07  F001         	goto	u6670
  7765  00020A                     u6671:
  7766  00020A  EF91  F002         	goto	l9579
  7767  00020E                     u6670:
  7768  00020E                     
  7769                           ;stateMachine/gameController.c: 181:     {;stateMachine/gameController.c: 182:         i
      +                          f(g->b.x+8>g->p1.x)
  7770  00020E  EE20 F0C9          	lfsr	2,201
  7771  000212  501B               	movf	checkCollision@g^0,w,c
  7772  000214  26D9               	addwf	fsr2l,f,c
  7773  000216  501C               	movf	(checkCollision@g+1)^0,w,c
  7774  000218  22DA               	addwfc	fsr2h,f,c
  7775  00021A  CFDE F01D          	movff	postinc2,??_checkCollision
  7776  00021E  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7777  000222  0E08               	movlw	8
  7778  000224  261D               	addwf	??_checkCollision^0,f,c
  7779  000226  0E00               	movlw	0
  7780  000228  221E               	addwfc	(??_checkCollision+1)^0,f,c
  7781  00022A  EE20 F0D5          	lfsr	2,213
  7782  00022E  501B               	movf	checkCollision@g^0,w,c
  7783  000230  26D9               	addwf	fsr2l,f,c
  7784  000232  501C               	movf	(checkCollision@g+1)^0,w,c
  7785  000234  22DA               	addwfc	fsr2h,f,c
  7786  000236  501D               	movf	??_checkCollision^0,w,c
  7787  000238  5CDE               	subwf	postinc2,w,c
  7788  00023A  501E               	movf	(??_checkCollision+1)^0,w,c
  7789  00023C  58DE               	subwfb	postinc2,w,c
  7790  00023E  B0D8               	btfsc	status,0,c
  7791  000240  EF24  F001         	goto	u6681
  7792  000244  EF26  F001         	goto	u6680
  7793  000248                     u6681:
  7794  000248  EF91  F002         	goto	l9579
  7795  00024C                     u6680:
  7796  00024C                     
  7797                           ;stateMachine/gameController.c: 183:         {;stateMachine/gameController.c: 184:      
      +                                 if(g->b.x-8<g->p1.x+50)
  7798  00024C  EE20 F0D5          	lfsr	2,213
  7799  000250  501B               	movf	checkCollision@g^0,w,c
  7800  000252  26D9               	addwf	fsr2l,f,c
  7801  000254  501C               	movf	(checkCollision@g+1)^0,w,c
  7802  000256  22DA               	addwfc	fsr2h,f,c
  7803  000258  CFDE F01D          	movff	postinc2,??_checkCollision
  7804  00025C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7805  000260  0E32               	movlw	50
  7806  000262  261D               	addwf	??_checkCollision^0,f,c
  7807  000264  0E00               	movlw	0
  7808  000266  221E               	addwfc	(??_checkCollision+1)^0,f,c
  7809  000268  0EF8               	movlw	248
  7810  00026A  6E1F               	movwf	(??_checkCollision+2)^0,c
  7811  00026C  0EFF               	movlw	255
  7812  00026E  6E20               	movwf	(??_checkCollision+3)^0,c
  7813  000270  EE20 F0C9          	lfsr	2,201
  7814  000274  501B               	movf	checkCollision@g^0,w,c
  7815  000276  26D9               	addwf	fsr2l,f,c
  7816  000278  501C               	movf	(checkCollision@g+1)^0,w,c
  7817  00027A  22DA               	addwfc	fsr2h,f,c
  7818  00027C  CFDE F021          	movff	postinc2,??_checkCollision+4
  7819  000280  CFDD F022          	movff	postdec2,??_checkCollision+5
  7820  000284  501F               	movf	(??_checkCollision+2)^0,w,c
  7821  000286  2621               	addwf	(??_checkCollision+4)^0,f,c
  7822  000288  5020               	movf	(??_checkCollision+3)^0,w,c
  7823  00028A  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7824  00028C  501D               	movf	??_checkCollision^0,w,c
  7825  00028E  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7826  000290  501E               	movf	(??_checkCollision+1)^0,w,c
  7827  000292  5822               	subwfb	(??_checkCollision+5)^0,w,c
  7828  000294  B0D8               	btfsc	status,0,c
  7829  000296  EF4F  F001         	goto	u6691
  7830  00029A  EF51  F001         	goto	u6690
  7831  00029E                     u6691:
  7832  00029E  EF91  F002         	goto	l9579
  7833  0002A2                     u6690:
  7834  0002A2                     
  7835                           ;stateMachine/gameController.c: 185:             {;stateMachine/gameController.c: 186:  
      +                                         if(g->b.x-g->p1.x<10)
  7836  0002A2  EE20 F0D5          	lfsr	2,213
  7837  0002A6  501B               	movf	checkCollision@g^0,w,c
  7838  0002A8  26D9               	addwf	fsr2l,f,c
  7839  0002AA  501C               	movf	(checkCollision@g+1)^0,w,c
  7840  0002AC  22DA               	addwfc	fsr2h,f,c
  7841  0002AE  CFDE F01D          	movff	postinc2,??_checkCollision
  7842  0002B2  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7843  0002B6  EE20 F0C9          	lfsr	2,201
  7844  0002BA  501B               	movf	checkCollision@g^0,w,c
  7845  0002BC  26D9               	addwf	fsr2l,f,c
  7846  0002BE  501C               	movf	(checkCollision@g+1)^0,w,c
  7847  0002C0  22DA               	addwfc	fsr2h,f,c
  7848  0002C2  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7849  0002C6  CFDD F020          	movff	postdec2,??_checkCollision+3
  7850  0002CA  501D               	movf	??_checkCollision^0,w,c
  7851  0002CC  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  7852  0002CE  501E               	movf	(??_checkCollision+1)^0,w,c
  7853  0002D0  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  7854  0002D2  5020               	movf	(??_checkCollision+3)^0,w,c
  7855  0002D4  E107               	bnz	u6701
  7856  0002D6  0E0A               	movlw	10
  7857  0002D8  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7858  0002DA  B0D8               	btfsc	status,0,c
  7859  0002DC  EF72  F001         	goto	u6701
  7860  0002E0  EF74  F001         	goto	u6700
  7861  0002E4                     u6701:
  7862  0002E4  EF98  F001         	goto	l9563
  7863  0002E8                     u6700:
  7864  0002E8                     
  7865                           ;stateMachine/gameController.c: 187:                 {;stateMachine/gameController.c: 18
      +                          9:                     g->b.dy=-g->b.dy;
  7866  0002E8  EE20 F0D3          	lfsr	2,211
  7867  0002EC  501B               	movf	checkCollision@g^0,w,c
  7868  0002EE  26D9               	addwf	fsr2l,f,c
  7869  0002F0  501C               	movf	(checkCollision@g+1)^0,w,c
  7870  0002F2  22DA               	addwfc	fsr2h,f,c
  7871  0002F4  CFDE F01D          	movff	postinc2,??_checkCollision
  7872  0002F8  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7873  0002FC  1E1D               	comf	??_checkCollision^0,f,c
  7874  0002FE  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7875  000300  4A1D               	infsnz	??_checkCollision^0,f,c
  7876  000302  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7877  000304  EE20 F0D3          	lfsr	2,211
  7878  000308  501B               	movf	checkCollision@g^0,w,c
  7879  00030A  26D9               	addwf	fsr2l,f,c
  7880  00030C  501C               	movf	(checkCollision@g+1)^0,w,c
  7881  00030E  22DA               	addwfc	fsr2h,f,c
  7882  000310  C01D  FFDE         	movff	??_checkCollision,postinc2
  7883  000314  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7884                           
  7885                           ;stateMachine/gameController.c: 190:                     g->b.dx-=2;
  7886  000318  EE20 F0D1          	lfsr	2,209
  7887  00031C  501B               	movf	checkCollision@g^0,w,c
  7888  00031E  26D9               	addwf	fsr2l,f,c
  7889  000320  501C               	movf	(checkCollision@g+1)^0,w,c
  7890  000322  22DA               	addwfc	fsr2h,f,c
  7891  000324  0EFE               	movlw	254
  7892  000326  26DE               	addwf	postinc2,f,c
  7893  000328  0EFF               	movlw	255
  7894  00032A  22DD               	addwfc	postdec2,f,c
  7895                           
  7896                           ;stateMachine/gameController.c: 191:                 }
  7897  00032C  EF83  F002         	goto	l665
  7898  000330                     l9563:
  7899  000330  EE20 F0D5          	lfsr	2,213
  7900  000334  501B               	movf	checkCollision@g^0,w,c
  7901  000336  26D9               	addwf	fsr2l,f,c
  7902  000338  501C               	movf	(checkCollision@g+1)^0,w,c
  7903  00033A  22DA               	addwfc	fsr2h,f,c
  7904  00033C  CFDE F01D          	movff	postinc2,??_checkCollision
  7905  000340  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7906  000344  EE20 F0C9          	lfsr	2,201
  7907  000348  501B               	movf	checkCollision@g^0,w,c
  7908  00034A  26D9               	addwf	fsr2l,f,c
  7909  00034C  501C               	movf	(checkCollision@g+1)^0,w,c
  7910  00034E  22DA               	addwfc	fsr2h,f,c
  7911  000350  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7912  000354  CFDD F020          	movff	postdec2,??_checkCollision+3
  7913  000358  501D               	movf	??_checkCollision^0,w,c
  7914  00035A  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  7915  00035C  501E               	movf	(??_checkCollision+1)^0,w,c
  7916  00035E  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  7917  000360  5020               	movf	(??_checkCollision+3)^0,w,c
  7918  000362  E107               	bnz	u6711
  7919  000364  0E14               	movlw	20
  7920  000366  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7921  000368  B0D8               	btfsc	status,0,c
  7922  00036A  EFB9  F001         	goto	u6711
  7923  00036E  EFBB  F001         	goto	u6710
  7924  000372                     u6711:
  7925  000372  EFDE  F001         	goto	l9567
  7926  000376                     u6710:
  7927  000376                     
  7928                           ;stateMachine/gameController.c: 193:                 {;stateMachine/gameController.c: 19
      +                          5:                     g->b.dy=-g->b.dy;
  7929  000376  EE20 F0D3          	lfsr	2,211
  7930  00037A  501B               	movf	checkCollision@g^0,w,c
  7931  00037C  26D9               	addwf	fsr2l,f,c
  7932  00037E  501C               	movf	(checkCollision@g+1)^0,w,c
  7933  000380  22DA               	addwfc	fsr2h,f,c
  7934  000382  CFDE F01D          	movff	postinc2,??_checkCollision
  7935  000386  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7936  00038A  1E1D               	comf	??_checkCollision^0,f,c
  7937  00038C  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7938  00038E  4A1D               	infsnz	??_checkCollision^0,f,c
  7939  000390  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7940  000392  EE20 F0D3          	lfsr	2,211
  7941  000396  501B               	movf	checkCollision@g^0,w,c
  7942  000398  26D9               	addwf	fsr2l,f,c
  7943  00039A  501C               	movf	(checkCollision@g+1)^0,w,c
  7944  00039C  22DA               	addwfc	fsr2h,f,c
  7945  00039E  C01D  FFDE         	movff	??_checkCollision,postinc2
  7946  0003A2  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7947                           
  7948                           ;stateMachine/gameController.c: 196:                     g->b.dx-=1;
  7949  0003A6  EE20 F0D1          	lfsr	2,209
  7950  0003AA  501B               	movf	checkCollision@g^0,w,c
  7951  0003AC  26D9               	addwf	fsr2l,f,c
  7952  0003AE  501C               	movf	(checkCollision@g+1)^0,w,c
  7953  0003B0  22DA               	addwfc	fsr2h,f,c
  7954  0003B2  06DE               	decf	postinc2,f,c
  7955  0003B4  0E00               	movlw	0
  7956  0003B6  5ADD               	subwfb	postdec2,f,c
  7957                           
  7958                           ;stateMachine/gameController.c: 197:                 }
  7959  0003B8  EF83  F002         	goto	l665
  7960  0003BC                     l9567:
  7961  0003BC  EE20 F0D5          	lfsr	2,213
  7962  0003C0  501B               	movf	checkCollision@g^0,w,c
  7963  0003C2  26D9               	addwf	fsr2l,f,c
  7964  0003C4  501C               	movf	(checkCollision@g+1)^0,w,c
  7965  0003C6  22DA               	addwfc	fsr2h,f,c
  7966  0003C8  CFDE F01D          	movff	postinc2,??_checkCollision
  7967  0003CC  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7968  0003D0  EE20 F0C9          	lfsr	2,201
  7969  0003D4  501B               	movf	checkCollision@g^0,w,c
  7970  0003D6  26D9               	addwf	fsr2l,f,c
  7971  0003D8  501C               	movf	(checkCollision@g+1)^0,w,c
  7972  0003DA  22DA               	addwfc	fsr2h,f,c
  7973  0003DC  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7974  0003E0  CFDD F020          	movff	postdec2,??_checkCollision+3
  7975  0003E4  501D               	movf	??_checkCollision^0,w,c
  7976  0003E6  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  7977  0003E8  501E               	movf	(??_checkCollision+1)^0,w,c
  7978  0003EA  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  7979  0003EC  5020               	movf	(??_checkCollision+3)^0,w,c
  7980  0003EE  E107               	bnz	u6721
  7981  0003F0  0E1E               	movlw	30
  7982  0003F2  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7983  0003F4  B0D8               	btfsc	status,0,c
  7984  0003F6  EFFF  F001         	goto	u6721
  7985  0003FA  EF01  F002         	goto	u6720
  7986  0003FE                     u6721:
  7987  0003FE  EF1B  F002         	goto	l9571
  7988  000402                     u6720:
  7989  000402                     
  7990                           ;stateMachine/gameController.c: 202:                     g->b.dy=-g->b.dy;
  7991  000402  EE20 F0D3          	lfsr	2,211
  7992  000406  501B               	movf	checkCollision@g^0,w,c
  7993  000408  26D9               	addwf	fsr2l,f,c
  7994  00040A  501C               	movf	(checkCollision@g+1)^0,w,c
  7995  00040C  22DA               	addwfc	fsr2h,f,c
  7996  00040E  CFDE F01D          	movff	postinc2,??_checkCollision
  7997  000412  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7998  000416  1E1D               	comf	??_checkCollision^0,f,c
  7999  000418  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8000  00041A  4A1D               	infsnz	??_checkCollision^0,f,c
  8001  00041C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8002  00041E  EE20 F0D3          	lfsr	2,211
  8003  000422  501B               	movf	checkCollision@g^0,w,c
  8004  000424  26D9               	addwf	fsr2l,f,c
  8005  000426  501C               	movf	(checkCollision@g+1)^0,w,c
  8006  000428  22DA               	addwfc	fsr2h,f,c
  8007  00042A  C01D  FFDE         	movff	??_checkCollision,postinc2
  8008  00042E  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8009                           
  8010                           ;stateMachine/gameController.c: 203:                 }
  8011  000432  EF83  F002         	goto	l665
  8012  000436                     l9571:
  8013  000436  EE20 F0D5          	lfsr	2,213
  8014  00043A  501B               	movf	checkCollision@g^0,w,c
  8015  00043C  26D9               	addwf	fsr2l,f,c
  8016  00043E  501C               	movf	(checkCollision@g+1)^0,w,c
  8017  000440  22DA               	addwfc	fsr2h,f,c
  8018  000442  CFDE F01D          	movff	postinc2,??_checkCollision
  8019  000446  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8020  00044A  EE20 F0C9          	lfsr	2,201
  8021  00044E  501B               	movf	checkCollision@g^0,w,c
  8022  000450  26D9               	addwf	fsr2l,f,c
  8023  000452  501C               	movf	(checkCollision@g+1)^0,w,c
  8024  000454  22DA               	addwfc	fsr2h,f,c
  8025  000456  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8026  00045A  CFDD F020          	movff	postdec2,??_checkCollision+3
  8027  00045E  501D               	movf	??_checkCollision^0,w,c
  8028  000460  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8029  000462  501E               	movf	(??_checkCollision+1)^0,w,c
  8030  000464  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8031  000466  5020               	movf	(??_checkCollision+3)^0,w,c
  8032  000468  E107               	bnz	u6731
  8033  00046A  0E28               	movlw	40
  8034  00046C  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8035  00046E  B0D8               	btfsc	status,0,c
  8036  000470  EF3C  F002         	goto	u6731
  8037  000474  EF3E  F002         	goto	u6730
  8038  000478                     u6731:
  8039  000478  EF61  F002         	goto	l9575
  8040  00047C                     u6730:
  8041  00047C                     
  8042                           ;stateMachine/gameController.c: 205:                 {;stateMachine/gameController.c: 20
      +                          7:                     g->b.dy=-g->b.dy;
  8043  00047C  EE20 F0D3          	lfsr	2,211
  8044  000480  501B               	movf	checkCollision@g^0,w,c
  8045  000482  26D9               	addwf	fsr2l,f,c
  8046  000484  501C               	movf	(checkCollision@g+1)^0,w,c
  8047  000486  22DA               	addwfc	fsr2h,f,c
  8048  000488  CFDE F01D          	movff	postinc2,??_checkCollision
  8049  00048C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8050  000490  1E1D               	comf	??_checkCollision^0,f,c
  8051  000492  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8052  000494  4A1D               	infsnz	??_checkCollision^0,f,c
  8053  000496  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8054  000498  EE20 F0D3          	lfsr	2,211
  8055  00049C  501B               	movf	checkCollision@g^0,w,c
  8056  00049E  26D9               	addwf	fsr2l,f,c
  8057  0004A0  501C               	movf	(checkCollision@g+1)^0,w,c
  8058  0004A2  22DA               	addwfc	fsr2h,f,c
  8059  0004A4  C01D  FFDE         	movff	??_checkCollision,postinc2
  8060  0004A8  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8061                           
  8062                           ;stateMachine/gameController.c: 208:                     g->b.dx+=1;
  8063  0004AC  EE20 F0D1          	lfsr	2,209
  8064  0004B0  501B               	movf	checkCollision@g^0,w,c
  8065  0004B2  26D9               	addwf	fsr2l,f,c
  8066  0004B4  501C               	movf	(checkCollision@g+1)^0,w,c
  8067  0004B6  22DA               	addwfc	fsr2h,f,c
  8068  0004B8  2ADE               	incf	postinc2,f,c
  8069  0004BA  0E00               	movlw	0
  8070  0004BC  22DD               	addwfc	postdec2,f,c
  8071                           
  8072                           ;stateMachine/gameController.c: 209:                 }
  8073  0004BE  EF83  F002         	goto	l665
  8074  0004C2                     l9575:
  8075                           
  8076                           ;stateMachine/gameController.c: 211:                 {;stateMachine/gameController.c: 21
      +                          3:                     g->b.dy=-g->b.dy;
  8077  0004C2  EE20 F0D3          	lfsr	2,211
  8078  0004C6  501B               	movf	checkCollision@g^0,w,c
  8079  0004C8  26D9               	addwf	fsr2l,f,c
  8080  0004CA  501C               	movf	(checkCollision@g+1)^0,w,c
  8081  0004CC  22DA               	addwfc	fsr2h,f,c
  8082  0004CE  CFDE F01D          	movff	postinc2,??_checkCollision
  8083  0004D2  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8084  0004D6  1E1D               	comf	??_checkCollision^0,f,c
  8085  0004D8  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8086  0004DA  4A1D               	infsnz	??_checkCollision^0,f,c
  8087  0004DC  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8088  0004DE  EE20 F0D3          	lfsr	2,211
  8089  0004E2  501B               	movf	checkCollision@g^0,w,c
  8090  0004E4  26D9               	addwf	fsr2l,f,c
  8091  0004E6  501C               	movf	(checkCollision@g+1)^0,w,c
  8092  0004E8  22DA               	addwfc	fsr2h,f,c
  8093  0004EA  C01D  FFDE         	movff	??_checkCollision,postinc2
  8094  0004EE  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8095                           
  8096                           ;stateMachine/gameController.c: 214:                     g->b.dx+=2;
  8097  0004F2  EE20 F0D1          	lfsr	2,209
  8098  0004F6  501B               	movf	checkCollision@g^0,w,c
  8099  0004F8  26D9               	addwf	fsr2l,f,c
  8100  0004FA  501C               	movf	(checkCollision@g+1)^0,w,c
  8101  0004FC  22DA               	addwfc	fsr2h,f,c
  8102  0004FE  0E02               	movlw	2
  8103  000500  26DE               	addwf	postinc2,f,c
  8104  000502  0E00               	movlw	0
  8105  000504  22DD               	addwfc	postdec2,f,c
  8106  000506                     l665:
  8107                           
  8108                           ;stateMachine/gameController.c: 218:                 g->s1.homeScore++;
  8109  000506  EE20 F0E9          	lfsr	2,233
  8110  00050A  501B               	movf	checkCollision@g^0,w,c
  8111  00050C  26D9               	addwf	fsr2l,f,c
  8112  00050E  501C               	movf	(checkCollision@g+1)^0,w,c
  8113  000510  22DA               	addwfc	fsr2h,f,c
  8114  000512  2ADE               	incf	postinc2,f,c
  8115  000514  0E00               	movlw	0
  8116  000516  22DD               	addwfc	postdec2,f,c
  8117  000518                     
  8118                           ;stateMachine/gameController.c: 219:                 XF_pushEvent(evRedrawScore,0);
  8119  000518  0E00               	movlw	0
  8120  00051A  6E18               	movwf	XF_pushEvent@inISR^0,c
  8121  00051C  0E0E               	movlw	14
  8122  00051E  EC7A  F02E         	call	_XF_pushEvent
  8123  000522                     l9579:
  8124                           
  8125                           ;stateMachine/gameController.c: 225:     if(g->b.y-8<=g->p2.y+10 +1)
  8126  000522  0EF8               	movlw	248
  8127  000524  6E1D               	movwf	??_checkCollision^0,c
  8128  000526  0EFF               	movlw	255
  8129  000528  6E1E               	movwf	(??_checkCollision+1)^0,c
  8130  00052A  EE20 F0CB          	lfsr	2,203
  8131  00052E  501B               	movf	checkCollision@g^0,w,c
  8132  000530  26D9               	addwf	fsr2l,f,c
  8133  000532  501C               	movf	(checkCollision@g+1)^0,w,c
  8134  000534  22DA               	addwfc	fsr2h,f,c
  8135  000536  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8136  00053A  CFDD F020          	movff	postdec2,??_checkCollision+3
  8137  00053E  501D               	movf	??_checkCollision^0,w,c
  8138  000540  261F               	addwf	(??_checkCollision+2)^0,f,c
  8139  000542  501E               	movf	(??_checkCollision+1)^0,w,c
  8140  000544  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8141  000546  EE20 F0E1          	lfsr	2,225
  8142  00054A  501B               	movf	checkCollision@g^0,w,c
  8143  00054C  26D9               	addwf	fsr2l,f,c
  8144  00054E  501C               	movf	(checkCollision@g+1)^0,w,c
  8145  000550  22DA               	addwfc	fsr2h,f,c
  8146  000552  CFDE F021          	movff	postinc2,??_checkCollision+4
  8147  000556  CFDD F022          	movff	postdec2,??_checkCollision+5
  8148  00055A  0E0B               	movlw	11
  8149  00055C  2621               	addwf	(??_checkCollision+4)^0,f,c
  8150  00055E  0E00               	movlw	0
  8151  000560  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8152  000562  501F               	movf	(??_checkCollision+2)^0,w,c
  8153  000564  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8154  000566  5020               	movf	(??_checkCollision+3)^0,w,c
  8155  000568  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8156  00056A  A0D8               	btfss	status,0,c
  8157  00056C  EFBA  F002         	goto	u6741
  8158  000570  EFBC  F002         	goto	u6740
  8159  000574                     u6741:
  8160  000574  EF46  F004         	goto	l9605
  8161  000578                     u6740:
  8162  000578                     
  8163                           ;stateMachine/gameController.c: 226:     {;stateMachine/gameController.c: 227:         i
      +                          f(g->b.x+8>g->p2.x)
  8164  000578  EE20 F0C9          	lfsr	2,201
  8165  00057C  501B               	movf	checkCollision@g^0,w,c
  8166  00057E  26D9               	addwf	fsr2l,f,c
  8167  000580  501C               	movf	(checkCollision@g+1)^0,w,c
  8168  000582  22DA               	addwfc	fsr2h,f,c
  8169  000584  CFDE F01D          	movff	postinc2,??_checkCollision
  8170  000588  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8171  00058C  0E08               	movlw	8
  8172  00058E  261D               	addwf	??_checkCollision^0,f,c
  8173  000590  0E00               	movlw	0
  8174  000592  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8175  000594  EE20 F0DF          	lfsr	2,223
  8176  000598  501B               	movf	checkCollision@g^0,w,c
  8177  00059A  26D9               	addwf	fsr2l,f,c
  8178  00059C  501C               	movf	(checkCollision@g+1)^0,w,c
  8179  00059E  22DA               	addwfc	fsr2h,f,c
  8180  0005A0  501D               	movf	??_checkCollision^0,w,c
  8181  0005A2  5CDE               	subwf	postinc2,w,c
  8182  0005A4  501E               	movf	(??_checkCollision+1)^0,w,c
  8183  0005A6  58DE               	subwfb	postinc2,w,c
  8184  0005A8  B0D8               	btfsc	status,0,c
  8185  0005AA  EFD9  F002         	goto	u6751
  8186  0005AE  EFDB  F002         	goto	u6750
  8187  0005B2                     u6751:
  8188  0005B2  EF46  F004         	goto	l9605
  8189  0005B6                     u6750:
  8190  0005B6                     
  8191                           ;stateMachine/gameController.c: 228:         {;stateMachine/gameController.c: 229:      
      +                                 if(g->b.x-8<g->p2.x+50)
  8192  0005B6  EE20 F0DF          	lfsr	2,223
  8193  0005BA  501B               	movf	checkCollision@g^0,w,c
  8194  0005BC  26D9               	addwf	fsr2l,f,c
  8195  0005BE  501C               	movf	(checkCollision@g+1)^0,w,c
  8196  0005C0  22DA               	addwfc	fsr2h,f,c
  8197  0005C2  CFDE F01D          	movff	postinc2,??_checkCollision
  8198  0005C6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8199  0005CA  0E32               	movlw	50
  8200  0005CC  261D               	addwf	??_checkCollision^0,f,c
  8201  0005CE  0E00               	movlw	0
  8202  0005D0  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8203  0005D2  0EF8               	movlw	248
  8204  0005D4  6E1F               	movwf	(??_checkCollision+2)^0,c
  8205  0005D6  0EFF               	movlw	255
  8206  0005D8  6E20               	movwf	(??_checkCollision+3)^0,c
  8207  0005DA  EE20 F0C9          	lfsr	2,201
  8208  0005DE  501B               	movf	checkCollision@g^0,w,c
  8209  0005E0  26D9               	addwf	fsr2l,f,c
  8210  0005E2  501C               	movf	(checkCollision@g+1)^0,w,c
  8211  0005E4  22DA               	addwfc	fsr2h,f,c
  8212  0005E6  CFDE F021          	movff	postinc2,??_checkCollision+4
  8213  0005EA  CFDD F022          	movff	postdec2,??_checkCollision+5
  8214  0005EE  501F               	movf	(??_checkCollision+2)^0,w,c
  8215  0005F0  2621               	addwf	(??_checkCollision+4)^0,f,c
  8216  0005F2  5020               	movf	(??_checkCollision+3)^0,w,c
  8217  0005F4  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8218  0005F6  501D               	movf	??_checkCollision^0,w,c
  8219  0005F8  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8220  0005FA  501E               	movf	(??_checkCollision+1)^0,w,c
  8221  0005FC  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8222  0005FE  B0D8               	btfsc	status,0,c
  8223  000600  EF04  F003         	goto	u6761
  8224  000604  EF06  F003         	goto	u6760
  8225  000608                     u6761:
  8226  000608  EF46  F004         	goto	l9605
  8227  00060C                     u6760:
  8228  00060C                     
  8229                           ;stateMachine/gameController.c: 230:             {;stateMachine/gameController.c: 231:  
      +                                         if(g->b.x-g->p2.x<10)
  8230  00060C  EE20 F0DF          	lfsr	2,223
  8231  000610  501B               	movf	checkCollision@g^0,w,c
  8232  000612  26D9               	addwf	fsr2l,f,c
  8233  000614  501C               	movf	(checkCollision@g+1)^0,w,c
  8234  000616  22DA               	addwfc	fsr2h,f,c
  8235  000618  CFDE F01D          	movff	postinc2,??_checkCollision
  8236  00061C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8237  000620  EE20 F0C9          	lfsr	2,201
  8238  000624  501B               	movf	checkCollision@g^0,w,c
  8239  000626  26D9               	addwf	fsr2l,f,c
  8240  000628  501C               	movf	(checkCollision@g+1)^0,w,c
  8241  00062A  22DA               	addwfc	fsr2h,f,c
  8242  00062C  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8243  000630  CFDD F020          	movff	postdec2,??_checkCollision+3
  8244  000634  501D               	movf	??_checkCollision^0,w,c
  8245  000636  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8246  000638  501E               	movf	(??_checkCollision+1)^0,w,c
  8247  00063A  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8248  00063C  5020               	movf	(??_checkCollision+3)^0,w,c
  8249  00063E  E107               	bnz	u6771
  8250  000640  0E0A               	movlw	10
  8251  000642  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8252  000644  B0D8               	btfsc	status,0,c
  8253  000646  EF27  F003         	goto	u6771
  8254  00064A  EF29  F003         	goto	u6770
  8255  00064E                     u6771:
  8256  00064E  EF4D  F003         	goto	l9589
  8257  000652                     u6770:
  8258  000652                     
  8259                           ;stateMachine/gameController.c: 232:                 {;stateMachine/gameController.c: 23
      +                          4:                     g->b.dy=-g->b.dy;
  8260  000652  EE20 F0D3          	lfsr	2,211
  8261  000656  501B               	movf	checkCollision@g^0,w,c
  8262  000658  26D9               	addwf	fsr2l,f,c
  8263  00065A  501C               	movf	(checkCollision@g+1)^0,w,c
  8264  00065C  22DA               	addwfc	fsr2h,f,c
  8265  00065E  CFDE F01D          	movff	postinc2,??_checkCollision
  8266  000662  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8267  000666  1E1D               	comf	??_checkCollision^0,f,c
  8268  000668  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8269  00066A  4A1D               	infsnz	??_checkCollision^0,f,c
  8270  00066C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8271  00066E  EE20 F0D3          	lfsr	2,211
  8272  000672  501B               	movf	checkCollision@g^0,w,c
  8273  000674  26D9               	addwf	fsr2l,f,c
  8274  000676  501C               	movf	(checkCollision@g+1)^0,w,c
  8275  000678  22DA               	addwfc	fsr2h,f,c
  8276  00067A  C01D  FFDE         	movff	??_checkCollision,postinc2
  8277  00067E  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8278                           
  8279                           ;stateMachine/gameController.c: 235:                     g->b.dx-=2;
  8280  000682  EE20 F0D1          	lfsr	2,209
  8281  000686  501B               	movf	checkCollision@g^0,w,c
  8282  000688  26D9               	addwf	fsr2l,f,c
  8283  00068A  501C               	movf	(checkCollision@g+1)^0,w,c
  8284  00068C  22DA               	addwfc	fsr2h,f,c
  8285  00068E  0EFE               	movlw	254
  8286  000690  26DE               	addwf	postinc2,f,c
  8287  000692  0EFF               	movlw	255
  8288  000694  22DD               	addwfc	postdec2,f,c
  8289                           
  8290                           ;stateMachine/gameController.c: 236:                 }
  8291  000696  EF38  F004         	goto	l676
  8292  00069A                     l9589:
  8293  00069A  EE20 F0DF          	lfsr	2,223
  8294  00069E  501B               	movf	checkCollision@g^0,w,c
  8295  0006A0  26D9               	addwf	fsr2l,f,c
  8296  0006A2  501C               	movf	(checkCollision@g+1)^0,w,c
  8297  0006A4  22DA               	addwfc	fsr2h,f,c
  8298  0006A6  CFDE F01D          	movff	postinc2,??_checkCollision
  8299  0006AA  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8300  0006AE  EE20 F0C9          	lfsr	2,201
  8301  0006B2  501B               	movf	checkCollision@g^0,w,c
  8302  0006B4  26D9               	addwf	fsr2l,f,c
  8303  0006B6  501C               	movf	(checkCollision@g+1)^0,w,c
  8304  0006B8  22DA               	addwfc	fsr2h,f,c
  8305  0006BA  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8306  0006BE  CFDD F020          	movff	postdec2,??_checkCollision+3
  8307  0006C2  501D               	movf	??_checkCollision^0,w,c
  8308  0006C4  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8309  0006C6  501E               	movf	(??_checkCollision+1)^0,w,c
  8310  0006C8  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8311  0006CA  5020               	movf	(??_checkCollision+3)^0,w,c
  8312  0006CC  E107               	bnz	u6781
  8313  0006CE  0E14               	movlw	20
  8314  0006D0  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8315  0006D2  B0D8               	btfsc	status,0,c
  8316  0006D4  EF6E  F003         	goto	u6781
  8317  0006D8  EF70  F003         	goto	u6780
  8318  0006DC                     u6781:
  8319  0006DC  EF93  F003         	goto	l9593
  8320  0006E0                     u6780:
  8321  0006E0                     
  8322                           ;stateMachine/gameController.c: 238:                 {;stateMachine/gameController.c: 24
      +                          0:                     g->b.dy=-g->b.dy;
  8323  0006E0  EE20 F0D3          	lfsr	2,211
  8324  0006E4  501B               	movf	checkCollision@g^0,w,c
  8325  0006E6  26D9               	addwf	fsr2l,f,c
  8326  0006E8  501C               	movf	(checkCollision@g+1)^0,w,c
  8327  0006EA  22DA               	addwfc	fsr2h,f,c
  8328  0006EC  CFDE F01D          	movff	postinc2,??_checkCollision
  8329  0006F0  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8330  0006F4  1E1D               	comf	??_checkCollision^0,f,c
  8331  0006F6  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8332  0006F8  4A1D               	infsnz	??_checkCollision^0,f,c
  8333  0006FA  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8334  0006FC  EE20 F0D3          	lfsr	2,211
  8335  000700  501B               	movf	checkCollision@g^0,w,c
  8336  000702  26D9               	addwf	fsr2l,f,c
  8337  000704  501C               	movf	(checkCollision@g+1)^0,w,c
  8338  000706  22DA               	addwfc	fsr2h,f,c
  8339  000708  C01D  FFDE         	movff	??_checkCollision,postinc2
  8340  00070C  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8341                           
  8342                           ;stateMachine/gameController.c: 241:                     g->b.dx-=1;
  8343  000710  EE20 F0D1          	lfsr	2,209
  8344  000714  501B               	movf	checkCollision@g^0,w,c
  8345  000716  26D9               	addwf	fsr2l,f,c
  8346  000718  501C               	movf	(checkCollision@g+1)^0,w,c
  8347  00071A  22DA               	addwfc	fsr2h,f,c
  8348  00071C  06DE               	decf	postinc2,f,c
  8349  00071E  0E00               	movlw	0
  8350  000720  5ADD               	subwfb	postdec2,f,c
  8351                           
  8352                           ;stateMachine/gameController.c: 242:                 }
  8353  000722  EF38  F004         	goto	l676
  8354  000726                     l9593:
  8355  000726  EE20 F0DF          	lfsr	2,223
  8356  00072A  501B               	movf	checkCollision@g^0,w,c
  8357  00072C  26D9               	addwf	fsr2l,f,c
  8358  00072E  501C               	movf	(checkCollision@g+1)^0,w,c
  8359  000730  22DA               	addwfc	fsr2h,f,c
  8360  000732  CFDE F01D          	movff	postinc2,??_checkCollision
  8361  000736  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8362  00073A  EE20 F0C9          	lfsr	2,201
  8363  00073E  501B               	movf	checkCollision@g^0,w,c
  8364  000740  26D9               	addwf	fsr2l,f,c
  8365  000742  501C               	movf	(checkCollision@g+1)^0,w,c
  8366  000744  22DA               	addwfc	fsr2h,f,c
  8367  000746  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8368  00074A  CFDD F020          	movff	postdec2,??_checkCollision+3
  8369  00074E  501D               	movf	??_checkCollision^0,w,c
  8370  000750  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8371  000752  501E               	movf	(??_checkCollision+1)^0,w,c
  8372  000754  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8373  000756  5020               	movf	(??_checkCollision+3)^0,w,c
  8374  000758  E107               	bnz	u6791
  8375  00075A  0E1E               	movlw	30
  8376  00075C  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8377  00075E  B0D8               	btfsc	status,0,c
  8378  000760  EFB4  F003         	goto	u6791
  8379  000764  EFB6  F003         	goto	u6790
  8380  000768                     u6791:
  8381  000768  EFD0  F003         	goto	l9597
  8382  00076C                     u6790:
  8383  00076C                     
  8384                           ;stateMachine/gameController.c: 247:                     g->b.dy=-g->b.dy;
  8385  00076C  EE20 F0D3          	lfsr	2,211
  8386  000770  501B               	movf	checkCollision@g^0,w,c
  8387  000772  26D9               	addwf	fsr2l,f,c
  8388  000774  501C               	movf	(checkCollision@g+1)^0,w,c
  8389  000776  22DA               	addwfc	fsr2h,f,c
  8390  000778  CFDE F01D          	movff	postinc2,??_checkCollision
  8391  00077C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8392  000780  1E1D               	comf	??_checkCollision^0,f,c
  8393  000782  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8394  000784  4A1D               	infsnz	??_checkCollision^0,f,c
  8395  000786  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8396  000788  EE20 F0D3          	lfsr	2,211
  8397  00078C  501B               	movf	checkCollision@g^0,w,c
  8398  00078E  26D9               	addwf	fsr2l,f,c
  8399  000790  501C               	movf	(checkCollision@g+1)^0,w,c
  8400  000792  22DA               	addwfc	fsr2h,f,c
  8401  000794  C01D  FFDE         	movff	??_checkCollision,postinc2
  8402  000798  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8403                           
  8404                           ;stateMachine/gameController.c: 248:                 }
  8405  00079C  EF38  F004         	goto	l676
  8406  0007A0                     l9597:
  8407  0007A0  EE20 F0DF          	lfsr	2,223
  8408  0007A4  501B               	movf	checkCollision@g^0,w,c
  8409  0007A6  26D9               	addwf	fsr2l,f,c
  8410  0007A8  501C               	movf	(checkCollision@g+1)^0,w,c
  8411  0007AA  22DA               	addwfc	fsr2h,f,c
  8412  0007AC  CFDE F01D          	movff	postinc2,??_checkCollision
  8413  0007B0  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8414  0007B4  EE20 F0C9          	lfsr	2,201
  8415  0007B8  501B               	movf	checkCollision@g^0,w,c
  8416  0007BA  26D9               	addwf	fsr2l,f,c
  8417  0007BC  501C               	movf	(checkCollision@g+1)^0,w,c
  8418  0007BE  22DA               	addwfc	fsr2h,f,c
  8419  0007C0  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8420  0007C4  CFDD F020          	movff	postdec2,??_checkCollision+3
  8421  0007C8  501D               	movf	??_checkCollision^0,w,c
  8422  0007CA  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8423  0007CC  501E               	movf	(??_checkCollision+1)^0,w,c
  8424  0007CE  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8425  0007D0  5020               	movf	(??_checkCollision+3)^0,w,c
  8426  0007D2  E107               	bnz	u6801
  8427  0007D4  0E28               	movlw	40
  8428  0007D6  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8429  0007D8  B0D8               	btfsc	status,0,c
  8430  0007DA  EFF1  F003         	goto	u6801
  8431  0007DE  EFF3  F003         	goto	u6800
  8432  0007E2                     u6801:
  8433  0007E2  EF16  F004         	goto	l9601
  8434  0007E6                     u6800:
  8435  0007E6                     
  8436                           ;stateMachine/gameController.c: 250:                 {;stateMachine/gameController.c: 25
      +                          2:                     g->b.dy=-g->b.dy;
  8437  0007E6  EE20 F0D3          	lfsr	2,211
  8438  0007EA  501B               	movf	checkCollision@g^0,w,c
  8439  0007EC  26D9               	addwf	fsr2l,f,c
  8440  0007EE  501C               	movf	(checkCollision@g+1)^0,w,c
  8441  0007F0  22DA               	addwfc	fsr2h,f,c
  8442  0007F2  CFDE F01D          	movff	postinc2,??_checkCollision
  8443  0007F6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8444  0007FA  1E1D               	comf	??_checkCollision^0,f,c
  8445  0007FC  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8446  0007FE  4A1D               	infsnz	??_checkCollision^0,f,c
  8447  000800  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8448  000802  EE20 F0D3          	lfsr	2,211
  8449  000806  501B               	movf	checkCollision@g^0,w,c
  8450  000808  26D9               	addwf	fsr2l,f,c
  8451  00080A  501C               	movf	(checkCollision@g+1)^0,w,c
  8452  00080C  22DA               	addwfc	fsr2h,f,c
  8453  00080E  C01D  FFDE         	movff	??_checkCollision,postinc2
  8454  000812  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8455                           
  8456                           ;stateMachine/gameController.c: 253:                     g->b.dx+=1;
  8457  000816  EE20 F0D1          	lfsr	2,209
  8458  00081A  501B               	movf	checkCollision@g^0,w,c
  8459  00081C  26D9               	addwf	fsr2l,f,c
  8460  00081E  501C               	movf	(checkCollision@g+1)^0,w,c
  8461  000820  22DA               	addwfc	fsr2h,f,c
  8462  000822  2ADE               	incf	postinc2,f,c
  8463  000824  0E00               	movlw	0
  8464  000826  22DD               	addwfc	postdec2,f,c
  8465                           
  8466                           ;stateMachine/gameController.c: 254:                 }
  8467  000828  EF38  F004         	goto	l676
  8468  00082C                     l9601:
  8469                           
  8470                           ;stateMachine/gameController.c: 256:                 {;stateMachine/gameController.c: 25
      +                          8:                     g->b.dy=-g->b.dy;
  8471  00082C  EE20 F0D3          	lfsr	2,211
  8472  000830  501B               	movf	checkCollision@g^0,w,c
  8473  000832  26D9               	addwf	fsr2l,f,c
  8474  000834  501C               	movf	(checkCollision@g+1)^0,w,c
  8475  000836  22DA               	addwfc	fsr2h,f,c
  8476  000838  CFDE F01D          	movff	postinc2,??_checkCollision
  8477  00083C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8478  000840  1E1D               	comf	??_checkCollision^0,f,c
  8479  000842  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8480  000844  4A1D               	infsnz	??_checkCollision^0,f,c
  8481  000846  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8482  000848  EE20 F0D3          	lfsr	2,211
  8483  00084C  501B               	movf	checkCollision@g^0,w,c
  8484  00084E  26D9               	addwf	fsr2l,f,c
  8485  000850  501C               	movf	(checkCollision@g+1)^0,w,c
  8486  000852  22DA               	addwfc	fsr2h,f,c
  8487  000854  C01D  FFDE         	movff	??_checkCollision,postinc2
  8488  000858  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8489                           
  8490                           ;stateMachine/gameController.c: 259:                     g->b.dx+=2;
  8491  00085C  EE20 F0D1          	lfsr	2,209
  8492  000860  501B               	movf	checkCollision@g^0,w,c
  8493  000862  26D9               	addwf	fsr2l,f,c
  8494  000864  501C               	movf	(checkCollision@g+1)^0,w,c
  8495  000866  22DA               	addwfc	fsr2h,f,c
  8496  000868  0E02               	movlw	2
  8497  00086A  26DE               	addwf	postinc2,f,c
  8498  00086C  0E00               	movlw	0
  8499  00086E  22DD               	addwfc	postdec2,f,c
  8500  000870                     l676:
  8501                           
  8502                           ;stateMachine/gameController.c: 262:                 g->s1.awayScore++;
  8503  000870  EE20 F0EB          	lfsr	2,235
  8504  000874  501B               	movf	checkCollision@g^0,w,c
  8505  000876  26D9               	addwf	fsr2l,f,c
  8506  000878  501C               	movf	(checkCollision@g+1)^0,w,c
  8507  00087A  22DA               	addwfc	fsr2h,f,c
  8508  00087C  2ADE               	incf	postinc2,f,c
  8509  00087E  0E00               	movlw	0
  8510  000880  22DD               	addwfc	postdec2,f,c
  8511  000882                     
  8512                           ;stateMachine/gameController.c: 263:                 XF_pushEvent(evRedrawScore,0);
  8513  000882  0E00               	movlw	0
  8514  000884  6E18               	movwf	XF_pushEvent@inISR^0,c
  8515  000886  0E0E               	movlw	14
  8516  000888  EC7A  F02E         	call	_XF_pushEvent
  8517  00088C                     l9605:
  8518                           
  8519                           ;stateMachine/gameController.c: 269:     if(g->b.y-8<=g->p2.y-5)
  8520  00088C  0EF8               	movlw	248
  8521  00088E  6E1D               	movwf	??_checkCollision^0,c
  8522  000890  0EFF               	movlw	255
  8523  000892  6E1E               	movwf	(??_checkCollision+1)^0,c
  8524  000894  EE20 F0CB          	lfsr	2,203
  8525  000898  501B               	movf	checkCollision@g^0,w,c
  8526  00089A  26D9               	addwf	fsr2l,f,c
  8527  00089C  501C               	movf	(checkCollision@g+1)^0,w,c
  8528  00089E  22DA               	addwfc	fsr2h,f,c
  8529  0008A0  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8530  0008A4  CFDD F020          	movff	postdec2,??_checkCollision+3
  8531  0008A8  501D               	movf	??_checkCollision^0,w,c
  8532  0008AA  261F               	addwf	(??_checkCollision+2)^0,f,c
  8533  0008AC  501E               	movf	(??_checkCollision+1)^0,w,c
  8534  0008AE  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8535  0008B0  0EFB               	movlw	251
  8536  0008B2  6E21               	movwf	(??_checkCollision+4)^0,c
  8537  0008B4  0EFF               	movlw	255
  8538  0008B6  6E22               	movwf	(??_checkCollision+5)^0,c
  8539  0008B8  EE20 F0E1          	lfsr	2,225
  8540  0008BC  501B               	movf	checkCollision@g^0,w,c
  8541  0008BE  26D9               	addwf	fsr2l,f,c
  8542  0008C0  501C               	movf	(checkCollision@g+1)^0,w,c
  8543  0008C2  22DA               	addwfc	fsr2h,f,c
  8544  0008C4  CFDE F023          	movff	postinc2,??_checkCollision+6
  8545  0008C8  CFDD F024          	movff	postdec2,??_checkCollision+7
  8546  0008CC  5021               	movf	(??_checkCollision+4)^0,w,c
  8547  0008CE  2623               	addwf	(??_checkCollision+6)^0,f,c
  8548  0008D0  5022               	movf	(??_checkCollision+5)^0,w,c
  8549  0008D2  2224               	addwfc	(??_checkCollision+7)^0,f,c
  8550  0008D4  501F               	movf	(??_checkCollision+2)^0,w,c
  8551  0008D6  5C23               	subwf	(??_checkCollision+6)^0,w,c
  8552  0008D8  5020               	movf	(??_checkCollision+3)^0,w,c
  8553  0008DA  5824               	subwfb	(??_checkCollision+7)^0,w,c
  8554  0008DC  A0D8               	btfss	status,0,c
  8555  0008DE  EF73  F004         	goto	u6811
  8556  0008E2  EF75  F004         	goto	u6810
  8557  0008E6                     u6811:
  8558  0008E6  EF86  F004         	goto	l9613
  8559  0008EA                     u6810:
  8560  0008EA                     
  8561                           ;stateMachine/gameController.c: 270:     {;stateMachine/gameController.c: 272:         X
      +                          F_pushEvent(evEndGame,0);
  8562  0008EA  0E00               	movlw	0
  8563  0008EC  6E18               	movwf	XF_pushEvent@inISR^0,c
  8564  0008EE  0E09               	movlw	9
  8565  0008F0  EC7A  F02E         	call	_XF_pushEvent
  8566  0008F4                     
  8567                           ;stateMachine/gameController.c: 273:         g->s1.awayScore=0;
  8568  0008F4  EE20 F0EB          	lfsr	2,235
  8569  0008F8  501B               	movf	checkCollision@g^0,w,c
  8570  0008FA  26D9               	addwf	fsr2l,f,c
  8571  0008FC  501C               	movf	(checkCollision@g+1)^0,w,c
  8572  0008FE  22DA               	addwfc	fsr2h,f,c
  8573  000900  0E00               	movlw	0
  8574  000902  6EDE               	movwf	postinc2,c
  8575  000904  0E00               	movlw	0
  8576  000906  6EDD               	movwf	postdec2,c
  8577  000908                     
  8578                           ;stateMachine/gameController.c: 274:         gameStateMachine=ENDGAME;
  8579  000908  0E04               	movlw	4
  8580  00090A  6E4D               	movwf	_gameStateMachine^0,c
  8581  00090C                     l9613:
  8582                           
  8583                           ;stateMachine/gameController.c: 276:     if(g->b.y+8>=g->p1.y+5)
  8584  00090C  EE20 F0D7          	lfsr	2,215
  8585  000910  501B               	movf	checkCollision@g^0,w,c
  8586  000912  26D9               	addwf	fsr2l,f,c
  8587  000914  501C               	movf	(checkCollision@g+1)^0,w,c
  8588  000916  22DA               	addwfc	fsr2h,f,c
  8589  000918  CFDE F01D          	movff	postinc2,??_checkCollision
  8590  00091C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8591  000920  0E05               	movlw	5
  8592  000922  261D               	addwf	??_checkCollision^0,f,c
  8593  000924  0E00               	movlw	0
  8594  000926  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8595  000928  EE20 F0CB          	lfsr	2,203
  8596  00092C  501B               	movf	checkCollision@g^0,w,c
  8597  00092E  26D9               	addwf	fsr2l,f,c
  8598  000930  501C               	movf	(checkCollision@g+1)^0,w,c
  8599  000932  22DA               	addwfc	fsr2h,f,c
  8600  000934  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8601  000938  CFDD F020          	movff	postdec2,??_checkCollision+3
  8602  00093C  0E08               	movlw	8
  8603  00093E  261F               	addwf	(??_checkCollision+2)^0,f,c
  8604  000940  0E00               	movlw	0
  8605  000942  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8606  000944  501D               	movf	??_checkCollision^0,w,c
  8607  000946  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8608  000948  501E               	movf	(??_checkCollision+1)^0,w,c
  8609  00094A  5820               	subwfb	(??_checkCollision+3)^0,w,c
  8610  00094C  A0D8               	btfss	status,0,c
  8611  00094E  EFAB  F004         	goto	u6821
  8612  000952  EFAD  F004         	goto	u6820
  8613  000956                     u6821:
  8614  000956  EFBE  F004         	goto	l685
  8615  00095A                     u6820:
  8616  00095A                     
  8617                           ;stateMachine/gameController.c: 277:     {;stateMachine/gameController.c: 279:         X
      +                          F_pushEvent(evEndGame,0);
  8618  00095A  0E00               	movlw	0
  8619  00095C  6E18               	movwf	XF_pushEvent@inISR^0,c
  8620  00095E  0E09               	movlw	9
  8621  000960  EC7A  F02E         	call	_XF_pushEvent
  8622  000964                     
  8623                           ;stateMachine/gameController.c: 280:         g->s1.homeScore=0;
  8624  000964  EE20 F0E9          	lfsr	2,233
  8625  000968  501B               	movf	checkCollision@g^0,w,c
  8626  00096A  26D9               	addwf	fsr2l,f,c
  8627  00096C  501C               	movf	(checkCollision@g+1)^0,w,c
  8628  00096E  22DA               	addwfc	fsr2h,f,c
  8629  000970  0E00               	movlw	0
  8630  000972  6EDE               	movwf	postinc2,c
  8631  000974  0E00               	movlw	0
  8632  000976  6EDD               	movwf	postdec2,c
  8633  000978                     
  8634                           ;stateMachine/gameController.c: 281:         gameStateMachine=ENDGAME;
  8635  000978  0E04               	movlw	4
  8636  00097A  6E4D               	movwf	_gameStateMachine^0,c
  8637  00097C                     l685:
  8638  00097C  0012               	return		;funcret
  8639  00097E                     __end_of_checkCollision:
  8640                           	callstack 0
  8641                           
  8642 ;; *************** function _XF_pushEvent *****************
  8643 ;; Defined at:
  8644 ;;		line 49 in file "xf/xf.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  ev              1    wreg     unsigned char 
  8647 ;;  inISR           1   23[COMRAM] _Bool 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  ev              1   24[COMRAM] unsigned char 
  8650 ;;  temp            1   25[COMRAM] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1    wreg      _Bool 
  8653 ;; Registers used:
  8654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8660 ;;      Params:         1       0       0       0       0       0       0
  8661 ;;      Locals:         2       0       0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0
  8663 ;;      Totals:         3       0       0       0       0       0       0
  8664 ;;Total ram usage:        3 bytes
  8665 ;; Hardware stack levels used: 1
  8666 ;; Hardware stack levels required when called: 5
  8667 ;; This function calls:
  8668 ;;		_ENTERCRITICAL
  8669 ;;		_LEAVECRITICAL
  8670 ;;		___awmod
  8671 ;; This function is called by:
  8672 ;;		_gameControllerController
  8673 ;;		_moovePaddle
  8674 ;;		_mooveBall
  8675 ;;		_checkCollision
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text29
  8680  005CF4                     __ptext29:
  8681                           	callstack 0
  8682  005CF4                     _XF_pushEvent:
  8683                           	callstack 20
  8684                           
  8685                           ;incstack = 0
  8686                           ;XF_pushEvent@ev stored from wreg
  8687  005CF4  6E19               	movwf	XF_pushEvent@ev^0,c
  8688  005CF6                     
  8689                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
  8690  005CF6  5018               	movf	XF_pushEvent@inISR^0,w,c
  8691  005CF8  ECB4  F031         	call	_ENTERCRITICAL
  8692  005CFC                     
  8693                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
  8694  005CFC  0E01               	movlw	1
  8695  005CFE  0100               	movlb	0	; () banked
  8696  005D00  25D9               	addwf	(_theXF+36)& (0+255),w,b
  8697  005D02  6E12               	movwf	___awmod@dividend^0,c
  8698  005D04  6A13               	clrf	(___awmod@dividend+1)^0,c
  8699  005D06  0E00               	movlw	0
  8700  005D08  2213               	addwfc	(___awmod@dividend+1)^0,f,c
  8701  005D0A  0E00               	movlw	0
  8702  005D0C  6E15               	movwf	(___awmod@divisor+1)^0,c
  8703  005D0E  0E0C               	movlw	12
  8704  005D10  6E14               	movwf	___awmod@divisor^0,c
  8705  005D12  ECC4  F02B         	call	___awmod	;wreg free
  8706  005D16  5012               	movf	?___awmod^0,w,c
  8707  005D18  6E1A               	movwf	XF_pushEvent@temp^0,c
  8708  005D1A                     
  8709                           ;xf/xf.c: 55:     if(temp == theXF.out)
  8710  005D1A  501A               	movf	XF_pushEvent@temp^0,w,c
  8711  005D1C  0100               	movlb	0	; () banked
  8712  005D1E  19DA               	xorwf	(_theXF+37)& (0+255),w,b
  8713  005D20  A4D8               	btfss	status,2,c
  8714  005D22  EF95  F02E         	goto	u6481
  8715  005D26  EF97  F02E         	goto	u6480
  8716  005D2A                     u6481:
  8717  005D2A  EF9D  F02E         	goto	l9249
  8718  005D2E                     u6480:
  8719  005D2E                     
  8720                           ; BSR set to: 0
  8721                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
  8722  005D2E  5018               	movf	XF_pushEvent@inISR^0,w,c
  8723  005D30  ECA9  F031         	call	_LEAVECRITICAL
  8724  005D34                     
  8725                           ;xf/xf.c: 58:       return 0;
  8726  005D34  0E00               	movlw	0
  8727  005D36  EFAB  F02E         	goto	l730
  8728  005D3A                     l9249:
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
  8732  005D3A  0ECD               	movlw	low (_theXF+24)
  8733  005D3C  25D9               	addwf	(_theXF+36)& (0+255),w,b
  8734  005D3E  6ED9               	movwf	fsr2l,c
  8735  005D40  6ADA               	clrf	fsr2h,c
  8736  005D42  0E00               	movlw	high (_theXF+24)
  8737  005D44  22DA               	addwfc	fsr2h,f,c
  8738  005D46  C019  FFDF         	movff	XF_pushEvent@ev,indf2
  8739  005D4A                     
  8740                           ; BSR set to: 0
  8741                           ;xf/xf.c: 61:     theXF.in = temp;
  8742  005D4A  C01A  F0D9         	movff	XF_pushEvent@temp,_theXF+36
  8743  005D4E                     
  8744                           ; BSR set to: 0
  8745                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
  8746  005D4E  5018               	movf	XF_pushEvent@inISR^0,w,c
  8747  005D50  ECA9  F031         	call	_LEAVECRITICAL
  8748  005D54                     
  8749                           ;xf/xf.c: 63:     return 1;
  8750  005D54  0E01               	movlw	1
  8751  005D56                     l730:
  8752  005D56  0012               	return		;funcret
  8753  005D58                     __end_of_XF_pushEvent:
  8754                           	callstack 0
  8755                           
  8756 ;; *************** function _Ball_Update *****************
  8757 ;; Defined at:
  8758 ;;		line 12 in file "class/ball.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  b               2   17[COMRAM] PTR struct Ball
  8761 ;;		 -> g1(239), 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;		None
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      void 
  8766 ;; Registers used:
  8767 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8773 ;;      Params:         2       0       0       0       0       0       0
  8774 ;;      Locals:         0       0       0       0       0       0       0
  8775 ;;      Temps:          4       0       0       0       0       0       0
  8776 ;;      Totals:         6       0       0       0       0       0       0
  8777 ;;Total ram usage:        6 bytes
  8778 ;; Hardware stack levels used: 1
  8779 ;; Hardware stack levels required when called: 4
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_mooveBall
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text30
  8788  005A1A                     __ptext30:
  8789                           	callstack 0
  8790  005A1A                     _Ball_Update:
  8791                           	callstack 21
  8792  005A1A                     
  8793                           ;class/ball.c: 12: void Ball_Update(struct Ball* b);class/ball.c: 13: {;class/ball.c: 14
      +                          :     b->x=b->x+b->dx;
  8794  005A1A  EE20 F008          	lfsr	2,8
  8795  005A1E  5012               	movf	Ball_Update@b^0,w,c
  8796  005A20  26D9               	addwf	fsr2l,f,c
  8797  005A22  5013               	movf	(Ball_Update@b+1)^0,w,c
  8798  005A24  22DA               	addwfc	fsr2h,f,c
  8799  005A26  CFDE F014          	movff	postinc2,??_Ball_Update
  8800  005A2A  CFDD F015          	movff	postdec2,??_Ball_Update+1
  8801  005A2E  C012  FFD9         	movff	Ball_Update@b,fsr2l
  8802  005A32  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
  8803  005A36  CFDE F016          	movff	postinc2,??_Ball_Update+2
  8804  005A3A  CFDD F017          	movff	postdec2,??_Ball_Update+3
  8805  005A3E  5014               	movf	??_Ball_Update^0,w,c
  8806  005A40  2616               	addwf	(??_Ball_Update+2)^0,f,c
  8807  005A42  5015               	movf	(??_Ball_Update+1)^0,w,c
  8808  005A44  2217               	addwfc	(??_Ball_Update+3)^0,f,c
  8809  005A46  C012  FFD9         	movff	Ball_Update@b,fsr2l
  8810  005A4A  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
  8811  005A4E  C016  FFDE         	movff	??_Ball_Update+2,postinc2
  8812  005A52  C017  FFDD         	movff	??_Ball_Update+3,postdec2
  8813                           
  8814                           ;class/ball.c: 15:     b->y=b->y+b->dy;
  8815  005A56  EE20 F00A          	lfsr	2,10
  8816  005A5A  5012               	movf	Ball_Update@b^0,w,c
  8817  005A5C  26D9               	addwf	fsr2l,f,c
  8818  005A5E  5013               	movf	(Ball_Update@b+1)^0,w,c
  8819  005A60  22DA               	addwfc	fsr2h,f,c
  8820  005A62  CFDE F014          	movff	postinc2,??_Ball_Update
  8821  005A66  CFDD F015          	movff	postdec2,??_Ball_Update+1
  8822  005A6A  EE20 F002          	lfsr	2,2
  8823  005A6E  5012               	movf	Ball_Update@b^0,w,c
  8824  005A70  26D9               	addwf	fsr2l,f,c
  8825  005A72  5013               	movf	(Ball_Update@b+1)^0,w,c
  8826  005A74  22DA               	addwfc	fsr2h,f,c
  8827  005A76  CFDE F016          	movff	postinc2,??_Ball_Update+2
  8828  005A7A  CFDD F017          	movff	postdec2,??_Ball_Update+3
  8829  005A7E  5014               	movf	??_Ball_Update^0,w,c
  8830  005A80  2616               	addwf	(??_Ball_Update+2)^0,f,c
  8831  005A82  5015               	movf	(??_Ball_Update+1)^0,w,c
  8832  005A84  2217               	addwfc	(??_Ball_Update+3)^0,f,c
  8833  005A86  EE20 F002          	lfsr	2,2
  8834  005A8A  5012               	movf	Ball_Update@b^0,w,c
  8835  005A8C  26D9               	addwf	fsr2l,f,c
  8836  005A8E  5013               	movf	(Ball_Update@b+1)^0,w,c
  8837  005A90  22DA               	addwfc	fsr2h,f,c
  8838  005A92  C016  FFDE         	movff	??_Ball_Update+2,postinc2
  8839  005A96  C017  FFDD         	movff	??_Ball_Update+3,postdec2
  8840  005A9A  0012               	return		;funcret
  8841  005A9C                     __end_of_Ball_Update:
  8842                           	callstack 0
  8843                           
  8844 ;; *************** function _backlightController *****************
  8845 ;; Defined at:
  8846 ;;		line 286 in file "stateMachine/gameController.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  g               2   23[COMRAM] PTR struct GameParameter
  8849 ;;		 -> g1(239), 
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;		None
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      void 
  8854 ;; Registers used:
  8855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8861 ;;      Params:         2       0       0       0       0       0       0
  8862 ;;      Locals:         0       0       0       0       0       0       0
  8863 ;;      Temps:          2       0       0       0       0       0       0
  8864 ;;      Totals:         4       0       0       0       0       0       0
  8865 ;;Total ram usage:        4 bytes
  8866 ;; Hardware stack levels used: 1
  8867 ;; Hardware stack levels required when called: 5
  8868 ;; This function calls:
  8869 ;;		_GameParameters_setBackLight
  8870 ;; This function is called by:
  8871 ;;		_gameControllerController
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text31
  8876  001938                     __ptext31:
  8877                           	callstack 0
  8878  001938                     _backlightController:
  8879                           	callstack 21
  8880  001938                     
  8881                           ;stateMachine/gameController.c: 286: void backlightController(GameParameters* g);stateMa
      +                          chine/gameController.c: 287: {;stateMachine/gameController.c: 288:     if(((g->x)>=50)&&
      +                          ((g->x)<64))
  8882  001938  EE20 F004          	lfsr	2,4
  8883  00193C  5018               	movf	backlightController@g^0,w,c
  8884  00193E  26D9               	addwf	fsr2l,f,c
  8885  001940  5019               	movf	(backlightController@g+1)^0,w,c
  8886  001942  22DA               	addwfc	fsr2h,f,c
  8887  001944  0E01               	movlw	1
  8888  001946  50DB               	movf	plusw2,w,c
  8889  001948  E109               	bnz	u6900
  8890  00194A  0E32               	movlw	50
  8891  00194C  5CDE               	subwf	postinc2,w,c
  8892  00194E  A0D8               	btfss	status,0,c
  8893  001950  EFAC  F00C         	goto	u6901
  8894  001954  EFAE  F00C         	goto	u6900
  8895  001958                     u6901:
  8896  001958  EFCC  F00C         	goto	l9757
  8897  00195C                     u6900:
  8898  00195C  EE20 F004          	lfsr	2,4
  8899  001960  5018               	movf	backlightController@g^0,w,c
  8900  001962  26D9               	addwf	fsr2l,f,c
  8901  001964  5019               	movf	(backlightController@g+1)^0,w,c
  8902  001966  22DA               	addwfc	fsr2h,f,c
  8903  001968  0E01               	movlw	1
  8904  00196A  50DB               	movf	plusw2,w,c
  8905  00196C  E107               	bnz	u6911
  8906  00196E  0E40               	movlw	64
  8907  001970  5CDE               	subwf	postinc2,w,c
  8908  001972  B0D8               	btfsc	status,0,c
  8909  001974  EFBE  F00C         	goto	u6911
  8910  001978  EFC0  F00C         	goto	u6910
  8911  00197C                     u6911:
  8912  00197C  EFCC  F00C         	goto	l9757
  8913  001980                     u6910:
  8914  001980                     
  8915                           ;stateMachine/gameController.c: 289:     {;stateMachine/gameController.c: 290:         G
      +                          ameParameters_setBackLight(g,0);
  8916  001980  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  8917  001984  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  8918  001988  0E00               	movlw	0
  8919  00198A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  8920  00198C  0E00               	movlw	0
  8921  00198E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  8922  001990  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  8923                           
  8924                           ;stateMachine/gameController.c: 291:     }
  8925  001994  EFDC  F00E         	goto	l9823
  8926  001998                     l9757:
  8927  001998  EE20 F004          	lfsr	2,4
  8928  00199C  5018               	movf	backlightController@g^0,w,c
  8929  00199E  26D9               	addwf	fsr2l,f,c
  8930  0019A0  5019               	movf	(backlightController@g+1)^0,w,c
  8931  0019A2  22DA               	addwfc	fsr2h,f,c
  8932  0019A4  0E01               	movlw	1
  8933  0019A6  50DB               	movf	plusw2,w,c
  8934  0019A8  E109               	bnz	u6920
  8935  0019AA  0E40               	movlw	64
  8936  0019AC  5CDE               	subwf	postinc2,w,c
  8937  0019AE  A0D8               	btfss	status,0,c
  8938  0019B0  EFDC  F00C         	goto	u6921
  8939  0019B4  EFDE  F00C         	goto	u6920
  8940  0019B8                     u6921:
  8941  0019B8  EFFC  F00C         	goto	l9763
  8942  0019BC                     u6920:
  8943  0019BC  EE20 F004          	lfsr	2,4
  8944  0019C0  5018               	movf	backlightController@g^0,w,c
  8945  0019C2  26D9               	addwf	fsr2l,f,c
  8946  0019C4  5019               	movf	(backlightController@g+1)^0,w,c
  8947  0019C6  22DA               	addwfc	fsr2h,f,c
  8948  0019C8  0E01               	movlw	1
  8949  0019CA  50DB               	movf	plusw2,w,c
  8950  0019CC  E107               	bnz	u6931
  8951  0019CE  0E4E               	movlw	78
  8952  0019D0  5CDE               	subwf	postinc2,w,c
  8953  0019D2  B0D8               	btfsc	status,0,c
  8954  0019D4  EFEE  F00C         	goto	u6931
  8955  0019D8  EFF0  F00C         	goto	u6930
  8956  0019DC                     u6931:
  8957  0019DC  EFFC  F00C         	goto	l9763
  8958  0019E0                     u6930:
  8959  0019E0                     
  8960                           ;stateMachine/gameController.c: 293:     {;stateMachine/gameController.c: 294:         G
      +                          ameParameters_setBackLight(g,1);
  8961  0019E0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  8962  0019E4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  8963  0019E8  0E00               	movlw	0
  8964  0019EA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  8965  0019EC  0E01               	movlw	1
  8966  0019EE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  8967  0019F0  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  8968                           
  8969                           ;stateMachine/gameController.c: 295:     }
  8970  0019F4  EFDC  F00E         	goto	l9823
  8971  0019F8                     l9763:
  8972  0019F8  EE20 F004          	lfsr	2,4
  8973  0019FC  5018               	movf	backlightController@g^0,w,c
  8974  0019FE  26D9               	addwf	fsr2l,f,c
  8975  001A00  5019               	movf	(backlightController@g+1)^0,w,c
  8976  001A02  22DA               	addwfc	fsr2h,f,c
  8977  001A04  0E01               	movlw	1
  8978  001A06  50DB               	movf	plusw2,w,c
  8979  001A08  E109               	bnz	u6940
  8980  001A0A  0E4E               	movlw	78
  8981  001A0C  5CDE               	subwf	postinc2,w,c
  8982  001A0E  A0D8               	btfss	status,0,c
  8983  001A10  EF0C  F00D         	goto	u6941
  8984  001A14  EF0E  F00D         	goto	u6940
  8985  001A18                     u6941:
  8986  001A18  EF2C  F00D         	goto	l9769
  8987  001A1C                     u6940:
  8988  001A1C  EE20 F004          	lfsr	2,4
  8989  001A20  5018               	movf	backlightController@g^0,w,c
  8990  001A22  26D9               	addwf	fsr2l,f,c
  8991  001A24  5019               	movf	(backlightController@g+1)^0,w,c
  8992  001A26  22DA               	addwfc	fsr2h,f,c
  8993  001A28  0E01               	movlw	1
  8994  001A2A  50DB               	movf	plusw2,w,c
  8995  001A2C  E107               	bnz	u6951
  8996  001A2E  0E5C               	movlw	92
  8997  001A30  5CDE               	subwf	postinc2,w,c
  8998  001A32  B0D8               	btfsc	status,0,c
  8999  001A34  EF1E  F00D         	goto	u6951
  9000  001A38  EF20  F00D         	goto	u6950
  9001  001A3C                     u6951:
  9002  001A3C  EF2C  F00D         	goto	l9769
  9003  001A40                     u6950:
  9004  001A40                     
  9005                           ;stateMachine/gameController.c: 297:     {;stateMachine/gameController.c: 298:         G
      +                          ameParameters_setBackLight(g,2);
  9006  001A40  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9007  001A44  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9008  001A48  0E00               	movlw	0
  9009  001A4A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9010  001A4C  0E02               	movlw	2
  9011  001A4E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9012  001A50  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  9013                           
  9014                           ;stateMachine/gameController.c: 299:     }
  9015  001A54  EFDC  F00E         	goto	l9823
  9016  001A58                     l9769:
  9017  001A58  EE20 F004          	lfsr	2,4
  9018  001A5C  5018               	movf	backlightController@g^0,w,c
  9019  001A5E  26D9               	addwf	fsr2l,f,c
  9020  001A60  5019               	movf	(backlightController@g+1)^0,w,c
  9021  001A62  22DA               	addwfc	fsr2h,f,c
  9022  001A64  0E01               	movlw	1
  9023  001A66  50DB               	movf	plusw2,w,c
  9024  001A68  E109               	bnz	u6960
  9025  001A6A  0E5C               	movlw	92
  9026  001A6C  5CDE               	subwf	postinc2,w,c
  9027  001A6E  A0D8               	btfss	status,0,c
  9028  001A70  EF3C  F00D         	goto	u6961
  9029  001A74  EF3E  F00D         	goto	u6960
  9030  001A78                     u6961:
  9031  001A78  EF5C  F00D         	goto	l9775
  9032  001A7C                     u6960:
  9033  001A7C  EE20 F004          	lfsr	2,4
  9034  001A80  5018               	movf	backlightController@g^0,w,c
  9035  001A82  26D9               	addwf	fsr2l,f,c
  9036  001A84  5019               	movf	(backlightController@g+1)^0,w,c
  9037  001A86  22DA               	addwfc	fsr2h,f,c
  9038  001A88  0E01               	movlw	1
  9039  001A8A  50DB               	movf	plusw2,w,c
  9040  001A8C  E107               	bnz	u6971
  9041  001A8E  0E6A               	movlw	106
  9042  001A90  5CDE               	subwf	postinc2,w,c
  9043  001A92  B0D8               	btfsc	status,0,c
  9044  001A94  EF4E  F00D         	goto	u6971
  9045  001A98  EF50  F00D         	goto	u6970
  9046  001A9C                     u6971:
  9047  001A9C  EF5C  F00D         	goto	l9775
  9048  001AA0                     u6970:
  9049  001AA0                     
  9050                           ;stateMachine/gameController.c: 301:     {;stateMachine/gameController.c: 302:         G
      +                          ameParameters_setBackLight(g,3);
  9051  001AA0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9052  001AA4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9053  001AA8  0E00               	movlw	0
  9054  001AAA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9055  001AAC  0E03               	movlw	3
  9056  001AAE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9057  001AB0  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  9058                           
  9059                           ;stateMachine/gameController.c: 303:     }
  9060  001AB4  EFDC  F00E         	goto	l9823
  9061  001AB8                     l9775:
  9062  001AB8  EE20 F004          	lfsr	2,4
  9063  001ABC  5018               	movf	backlightController@g^0,w,c
  9064  001ABE  26D9               	addwf	fsr2l,f,c
  9065  001AC0  5019               	movf	(backlightController@g+1)^0,w,c
  9066  001AC2  22DA               	addwfc	fsr2h,f,c
  9067  001AC4  0E01               	movlw	1
  9068  001AC6  50DB               	movf	plusw2,w,c
  9069  001AC8  E109               	bnz	u6980
  9070  001ACA  0E6A               	movlw	106
  9071  001ACC  5CDE               	subwf	postinc2,w,c
  9072  001ACE  A0D8               	btfss	status,0,c
  9073  001AD0  EF6C  F00D         	goto	u6981
  9074  001AD4  EF6E  F00D         	goto	u6980
  9075  001AD8                     u6981:
  9076  001AD8  EF8C  F00D         	goto	l9781
  9077  001ADC                     u6980:
  9078  001ADC  EE20 F004          	lfsr	2,4
  9079  001AE0  5018               	movf	backlightController@g^0,w,c
  9080  001AE2  26D9               	addwf	fsr2l,f,c
  9081  001AE4  5019               	movf	(backlightController@g+1)^0,w,c
  9082  001AE6  22DA               	addwfc	fsr2h,f,c
  9083  001AE8  0E01               	movlw	1
  9084  001AEA  50DB               	movf	plusw2,w,c
  9085  001AEC  E107               	bnz	u6991
  9086  001AEE  0E78               	movlw	120
  9087  001AF0  5CDE               	subwf	postinc2,w,c
  9088  001AF2  B0D8               	btfsc	status,0,c
  9089  001AF4  EF7E  F00D         	goto	u6991
  9090  001AF8  EF80  F00D         	goto	u6990
  9091  001AFC                     u6991:
  9092  001AFC  EF8C  F00D         	goto	l9781
  9093  001B00                     u6990:
  9094  001B00                     
  9095                           ;stateMachine/gameController.c: 305:     {;stateMachine/gameController.c: 306:         G
      +                          ameParameters_setBackLight(g,4);
  9096  001B00  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9097  001B04  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9098  001B08  0E00               	movlw	0
  9099  001B0A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9100  001B0C  0E04               	movlw	4
  9101  001B0E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9102  001B10  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  9103                           
  9104                           ;stateMachine/gameController.c: 307:     }
  9105  001B14  EFDC  F00E         	goto	l9823
  9106  001B18                     l9781:
  9107  001B18  EE20 F004          	lfsr	2,4
  9108  001B1C  5018               	movf	backlightController@g^0,w,c
  9109  001B1E  26D9               	addwf	fsr2l,f,c
  9110  001B20  5019               	movf	(backlightController@g+1)^0,w,c
  9111  001B22  22DA               	addwfc	fsr2h,f,c
  9112  001B24  0E01               	movlw	1
  9113  001B26  50DB               	movf	plusw2,w,c
  9114  001B28  E109               	bnz	u7000
  9115  001B2A  0E78               	movlw	120
  9116  001B2C  5CDE               	subwf	postinc2,w,c
  9117  001B2E  A0D8               	btfss	status,0,c
  9118  001B30  EF9C  F00D         	goto	u7001
  9119  001B34  EF9E  F00D         	goto	u7000
  9120  001B38                     u7001:
  9121  001B38  EFBC  F00D         	goto	l9787
  9122  001B3C                     u7000:
  9123  001B3C  EE20 F004          	lfsr	2,4
  9124  001B40  5018               	movf	backlightController@g^0,w,c
  9125  001B42  26D9               	addwf	fsr2l,f,c
  9126  001B44  5019               	movf	(backlightController@g+1)^0,w,c
  9127  001B46  22DA               	addwfc	fsr2h,f,c
  9128  001B48  0E01               	movlw	1
  9129  001B4A  50DB               	movf	plusw2,w,c
  9130  001B4C  E107               	bnz	u7011
  9131  001B4E  0E86               	movlw	134
  9132  001B50  5CDE               	subwf	postinc2,w,c
  9133  001B52  B0D8               	btfsc	status,0,c
  9134  001B54  EFAE  F00D         	goto	u7011
  9135  001B58  EFB0  F00D         	goto	u7010
  9136  001B5C                     u7011:
  9137  001B5C  EFBC  F00D         	goto	l9787
  9138  001B60                     u7010:
  9139  001B60                     
  9140                           ;stateMachine/gameController.c: 309:     {;stateMachine/gameController.c: 310:         G
      +                          ameParameters_setBackLight(g,5);
  9141  001B60  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9142  001B64  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9143  001B68  0E00               	movlw	0
  9144  001B6A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9145  001B6C  0E05               	movlw	5
  9146  001B6E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9147  001B70  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  9148                           
  9149                           ;stateMachine/gameController.c: 311:     }
  9150  001B74  EFDC  F00E         	goto	l9823
  9151  001B78                     l9787:
  9152  001B78  EE20 F004          	lfsr	2,4
  9153  001B7C  5018               	movf	backlightController@g^0,w,c
  9154  001B7E  26D9               	addwf	fsr2l,f,c
  9155  001B80  5019               	movf	(backlightController@g+1)^0,w,c
  9156  001B82  22DA               	addwfc	fsr2h,f,c
  9157  001B84  0E01               	movlw	1
  9158  001B86  50DB               	movf	plusw2,w,c
  9159  001B88  E109               	bnz	u7020
  9160  001B8A  0E86               	movlw	134
  9161  001B8C  5CDE               	subwf	postinc2,w,c
  9162  001B8E  A0D8               	btfss	status,0,c
  9163  001B90  EFCC  F00D         	goto	u7021
  9164  001B94  EFCE  F00D         	goto	u7020
  9165  001B98                     u7021:
  9166  001B98  EFEC  F00D         	goto	l9793
  9167  001B9C                     u7020:
  9168  001B9C  EE20 F004          	lfsr	2,4
  9169  001BA0  5018               	movf	backlightController@g^0,w,c
  9170  001BA2  26D9               	addwf	fsr2l,f,c
  9171  001BA4  5019               	movf	(backlightController@g+1)^0,w,c
  9172  001BA6  22DA               	addwfc	fsr2h,f,c
  9173  001BA8  0E01               	movlw	1
  9174  001BAA  50DB               	movf	plusw2,w,c
  9175  001BAC  E107               	bnz	u7031
  9176  001BAE  0E96               	movlw	150
  9177  001BB0  5CDE               	subwf	postinc2,w,c
  9178  001BB2  B0D8               	btfsc	status,0,c
  9179  001BB4  EFDE  F00D         	goto	u7031
  9180  001BB8  EFE0  F00D         	goto	u7030
  9181  001BBC                     u7031:
  9182  001BBC  EFEC  F00D         	goto	l9793
  9183  001BC0                     u7030:
  9184  001BC0                     
  9185                           ;stateMachine/gameController.c: 313:     {;stateMachine/gameController.c: 314:         G
      +                          ameParameters_setBackLight(g,6);
  9186  001BC0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9187  001BC4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9188  001BC8  0E00               	movlw	0
  9189  001BCA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9190  001BCC  0E06               	movlw	6
  9191  001BCE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9192  001BD0  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  9193                           
  9194                           ;stateMachine/gameController.c: 315:     }
  9195  001BD4  EFDC  F00E         	goto	l9823
  9196  001BD8                     l9793:
  9197  001BD8  EE20 F004          	lfsr	2,4
  9198  001BDC  5018               	movf	backlightController@g^0,w,c
  9199  001BDE  26D9               	addwf	fsr2l,f,c
  9200  001BE0  5019               	movf	(backlightController@g+1)^0,w,c
  9201  001BE2  22DA               	addwfc	fsr2h,f,c
  9202  001BE4  0E01               	movlw	1
  9203  001BE6  50DB               	movf	plusw2,w,c
  9204  001BE8  E109               	bnz	u7040
  9205  001BEA  0E96               	movlw	150
  9206  001BEC  5CDE               	subwf	postinc2,w,c
  9207  001BEE  A0D8               	btfss	status,0,c
  9208  001BF0  EFFC  F00D         	goto	u7041
  9209  001BF4  EFFE  F00D         	goto	u7040
  9210  001BF8                     u7041:
  9211  001BF8  EF1C  F00E         	goto	l9799
  9212  001BFC                     u7040:
  9213  001BFC  EE20 F004          	lfsr	2,4
  9214  001C00  5018               	movf	backlightController@g^0,w,c
  9215  001C02  26D9               	addwf	fsr2l,f,c
  9216  001C04  5019               	movf	(backlightController@g+1)^0,w,c
  9217  001C06  22DA               	addwfc	fsr2h,f,c
  9218  001C08  0E01               	movlw	1
  9219  001C0A  50DB               	movf	plusw2,w,c
  9220  001C0C  E107               	bnz	u7051
  9221  001C0E  0EA4               	movlw	164
  9222  001C10  5CDE               	subwf	postinc2,w,c
  9223  001C12  B0D8               	btfsc	status,0,c
  9224  001C14  EF0E  F00E         	goto	u7051
  9225  001C18  EF10  F00E         	goto	u7050
  9226  001C1C                     u7051:
  9227  001C1C  EF1C  F00E         	goto	l9799
  9228  001C20                     u7050:
  9229  001C20                     
  9230                           ;stateMachine/gameController.c: 317:     {;stateMachine/gameController.c: 318:         G
      +                          ameParameters_setBackLight(g,7);
  9231  001C20  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9232  001C24  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9233  001C28  0E00               	movlw	0
  9234  001C2A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9235  001C2C  0E07               	movlw	7
  9236  001C2E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9237  001C30  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  9238                           
  9239                           ;stateMachine/gameController.c: 319:     }
  9240  001C34  EFDC  F00E         	goto	l9823
  9241  001C38                     l9799:
  9242  001C38  EE20 F004          	lfsr	2,4
  9243  001C3C  5018               	movf	backlightController@g^0,w,c
  9244  001C3E  26D9               	addwf	fsr2l,f,c
  9245  001C40  5019               	movf	(backlightController@g+1)^0,w,c
  9246  001C42  22DA               	addwfc	fsr2h,f,c
  9247  001C44  0E01               	movlw	1
  9248  001C46  50DB               	movf	plusw2,w,c
  9249  001C48  E109               	bnz	u7060
  9250  001C4A  0EA4               	movlw	164
  9251  001C4C  5CDE               	subwf	postinc2,w,c
  9252  001C4E  A0D8               	btfss	status,0,c
  9253  001C50  EF2C  F00E         	goto	u7061
  9254  001C54  EF2E  F00E         	goto	u7060
  9255  001C58                     u7061:
  9256  001C58  EF4C  F00E         	goto	l9805
  9257  001C5C                     u7060:
  9258  001C5C  EE20 F004          	lfsr	2,4
  9259  001C60  5018               	movf	backlightController@g^0,w,c
  9260  001C62  26D9               	addwf	fsr2l,f,c
  9261  001C64  5019               	movf	(backlightController@g+1)^0,w,c
  9262  001C66  22DA               	addwfc	fsr2h,f,c
  9263  001C68  0E01               	movlw	1
  9264  001C6A  50DB               	movf	plusw2,w,c
  9265  001C6C  E107               	bnz	u7071
  9266  001C6E  0EB2               	movlw	178
  9267  001C70  5CDE               	subwf	postinc2,w,c
  9268  001C72  B0D8               	btfsc	status,0,c
  9269  001C74  EF3E  F00E         	goto	u7071
  9270  001C78  EF40  F00E         	goto	u7070
  9271  001C7C                     u7071:
  9272  001C7C  EF4C  F00E         	goto	l9805
  9273  001C80                     u7070:
  9274  001C80                     
  9275                           ;stateMachine/gameController.c: 321:     {;stateMachine/gameController.c: 322:         G
      +                          ameParameters_setBackLight(g,8);
  9276  001C80  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9277  001C84  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9278  001C88  0E00               	movlw	0
  9279  001C8A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9280  001C8C  0E08               	movlw	8
  9281  001C8E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9282  001C90  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  9283                           
  9284                           ;stateMachine/gameController.c: 323:     }
  9285  001C94  EFDC  F00E         	goto	l9823
  9286  001C98                     l9805:
  9287  001C98  EE20 F004          	lfsr	2,4
  9288  001C9C  5018               	movf	backlightController@g^0,w,c
  9289  001C9E  26D9               	addwf	fsr2l,f,c
  9290  001CA0  5019               	movf	(backlightController@g+1)^0,w,c
  9291  001CA2  22DA               	addwfc	fsr2h,f,c
  9292  001CA4  0E01               	movlw	1
  9293  001CA6  50DB               	movf	plusw2,w,c
  9294  001CA8  E109               	bnz	u7080
  9295  001CAA  0EB2               	movlw	178
  9296  001CAC  5CDE               	subwf	postinc2,w,c
  9297  001CAE  A0D8               	btfss	status,0,c
  9298  001CB0  EF5C  F00E         	goto	u7081
  9299  001CB4  EF5E  F00E         	goto	u7080
  9300  001CB8                     u7081:
  9301  001CB8  EF7C  F00E         	goto	l9811
  9302  001CBC                     u7080:
  9303  001CBC  EE20 F004          	lfsr	2,4
  9304  001CC0  5018               	movf	backlightController@g^0,w,c
  9305  001CC2  26D9               	addwf	fsr2l,f,c
  9306  001CC4  5019               	movf	(backlightController@g+1)^0,w,c
  9307  001CC6  22DA               	addwfc	fsr2h,f,c
  9308  001CC8  0E01               	movlw	1
  9309  001CCA  50DB               	movf	plusw2,w,c
  9310  001CCC  E107               	bnz	u7091
  9311  001CCE  0EC0               	movlw	192
  9312  001CD0  5CDE               	subwf	postinc2,w,c
  9313  001CD2  B0D8               	btfsc	status,0,c
  9314  001CD4  EF6E  F00E         	goto	u7091
  9315  001CD8  EF70  F00E         	goto	u7090
  9316  001CDC                     u7091:
  9317  001CDC  EF7C  F00E         	goto	l9811
  9318  001CE0                     u7090:
  9319  001CE0                     
  9320                           ;stateMachine/gameController.c: 325:     {;stateMachine/gameController.c: 326:         G
      +                          ameParameters_setBackLight(g,9);
  9321  001CE0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9322  001CE4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9323  001CE8  0E00               	movlw	0
  9324  001CEA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9325  001CEC  0E09               	movlw	9
  9326  001CEE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9327  001CF0  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  9328                           
  9329                           ;stateMachine/gameController.c: 327:     }
  9330  001CF4  EFDC  F00E         	goto	l9823
  9331  001CF8                     l9811:
  9332  001CF8  EE20 F004          	lfsr	2,4
  9333  001CFC  5018               	movf	backlightController@g^0,w,c
  9334  001CFE  26D9               	addwf	fsr2l,f,c
  9335  001D00  5019               	movf	(backlightController@g+1)^0,w,c
  9336  001D02  22DA               	addwfc	fsr2h,f,c
  9337  001D04  0E01               	movlw	1
  9338  001D06  50DB               	movf	plusw2,w,c
  9339  001D08  E109               	bnz	u7100
  9340  001D0A  0EC0               	movlw	192
  9341  001D0C  5CDE               	subwf	postinc2,w,c
  9342  001D0E  A0D8               	btfss	status,0,c
  9343  001D10  EF8C  F00E         	goto	u7101
  9344  001D14  EF8E  F00E         	goto	u7100
  9345  001D18                     u7101:
  9346  001D18  EFAC  F00E         	goto	l9817
  9347  001D1C                     u7100:
  9348  001D1C  EE20 F004          	lfsr	2,4
  9349  001D20  5018               	movf	backlightController@g^0,w,c
  9350  001D22  26D9               	addwf	fsr2l,f,c
  9351  001D24  5019               	movf	(backlightController@g+1)^0,w,c
  9352  001D26  22DA               	addwfc	fsr2h,f,c
  9353  001D28  0E01               	movlw	1
  9354  001D2A  50DB               	movf	plusw2,w,c
  9355  001D2C  E107               	bnz	u7111
  9356  001D2E  0ECE               	movlw	206
  9357  001D30  5CDE               	subwf	postinc2,w,c
  9358  001D32  B0D8               	btfsc	status,0,c
  9359  001D34  EF9E  F00E         	goto	u7111
  9360  001D38  EFA0  F00E         	goto	u7110
  9361  001D3C                     u7111:
  9362  001D3C  EFAC  F00E         	goto	l9817
  9363  001D40                     u7110:
  9364  001D40                     
  9365                           ;stateMachine/gameController.c: 329:     {;stateMachine/gameController.c: 330:         G
      +                          ameParameters_setBackLight(g,10);
  9366  001D40  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9367  001D44  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9368  001D48  0E00               	movlw	0
  9369  001D4A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9370  001D4C  0E0A               	movlw	10
  9371  001D4E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9372  001D50  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  9373                           
  9374                           ;stateMachine/gameController.c: 331:     }
  9375  001D54  EFDC  F00E         	goto	l9823
  9376  001D58                     l9817:
  9377  001D58  EE20 F004          	lfsr	2,4
  9378  001D5C  5018               	movf	backlightController@g^0,w,c
  9379  001D5E  26D9               	addwf	fsr2l,f,c
  9380  001D60  5019               	movf	(backlightController@g+1)^0,w,c
  9381  001D62  22DA               	addwfc	fsr2h,f,c
  9382  001D64  0E01               	movlw	1
  9383  001D66  50DB               	movf	plusw2,w,c
  9384  001D68  E109               	bnz	u7120
  9385  001D6A  0ECE               	movlw	206
  9386  001D6C  5CDE               	subwf	postinc2,w,c
  9387  001D6E  A0D8               	btfss	status,0,c
  9388  001D70  EFBC  F00E         	goto	u7121
  9389  001D74  EFBE  F00E         	goto	u7120
  9390  001D78                     u7121:
  9391  001D78  EFDC  F00E         	goto	l705
  9392  001D7C                     u7120:
  9393  001D7C  EE20 F004          	lfsr	2,4
  9394  001D80  5018               	movf	backlightController@g^0,w,c
  9395  001D82  26D9               	addwf	fsr2l,f,c
  9396  001D84  5019               	movf	(backlightController@g+1)^0,w,c
  9397  001D86  22DA               	addwfc	fsr2h,f,c
  9398  001D88  0E01               	movlw	1
  9399  001D8A  50DB               	movf	plusw2,w,c
  9400  001D8C  E107               	bnz	u7131
  9401  001D8E  0ED7               	movlw	215
  9402  001D90  5CDE               	subwf	postinc2,w,c
  9403  001D92  B0D8               	btfsc	status,0,c
  9404  001D94  EFCE  F00E         	goto	u7131
  9405  001D98  EFD0  F00E         	goto	u7130
  9406  001D9C                     u7131:
  9407  001D9C  EFDC  F00E         	goto	l705
  9408  001DA0                     u7130:
  9409  001DA0                     
  9410                           ;stateMachine/gameController.c: 333:     {;stateMachine/gameController.c: 334:         G
      +                          ameParameters_setBackLight(g,11);
  9411  001DA0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9412  001DA4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9413  001DA8  0E00               	movlw	0
  9414  001DAA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9415  001DAC  0E0B               	movlw	11
  9416  001DAE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9417  001DB0  EC3F  F030         	call	_GameParameters_setBackLight	;wreg free
  9418  001DB4  EFDC  F00E         	goto	l9823
  9419  001DB8                     l705:
  9420  001DB8                     l9823:
  9421                           
  9422                           ;stateMachine/gameController.c: 336:     g->sldParam.value=g->backlight;
  9423  001DB8  C018  FFD9         	movff	backlightController@g,fsr2l
  9424  001DBC  C019  FFDA         	movff	backlightController@g+1,fsr2h
  9425  001DC0  EE10 F0C1          	lfsr	1,193
  9426  001DC4  5018               	movf	backlightController@g^0,w,c
  9427  001DC6  26E1               	addwf	fsr1l,f,c
  9428  001DC8  5019               	movf	(backlightController@g+1)^0,w,c
  9429  001DCA  22E2               	addwfc	fsr1h,f,c
  9430  001DCC  CFDE FFE6          	movff	postinc2,postinc1
  9431  001DD0  CFDD FFE5          	movff	postdec2,postdec1
  9432  001DD4  0012               	return		;funcret
  9433  001DD6                     __end_of_backlightController:
  9434                           	callstack 0
  9435                           
  9436 ;; *************** function _GameParameters_setBackLight *****************
  9437 ;; Defined at:
  9438 ;;		line 23 in file "class/gameParameters.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9441 ;;		 -> g1(239), 
  9442 ;;  value           2   19[COMRAM] unsigned short 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9454 ;;      Params:         4       0       0       0       0       0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0
  9456 ;;      Temps:          2       0       0       0       0       0       0
  9457 ;;      Totals:         6       0       0       0       0       0       0
  9458 ;;Total ram usage:        6 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 4
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		_backlightController
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text32
  9469  00607E                     __ptext32:
  9470                           	callstack 0
  9471  00607E                     _GameParameters_setBackLight:
  9472                           	callstack 21
  9473  00607E                     
  9474                           ;class/gameParameters.c: 23: void GameParameters_setBackLight(struct GameParameters* s, 
      +                          uint16_t value);class/gameParameters.c: 24: {;class/gameParameters.c: 25:     s->backlig
      +                          ht = value;
  9475  00607E  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9476  006082  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9477  006086  C014  FFDE         	movff	GameParameters_setBackLight@value,postinc2
  9478  00608A  C015  FFDD         	movff	GameParameters_setBackLight@value+1,postdec2
  9479  00608E                     
  9480                           ;class/gameParameters.c: 26:     if(s->backlight==11)
  9481  00608E  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9482  006092  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9483  006096  0E0B               	movlw	11
  9484  006098  18DE               	xorwf	postinc2,w,c
  9485  00609A  10DE               	iorwf	postinc2,w,c
  9486  00609C  A4D8               	btfss	status,2,c
  9487  00609E  EF53  F030         	goto	u6561
  9488  0060A2  EF55  F030         	goto	u6560
  9489  0060A6                     u6561:
  9490  0060A6  EF58  F030         	goto	l9459
  9491  0060AA                     u6560:
  9492  0060AA                     
  9493                           ;class/gameParameters.c: 27:     {;class/gameParameters.c: 28:         CCPR2L = 255;
  9494  0060AA  6867               	setf	103,c	;volatile
  9495                           
  9496                           ;class/gameParameters.c: 29:     }
  9497  0060AC  EF60  F030         	goto	l146
  9498  0060B0                     l9459:
  9499                           
  9500                           ;class/gameParameters.c: 31:     {;class/gameParameters.c: 32:         CCPR2L=(s->backli
      +                          ght)*23;
  9501  0060B0  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9502  0060B4  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9503  0060B8  50DF               	movf	indf2,w,c
  9504  0060BA  0D17               	mullw	23
  9505  0060BC  CFF3 FF67          	movff	prodl,3943	;volatile
  9506  0060C0                     l146:
  9507  0060C0  0012               	return		;funcret
  9508  0060C2                     __end_of_GameParameters_setBackLight:
  9509                           	callstack 0
  9510                           
  9511 ;; *************** function _XF_scheduleTimer *****************
  9512 ;; Defined at:
  9513 ;;		line 96 in file "xf/xf.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  tm              2   18[COMRAM] unsigned short 
  9516 ;;  ev              1   20[COMRAM] unsigned char 
  9517 ;;  inISR           1   21[COMRAM] _Bool 
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;  i               1   22[COMRAM] unsigned char 
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  1    wreg      unsigned char 
  9522 ;; Registers used:
  9523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9529 ;;      Params:         4       0       0       0       0       0       0
  9530 ;;      Locals:         1       0       0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0       0       0
  9532 ;;      Totals:         5       0       0       0       0       0       0
  9533 ;;Total ram usage:        5 bytes
  9534 ;; Hardware stack levels used: 1
  9535 ;; Hardware stack levels required when called: 5
  9536 ;; This function calls:
  9537 ;;		_ENTERCRITICAL
  9538 ;;		_LEAVECRITICAL
  9539 ;; This function is called by:
  9540 ;;		_touchScreenController
  9541 ;;		_gameControllerSM
  9542 ;;		_gameControllerController
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           	psect	text33
  9547  005C0C                     __ptext33:
  9548                           	callstack 0
  9549  005C0C                     _XF_scheduleTimer:
  9550                           	callstack 21
  9551  005C0C                     
  9552                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
  9553  005C0C  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  9554  005C0E  ECB4  F031         	call	_ENTERCRITICAL
  9555  005C12                     
  9556                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
  9557  005C12  0E00               	movlw	0
  9558  005C14  6E17               	movwf	XF_scheduleTimer@i^0,c
  9559  005C16                     l9739:
  9560                           
  9561                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
  9562  005C16  5017               	movf	XF_scheduleTimer@i^0,w,c
  9563  005C18  0D03               	mullw	3
  9564  005C1A  0EB7               	movlw	low (_theXF+2)
  9565  005C1C  24F3               	addwf	243,w,c
  9566  005C1E  6ED9               	movwf	fsr2l,c
  9567  005C20  0E00               	movlw	high (_theXF+2)
  9568  005C22  20F4               	addwfc	prodh,w,c
  9569  005C24  6EDA               	movwf	fsr2h,c
  9570  005C26  50DF               	movf	indf2,w,c
  9571  005C28  A4D8               	btfss	status,2,c
  9572  005C2A  EF19  F02E         	goto	u6881
  9573  005C2E  EF1B  F02E         	goto	u6880
  9574  005C32                     u6881:
  9575  005C32  EF33  F02E         	goto	l9743
  9576  005C36                     u6880:
  9577  005C36                     
  9578                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
  9579  005C36  5017               	movf	XF_scheduleTimer@i^0,w,c
  9580  005C38  0D03               	mullw	3
  9581  005C3A  0EB5               	movlw	low _theXF
  9582  005C3C  24F3               	addwf	243,w,c
  9583  005C3E  6ED9               	movwf	fsr2l,c
  9584  005C40  0E00               	movlw	high _theXF
  9585  005C42  20F4               	addwfc	prodh,w,c
  9586  005C44  6EDA               	movwf	fsr2h,c
  9587  005C46  C013  FFDE         	movff	XF_scheduleTimer@tm,postinc2
  9588  005C4A  C014  FFDD         	movff	XF_scheduleTimer@tm+1,postdec2
  9589                           
  9590                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
  9591  005C4E  5017               	movf	XF_scheduleTimer@i^0,w,c
  9592  005C50  0D03               	mullw	3
  9593  005C52  0EB7               	movlw	low (_theXF+2)
  9594  005C54  24F3               	addwf	243,w,c
  9595  005C56  6ED9               	movwf	fsr2l,c
  9596  005C58  0E00               	movlw	high (_theXF+2)
  9597  005C5A  20F4               	addwfc	prodh,w,c
  9598  005C5C  6EDA               	movwf	fsr2h,c
  9599  005C5E  C015  FFDF         	movff	XF_scheduleTimer@ev,indf2
  9600                           
  9601                           ;xf/xf.c: 107:             break;
  9602  005C62  EF3C  F02E         	goto	l9747
  9603  005C66                     l9743:
  9604                           
  9605                           ;xf/xf.c: 109:     }
  9606  005C66  2A17               	incf	XF_scheduleTimer@i^0,f,c
  9607  005C68  0E07               	movlw	7
  9608  005C6A  6417               	cpfsgt	XF_scheduleTimer@i^0,c
  9609  005C6C  EF3A  F02E         	goto	u6891
  9610  005C70  EF3C  F02E         	goto	u6890
  9611  005C74                     u6891:
  9612  005C74  EF0B  F02E         	goto	l9739
  9613  005C78                     u6890:
  9614  005C78                     l9747:
  9615                           
  9616                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
  9617  005C78  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  9618  005C7A  ECA9  F031         	call	_LEAVECRITICAL
  9619  005C7E  0012               	return		;funcret
  9620  005C80                     __end_of_XF_scheduleTimer:
  9621                           	callstack 0
  9622                           
  9623 ;; *************** function _LCD_InSlider *****************
  9624 ;; Defined at:
  9625 ;;		line 546 in file "libraries/lcd_highlevel.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;  slider          2   17[COMRAM] PTR struct .
  9628 ;;		 -> g1(239), 
  9629 ;;  posX            2   19[COMRAM] unsigned short 
  9630 ;;  posY            2   21[COMRAM] unsigned short 
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;		None
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  1    wreg      unsigned char 
  9635 ;; Registers used:
  9636 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9642 ;;      Params:         6       0       0       0       0       0       0
  9643 ;;      Locals:         0       0       0       0       0       0       0
  9644 ;;      Temps:          4       0       0       0       0       0       0
  9645 ;;      Totals:        10       0       0       0       0       0       0
  9646 ;;Total ram usage:       10 bytes
  9647 ;; Hardware stack levels used: 1
  9648 ;; Hardware stack levels required when called: 4
  9649 ;; This function calls:
  9650 ;;		Nothing
  9651 ;; This function is called by:
  9652 ;;		_gameControllerController
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656                           	psect	text34
  9657  004D7E                     __ptext34:
  9658                           	callstack 0
  9659  004D7E                     _LCD_InSlider:
  9660                           	callstack 22
  9661  004D7E                     
  9662                           ;libraries/lcd_highlevel.c: 546: uint8_t LCD_InSlider(sld_t * slider, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 547: {;libraries/lcd_highlevel.c: 549:   if(posX 
      +                          < slider->posX)
  9663  004D7E  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
  9664  004D82  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
  9665  004D86  50DE               	movf	postinc2,w,c
  9666  004D88  5C14               	subwf	LCD_InSlider@posX^0,w,c
  9667  004D8A  50DE               	movf	postinc2,w,c
  9668  004D8C  5815               	subwfb	(LCD_InSlider@posX+1)^0,w,c
  9669  004D8E  B0D8               	btfsc	status,0,c
  9670  004D90  EFCC  F026         	goto	u6841
  9671  004D94  EFCE  F026         	goto	u6840
  9672  004D98                     u6841:
  9673  004D98  EFD1  F026         	goto	l9709
  9674  004D9C                     u6840:
  9675  004D9C                     l9705:
  9676                           
  9677                           ;libraries/lcd_highlevel.c: 550:   {;libraries/lcd_highlevel.c: 551:     return 0;
  9678  004D9C  0E00               	movlw	0
  9679  004D9E  EF2D  F027         	goto	l271
  9680  004DA2                     l9709:
  9681                           
  9682                           ;libraries/lcd_highlevel.c: 554:   if(posX > (slider->posX + slider->width))
  9683  004DA2  EE20 F004          	lfsr	2,4
  9684  004DA6  5012               	movf	LCD_InSlider@slider^0,w,c
  9685  004DA8  26D9               	addwf	fsr2l,f,c
  9686  004DAA  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9687  004DAC  22DA               	addwfc	fsr2h,f,c
  9688  004DAE  CFDE F018          	movff	postinc2,??_LCD_InSlider
  9689  004DB2  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
  9690  004DB6  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
  9691  004DBA  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
  9692  004DBE  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
  9693  004DC2  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
  9694  004DC6  5018               	movf	??_LCD_InSlider^0,w,c
  9695  004DC8  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
  9696  004DCA  5019               	movf	(??_LCD_InSlider+1)^0,w,c
  9697  004DCC  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
  9698  004DCE  5014               	movf	LCD_InSlider@posX^0,w,c
  9699  004DD0  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
  9700  004DD2  5015               	movf	(LCD_InSlider@posX+1)^0,w,c
  9701  004DD4  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
  9702  004DD6  B0D8               	btfsc	status,0,c
  9703  004DD8  EFF0  F026         	goto	u6851
  9704  004DDC  EFF2  F026         	goto	u6850
  9705  004DE0                     u6851:
  9706  004DE0  EFF4  F026         	goto	l9715
  9707  004DE4                     u6850:
  9708  004DE4  EFCE  F026         	goto	l9705
  9709  004DE8                     l9715:
  9710                           
  9711                           ;libraries/lcd_highlevel.c: 559:   if(posY < slider->posY)
  9712  004DE8  EE20 F002          	lfsr	2,2
  9713  004DEC  5012               	movf	LCD_InSlider@slider^0,w,c
  9714  004DEE  26D9               	addwf	fsr2l,f,c
  9715  004DF0  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9716  004DF2  22DA               	addwfc	fsr2h,f,c
  9717  004DF4  50DE               	movf	postinc2,w,c
  9718  004DF6  5C16               	subwf	LCD_InSlider@posY^0,w,c
  9719  004DF8  50DE               	movf	postinc2,w,c
  9720  004DFA  5817               	subwfb	(LCD_InSlider@posY+1)^0,w,c
  9721  004DFC  B0D8               	btfsc	status,0,c
  9722  004DFE  EF03  F027         	goto	u6861
  9723  004E02  EF05  F027         	goto	u6860
  9724  004E06                     u6861:
  9725  004E06  EF07  F027         	goto	l9721
  9726  004E0A                     u6860:
  9727  004E0A  EFCE  F026         	goto	l9705
  9728  004E0E                     l9721:
  9729                           
  9730                           ;libraries/lcd_highlevel.c: 564:   if(posY > (slider->posY + slider->height))
  9731  004E0E  EE20 F006          	lfsr	2,6
  9732  004E12  5012               	movf	LCD_InSlider@slider^0,w,c
  9733  004E14  26D9               	addwf	fsr2l,f,c
  9734  004E16  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9735  004E18  22DA               	addwfc	fsr2h,f,c
  9736  004E1A  CFDE F018          	movff	postinc2,??_LCD_InSlider
  9737  004E1E  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
  9738  004E22  EE20 F002          	lfsr	2,2
  9739  004E26  5012               	movf	LCD_InSlider@slider^0,w,c
  9740  004E28  26D9               	addwf	fsr2l,f,c
  9741  004E2A  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9742  004E2C  22DA               	addwfc	fsr2h,f,c
  9743  004E2E  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
  9744  004E32  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
  9745  004E36  5018               	movf	??_LCD_InSlider^0,w,c
  9746  004E38  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
  9747  004E3A  5019               	movf	(??_LCD_InSlider+1)^0,w,c
  9748  004E3C  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
  9749  004E3E  5016               	movf	LCD_InSlider@posY^0,w,c
  9750  004E40  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
  9751  004E42  5017               	movf	(LCD_InSlider@posY+1)^0,w,c
  9752  004E44  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
  9753  004E46  B0D8               	btfsc	status,0,c
  9754  004E48  EF28  F027         	goto	u6871
  9755  004E4C  EF2A  F027         	goto	u6870
  9756  004E50                     u6871:
  9757  004E50  EF2C  F027         	goto	l9727
  9758  004E54                     u6870:
  9759  004E54  EFCE  F026         	goto	l9705
  9760  004E58                     l9727:
  9761                           
  9762                           ;libraries/lcd_highlevel.c: 568:   return 1;
  9763  004E58  0E01               	movlw	1
  9764  004E5A                     l271:
  9765  004E5A  0012               	return		;funcret
  9766  004E5C                     __end_of_LCD_InSlider:
  9767                           	callstack 0
  9768                           
  9769 ;; *************** function _GameParameters_init *****************
  9770 ;; Defined at:
  9771 ;;		line 3 in file "class/gameParameters.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  s               2   42[COMRAM] PTR struct GameParameter
  9774 ;;		 -> g1(239), 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9786 ;;      Params:         2       0       0       0       0       0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0
  9788 ;;      Temps:          0       0       0       0       0       0       0
  9789 ;;      Totals:         2       0       0       0       0       0       0
  9790 ;;Total ram usage:        2 bytes
  9791 ;; Hardware stack levels used: 1
  9792 ;; Hardware stack levels required when called: 5
  9793 ;; This function calls:
  9794 ;;		_Ball_init
  9795 ;;		_LCD_ButtonCreate
  9796 ;;		_LCD_SliderCreate
  9797 ;;		_Paddle_init
  9798 ;;		_Score_init
  9799 ;; This function is called by:
  9800 ;;		_Factory_init
  9801 ;;		_gameControllerController
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           	psect	text35
  9806  002220                     __ptext35:
  9807                           	callstack 0
  9808  002220                     _GameParameters_init:
  9809                           	callstack 21
  9810  002220                     
  9811                           ;class/gameParameters.c: 3: void GameParameters_init(struct GameParameters* s);class/gam
      +                          eParameters.c: 4: {;class/gameParameters.c: 5:     s->backlight = 11;
  9812  002220  C02B  FFD9         	movff	GameParameters_init@s,fsr2l
  9813  002224  C02C  FFDA         	movff	GameParameters_init@s+1,fsr2h
  9814  002228  0E0B               	movlw	11
  9815  00222A  6EDE               	movwf	postinc2,c
  9816  00222C  0E00               	movlw	0
  9817  00222E  6EDD               	movwf	postdec2,c
  9818  002230                     
  9819                           ;class/gameParameters.c: 6:     CCPR2L = 255;
  9820  002230  6867               	setf	103,c	;volatile
  9821  002232                     
  9822                           ;class/gameParameters.c: 7:     s->player = 0;
  9823  002232  EE20 F002          	lfsr	2,2
  9824  002236  502B               	movf	GameParameters_init@s^0,w,c
  9825  002238  26D9               	addwf	fsr2l,f,c
  9826  00223A  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9827  00223C  22DA               	addwfc	fsr2h,f,c
  9828  00223E  0E00               	movlw	0
  9829  002240  6EDE               	movwf	postinc2,c
  9830  002242  0E00               	movlw	0
  9831  002244  6EDD               	movwf	postdec2,c
  9832  002246                     
  9833                           ;class/gameParameters.c: 8:     s->x=0;
  9834  002246  EE20 F004          	lfsr	2,4
  9835  00224A  502B               	movf	GameParameters_init@s^0,w,c
  9836  00224C  26D9               	addwf	fsr2l,f,c
  9837  00224E  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9838  002250  22DA               	addwfc	fsr2h,f,c
  9839  002252  0E00               	movlw	0
  9840  002254  6EDE               	movwf	postinc2,c
  9841  002256  0E00               	movlw	0
  9842  002258  6EDD               	movwf	postdec2,c
  9843  00225A                     
  9844                           ;class/gameParameters.c: 9:     s->y=0;
  9845  00225A  EE20 F006          	lfsr	2,6
  9846  00225E  502B               	movf	GameParameters_init@s^0,w,c
  9847  002260  26D9               	addwf	fsr2l,f,c
  9848  002262  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9849  002264  22DA               	addwfc	fsr2h,f,c
  9850  002266  0E00               	movlw	0
  9851  002268  6EDE               	movwf	postinc2,c
  9852  00226A  0E00               	movlw	0
  9853  00226C  6EDD               	movwf	postdec2,c
  9854  00226E                     
  9855                           ;class/gameParameters.c: 10:     Score_init(&s->s1);
  9856  00226E  0EE9               	movlw	233
  9857  002270  242B               	addwf	GameParameters_init@s^0,w,c
  9858  002272  6E12               	movwf	Score_init@s^0,c
  9859  002274  0E00               	movlw	0
  9860  002276  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9861  002278  6E13               	movwf	(Score_init@s+1)^0,c
  9862  00227A  EC32  F031         	call	_Score_init	;wreg free
  9863  00227E                     
  9864                           ;class/gameParameters.c: 11:     Ball_init(&(s->b));
  9865  00227E  0EC9               	movlw	201
  9866  002280  242B               	addwf	GameParameters_init@s^0,w,c
  9867  002282  6E12               	movwf	Ball_init@b^0,c
  9868  002284  0E00               	movlw	0
  9869  002286  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9870  002288  6E13               	movwf	(Ball_init@b+1)^0,c
  9871  00228A  ECCB  F02D         	call	_Ball_init	;wreg free
  9872  00228E                     
  9873                           ;class/gameParameters.c: 12:     Paddle_init(&(s->p1),0);
  9874  00228E  0ED5               	movlw	213
  9875  002290  242B               	addwf	GameParameters_init@s^0,w,c
  9876  002292  6E12               	movwf	Paddle_init@p^0,c
  9877  002294  0E00               	movlw	0
  9878  002296  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9879  002298  6E13               	movwf	(Paddle_init@p+1)^0,c
  9880  00229A  0E00               	movlw	0
  9881  00229C  6E15               	movwf	(Paddle_init@team+1)^0,c
  9882  00229E  0E00               	movlw	0
  9883  0022A0  6E14               	movwf	Paddle_init@team^0,c
  9884  0022A2  EC14  F02B         	call	_Paddle_init	;wreg free
  9885  0022A6                     
  9886                           ;class/gameParameters.c: 13:     Paddle_init(&(s->p2),1);
  9887  0022A6  0EDF               	movlw	223
  9888  0022A8  242B               	addwf	GameParameters_init@s^0,w,c
  9889  0022AA  6E12               	movwf	Paddle_init@p^0,c
  9890  0022AC  0E00               	movlw	0
  9891  0022AE  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9892  0022B0  6E13               	movwf	(Paddle_init@p+1)^0,c
  9893  0022B2  0E00               	movlw	0
  9894  0022B4  6E15               	movwf	(Paddle_init@team+1)^0,c
  9895  0022B6  0E01               	movlw	1
  9896  0022B8  6E14               	movwf	Paddle_init@team^0,c
  9897  0022BA  EC14  F02B         	call	_Paddle_init	;wreg free
  9898  0022BE                     
  9899                           ;class/gameParameters.c: 14:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"Parametres",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s
      +                          ->btnParam),1);
  9900  0022BE  0E00               	movlw	0
  9901  0022C0  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  9902  0022C2  0E82               	movlw	130
  9903  0022C4  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  9904  0022C6  0E00               	movlw	0
  9905  0022C8  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  9906  0022CA  0E32               	movlw	50
  9907  0022CC  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  9908  0022CE  0E00               	movlw	0
  9909  0022D0  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  9910  0022D2  0E5A               	movlw	90
  9911  0022D4  6E16               	movwf	LCD_ButtonCreate@width^0,c
  9912  0022D6  0E00               	movlw	0
  9913  0022D8  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  9914  0022DA  0E14               	movlw	20
  9915  0022DC  6E18               	movwf	LCD_ButtonCreate@height^0,c
  9916  0022DE  0EFF               	movlw	255
  9917  0022E0  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  9918  0022E2  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  9919  0022E4  0E00               	movlw	0
  9920  0022E6  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  9921  0022E8  0E00               	movlw	0
  9922  0022EA  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  9923  0022EC  0EAB               	movlw	low STR_4
  9924  0022EE  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  9925  0022F0  0E7F               	movlw	high STR_4
  9926  0022F2  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  9927  0022F4  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  9928  0022F6  6E20               	movwf	LCD_ButtonCreate@font^0,c
  9929  0022F8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  9930  0022FA  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  9931  0022FC  0E00               	movlw	0
  9932  0022FE  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  9933  002300  0E00               	movlw	0
  9934  002302  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  9935  002304  0E00               	movlw	0
  9936  002306  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  9937  002308  0E00               	movlw	0
  9938  00230A  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  9939  00230C  0E00               	movlw	0
  9940  00230E  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  9941  002310  0E00               	movlw	0
  9942  002312  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  9943  002314  0E08               	movlw	8
  9944  002316  242B               	addwf	GameParameters_init@s^0,w,c
  9945  002318  6E28               	movwf	LCD_ButtonCreate@button^0,c
  9946  00231A  0E00               	movlw	0
  9947  00231C  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9948  00231E  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  9949  002320  0E01               	movlw	1
  9950  002322  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  9951  002324  ECE2  F024         	call	_LCD_ButtonCreate	;wreg free
  9952  002328                     
  9953                           ;class/gameParameters.c: 15:     LCD_ButtonCreate(10,250,70,20,0b1111111111111111,0b0000
      +                          000000000000,"1 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->
      +                          btnOnePlayer),2);
  9954  002328  0E00               	movlw	0
  9955  00232A  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  9956  00232C  0E0A               	movlw	10
  9957  00232E  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  9958  002330  0E00               	movlw	0
  9959  002332  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  9960  002334  0EFA               	movlw	250
  9961  002336  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  9962  002338  0E00               	movlw	0
  9963  00233A  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  9964  00233C  0E46               	movlw	70
  9965  00233E  6E16               	movwf	LCD_ButtonCreate@width^0,c
  9966  002340  0E00               	movlw	0
  9967  002342  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  9968  002344  0E14               	movlw	20
  9969  002346  6E18               	movwf	LCD_ButtonCreate@height^0,c
  9970  002348  0EFF               	movlw	255
  9971  00234A  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  9972  00234C  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  9973  00234E  0E00               	movlw	0
  9974  002350  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  9975  002352  0E00               	movlw	0
  9976  002354  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  9977  002356  0EC9               	movlw	low STR_5
  9978  002358  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  9979  00235A  0E7F               	movlw	high STR_5
  9980  00235C  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  9981  00235E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  9982  002360  6E20               	movwf	LCD_ButtonCreate@font^0,c
  9983  002362  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  9984  002364  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  9985  002366  0E00               	movlw	0
  9986  002368  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  9987  00236A  0E00               	movlw	0
  9988  00236C  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  9989  00236E  0E00               	movlw	0
  9990  002370  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  9991  002372  0E00               	movlw	0
  9992  002374  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  9993  002376  0E00               	movlw	0
  9994  002378  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  9995  00237A  0E00               	movlw	0
  9996  00237C  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  9997  00237E  0E20               	movlw	32
  9998  002380  242B               	addwf	GameParameters_init@s^0,w,c
  9999  002382  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10000  002384  0E00               	movlw	0
 10001  002386  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10002  002388  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10003  00238A  0E02               	movlw	2
 10004  00238C  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10005  00238E  ECE2  F024         	call	_LCD_ButtonCreate	;wreg free
 10006  002392                     
 10007                           ;class/gameParameters.c: 16:     LCD_ButtonCreate(150,250,70,20,0b1111111111111111,0b000
      +                          0000000000000,"2 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnTwoPlayer),3);
 10008  002392  0E00               	movlw	0
 10009  002394  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10010  002396  0E96               	movlw	150
 10011  002398  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10012  00239A  0E00               	movlw	0
 10013  00239C  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10014  00239E  0EFA               	movlw	250
 10015  0023A0  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10016  0023A2  0E00               	movlw	0
 10017  0023A4  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10018  0023A6  0E46               	movlw	70
 10019  0023A8  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10020  0023AA  0E00               	movlw	0
 10021  0023AC  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10022  0023AE  0E14               	movlw	20
 10023  0023B0  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10024  0023B2  0EFF               	movlw	255
 10025  0023B4  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10026  0023B6  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10027  0023B8  0E00               	movlw	0
 10028  0023BA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10029  0023BC  0E00               	movlw	0
 10030  0023BE  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10031  0023C0  0ED2               	movlw	low STR_6
 10032  0023C2  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10033  0023C4  0E7F               	movlw	high STR_6
 10034  0023C6  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10035  0023C8  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10036  0023CA  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10037  0023CC  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10038  0023CE  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10039  0023D0  0E00               	movlw	0
 10040  0023D2  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10041  0023D4  0E00               	movlw	0
 10042  0023D6  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10043  0023D8  0E00               	movlw	0
 10044  0023DA  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10045  0023DC  0E00               	movlw	0
 10046  0023DE  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10047  0023E0  0E00               	movlw	0
 10048  0023E2  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10049  0023E4  0E00               	movlw	0
 10050  0023E6  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10051  0023E8  0E38               	movlw	56
 10052  0023EA  242B               	addwf	GameParameters_init@s^0,w,c
 10053  0023EC  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10054  0023EE  0E00               	movlw	0
 10055  0023F0  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10056  0023F2  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10057  0023F4  0E03               	movlw	3
 10058  0023F6  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10059  0023F8  ECE2  F024         	call	_LCD_ButtonCreate	;wreg free
 10060  0023FC                     
 10061                           ;class/gameParameters.c: 17:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"QUITTER",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->b
      +                          tnLeaveParam),4);
 10062  0023FC  0E00               	movlw	0
 10063  0023FE  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10064  002400  0E82               	movlw	130
 10065  002402  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10066  002404  0E00               	movlw	0
 10067  002406  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10068  002408  0E32               	movlw	50
 10069  00240A  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10070  00240C  0E00               	movlw	0
 10071  00240E  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10072  002410  0E5A               	movlw	90
 10073  002412  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10074  002414  0E00               	movlw	0
 10075  002416  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10076  002418  0E14               	movlw	20
 10077  00241A  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10078  00241C  0EFF               	movlw	255
 10079  00241E  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10080  002420  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10081  002422  0E00               	movlw	0
 10082  002424  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10083  002426  0E00               	movlw	0
 10084  002428  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10085  00242A  0EE3               	movlw	low STR_7
 10086  00242C  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10087  00242E  0E7F               	movlw	high STR_7
 10088  002430  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10089  002432  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10090  002434  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10091  002436  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10092  002438  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10093  00243A  0E00               	movlw	0
 10094  00243C  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10095  00243E  0E00               	movlw	0
 10096  002440  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10097  002442  0E00               	movlw	0
 10098  002444  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10099  002446  0E00               	movlw	0
 10100  002448  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10101  00244A  0E00               	movlw	0
 10102  00244C  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10103  00244E  0E00               	movlw	0
 10104  002450  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10105  002452  0E50               	movlw	80
 10106  002454  242B               	addwf	GameParameters_init@s^0,w,c
 10107  002456  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10108  002458  0E00               	movlw	0
 10109  00245A  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10110  00245C  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10111  00245E  0E04               	movlw	4
 10112  002460  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10113  002462  ECE2  F024         	call	_LCD_ButtonCreate	;wreg free
 10114  002466                     
 10115                           ;class/gameParameters.c: 18:     LCD_ButtonCreate(10,220,70,50,0b0000000000000000,0b1111
      +                          111111111111,"<--",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnLe
      +                          ft),5);
 10116  002466  0E00               	movlw	0
 10117  002468  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10118  00246A  0E0A               	movlw	10
 10119  00246C  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10120  00246E  0E00               	movlw	0
 10121  002470  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10122  002472  0EDC               	movlw	220
 10123  002474  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10124  002476  0E00               	movlw	0
 10125  002478  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10126  00247A  0E46               	movlw	70
 10127  00247C  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10128  00247E  0E00               	movlw	0
 10129  002480  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10130  002482  0E32               	movlw	50
 10131  002484  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10132  002486  0E00               	movlw	0
 10133  002488  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10134  00248A  0E00               	movlw	0
 10135  00248C  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10136  00248E  0EFF               	movlw	255
 10137  002490  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10138  002492  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10139  002494  0EF7               	movlw	low STR_8
 10140  002496  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10141  002498  0E7F               	movlw	high STR_8
 10142  00249A  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10143  00249C  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10144  00249E  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10145  0024A0  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10146  0024A2  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10147  0024A4  0E00               	movlw	0
 10148  0024A6  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10149  0024A8  0E00               	movlw	0
 10150  0024AA  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10151  0024AC  0E00               	movlw	0
 10152  0024AE  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10153  0024B0  0E00               	movlw	0
 10154  0024B2  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10155  0024B4  0E00               	movlw	0
 10156  0024B6  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10157  0024B8  0E00               	movlw	0
 10158  0024BA  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10159  0024BC  0E68               	movlw	104
 10160  0024BE  242B               	addwf	GameParameters_init@s^0,w,c
 10161  0024C0  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10162  0024C2  0E00               	movlw	0
 10163  0024C4  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10164  0024C6  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10165  0024C8  0E05               	movlw	5
 10166  0024CA  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10167  0024CC  ECE2  F024         	call	_LCD_ButtonCreate	;wreg free
 10168  0024D0                     
 10169                           ;class/gameParameters.c: 19:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"-->",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnR
      +                          ight),6);
 10170  0024D0  0E00               	movlw	0
 10171  0024D2  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10172  0024D4  0E96               	movlw	150
 10173  0024D6  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10174  0024D8  0E00               	movlw	0
 10175  0024DA  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10176  0024DC  0EDC               	movlw	220
 10177  0024DE  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10178  0024E0  0E00               	movlw	0
 10179  0024E2  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10180  0024E4  0E46               	movlw	70
 10181  0024E6  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10182  0024E8  0E00               	movlw	0
 10183  0024EA  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10184  0024EC  0E32               	movlw	50
 10185  0024EE  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10186  0024F0  0E00               	movlw	0
 10187  0024F2  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10188  0024F4  0E00               	movlw	0
 10189  0024F6  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10190  0024F8  0EFF               	movlw	255
 10191  0024FA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10192  0024FC  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10193  0024FE  0EFB               	movlw	low STR_9
 10194  002500  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10195  002502  0E7F               	movlw	high STR_9
 10196  002504  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10197  002506  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10198  002508  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10199  00250A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10200  00250C  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10201  00250E  0E00               	movlw	0
 10202  002510  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10203  002512  0E00               	movlw	0
 10204  002514  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10205  002516  0E00               	movlw	0
 10206  002518  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10207  00251A  0E00               	movlw	0
 10208  00251C  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10209  00251E  0E00               	movlw	0
 10210  002520  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10211  002522  0E00               	movlw	0
 10212  002524  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10213  002526  0E98               	movlw	152
 10214  002528  242B               	addwf	GameParameters_init@s^0,w,c
 10215  00252A  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10216  00252C  0E00               	movlw	0
 10217  00252E  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10218  002530  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10219  002532  0E06               	movlw	6
 10220  002534  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10221  002536  ECE2  F024         	call	_LCD_ButtonCreate	;wreg free
 10222  00253A                     
 10223                           ;class/gameParameters.c: 20:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"New Game",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnNewGame),6);
 10224  00253A  0E00               	movlw	0
 10225  00253C  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10226  00253E  0E96               	movlw	150
 10227  002540  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10228  002542  0E00               	movlw	0
 10229  002544  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10230  002546  0EDC               	movlw	220
 10231  002548  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10232  00254A  0E00               	movlw	0
 10233  00254C  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10234  00254E  0E46               	movlw	70
 10235  002550  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10236  002552  0E00               	movlw	0
 10237  002554  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10238  002556  0E32               	movlw	50
 10239  002558  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10240  00255A  0E00               	movlw	0
 10241  00255C  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10242  00255E  0E00               	movlw	0
 10243  002560  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10244  002562  0EFF               	movlw	255
 10245  002564  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10246  002566  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10247  002568  0EC0               	movlw	low STR_10
 10248  00256A  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10249  00256C  0E7F               	movlw	high STR_10
 10250  00256E  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10251  002570  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10252  002572  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10253  002574  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10254  002576  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10255  002578  0E00               	movlw	0
 10256  00257A  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10257  00257C  0E00               	movlw	0
 10258  00257E  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10259  002580  0E00               	movlw	0
 10260  002582  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10261  002584  0E00               	movlw	0
 10262  002586  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10263  002588  0E00               	movlw	0
 10264  00258A  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10265  00258C  0E00               	movlw	0
 10266  00258E  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10267  002590  0E80               	movlw	128
 10268  002592  242B               	addwf	GameParameters_init@s^0,w,c
 10269  002594  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10270  002596  0E00               	movlw	0
 10271  002598  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10272  00259A  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10273  00259C  0E06               	movlw	6
 10274  00259E  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10275  0025A0  ECE2  F024         	call	_LCD_ButtonCreate	;wreg free
 10276  0025A4                     
 10277                           ;class/gameParameters.c: 21:     LCD_SliderCreate(50,100,165,20,0b0000000000000000,0b111
      +                          1111111111111,0b1111100000000000,0,11,((void*)0),&(s->sldParam));
 10278  0025A4  0E00               	movlw	0
 10279  0025A6  6E13               	movwf	(LCD_SliderCreate@posX+1)^0,c
 10280  0025A8  0E32               	movlw	50
 10281  0025AA  6E12               	movwf	LCD_SliderCreate@posX^0,c
 10282  0025AC  0E00               	movlw	0
 10283  0025AE  6E15               	movwf	(LCD_SliderCreate@posY+1)^0,c
 10284  0025B0  0E64               	movlw	100
 10285  0025B2  6E14               	movwf	LCD_SliderCreate@posY^0,c
 10286  0025B4  0E00               	movlw	0
 10287  0025B6  6E17               	movwf	(LCD_SliderCreate@width+1)^0,c
 10288  0025B8  0EA5               	movlw	165
 10289  0025BA  6E16               	movwf	LCD_SliderCreate@width^0,c
 10290  0025BC  0E00               	movlw	0
 10291  0025BE  6E19               	movwf	(LCD_SliderCreate@height+1)^0,c
 10292  0025C0  0E14               	movlw	20
 10293  0025C2  6E18               	movwf	LCD_SliderCreate@height^0,c
 10294  0025C4  0E00               	movlw	0
 10295  0025C6  6E1B               	movwf	(LCD_SliderCreate@sldColor+1)^0,c
 10296  0025C8  0E00               	movlw	0
 10297  0025CA  6E1A               	movwf	LCD_SliderCreate@sldColor^0,c
 10298  0025CC  0EFF               	movlw	255
 10299  0025CE  6E1D               	movwf	(LCD_SliderCreate@bgColor+1)^0,c
 10300  0025D0  681C               	setf	LCD_SliderCreate@bgColor^0,c
 10301  0025D2  0EF8               	movlw	248
 10302  0025D4  6E1F               	movwf	(LCD_SliderCreate@borderColor+1)^0,c
 10303  0025D6  0E00               	movlw	0
 10304  0025D8  6E1E               	movwf	LCD_SliderCreate@borderColor^0,c
 10305  0025DA  0E00               	movlw	0
 10306  0025DC  6E21               	movwf	(LCD_SliderCreate@cursorWidth+1)^0,c
 10307  0025DE  0E00               	movlw	0
 10308  0025E0  6E20               	movwf	LCD_SliderCreate@cursorWidth^0,c
 10309  0025E2  0E00               	movlw	0
 10310  0025E4  6E23               	movwf	(LCD_SliderCreate@steps+1)^0,c
 10311  0025E6  0E0B               	movlw	11
 10312  0025E8  6E22               	movwf	LCD_SliderCreate@steps^0,c
 10313  0025EA  0E00               	movlw	0
 10314  0025EC  6E24               	movwf	LCD_SliderCreate@fpPress^0,c
 10315  0025EE  0E00               	movlw	0
 10316  0025F0  6E25               	movwf	(LCD_SliderCreate@fpPress+1)^0,c
 10317  0025F2  0EB0               	movlw	176
 10318  0025F4  242B               	addwf	GameParameters_init@s^0,w,c
 10319  0025F6  6E26               	movwf	LCD_SliderCreate@slider^0,c
 10320  0025F8  0E00               	movlw	0
 10321  0025FA  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10322  0025FC  6E27               	movwf	(LCD_SliderCreate@slider+1)^0,c
 10323  0025FE  ECD9  F025         	call	_LCD_SliderCreate	;wreg free
 10324  002602  0012               	return		;funcret
 10325  002604                     __end_of_GameParameters_init:
 10326                           	callstack 0
 10327                           
 10328 ;; *************** function _Score_init *****************
 10329 ;; Defined at:
 10330 ;;		line 3 in file "class/score.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;  s               2   17[COMRAM] PTR struct Score
 10333 ;;		 -> g1(239), 
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      void 
 10338 ;; Registers used:
 10339 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10345 ;;      Params:         2       0       0       0       0       0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0
 10347 ;;      Temps:          0       0       0       0       0       0       0
 10348 ;;      Totals:         2       0       0       0       0       0       0
 10349 ;;Total ram usage:        2 bytes
 10350 ;; Hardware stack levels used: 1
 10351 ;; Hardware stack levels required when called: 4
 10352 ;; This function calls:
 10353 ;;		Nothing
 10354 ;; This function is called by:
 10355 ;;		_GameParameters_init
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359                           	psect	text36
 10360  006264                     __ptext36:
 10361                           	callstack 0
 10362  006264                     _Score_init:
 10363                           	callstack 21
 10364  006264                     
 10365                           ;class/score.c: 3: void Score_init(struct Score* s);class/score.c: 4: {;class/score.c: 5
      +                          :     s->homeScore = 0;
 10366  006264  C012  FFD9         	movff	Score_init@s,fsr2l
 10367  006268  C013  FFDA         	movff	Score_init@s+1,fsr2h
 10368  00626C  0E00               	movlw	0
 10369  00626E  6EDE               	movwf	postinc2,c
 10370  006270  0E00               	movlw	0
 10371  006272  6EDD               	movwf	postdec2,c
 10372  006274                     
 10373                           ;class/score.c: 6:     s->awayScore = 0;
 10374  006274  EE20 F002          	lfsr	2,2
 10375  006278  5012               	movf	Score_init@s^0,w,c
 10376  00627A  26D9               	addwf	fsr2l,f,c
 10377  00627C  5013               	movf	(Score_init@s+1)^0,w,c
 10378  00627E  22DA               	addwfc	fsr2h,f,c
 10379  006280  0E00               	movlw	0
 10380  006282  6EDE               	movwf	postinc2,c
 10381  006284  0E00               	movlw	0
 10382  006286  6EDD               	movwf	postdec2,c
 10383  006288  0012               	return		;funcret
 10384  00628A                     __end_of_Score_init:
 10385                           	callstack 0
 10386                           
 10387 ;; *************** function _Paddle_init *****************
 10388 ;; Defined at:
 10389 ;;		line 6 in file "class/paddle.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;  p               2   17[COMRAM] PTR struct Paddle
 10392 ;;		 -> g1(239), 
 10393 ;;  team            2   19[COMRAM] unsigned short 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  1    wreg      void 
 10398 ;; Registers used:
 10399 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10405 ;;      Params:         4       0       0       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0       0       0
 10408 ;;      Totals:         4       0       0       0       0       0       0
 10409 ;;Total ram usage:        4 bytes
 10410 ;; Hardware stack levels used: 1
 10411 ;; Hardware stack levels required when called: 4
 10412 ;; This function calls:
 10413 ;;		Nothing
 10414 ;; This function is called by:
 10415 ;;		_GameParameters_init
 10416 ;; This function uses a non-reentrant model
 10417 ;;
 10418                           
 10419                           	psect	text37
 10420  005628                     __ptext37:
 10421                           	callstack 0
 10422  005628                     _Paddle_init:
 10423                           	callstack 21
 10424  005628                     
 10425                           ;class/paddle.c: 6: void Paddle_init(struct Paddle* p,uint16_t team);class/paddle.c: 7: 
      +                          {;class/paddle.c: 8:     p->oldx=0;
 10426  005628  EE20 F004          	lfsr	2,4
 10427  00562C  5012               	movf	Paddle_init@p^0,w,c
 10428  00562E  26D9               	addwf	fsr2l,f,c
 10429  005630  5013               	movf	(Paddle_init@p+1)^0,w,c
 10430  005632  22DA               	addwfc	fsr2h,f,c
 10431  005634  0E00               	movlw	0
 10432  005636  6EDE               	movwf	postinc2,c
 10433  005638  0E00               	movlw	0
 10434  00563A  6EDD               	movwf	postdec2,c
 10435                           
 10436                           ;class/paddle.c: 9:     p->oldy=0;
 10437  00563C  EE20 F006          	lfsr	2,6
 10438  005640  5012               	movf	Paddle_init@p^0,w,c
 10439  005642  26D9               	addwf	fsr2l,f,c
 10440  005644  5013               	movf	(Paddle_init@p+1)^0,w,c
 10441  005646  22DA               	addwfc	fsr2h,f,c
 10442  005648  0E00               	movlw	0
 10443  00564A  6EDE               	movwf	postinc2,c
 10444  00564C  0E00               	movlw	0
 10445  00564E  6EDD               	movwf	postdec2,c
 10446  005650                     
 10447                           ;class/paddle.c: 10:     if(team)
 10448  005650  5014               	movf	Paddle_init@team^0,w,c
 10449  005652  1015               	iorwf	(Paddle_init@team+1)^0,w,c
 10450  005654  B4D8               	btfsc	status,2,c
 10451  005656  EF2F  F02B         	goto	u6501
 10452  00565A  EF31  F02B         	goto	u6500
 10453  00565E                     u6501:
 10454  00565E  EF4F  F02B         	goto	l9291
 10455  005662                     u6500:
 10456  005662                     
 10457                           ;class/paddle.c: 11:     {;class/paddle.c: 12:         p->x = 90;
 10458  005662  C012  FFD9         	movff	Paddle_init@p,fsr2l
 10459  005666  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
 10460  00566A  0E5A               	movlw	90
 10461  00566C  6EDE               	movwf	postinc2,c
 10462  00566E  0E00               	movlw	0
 10463  005670  6EDD               	movwf	postdec2,c
 10464  005672                     
 10465                           ;class/paddle.c: 13:         p->y = 20;
 10466  005672  EE20 F002          	lfsr	2,2
 10467  005676  5012               	movf	Paddle_init@p^0,w,c
 10468  005678  26D9               	addwf	fsr2l,f,c
 10469  00567A  5013               	movf	(Paddle_init@p+1)^0,w,c
 10470  00567C  22DA               	addwfc	fsr2h,f,c
 10471  00567E  0E14               	movlw	20
 10472  005680  6EDE               	movwf	postinc2,c
 10473  005682  0E00               	movlw	0
 10474  005684  6EDD               	movwf	postdec2,c
 10475  005686                     
 10476                           ;class/paddle.c: 14:         p->color = 0b1111111111111111;
 10477  005686  EE20 F008          	lfsr	2,8
 10478  00568A  5012               	movf	Paddle_init@p^0,w,c
 10479  00568C  26D9               	addwf	fsr2l,f,c
 10480  00568E  5013               	movf	(Paddle_init@p+1)^0,w,c
 10481  005690  22DA               	addwfc	fsr2h,f,c
 10482  005692  0EFF               	movlw	255
 10483  005694  6EDE               	movwf	postinc2,c
 10484  005696  0EFF               	movlw	255
 10485  005698  6EDD               	movwf	postdec2,c
 10486                           
 10487                           ;class/paddle.c: 15:     }
 10488  00569A  EF6B  F02B         	goto	l18
 10489  00569E                     l9291:
 10490                           
 10491                           ;class/paddle.c: 17:     {;class/paddle.c: 18:         p->x = 90;
 10492  00569E  C012  FFD9         	movff	Paddle_init@p,fsr2l
 10493  0056A2  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
 10494  0056A6  0E5A               	movlw	90
 10495  0056A8  6EDE               	movwf	postinc2,c
 10496  0056AA  0E00               	movlw	0
 10497  0056AC  6EDD               	movwf	postdec2,c
 10498  0056AE                     
 10499                           ;class/paddle.c: 19:         p->y = 280;
 10500  0056AE  EE20 F002          	lfsr	2,2
 10501  0056B2  5012               	movf	Paddle_init@p^0,w,c
 10502  0056B4  26D9               	addwf	fsr2l,f,c
 10503  0056B6  5013               	movf	(Paddle_init@p+1)^0,w,c
 10504  0056B8  22DA               	addwfc	fsr2h,f,c
 10505  0056BA  0E18               	movlw	24
 10506  0056BC  6EDE               	movwf	postinc2,c
 10507  0056BE  0E01               	movlw	1
 10508  0056C0  6EDD               	movwf	postdec2,c
 10509  0056C2                     
 10510                           ;class/paddle.c: 20:         p->color = 0b1111111111111111;
 10511  0056C2  EE20 F008          	lfsr	2,8
 10512  0056C6  5012               	movf	Paddle_init@p^0,w,c
 10513  0056C8  26D9               	addwf	fsr2l,f,c
 10514  0056CA  5013               	movf	(Paddle_init@p+1)^0,w,c
 10515  0056CC  22DA               	addwfc	fsr2h,f,c
 10516  0056CE  0EFF               	movlw	255
 10517  0056D0  6EDE               	movwf	postinc2,c
 10518  0056D2  0EFF               	movlw	255
 10519  0056D4  6EDD               	movwf	postdec2,c
 10520  0056D6                     l18:
 10521  0056D6  0012               	return		;funcret
 10522  0056D8                     __end_of_Paddle_init:
 10523                           	callstack 0
 10524                           
 10525 ;; *************** function _LCD_SliderCreate *****************
 10526 ;; Defined at:
 10527 ;;		line 291 in file "libraries/lcd_highlevel.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;  posX            2   17[COMRAM] unsigned short 
 10530 ;;  posY            2   19[COMRAM] unsigned short 
 10531 ;;  width           2   21[COMRAM] unsigned short 
 10532 ;;  height          2   23[COMRAM] unsigned short 
 10533 ;;  sldColor        2   25[COMRAM] unsigned short 
 10534 ;;  bgColor         2   27[COMRAM] unsigned short 
 10535 ;;  borderColor     2   29[COMRAM] unsigned short 
 10536 ;;  cursorWidth     2   31[COMRAM] unsigned short 
 10537 ;;  steps           2   33[COMRAM] unsigned short 
 10538 ;;  fpPress         2   35[COMRAM] PTR FTN()void 
 10539 ;;		 -> Absolute function(1), 
 10540 ;;  slider          2   37[COMRAM] PTR struct .
 10541 ;;		 -> g1(239), 
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;		None
 10544 ;; Return value:  Size  Location     Type
 10545 ;;                  1    wreg      void 
 10546 ;; Registers used:
 10547 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10553 ;;      Params:        22       0       0       0       0       0       0
 10554 ;;      Locals:         0       0       0       0       0       0       0
 10555 ;;      Temps:          0       0       0       0       0       0       0
 10556 ;;      Totals:        22       0       0       0       0       0       0
 10557 ;;Total ram usage:       22 bytes
 10558 ;; Hardware stack levels used: 1
 10559 ;; Hardware stack levels required when called: 4
 10560 ;; This function calls:
 10561 ;;		Nothing
 10562 ;; This function is called by:
 10563 ;;		_GameParameters_init
 10564 ;; This function uses a non-reentrant model
 10565 ;;
 10566                           
 10567                           	psect	text38
 10568  004BB2                     __ptext38:
 10569                           	callstack 0
 10570  004BB2                     _LCD_SliderCreate:
 10571                           	callstack 21
 10572  004BB2                     
 10573                           ;libraries/lcd_highlevel.c: 291: void LCD_SliderCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 292:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 293:                       uint16_t sldColor, uint16_t bgColor, u
      +                          int16_t borderColor,;libraries/lcd_highlevel.c: 294:                       uint16_t curs
      +                          orWidth,;libraries/lcd_highlevel.c: 295:                       uint16_t steps,;libraries
      +                          /lcd_highlevel.c: 296:                       void (* fpPress)(),;libraries/lcd_highlevel
      +                          .c: 297:                       sld_t * slider)
 10574  004BB2  C026  FFD9         	movff	LCD_SliderCreate@slider,fsr2l
 10575  004BB6  C027  FFDA         	movff	LCD_SliderCreate@slider+1,fsr2h
 10576  004BBA  C012  FFDE         	movff	LCD_SliderCreate@posX,postinc2
 10577  004BBE  C013  FFDD         	movff	LCD_SliderCreate@posX+1,postdec2
 10578  004BC2                     
 10579                           ;libraries/lcd_highlevel.c: 300:   slider->posY = posY;
 10580  004BC2  EE20 F002          	lfsr	2,2
 10581  004BC6  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10582  004BC8  26D9               	addwf	fsr2l,f,c
 10583  004BCA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10584  004BCC  22DA               	addwfc	fsr2h,f,c
 10585  004BCE  C014  FFDE         	movff	LCD_SliderCreate@posY,postinc2
 10586  004BD2  C015  FFDD         	movff	LCD_SliderCreate@posY+1,postdec2
 10587  004BD6                     
 10588                           ;libraries/lcd_highlevel.c: 301:   slider->height = height;
 10589  004BD6  EE20 F006          	lfsr	2,6
 10590  004BDA  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10591  004BDC  26D9               	addwf	fsr2l,f,c
 10592  004BDE  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10593  004BE0  22DA               	addwfc	fsr2h,f,c
 10594  004BE2  C018  FFDE         	movff	LCD_SliderCreate@height,postinc2
 10595  004BE6  C019  FFDD         	movff	LCD_SliderCreate@height+1,postdec2
 10596  004BEA                     
 10597                           ;libraries/lcd_highlevel.c: 302:   slider->width = width;
 10598  004BEA  EE20 F004          	lfsr	2,4
 10599  004BEE  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10600  004BF0  26D9               	addwf	fsr2l,f,c
 10601  004BF2  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10602  004BF4  22DA               	addwfc	fsr2h,f,c
 10603  004BF6  C016  FFDE         	movff	LCD_SliderCreate@width,postinc2
 10604  004BFA  C017  FFDD         	movff	LCD_SliderCreate@width+1,postdec2
 10605  004BFE                     
 10606                           ;libraries/lcd_highlevel.c: 303:   slider->sldColor = sldColor;
 10607  004BFE  EE20 F008          	lfsr	2,8
 10608  004C02  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10609  004C04  26D9               	addwf	fsr2l,f,c
 10610  004C06  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10611  004C08  22DA               	addwfc	fsr2h,f,c
 10612  004C0A  C01A  FFDE         	movff	LCD_SliderCreate@sldColor,postinc2
 10613  004C0E  C01B  FFDD         	movff	LCD_SliderCreate@sldColor+1,postdec2
 10614  004C12                     
 10615                           ;libraries/lcd_highlevel.c: 304:   slider->bgColor = bgColor;
 10616  004C12  EE20 F00A          	lfsr	2,10
 10617  004C16  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10618  004C18  26D9               	addwf	fsr2l,f,c
 10619  004C1A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10620  004C1C  22DA               	addwfc	fsr2h,f,c
 10621  004C1E  C01C  FFDE         	movff	LCD_SliderCreate@bgColor,postinc2
 10622  004C22  C01D  FFDD         	movff	LCD_SliderCreate@bgColor+1,postdec2
 10623  004C26                     
 10624                           ;libraries/lcd_highlevel.c: 305:   slider->borderColor = borderColor;
 10625  004C26  EE20 F00C          	lfsr	2,12
 10626  004C2A  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10627  004C2C  26D9               	addwf	fsr2l,f,c
 10628  004C2E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10629  004C30  22DA               	addwfc	fsr2h,f,c
 10630  004C32  C01E  FFDE         	movff	LCD_SliderCreate@borderColor,postinc2
 10631  004C36  C01F  FFDD         	movff	LCD_SliderCreate@borderColor+1,postdec2
 10632  004C3A                     
 10633                           ;libraries/lcd_highlevel.c: 306:   slider->cursorWidth = cursorWidth;
 10634  004C3A  EE20 F00E          	lfsr	2,14
 10635  004C3E  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10636  004C40  26D9               	addwf	fsr2l,f,c
 10637  004C42  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10638  004C44  22DA               	addwfc	fsr2h,f,c
 10639  004C46  C020  FFDE         	movff	LCD_SliderCreate@cursorWidth,postinc2
 10640  004C4A  C021  FFDD         	movff	LCD_SliderCreate@cursorWidth+1,postdec2
 10641  004C4E                     
 10642                           ;libraries/lcd_highlevel.c: 307:   slider->fpPress = fpPress;
 10643  004C4E  EE20 F017          	lfsr	2,23
 10644  004C52  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10645  004C54  26D9               	addwf	fsr2l,f,c
 10646  004C56  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10647  004C58  22DA               	addwfc	fsr2h,f,c
 10648  004C5A  C024  FFDE         	movff	LCD_SliderCreate@fpPress,postinc2
 10649  004C5E  C025  FFDD         	movff	LCD_SliderCreate@fpPress+1,postdec2
 10650  004C62                     
 10651                           ;libraries/lcd_highlevel.c: 308:   slider->steps = steps;
 10652  004C62  EE20 F015          	lfsr	2,21
 10653  004C66  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10654  004C68  26D9               	addwf	fsr2l,f,c
 10655  004C6A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10656  004C6C  22DA               	addwfc	fsr2h,f,c
 10657  004C6E  C022  FFDE         	movff	LCD_SliderCreate@steps,postinc2
 10658  004C72  C023  FFDD         	movff	LCD_SliderCreate@steps+1,postdec2
 10659  004C76                     
 10660                           ;libraries/lcd_highlevel.c: 309:   slider->value = 0;
 10661  004C76  EE20 F011          	lfsr	2,17
 10662  004C7A  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10663  004C7C  26D9               	addwf	fsr2l,f,c
 10664  004C7E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10665  004C80  22DA               	addwfc	fsr2h,f,c
 10666  004C82  0E00               	movlw	0
 10667  004C84  6EDE               	movwf	postinc2,c
 10668  004C86  0E00               	movlw	0
 10669  004C88  6EDD               	movwf	postdec2,c
 10670  004C8A                     
 10671                           ;libraries/lcd_highlevel.c: 310:   slider->oldValue = 0;
 10672  004C8A  EE20 F013          	lfsr	2,19
 10673  004C8E  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10674  004C90  26D9               	addwf	fsr2l,f,c
 10675  004C92  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10676  004C94  22DA               	addwfc	fsr2h,f,c
 10677  004C96  0E00               	movlw	0
 10678  004C98  6EDE               	movwf	postinc2,c
 10679  004C9A  0E00               	movlw	0
 10680  004C9C  6EDD               	movwf	postdec2,c
 10681  004C9E  0012               	return		;funcret
 10682  004CA0                     __end_of_LCD_SliderCreate:
 10683                           	callstack 0
 10684                           
 10685 ;; *************** function _LCD_ButtonCreate *****************
 10686 ;; Defined at:
 10687 ;;		line 396 in file "libraries/lcd_highlevel.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  posX            2   17[COMRAM] unsigned short 
 10690 ;;  posY            2   19[COMRAM] unsigned short 
 10691 ;;  width           2   21[COMRAM] unsigned short 
 10692 ;;  height          2   23[COMRAM] unsigned short 
 10693 ;;  txtColor        2   25[COMRAM] unsigned short 
 10694 ;;  bgColor         2   27[COMRAM] unsigned short 
 10695 ;;  textOrBmp       2   29[COMRAM] PTR const unsigned char 
 10696 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 10697 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 10698 ;;  font            2   31[COMRAM] PTR struct .
 10699 ;;		 -> arialNarrow_12ptFontInfo(7), 
 10700 ;;  fpPress         2   33[COMRAM] PTR FTN(unsigned char ,)
 10701 ;;		 -> Absolute function(1), 
 10702 ;;  fpReleased      2   35[COMRAM] PTR FTN(unsigned char ,)
 10703 ;;		 -> Absolute function(1), 
 10704 ;;  fpOut           2   37[COMRAM] PTR FTN(unsigned char ,)
 10705 ;;		 -> Absolute function(1), 
 10706 ;;  button          2   39[COMRAM] PTR struct .
 10707 ;;		 -> g1(239), 
 10708 ;;  index           1   41[COMRAM] unsigned char 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10720 ;;      Params:        25       0       0       0       0       0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0
 10723 ;;      Totals:        25       0       0       0       0       0       0
 10724 ;;Total ram usage:       25 bytes
 10725 ;; Hardware stack levels used: 1
 10726 ;; Hardware stack levels required when called: 4
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_GameParameters_init
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734                           	psect	text39
 10735  0049C4                     __ptext39:
 10736                           	callstack 0
 10737  0049C4                     _LCD_ButtonCreate:
 10738                           	callstack 21
 10739  0049C4                     
 10740                           ;libraries/lcd_highlevel.c: 396: void LCD_ButtonCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 397:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 398:                       uint16_t txtColor, uint16_t bgColor,;l
      +                          ibraries/lcd_highlevel.c: 399:                       const uint8_t * textOrBmp, FONT_INF
      +                          O * font,;libraries/lcd_highlevel.c: 400:                       void (*fpPress)(uint8_t)
      +                          , void (* fpReleased)(uint8_t), void (* fpOut)(uint8_t),;libraries/lcd_highlevel.c: 401:
      +                                                 btn_t * button,
 10741  0049C4  C028  FFD9         	movff	LCD_ButtonCreate@button,fsr2l
 10742  0049C8  C029  FFDA         	movff	LCD_ButtonCreate@button+1,fsr2h
 10743  0049CC  C012  FFDE         	movff	LCD_ButtonCreate@posX,postinc2
 10744  0049D0  C013  FFDD         	movff	LCD_ButtonCreate@posX+1,postdec2
 10745  0049D4                     
 10746                           ;libraries/lcd_highlevel.c: 405:   button->posY = posY;
 10747  0049D4  EE20 F002          	lfsr	2,2
 10748  0049D8  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10749  0049DA  26D9               	addwf	fsr2l,f,c
 10750  0049DC  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10751  0049DE  22DA               	addwfc	fsr2h,f,c
 10752  0049E0  C014  FFDE         	movff	LCD_ButtonCreate@posY,postinc2
 10753  0049E4  C015  FFDD         	movff	LCD_ButtonCreate@posY+1,postdec2
 10754  0049E8                     
 10755                           ;libraries/lcd_highlevel.c: 406:   button->height = height;
 10756  0049E8  EE20 F006          	lfsr	2,6
 10757  0049EC  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10758  0049EE  26D9               	addwf	fsr2l,f,c
 10759  0049F0  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10760  0049F2  22DA               	addwfc	fsr2h,f,c
 10761  0049F4  C018  FFDE         	movff	LCD_ButtonCreate@height,postinc2
 10762  0049F8  C019  FFDD         	movff	LCD_ButtonCreate@height+1,postdec2
 10763  0049FC                     
 10764                           ;libraries/lcd_highlevel.c: 407:   button->width = width;
 10765  0049FC  EE20 F004          	lfsr	2,4
 10766  004A00  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10767  004A02  26D9               	addwf	fsr2l,f,c
 10768  004A04  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10769  004A06  22DA               	addwfc	fsr2h,f,c
 10770  004A08  C016  FFDE         	movff	LCD_ButtonCreate@width,postinc2
 10771  004A0C  C017  FFDD         	movff	LCD_ButtonCreate@width+1,postdec2
 10772  004A10                     
 10773                           ;libraries/lcd_highlevel.c: 408:   button->txtColor = txtColor;
 10774  004A10  EE20 F008          	lfsr	2,8
 10775  004A14  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10776  004A16  26D9               	addwf	fsr2l,f,c
 10777  004A18  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10778  004A1A  22DA               	addwfc	fsr2h,f,c
 10779  004A1C  C01A  FFDE         	movff	LCD_ButtonCreate@txtColor,postinc2
 10780  004A20  C01B  FFDD         	movff	LCD_ButtonCreate@txtColor+1,postdec2
 10781  004A24                     
 10782                           ;libraries/lcd_highlevel.c: 409:   button->bgColor = bgColor;
 10783  004A24  EE20 F00A          	lfsr	2,10
 10784  004A28  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10785  004A2A  26D9               	addwf	fsr2l,f,c
 10786  004A2C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10787  004A2E  22DA               	addwfc	fsr2h,f,c
 10788  004A30  C01C  FFDE         	movff	LCD_ButtonCreate@bgColor,postinc2
 10789  004A34  C01D  FFDD         	movff	LCD_ButtonCreate@bgColor+1,postdec2
 10790  004A38                     
 10791                           ;libraries/lcd_highlevel.c: 410:   button->text = textOrBmp;
 10792  004A38  EE20 F00C          	lfsr	2,12
 10793  004A3C  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10794  004A3E  26D9               	addwf	fsr2l,f,c
 10795  004A40  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10796  004A42  22DA               	addwfc	fsr2h,f,c
 10797  004A44  C01E  FFDE         	movff	LCD_ButtonCreate@textOrBmp,postinc2
 10798  004A48  C01F  FFDD         	movff	LCD_ButtonCreate@textOrBmp+1,postdec2
 10799  004A4C                     
 10800                           ;libraries/lcd_highlevel.c: 411:   button->font = font;
 10801  004A4C  EE20 F00E          	lfsr	2,14
 10802  004A50  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10803  004A52  26D9               	addwf	fsr2l,f,c
 10804  004A54  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10805  004A56  22DA               	addwfc	fsr2h,f,c
 10806  004A58  C020  FFDE         	movff	LCD_ButtonCreate@font,postinc2
 10807  004A5C  C021  FFDD         	movff	LCD_ButtonCreate@font+1,postdec2
 10808  004A60                     
 10809                           ;libraries/lcd_highlevel.c: 412:   button->fpPress = fpPress;
 10810  004A60  EE20 F011          	lfsr	2,17
 10811  004A64  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10812  004A66  26D9               	addwf	fsr2l,f,c
 10813  004A68  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10814  004A6A  22DA               	addwfc	fsr2h,f,c
 10815  004A6C  C022  FFDE         	movff	LCD_ButtonCreate@fpPress,postinc2
 10816  004A70  C023  FFDD         	movff	LCD_ButtonCreate@fpPress+1,postdec2
 10817  004A74                     
 10818                           ;libraries/lcd_highlevel.c: 413:   button->fpReleased = fpReleased;
 10819  004A74  EE20 F013          	lfsr	2,19
 10820  004A78  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10821  004A7A  26D9               	addwf	fsr2l,f,c
 10822  004A7C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10823  004A7E  22DA               	addwfc	fsr2h,f,c
 10824  004A80  C024  FFDE         	movff	LCD_ButtonCreate@fpReleased,postinc2
 10825  004A84  C025  FFDD         	movff	LCD_ButtonCreate@fpReleased+1,postdec2
 10826  004A88                     
 10827                           ;libraries/lcd_highlevel.c: 414:   button->fpOut = fpOut;
 10828  004A88  EE20 F015          	lfsr	2,21
 10829  004A8C  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10830  004A8E  26D9               	addwf	fsr2l,f,c
 10831  004A90  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10832  004A92  22DA               	addwfc	fsr2h,f,c
 10833  004A94  C026  FFDE         	movff	LCD_ButtonCreate@fpOut,postinc2
 10834  004A98  C027  FFDD         	movff	LCD_ButtonCreate@fpOut+1,postdec2
 10835  004A9C                     
 10836                           ;libraries/lcd_highlevel.c: 415:   button->index = index;
 10837  004A9C  EE20 F017          	lfsr	2,23
 10838  004AA0  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10839  004AA2  26D9               	addwf	fsr2l,f,c
 10840  004AA4  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10841  004AA6  22DA               	addwfc	fsr2h,f,c
 10842  004AA8  C02A  FFDF         	movff	LCD_ButtonCreate@index,indf2
 10843  004AAC                     
 10844                           ;libraries/lcd_highlevel.c: 416:   button->pressed = 0;
 10845  004AAC  EE20 F010          	lfsr	2,16
 10846  004AB0  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10847  004AB2  26D9               	addwf	fsr2l,f,c
 10848  004AB4  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10849  004AB6  22DA               	addwfc	fsr2h,f,c
 10850  004AB8  0E00               	movlw	0
 10851  004ABA  6EDF               	movwf	indf2,c
 10852  004ABC  0012               	return		;funcret
 10853  004ABE                     __end_of_LCD_ButtonCreate:
 10854                           	callstack 0
 10855                           
 10856 ;; *************** function _Ball_init *****************
 10857 ;; Defined at:
 10858 ;;		line 3 in file "class/ball.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;  b               2   17[COMRAM] PTR struct Ball
 10861 ;;		 -> g1(239), 
 10862 ;; Auto vars:     Size  Location     Type
 10863 ;;		None
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  1    wreg      void 
 10866 ;; Registers used:
 10867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10868 ;; Tracked objects:
 10869 ;;		On entry : 0/0
 10870 ;;		On exit  : 0/0
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10873 ;;      Params:         2       0       0       0       0       0       0
 10874 ;;      Locals:         0       0       0       0       0       0       0
 10875 ;;      Temps:          0       0       0       0       0       0       0
 10876 ;;      Totals:         2       0       0       0       0       0       0
 10877 ;;Total ram usage:        2 bytes
 10878 ;; Hardware stack levels used: 1
 10879 ;; Hardware stack levels required when called: 4
 10880 ;; This function calls:
 10881 ;;		Nothing
 10882 ;; This function is called by:
 10883 ;;		_GameParameters_init
 10884 ;; This function uses a non-reentrant model
 10885 ;;
 10886                           
 10887                           	psect	text40
 10888  005B96                     __ptext40:
 10889                           	callstack 0
 10890  005B96                     _Ball_init:
 10891                           	callstack 21
 10892  005B96                     
 10893                           ;class/ball.c: 3: void Ball_init(struct Ball* b);class/ball.c: 4: {;class/ball.c: 5:    
      +                           b->x = 90;
 10894  005B96  C012  FFD9         	movff	Ball_init@b,fsr2l
 10895  005B9A  C013  FFDA         	movff	Ball_init@b+1,fsr2h
 10896  005B9E  0E5A               	movlw	90
 10897  005BA0  6EDE               	movwf	postinc2,c
 10898  005BA2  0E00               	movlw	0
 10899  005BA4  6EDD               	movwf	postdec2,c
 10900  005BA6                     
 10901                           ;class/ball.c: 6:     b->y = 150;
 10902  005BA6  EE20 F002          	lfsr	2,2
 10903  005BAA  5012               	movf	Ball_init@b^0,w,c
 10904  005BAC  26D9               	addwf	fsr2l,f,c
 10905  005BAE  5013               	movf	(Ball_init@b+1)^0,w,c
 10906  005BB0  22DA               	addwfc	fsr2h,f,c
 10907  005BB2  0E96               	movlw	150
 10908  005BB4  6EDE               	movwf	postinc2,c
 10909  005BB6  0E00               	movlw	0
 10910  005BB8  6EDD               	movwf	postdec2,c
 10911  005BBA                     
 10912                           ;class/ball.c: 7:     b->oldx=20;
 10913  005BBA  EE20 F004          	lfsr	2,4
 10914  005BBE  5012               	movf	Ball_init@b^0,w,c
 10915  005BC0  26D9               	addwf	fsr2l,f,c
 10916  005BC2  5013               	movf	(Ball_init@b+1)^0,w,c
 10917  005BC4  22DA               	addwfc	fsr2h,f,c
 10918  005BC6  0E14               	movlw	20
 10919  005BC8  6EDE               	movwf	postinc2,c
 10920  005BCA  0E00               	movlw	0
 10921  005BCC  6EDD               	movwf	postdec2,c
 10922  005BCE                     
 10923                           ;class/ball.c: 8:     b->oldy=20;
 10924  005BCE  EE20 F006          	lfsr	2,6
 10925  005BD2  5012               	movf	Ball_init@b^0,w,c
 10926  005BD4  26D9               	addwf	fsr2l,f,c
 10927  005BD6  5013               	movf	(Ball_init@b+1)^0,w,c
 10928  005BD8  22DA               	addwfc	fsr2h,f,c
 10929  005BDA  0E14               	movlw	20
 10930  005BDC  6EDE               	movwf	postinc2,c
 10931  005BDE  0E00               	movlw	0
 10932  005BE0  6EDD               	movwf	postdec2,c
 10933  005BE2                     
 10934                           ;class/ball.c: 9:     b->dx = 0;
 10935  005BE2  EE20 F008          	lfsr	2,8
 10936  005BE6  5012               	movf	Ball_init@b^0,w,c
 10937  005BE8  26D9               	addwf	fsr2l,f,c
 10938  005BEA  5013               	movf	(Ball_init@b+1)^0,w,c
 10939  005BEC  22DA               	addwfc	fsr2h,f,c
 10940  005BEE  0E00               	movlw	0
 10941  005BF0  6EDE               	movwf	postinc2,c
 10942  005BF2  0E00               	movlw	0
 10943  005BF4  6EDD               	movwf	postdec2,c
 10944  005BF6                     
 10945                           ;class/ball.c: 10:     b->dy = 1;
 10946  005BF6  EE20 F00A          	lfsr	2,10
 10947  005BFA  5012               	movf	Ball_init@b^0,w,c
 10948  005BFC  26D9               	addwf	fsr2l,f,c
 10949  005BFE  5013               	movf	(Ball_init@b+1)^0,w,c
 10950  005C00  22DA               	addwfc	fsr2h,f,c
 10951  005C02  0E01               	movlw	1
 10952  005C04  6EDE               	movwf	postinc2,c
 10953  005C06  0E00               	movlw	0
 10954  005C08  6EDD               	movwf	postdec2,c
 10955  005C0A  0012               	return		;funcret
 10956  005C0C                     __end_of_Ball_init:
 10957                           	callstack 0
 10958                           
 10959 ;; *************** function _displaySM *****************
 10960 ;; Defined at:
 10961 ;;		line 26 in file "stateMachine/display.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  ev              1    wreg     unsigned char 
 10964 ;;  g               2   67[BANK0 ] PTR struct GameParameter
 10965 ;;		 -> g1(239), 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;  ev              1   71[BANK0 ] unsigned char 
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  1    wreg      void 
 10970 ;; Registers used:
 10971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10977 ;;      Params:         0       2       0       0       0       0       0
 10978 ;;      Locals:         0       1       0       0       0       0       0
 10979 ;;      Temps:          0       2       0       0       0       0       0
 10980 ;;      Totals:         0       5       0       0       0       0       0
 10981 ;;Total ram usage:        5 bytes
 10982 ;; Hardware stack levels used: 1
 10983 ;; Hardware stack levels required when called: 14
 10984 ;; This function calls:
 10985 ;;		_Menu_inGameDraw
 10986 ;;		_displayController
 10987 ;; This function is called by:
 10988 ;;		_Factory_exec
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           	psect	text41
 10993  0048C4                     __ptext41:
 10994                           	callstack 0
 10995  0048C4                     _displaySM:
 10996                           	callstack 15
 10997                           
 10998                           ;incstack = 0
 10999                           ;displaySM@ev stored from wreg
 11000  0048C4  0100               	movlb	0	; () banked
 11001  0048C6  6FA7               	movwf	displaySM@ev& (0+255),b
 11002  0048C8                     
 11003                           ;stateMachine/display.c: 26: void displaySM(Event ev, GameParameters* g);stateMachine/di
      +                          splay.c: 27: {;stateMachine/display.c: 28:    switch(displayState)
 11004  0048C8  EFC3  F024         	goto	l10375
 11005  0048CC                     l10337:
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;stateMachine/display.c: 31:             if((ev==evOnePlayer)||(ev==evTwoPlayer))
 11009  0048CC  0E05               	movlw	5
 11010  0048CE  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11011  0048D0  B4D8               	btfsc	status,2,c
 11012  0048D2  EF6D  F024         	goto	u7821
 11013  0048D6  EF6F  F024         	goto	u7820
 11014  0048DA                     u7821:
 11015  0048DA  EF78  F024         	goto	l10341
 11016  0048DE                     u7820:
 11017  0048DE                     
 11018                           ; BSR set to: 0
 11019  0048DE  0E06               	movlw	6
 11020  0048E0  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11021  0048E2  A4D8               	btfss	status,2,c
 11022  0048E4  EF76  F024         	goto	u7831
 11023  0048E8  EF78  F024         	goto	u7830
 11024  0048EC                     u7831:
 11025  0048EC  EF88  F024         	goto	l10347
 11026  0048F0                     u7830:
 11027  0048F0                     l10341:
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;stateMachine/display.c: 32:             {;stateMachine/display.c: 33:                 d
      +                          isplayState=INGAME;
 11031  0048F0  0E02               	movlw	2
 11032  0048F2  6FDD               	movwf	_displayState& (0+255),b
 11033  0048F4                     
 11034                           ; BSR set to: 0
 11035                           ;stateMachine/display.c: 34:                 Menu_inGameDraw(g);
 11036  0048F4  C0A3  F092         	movff	displaySM@g,Menu_inGameDraw@g
 11037  0048F8  C0A4  F093         	movff	displaySM@g+1,Menu_inGameDraw@g+1
 11038  0048FC  EC9C  F02F         	call	_Menu_inGameDraw	;wreg free
 11039  004900                     
 11040                           ;stateMachine/display.c: 35:                 displayController(g,ev);
 11041  004900  C0A3  F09E         	movff	displaySM@g,displayController@g
 11042  004904  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11043  004908  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11044  00490C  ECE0  F023         	call	_displayController	;wreg free
 11045  004910                     l10347:
 11046                           
 11047                           ;stateMachine/display.c: 37:             if(ev==evParameters)
 11048  004910  0E07               	movlw	7
 11049  004912  0100               	movlb	0	; () banked
 11050  004914  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11051  004916  A4D8               	btfss	status,2,c
 11052  004918  EF90  F024         	goto	u7841
 11053  00491C  EF92  F024         	goto	u7840
 11054  004920                     u7841:
 11055  004920  EFE1  F024         	goto	l562
 11056  004924                     u7840:
 11057  004924                     
 11058                           ; BSR set to: 0
 11059                           ;stateMachine/display.c: 38:             {;stateMachine/display.c: 39:                 d
      +                          isplayState=PARAMETERS;
 11060  004924  0E01               	movlw	1
 11061  004926  6FDD               	movwf	_displayState& (0+255),b
 11062  004928                     l10351:
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;stateMachine/display.c: 40:                 displayController(g,ev);
 11066  004928  C0A3  F09E         	movff	displaySM@g,displayController@g
 11067  00492C  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11068  004930  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11069  004934  ECE0  F023         	call	_displayController	;wreg free
 11070  004938  EFE1  F024         	goto	l562
 11071  00493C                     l10353:
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;stateMachine/display.c: 44:             if(ev==evLeaveParam)
 11075  00493C  0E08               	movlw	8
 11076  00493E  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11077  004940  A4D8               	btfss	status,2,c
 11078  004942  EFA5  F024         	goto	u7851
 11079  004946  EFA7  F024         	goto	u7850
 11080  00494A                     u7851:
 11081  00494A  EFE1  F024         	goto	l562
 11082  00494E                     u7850:
 11083  00494E                     l10355:
 11084                           
 11085                           ; BSR set to: 0
 11086                           ;stateMachine/display.c: 45:             {;stateMachine/display.c: 46:                 d
      +                          isplayState=WELCOME;
 11087  00494E  0E00               	movlw	0
 11088  004950  6FDD               	movwf	_displayState& (0+255),b
 11089  004952  EF94  F024         	goto	l10351
 11090  004956                     l10359:
 11091                           
 11092                           ; BSR set to: 0
 11093                           ;stateMachine/display.c: 51:             if(ev==evEndGame)
 11094  004956  0E09               	movlw	9
 11095  004958  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11096  00495A  A4D8               	btfss	status,2,c
 11097  00495C  EFB2  F024         	goto	u7861
 11098  004960  EFB4  F024         	goto	u7860
 11099  004964                     u7861:
 11100  004964  EF94  F024         	goto	l10351
 11101  004968                     u7860:
 11102  004968                     
 11103                           ; BSR set to: 0
 11104                           ;stateMachine/display.c: 52:             {;stateMachine/display.c: 53:                 d
      +                          isplayState=ENDGAME;
 11105  004968  0E03               	movlw	3
 11106  00496A  6FDD               	movwf	_displayState& (0+255),b
 11107  00496C  EF94  F024         	goto	l10351
 11108  004970                     l10367:
 11109                           
 11110                           ; BSR set to: 0
 11111                           ;stateMachine/display.c: 62:            if(ev==evNewGame)
 11112  004970  0E0F               	movlw	15
 11113  004972  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11114  004974  A4D8               	btfss	status,2,c
 11115  004976  EFBF  F024         	goto	u7871
 11116  00497A  EFC1  F024         	goto	u7870
 11117  00497E                     u7871:
 11118  00497E  EFE1  F024         	goto	l562
 11119  004982                     u7870:
 11120  004982  EFA7  F024         	goto	l10355
 11121  004986                     l10375:
 11122  004986  0100               	movlb	0	; () banked
 11123  004988  51DD               	movf	_displayState& (0+255),w,b
 11124  00498A  6FA5               	movwf	??_displaySM& (0+255),b
 11125  00498C  6BA6               	clrf	(??_displaySM+1)& (0+255),b
 11126                           
 11127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11128                           ; Switch size 1, requested type "simple"
 11129                           ; Number of cases is 1, Range of values is 0 to 0
 11130                           ; switch strategies available:
 11131                           ; Name         Instructions Cycles
 11132                           ; simple_byte            4     3 (average)
 11133                           ;	Chosen strategy is simple_byte
 11134  00498E  51A6               	movf	(??_displaySM+1)& (0+255),w,b
 11135  004990  0A00               	xorlw	0	; case 0
 11136  004992  B4D8               	btfsc	status,2,c
 11137  004994  EFCE  F024         	goto	l10689
 11138  004998  EFE1  F024         	goto	l562
 11139  00499C                     l10689:
 11140                           
 11141                           ; BSR set to: 0
 11142                           ; Switch size 1, requested type "simple"
 11143                           ; Number of cases is 4, Range of values is 0 to 3
 11144                           ; switch strategies available:
 11145                           ; Name         Instructions Cycles
 11146                           ; simple_byte           13     7 (average)
 11147                           ;	Chosen strategy is simple_byte
 11148  00499C  51A5               	movf	??_displaySM& (0+255),w,b
 11149  00499E  0A00               	xorlw	0	; case 0
 11150  0049A0  B4D8               	btfsc	status,2,c
 11151  0049A2  EF66  F024         	goto	l10337
 11152  0049A6  0A01               	xorlw	1	; case 1
 11153  0049A8  B4D8               	btfsc	status,2,c
 11154  0049AA  EF9E  F024         	goto	l10353
 11155  0049AE  0A03               	xorlw	3	; case 2
 11156  0049B0  B4D8               	btfsc	status,2,c
 11157  0049B2  EFAB  F024         	goto	l10359
 11158  0049B6  0A01               	xorlw	1	; case 3
 11159  0049B8  B4D8               	btfsc	status,2,c
 11160  0049BA  EFB8  F024         	goto	l10367
 11161  0049BE  EFE1  F024         	goto	l562
 11162  0049C2                     l562:
 11163  0049C2  0012               	return		;funcret
 11164  0049C4                     __end_of_displaySM:
 11165                           	callstack 0
 11166                           
 11167 ;; *************** function _displayController *****************
 11168 ;; Defined at:
 11169 ;;		line 72 in file "stateMachine/display.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;  g               2   62[BANK0 ] PTR struct GameParameter
 11172 ;;		 -> g1(239), 
 11173 ;;  ev              1   64[BANK0 ] unsigned char 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;		None
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  1    wreg      void 
 11178 ;; Registers used:
 11179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11185 ;;      Params:         0       3       0       0       0       0       0
 11186 ;;      Locals:         0       0       0       0       0       0       0
 11187 ;;      Temps:          0       2       0       0       0       0       0
 11188 ;;      Totals:         0       5       0       0       0       0       0
 11189 ;;Total ram usage:        5 bytes
 11190 ;; Hardware stack levels used: 1
 11191 ;; Hardware stack levels required when called: 13
 11192 ;; This function calls:
 11193 ;;		_Ball_draw
 11194 ;;		_Menu_endGame
 11195 ;;		_Menu_parametersDraw
 11196 ;;		_Menu_welcomeDraw
 11197 ;;		_Paddle_draw
 11198 ;;		_Score_draw
 11199 ;; This function is called by:
 11200 ;;		_displayInit
 11201 ;;		_displaySM
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205                           	psect	text42
 11206  0047C0                     __ptext42:
 11207                           	callstack 0
 11208  0047C0                     _displayController:
 11209                           	callstack 14
 11210  0047C0                     
 11211                           ;stateMachine/display.c: 72: void displayController(GameParameters* g,Event ev);stateMac
      +                          hine/display.c: 73: {;stateMachine/display.c: 74:     switch(displayState)
 11212  0047C0  EF43  F024         	goto	l9893
 11213  0047C4                     l9869:
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;stateMachine/display.c: 78:             Menu_welcomeDraw(g);
 11217  0047C4  C09E  F09C         	movff	displayController@g,Menu_welcomeDraw@g
 11218  0047C8  C09F  F09D         	movff	displayController@g+1,Menu_welcomeDraw@g+1
 11219  0047CC  EC8F  F02D         	call	_Menu_welcomeDraw	;wreg free
 11220                           
 11221                           ;stateMachine/display.c: 79:             break;
 11222  0047D0  EF61  F024         	goto	l576
 11223  0047D4                     l9871:
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;stateMachine/display.c: 82:             Menu_parametersDraw(g);
 11227  0047D4  C09E  F09C         	movff	displayController@g,Menu_parametersDraw@g
 11228  0047D8  C09F  F09D         	movff	displayController@g+1,Menu_parametersDraw@g+1
 11229  0047DC  EC4E  F02D         	call	_Menu_parametersDraw	;wreg free
 11230                           
 11231                           ;stateMachine/display.c: 83:             break;
 11232  0047E0  EF61  F024         	goto	l576
 11233  0047E4                     l9873:
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;stateMachine/display.c: 86:             if(ev==evRedrawPaddle1)
 11237  0047E4  0E0B               	movlw	11
 11238  0047E6  19A0               	xorwf	displayController@ev& (0+255),w,b
 11239  0047E8  A4D8               	btfss	status,2,c
 11240  0047EA  EFF9  F023         	goto	u7181
 11241  0047EE  EFFB  F023         	goto	u7180
 11242  0047F2                     u7181:
 11243  0047F2  EF03  F024         	goto	l9877
 11244  0047F6                     u7180:
 11245  0047F6                     
 11246                           ; BSR set to: 0
 11247                           ;stateMachine/display.c: 87:             {;stateMachine/display.c: 88:                 P
      +                          addle_draw(&g->p1);
 11248  0047F6  0ED5               	movlw	213
 11249  0047F8  259E               	addwf	displayController@g& (0+255),w,b
 11250  0047FA  6E25               	movwf	Paddle_draw@p^0,c
 11251  0047FC  0E00               	movlw	0
 11252  0047FE  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11253  004800  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11254  004802  ECAC  F021         	call	_Paddle_draw	;wreg free
 11255  004806                     l9877:
 11256                           
 11257                           ;stateMachine/display.c: 90:             if(ev==evRedrawPaddle2)
 11258  004806  0E0C               	movlw	12
 11259  004808  0100               	movlb	0	; () banked
 11260  00480A  19A0               	xorwf	displayController@ev& (0+255),w,b
 11261  00480C  A4D8               	btfss	status,2,c
 11262  00480E  EF0B  F024         	goto	u7191
 11263  004812  EF0D  F024         	goto	u7190
 11264  004816                     u7191:
 11265  004816  EF15  F024         	goto	l9881
 11266  00481A                     u7190:
 11267  00481A                     
 11268                           ; BSR set to: 0
 11269                           ;stateMachine/display.c: 91:             {;stateMachine/display.c: 92:                 P
      +                          addle_draw(&g->p2);
 11270  00481A  0EDF               	movlw	223
 11271  00481C  259E               	addwf	displayController@g& (0+255),w,b
 11272  00481E  6E25               	movwf	Paddle_draw@p^0,c
 11273  004820  0E00               	movlw	0
 11274  004822  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11275  004824  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11276  004826  ECAC  F021         	call	_Paddle_draw	;wreg free
 11277  00482A                     l9881:
 11278                           
 11279                           ;stateMachine/display.c: 94:             if(ev==evRedrawBall)
 11280  00482A  0E0D               	movlw	13
 11281  00482C  0100               	movlb	0	; () banked
 11282  00482E  19A0               	xorwf	displayController@ev& (0+255),w,b
 11283  004830  A4D8               	btfss	status,2,c
 11284  004832  EF1D  F024         	goto	u7201
 11285  004836  EF1F  F024         	goto	u7200
 11286  00483A                     u7201:
 11287  00483A  EF27  F024         	goto	l9885
 11288  00483E                     u7200:
 11289  00483E                     
 11290                           ; BSR set to: 0
 11291                           ;stateMachine/display.c: 95:             {;stateMachine/display.c: 96:                 B
      +                          all_draw(&g->b);
 11292  00483E  0EC9               	movlw	201
 11293  004840  259E               	addwf	displayController@g& (0+255),w,b
 11294  004842  6E25               	movwf	Ball_draw@b^0,c
 11295  004844  0E00               	movlw	0
 11296  004846  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11297  004848  6E26               	movwf	(Ball_draw@b+1)^0,c
 11298  00484A  EC60  F020         	call	_Ball_draw	;wreg free
 11299  00484E                     l9885:
 11300                           
 11301                           ;stateMachine/display.c: 98:             if(ev==evRedrawScore)
 11302  00484E  0E0E               	movlw	14
 11303  004850  0100               	movlb	0	; () banked
 11304  004852  19A0               	xorwf	displayController@ev& (0+255),w,b
 11305  004854  A4D8               	btfss	status,2,c
 11306  004856  EF2F  F024         	goto	u7211
 11307  00485A  EF31  F024         	goto	u7210
 11308  00485E                     u7211:
 11309  00485E  EF61  F024         	goto	l576
 11310  004862                     u7210:
 11311  004862                     
 11312                           ; BSR set to: 0
 11313                           ;stateMachine/display.c: 99:             {;stateMachine/display.c: 100:                 
      +                          Score_draw(&g->s1);
 11314  004862  0EE9               	movlw	233
 11315  004864  259E               	addwf	displayController@g& (0+255),w,b
 11316  004866  6F90               	movwf	Score_draw@s& (0+255),b
 11317  004868  0E00               	movlw	0
 11318  00486A  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11319  00486C  6F91               	movwf	(Score_draw@s+1)& (0+255),b
 11320  00486E  EC09  F028         	call	_Score_draw	;wreg free
 11321  004872  EF61  F024         	goto	l576
 11322  004876                     l9889:
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;stateMachine/display.c: 104:             Menu_endGame(g);
 11326  004876  C09E  F09C         	movff	displayController@g,Menu_endGame@g
 11327  00487A  C09F  F09D         	movff	displayController@g+1,Menu_endGame@g+1
 11328  00487E  EC6C  F02B         	call	_Menu_endGame	;wreg free
 11329                           
 11330                           ;stateMachine/display.c: 105:             break;
 11331  004882  EF61  F024         	goto	l576
 11332  004886                     l9893:
 11333  004886  0100               	movlb	0	; () banked
 11334  004888  51DD               	movf	_displayState& (0+255),w,b
 11335  00488A  6FA1               	movwf	??_displayController& (0+255),b
 11336  00488C  6BA2               	clrf	(??_displayController+1)& (0+255),b
 11337                           
 11338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11339                           ; Switch size 1, requested type "simple"
 11340                           ; Number of cases is 1, Range of values is 0 to 0
 11341                           ; switch strategies available:
 11342                           ; Name         Instructions Cycles
 11343                           ; simple_byte            4     3 (average)
 11344                           ;	Chosen strategy is simple_byte
 11345  00488E  51A2               	movf	(??_displayController+1)& (0+255),w,b
 11346  004890  0A00               	xorlw	0	; case 0
 11347  004892  B4D8               	btfsc	status,2,c
 11348  004894  EF4E  F024         	goto	l10691
 11349  004898  EF61  F024         	goto	l576
 11350  00489C                     l10691:
 11351                           
 11352                           ; BSR set to: 0
 11353                           ; Switch size 1, requested type "simple"
 11354                           ; Number of cases is 4, Range of values is 0 to 3
 11355                           ; switch strategies available:
 11356                           ; Name         Instructions Cycles
 11357                           ; simple_byte           13     7 (average)
 11358                           ;	Chosen strategy is simple_byte
 11359  00489C  51A1               	movf	??_displayController& (0+255),w,b
 11360  00489E  0A00               	xorlw	0	; case 0
 11361  0048A0  B4D8               	btfsc	status,2,c
 11362  0048A2  EFE2  F023         	goto	l9869
 11363  0048A6  0A01               	xorlw	1	; case 1
 11364  0048A8  B4D8               	btfsc	status,2,c
 11365  0048AA  EFEA  F023         	goto	l9871
 11366  0048AE  0A03               	xorlw	3	; case 2
 11367  0048B0  B4D8               	btfsc	status,2,c
 11368  0048B2  EFF2  F023         	goto	l9873
 11369  0048B6  0A01               	xorlw	1	; case 3
 11370  0048B8  B4D8               	btfsc	status,2,c
 11371  0048BA  EF3B  F024         	goto	l9889
 11372  0048BE  EF61  F024         	goto	l576
 11373  0048C2                     l576:
 11374  0048C2  0012               	return		;funcret
 11375  0048C4                     __end_of_displayController:
 11376                           	callstack 0
 11377                           
 11378 ;; *************** function _Menu_welcomeDraw *****************
 11379 ;; Defined at:
 11380 ;;		line 7 in file "class/menu.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11383 ;;		 -> g1(239), 
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;		None
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  1    wreg      void 
 11388 ;; Registers used:
 11389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11395 ;;      Params:         0       2       0       0       0       0       0
 11396 ;;      Locals:         0       0       0       0       0       0       0
 11397 ;;      Temps:          0       0       0       0       0       0       0
 11398 ;;      Totals:         0       2       0       0       0       0       0
 11399 ;;Total ram usage:        2 bytes
 11400 ;; Hardware stack levels used: 1
 11401 ;; Hardware stack levels required when called: 7
 11402 ;; This function calls:
 11403 ;;		_LCD_ButtonDraw
 11404 ;;		_LCD_DrawText
 11405 ;;		_LCD_Fill
 11406 ;; This function is called by:
 11407 ;;		_displayController
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           	psect	text43
 11412  005B1E                     __ptext43:
 11413                           	callstack 0
 11414  005B1E                     _Menu_welcomeDraw:
 11415                           	callstack 19
 11416  005B1E                     
 11417                           ;class/menu.c: 7: void Menu_welcomeDraw(GameParameters* g);class/menu.c: 8: {;class/menu
      +                          .c: 9:     LCD_Fill(0b1111111111111111);
 11418  005B1E  0EFF               	movlw	255
 11419  005B20  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11420  005B22  6812               	setf	LCD_Fill@color^0,c
 11421  005B24  EC9A  F029         	call	_LCD_Fill	;wreg free
 11422  005B28                     
 11423                           ;class/menu.c: 10:     LCD_DrawText("WELCOME",&arialNarrow_12ptFontInfo,A_CENTER,50,50,0
      +                          b0000000000000000,0b1111111111111111);
 11424  005B28  0EDB               	movlw	low STR_11
 11425  005B2A  6E20               	movwf	LCD_DrawText@msg^0,c
 11426  005B2C  0E7F               	movlw	high STR_11
 11427  005B2E  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11428  005B30  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 11429  005B32  6E22               	movwf	LCD_DrawText@font^0,c
 11430  005B34  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11431  005B36  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11432  005B38  0E02               	movlw	2
 11433  005B3A  6E24               	movwf	LCD_DrawText@align^0,c
 11434  005B3C  0E00               	movlw	0
 11435  005B3E  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11436  005B40  0E32               	movlw	50
 11437  005B42  6E25               	movwf	LCD_DrawText@posX^0,c
 11438  005B44  0E00               	movlw	0
 11439  005B46  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11440  005B48  0E32               	movlw	50
 11441  005B4A  6E27               	movwf	LCD_DrawText@posY^0,c
 11442  005B4C  0E00               	movlw	0
 11443  005B4E  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11444  005B50  0E00               	movlw	0
 11445  005B52  6E29               	movwf	LCD_DrawText@color^0,c
 11446  005B54  0EFF               	movlw	255
 11447  005B56  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11448  005B58  682B               	setf	LCD_DrawText@bg_color^0,c
 11449  005B5A  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 11450  005B5E                     
 11451                           ;class/menu.c: 11:     LCD_ButtonDraw(&(g->btnParam));
 11452  005B5E  0E08               	movlw	8
 11453  005B60  0100               	movlb	0	; () banked
 11454  005B62  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11455  005B64  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11456  005B66  0E00               	movlw	0
 11457  005B68  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11458  005B6A  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11459  005B6C  ECBA  F007         	call	_LCD_ButtonDraw	;wreg free
 11460  005B70                     
 11461                           ;class/menu.c: 12:     LCD_ButtonDraw(&(g->btnOnePlayer));
 11462  005B70  0E20               	movlw	32
 11463  005B72  0100               	movlb	0	; () banked
 11464  005B74  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11465  005B76  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11466  005B78  0E00               	movlw	0
 11467  005B7A  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11468  005B7C  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11469  005B7E  ECBA  F007         	call	_LCD_ButtonDraw	;wreg free
 11470  005B82                     
 11471                           ;class/menu.c: 13:     LCD_ButtonDraw(&(g->btnTwoPlayer));
 11472  005B82  0E38               	movlw	56
 11473  005B84  0100               	movlb	0	; () banked
 11474  005B86  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11475  005B88  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11476  005B8A  0E00               	movlw	0
 11477  005B8C  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11478  005B8E  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11479  005B90  ECBA  F007         	call	_LCD_ButtonDraw	;wreg free
 11480  005B94  0012               	return		;funcret
 11481  005B96                     __end_of_Menu_welcomeDraw:
 11482                           	callstack 0
 11483                           
 11484 ;; *************** function _Menu_parametersDraw *****************
 11485 ;; Defined at:
 11486 ;;		line 19 in file "class/menu.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11489 ;;		 -> g1(239), 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;		None
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  1    wreg      void 
 11494 ;; Registers used:
 11495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11501 ;;      Params:         0       2       0       0       0       0       0
 11502 ;;      Locals:         0       0       0       0       0       0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0
 11504 ;;      Totals:         0       2       0       0       0       0       0
 11505 ;;Total ram usage:        2 bytes
 11506 ;; Hardware stack levels used: 1
 11507 ;; Hardware stack levels required when called: 7
 11508 ;; This function calls:
 11509 ;;		_LCD_ButtonDraw
 11510 ;;		_LCD_DrawText
 11511 ;;		_LCD_Fill
 11512 ;;		_LCD_SliderDraw
 11513 ;; This function is called by:
 11514 ;;		_displayController
 11515 ;; This function uses a non-reentrant model
 11516 ;;
 11517                           
 11518                           	psect	text44
 11519  005A9C                     __ptext44:
 11520                           	callstack 0
 11521  005A9C                     _Menu_parametersDraw:
 11522                           	callstack 19
 11523  005A9C                     
 11524                           ;class/menu.c: 19: void Menu_parametersDraw(GameParameters* g);class/menu.c: 20: {;class
      +                          /menu.c: 21:     LCD_Fill(0b1111111111111111);
 11525  005A9C  0EFF               	movlw	255
 11526  005A9E  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11527  005AA0  6812               	setf	LCD_Fill@color^0,c
 11528  005AA2  EC9A  F029         	call	_LCD_Fill	;wreg free
 11529  005AA6                     
 11530                           ;class/menu.c: 22:     LCD_DrawText("PARAMETERS",&arialNarrow_12ptFontInfo,A_CENTER,50,5
      +                          0,0b0000000000000000,0b1111111111111111);
 11531  005AA6  0EA0               	movlw	low STR_12
 11532  005AA8  6E20               	movwf	LCD_DrawText@msg^0,c
 11533  005AAA  0E7F               	movlw	high STR_12
 11534  005AAC  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11535  005AAE  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 11536  005AB0  6E22               	movwf	LCD_DrawText@font^0,c
 11537  005AB2  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11538  005AB4  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11539  005AB6  0E02               	movlw	2
 11540  005AB8  6E24               	movwf	LCD_DrawText@align^0,c
 11541  005ABA  0E00               	movlw	0
 11542  005ABC  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11543  005ABE  0E32               	movlw	50
 11544  005AC0  6E25               	movwf	LCD_DrawText@posX^0,c
 11545  005AC2  0E00               	movlw	0
 11546  005AC4  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11547  005AC6  0E32               	movlw	50
 11548  005AC8  6E27               	movwf	LCD_DrawText@posY^0,c
 11549  005ACA  0E00               	movlw	0
 11550  005ACC  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11551  005ACE  0E00               	movlw	0
 11552  005AD0  6E29               	movwf	LCD_DrawText@color^0,c
 11553  005AD2  0EFF               	movlw	255
 11554  005AD4  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11555  005AD6  682B               	setf	LCD_DrawText@bg_color^0,c
 11556  005AD8  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 11557  005ADC                     
 11558                           ;class/menu.c: 23:     LCD_ButtonDraw(&(g->btnLeaveParam));
 11559  005ADC  0E50               	movlw	80
 11560  005ADE  0100               	movlb	0	; () banked
 11561  005AE0  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 11562  005AE2  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11563  005AE4  0E00               	movlw	0
 11564  005AE6  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 11565  005AE8  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11566  005AEA  ECBA  F007         	call	_LCD_ButtonDraw	;wreg free
 11567  005AEE                     
 11568                           ;class/menu.c: 24:     g->sldParam.value=g->backlight;
 11569  005AEE  C09C  FFD9         	movff	Menu_parametersDraw@g,fsr2l
 11570  005AF2  C09D  FFDA         	movff	Menu_parametersDraw@g+1,fsr2h
 11571  005AF6  0100               	movlb	0	; () banked
 11572  005AF8  EE10 F0C1          	lfsr	1,193
 11573  005AFC  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 11574  005AFE  26E1               	addwf	fsr1l,f,c
 11575  005B00  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 11576  005B02  22E2               	addwfc	fsr1h,f,c
 11577  005B04  CFDE FFE6          	movff	postinc2,postinc1
 11578  005B08  CFDD FFE5          	movff	postdec2,postdec1
 11579  005B0C                     
 11580                           ; BSR set to: 0
 11581                           ;class/menu.c: 25:     LCD_SliderDraw(&(g->sldParam));
 11582  005B0C  0EB0               	movlw	176
 11583  005B0E  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 11584  005B10  6E37               	movwf	LCD_SliderDraw@slider^0,c
 11585  005B12  0E00               	movlw	0
 11586  005B14  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 11587  005B16  6E38               	movwf	(LCD_SliderDraw@slider+1)^0,c
 11588  005B18  ECD6  F022         	call	_LCD_SliderDraw	;wreg free
 11589  005B1C  0012               	return		;funcret
 11590  005B1E                     __end_of_Menu_parametersDraw:
 11591                           	callstack 0
 11592                           
 11593 ;; *************** function _LCD_SliderDraw *****************
 11594 ;; Defined at:
 11595 ;;		line 371 in file "libraries/lcd_highlevel.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  slider          2   54[COMRAM] PTR struct .
 11598 ;;		 -> g1(239), 
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  y2              2   66[COMRAM] unsigned short 
 11601 ;;  y1              2   64[COMRAM] unsigned short 
 11602 ;;  x2              2   62[COMRAM] unsigned short 
 11603 ;;  x1              2   60[COMRAM] unsigned short 
 11604 ;; Return value:  Size  Location     Type
 11605 ;;                  1    wreg      void 
 11606 ;; Registers used:
 11607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11608 ;; Tracked objects:
 11609 ;;		On entry : 0/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11613 ;;      Params:         2       0       0       0       0       0       0
 11614 ;;      Locals:         8       0       0       0       0       0       0
 11615 ;;      Temps:          4       0       0       0       0       0       0
 11616 ;;      Totals:        14       0       0       0       0       0       0
 11617 ;;Total ram usage:       14 bytes
 11618 ;; Hardware stack levels used: 1
 11619 ;; Hardware stack levels required when called: 6
 11620 ;; This function calls:
 11621 ;;		_LCD_DrawRect
 11622 ;;		_LCD_SliderUpdate
 11623 ;; This function is called by:
 11624 ;;		_Menu_parametersDraw
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text45
 11629  0045AC                     __ptext45:
 11630                           	callstack 0
 11631  0045AC                     _LCD_SliderDraw:
 11632                           	callstack 19
 11633  0045AC                     
 11634                           ;libraries/lcd_highlevel.c: 371: void LCD_SliderDraw(sld_t * slider);libraries/lcd_highl
      +                          evel.c: 372: {;libraries/lcd_highlevel.c: 373:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 375:   x1 = slider->posX;
 11635  0045AC  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 11636  0045B0  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 11637  0045B4  CFDE F03D          	movff	postinc2,LCD_SliderDraw@x1
 11638  0045B8  CFDD F03E          	movff	postdec2,LCD_SliderDraw@x1+1
 11639  0045BC                     
 11640                           ;libraries/lcd_highlevel.c: 376:   x2 = slider->posX + slider->width;
 11641  0045BC  EE20 F004          	lfsr	2,4
 11642  0045C0  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11643  0045C2  26D9               	addwf	fsr2l,f,c
 11644  0045C4  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11645  0045C6  22DA               	addwfc	fsr2h,f,c
 11646  0045C8  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11647  0045CC  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11648  0045D0  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 11649  0045D4  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 11650  0045D8  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11651  0045DC  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11652  0045E0  5039               	movf	??_LCD_SliderDraw^0,w,c
 11653  0045E2  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11654  0045E4  6E3F               	movwf	LCD_SliderDraw@x2^0,c
 11655  0045E6  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11656  0045E8  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11657  0045EA  6E40               	movwf	(LCD_SliderDraw@x2+1)^0,c
 11658  0045EC                     
 11659                           ;libraries/lcd_highlevel.c: 377:   y1 = slider->posY;
 11660  0045EC  EE20 F002          	lfsr	2,2
 11661  0045F0  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11662  0045F2  26D9               	addwf	fsr2l,f,c
 11663  0045F4  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11664  0045F6  22DA               	addwfc	fsr2h,f,c
 11665  0045F8  CFDE F041          	movff	postinc2,LCD_SliderDraw@y1
 11666  0045FC  CFDD F042          	movff	postdec2,LCD_SliderDraw@y1+1
 11667  004600                     
 11668                           ;libraries/lcd_highlevel.c: 378:   y2 = slider->posY + slider->height;
 11669  004600  EE20 F006          	lfsr	2,6
 11670  004604  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11671  004606  26D9               	addwf	fsr2l,f,c
 11672  004608  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11673  00460A  22DA               	addwfc	fsr2h,f,c
 11674  00460C  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11675  004610  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11676  004614  EE20 F002          	lfsr	2,2
 11677  004618  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11678  00461A  26D9               	addwf	fsr2l,f,c
 11679  00461C  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11680  00461E  22DA               	addwfc	fsr2h,f,c
 11681  004620  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11682  004624  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11683  004628  5039               	movf	??_LCD_SliderDraw^0,w,c
 11684  00462A  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11685  00462C  6E43               	movwf	LCD_SliderDraw@y2^0,c
 11686  00462E  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11687  004630  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11688  004632  6E44               	movwf	(LCD_SliderDraw@y2+1)^0,c
 11689  004634                     
 11690                           ;libraries/lcd_highlevel.c: 379:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->bgColor);
 11691  004634  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11692  004638  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11693  00463C  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11694  004640  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11695  004644  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11696  004648  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11697  00464C  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11698  004650  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11699  004654  0E01               	movlw	1
 11700  004656  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11701  004658  EE20 F00A          	lfsr	2,10
 11702  00465C  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11703  00465E  26D9               	addwf	fsr2l,f,c
 11704  004660  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11705  004662  22DA               	addwfc	fsr2h,f,c
 11706  004664  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11707  004668  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11708  00466C  EC84  F016         	call	_LCD_DrawRect	;wreg free
 11709  004670                     
 11710                           ;libraries/lcd_highlevel.c: 380:   LCD_DrawRect(x1, y1, x2, y2, 0, slider->borderColor);
 11711  004670  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11712  004674  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11713  004678  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11714  00467C  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11715  004680  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11716  004684  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11717  004688  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11718  00468C  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11719  004690  0E00               	movlw	0
 11720  004692  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11721  004694  EE20 F00C          	lfsr	2,12
 11722  004698  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11723  00469A  26D9               	addwf	fsr2l,f,c
 11724  00469C  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11725  00469E  22DA               	addwfc	fsr2h,f,c
 11726  0046A0  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11727  0046A4  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11728  0046A8  EC84  F016         	call	_LCD_DrawRect	;wreg free
 11729  0046AC                     
 11730                           ;libraries/lcd_highlevel.c: 381:   LCD_SliderUpdate(slider);
 11731  0046AC  C037  F027         	movff	LCD_SliderDraw@slider,LCD_SliderUpdate@slider
 11732  0046B0  C038  F028         	movff	LCD_SliderDraw@slider+1,LCD_SliderUpdate@slider+1
 11733  0046B4  EC31  F00A         	call	_LCD_SliderUpdate	;wreg free
 11734  0046B8  0012               	return		;funcret
 11735  0046BA                     __end_of_LCD_SliderDraw:
 11736                           	callstack 0
 11737                           
 11738 ;; *************** function _LCD_SliderUpdate *****************
 11739 ;; Defined at:
 11740 ;;		line 319 in file "libraries/lcd_highlevel.c"
 11741 ;; Parameters:    Size  Location     Type
 11742 ;;  slider          2   38[COMRAM] PTR struct .
 11743 ;;		 -> g1(239), 
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;  x1              2   52[COMRAM] unsigned short 
 11746 ;;  y2              2   50[COMRAM] unsigned short 
 11747 ;;  y1              2   48[COMRAM] unsigned short 
 11748 ;;  x2              2   46[COMRAM] unsigned short 
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  1    wreg      void 
 11751 ;; Registers used:
 11752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11758 ;;      Params:         2       0       0       0       0       0       0
 11759 ;;      Locals:         8       0       0       0       0       0       0
 11760 ;;      Temps:          6       0       0       0       0       0       0
 11761 ;;      Totals:        16       0       0       0       0       0       0
 11762 ;;Total ram usage:       16 bytes
 11763 ;; Hardware stack levels used: 1
 11764 ;; Hardware stack levels required when called: 5
 11765 ;; This function calls:
 11766 ;;		_LCD_DrawRect
 11767 ;;		___lwdiv
 11768 ;;		___wmul
 11769 ;; This function is called by:
 11770 ;;		_LCD_SliderDraw
 11771 ;;		_gameControllerController
 11772 ;; This function uses a non-reentrant model
 11773 ;;
 11774                           
 11775                           	psect	text46
 11776  001462                     __ptext46:
 11777                           	callstack 0
 11778  001462                     _LCD_SliderUpdate:
 11779                           	callstack 21
 11780  001462                     
 11781                           ;libraries/lcd_highlevel.c: 319: void LCD_SliderUpdate(sld_t * slider);libraries/lcd_hig
      +                          hlevel.c: 320: {;libraries/lcd_highlevel.c: 321:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 325:   if(slider->cursorWidth != 0)
 11782  001462  EE20 F00E          	lfsr	2,14
 11783  001466  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11784  001468  26D9               	addwf	fsr2l,f,c
 11785  00146A  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11786  00146C  22DA               	addwfc	fsr2h,f,c
 11787  00146E  50DE               	movf	postinc2,w,c
 11788  001470  10DE               	iorwf	postinc2,w,c
 11789  001472  B4D8               	btfsc	status,2,c
 11790  001474  EF3E  F00A         	goto	u6311
 11791  001478  EF40  F00A         	goto	u6310
 11792  00147C                     u6311:
 11793  00147C  EFCC  F00A         	goto	l8883
 11794  001480                     u6310:
 11795  001480                     
 11796                           ;libraries/lcd_highlevel.c: 326:   {;libraries/lcd_highlevel.c: 327:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->oldValue)/ slider->steps);
 11797  001480  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11798  001484  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11799  001488  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11800  00148C  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11801  001490  EE20 F00E          	lfsr	2,14
 11802  001494  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11803  001496  26D9               	addwf	fsr2l,f,c
 11804  001498  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11805  00149A  22DA               	addwfc	fsr2h,f,c
 11806  00149C  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11807  0014A0  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11808  0014A4  EE20 F004          	lfsr	2,4
 11809  0014A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11810  0014AA  26D9               	addwf	fsr2l,f,c
 11811  0014AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11812  0014AE  22DA               	addwfc	fsr2h,f,c
 11813  0014B0  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 11814  0014B4  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 11815  0014B8  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 11816  0014BA  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 11817  0014BC  6E1A               	movwf	___wmul@multiplier^0,c
 11818  0014BE  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 11819  0014C0  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 11820  0014C2  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 11821  0014C4  EE20 F013          	lfsr	2,19
 11822  0014C8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11823  0014CA  26D9               	addwf	fsr2l,f,c
 11824  0014CC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11825  0014CE  22DA               	addwfc	fsr2h,f,c
 11826  0014D0  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11827  0014D4  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11828  0014D8  EC45  F031         	call	___wmul	;wreg free
 11829  0014DC  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11830  0014E0  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11831  0014E4  EE20 F015          	lfsr	2,21
 11832  0014E8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11833  0014EA  26D9               	addwf	fsr2l,f,c
 11834  0014EC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11835  0014EE  22DA               	addwfc	fsr2h,f,c
 11836  0014F0  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11837  0014F4  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11838  0014F8  EC40  F02E         	call	___lwdiv	;wreg free
 11839  0014FC  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11840  0014FE  2620               	addwf	?___lwdiv^0,f,c
 11841  001500  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11842  001502  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11843  001504  0E01               	movlw	1
 11844  001506  2420               	addwf	?___lwdiv^0,w,c
 11845  001508  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11846  00150A  0E00               	movlw	0
 11847  00150C  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11848  00150E  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11849  001510                     
 11850                           ;libraries/lcd_highlevel.c: 328:     x2 = x1 + slider->cursorWidth-2;
 11851  001510  EE20 F00E          	lfsr	2,14
 11852  001514  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11853  001516  26D9               	addwf	fsr2l,f,c
 11854  001518  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11855  00151A  22DA               	addwfc	fsr2h,f,c
 11856  00151C  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11857  001520  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11858  001524  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 11859  001526  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 11860  001528  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 11861  00152A  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 11862  00152C  0EFE               	movlw	254
 11863  00152E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11864  001530  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11865  001532  0EFF               	movlw	255
 11866  001534  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11867  001536  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11868  001538                     
 11869                           ;libraries/lcd_highlevel.c: 329:     y1 = slider->posY + 2;
 11870  001538  EE20 F002          	lfsr	2,2
 11871  00153C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11872  00153E  26D9               	addwf	fsr2l,f,c
 11873  001540  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11874  001542  22DA               	addwfc	fsr2h,f,c
 11875  001544  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11876  001548  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11877  00154C  0E02               	movlw	2
 11878  00154E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11879  001550  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11880  001552  0E00               	movlw	0
 11881  001554  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11882  001556  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11883  001558                     
 11884                           ;libraries/lcd_highlevel.c: 330:     y2 = slider->posY + slider->height - 2;
 11885  001558  EE20 F006          	lfsr	2,6
 11886  00155C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11887  00155E  26D9               	addwf	fsr2l,f,c
 11888  001560  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11889  001562  22DA               	addwfc	fsr2h,f,c
 11890  001564  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11891  001568  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11892  00156C  EE20 F002          	lfsr	2,2
 11893  001570  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11894  001572  26D9               	addwf	fsr2l,f,c
 11895  001574  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11896  001576  22DA               	addwfc	fsr2h,f,c
 11897  001578  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11898  00157C  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11899  001580  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11900  001582  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11901  001584  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11902  001586  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11903  001588  0EFE               	movlw	254
 11904  00158A  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 11905  00158C  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 11906  00158E  0EFF               	movlw	255
 11907  001590  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 11908  001592  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 11909                           
 11910                           ;libraries/lcd_highlevel.c: 331:   }
 11911  001594  EF40  F00B         	goto	l8891
 11912  001598                     l8883:
 11913                           
 11914                           ;libraries/lcd_highlevel.c: 333:   {;libraries/lcd_highlevel.c: 334:     x1 = slider->po
      +                          sX + 1;
 11915  001598  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11916  00159C  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11917  0015A0  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11918  0015A4  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11919  0015A8  0E01               	movlw	1
 11920  0015AA  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11921  0015AC  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11922  0015AE  0E00               	movlw	0
 11923  0015B0  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11924  0015B2  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11925  0015B4                     
 11926                           ;libraries/lcd_highlevel.c: 335:     x2 = slider->posX - 1 + ((slider->width * slider->o
      +                          ldValue)/ slider->steps);
 11927  0015B4  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11928  0015B8  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11929  0015BC  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11930  0015C0  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11931  0015C4  EE20 F004          	lfsr	2,4
 11932  0015C8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11933  0015CA  26D9               	addwf	fsr2l,f,c
 11934  0015CC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11935  0015CE  22DA               	addwfc	fsr2h,f,c
 11936  0015D0  CFDE F01A          	movff	postinc2,___wmul@multiplier
 11937  0015D4  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 11938  0015D8  EE20 F013          	lfsr	2,19
 11939  0015DC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11940  0015DE  26D9               	addwf	fsr2l,f,c
 11941  0015E0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11942  0015E2  22DA               	addwfc	fsr2h,f,c
 11943  0015E4  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11944  0015E8  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11945  0015EC  EC45  F031         	call	___wmul	;wreg free
 11946  0015F0  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11947  0015F4  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11948  0015F8  EE20 F015          	lfsr	2,21
 11949  0015FC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11950  0015FE  26D9               	addwf	fsr2l,f,c
 11951  001600  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11952  001602  22DA               	addwfc	fsr2h,f,c
 11953  001604  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11954  001608  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11955  00160C  EC40  F02E         	call	___lwdiv	;wreg free
 11956  001610  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11957  001612  2620               	addwf	?___lwdiv^0,f,c
 11958  001614  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11959  001616  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11960  001618  0EFF               	movlw	255
 11961  00161A  2420               	addwf	?___lwdiv^0,w,c
 11962  00161C  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11963  00161E  0EFF               	movlw	255
 11964  001620  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11965  001622  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11966  001624                     
 11967                           ;libraries/lcd_highlevel.c: 336:     y1 = slider->posY + 2;
 11968  001624  EE20 F002          	lfsr	2,2
 11969  001628  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11970  00162A  26D9               	addwf	fsr2l,f,c
 11971  00162C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11972  00162E  22DA               	addwfc	fsr2h,f,c
 11973  001630  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11974  001634  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11975  001638  0E02               	movlw	2
 11976  00163A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11977  00163C  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11978  00163E  0E00               	movlw	0
 11979  001640  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11980  001642  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11981  001644                     
 11982                           ;libraries/lcd_highlevel.c: 337:     y2 = slider->posY + slider->height - 2;
 11983  001644  EE20 F006          	lfsr	2,6
 11984  001648  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11985  00164A  26D9               	addwf	fsr2l,f,c
 11986  00164C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11987  00164E  22DA               	addwfc	fsr2h,f,c
 11988  001650  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11989  001654  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11990  001658  EE20 F002          	lfsr	2,2
 11991  00165C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11992  00165E  26D9               	addwf	fsr2l,f,c
 11993  001660  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11994  001662  22DA               	addwfc	fsr2h,f,c
 11995  001664  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11996  001668  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11997  00166C  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11998  00166E  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11999  001670  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12000  001672  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12001  001674  0EFE               	movlw	254
 12002  001676  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12003  001678  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12004  00167A  0EFF               	movlw	255
 12005  00167C  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12006  00167E  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12007  001680                     l8891:
 12008                           
 12009                           ;libraries/lcd_highlevel.c: 339:   LCD_DrawRect(x1,
 12010  001680  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12011  001684  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12012  001688  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12013  00168C  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12014  001690  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12015  001694  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12016  001698  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12017  00169C  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12018  0016A0  0E01               	movlw	1
 12019  0016A2  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12020  0016A4  EE20 F00A          	lfsr	2,10
 12021  0016A8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12022  0016AA  26D9               	addwf	fsr2l,f,c
 12023  0016AC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12024  0016AE  22DA               	addwfc	fsr2h,f,c
 12025  0016B0  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12026  0016B4  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12027  0016B8  EC84  F016         	call	_LCD_DrawRect	;wreg free
 12028  0016BC                     
 12029                           ;libraries/lcd_highlevel.c: 344:   slider->oldValue = slider->value;
 12030  0016BC  EE20 F011          	lfsr	2,17
 12031  0016C0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12032  0016C2  26D9               	addwf	fsr2l,f,c
 12033  0016C4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12034  0016C6  22DA               	addwfc	fsr2h,f,c
 12035  0016C8  EE10 F013          	lfsr	1,19
 12036  0016CC  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12037  0016CE  26E1               	addwf	fsr1l,f,c
 12038  0016D0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12039  0016D2  22E2               	addwfc	fsr1h,f,c
 12040  0016D4  CFDE FFE6          	movff	postinc2,postinc1
 12041  0016D8  CFDD FFE5          	movff	postdec2,postdec1
 12042  0016DC                     
 12043                           ;libraries/lcd_highlevel.c: 347:   if(slider->cursorWidth == 0)
 12044  0016DC  EE20 F00E          	lfsr	2,14
 12045  0016E0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12046  0016E2  26D9               	addwf	fsr2l,f,c
 12047  0016E4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12048  0016E6  22DA               	addwfc	fsr2h,f,c
 12049  0016E8  50DE               	movf	postinc2,w,c
 12050  0016EA  10DE               	iorwf	postinc2,w,c
 12051  0016EC  A4D8               	btfss	status,2,c
 12052  0016EE  EF7B  F00B         	goto	u6321
 12053  0016F2  EF7D  F00B         	goto	u6320
 12054  0016F6                     u6321:
 12055  0016F6  EFF3  F00B         	goto	l8905
 12056  0016FA                     u6320:
 12057  0016FA                     
 12058                           ;libraries/lcd_highlevel.c: 348:   {;libraries/lcd_highlevel.c: 349:     x1 = slider->po
      +                          sX + 1;
 12059  0016FA  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12060  0016FE  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12061  001702  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12062  001706  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12063  00170A  0E01               	movlw	1
 12064  00170C  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12065  00170E  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12066  001710  0E00               	movlw	0
 12067  001712  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12068  001714  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12069  001716                     
 12070                           ;libraries/lcd_highlevel.c: 350:     x2 = slider->posX - 1 + ((slider->width * slider->v
      +                          alue)/ slider->steps);
 12071  001716  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12072  00171A  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12073  00171E  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12074  001722  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12075  001726  EE20 F004          	lfsr	2,4
 12076  00172A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12077  00172C  26D9               	addwf	fsr2l,f,c
 12078  00172E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12079  001730  22DA               	addwfc	fsr2h,f,c
 12080  001732  CFDE F01A          	movff	postinc2,___wmul@multiplier
 12081  001736  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 12082  00173A  EE20 F011          	lfsr	2,17
 12083  00173E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12084  001740  26D9               	addwf	fsr2l,f,c
 12085  001742  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12086  001744  22DA               	addwfc	fsr2h,f,c
 12087  001746  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12088  00174A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12089  00174E  EC45  F031         	call	___wmul	;wreg free
 12090  001752  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12091  001756  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12092  00175A  EE20 F015          	lfsr	2,21
 12093  00175E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12094  001760  26D9               	addwf	fsr2l,f,c
 12095  001762  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12096  001764  22DA               	addwfc	fsr2h,f,c
 12097  001766  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12098  00176A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12099  00176E  EC40  F02E         	call	___lwdiv	;wreg free
 12100  001772  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12101  001774  2620               	addwf	?___lwdiv^0,f,c
 12102  001776  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12103  001778  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12104  00177A  0EFF               	movlw	255
 12105  00177C  2420               	addwf	?___lwdiv^0,w,c
 12106  00177E  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12107  001780  0EFF               	movlw	255
 12108  001782  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12109  001784  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12110  001786                     
 12111                           ;libraries/lcd_highlevel.c: 351:     y1 = slider->posY + 2;
 12112  001786  EE20 F002          	lfsr	2,2
 12113  00178A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12114  00178C  26D9               	addwf	fsr2l,f,c
 12115  00178E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12116  001790  22DA               	addwfc	fsr2h,f,c
 12117  001792  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12118  001796  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12119  00179A  0E02               	movlw	2
 12120  00179C  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12121  00179E  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12122  0017A0  0E00               	movlw	0
 12123  0017A2  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12124  0017A4  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12125  0017A6                     
 12126                           ;libraries/lcd_highlevel.c: 352:     y2 = slider->posY + slider->height - 2;
 12127  0017A6  EE20 F006          	lfsr	2,6
 12128  0017AA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12129  0017AC  26D9               	addwf	fsr2l,f,c
 12130  0017AE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12131  0017B0  22DA               	addwfc	fsr2h,f,c
 12132  0017B2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12133  0017B6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12134  0017BA  EE20 F002          	lfsr	2,2
 12135  0017BE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12136  0017C0  26D9               	addwf	fsr2l,f,c
 12137  0017C2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12138  0017C4  22DA               	addwfc	fsr2h,f,c
 12139  0017C6  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12140  0017CA  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12141  0017CE  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12142  0017D0  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12143  0017D2  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12144  0017D4  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12145  0017D6  0EFE               	movlw	254
 12146  0017D8  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12147  0017DA  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12148  0017DC  0EFF               	movlw	255
 12149  0017DE  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12150  0017E0  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12151                           
 12152                           ;libraries/lcd_highlevel.c: 353:   }
 12153  0017E2  EF7D  F00C         	goto	l8913
 12154  0017E6                     l8905:
 12155                           
 12156                           ;libraries/lcd_highlevel.c: 357:   {;libraries/lcd_highlevel.c: 358:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->value)/ slider->steps);
 12157  0017E6  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12158  0017EA  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12159  0017EE  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12160  0017F2  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12161  0017F6  EE20 F00E          	lfsr	2,14
 12162  0017FA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12163  0017FC  26D9               	addwf	fsr2l,f,c
 12164  0017FE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12165  001800  22DA               	addwfc	fsr2h,f,c
 12166  001802  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12167  001806  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12168  00180A  EE20 F004          	lfsr	2,4
 12169  00180E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12170  001810  26D9               	addwf	fsr2l,f,c
 12171  001812  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12172  001814  22DA               	addwfc	fsr2h,f,c
 12173  001816  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 12174  00181A  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 12175  00181E  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 12176  001820  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 12177  001822  6E1A               	movwf	___wmul@multiplier^0,c
 12178  001824  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 12179  001826  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 12180  001828  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 12181  00182A  EE20 F011          	lfsr	2,17
 12182  00182E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12183  001830  26D9               	addwf	fsr2l,f,c
 12184  001832  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12185  001834  22DA               	addwfc	fsr2h,f,c
 12186  001836  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12187  00183A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12188  00183E  EC45  F031         	call	___wmul	;wreg free
 12189  001842  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12190  001846  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12191  00184A  EE20 F015          	lfsr	2,21
 12192  00184E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12193  001850  26D9               	addwf	fsr2l,f,c
 12194  001852  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12195  001854  22DA               	addwfc	fsr2h,f,c
 12196  001856  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12197  00185A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12198  00185E  EC40  F02E         	call	___lwdiv	;wreg free
 12199  001862  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12200  001864  2620               	addwf	?___lwdiv^0,f,c
 12201  001866  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12202  001868  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12203  00186A  0E01               	movlw	1
 12204  00186C  2420               	addwf	?___lwdiv^0,w,c
 12205  00186E  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12206  001870  0E00               	movlw	0
 12207  001872  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12208  001874  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12209  001876                     
 12210                           ;libraries/lcd_highlevel.c: 359:     x2 = x1 + slider->cursorWidth-2;
 12211  001876  EE20 F00E          	lfsr	2,14
 12212  00187A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12213  00187C  26D9               	addwf	fsr2l,f,c
 12214  00187E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12215  001880  22DA               	addwfc	fsr2h,f,c
 12216  001882  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12217  001886  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12218  00188A  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 12219  00188C  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 12220  00188E  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 12221  001890  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 12222  001892  0EFE               	movlw	254
 12223  001894  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12224  001896  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12225  001898  0EFF               	movlw	255
 12226  00189A  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12227  00189C  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12228  00189E                     
 12229                           ;libraries/lcd_highlevel.c: 360:     y1 = slider->posY + 2;
 12230  00189E  EE20 F002          	lfsr	2,2
 12231  0018A2  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12232  0018A4  26D9               	addwf	fsr2l,f,c
 12233  0018A6  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12234  0018A8  22DA               	addwfc	fsr2h,f,c
 12235  0018AA  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12236  0018AE  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12237  0018B2  0E02               	movlw	2
 12238  0018B4  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12239  0018B6  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12240  0018B8  0E00               	movlw	0
 12241  0018BA  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12242  0018BC  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12243  0018BE                     
 12244                           ;libraries/lcd_highlevel.c: 361:     y2 = slider->posY + slider->height - 2;
 12245  0018BE  EE20 F006          	lfsr	2,6
 12246  0018C2  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12247  0018C4  26D9               	addwf	fsr2l,f,c
 12248  0018C6  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12249  0018C8  22DA               	addwfc	fsr2h,f,c
 12250  0018CA  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12251  0018CE  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12252  0018D2  EE20 F002          	lfsr	2,2
 12253  0018D6  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12254  0018D8  26D9               	addwf	fsr2l,f,c
 12255  0018DA  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12256  0018DC  22DA               	addwfc	fsr2h,f,c
 12257  0018DE  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12258  0018E2  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12259  0018E6  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12260  0018E8  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12261  0018EA  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12262  0018EC  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12263  0018EE  0EFE               	movlw	254
 12264  0018F0  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12265  0018F2  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12266  0018F4  0EFF               	movlw	255
 12267  0018F6  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12268  0018F8  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12269  0018FA                     l8913:
 12270                           
 12271                           ;libraries/lcd_highlevel.c: 363:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->sldColor);
 12272  0018FA  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12273  0018FE  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12274  001902  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12275  001906  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12276  00190A  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12277  00190E  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12278  001912  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12279  001916  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12280  00191A  0E01               	movlw	1
 12281  00191C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12282  00191E  EE20 F008          	lfsr	2,8
 12283  001922  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12284  001924  26D9               	addwf	fsr2l,f,c
 12285  001926  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12286  001928  22DA               	addwfc	fsr2h,f,c
 12287  00192A  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12288  00192E  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12289  001932  EC84  F016         	call	_LCD_DrawRect	;wreg free
 12290  001936  0012               	return		;funcret
 12291  001938                     __end_of_LCD_SliderUpdate:
 12292                           	callstack 0
 12293                           
 12294 ;; *************** function _Menu_endGame *****************
 12295 ;; Defined at:
 12296 ;;		line 43 in file "class/menu.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12299 ;;		 -> g1(239), 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;		None
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  1    wreg      void 
 12304 ;; Registers used:
 12305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12311 ;;      Params:         0       2       0       0       0       0       0
 12312 ;;      Locals:         0       0       0       0       0       0       0
 12313 ;;      Temps:          2       0       0       0       0       0       0
 12314 ;;      Totals:         2       2       0       0       0       0       0
 12315 ;;Total ram usage:        4 bytes
 12316 ;; Hardware stack levels used: 1
 12317 ;; Hardware stack levels required when called: 7
 12318 ;; This function calls:
 12319 ;;		_LCD_ButtonDraw
 12320 ;;		_LCD_DrawText
 12321 ;;		_LCD_Fill
 12322 ;; This function is called by:
 12323 ;;		_displayController
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           	psect	text47
 12328  0056D8                     __ptext47:
 12329                           	callstack 0
 12330  0056D8                     _Menu_endGame:
 12331                           	callstack 19
 12332  0056D8                     
 12333                           ;class/menu.c: 43: void Menu_endGame(GameParameters* g);class/menu.c: 44: {;class/menu.c
      +                          : 45:     LCD_Fill(0b0000000000000000);
 12334  0056D8  0E00               	movlw	0
 12335  0056DA  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12336  0056DC  0E00               	movlw	0
 12337  0056DE  6E12               	movwf	LCD_Fill@color^0,c
 12338  0056E0  EC9A  F029         	call	_LCD_Fill	;wreg free
 12339  0056E4                     
 12340                           ;class/menu.c: 46:     LCD_ButtonDraw(&(g->btnNewGame));
 12341  0056E4  0E80               	movlw	128
 12342  0056E6  0100               	movlb	0	; () banked
 12343  0056E8  259C               	addwf	Menu_endGame@g& (0+255),w,b
 12344  0056EA  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12345  0056EC  0E00               	movlw	0
 12346  0056EE  219D               	addwfc	(Menu_endGame@g+1)& (0+255),w,b
 12347  0056F0  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12348  0056F2  ECBA  F007         	call	_LCD_ButtonDraw	;wreg free
 12349  0056F6                     
 12350                           ;class/menu.c: 48:     if(g->s1.homeScore==0)
 12351  0056F6  0100               	movlb	0	; () banked
 12352  0056F8  EE20 F0E9          	lfsr	2,233
 12353  0056FC  519C               	movf	Menu_endGame@g& (0+255),w,b
 12354  0056FE  26D9               	addwf	fsr2l,f,c
 12355  005700  519D               	movf	(Menu_endGame@g+1)& (0+255),w,b
 12356  005702  22DA               	addwfc	fsr2h,f,c
 12357  005704  50DE               	movf	postinc2,w,c
 12358  005706  10DE               	iorwf	postinc2,w,c
 12359  005708  A4D8               	btfss	status,2,c
 12360  00570A  EF89  F02B         	goto	u6831
 12361  00570E  EF8B  F02B         	goto	u6830
 12362  005712                     u6831:
 12363  005712  EFA8  F02B         	goto	l9701
 12364  005716                     u6830:
 12365  005716                     
 12366                           ; BSR set to: 0
 12367                           ;class/menu.c: 49:     {;class/menu.c: 50:         LCD_DrawText("PLAYER 2 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,100,50,0b1111111111111111,0b0000000000000000);
 12368  005716  0E93               	movlw	low STR_13
 12369  005718  6E20               	movwf	LCD_DrawText@msg^0,c
 12370  00571A  0E7F               	movlw	high STR_13
 12371  00571C  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12372  00571E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 12373  005720  6E22               	movwf	LCD_DrawText@font^0,c
 12374  005722  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12375  005724  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12376  005726  0E02               	movlw	2
 12377  005728  6E24               	movwf	LCD_DrawText@align^0,c
 12378  00572A  0E00               	movlw	0
 12379  00572C  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12380  00572E  0E64               	movlw	100
 12381  005730  6E25               	movwf	LCD_DrawText@posX^0,c
 12382  005732  0E00               	movlw	0
 12383  005734  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12384  005736  0E32               	movlw	50
 12385  005738  6E27               	movwf	LCD_DrawText@posY^0,c
 12386  00573A  0EFF               	movlw	255
 12387  00573C  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12388  00573E  6829               	setf	LCD_DrawText@color^0,c
 12389  005740  0E00               	movlw	0
 12390  005742  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12391  005744  0E00               	movlw	0
 12392  005746  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12393  005748  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 12394                           
 12395                           ;class/menu.c: 51:     }
 12396  00574C  EFC3  F02B         	goto	l188
 12397  005750                     l9701:
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;class/menu.c: 53:     {;class/menu.c: 54:         LCD_DrawText("PLAYER 1 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,100,50,0b1111111111111111,0b0000000000000000);
 12401  005750  0E86               	movlw	low STR_14
 12402  005752  6E20               	movwf	LCD_DrawText@msg^0,c
 12403  005754  0E7F               	movlw	high STR_14
 12404  005756  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12405  005758  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 12406  00575A  6E22               	movwf	LCD_DrawText@font^0,c
 12407  00575C  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12408  00575E  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12409  005760  0E02               	movlw	2
 12410  005762  6E24               	movwf	LCD_DrawText@align^0,c
 12411  005764  0E00               	movlw	0
 12412  005766  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12413  005768  0E64               	movlw	100
 12414  00576A  6E25               	movwf	LCD_DrawText@posX^0,c
 12415  00576C  0E00               	movlw	0
 12416  00576E  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12417  005770  0E32               	movlw	50
 12418  005772  6E27               	movwf	LCD_DrawText@posY^0,c
 12419  005774  0EFF               	movlw	255
 12420  005776  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12421  005778  6829               	setf	LCD_DrawText@color^0,c
 12422  00577A  0E00               	movlw	0
 12423  00577C  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12424  00577E  0E00               	movlw	0
 12425  005780  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12426  005782  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 12427  005786                     l188:
 12428  005786  0012               	return		;funcret
 12429  005788                     __end_of_Menu_endGame:
 12430                           	callstack 0
 12431                           
 12432 ;; *************** function _LCD_ButtonDraw *****************
 12433 ;; Defined at:
 12434 ;;		line 462 in file "libraries/lcd_highlevel.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;  button          2   28[BANK0 ] PTR struct .
 12437 ;;		 -> g1(239), 
 12438 ;; Auto vars:     Size  Location     Type
 12439 ;;  bmpPtr          2   58[BANK0 ] PTR struct .
 12440 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 12441 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 12442 ;;  yText           2   55[BANK0 ] unsigned short 
 12443 ;;  xText           2   53[BANK0 ] unsigned short 
 12444 ;;  y2              2   51[BANK0 ] unsigned short 
 12445 ;;  y1              2   49[BANK0 ] unsigned short 
 12446 ;;  x2              2   47[BANK0 ] unsigned short 
 12447 ;;  x1              2   45[BANK0 ] unsigned short 
 12448 ;;  width           2   43[BANK0 ] unsigned short 
 12449 ;;  i               1   57[BANK0 ] unsigned char 
 12450 ;;  tempChar        1   42[BANK0 ] unsigned char 
 12451 ;; Return value:  Size  Location     Type
 12452 ;;                  1    wreg      void 
 12453 ;; Registers used:
 12454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12455 ;; Tracked objects:
 12456 ;;		On entry : 0/0
 12457 ;;		On exit  : 0/0
 12458 ;;		Unchanged: 0/0
 12459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12460 ;;      Params:         0       2       0       0       0       0       0
 12461 ;;      Locals:         0      18       0       0       0       0       0
 12462 ;;      Temps:          0      12       0       0       0       0       0
 12463 ;;      Totals:         0      32       0       0       0       0       0
 12464 ;;Total ram usage:       32 bytes
 12465 ;; Hardware stack levels used: 1
 12466 ;; Hardware stack levels required when called: 6
 12467 ;; This function calls:
 12468 ;;		_LCD_Bitmap
 12469 ;;		_LCD_ButtonUpdate
 12470 ;;		_LCD_DrawRect
 12471 ;;		_LCD_DrawText
 12472 ;;		___awdiv
 12473 ;;		_strlen
 12474 ;; This function is called by:
 12475 ;;		_Menu_welcomeDraw
 12476 ;;		_Menu_parametersDraw
 12477 ;;		_Menu_endGame
 12478 ;; This function uses a non-reentrant model
 12479 ;;
 12480                           
 12481                           	psect	text48
 12482  000F74                     __ptext48:
 12483                           	callstack 0
 12484  000F74                     _LCD_ButtonDraw:
 12485                           	callstack 19
 12486  000F74                     
 12487                           ;libraries/lcd_highlevel.c: 462: void LCD_ButtonDraw(btn_t * button);libraries/lcd_highl
      +                          evel.c: 463: {;libraries/lcd_highlevel.c: 464:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 465:   uint16_t xText,yText;;libraries/lcd_highlevel.c: 466:   uint8_t i, temp
      +                          Char;;libraries/lcd_highlevel.c: 467:   uint16_t width=0;
 12488  000F74  0E00               	movlw	0
 12489  000F76  0100               	movlb	0	; () banked
 12490  000F78  6F8C               	movwf	(LCD_ButtonDraw@width+1)& (0+255),b
 12491  000F7A  0E00               	movlw	0
 12492  000F7C  6F8B               	movwf	LCD_ButtonDraw@width& (0+255),b
 12493  000F7E                     
 12494                           ; BSR set to: 0
 12495                           ;libraries/lcd_highlevel.c: 468:   BMP_STRUCT *bmpPtr;;libraries/lcd_highlevel.c: 470:  
      +                           x1 = button->posX;
 12496  000F7E  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12497  000F82  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12498  000F86  CFDE F08D          	movff	postinc2,LCD_ButtonDraw@x1
 12499  000F8A  CFDD F08E          	movff	postdec2,LCD_ButtonDraw@x1+1
 12500  000F8E                     
 12501                           ; BSR set to: 0
 12502                           ;libraries/lcd_highlevel.c: 471:   x2 = button->posX + button->width;
 12503  000F8E  EE20 F004          	lfsr	2,4
 12504  000F92  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12505  000F94  26D9               	addwf	fsr2l,f,c
 12506  000F96  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12507  000F98  22DA               	addwfc	fsr2h,f,c
 12508  000F9A  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12509  000F9E  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12510  000FA2  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12511  000FA6  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12512  000FAA  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12513  000FAE  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12514  000FB2  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12515  000FB4  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12516  000FB6  6F8F               	movwf	LCD_ButtonDraw@x2& (0+255),b
 12517  000FB8  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12518  000FBA  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12519  000FBC  6F90               	movwf	(LCD_ButtonDraw@x2+1)& (0+255),b
 12520  000FBE                     
 12521                           ; BSR set to: 0
 12522                           ;libraries/lcd_highlevel.c: 472:   y1 = button->posY;
 12523  000FBE  EE20 F002          	lfsr	2,2
 12524  000FC2  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12525  000FC4  26D9               	addwf	fsr2l,f,c
 12526  000FC6  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12527  000FC8  22DA               	addwfc	fsr2h,f,c
 12528  000FCA  CFDE F091          	movff	postinc2,LCD_ButtonDraw@y1
 12529  000FCE  CFDD F092          	movff	postdec2,LCD_ButtonDraw@y1+1
 12530  000FD2                     
 12531                           ; BSR set to: 0
 12532                           ;libraries/lcd_highlevel.c: 473:   y2 = button->posY + button->height;
 12533  000FD2  EE20 F006          	lfsr	2,6
 12534  000FD6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12535  000FD8  26D9               	addwf	fsr2l,f,c
 12536  000FDA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12537  000FDC  22DA               	addwfc	fsr2h,f,c
 12538  000FDE  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12539  000FE2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12540  000FE6  EE20 F002          	lfsr	2,2
 12541  000FEA  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12542  000FEC  26D9               	addwf	fsr2l,f,c
 12543  000FEE  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12544  000FF0  22DA               	addwfc	fsr2h,f,c
 12545  000FF2  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12546  000FF6  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12547  000FFA  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12548  000FFC  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12549  000FFE  6F93               	movwf	LCD_ButtonDraw@y2& (0+255),b
 12550  001000  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12551  001002  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12552  001004  6F94               	movwf	(LCD_ButtonDraw@y2+1)& (0+255),b
 12553  001006                     
 12554                           ; BSR set to: 0
 12555                           ;libraries/lcd_highlevel.c: 474:   if(button->bgColor != button->txtColor)
 12556  001006  EE20 F008          	lfsr	2,8
 12557  00100A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12558  00100C  26D9               	addwf	fsr2l,f,c
 12559  00100E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12560  001010  22DA               	addwfc	fsr2h,f,c
 12561  001012  EE10 F00A          	lfsr	1,10
 12562  001016  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12563  001018  26E1               	addwf	fsr1l,f,c
 12564  00101A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12565  00101C  22E2               	addwfc	fsr1h,f,c
 12566  00101E  50DE               	movf	postinc2,w,c
 12567  001020  18E6               	xorwf	postinc1,w,c
 12568  001022  E109               	bnz	u6570
 12569  001024  50DE               	movf	postinc2,w,c
 12570  001026  18E6               	xorwf	postinc1,w,c
 12571  001028  B4D8               	btfsc	status,2,c
 12572  00102A  EF19  F008         	goto	u6571
 12573  00102E  EF1B  F008         	goto	u6570
 12574  001032                     u6571:
 12575  001032  EF58  F008         	goto	l9477
 12576  001036                     u6570:
 12577  001036                     
 12578                           ; BSR set to: 0
 12579                           ;libraries/lcd_highlevel.c: 475:   {;libraries/lcd_highlevel.c: 476:     LCD_DrawRect(x1
      +                          , y1, x2, y2, 1, button->bgColor);
 12580  001036  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12581  00103A  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12582  00103E  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12583  001042  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12584  001046  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12585  00104A  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12586  00104E  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12587  001052  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12588  001056  0E01               	movlw	1
 12589  001058  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12590  00105A  EE20 F00A          	lfsr	2,10
 12591  00105E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12592  001060  26D9               	addwf	fsr2l,f,c
 12593  001062  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12594  001064  22DA               	addwfc	fsr2h,f,c
 12595  001066  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12596  00106A  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12597  00106E  EC84  F016         	call	_LCD_DrawRect	;wreg free
 12598                           
 12599                           ;libraries/lcd_highlevel.c: 477:     LCD_DrawRect(x1, y1, x2, y2, 0, button->txtColor);
 12600  001072  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12601  001076  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12602  00107A  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12603  00107E  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12604  001082  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12605  001086  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12606  00108A  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12607  00108E  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12608  001092  0E00               	movlw	0
 12609  001094  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12610  001096  0100               	movlb	0	; () banked
 12611  001098  EE20 F008          	lfsr	2,8
 12612  00109C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12613  00109E  26D9               	addwf	fsr2l,f,c
 12614  0010A0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12615  0010A2  22DA               	addwfc	fsr2h,f,c
 12616  0010A4  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12617  0010A8  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12618  0010AC  EC84  F016         	call	_LCD_DrawRect	;wreg free
 12619  0010B0                     l9477:
 12620                           
 12621                           ;libraries/lcd_highlevel.c: 482:   if((button->text[0] == 'B')&&(button->text[1] == 'M')
      +                          )
 12622  0010B0  0100               	movlb	0	; () banked
 12623  0010B2  EE20 F00C          	lfsr	2,12
 12624  0010B6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12625  0010B8  26D9               	addwf	fsr2l,f,c
 12626  0010BA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12627  0010BC  22DA               	addwfc	fsr2h,f,c
 12628  0010BE  CFDE FFF6          	movff	postinc2,tblptrl
 12629  0010C2  CFDD FFF7          	movff	postdec2,tblptrh
 12630  0010C6                     	if	0	;tblptru may be non-zero
 12631  0010C6                     	endif
 12632  0010C6                     	if	0	;tblptru may be non-zero
 12633  0010C6                     	endif
 12634  0010C6  0008               	tblrd		*
 12635  0010C8  50F5               	movf	tablat,w,c
 12636  0010CA  0A42               	xorlw	66
 12637  0010CC  A4D8               	btfss	status,2,c
 12638  0010CE  EF6B  F008         	goto	u6581
 12639  0010D2  EF6D  F008         	goto	u6580
 12640  0010D6                     u6581:
 12641  0010D6  EF1D  F009         	goto	l9489
 12642  0010DA                     u6580:
 12643  0010DA                     
 12644                           ; BSR set to: 0
 12645  0010DA  EE20 F00C          	lfsr	2,12
 12646  0010DE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12647  0010E0  26D9               	addwf	fsr2l,f,c
 12648  0010E2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12649  0010E4  22DA               	addwfc	fsr2h,f,c
 12650  0010E6  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12651  0010EA  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12652  0010EE  0E01               	movlw	1
 12653  0010F0  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12654  0010F2  0E00               	movlw	0
 12655  0010F4  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12656  0010F6  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12657  0010FA  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12658  0010FE                     	if	0	;tblptru may be non-zero
 12659  0010FE                     	endif
 12660  0010FE                     	if	0	;tblptru may be non-zero
 12661  0010FE                     	endif
 12662  0010FE  0008               	tblrd		*
 12663  001100  50F5               	movf	tablat,w,c
 12664  001102  0A4D               	xorlw	77
 12665  001104  A4D8               	btfss	status,2,c
 12666  001106  EF87  F008         	goto	u6591
 12667  00110A  EF89  F008         	goto	u6590
 12668  00110E                     u6591:
 12669  00110E  EF1D  F009         	goto	l9489
 12670  001112                     u6590:
 12671  001112                     
 12672                           ; BSR set to: 0
 12673                           ;libraries/lcd_highlevel.c: 483:   {;libraries/lcd_highlevel.c: 484:     bmpPtr = (BMP_S
      +                          TRUCT *)button->text;
 12674  001112  EE20 F00C          	lfsr	2,12
 12675  001116  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12676  001118  26D9               	addwf	fsr2l,f,c
 12677  00111A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12678  00111C  22DA               	addwfc	fsr2h,f,c
 12679  00111E  CFDE F09A          	movff	postinc2,LCD_ButtonDraw@bmpPtr
 12680  001122  CFDD F09B          	movff	postdec2,LCD_ButtonDraw@bmpPtr+1
 12681  001126                     
 12682                           ; BSR set to: 0
 12683                           ;libraries/lcd_highlevel.c: 485:     yText = button->height / 2 + button->posY - (bmpPtr
      +                          ->biHeight / 2);
 12684  001126  EE20 F002          	lfsr	2,2
 12685  00112A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12686  00112C  26D9               	addwf	fsr2l,f,c
 12687  00112E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12688  001130  22DA               	addwfc	fsr2h,f,c
 12689  001132  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12690  001136  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12691  00113A  0E16               	movlw	22
 12692  00113C  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12693  00113E  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12694  001140  0E00               	movlw	0
 12695  001142  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12696  001144  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12697  001146  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12698  00114A  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12699  00114E                     	if	0	;tblptru may be non-zero
 12700  00114E                     	endif
 12701  00114E                     	if	0	;tblptru may be non-zero
 12702  00114E                     	endif
 12703  00114E  0009               	tblrd		*+
 12704  001150  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12705  001154  0009               	tblrd		*+
 12706  001156  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12707  00115A  0009               	tblrd		*+
 12708  00115C  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12709  001160  0009               	tblrd		*+
 12710  001162  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12711  001166  90D8               	bcf	status,0,c
 12712  001168  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12713  00116A  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12714  00116C  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12715  00116E  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12716  001170  EE20 F006          	lfsr	2,6
 12717  001174  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12718  001176  26D9               	addwf	fsr2l,f,c
 12719  001178  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12720  00117A  22DA               	addwfc	fsr2h,f,c
 12721  00117C  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12722  001180  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12723  001184  90D8               	bcf	status,0,c
 12724  001186  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12725  001188  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12726  00118A  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12727  00118C  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12728  00118E  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12729  001190  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12730  001192  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12731  001194  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12732  001196  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12733  001198  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12734  00119A  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12735  00119C  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12736  00119E  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12737  0011A0  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12738  0011A2                     
 12739                           ; BSR set to: 0
 12740                           ;libraries/lcd_highlevel.c: 486:     xText = button->width / 2 + button->posX - (bmpPtr-
      +                          >biWidth / 2);
 12741  0011A2  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12742  0011A6  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12743  0011AA  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12744  0011AE  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12745  0011B2  0E12               	movlw	18
 12746  0011B4  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12747  0011B6  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12748  0011B8  0E00               	movlw	0
 12749  0011BA  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12750  0011BC  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12751  0011BE  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12752  0011C2  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12753  0011C6                     	if	0	;tblptru may be non-zero
 12754  0011C6                     	endif
 12755  0011C6                     	if	0	;tblptru may be non-zero
 12756  0011C6                     	endif
 12757  0011C6  0009               	tblrd		*+
 12758  0011C8  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12759  0011CC  0009               	tblrd		*+
 12760  0011CE  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12761  0011D2  0009               	tblrd		*+
 12762  0011D4  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12763  0011D8  0009               	tblrd		*+
 12764  0011DA  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12765  0011DE  90D8               	bcf	status,0,c
 12766  0011E0  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12767  0011E2  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12768  0011E4  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12769  0011E6  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12770  0011E8  EE20 F004          	lfsr	2,4
 12771  0011EC  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12772  0011EE  26D9               	addwf	fsr2l,f,c
 12773  0011F0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12774  0011F2  22DA               	addwfc	fsr2h,f,c
 12775  0011F4  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12776  0011F8  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12777  0011FC  90D8               	bcf	status,0,c
 12778  0011FE  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12779  001200  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12780  001202  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12781  001204  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12782  001206  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12783  001208  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12784  00120A  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12785  00120C  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12786  00120E  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12787  001210  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12788  001212  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 12789  001214  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12790  001216  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12791  001218  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 12792  00121A                     
 12793                           ; BSR set to: 0
 12794                           ;libraries/lcd_highlevel.c: 487:     LCD_Bitmap((const uint8_t *)bmpPtr,xText,yText);
 12795  00121A  C09A  F027         	movff	LCD_ButtonDraw@bmpPtr,LCD_Bitmap@bmpPtr
 12796  00121E  C09B  F028         	movff	LCD_ButtonDraw@bmpPtr+1,LCD_Bitmap@bmpPtr+1
 12797  001222  C095  F029         	movff	LCD_ButtonDraw@xText,LCD_Bitmap@posX
 12798  001226  C096  F02A         	movff	LCD_ButtonDraw@xText+1,LCD_Bitmap@posX+1
 12799  00122A  C097  F02B         	movff	LCD_ButtonDraw@yText,LCD_Bitmap@posY
 12800  00122E  C098  F02C         	movff	LCD_ButtonDraw@yText+1,LCD_Bitmap@posY+1
 12801  001232  ECBF  F004         	call	_LCD_Bitmap	;wreg free
 12802                           
 12803                           ;libraries/lcd_highlevel.c: 488:   }
 12804  001236  EF2A  F00A         	goto	l9505
 12805  00123A                     l9489:
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;libraries/lcd_highlevel.c: 493:   {;libraries/lcd_highlevel.c: 494:     yText = button-
      +                          >height / 2 + button->posY - (button->font->height / 2);
 12809  00123A  EE20 F002          	lfsr	2,2
 12810  00123E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12811  001240  26D9               	addwf	fsr2l,f,c
 12812  001242  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12813  001244  22DA               	addwfc	fsr2h,f,c
 12814  001246  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12815  00124A  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12816  00124E  EE20 F00E          	lfsr	2,14
 12817  001252  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12818  001254  26D9               	addwf	fsr2l,f,c
 12819  001256  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12820  001258  22DA               	addwfc	fsr2h,f,c
 12821  00125A  CFDE FFF6          	movff	postinc2,tblptrl
 12822  00125E  CFDD FFF7          	movff	postdec2,tblptrh
 12823  001262                     	if	0	;tblptru may be non-zero
 12824  001262                     	endif
 12825  001262                     	if	0	;tblptru may be non-zero
 12826  001262                     	endif
 12827  001262  0008               	tblrd		*
 12828  001264  50F5               	movf	tablat,w,c
 12829  001266  6E12               	movwf	___awdiv@dividend^0,c
 12830  001268  6A13               	clrf	(___awdiv@dividend+1)^0,c
 12831  00126A  0E00               	movlw	0
 12832  00126C  6E15               	movwf	(___awdiv@divisor+1)^0,c
 12833  00126E  0E02               	movlw	2
 12834  001270  6E14               	movwf	___awdiv@divisor^0,c
 12835  001272  ECD7  F028         	call	___awdiv	;wreg free
 12836  001276  0100               	movlb	0	; () banked
 12837  001278  EE20 F006          	lfsr	2,6
 12838  00127C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12839  00127E  26D9               	addwf	fsr2l,f,c
 12840  001280  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12841  001282  22DA               	addwfc	fsr2h,f,c
 12842  001284  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12843  001288  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12844  00128C  90D8               	bcf	status,0,c
 12845  00128E  3181               	rrcf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12846  001290  6F83               	movwf	(??_LCD_ButtonDraw+5)& (0+255),b
 12847  001292  3180               	rrcf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12848  001294  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12849  001296  5012               	movf	?___awdiv^0,w,c
 12850  001298  5F82               	subwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12851  00129A  5013               	movf	(?___awdiv+1)^0,w,c
 12852  00129C  5B83               	subwfb	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12853  00129E  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12854  0012A0  2582               	addwf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12855  0012A2  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12856  0012A4  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12857  0012A6  2183               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12858  0012A8  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12859  0012AA                     
 12860                           ; BSR set to: 0
 12861                           ;libraries/lcd_highlevel.c: 495:     for(i=0;i<strlen(button->text);i++)
 12862  0012AA  0E00               	movlw	0
 12863  0012AC  6F99               	movwf	LCD_ButtonDraw@i& (0+255),b
 12864  0012AE  EFB5  F009         	goto	l9499
 12865  0012B2                     l9493:
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;libraries/lcd_highlevel.c: 496:     {;libraries/lcd_highlevel.c: 497:       tempChar = 
      +                          (button->text[i]) - button->font->start_char;
 12869  0012B2  EE20 F00E          	lfsr	2,14
 12870  0012B6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12871  0012B8  26D9               	addwf	fsr2l,f,c
 12872  0012BA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12873  0012BC  22DA               	addwfc	fsr2h,f,c
 12874  0012BE  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12875  0012C2  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12876  0012C6  0E01               	movlw	1
 12877  0012C8  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12878  0012CA  0E00               	movlw	0
 12879  0012CC  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12880  0012CE  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12881  0012D2  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12882  0012D6                     	if	0	;tblptru may be non-zero
 12883  0012D6                     	endif
 12884  0012D6                     	if	0	;tblptru may be non-zero
 12885  0012D6                     	endif
 12886  0012D6  0008               	tblrd		*
 12887  0012D8  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12888  0012DC  EE20 F00C          	lfsr	2,12
 12889  0012E0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12890  0012E2  26D9               	addwf	fsr2l,f,c
 12891  0012E4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12892  0012E6  22DA               	addwfc	fsr2h,f,c
 12893  0012E8  CFDE F081          	movff	postinc2,??_LCD_ButtonDraw+3
 12894  0012EC  CFDD F082          	movff	postdec2,??_LCD_ButtonDraw+4
 12895  0012F0  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12896  0012F2  2781               	addwf	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12897  0012F4  0E00               	movlw	0
 12898  0012F6  2382               	addwfc	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12899  0012F8  C081  FFF6         	movff	??_LCD_ButtonDraw+3,tblptrl
 12900  0012FC  C082  FFF7         	movff	??_LCD_ButtonDraw+4,tblptrh
 12901  001300                     	if	0	;tblptru may be non-zero
 12902  001300                     	endif
 12903  001300                     	if	0	;tblptru may be non-zero
 12904  001300                     	endif
 12905  001300  0008               	tblrd		*
 12906  001302  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12907  001306  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12908  001308  5D83               	subwf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12909  00130A  6F8A               	movwf	LCD_ButtonDraw@tempChar& (0+255),b
 12910  00130C                     
 12911                           ; BSR set to: 0
 12912                           ;libraries/lcd_highlevel.c: 498:       width += button->font->descriptor[tempChar].width
      +                          +2;
 12913  00130C  518A               	movf	LCD_ButtonDraw@tempChar& (0+255),w,b
 12914  00130E  0D03               	mullw	3
 12915  001310  EE20 F00E          	lfsr	2,14
 12916  001314  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12917  001316  26D9               	addwf	fsr2l,f,c
 12918  001318  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12919  00131A  22DA               	addwfc	fsr2h,f,c
 12920  00131C  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12921  001320  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12922  001324  0E03               	movlw	3
 12923  001326  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12924  001328  0E00               	movlw	0
 12925  00132A  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12926  00132C  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12927  001330  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12928  001334                     	if	0	;tblptru may be non-zero
 12929  001334                     	endif
 12930  001334                     	if	0	;tblptru may be non-zero
 12931  001334                     	endif
 12932  001334  0009               	tblrd		*+
 12933  001336  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12934  00133A  0009               	tblrd		*+
 12935  00133C  CFF5 F081          	movff	tablat,??_LCD_ButtonDraw+3
 12936  001340  50F3               	movf	243,w,c
 12937  001342  2780               	addwf	(??_LCD_ButtonDraw+2)& (0+255),f,b
 12938  001344  50F4               	movf	244,w,c
 12939  001346  2381               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12940  001348  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12941  00134C  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12942  001350                     	if	0	;tblptru may be non-zero
 12943  001350                     	endif
 12944  001350                     	if	0	;tblptru may be non-zero
 12945  001350                     	endif
 12946  001350  0008               	tblrd		*
 12947  001352  50F5               	movf	tablat,w,c
 12948  001354  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12949  001356  6B83               	clrf	(??_LCD_ButtonDraw+5)& (0+255),b
 12950  001358  0E02               	movlw	2
 12951  00135A  2782               	addwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12952  00135C  0E00               	movlw	0
 12953  00135E  2383               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12954  001360  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12955  001362  278B               	addwf	LCD_ButtonDraw@width& (0+255),f,b
 12956  001364  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12957  001366  238C               	addwfc	(LCD_ButtonDraw@width+1)& (0+255),f,b
 12958  001368                     
 12959                           ; BSR set to: 0
 12960                           ;libraries/lcd_highlevel.c: 499:     }
 12961  001368  2B99               	incf	LCD_ButtonDraw@i& (0+255),f,b
 12962  00136A                     l9499:
 12963                           
 12964                           ; BSR set to: 0
 12965  00136A  EE20 F00C          	lfsr	2,12
 12966  00136E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12967  001370  26D9               	addwf	fsr2l,f,c
 12968  001372  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12969  001374  22DA               	addwfc	fsr2h,f,c
 12970  001376  CFDE F012          	movff	postinc2,strlen@s
 12971  00137A  CFDD F013          	movff	postdec2,strlen@s+1
 12972  00137E  EC18  F030         	call	_strlen	;wreg free
 12973  001382  0100               	movlb	0	; () banked
 12974  001384  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12975  001386  6F7E               	movwf	??_LCD_ButtonDraw& (0+255),b
 12976  001388  6B7F               	clrf	(??_LCD_ButtonDraw+1)& (0+255),b
 12977  00138A  5012               	movf	?_strlen^0,w,c
 12978  00138C  5D7E               	subwf	??_LCD_ButtonDraw& (0+255),w,b
 12979  00138E  5013               	movf	(?_strlen+1)^0,w,c
 12980  001390  597F               	subwfb	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12981  001392  A0D8               	btfss	status,0,c
 12982  001394  EFCE  F009         	goto	u6601
 12983  001398  EFD0  F009         	goto	u6600
 12984  00139C                     u6601:
 12985  00139C  EF59  F009         	goto	l9493
 12986  0013A0                     u6600:
 12987  0013A0                     
 12988                           ; BSR set to: 0
 12989                           ;libraries/lcd_highlevel.c: 500:     xText = button->width / 2 + button->posX - (width /
      +                           2);
 12990  0013A0  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12991  0013A4  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12992  0013A8  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12993  0013AC  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12994  0013B0  90D8               	bcf	status,0,c
 12995  0013B2  318C               	rrcf	(LCD_ButtonDraw@width+1)& (0+255),w,b
 12996  0013B4  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12997  0013B6  318B               	rrcf	LCD_ButtonDraw@width& (0+255),w,b
 12998  0013B8  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12999  0013BA  EE20 F004          	lfsr	2,4
 13000  0013BE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13001  0013C0  26D9               	addwf	fsr2l,f,c
 13002  0013C2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13003  0013C4  22DA               	addwfc	fsr2h,f,c
 13004  0013C6  CFDE F082          	movff	postinc2,??_LCD_ButtonDraw+4
 13005  0013CA  CFDD F083          	movff	postdec2,??_LCD_ButtonDraw+5
 13006  0013CE  90D8               	bcf	status,0,c
 13007  0013D0  3183               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 13008  0013D2  6F85               	movwf	(??_LCD_ButtonDraw+7)& (0+255),b
 13009  0013D4  3182               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 13010  0013D6  6F84               	movwf	(??_LCD_ButtonDraw+6)& (0+255),b
 13011  0013D8  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 13012  0013DA  5F84               	subwf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 13013  0013DC  5181               	movf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 13014  0013DE  5B85               	subwfb	(??_LCD_ButtonDraw+7)& (0+255),f,b
 13015  0013E0  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13016  0013E2  2584               	addwf	(??_LCD_ButtonDraw+6)& (0+255),w,b
 13017  0013E4  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 13018  0013E6  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13019  0013E8  2185               	addwfc	(??_LCD_ButtonDraw+7)& (0+255),w,b
 13020  0013EA  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 13021  0013EC                     
 13022                           ; BSR set to: 0
 13023                           ;libraries/lcd_highlevel.c: 501:     LCD_DrawText(button->text, button->font,A_LEFT,
 13024  0013EC  EE20 F00C          	lfsr	2,12
 13025  0013F0  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13026  0013F2  26D9               	addwf	fsr2l,f,c
 13027  0013F4  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13028  0013F6  22DA               	addwfc	fsr2h,f,c
 13029  0013F8  CFDE F020          	movff	postinc2,LCD_DrawText@msg
 13030  0013FC  CFDD F021          	movff	postdec2,LCD_DrawText@msg+1
 13031  001400  EE20 F00E          	lfsr	2,14
 13032  001404  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13033  001406  26D9               	addwf	fsr2l,f,c
 13034  001408  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13035  00140A  22DA               	addwfc	fsr2h,f,c
 13036  00140C  CFDE F022          	movff	postinc2,LCD_DrawText@font
 13037  001410  CFDD F023          	movff	postdec2,LCD_DrawText@font+1
 13038  001414  0E00               	movlw	0
 13039  001416  6E24               	movwf	LCD_DrawText@align^0,c
 13040  001418  C095  F025         	movff	LCD_ButtonDraw@xText,LCD_DrawText@posX
 13041  00141C  C096  F026         	movff	LCD_ButtonDraw@xText+1,LCD_DrawText@posX+1
 13042  001420  C097  F027         	movff	LCD_ButtonDraw@yText,LCD_DrawText@posY
 13043  001424  C098  F028         	movff	LCD_ButtonDraw@yText+1,LCD_DrawText@posY+1
 13044  001428  EE20 F008          	lfsr	2,8
 13045  00142C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13046  00142E  26D9               	addwf	fsr2l,f,c
 13047  001430  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13048  001432  22DA               	addwfc	fsr2h,f,c
 13049  001434  CFDE F029          	movff	postinc2,LCD_DrawText@color
 13050  001438  CFDD F02A          	movff	postdec2,LCD_DrawText@color+1
 13051  00143C  EE20 F00A          	lfsr	2,10
 13052  001440  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13053  001442  26D9               	addwf	fsr2l,f,c
 13054  001444  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13055  001446  22DA               	addwfc	fsr2h,f,c
 13056  001448  CFDE F02B          	movff	postinc2,LCD_DrawText@bg_color
 13057  00144C  CFDD F02C          	movff	postdec2,LCD_DrawText@bg_color+1
 13058  001450  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 13059  001454                     l9505:
 13060                           
 13061                           ;libraries/lcd_highlevel.c: 504:   LCD_ButtonUpdate(button);
 13062  001454  C07C  F025         	movff	LCD_ButtonDraw@button,LCD_ButtonUpdate@button
 13063  001458  C07D  F026         	movff	LCD_ButtonDraw@button+1,LCD_ButtonUpdate@button+1
 13064  00145C  EC1B  F01C         	call	_LCD_ButtonUpdate	;wreg free
 13065  001460  0012               	return		;funcret
 13066  001462                     __end_of_LCD_ButtonDraw:
 13067                           	callstack 0
 13068                           
 13069 ;; *************** function _LCD_ButtonUpdate *****************
 13070 ;; Defined at:
 13071 ;;		line 425 in file "libraries/lcd_highlevel.c"
 13072 ;; Parameters:    Size  Location     Type
 13073 ;;  button          2   36[COMRAM] PTR struct .
 13074 ;;		 -> g1(239), 
 13075 ;; Auto vars:     Size  Location     Type
 13076 ;;  y2              2   52[COMRAM] unsigned short 
 13077 ;;  x1              2   50[COMRAM] unsigned short 
 13078 ;;  y1              2   48[COMRAM] unsigned short 
 13079 ;;  x2              2   46[COMRAM] unsigned short 
 13080 ;;  colorIn         2   44[COMRAM] unsigned short 
 13081 ;;  colorOut        2   42[COMRAM] unsigned short 
 13082 ;; Return value:  Size  Location     Type
 13083 ;;                  1    wreg      void 
 13084 ;; Registers used:
 13085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13086 ;; Tracked objects:
 13087 ;;		On entry : 0/0
 13088 ;;		On exit  : 0/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13091 ;;      Params:         2       0       0       0       0       0       0
 13092 ;;      Locals:        12       0       0       0       0       0       0
 13093 ;;      Temps:          4       0       0       0       0       0       0
 13094 ;;      Totals:        18       0       0       0       0       0       0
 13095 ;;Total ram usage:       18 bytes
 13096 ;; Hardware stack levels used: 1
 13097 ;; Hardware stack levels required when called: 5
 13098 ;; This function calls:
 13099 ;;		_LCD_DrawRect
 13100 ;;		_LCD_Read
 13101 ;; This function is called by:
 13102 ;;		_LCD_ButtonDraw
 13103 ;; This function uses a non-reentrant model
 13104 ;;
 13105                           
 13106                           	psect	text49
 13107  003836                     __ptext49:
 13108                           	callstack 0
 13109  003836                     _LCD_ButtonUpdate:
 13110                           	callstack 19
 13111  003836                     
 13112                           ;libraries/lcd_highlevel.c: 425: void LCD_ButtonUpdate(btn_t * button);libraries/lcd_hig
      +                          hlevel.c: 426: {;libraries/lcd_highlevel.c: 427:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 428:   uint16_t colorOut, colorIn;;libraries/lcd_highlevel.c: 430:   x1 = bu
      +                          tton->posX;
 13113  003836  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13114  00383A  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13115  00383E  CFDE F033          	movff	postinc2,LCD_ButtonUpdate@x1
 13116  003842  CFDD F034          	movff	postdec2,LCD_ButtonUpdate@x1+1
 13117  003846                     
 13118                           ;libraries/lcd_highlevel.c: 431:   x2 = button->posX + button->width;
 13119  003846  EE20 F004          	lfsr	2,4
 13120  00384A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13121  00384C  26D9               	addwf	fsr2l,f,c
 13122  00384E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13123  003850  22DA               	addwfc	fsr2h,f,c
 13124  003852  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13125  003856  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13126  00385A  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13127  00385E  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13128  003862  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13129  003866  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13130  00386A  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13131  00386C  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13132  00386E  6E2F               	movwf	LCD_ButtonUpdate@x2^0,c
 13133  003870  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13134  003872  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13135  003874  6E30               	movwf	(LCD_ButtonUpdate@x2+1)^0,c
 13136  003876                     
 13137                           ;libraries/lcd_highlevel.c: 432:   y1 = button->posY;
 13138  003876  EE20 F002          	lfsr	2,2
 13139  00387A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13140  00387C  26D9               	addwf	fsr2l,f,c
 13141  00387E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13142  003880  22DA               	addwfc	fsr2h,f,c
 13143  003882  CFDE F031          	movff	postinc2,LCD_ButtonUpdate@y1
 13144  003886  CFDD F032          	movff	postdec2,LCD_ButtonUpdate@y1+1
 13145  00388A                     
 13146                           ;libraries/lcd_highlevel.c: 433:   y2 = button->posY + button->height;
 13147  00388A  EE20 F006          	lfsr	2,6
 13148  00388E  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13149  003890  26D9               	addwf	fsr2l,f,c
 13150  003892  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13151  003894  22DA               	addwfc	fsr2h,f,c
 13152  003896  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13153  00389A  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13154  00389E  EE20 F002          	lfsr	2,2
 13155  0038A2  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13156  0038A4  26D9               	addwf	fsr2l,f,c
 13157  0038A6  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13158  0038A8  22DA               	addwfc	fsr2h,f,c
 13159  0038AA  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13160  0038AE  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13161  0038B2  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13162  0038B4  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13163  0038B6  6E35               	movwf	LCD_ButtonUpdate@y2^0,c
 13164  0038B8  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13165  0038BA  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13166  0038BC  6E36               	movwf	(LCD_ButtonUpdate@y2+1)^0,c
 13167  0038BE                     
 13168                           ;libraries/lcd_highlevel.c: 435:   if(button->pressed == 0)
 13169  0038BE  EE20 F010          	lfsr	2,16
 13170  0038C2  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13171  0038C4  26D9               	addwf	fsr2l,f,c
 13172  0038C6  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13173  0038C8  22DA               	addwfc	fsr2h,f,c
 13174  0038CA  50DF               	movf	indf2,w,c
 13175  0038CC  A4D8               	btfss	status,2,c
 13176  0038CE  EF6B  F01C         	goto	u6331
 13177  0038D2  EF6D  F01C         	goto	u6330
 13178  0038D6                     u6331:
 13179  0038D6  EF83  F01C         	goto	l8927
 13180  0038DA                     u6330:
 13181  0038DA                     
 13182                           ;libraries/lcd_highlevel.c: 436:   {;libraries/lcd_highlevel.c: 437:     colorOut = butt
      +                          on->txtColor;
 13183  0038DA  EE20 F008          	lfsr	2,8
 13184  0038DE  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13185  0038E0  26D9               	addwf	fsr2l,f,c
 13186  0038E2  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13187  0038E4  22DA               	addwfc	fsr2h,f,c
 13188  0038E6  CFDE F02B          	movff	postinc2,LCD_ButtonUpdate@colorOut
 13189  0038EA  CFDD F02C          	movff	postdec2,LCD_ButtonUpdate@colorOut+1
 13190                           
 13191                           ;libraries/lcd_highlevel.c: 438:     colorIn = button->bgColor;
 13192  0038EE  EE20 F00A          	lfsr	2,10
 13193  0038F2  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13194  0038F4  26D9               	addwf	fsr2l,f,c
 13195  0038F6  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13196  0038F8  22DA               	addwfc	fsr2h,f,c
 13197  0038FA  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13198  0038FE  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13199                           
 13200                           ;libraries/lcd_highlevel.c: 439:   }
 13201  003902  EF9D  F01C         	goto	l8931
 13202  003906                     l8927:
 13203                           
 13204                           ;libraries/lcd_highlevel.c: 441:   {;libraries/lcd_highlevel.c: 443:     colorOut = LCD_
      +                          Read(x1,y2+1);
 13205  003906  C033  F012         	movff	LCD_ButtonUpdate@x1,LCD_Read@posX
 13206  00390A  C034  F013         	movff	LCD_ButtonUpdate@x1+1,LCD_Read@posX+1
 13207  00390E  0E01               	movlw	1
 13208  003910  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13209  003912  6E14               	movwf	LCD_Read@posY^0,c
 13210  003914  0E00               	movlw	0
 13211  003916  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13212  003918  6E15               	movwf	(LCD_Read@posY+1)^0,c
 13213  00391A  EC0B  F021         	call	_LCD_Read	;wreg free
 13214  00391E  C012  F02B         	movff	?_LCD_Read,LCD_ButtonUpdate@colorOut
 13215  003922  C013  F02C         	movff	?_LCD_Read+1,LCD_ButtonUpdate@colorOut+1
 13216  003926                     
 13217                           ;libraries/lcd_highlevel.c: 444:     colorIn = button->txtColor;
 13218  003926  EE20 F008          	lfsr	2,8
 13219  00392A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13220  00392C  26D9               	addwf	fsr2l,f,c
 13221  00392E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13222  003930  22DA               	addwfc	fsr2h,f,c
 13223  003932  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13224  003936  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13225  00393A                     l8931:
 13226                           
 13227                           ;libraries/lcd_highlevel.c: 446:   if(button->bgColor != button->txtColor)
 13228  00393A  EE20 F008          	lfsr	2,8
 13229  00393E  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13230  003940  26D9               	addwf	fsr2l,f,c
 13231  003942  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13232  003944  22DA               	addwfc	fsr2h,f,c
 13233  003946  EE10 F00A          	lfsr	1,10
 13234  00394A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13235  00394C  26E1               	addwf	fsr1l,f,c
 13236  00394E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13237  003950  22E2               	addwfc	fsr1h,f,c
 13238  003952  50DE               	movf	postinc2,w,c
 13239  003954  18E6               	xorwf	postinc1,w,c
 13240  003956  E109               	bnz	u6340
 13241  003958  50DE               	movf	postinc2,w,c
 13242  00395A  18E6               	xorwf	postinc1,w,c
 13243  00395C  B4D8               	btfsc	status,2,c
 13244  00395E  EFB3  F01C         	goto	u6341
 13245  003962  EFB5  F01C         	goto	u6340
 13246  003966                     u6341:
 13247  003966  EF35  F01D         	goto	l251
 13248  00396A                     u6340:
 13249  00396A                     
 13250                           ;libraries/lcd_highlevel.c: 447:   {;libraries/lcd_highlevel.c: 449:     LCD_DrawRect(x1
      +                          +3, y2+1, x2+3, y2+3, 1, colorOut);
 13251  00396A  0E03               	movlw	3
 13252  00396C  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13253  00396E  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13254  003970  0E00               	movlw	0
 13255  003972  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13256  003974  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13257  003976  0E01               	movlw	1
 13258  003978  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13259  00397A  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13260  00397C  0E00               	movlw	0
 13261  00397E  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13262  003980  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13263  003982  0E03               	movlw	3
 13264  003984  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13265  003986  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13266  003988  0E00               	movlw	0
 13267  00398A  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13268  00398C  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13269  00398E  0E03               	movlw	3
 13270  003990  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13271  003992  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13272  003994  0E00               	movlw	0
 13273  003996  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13274  003998  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13275  00399A  0E01               	movlw	1
 13276  00399C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13277  00399E  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13278  0039A2  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13279  0039A6  EC84  F016         	call	_LCD_DrawRect	;wreg free
 13280                           
 13281                           ;libraries/lcd_highlevel.c: 450:     LCD_DrawRect(x2+1, y1+3, x2+3, y2+3, 1, colorOut);
 13282  0039AA  0E01               	movlw	1
 13283  0039AC  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13284  0039AE  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13285  0039B0  0E00               	movlw	0
 13286  0039B2  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13287  0039B4  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13288  0039B6  0E03               	movlw	3
 13289  0039B8  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13290  0039BA  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13291  0039BC  0E00               	movlw	0
 13292  0039BE  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13293  0039C0  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13294  0039C2  0E03               	movlw	3
 13295  0039C4  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13296  0039C6  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13297  0039C8  0E00               	movlw	0
 13298  0039CA  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13299  0039CC  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13300  0039CE  0E03               	movlw	3
 13301  0039D0  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13302  0039D2  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13303  0039D4  0E00               	movlw	0
 13304  0039D6  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13305  0039D8  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13306  0039DA  0E01               	movlw	1
 13307  0039DC  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13308  0039DE  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13309  0039E2  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13310  0039E6  EC84  F016         	call	_LCD_DrawRect	;wreg free
 13311                           
 13312                           ;libraries/lcd_highlevel.c: 451:     LCD_DrawRect(x1+1, y1+1, x2-1, y1+2, 1, colorIn);
 13313  0039EA  0E01               	movlw	1
 13314  0039EC  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13315  0039EE  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13316  0039F0  0E00               	movlw	0
 13317  0039F2  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13318  0039F4  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13319  0039F6  0E01               	movlw	1
 13320  0039F8  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13321  0039FA  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13322  0039FC  0E00               	movlw	0
 13323  0039FE  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13324  003A00  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13325  003A02  0EFF               	movlw	255
 13326  003A04  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13327  003A06  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13328  003A08  0EFF               	movlw	255
 13329  003A0A  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13330  003A0C  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13331  003A0E  0E02               	movlw	2
 13332  003A10  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13333  003A12  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13334  003A14  0E00               	movlw	0
 13335  003A16  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13336  003A18  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13337  003A1A  0E01               	movlw	1
 13338  003A1C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13339  003A1E  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13340  003A22  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13341  003A26  EC84  F016         	call	_LCD_DrawRect	;wreg free
 13342                           
 13343                           ;libraries/lcd_highlevel.c: 452:     LCD_DrawRect(x1+1, y1+1, x1+2, y2-1, 1, colorIn);
 13344  003A2A  0E01               	movlw	1
 13345  003A2C  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13346  003A2E  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13347  003A30  0E00               	movlw	0
 13348  003A32  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13349  003A34  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13350  003A36  0E01               	movlw	1
 13351  003A38  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13352  003A3A  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13353  003A3C  0E00               	movlw	0
 13354  003A3E  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13355  003A40  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13356  003A42  0E02               	movlw	2
 13357  003A44  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13358  003A46  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13359  003A48  0E00               	movlw	0
 13360  003A4A  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13361  003A4C  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13362  003A4E  0EFF               	movlw	255
 13363  003A50  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13364  003A52  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13365  003A54  0EFF               	movlw	255
 13366  003A56  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13367  003A58  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13368  003A5A  0E01               	movlw	1
 13369  003A5C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13370  003A5E  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13371  003A62  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13372  003A66  EC84  F016         	call	_LCD_DrawRect	;wreg free
 13373  003A6A                     l251:
 13374  003A6A  0012               	return		;funcret
 13375  003A6C                     __end_of_LCD_ButtonUpdate:
 13376                           	callstack 0
 13377                           
 13378 ;; *************** function _LCD_Read *****************
 13379 ;; Defined at:
 13380 ;;		line 64 in file "libraries/lcd_lowlevel.c"
 13381 ;; Parameters:    Size  Location     Type
 13382 ;;  posX            2   17[COMRAM] unsigned short 
 13383 ;;  posY            2   19[COMRAM] unsigned short 
 13384 ;; Auto vars:     Size  Location     Type
 13385 ;;  temp16          2   25[COMRAM] unsigned short 
 13386 ;;  color           2   23[COMRAM] unsigned short 
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  2   17[COMRAM] unsigned short 
 13389 ;; Registers used:
 13390 ;;		wreg, status,2, status,0
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13396 ;;      Params:         4       0       0       0       0       0       0
 13397 ;;      Locals:         4       0       0       0       0       0       0
 13398 ;;      Temps:          2       0       0       0       0       0       0
 13399 ;;      Totals:        10       0       0       0       0       0       0
 13400 ;;Total ram usage:       10 bytes
 13401 ;; Hardware stack levels used: 1
 13402 ;; Hardware stack levels required when called: 4
 13403 ;; This function calls:
 13404 ;;		Nothing
 13405 ;; This function is called by:
 13406 ;;		_LCD_ButtonUpdate
 13407 ;; This function uses a non-reentrant model
 13408 ;;
 13409                           
 13410                           	psect	text50
 13411  004216                     __ptext50:
 13412                           	callstack 0
 13413  004216                     _LCD_Read:
 13414                           	callstack 19
 13415  004216                     
 13416                           ;libraries/lcd_lowlevel.c: 64: uint16_t LCD_Read(uint16_t posX, uint16_t posY);libraries
      +                          /lcd_lowlevel.c: 65: {;libraries/lcd_lowlevel.c: 66:  uint16_t temp16;;libraries/lcd_low
      +                          level.c: 67:   uint16_t color;;libraries/lcd_lowlevel.c: 70:   PORTA = 0x2A; LATC4 = 0; 
      +                          LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 13417  004216  0E2A               	movlw	42
 13418  004218  6E80               	movwf	128,c	;volatile
 13419  00421A  988B               	bcf	3979,4,c	;volatile
 13420  00421C  968B               	bcf	3979,3,c	;volatile
 13421  00421E  868B               	bsf	3979,3,c	;volatile
 13422  004220  888B               	bsf	3979,4,c	;volatile
 13423                           
 13424                           ;libraries/lcd_lowlevel.c: 71:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13425  004222  5013               	movf	(LCD_Read@posX+1)^0,w,c
 13426  004224  6E80               	movwf	128,c	;volatile
 13427  004226  968B               	bcf	3979,3,c	;volatile
 13428  004228  868B               	bsf	3979,3,c	;volatile
 13429  00422A                     
 13430                           ;libraries/lcd_lowlevel.c: 72:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13431  00422A  C012  FF80         	movff	LCD_Read@posX,3968	;volatile
 13432  00422E  968B               	bcf	3979,3,c	;volatile
 13433  004230  868B               	bsf	3979,3,c	;volatile
 13434                           
 13435                           ;libraries/lcd_lowlevel.c: 73:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13436  004232  0E00               	movlw	0
 13437  004234  6E80               	movwf	128,c	;volatile
 13438  004236  968B               	bcf	3979,3,c	;volatile
 13439  004238  868B               	bsf	3979,3,c	;volatile
 13440                           
 13441                           ;libraries/lcd_lowlevel.c: 74:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 13442  00423A  0EEF               	movlw	239
 13443  00423C  6E80               	movwf	128,c	;volatile
 13444  00423E  968B               	bcf	3979,3,c	;volatile
 13445  004240  868B               	bsf	3979,3,c	;volatile
 13446                           
 13447                           ;libraries/lcd_lowlevel.c: 76:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13448  004242  0E2B               	movlw	43
 13449  004244  6E80               	movwf	128,c	;volatile
 13450  004246  988B               	bcf	3979,4,c	;volatile
 13451  004248  968B               	bcf	3979,3,c	;volatile
 13452  00424A  868B               	bsf	3979,3,c	;volatile
 13453  00424C  888B               	bsf	3979,4,c	;volatile
 13454                           
 13455                           ;libraries/lcd_lowlevel.c: 77:   PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 13456  00424E  5015               	movf	(LCD_Read@posY+1)^0,w,c
 13457  004250  6E80               	movwf	128,c	;volatile
 13458  004252  968B               	bcf	3979,3,c	;volatile
 13459  004254  868B               	bsf	3979,3,c	;volatile
 13460  004256                     
 13461                           ;libraries/lcd_lowlevel.c: 78:   PORTA = posY; LATC3 = 0; LATC3 = 1;;
 13462  004256  C014  FF80         	movff	LCD_Read@posY,3968	;volatile
 13463  00425A  968B               	bcf	3979,3,c	;volatile
 13464  00425C  868B               	bsf	3979,3,c	;volatile
 13465                           
 13466                           ;libraries/lcd_lowlevel.c: 79:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13467  00425E  0E01               	movlw	1
 13468  004260  6E80               	movwf	128,c	;volatile
 13469  004262  968B               	bcf	3979,3,c	;volatile
 13470  004264  868B               	bsf	3979,3,c	;volatile
 13471                           
 13472                           ;libraries/lcd_lowlevel.c: 80:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 13473  004266  0E3F               	movlw	63
 13474  004268  6E80               	movwf	128,c	;volatile
 13475  00426A  968B               	bcf	3979,3,c	;volatile
 13476  00426C  868B               	bsf	3979,3,c	;volatile
 13477                           
 13478                           ;libraries/lcd_lowlevel.c: 82:   PORTA = 0x2E; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13479  00426E  0E2E               	movlw	46
 13480  004270  6E80               	movwf	128,c	;volatile
 13481  004272  988B               	bcf	3979,4,c	;volatile
 13482  004274  968B               	bcf	3979,3,c	;volatile
 13483  004276  868B               	bsf	3979,3,c	;volatile
 13484  004278  888B               	bsf	3979,4,c	;volatile
 13485  00427A                     
 13486                           ;libraries/lcd_lowlevel.c: 83:  TRISA = 0xFF;
 13487  00427A  6892               	setf	146,c	;volatile
 13488  00427C                     
 13489                           ;libraries/lcd_lowlevel.c: 84:  LATC2 = 0;
 13490  00427C  948B               	bcf	3979,2,c	;volatile
 13491  00427E                     
 13492                           ;libraries/lcd_lowlevel.c: 85:   __nop();
 13493  00427E  F000               	nop	
 13494  004280                     
 13495                           ;libraries/lcd_lowlevel.c: 86:  LATC2 = 1;
 13496  004280  848B               	bsf	3979,2,c	;volatile
 13497  004282                     
 13498                           ;libraries/lcd_lowlevel.c: 87:  TRISA = 0xFF;
 13499  004282  6892               	setf	146,c	;volatile
 13500  004284                     
 13501                           ;libraries/lcd_lowlevel.c: 88:  LATC2 = 0;
 13502  004284  948B               	bcf	3979,2,c	;volatile
 13503  004286                     
 13504                           ;libraries/lcd_lowlevel.c: 89:   __nop();
 13505  004286  F000               	nop	
 13506  004288                     
 13507                           ;libraries/lcd_lowlevel.c: 90:  temp16 = PORTA;
 13508  004288  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13509  00428C  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13510  00428E                     
 13511                           ;libraries/lcd_lowlevel.c: 91:  LATC2 = 1;
 13512  00428E  848B               	bsf	3979,2,c	;volatile
 13513  004290                     
 13514                           ;libraries/lcd_lowlevel.c: 92:   temp16 = temp16 >> 3;
 13515  004290  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13516  004294  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13517  004298  90D8               	bcf	status,0,c
 13518  00429A  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13519  00429C  3216               	rrcf	??_LCD_Read^0,f,c
 13520  00429E  90D8               	bcf	status,0,c
 13521  0042A0  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13522  0042A2  3216               	rrcf	??_LCD_Read^0,f,c
 13523  0042A4  90D8               	bcf	status,0,c
 13524  0042A6  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13525  0042A8  3216               	rrcf	??_LCD_Read^0,f,c
 13526  0042AA  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13527  0042AE  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13528  0042B2                     
 13529                           ;libraries/lcd_lowlevel.c: 93:   color = temp16 << 11;
 13530  0042B2  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13531  0042B6  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13532  0042BA  0E0B               	movlw	11
 13533  0042BC                     u5915:
 13534  0042BC  90D8               	bcf	status,0,c
 13535  0042BE  3616               	rlcf	??_LCD_Read^0,f,c
 13536  0042C0  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13537  0042C2  2EE8               	decfsz	wreg,f,c
 13538  0042C4  EF5E  F021         	goto	u5915
 13539  0042C8  C016  F018         	movff	??_LCD_Read,LCD_Read@color
 13540  0042CC  C017  F019         	movff	??_LCD_Read+1,LCD_Read@color+1
 13541  0042D0                     
 13542                           ;libraries/lcd_lowlevel.c: 94:  LATC2 = 0;
 13543  0042D0  948B               	bcf	3979,2,c	;volatile
 13544  0042D2                     
 13545                           ;libraries/lcd_lowlevel.c: 95:   __nop();
 13546  0042D2  F000               	nop	
 13547  0042D4                     
 13548                           ;libraries/lcd_lowlevel.c: 96:  temp16 = PORTA;
 13549  0042D4  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13550  0042D8  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13551  0042DA                     
 13552                           ;libraries/lcd_lowlevel.c: 97:  LATC2 = 1;
 13553  0042DA  848B               	bsf	3979,2,c	;volatile
 13554  0042DC                     
 13555                           ;libraries/lcd_lowlevel.c: 98:   temp16 = temp16 >> 2;
 13556  0042DC  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13557  0042E0  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13558  0042E4  90D8               	bcf	status,0,c
 13559  0042E6  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13560  0042E8  3216               	rrcf	??_LCD_Read^0,f,c
 13561  0042EA  90D8               	bcf	status,0,c
 13562  0042EC  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13563  0042EE  3216               	rrcf	??_LCD_Read^0,f,c
 13564  0042F0  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13565  0042F4  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13566  0042F8                     
 13567                           ;libraries/lcd_lowlevel.c: 99:   color |= temp16 << 5;
 13568  0042F8  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13569  0042FC  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13570  004300  0E05               	movlw	5
 13571  004302                     u5925:
 13572  004302  90D8               	bcf	status,0,c
 13573  004304  3616               	rlcf	??_LCD_Read^0,f,c
 13574  004306  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13575  004308  2EE8               	decfsz	wreg,f,c
 13576  00430A  EF81  F021         	goto	u5925
 13577  00430E  5016               	movf	??_LCD_Read^0,w,c
 13578  004310  1218               	iorwf	LCD_Read@color^0,f,c
 13579  004312  5017               	movf	(??_LCD_Read+1)^0,w,c
 13580  004314  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13581  004316                     
 13582                           ;libraries/lcd_lowlevel.c: 100:  LATC2 = 0;
 13583  004316  948B               	bcf	3979,2,c	;volatile
 13584  004318                     
 13585                           ;libraries/lcd_lowlevel.c: 101:   __nop();
 13586  004318  F000               	nop	
 13587  00431A                     
 13588                           ;libraries/lcd_lowlevel.c: 102:  temp16 |= PORTA;
 13589  00431A  5080               	movf	128,w,c	;volatile
 13590  00431C  121A               	iorwf	LCD_Read@temp16^0,f,c
 13591  00431E                     
 13592                           ;libraries/lcd_lowlevel.c: 103:  LATC2 = 1;
 13593  00431E  848B               	bsf	3979,2,c	;volatile
 13594  004320                     
 13595                           ;libraries/lcd_lowlevel.c: 104:   temp16 = temp16 >> 3;
 13596  004320  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13597  004324  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13598  004328  90D8               	bcf	status,0,c
 13599  00432A  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13600  00432C  3216               	rrcf	??_LCD_Read^0,f,c
 13601  00432E  90D8               	bcf	status,0,c
 13602  004330  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13603  004332  3216               	rrcf	??_LCD_Read^0,f,c
 13604  004334  90D8               	bcf	status,0,c
 13605  004336  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13606  004338  3216               	rrcf	??_LCD_Read^0,f,c
 13607  00433A  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13608  00433E  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13609  004342                     
 13610                           ;libraries/lcd_lowlevel.c: 105:   color |= temp16;
 13611  004342  501A               	movf	LCD_Read@temp16^0,w,c
 13612  004344  1218               	iorwf	LCD_Read@color^0,f,c
 13613  004346  501B               	movf	(LCD_Read@temp16+1)^0,w,c
 13614  004348  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13615  00434A                     
 13616                           ;libraries/lcd_lowlevel.c: 106:  TRISA = 0x00;
 13617  00434A  0E00               	movlw	0
 13618  00434C  6E92               	movwf	146,c	;volatile
 13619  00434E                     
 13620                           ;libraries/lcd_lowlevel.c: 107:  return color;
 13621  00434E  C018  F012         	movff	LCD_Read@color,?_LCD_Read
 13622  004352  C019  F013         	movff	LCD_Read@color+1,?_LCD_Read+1
 13623  004356  0012               	return		;funcret
 13624  004358                     __end_of_LCD_Read:
 13625                           	callstack 0
 13626                           
 13627 ;; *************** function _LCD_Bitmap *****************
 13628 ;; Defined at:
 13629 ;;		line 823 in file "libraries/lcd_highlevel.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;  bmpPtr          2   38[COMRAM] PTR const unsigned char 
 13632 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13633 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13634 ;;  posX            2   40[COMRAM] unsigned short 
 13635 ;;  posY            2   42[COMRAM] unsigned short 
 13636 ;; Auto vars:     Size  Location     Type
 13637 ;;  bfOffBits       4    0[BANK0 ] unsigned long 
 13638 ;;  i               2   26[BANK0 ] unsigned short 
 13639 ;;  jumpColor       2   24[BANK0 ] unsigned short 
 13640 ;;  biWidth         2   22[BANK0 ] unsigned short 
 13641 ;;  newY            2   19[BANK0 ] unsigned short 
 13642 ;;  strPtr          2   17[BANK0 ] PTR struct .
 13643 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13644 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13645 ;;  curXPos         2   15[BANK0 ] unsigned short 
 13646 ;;  color           2   13[BANK0 ] unsigned short 
 13647 ;;  biHeight        2   11[BANK0 ] unsigned short 
 13648 ;;  colorTablePt    2    9[BANK0 ] PTR unsigned char 
 13649 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13650 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13651 ;;  curYPos         2    7[BANK0 ] unsigned short 
 13652 ;;  jumpCount       2    5[BANK0 ] unsigned short 
 13653 ;;  pixelCount      1   21[BANK0 ] unsigned char 
 13654 ;;  endOfImage      1    4[BANK0 ] unsigned char 
 13655 ;; Return value:  Size  Location     Type
 13656 ;;                  1    wreg      unsigned char 
 13657 ;; Registers used:
 13658 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13659 ;; Tracked objects:
 13660 ;;		On entry : 0/0
 13661 ;;		On exit  : 0/0
 13662 ;;		Unchanged: 0/0
 13663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13664 ;;      Params:         6       0       0       0       0       0       0
 13665 ;;      Locals:         0      28       0       0       0       0       0
 13666 ;;      Temps:          4       0       0       0       0       0       0
 13667 ;;      Totals:        10      28       0       0       0       0       0
 13668 ;;Total ram usage:       38 bytes
 13669 ;; Hardware stack levels used: 1
 13670 ;; Hardware stack levels required when called: 5
 13671 ;; This function calls:
 13672 ;;		_RGB2LCD
 13673 ;;		___lwdiv
 13674 ;;		___lwmod
 13675 ;;		___wmul
 13676 ;; This function is called by:
 13677 ;;		_LCD_ButtonDraw
 13678 ;; This function uses a non-reentrant model
 13679 ;;
 13680                           
 13681                           	psect	text51
 13682  00097E                     __ptext51:
 13683                           	callstack 0
 13684  00097E                     _LCD_Bitmap:
 13685                           	callstack 19
 13686  00097E                     
 13687                           ;libraries/lcd_highlevel.c: 823: uint8_t LCD_Bitmap(const uint8_t * bmpPtr, uint16_t pos
      +                          X, uint16_t posY);libraries/lcd_highlevel.c: 824: {;libraries/lcd_highlevel.c: 825:   ui
      +                          nt32_t bfOffBits;;libraries/lcd_highlevel.c: 826:   uint16_t biWidth, biHeight;;librarie
      +                          s/lcd_highlevel.c: 827:   uint8_t * colorTablePtr;;libraries/lcd_highlevel.c: 828:   uin
      +                          t8_t endOfImage;;libraries/lcd_highlevel.c: 829:   uint16_t i,curXPos,curYPos;;libraries
      +                          /lcd_highlevel.c: 830:   uint8_t pixelCount;;libraries/lcd_highlevel.c: 831:   uint16_t 
      +                          color;
 13688  00097E  C027  F071         	movff	LCD_Bitmap@bmpPtr,LCD_Bitmap@strPtr
 13689  000982  C028  F072         	movff	LCD_Bitmap@bmpPtr+1,LCD_Bitmap@strPtr+1
 13690  000986                     
 13691                           ;libraries/lcd_highlevel.c: 839:   bfOffBits = strPtr->bfOffBits;
 13692  000986  0E0A               	movlw	10
 13693  000988  0100               	movlb	0	; () banked
 13694  00098A  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13695  00098C  6E2D               	movwf	??_LCD_Bitmap^0,c
 13696  00098E  0E00               	movlw	0
 13697  000990  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13698  000992  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13699  000994  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13700  000998  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13701  00099C                     	if	0	;tblptru may be non-zero
 13702  00099C                     	endif
 13703  00099C                     	if	0	;tblptru may be non-zero
 13704  00099C                     	endif
 13705  00099C  0009               	tblrd		*+
 13706  00099E  CFF5 F060          	movff	tablat,LCD_Bitmap@bfOffBits
 13707  0009A2  0009               	tblrd		*+
 13708  0009A4  CFF5 F061          	movff	tablat,LCD_Bitmap@bfOffBits+1
 13709  0009A8  0009               	tblrd		*+
 13710  0009AA  CFF5 F062          	movff	tablat,LCD_Bitmap@bfOffBits+2
 13711  0009AE  000A               	tblrd		*-
 13712  0009B0  CFF5 F063          	movff	tablat,LCD_Bitmap@bfOffBits+3
 13713  0009B4                     
 13714                           ; BSR set to: 0
 13715                           ;libraries/lcd_highlevel.c: 840:   biWidth = strPtr->biWidth;
 13716  0009B4  0E12               	movlw	18
 13717  0009B6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13718  0009B8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13719  0009BA  0E00               	movlw	0
 13720  0009BC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13721  0009BE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13722  0009C0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13723  0009C4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13724  0009C8                     	if	0	;tblptru may be non-zero
 13725  0009C8                     	endif
 13726  0009C8                     	if	0	;tblptru may be non-zero
 13727  0009C8                     	endif
 13728  0009C8  0009               	tblrd		*+
 13729  0009CA  CFF5 F076          	movff	tablat,LCD_Bitmap@biWidth
 13730  0009CE  000A               	tblrd		*-
 13731  0009D0  CFF5 F077          	movff	tablat,LCD_Bitmap@biWidth+1
 13732  0009D4                     
 13733                           ; BSR set to: 0
 13734                           ;libraries/lcd_highlevel.c: 841:   biHeight = strPtr->biHeight;
 13735  0009D4  0E16               	movlw	22
 13736  0009D6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13737  0009D8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13738  0009DA  0E00               	movlw	0
 13739  0009DC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13740  0009DE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13741  0009E0  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13742  0009E4  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13743  0009E8                     	if	0	;tblptru may be non-zero
 13744  0009E8                     	endif
 13745  0009E8                     	if	0	;tblptru may be non-zero
 13746  0009E8                     	endif
 13747  0009E8  0009               	tblrd		*+
 13748  0009EA  CFF5 F06B          	movff	tablat,LCD_Bitmap@biHeight
 13749  0009EE  000A               	tblrd		*-
 13750  0009F0  CFF5 F06C          	movff	tablat,LCD_Bitmap@biHeight+1
 13751  0009F4                     
 13752                           ; BSR set to: 0
 13753                           ;libraries/lcd_highlevel.c: 842:   if((strPtr->biBitCount != 8) ||
 13754  0009F4  0E1C               	movlw	28
 13755  0009F6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13756  0009F8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13757  0009FA  0E00               	movlw	0
 13758  0009FC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13759  0009FE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13760  000A00  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13761  000A04  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13762  000A08                     	if	0	;tblptru may be non-zero
 13763  000A08                     	endif
 13764  000A08                     	if	0	;tblptru may be non-zero
 13765  000A08                     	endif
 13766  000A08  0009               	tblrd		*+
 13767  000A0A  0E08               	movlw	8
 13768  000A0C  18F5               	xorwf	tablat,w,c
 13769  000A0E  0009               	tblrd		*+
 13770  000A10  10F5               	iorwf	tablat,w,c
 13771  000A12  A4D8               	btfss	status,2,c
 13772  000A14  EF0E  F005         	goto	u6351
 13773  000A18  EF10  F005         	goto	u6350
 13774  000A1C                     u6351:
 13775  000A1C  EFB9  F007         	goto	l329
 13776  000A20                     u6350:
 13777  000A20                     
 13778                           ; BSR set to: 0
 13779  000A20  0E1E               	movlw	30
 13780  000A22  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13781  000A24  6E2D               	movwf	??_LCD_Bitmap^0,c
 13782  000A26  0E00               	movlw	0
 13783  000A28  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13784  000A2A  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13785  000A2C  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13786  000A30  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13787  000A34                     	if	0	;tblptru may be non-zero
 13788  000A34                     	endif
 13789  000A34                     	if	0	;tblptru may be non-zero
 13790  000A34                     	endif
 13791  000A34  0009               	tblrd		*+
 13792  000A36  04F5               	decf	tablat,w,c
 13793  000A38  0009               	tblrd		*+
 13794  000A3A  10F5               	iorwf	tablat,w,c
 13795  000A3C  0009               	tblrd		*+
 13796  000A3E  10F5               	iorwf	tablat,w,c
 13797  000A40  0009               	tblrd		*+
 13798  000A42  10F5               	iorwf	tablat,w,c
 13799  000A44  B4D8               	btfsc	status,2,c
 13800  000A46  EF27  F005         	goto	u6361
 13801  000A4A  EF29  F005         	goto	u6360
 13802  000A4E                     u6361:
 13803  000A4E  EF2B  F005         	goto	l8947
 13804  000A52                     u6360:
 13805  000A52  EFB9  F007         	goto	l329
 13806  000A56                     l8947:
 13807                           
 13808                           ; BSR set to: 0
 13809                           ;libraries/lcd_highlevel.c: 847:   if(((posX + biWidth) > (240)) ||
 13810  000A56  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 13811  000A58  2429               	addwf	LCD_Bitmap@posX^0,w,c
 13812  000A5A  6E2D               	movwf	??_LCD_Bitmap^0,c
 13813  000A5C  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 13814  000A5E  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 13815  000A60  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13816  000A62  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 13817  000A64  E107               	bnz	u6371
 13818  000A66  0EF1               	movlw	241
 13819  000A68  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 13820  000A6A  B0D8               	btfsc	status,0,c
 13821  000A6C  EF3A  F005         	goto	u6371
 13822  000A70  EF3C  F005         	goto	u6370
 13823  000A74                     u6371:
 13824  000A74  EFB9  F007         	goto	l329
 13825  000A78                     u6370:
 13826  000A78                     
 13827                           ; BSR set to: 0
 13828  000A78  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 13829  000A7A  242B               	addwf	LCD_Bitmap@posY^0,w,c
 13830  000A7C  6E2D               	movwf	??_LCD_Bitmap^0,c
 13831  000A7E  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 13832  000A80  202C               	addwfc	(LCD_Bitmap@posY+1)^0,w,c
 13833  000A82  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13834  000A84  0E41               	movlw	65
 13835  000A86  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 13836  000A88  0E01               	movlw	1
 13837  000A8A  582E               	subwfb	(??_LCD_Bitmap+1)^0,w,c
 13838  000A8C  A0D8               	btfss	status,0,c
 13839  000A8E  EF4B  F005         	goto	u6381
 13840  000A92  EF4D  F005         	goto	u6380
 13841  000A96                     u6381:
 13842  000A96  EF4F  F005         	goto	l8951
 13843  000A9A                     u6380:
 13844  000A9A  EFB9  F007         	goto	l329
 13845  000A9E                     l8951:
 13846                           
 13847                           ; BSR set to: 0
 13848                           ;libraries/lcd_highlevel.c: 853:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13849  000A9E  0E36               	movlw	54
 13850  000AA0  6E80               	movwf	128,c	;volatile
 13851  000AA2                     
 13852                           ; BSR set to: 0
 13853  000AA2  988B               	bcf	3979,4,c	;volatile
 13854  000AA4                     
 13855                           ; BSR set to: 0
 13856  000AA4  968B               	bcf	3979,3,c	;volatile
 13857  000AA6                     
 13858                           ; BSR set to: 0
 13859  000AA6  868B               	bsf	3979,3,c	;volatile
 13860  000AA8                     
 13861                           ; BSR set to: 0
 13862  000AA8  888B               	bsf	3979,4,c	;volatile
 13863                           
 13864                           ;libraries/lcd_highlevel.c: 855:   PORTA = 0b10000000; LATC3 = 0; LATC3 = 1;;
 13865  000AAA  0E80               	movlw	128
 13866  000AAC  6E80               	movwf	128,c	;volatile
 13867  000AAE                     
 13868                           ; BSR set to: 0
 13869  000AAE  968B               	bcf	3979,3,c	;volatile
 13870  000AB0                     
 13871                           ; BSR set to: 0
 13872  000AB0  868B               	bsf	3979,3,c	;volatile
 13873  000AB2                     
 13874                           ; BSR set to: 0
 13875                           ;libraries/lcd_highlevel.c: 857:   colorTablePtr = (uint8_t *)bmpPtr + 54;
 13876  000AB2  0E36               	movlw	54
 13877  000AB4  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 13878  000AB6  6F69               	movwf	LCD_Bitmap@colorTablePtr& (0+255),b
 13879  000AB8  0E00               	movlw	0
 13880  000ABA  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 13881  000ABC  6F6A               	movwf	(LCD_Bitmap@colorTablePtr+1)& (0+255),b
 13882  000ABE                     
 13883                           ; BSR set to: 0
 13884                           ;libraries/lcd_highlevel.c: 858:   bmpPtr += bfOffBits;
 13885  000ABE  5160               	movf	LCD_Bitmap@bfOffBits& (0+255),w,b
 13886  000AC0  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 13887  000AC2  5161               	movf	(LCD_Bitmap@bfOffBits+1)& (0+255),w,b
 13888  000AC4  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 13889                           
 13890                           ;libraries/lcd_highlevel.c: 859:   endOfImage = 0;
 13891  000AC6  0E00               	movlw	0
 13892  000AC8  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 13893  000ACA                     
 13894                           ; BSR set to: 0
 13895                           ;libraries/lcd_highlevel.c: 860:   jumpColor = RGB2LCD(colorTablePtr);
 13896  000ACA  C069  F012         	movff	LCD_Bitmap@colorTablePtr,RGB2LCD@colorTableEntry
 13897  000ACE  C06A  F013         	movff	LCD_Bitmap@colorTablePtr+1,RGB2LCD@colorTableEntry+1
 13898  000AD2  ECFB  F029         	call	_RGB2LCD	;wreg free
 13899  000AD6  C012  F078         	movff	?_RGB2LCD,LCD_Bitmap@jumpColor
 13900  000ADA  C013  F079         	movff	?_RGB2LCD+1,LCD_Bitmap@jumpColor+1
 13901  000ADE                     
 13902                           ;libraries/lcd_highlevel.c: 862:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13903  000ADE  0E2A               	movlw	42
 13904  000AE0  6E80               	movwf	128,c	;volatile
 13905  000AE2  988B               	bcf	3979,4,c	;volatile
 13906  000AE4  968B               	bcf	3979,3,c	;volatile
 13907  000AE6  868B               	bsf	3979,3,c	;volatile
 13908  000AE8  888B               	bsf	3979,4,c	;volatile
 13909  000AEA                     
 13910                           ;libraries/lcd_highlevel.c: 863:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13911  000AEA  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 13912  000AEC  6E80               	movwf	128,c	;volatile
 13913  000AEE  968B               	bcf	3979,3,c	;volatile
 13914  000AF0  868B               	bsf	3979,3,c	;volatile
 13915  000AF2                     
 13916                           ;libraries/lcd_highlevel.c: 864:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13917  000AF2  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 13918  000AF6  968B               	bcf	3979,3,c	;volatile
 13919  000AF8  868B               	bsf	3979,3,c	;volatile
 13920  000AFA                     
 13921                           ;libraries/lcd_highlevel.c: 865:   posX = posX + biWidth-1;
 13922  000AFA  0100               	movlb	0	; () banked
 13923  000AFC  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 13924  000AFE  2429               	addwf	LCD_Bitmap@posX^0,w,c
 13925  000B00  6E2D               	movwf	??_LCD_Bitmap^0,c
 13926  000B02  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 13927  000B04  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 13928  000B06  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13929  000B08  0EFF               	movlw	255
 13930  000B0A  242D               	addwf	??_LCD_Bitmap^0,w,c
 13931  000B0C  6E29               	movwf	LCD_Bitmap@posX^0,c
 13932  000B0E  0EFF               	movlw	255
 13933  000B10  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 13934  000B12  6E2A               	movwf	(LCD_Bitmap@posX+1)^0,c
 13935  000B14                     
 13936                           ; BSR set to: 0
 13937                           ;libraries/lcd_highlevel.c: 866:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13938  000B14  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 13939  000B16  6E80               	movwf	128,c	;volatile
 13940  000B18                     
 13941                           ; BSR set to: 0
 13942  000B18  968B               	bcf	3979,3,c	;volatile
 13943  000B1A                     
 13944                           ; BSR set to: 0
 13945  000B1A  868B               	bsf	3979,3,c	;volatile
 13946  000B1C                     
 13947                           ; BSR set to: 0
 13948                           ;libraries/lcd_highlevel.c: 867:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13949  000B1C  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 13950  000B20                     
 13951                           ; BSR set to: 0
 13952  000B20  968B               	bcf	3979,3,c	;volatile
 13953  000B22                     
 13954                           ; BSR set to: 0
 13955  000B22  868B               	bsf	3979,3,c	;volatile
 13956  000B24                     
 13957                           ; BSR set to: 0
 13958                           ;libraries/lcd_highlevel.c: 869:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13959  000B24  0E2B               	movlw	43
 13960  000B26  6E80               	movwf	128,c	;volatile
 13961  000B28                     
 13962                           ; BSR set to: 0
 13963  000B28  988B               	bcf	3979,4,c	;volatile
 13964  000B2A                     
 13965                           ; BSR set to: 0
 13966  000B2A  968B               	bcf	3979,3,c	;volatile
 13967  000B2C                     
 13968                           ; BSR set to: 0
 13969  000B2C  868B               	bsf	3979,3,c	;volatile
 13970  000B2E                     
 13971                           ; BSR set to: 0
 13972  000B2E  888B               	bsf	3979,4,c	;volatile
 13973  000B30                     
 13974                           ; BSR set to: 0
 13975                           ;libraries/lcd_highlevel.c: 870:   newY = 320 - posY - biHeight;
 13976  000B30  C02B  F02D         	movff	LCD_Bitmap@posY,??_LCD_Bitmap
 13977  000B34  C02C  F02E         	movff	LCD_Bitmap@posY+1,??_LCD_Bitmap+1
 13978  000B38  1E2D               	comf	??_LCD_Bitmap^0,f,c
 13979  000B3A  1E2E               	comf	(??_LCD_Bitmap+1)^0,f,c
 13980  000B3C  4A2D               	infsnz	??_LCD_Bitmap^0,f,c
 13981  000B3E  2A2E               	incf	(??_LCD_Bitmap+1)^0,f,c
 13982  000B40  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 13983  000B42  5E2D               	subwf	??_LCD_Bitmap^0,f,c
 13984  000B44  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 13985  000B46  5A2E               	subwfb	(??_LCD_Bitmap+1)^0,f,c
 13986  000B48  0E40               	movlw	64
 13987  000B4A  242D               	addwf	??_LCD_Bitmap^0,w,c
 13988  000B4C  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 13989  000B4E  0E01               	movlw	1
 13990  000B50  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 13991  000B52  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 13992  000B54                     
 13993                           ; BSR set to: 0
 13994                           ;libraries/lcd_highlevel.c: 871:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 13995  000B54  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 13996  000B56  6E80               	movwf	128,c	;volatile
 13997  000B58                     
 13998                           ; BSR set to: 0
 13999  000B58  968B               	bcf	3979,3,c	;volatile
 14000  000B5A                     
 14001                           ; BSR set to: 0
 14002  000B5A  868B               	bsf	3979,3,c	;volatile
 14003  000B5C                     
 14004                           ; BSR set to: 0
 14005                           ;libraries/lcd_highlevel.c: 872:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14006  000B5C  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14007  000B60                     
 14008                           ; BSR set to: 0
 14009  000B60  968B               	bcf	3979,3,c	;volatile
 14010  000B62                     
 14011                           ; BSR set to: 0
 14012  000B62  868B               	bsf	3979,3,c	;volatile
 14013  000B64                     
 14014                           ; BSR set to: 0
 14015                           ;libraries/lcd_highlevel.c: 873:   newY = newY + biHeight-1;
 14016  000B64  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14017  000B66  2573               	addwf	LCD_Bitmap@newY& (0+255),w,b
 14018  000B68  6E2D               	movwf	??_LCD_Bitmap^0,c
 14019  000B6A  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14020  000B6C  2174               	addwfc	(LCD_Bitmap@newY+1)& (0+255),w,b
 14021  000B6E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14022  000B70  0EFF               	movlw	255
 14023  000B72  242D               	addwf	??_LCD_Bitmap^0,w,c
 14024  000B74  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 14025  000B76  0EFF               	movlw	255
 14026  000B78  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14027  000B7A  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 14028  000B7C                     
 14029                           ; BSR set to: 0
 14030                           ;libraries/lcd_highlevel.c: 874:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14031  000B7C  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14032  000B7E  6E80               	movwf	128,c	;volatile
 14033  000B80                     
 14034                           ; BSR set to: 0
 14035  000B80  968B               	bcf	3979,3,c	;volatile
 14036  000B82                     
 14037                           ; BSR set to: 0
 14038  000B82  868B               	bsf	3979,3,c	;volatile
 14039  000B84                     
 14040                           ; BSR set to: 0
 14041                           ;libraries/lcd_highlevel.c: 875:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14042  000B84  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14043  000B88                     
 14044                           ; BSR set to: 0
 14045  000B88  968B               	bcf	3979,3,c	;volatile
 14046  000B8A                     
 14047                           ; BSR set to: 0
 14048  000B8A  868B               	bsf	3979,3,c	;volatile
 14049  000B8C                     
 14050                           ; BSR set to: 0
 14051                           ;libraries/lcd_highlevel.c: 877:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14052  000B8C  0E2C               	movlw	44
 14053  000B8E  6E80               	movwf	128,c	;volatile
 14054  000B90                     
 14055                           ; BSR set to: 0
 14056  000B90  988B               	bcf	3979,4,c	;volatile
 14057  000B92                     
 14058                           ; BSR set to: 0
 14059  000B92  968B               	bcf	3979,3,c	;volatile
 14060  000B94                     
 14061                           ; BSR set to: 0
 14062  000B94  868B               	bsf	3979,3,c	;volatile
 14063  000B96                     
 14064                           ; BSR set to: 0
 14065  000B96  888B               	bsf	3979,4,c	;volatile
 14066  000B98                     
 14067                           ; BSR set to: 0
 14068                           ;libraries/lcd_highlevel.c: 878:   curXPos = 0;
 14069  000B98  0E00               	movlw	0
 14070  000B9A  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14071  000B9C  0E00               	movlw	0
 14072  000B9E  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14073  000BA0                     
 14074                           ; BSR set to: 0
 14075                           ;libraries/lcd_highlevel.c: 879:   curYPos = 0;
 14076  000BA0  0E00               	movlw	0
 14077  000BA2  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14078  000BA4  0E00               	movlw	0
 14079  000BA6  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14080  000BA8                     l9059:
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;libraries/lcd_highlevel.c: 881:   {;libraries/lcd_highlevel.c: 882:     if(bmpPtr[0] ==
      +                           0)
 14084  000BA8  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14085  000BAC  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14086  000BB0                     	if	0	;tblptru may be non-zero
 14087  000BB0                     	endif
 14088  000BB0                     	if	0	;tblptru may be non-zero
 14089  000BB0                     	endif
 14090  000BB0  0008               	tblrd		*
 14091  000BB2  50F5               	movf	tablat,w,c
 14092  000BB4  0900               	iorlw	0
 14093  000BB6  A4D8               	btfss	status,2,c
 14094  000BB8  EFE0  F005         	goto	u6391
 14095  000BBC  EFE2  F005         	goto	u6390
 14096  000BC0                     u6391:
 14097  000BC0  EF5D  F007         	goto	l9185
 14098  000BC4                     u6390:
 14099  000BC4  EF39  F007         	goto	l9183
 14100  000BC8                     l9063:
 14101                           
 14102                           ; BSR set to: 0
 14103                           ;libraries/lcd_highlevel.c: 887:           bmpPtr += 2;
 14104  000BC8  0E02               	movlw	2
 14105  000BCA  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14106  000BCC  0E00               	movlw	0
 14107  000BCE  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14108  000BD0                     
 14109                           ; BSR set to: 0
 14110                           ;libraries/lcd_highlevel.c: 888:           for(i=0;i<biWidth - curXPos;i++)
 14111  000BD0  0E00               	movlw	0
 14112  000BD2  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14113  000BD4  0E00               	movlw	0
 14114  000BD6  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14115  000BD8  EFF8  F005         	goto	l9081
 14116  000BDC                     l9067:
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;libraries/lcd_highlevel.c: 889:           {;libraries/lcd_highlevel.c: 890:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14120  000BDC  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14121  000BDE  6E80               	movwf	128,c	;volatile
 14122  000BE0                     
 14123                           ; BSR set to: 0
 14124  000BE0  968B               	bcf	3979,3,c	;volatile
 14125  000BE2                     
 14126                           ; BSR set to: 0
 14127  000BE2  868B               	bsf	3979,3,c	;volatile
 14128  000BE4                     
 14129                           ; BSR set to: 0
 14130                           ;libraries/lcd_highlevel.c: 891:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14131  000BE4  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14132  000BE8                     
 14133                           ; BSR set to: 0
 14134  000BE8  968B               	bcf	3979,3,c	;volatile
 14135  000BEA                     
 14136                           ; BSR set to: 0
 14137  000BEA  868B               	bsf	3979,3,c	;volatile
 14138  000BEC                     
 14139                           ; BSR set to: 0
 14140                           ;libraries/lcd_highlevel.c: 892:           }
 14141  000BEC  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14142  000BEE  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14143  000BF0                     l9081:
 14144                           
 14145                           ; BSR set to: 0
 14146  000BF0  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14147  000BF2  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14148  000BF4  6E2D               	movwf	??_LCD_Bitmap^0,c
 14149  000BF6  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14150  000BF8  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14151  000BFA  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14152  000BFC  502D               	movf	??_LCD_Bitmap^0,w,c
 14153  000BFE  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14154  000C00  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14155  000C02  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14156  000C04  A0D8               	btfss	status,0,c
 14157  000C06  EF07  F006         	goto	u6401
 14158  000C0A  EF09  F006         	goto	u6400
 14159  000C0E                     u6401:
 14160  000C0E  EFEE  F005         	goto	l9067
 14161  000C12                     u6400:
 14162  000C12                     
 14163                           ; BSR set to: 0
 14164                           ;libraries/lcd_highlevel.c: 893:           curXPos = 0;
 14165  000C12  0E00               	movlw	0
 14166  000C14  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14167  000C16  0E00               	movlw	0
 14168  000C18  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14169  000C1A                     
 14170                           ; BSR set to: 0
 14171                           ;libraries/lcd_highlevel.c: 894:           curYPos++;
 14172  000C1A  4B67               	infsnz	LCD_Bitmap@curYPos& (0+255),f,b
 14173  000C1C  2B68               	incf	(LCD_Bitmap@curYPos+1)& (0+255),f,b
 14174                           
 14175                           ;libraries/lcd_highlevel.c: 895:         break;
 14176  000C1E  EFA6  F007         	goto	l9211
 14177  000C22                     l9087:
 14178                           
 14179                           ; BSR set to: 0
 14180                           ;libraries/lcd_highlevel.c: 897:           for(i=0;i<biWidth - curXPos;i++)
 14181  000C22  0E00               	movlw	0
 14182  000C24  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14183  000C26  0E00               	movlw	0
 14184  000C28  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14185  000C2A  EF21  F006         	goto	l9103
 14186  000C2E                     l9089:
 14187                           
 14188                           ; BSR set to: 0
 14189                           ;libraries/lcd_highlevel.c: 898:           {;libraries/lcd_highlevel.c: 899:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14190  000C2E  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14191  000C30  6E80               	movwf	128,c	;volatile
 14192  000C32                     
 14193                           ; BSR set to: 0
 14194  000C32  968B               	bcf	3979,3,c	;volatile
 14195  000C34                     
 14196                           ; BSR set to: 0
 14197  000C34  868B               	bsf	3979,3,c	;volatile
 14198  000C36                     
 14199                           ; BSR set to: 0
 14200                           ;libraries/lcd_highlevel.c: 900:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14201  000C36  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14202  000C3A                     
 14203                           ; BSR set to: 0
 14204  000C3A  968B               	bcf	3979,3,c	;volatile
 14205  000C3C                     
 14206                           ; BSR set to: 0
 14207  000C3C  868B               	bsf	3979,3,c	;volatile
 14208  000C3E                     
 14209                           ; BSR set to: 0
 14210                           ;libraries/lcd_highlevel.c: 901:           }
 14211  000C3E  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14212  000C40  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14213  000C42                     l9103:
 14214                           
 14215                           ; BSR set to: 0
 14216  000C42  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14217  000C44  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14218  000C46  6E2D               	movwf	??_LCD_Bitmap^0,c
 14219  000C48  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14220  000C4A  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14221  000C4C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14222  000C4E  502D               	movf	??_LCD_Bitmap^0,w,c
 14223  000C50  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14224  000C52  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14225  000C54  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14226  000C56  A0D8               	btfss	status,0,c
 14227  000C58  EF30  F006         	goto	u6411
 14228  000C5C  EF32  F006         	goto	u6410
 14229  000C60                     u6411:
 14230  000C60  EF17  F006         	goto	l9089
 14231  000C64                     u6410:
 14232  000C64                     
 14233                           ; BSR set to: 0
 14234                           ;libraries/lcd_highlevel.c: 902:           for(i=0;i<(biHeight - curYPos -1)*biWidth;i++
      +                          )
 14235  000C64  0E00               	movlw	0
 14236  000C66  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14237  000C68  0E00               	movlw	0
 14238  000C6A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14239  000C6C  EF42  F006         	goto	l9121
 14240  000C70                     l9107:
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;libraries/lcd_highlevel.c: 903:           {;libraries/lcd_highlevel.c: 904:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14244  000C70  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14245  000C72  6E80               	movwf	128,c	;volatile
 14246  000C74                     
 14247                           ; BSR set to: 0
 14248  000C74  968B               	bcf	3979,3,c	;volatile
 14249  000C76                     
 14250                           ; BSR set to: 0
 14251  000C76  868B               	bsf	3979,3,c	;volatile
 14252  000C78                     
 14253                           ; BSR set to: 0
 14254                           ;libraries/lcd_highlevel.c: 905:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14255  000C78  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14256  000C7C                     
 14257                           ; BSR set to: 0
 14258  000C7C  968B               	bcf	3979,3,c	;volatile
 14259  000C7E                     
 14260                           ; BSR set to: 0
 14261  000C7E  868B               	bsf	3979,3,c	;volatile
 14262  000C80                     
 14263                           ; BSR set to: 0
 14264                           ;libraries/lcd_highlevel.c: 906:           }
 14265  000C80  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14266  000C82  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14267  000C84                     l9121:
 14268                           
 14269                           ; BSR set to: 0
 14270  000C84  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14271  000C86  5D6B               	subwf	LCD_Bitmap@biHeight& (0+255),w,b
 14272  000C88  6E2D               	movwf	??_LCD_Bitmap^0,c
 14273  000C8A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14274  000C8C  596C               	subwfb	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14275  000C8E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14276  000C90  0EFF               	movlw	255
 14277  000C92  242D               	addwf	??_LCD_Bitmap^0,w,c
 14278  000C94  6E1A               	movwf	___wmul@multiplier^0,c
 14279  000C96  0EFF               	movlw	255
 14280  000C98  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14281  000C9A  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 14282  000C9C  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14283  000CA0  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14284  000CA4  EC45  F031         	call	___wmul	;wreg free
 14285  000CA8  501A               	movf	?___wmul^0,w,c
 14286  000CAA  0100               	movlb	0	; () banked
 14287  000CAC  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14288  000CAE  501B               	movf	(?___wmul+1)^0,w,c
 14289  000CB0  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14290  000CB2  A0D8               	btfss	status,0,c
 14291  000CB4  EF5E  F006         	goto	u6421
 14292  000CB8  EF60  F006         	goto	u6420
 14293  000CBC                     u6421:
 14294  000CBC  EF38  F006         	goto	l9107
 14295  000CC0                     u6420:
 14296  000CC0                     
 14297                           ; BSR set to: 0
 14298                           ;libraries/lcd_highlevel.c: 907:           endOfImage = 1;
 14299  000CC0  0E01               	movlw	1
 14300  000CC2  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 14301                           
 14302                           ;libraries/lcd_highlevel.c: 908:         break;
 14303  000CC4  EFA6  F007         	goto	l9211
 14304  000CC8                     l9125:
 14305                           
 14306                           ; BSR set to: 0
 14307                           ;libraries/lcd_highlevel.c: 910:           jumpCount = bmpPtr[2] + (bmpPtr[3]*biWidth);
 14308  000CC8  0E03               	movlw	3
 14309  000CCA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14310  000CCC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14311  000CCE  0E00               	movlw	0
 14312  000CD0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14313  000CD2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14314  000CD4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14315  000CD8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14316  000CDC                     	if	0	;tblptru may be non-zero
 14317  000CDC                     	endif
 14318  000CDC                     	if	0	;tblptru may be non-zero
 14319  000CDC                     	endif
 14320  000CDC  0008               	tblrd		*
 14321  000CDE  50F5               	movf	tablat,w,c
 14322  000CE0  6E1A               	movwf	___wmul@multiplier^0,c
 14323  000CE2  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14324  000CE4  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14325  000CE8  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14326  000CEC  EC45  F031         	call	___wmul	;wreg free
 14327  000CF0  0E02               	movlw	2
 14328  000CF2  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14329  000CF4  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14330  000CF6  0E00               	movlw	0
 14331  000CF8  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14332  000CFA  6E30               	movwf	(??_LCD_Bitmap+3)^0,c
 14333  000CFC  C02F  FFF6         	movff	??_LCD_Bitmap+2,tblptrl
 14334  000D00  C030  FFF7         	movff	??_LCD_Bitmap+3,tblptrh
 14335  000D04                     	if	0	;tblptru may be non-zero
 14336  000D04                     	endif
 14337  000D04                     	if	0	;tblptru may be non-zero
 14338  000D04                     	endif
 14339  000D04  0008               	tblrd		*
 14340  000D06  50F5               	movf	tablat,w,c
 14341  000D08  241A               	addwf	?___wmul^0,w,c
 14342  000D0A  0100               	movlb	0	; () banked
 14343  000D0C  6F65               	movwf	LCD_Bitmap@jumpCount& (0+255),b
 14344  000D0E  0E00               	movlw	0
 14345  000D10  201B               	addwfc	(?___wmul+1)^0,w,c
 14346  000D12  6F66               	movwf	(LCD_Bitmap@jumpCount+1)& (0+255),b
 14347  000D14                     
 14348                           ; BSR set to: 0
 14349                           ;libraries/lcd_highlevel.c: 911:           for(i=0;i<jumpCount;i++)
 14350  000D14  0E00               	movlw	0
 14351  000D16  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14352  000D18  0E00               	movlw	0
 14353  000D1A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14354  000D1C  EF9C  F006         	goto	l9145
 14355  000D20                     l9129:
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;libraries/lcd_highlevel.c: 912:           {;libraries/lcd_highlevel.c: 913:            
      +                           curXPos++;
 14359  000D20  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14360  000D22  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14361  000D24                     
 14362                           ; BSR set to: 0
 14363                           ;libraries/lcd_highlevel.c: 914:             PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 
      +                          1;;
 14364  000D24  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14365  000D26  6E80               	movwf	128,c	;volatile
 14366  000D28                     
 14367                           ; BSR set to: 0
 14368  000D28  968B               	bcf	3979,3,c	;volatile
 14369  000D2A                     
 14370                           ; BSR set to: 0
 14371  000D2A  868B               	bsf	3979,3,c	;volatile
 14372  000D2C                     
 14373                           ; BSR set to: 0
 14374                           ;libraries/lcd_highlevel.c: 915:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14375  000D2C  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14376  000D30                     
 14377                           ; BSR set to: 0
 14378  000D30  968B               	bcf	3979,3,c	;volatile
 14379  000D32                     
 14380                           ; BSR set to: 0
 14381  000D32  868B               	bsf	3979,3,c	;volatile
 14382  000D34                     
 14383                           ; BSR set to: 0
 14384                           ;libraries/lcd_highlevel.c: 916:           }
 14385  000D34  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14386  000D36  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14387  000D38                     l9145:
 14388                           
 14389                           ; BSR set to: 0
 14390  000D38  5165               	movf	LCD_Bitmap@jumpCount& (0+255),w,b
 14391  000D3A  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14392  000D3C  5166               	movf	(LCD_Bitmap@jumpCount+1)& (0+255),w,b
 14393  000D3E  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14394  000D40  A0D8               	btfss	status,0,c
 14395  000D42  EFA5  F006         	goto	u6431
 14396  000D46  EFA7  F006         	goto	u6430
 14397  000D4A                     u6431:
 14398  000D4A  EF90  F006         	goto	l9129
 14399  000D4E                     u6430:
 14400  000D4E                     
 14401                           ; BSR set to: 0
 14402                           ;libraries/lcd_highlevel.c: 917:           curYPos = curYPos + (jumpCount / biWidth);
 14403  000D4E  C065  F020         	movff	LCD_Bitmap@jumpCount,___lwdiv@dividend
 14404  000D52  C066  F021         	movff	LCD_Bitmap@jumpCount+1,___lwdiv@dividend+1
 14405  000D56  C076  F022         	movff	LCD_Bitmap@biWidth,___lwdiv@divisor
 14406  000D5A  C077  F023         	movff	LCD_Bitmap@biWidth+1,___lwdiv@divisor+1
 14407  000D5E  EC40  F02E         	call	___lwdiv	;wreg free
 14408  000D62  0100               	movlb	0	; () banked
 14409  000D64  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14410  000D66  2420               	addwf	?___lwdiv^0,w,c
 14411  000D68  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14412  000D6A  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14413  000D6C  2021               	addwfc	(?___lwdiv+1)^0,w,c
 14414  000D6E  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14415                           
 14416                           ;libraries/lcd_highlevel.c: 918:           curXPos = curXPos % biWidth;
 14417  000D70  C06F  F012         	movff	LCD_Bitmap@curXPos,___lwmod@dividend
 14418  000D74  C070  F013         	movff	LCD_Bitmap@curXPos+1,___lwmod@dividend+1
 14419  000D78  C076  F014         	movff	LCD_Bitmap@biWidth,___lwmod@divisor
 14420  000D7C  C077  F015         	movff	LCD_Bitmap@biWidth+1,___lwmod@divisor+1
 14421  000D80  ECAC  F02E         	call	___lwmod	;wreg free
 14422  000D84  C012  F06F         	movff	?___lwmod,LCD_Bitmap@curXPos
 14423  000D88  C013  F070         	movff	?___lwmod+1,LCD_Bitmap@curXPos+1
 14424  000D8C                     
 14425                           ;libraries/lcd_highlevel.c: 919:           bmpPtr += 4;
 14426  000D8C  0E04               	movlw	4
 14427  000D8E  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14428  000D90  0E00               	movlw	0
 14429  000D92  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14430                           
 14431                           ;libraries/lcd_highlevel.c: 920:         break;
 14432  000D94  EFA6  F007         	goto	l9211
 14433  000D98                     l9151:
 14434                           
 14435                           ; BSR set to: 0
 14436                           ;libraries/lcd_highlevel.c: 922:           pixelCount = bmpPtr[1];
 14437  000D98  0E01               	movlw	1
 14438  000D9A  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14439  000D9C  6E2D               	movwf	??_LCD_Bitmap^0,c
 14440  000D9E  0E00               	movlw	0
 14441  000DA0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14442  000DA2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14443  000DA4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14444  000DA8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14445  000DAC                     	if	0	;tblptru may be non-zero
 14446  000DAC                     	endif
 14447  000DAC                     	if	0	;tblptru may be non-zero
 14448  000DAC                     	endif
 14449  000DAC  0008               	tblrd		*
 14450  000DAE  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14451  000DB2                     
 14452                           ; BSR set to: 0
 14453                           ;libraries/lcd_highlevel.c: 923:           for(i=0;i < pixelCount;i++)
 14454  000DB2  0E00               	movlw	0
 14455  000DB4  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14456  000DB6  0E00               	movlw	0
 14457  000DB8  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14458  000DBA  EF0D  F007         	goto	l9173
 14459  000DBE                     l9155:
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;libraries/lcd_highlevel.c: 924:           {;libraries/lcd_highlevel.c: 925:            
      +                           color = RGB2LCD(colorTablePtr+(bmpPtr[2+i]*4));
 14463  000DBE  517A               	movf	LCD_Bitmap@i& (0+255),w,b
 14464  000DC0  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14465  000DC2  6E2D               	movwf	??_LCD_Bitmap^0,c
 14466  000DC4  517B               	movf	(LCD_Bitmap@i+1)& (0+255),w,b
 14467  000DC6  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14468  000DC8  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14469  000DCA  0E02               	movlw	2
 14470  000DCC  262D               	addwf	??_LCD_Bitmap^0,f,c
 14471  000DCE  0E00               	movlw	0
 14472  000DD0  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14473  000DD2  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14474  000DD6  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14475  000DDA                     	if	0	;tblptru may be non-zero
 14476  000DDA                     	endif
 14477  000DDA                     	if	0	;tblptru may be non-zero
 14478  000DDA                     	endif
 14479  000DDA  0008               	tblrd		*
 14480  000DDC  50F5               	movf	tablat,w,c
 14481  000DDE  0D04               	mullw	4
 14482  000DE0  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14483  000DE4  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14484  000DE8  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14485  000DEA  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14486  000DEC  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14487  000DEE  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14488  000DF0  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14489  000DF2  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14490  000DF4  ECFB  F029         	call	_RGB2LCD	;wreg free
 14491  000DF8  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14492  000DFC  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14493  000E00                     
 14494                           ;libraries/lcd_highlevel.c: 926:             curXPos++;
 14495  000E00  0100               	movlb	0	; () banked
 14496  000E02  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14497  000E04  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14498  000E06                     
 14499                           ; BSR set to: 0
 14500                           ;libraries/lcd_highlevel.c: 927:             PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14501  000E06  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14502  000E08  6E80               	movwf	128,c	;volatile
 14503  000E0A                     
 14504                           ; BSR set to: 0
 14505  000E0A  968B               	bcf	3979,3,c	;volatile
 14506  000E0C                     
 14507                           ; BSR set to: 0
 14508  000E0C  868B               	bsf	3979,3,c	;volatile
 14509  000E0E                     
 14510                           ; BSR set to: 0
 14511                           ;libraries/lcd_highlevel.c: 928:             PORTA = color; LATC3 = 0; LATC3 = 1;;
 14512  000E0E  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14513  000E12                     
 14514                           ; BSR set to: 0
 14515  000E12  968B               	bcf	3979,3,c	;volatile
 14516  000E14                     
 14517                           ; BSR set to: 0
 14518  000E14  868B               	bsf	3979,3,c	;volatile
 14519  000E16                     
 14520                           ; BSR set to: 0
 14521                           ;libraries/lcd_highlevel.c: 929:           }
 14522  000E16  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14523  000E18  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14524  000E1A                     l9173:
 14525                           
 14526                           ; BSR set to: 0
 14527  000E1A  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14528  000E1C  6E2D               	movwf	??_LCD_Bitmap^0,c
 14529  000E1E  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14530  000E20  502D               	movf	??_LCD_Bitmap^0,w,c
 14531  000E22  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14532  000E24  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14533  000E26  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14534  000E28  A0D8               	btfss	status,0,c
 14535  000E2A  EF19  F007         	goto	u6441
 14536  000E2E  EF1B  F007         	goto	u6440
 14537  000E32                     u6441:
 14538  000E32  EFDF  F006         	goto	l9155
 14539  000E36                     u6440:
 14540  000E36                     
 14541                           ; BSR set to: 0
 14542                           ;libraries/lcd_highlevel.c: 930:           if(pixelCount < 255)
 14543  000E36  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14544  000E38  B4D8               	btfsc	status,2,c
 14545  000E3A  EF21  F007         	goto	u6451
 14546  000E3E  EF23  F007         	goto	u6450
 14547  000E42                     u6451:
 14548  000E42  EF33  F007         	goto	l9179
 14549  000E46                     u6450:
 14550  000E46                     
 14551                           ; BSR set to: 0
 14552                           ;libraries/lcd_highlevel.c: 931:           {;libraries/lcd_highlevel.c: 932:            
      +                           pixelCount = (pixelCount+1) & 0xFE;
 14553  000E46  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14554  000E48  0BFE               	andlw	254
 14555  000E4A  6F75               	movwf	LCD_Bitmap@pixelCount& (0+255),b
 14556                           
 14557                           ;libraries/lcd_highlevel.c: 933:             bmpPtr+=pixelCount+2;
 14558  000E4C  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14559  000E4E  6E2D               	movwf	??_LCD_Bitmap^0,c
 14560  000E50  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14561  000E52  0E02               	movlw	2
 14562  000E54  262D               	addwf	??_LCD_Bitmap^0,f,c
 14563  000E56  0E00               	movlw	0
 14564  000E58  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14565  000E5A  502D               	movf	??_LCD_Bitmap^0,w,c
 14566  000E5C  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14567  000E5E  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14568  000E60  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14569                           
 14570                           ;libraries/lcd_highlevel.c: 934:           }
 14571  000E62  EFA6  F007         	goto	l9211
 14572  000E66                     l9179:
 14573                           
 14574                           ; BSR set to: 0
 14575                           ;libraries/lcd_highlevel.c: 936:           {;libraries/lcd_highlevel.c: 937:            
      +                             bmpPtr += 258;
 14576  000E66  0E02               	movlw	2
 14577  000E68  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14578  000E6A  0E01               	movlw	1
 14579  000E6C  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14580  000E6E  EFA6  F007         	goto	l9211
 14581  000E72                     l9183:
 14582                           
 14583                           ; BSR set to: 0
 14584  000E72  0E01               	movlw	1
 14585  000E74  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14586  000E76  6E2D               	movwf	??_LCD_Bitmap^0,c
 14587  000E78  0E00               	movlw	0
 14588  000E7A  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14589  000E7C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14590  000E7E  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14591  000E82  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14592  000E86                     	if	0	;tblptru may be non-zero
 14593  000E86                     	endif
 14594  000E86                     	if	0	;tblptru may be non-zero
 14595  000E86                     	endif
 14596  000E86  0008               	tblrd		*
 14597  000E88  50F5               	movf	tablat,w,c
 14598  000E8A  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14599  000E8C  6A30               	clrf	(??_LCD_Bitmap+3)^0,c
 14600                           
 14601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14602                           ; Switch size 1, requested type "simple"
 14603                           ; Number of cases is 1, Range of values is 0 to 0
 14604                           ; switch strategies available:
 14605                           ; Name         Instructions Cycles
 14606                           ; simple_byte            4     3 (average)
 14607                           ;	Chosen strategy is simple_byte
 14608  000E8E  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14609  000E90  0A00               	xorlw	0	; case 0
 14610  000E92  B4D8               	btfsc	status,2,c
 14611  000E94  EF4E  F007         	goto	l10693
 14612  000E98  EFCC  F006         	goto	l9151
 14613  000E9C                     l10693:
 14614                           
 14615                           ; BSR set to: 0
 14616                           ; Switch size 1, requested type "simple"
 14617                           ; Number of cases is 3, Range of values is 0 to 2
 14618                           ; switch strategies available:
 14619                           ; Name         Instructions Cycles
 14620                           ; simple_byte           10     6 (average)
 14621                           ;	Chosen strategy is simple_byte
 14622  000E9C  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14623  000E9E  0A00               	xorlw	0	; case 0
 14624  000EA0  B4D8               	btfsc	status,2,c
 14625  000EA2  EFE4  F005         	goto	l9063
 14626  000EA6  0A01               	xorlw	1	; case 1
 14627  000EA8  B4D8               	btfsc	status,2,c
 14628  000EAA  EF11  F006         	goto	l9087
 14629  000EAE  0A03               	xorlw	3	; case 2
 14630  000EB0  B4D8               	btfsc	status,2,c
 14631  000EB2  EF64  F006         	goto	l9125
 14632  000EB6  EFCC  F006         	goto	l9151
 14633  000EBA                     l9185:
 14634                           
 14635                           ; BSR set to: 0
 14636                           ;libraries/lcd_highlevel.c: 943:     {;libraries/lcd_highlevel.c: 944:       pixelCount 
      +                          = bmpPtr[0];
 14637  000EBA  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14638  000EBE  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14639  000EC2                     	if	0	;tblptru may be non-zero
 14640  000EC2                     	endif
 14641  000EC2                     	if	0	;tblptru may be non-zero
 14642  000EC2                     	endif
 14643  000EC2  0008               	tblrd		*
 14644  000EC4  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14645  000EC8                     
 14646                           ; BSR set to: 0
 14647                           ;libraries/lcd_highlevel.c: 945:       color = RGB2LCD(colorTablePtr+(bmpPtr[1]*4));
 14648  000EC8  0E01               	movlw	1
 14649  000ECA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14650  000ECC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14651  000ECE  0E00               	movlw	0
 14652  000ED0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14653  000ED2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14654  000ED4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14655  000ED8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14656  000EDC                     	if	0	;tblptru may be non-zero
 14657  000EDC                     	endif
 14658  000EDC                     	if	0	;tblptru may be non-zero
 14659  000EDC                     	endif
 14660  000EDC  0008               	tblrd		*
 14661  000EDE  50F5               	movf	tablat,w,c
 14662  000EE0  0D04               	mullw	4
 14663  000EE2  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14664  000EE6  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14665  000EEA  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14666  000EEC  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14667  000EEE  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14668  000EF0  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14669  000EF2  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14670  000EF4  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14671  000EF6  ECFB  F029         	call	_RGB2LCD	;wreg free
 14672  000EFA  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14673  000EFE  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14674  000F02                     
 14675                           ;libraries/lcd_highlevel.c: 946:       for(i=0;i < pixelCount;i++)
 14676  000F02  0E00               	movlw	0
 14677  000F04  0100               	movlb	0	; () banked
 14678  000F06  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14679  000F08  0E00               	movlw	0
 14680  000F0A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14681  000F0C  EF94  F007         	goto	l9207
 14682  000F10                     l9191:
 14683                           
 14684                           ; BSR set to: 0
 14685                           ;libraries/lcd_highlevel.c: 947:       {;libraries/lcd_highlevel.c: 948:         curXPos
      +                          ++;
 14686  000F10  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14687  000F12  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14688  000F14                     
 14689                           ; BSR set to: 0
 14690                           ;libraries/lcd_highlevel.c: 949:         PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14691  000F14  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14692  000F16  6E80               	movwf	128,c	;volatile
 14693  000F18                     
 14694                           ; BSR set to: 0
 14695  000F18  968B               	bcf	3979,3,c	;volatile
 14696  000F1A                     
 14697                           ; BSR set to: 0
 14698  000F1A  868B               	bsf	3979,3,c	;volatile
 14699  000F1C                     
 14700                           ; BSR set to: 0
 14701                           ;libraries/lcd_highlevel.c: 950:         PORTA = color; LATC3 = 0; LATC3 = 1;;
 14702  000F1C  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14703  000F20                     
 14704                           ; BSR set to: 0
 14705  000F20  968B               	bcf	3979,3,c	;volatile
 14706  000F22                     
 14707                           ; BSR set to: 0
 14708  000F22  868B               	bsf	3979,3,c	;volatile
 14709  000F24                     
 14710                           ; BSR set to: 0
 14711                           ;libraries/lcd_highlevel.c: 951:       }
 14712  000F24  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14713  000F26  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14714  000F28                     l9207:
 14715                           
 14716                           ; BSR set to: 0
 14717  000F28  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14718  000F2A  6E2D               	movwf	??_LCD_Bitmap^0,c
 14719  000F2C  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14720  000F2E  502D               	movf	??_LCD_Bitmap^0,w,c
 14721  000F30  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14722  000F32  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14723  000F34  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14724  000F36  A0D8               	btfss	status,0,c
 14725  000F38  EFA0  F007         	goto	u6461
 14726  000F3C  EFA2  F007         	goto	u6460
 14727  000F40                     u6461:
 14728  000F40  EF88  F007         	goto	l9191
 14729  000F44                     u6460:
 14730  000F44                     
 14731                           ; BSR set to: 0
 14732                           ;libraries/lcd_highlevel.c: 952:       bmpPtr+=2;
 14733  000F44  0E02               	movlw	2
 14734  000F46  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14735  000F48  0E00               	movlw	0
 14736  000F4A  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14737  000F4C                     l9211:
 14738                           
 14739                           ;libraries/lcd_highlevel.c: 954:   }while(endOfImage == 0);
 14740  000F4C  0100               	movlb	0	; () banked
 14741  000F4E  5164               	movf	LCD_Bitmap@endOfImage& (0+255),w,b
 14742  000F50  B4D8               	btfsc	status,2,c
 14743  000F52  EFAD  F007         	goto	u6471
 14744  000F56  EFAF  F007         	goto	u6470
 14745  000F5A                     u6471:
 14746  000F5A  EFD4  F005         	goto	l9059
 14747  000F5E                     u6470:
 14748  000F5E                     
 14749                           ; BSR set to: 0
 14750                           ;libraries/lcd_highlevel.c: 955:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14751  000F5E  0E36               	movlw	54
 14752  000F60  6E80               	movwf	128,c	;volatile
 14753  000F62                     
 14754                           ; BSR set to: 0
 14755  000F62  988B               	bcf	3979,4,c	;volatile
 14756  000F64                     
 14757                           ; BSR set to: 0
 14758  000F64  968B               	bcf	3979,3,c	;volatile
 14759  000F66                     
 14760                           ; BSR set to: 0
 14761  000F66  868B               	bsf	3979,3,c	;volatile
 14762  000F68                     
 14763                           ; BSR set to: 0
 14764  000F68  888B               	bsf	3979,4,c	;volatile
 14765                           
 14766                           ;libraries/lcd_highlevel.c: 957:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
 14767  000F6A  0E00               	movlw	0
 14768  000F6C  6E80               	movwf	128,c	;volatile
 14769  000F6E                     
 14770                           ; BSR set to: 0
 14771  000F6E  968B               	bcf	3979,3,c	;volatile
 14772  000F70                     
 14773                           ; BSR set to: 0
 14774  000F70  868B               	bsf	3979,3,c	;volatile
 14775  000F72                     l329:
 14776                           
 14777                           ; BSR set to: 0
 14778  000F72  0012               	return		;funcret
 14779  000F74                     __end_of_LCD_Bitmap:
 14780                           	callstack 0
 14781                           
 14782 ;; *************** function ___lwmod *****************
 14783 ;; Defined at:
 14784 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  dividend        2   17[COMRAM] unsigned int 
 14787 ;;  divisor         2   19[COMRAM] unsigned int 
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;  counter         1   21[COMRAM] unsigned char 
 14790 ;; Return value:  Size  Location     Type
 14791 ;;                  2   17[COMRAM] unsigned int 
 14792 ;; Registers used:
 14793 ;;		wreg, status,2, status,0
 14794 ;; Tracked objects:
 14795 ;;		On entry : 0/0
 14796 ;;		On exit  : 0/0
 14797 ;;		Unchanged: 0/0
 14798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14799 ;;      Params:         4       0       0       0       0       0       0
 14800 ;;      Locals:         1       0       0       0       0       0       0
 14801 ;;      Temps:          0       0       0       0       0       0       0
 14802 ;;      Totals:         5       0       0       0       0       0       0
 14803 ;;Total ram usage:        5 bytes
 14804 ;; Hardware stack levels used: 1
 14805 ;; Hardware stack levels required when called: 4
 14806 ;; This function calls:
 14807 ;;		Nothing
 14808 ;; This function is called by:
 14809 ;;		_LCD_Bitmap
 14810 ;; This function uses a non-reentrant model
 14811 ;;
 14812                           
 14813                           	psect	text52
 14814  005D58                     __ptext52:
 14815                           	callstack 0
 14816  005D58                     ___lwmod:
 14817                           	callstack 19
 14818  005D58  5014               	movf	___lwmod@divisor^0,w,c
 14819  005D5A  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
 14820  005D5C  B4D8               	btfsc	status,2,c
 14821  005D5E  EFB3  F02E         	goto	u6121
 14822  005D62  EFB5  F02E         	goto	u6120
 14823  005D66                     u6121:
 14824  005D66  EFD9  F02E         	goto	l1310
 14825  005D6A                     u6120:
 14826  005D6A  0E01               	movlw	1
 14827  005D6C  6E16               	movwf	___lwmod@counter^0,c
 14828  005D6E  EFBD  F02E         	goto	l8643
 14829  005D72                     l8641:
 14830  005D72  90D8               	bcf	status,0,c
 14831  005D74  3614               	rlcf	___lwmod@divisor^0,f,c
 14832  005D76  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
 14833  005D78  2A16               	incf	___lwmod@counter^0,f,c
 14834  005D7A                     l8643:
 14835  005D7A  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
 14836  005D7C  EFC2  F02E         	goto	u6131
 14837  005D80  EFC4  F02E         	goto	u6130
 14838  005D84                     u6131:
 14839  005D84  EFB9  F02E         	goto	l8641
 14840  005D88                     u6130:
 14841  005D88                     l8645:
 14842  005D88  5014               	movf	___lwmod@divisor^0,w,c
 14843  005D8A  5C12               	subwf	___lwmod@dividend^0,w,c
 14844  005D8C  5015               	movf	(___lwmod@divisor+1)^0,w,c
 14845  005D8E  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
 14846  005D90  A0D8               	btfss	status,0,c
 14847  005D92  EFCD  F02E         	goto	u6141
 14848  005D96  EFCF  F02E         	goto	u6140
 14849  005D9A                     u6141:
 14850  005D9A  EFD3  F02E         	goto	l8649
 14851  005D9E                     u6140:
 14852  005D9E  5014               	movf	___lwmod@divisor^0,w,c
 14853  005DA0  5E12               	subwf	___lwmod@dividend^0,f,c
 14854  005DA2  5015               	movf	(___lwmod@divisor+1)^0,w,c
 14855  005DA4  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
 14856  005DA6                     l8649:
 14857  005DA6  90D8               	bcf	status,0,c
 14858  005DA8  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
 14859  005DAA  3214               	rrcf	___lwmod@divisor^0,f,c
 14860  005DAC  2E16               	decfsz	___lwmod@counter^0,f,c
 14861  005DAE  EFC4  F02E         	goto	l8645
 14862  005DB2                     l1310:
 14863  005DB2  C012  F012         	movff	___lwmod@dividend,?___lwmod
 14864  005DB6  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
 14865  005DBA  0012               	return		;funcret
 14866  005DBC                     __end_of___lwmod:
 14867                           	callstack 0
 14868                           
 14869 ;; *************** function ___lwdiv *****************
 14870 ;; Defined at:
 14871 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 14872 ;; Parameters:    Size  Location     Type
 14873 ;;  dividend        2   31[COMRAM] unsigned int 
 14874 ;;  divisor         2   33[COMRAM] unsigned int 
 14875 ;; Auto vars:     Size  Location     Type
 14876 ;;  quotient        2   36[COMRAM] unsigned int 
 14877 ;;  counter         1   35[COMRAM] unsigned char 
 14878 ;; Return value:  Size  Location     Type
 14879 ;;                  2   31[COMRAM] unsigned int 
 14880 ;; Registers used:
 14881 ;;		wreg, status,2, status,0
 14882 ;; Tracked objects:
 14883 ;;		On entry : 0/0
 14884 ;;		On exit  : 0/0
 14885 ;;		Unchanged: 0/0
 14886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14887 ;;      Params:         4       0       0       0       0       0       0
 14888 ;;      Locals:         3       0       0       0       0       0       0
 14889 ;;      Temps:          0       0       0       0       0       0       0
 14890 ;;      Totals:         7       0       0       0       0       0       0
 14891 ;;Total ram usage:        7 bytes
 14892 ;; Hardware stack levels used: 1
 14893 ;; Hardware stack levels required when called: 4
 14894 ;; This function calls:
 14895 ;;		Nothing
 14896 ;; This function is called by:
 14897 ;;		_LCD_SliderUpdate
 14898 ;;		_LCD_Bitmap
 14899 ;; This function uses a non-reentrant model
 14900 ;;
 14901                           
 14902                           	psect	text53
 14903  005C80                     __ptext53:
 14904                           	callstack 0
 14905  005C80                     ___lwdiv:
 14906                           	callstack 21
 14907  005C80  0E00               	movlw	0
 14908  005C82  6E26               	movwf	(___lwdiv@quotient+1)^0,c
 14909  005C84  0E00               	movlw	0
 14910  005C86  6E25               	movwf	___lwdiv@quotient^0,c
 14911  005C88  5022               	movf	___lwdiv@divisor^0,w,c
 14912  005C8A  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
 14913  005C8C  B4D8               	btfsc	status,2,c
 14914  005C8E  EF4B  F02E         	goto	u6091
 14915  005C92  EF4D  F02E         	goto	u6090
 14916  005C96                     u6091:
 14917  005C96  EF75  F02E         	goto	l1300
 14918  005C9A                     u6090:
 14919  005C9A  0E01               	movlw	1
 14920  005C9C  6E24               	movwf	___lwdiv@counter^0,c
 14921  005C9E  EF55  F02E         	goto	l8623
 14922  005CA2                     l8621:
 14923  005CA2  90D8               	bcf	status,0,c
 14924  005CA4  3622               	rlcf	___lwdiv@divisor^0,f,c
 14925  005CA6  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
 14926  005CA8  2A24               	incf	___lwdiv@counter^0,f,c
 14927  005CAA                     l8623:
 14928  005CAA  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
 14929  005CAC  EF5A  F02E         	goto	u6101
 14930  005CB0  EF5C  F02E         	goto	u6100
 14931  005CB4                     u6101:
 14932  005CB4  EF51  F02E         	goto	l8621
 14933  005CB8                     u6100:
 14934  005CB8                     l8625:
 14935  005CB8  90D8               	bcf	status,0,c
 14936  005CBA  3625               	rlcf	___lwdiv@quotient^0,f,c
 14937  005CBC  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
 14938  005CBE  5022               	movf	___lwdiv@divisor^0,w,c
 14939  005CC0  5C20               	subwf	___lwdiv@dividend^0,w,c
 14940  005CC2  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 14941  005CC4  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
 14942  005CC6  A0D8               	btfss	status,0,c
 14943  005CC8  EF68  F02E         	goto	u6111
 14944  005CCC  EF6A  F02E         	goto	u6110
 14945  005CD0                     u6111:
 14946  005CD0  EF6F  F02E         	goto	l8633
 14947  005CD4                     u6110:
 14948  005CD4  5022               	movf	___lwdiv@divisor^0,w,c
 14949  005CD6  5E20               	subwf	___lwdiv@dividend^0,f,c
 14950  005CD8  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 14951  005CDA  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
 14952  005CDC  8025               	bsf	___lwdiv@quotient^0,0,c
 14953  005CDE                     l8633:
 14954  005CDE  90D8               	bcf	status,0,c
 14955  005CE0  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
 14956  005CE2  3222               	rrcf	___lwdiv@divisor^0,f,c
 14957  005CE4  2E24               	decfsz	___lwdiv@counter^0,f,c
 14958  005CE6  EF5C  F02E         	goto	l8625
 14959  005CEA                     l1300:
 14960  005CEA  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 14961  005CEE  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14962  005CF2  0012               	return		;funcret
 14963  005CF4                     __end_of___lwdiv:
 14964                           	callstack 0
 14965                           
 14966 ;; *************** function _RGB2LCD *****************
 14967 ;; Defined at:
 14968 ;;		line 799 in file "libraries/lcd_highlevel.c"
 14969 ;; Parameters:    Size  Location     Type
 14970 ;;  colorTableEn    2   17[COMRAM] PTR unsigned char 
 14971 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 14972 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 14973 ;; Auto vars:     Size  Location     Type
 14974 ;;  color           2   29[COMRAM] unsigned short 
 14975 ;;  blue            2   27[COMRAM] unsigned short 
 14976 ;;  green           2   25[COMRAM] unsigned short 
 14977 ;;  red             2   23[COMRAM] unsigned short 
 14978 ;; Return value:  Size  Location     Type
 14979 ;;                  2   17[COMRAM] unsigned short 
 14980 ;; Registers used:
 14981 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 14982 ;; Tracked objects:
 14983 ;;		On entry : 0/0
 14984 ;;		On exit  : 0/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14987 ;;      Params:         2       0       0       0       0       0       0
 14988 ;;      Locals:         8       0       0       0       0       0       0
 14989 ;;      Temps:          4       0       0       0       0       0       0
 14990 ;;      Totals:        14       0       0       0       0       0       0
 14991 ;;Total ram usage:       14 bytes
 14992 ;; Hardware stack levels used: 1
 14993 ;; Hardware stack levels required when called: 4
 14994 ;; This function calls:
 14995 ;;		Nothing
 14996 ;; This function is called by:
 14997 ;;		_LCD_Bitmap
 14998 ;; This function uses a non-reentrant model
 14999 ;;
 15000                           
 15001                           	psect	text54
 15002  0053F6                     __ptext54:
 15003                           	callstack 0
 15004  0053F6                     _RGB2LCD:
 15005                           	callstack 19
 15006  0053F6                     
 15007                           ;libraries/lcd_highlevel.c: 799: uint16_t RGB2LCD(uint8_t * colorTableEntry);libraries/l
      +                          cd_highlevel.c: 800: {;libraries/lcd_highlevel.c: 801:     uint16_t red,green,blue;;libr
      +                          aries/lcd_highlevel.c: 802:     uint16_t color;;libraries/lcd_highlevel.c: 804:     red 
      +                          = colorTableEntry[2] >> 3;
 15008  0053F6  0E02               	movlw	2
 15009  0053F8  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15010  0053FA  6E14               	movwf	??_RGB2LCD^0,c
 15011  0053FC  0E00               	movlw	0
 15012  0053FE  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15013  005400  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15014  005402  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15015  005406  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15016  00540A                     	if	0	;tblptru may be non-zero
 15017  00540A                     	endif
 15018  00540A                     	if	0	;tblptru may be non-zero
 15019  00540A                     	endif
 15020  00540A  0008               	tblrd		*
 15021  00540C  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15022  005410  90D8               	bcf	status,0,c
 15023  005412  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15024  005414  90D8               	bcf	status,0,c
 15025  005416  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15026  005418  90D8               	bcf	status,0,c
 15027  00541A  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15028  00541C  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15029  00541E  6E18               	movwf	RGB2LCD@red^0,c
 15030  005420  6A19               	clrf	(RGB2LCD@red+1)^0,c
 15031                           
 15032                           ;libraries/lcd_highlevel.c: 805:     green = colorTableEntry[1] >> 2;
 15033  005422  0E01               	movlw	1
 15034  005424  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15035  005426  6E14               	movwf	??_RGB2LCD^0,c
 15036  005428  0E00               	movlw	0
 15037  00542A  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15038  00542C  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15039  00542E  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15040  005432  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15041  005436                     	if	0	;tblptru may be non-zero
 15042  005436                     	endif
 15043  005436                     	if	0	;tblptru may be non-zero
 15044  005436                     	endif
 15045  005436  0008               	tblrd		*
 15046  005438  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15047  00543C  90D8               	bcf	status,0,c
 15048  00543E  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15049  005440  90D8               	bcf	status,0,c
 15050  005442  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15051  005444  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15052  005446  6E1A               	movwf	RGB2LCD@green^0,c
 15053  005448  6A1B               	clrf	(RGB2LCD@green+1)^0,c
 15054                           
 15055                           ;libraries/lcd_highlevel.c: 806:     blue = colorTableEntry[0] >> 3;
 15056  00544A  C012  FFF6         	movff	RGB2LCD@colorTableEntry,tblptrl
 15057  00544E  C013  FFF7         	movff	RGB2LCD@colorTableEntry+1,tblptrh
 15058  005452                     	if	0	;tblptru may be non-zero
 15059  005452                     	endif
 15060  005452                     	if	0	;tblptru may be non-zero
 15061  005452                     	endif
 15062  005452  0008               	tblrd		*
 15063  005454  CFF5 F014          	movff	tablat,??_RGB2LCD
 15064  005458  90D8               	bcf	status,0,c
 15065  00545A  3214               	rrcf	??_RGB2LCD^0,f,c
 15066  00545C  90D8               	bcf	status,0,c
 15067  00545E  3214               	rrcf	??_RGB2LCD^0,f,c
 15068  005460  90D8               	bcf	status,0,c
 15069  005462  3214               	rrcf	??_RGB2LCD^0,f,c
 15070  005464  5014               	movf	??_RGB2LCD^0,w,c
 15071  005466  6E1C               	movwf	RGB2LCD@blue^0,c
 15072  005468  6A1D               	clrf	(RGB2LCD@blue+1)^0,c
 15073  00546A                     
 15074                           ;libraries/lcd_highlevel.c: 807:     color = (red << 11) | (green << 5) | (blue << 0);
 15075  00546A  C01A  F014         	movff	RGB2LCD@green,??_RGB2LCD
 15076  00546E  C01B  F015         	movff	RGB2LCD@green+1,??_RGB2LCD+1
 15077  005472  0E05               	movlw	5
 15078  005474                     u5935:
 15079  005474  90D8               	bcf	status,0,c
 15080  005476  3614               	rlcf	??_RGB2LCD^0,f,c
 15081  005478  3615               	rlcf	(??_RGB2LCD+1)^0,f,c
 15082  00547A  2EE8               	decfsz	wreg,f,c
 15083  00547C  EF3A  F02A         	goto	u5935
 15084  005480  C018  F016         	movff	RGB2LCD@red,??_RGB2LCD+2
 15085  005484  C019  F017         	movff	RGB2LCD@red+1,??_RGB2LCD+3
 15086  005488  0E0B               	movlw	11
 15087  00548A                     u5945:
 15088  00548A  90D8               	bcf	status,0,c
 15089  00548C  3616               	rlcf	(??_RGB2LCD+2)^0,f,c
 15090  00548E  3617               	rlcf	(??_RGB2LCD+3)^0,f,c
 15091  005490  2EE8               	decfsz	wreg,f,c
 15092  005492  EF45  F02A         	goto	u5945
 15093  005496  5014               	movf	??_RGB2LCD^0,w,c
 15094  005498  1216               	iorwf	(??_RGB2LCD+2)^0,f,c
 15095  00549A  5015               	movf	(??_RGB2LCD+1)^0,w,c
 15096  00549C  1217               	iorwf	(??_RGB2LCD+3)^0,f,c
 15097  00549E  501C               	movf	RGB2LCD@blue^0,w,c
 15098  0054A0  1016               	iorwf	(??_RGB2LCD+2)^0,w,c
 15099  0054A2  6E1E               	movwf	RGB2LCD@color^0,c
 15100  0054A4  501D               	movf	(RGB2LCD@blue+1)^0,w,c
 15101  0054A6  1017               	iorwf	(??_RGB2LCD+3)^0,w,c
 15102  0054A8  6E1F               	movwf	(RGB2LCD@color+1)^0,c
 15103  0054AA                     
 15104                           ;libraries/lcd_highlevel.c: 808:     return color;
 15105  0054AA  C01E  F012         	movff	RGB2LCD@color,?_RGB2LCD
 15106  0054AE  C01F  F013         	movff	RGB2LCD@color+1,?_RGB2LCD+1
 15107  0054B2  0012               	return		;funcret
 15108  0054B4                     __end_of_RGB2LCD:
 15109                           	callstack 0
 15110                           
 15111 ;; *************** function _Menu_inGameDraw *****************
 15112 ;; Defined at:
 15113 ;;		line 31 in file "class/menu.c"
 15114 ;; Parameters:    Size  Location     Type
 15115 ;;  g               2   50[BANK0 ] PTR struct GameParameter
 15116 ;;		 -> g1(239), 
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;		None
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  1    wreg      void 
 15121 ;; Registers used:
 15122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/0
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15128 ;;      Params:         0       2       0       0       0       0       0
 15129 ;;      Locals:         0       0       0       0       0       0       0
 15130 ;;      Temps:          0       0       0       0       0       0       0
 15131 ;;      Totals:         0       2       0       0       0       0       0
 15132 ;;Total ram usage:        2 bytes
 15133 ;; Hardware stack levels used: 1
 15134 ;; Hardware stack levels required when called: 13
 15135 ;; This function calls:
 15136 ;;		_Ball_draw
 15137 ;;		_LCD_Fill
 15138 ;;		_Paddle_draw
 15139 ;;		_Score_draw
 15140 ;; This function is called by:
 15141 ;;		_displaySM
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           	psect	text55
 15146  005F38                     __ptext55:
 15147                           	callstack 0
 15148  005F38                     _Menu_inGameDraw:
 15149                           	callstack 15
 15150  005F38                     
 15151                           ;class/menu.c: 31: void Menu_inGameDraw(GameParameters* g);class/menu.c: 32: {;class/men
      +                          u.c: 33:     LCD_Fill(0b0000000000000000);
 15152  005F38  0E00               	movlw	0
 15153  005F3A  6E13               	movwf	(LCD_Fill@color+1)^0,c
 15154  005F3C  0E00               	movlw	0
 15155  005F3E  6E12               	movwf	LCD_Fill@color^0,c
 15156  005F40  EC9A  F029         	call	_LCD_Fill	;wreg free
 15157  005F44                     
 15158                           ;class/menu.c: 34:     Score_draw(&g->s1);
 15159  005F44  0EE9               	movlw	233
 15160  005F46  0100               	movlb	0	; () banked
 15161  005F48  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15162  005F4A  6F90               	movwf	Score_draw@s& (0+255),b
 15163  005F4C  0E00               	movlw	0
 15164  005F4E  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15165  005F50  6F91               	movwf	(Score_draw@s+1)& (0+255),b
 15166  005F52  EC09  F028         	call	_Score_draw	;wreg free
 15167  005F56                     
 15168                           ;class/menu.c: 35:     Paddle_draw(&g->p1);
 15169  005F56  0ED5               	movlw	213
 15170  005F58  0100               	movlb	0	; () banked
 15171  005F5A  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15172  005F5C  6E25               	movwf	Paddle_draw@p^0,c
 15173  005F5E  0E00               	movlw	0
 15174  005F60  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15175  005F62  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15176  005F64  ECAC  F021         	call	_Paddle_draw	;wreg free
 15177  005F68                     
 15178                           ;class/menu.c: 36:     Paddle_draw(&g->p2);
 15179  005F68  0EDF               	movlw	223
 15180  005F6A  0100               	movlb	0	; () banked
 15181  005F6C  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15182  005F6E  6E25               	movwf	Paddle_draw@p^0,c
 15183  005F70  0E00               	movlw	0
 15184  005F72  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15185  005F74  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15186  005F76  ECAC  F021         	call	_Paddle_draw	;wreg free
 15187  005F7A                     
 15188                           ;class/menu.c: 37:     Ball_draw(&g->b);
 15189  005F7A  0EC9               	movlw	201
 15190  005F7C  0100               	movlb	0	; () banked
 15191  005F7E  2592               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15192  005F80  6E25               	movwf	Ball_draw@b^0,c
 15193  005F82  0E00               	movlw	0
 15194  005F84  2193               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15195  005F86  6E26               	movwf	(Ball_draw@b+1)^0,c
 15196  005F88  EC60  F020         	call	_Ball_draw	;wreg free
 15197  005F8C  0012               	return		;funcret
 15198  005F8E                     __end_of_Menu_inGameDraw:
 15199                           	callstack 0
 15200                           
 15201 ;; *************** function _Score_draw *****************
 15202 ;; Defined at:
 15203 ;;		line 16 in file "class/score.c"
 15204 ;; Parameters:    Size  Location     Type
 15205 ;;  s               2   48[BANK0 ] PTR struct Score
 15206 ;;		 -> g1(239), 
 15207 ;; Auto vars:     Size  Location     Type
 15208 ;;		None
 15209 ;; Return value:  Size  Location     Type
 15210 ;;                  1    wreg      void 
 15211 ;; Registers used:
 15212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15213 ;; Tracked objects:
 15214 ;;		On entry : 0/0
 15215 ;;		On exit  : 0/0
 15216 ;;		Unchanged: 0/0
 15217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15218 ;;      Params:         0       2       0       0       0       0       0
 15219 ;;      Locals:         0       0       0       0       0       0       0
 15220 ;;      Temps:          0       0       0       0       0       0       0
 15221 ;;      Totals:         0       2       0       0       0       0       0
 15222 ;;Total ram usage:        2 bytes
 15223 ;; Hardware stack levels used: 1
 15224 ;; Hardware stack levels required when called: 12
 15225 ;; This function calls:
 15226 ;;		_LCD_DrawText
 15227 ;;		_sprintf
 15228 ;; This function is called by:
 15229 ;;		_Menu_inGameDraw
 15230 ;;		_displayController
 15231 ;; This function uses a non-reentrant model
 15232 ;;
 15233                           
 15234                           	psect	text56
 15235  005012                     __ptext56:
 15236                           	callstack 0
 15237  005012                     _Score_draw:
 15238                           	callstack 14
 15239  005012                     
 15240                           ;class/score.c: 16: void Score_draw(struct Score* s);class/score.c: 17: {;class/score.c:
      +                           18:     sprintf(s->str,"%d",s->homeScore);
 15241  005012  0E04               	movlw	4
 15242  005014  0100               	movlb	0	; () banked
 15243  005016  2590               	addwf	Score_draw@s& (0+255),w,b
 15244  005018  6F82               	movwf	sprintf@s& (0+255),b
 15245  00501A  0E00               	movlw	0
 15246  00501C  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15247  00501E  6F83               	movwf	(sprintf@s+1)& (0+255),b
 15248  005020  0EEE               	movlw	low (STR_15+3)
 15249  005022  6F84               	movwf	sprintf@fmt& (0+255),b
 15250  005024  0E7F               	movlw	high (STR_15+3)
 15251  005026  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
 15252  005028  C090  FFD9         	movff	Score_draw@s,fsr2l
 15253  00502C  C091  FFDA         	movff	Score_draw@s+1,fsr2h
 15254  005030  CFDE F086          	movff	postinc2,?_sprintf+4
 15255  005034  CFDD F087          	movff	postdec2,?_sprintf+5
 15256  005038  ECC7  F02F         	call	_sprintf	;wreg free
 15257  00503C                     
 15258                           ;class/score.c: 19:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_LEFT,0,0,0b11111
      +                          11111111111,0b0000000000000000);
 15259  00503C  0E04               	movlw	4
 15260  00503E  0100               	movlb	0	; () banked
 15261  005040  2590               	addwf	Score_draw@s& (0+255),w,b
 15262  005042  6E20               	movwf	LCD_DrawText@msg^0,c
 15263  005044  0E00               	movlw	0
 15264  005046  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15265  005048  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15266  00504A  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 15267  00504C  6E22               	movwf	LCD_DrawText@font^0,c
 15268  00504E  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15269  005050  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15270  005052  0E00               	movlw	0
 15271  005054  6E24               	movwf	LCD_DrawText@align^0,c
 15272  005056  0E00               	movlw	0
 15273  005058  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15274  00505A  0E00               	movlw	0
 15275  00505C  6E25               	movwf	LCD_DrawText@posX^0,c
 15276  00505E  0E00               	movlw	0
 15277  005060  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15278  005062  0E00               	movlw	0
 15279  005064  6E27               	movwf	LCD_DrawText@posY^0,c
 15280  005066  0EFF               	movlw	255
 15281  005068  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15282  00506A  6829               	setf	LCD_DrawText@color^0,c
 15283  00506C  0E00               	movlw	0
 15284  00506E  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15285  005070  0E00               	movlw	0
 15286  005072  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15287  005074  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 15288  005078                     
 15289                           ;class/score.c: 20:     sprintf(s->str,"%d",s->awayScore);
 15290  005078  0E04               	movlw	4
 15291  00507A  0100               	movlb	0	; () banked
 15292  00507C  2590               	addwf	Score_draw@s& (0+255),w,b
 15293  00507E  6F82               	movwf	sprintf@s& (0+255),b
 15294  005080  0E00               	movlw	0
 15295  005082  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15296  005084  6F83               	movwf	(sprintf@s+1)& (0+255),b
 15297  005086  0EEE               	movlw	low (STR_15+3)
 15298  005088  6F84               	movwf	sprintf@fmt& (0+255),b
 15299  00508A  0E7F               	movlw	high (STR_15+3)
 15300  00508C  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
 15301  00508E  EE20 F002          	lfsr	2,2
 15302  005092  5190               	movf	Score_draw@s& (0+255),w,b
 15303  005094  26D9               	addwf	fsr2l,f,c
 15304  005096  5191               	movf	(Score_draw@s+1)& (0+255),w,b
 15305  005098  22DA               	addwfc	fsr2h,f,c
 15306  00509A  CFDE F086          	movff	postinc2,?_sprintf+4
 15307  00509E  CFDD F087          	movff	postdec2,?_sprintf+5
 15308  0050A2  ECC7  F02F         	call	_sprintf	;wreg free
 15309                           
 15310                           ;class/score.c: 21:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_RIGHT,239,0,0b11
      +                          11111111111111,0b0000000000000000);
 15311  0050A6  0E04               	movlw	4
 15312  0050A8  0100               	movlb	0	; () banked
 15313  0050AA  2590               	addwf	Score_draw@s& (0+255),w,b
 15314  0050AC  6E20               	movwf	LCD_DrawText@msg^0,c
 15315  0050AE  0E00               	movlw	0
 15316  0050B0  2191               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15317  0050B2  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15318  0050B4  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 15319  0050B6  6E22               	movwf	LCD_DrawText@font^0,c
 15320  0050B8  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15321  0050BA  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15322  0050BC  0E01               	movlw	1
 15323  0050BE  6E24               	movwf	LCD_DrawText@align^0,c
 15324  0050C0  0E00               	movlw	0
 15325  0050C2  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15326  0050C4  0EEF               	movlw	239
 15327  0050C6  6E25               	movwf	LCD_DrawText@posX^0,c
 15328  0050C8  0E00               	movlw	0
 15329  0050CA  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15330  0050CC  0E00               	movlw	0
 15331  0050CE  6E27               	movwf	LCD_DrawText@posY^0,c
 15332  0050D0  0EFF               	movlw	255
 15333  0050D2  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15334  0050D4  6829               	setf	LCD_DrawText@color^0,c
 15335  0050D6  0E00               	movlw	0
 15336  0050D8  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15337  0050DA  0E00               	movlw	0
 15338  0050DC  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15339  0050DE  ECEB  F00E         	call	_LCD_DrawText	;wreg free
 15340  0050E2  0012               	return		;funcret
 15341  0050E4                     __end_of_Score_draw:
 15342                           	callstack 0
 15343                           
 15344 ;; *************** function _sprintf *****************
 15345 ;; Defined at:
 15346 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
 15347 ;; Parameters:    Size  Location     Type
 15348 ;;  s               2   34[BANK0 ] PTR unsigned char 
 15349 ;;		 -> touchScreenController@s(20), g1(239), 
 15350 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
 15351 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15352 ;; Auto vars:     Size  Location     Type
 15353 ;;  f               6   42[BANK0 ] struct _IO_FILE
 15354 ;;  ap              2   40[BANK0 ] PTR void [1]
 15355 ;;		 -> ?_sprintf(2), 
 15356 ;;  ret             2    0        int 
 15357 ;; Return value:  Size  Location     Type
 15358 ;;                  2   34[BANK0 ] int 
 15359 ;; Registers used:
 15360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15361 ;; Tracked objects:
 15362 ;;		On entry : 0/0
 15363 ;;		On exit  : 0/0
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15366 ;;      Params:         0       6       0       0       0       0       0
 15367 ;;      Locals:         0       8       0       0       0       0       0
 15368 ;;      Temps:          0       0       0       0       0       0       0
 15369 ;;      Totals:         0      14       0       0       0       0       0
 15370 ;;Total ram usage:       14 bytes
 15371 ;; Hardware stack levels used: 1
 15372 ;; Hardware stack levels required when called: 11
 15373 ;; This function calls:
 15374 ;;		_vfprintf
 15375 ;; This function is called by:
 15376 ;;		_Score_draw
 15377 ;;		_touchScreenController
 15378 ;; This function uses a non-reentrant model
 15379 ;;
 15380                           
 15381                           	psect	text57
 15382  005F8E                     __ptext57:
 15383                           	callstack 0
 15384  005F8E                     _sprintf:
 15385                           	callstack 14
 15386  005F8E  0E86               	movlw	low (?_sprintf+4)
 15387  005F90  0100               	movlb	0	; () banked
 15388  005F92  6F88               	movwf	sprintf@ap& (0+255),b
 15389  005F94  0E00               	movlw	high (?_sprintf+4)
 15390  005F96  6F89               	movwf	(sprintf@ap+1)& (0+255),b
 15391  005F98  C082  F08A         	movff	sprintf@s,sprintf@f
 15392  005F9C  C083  F08B         	movff	sprintf@s+1,sprintf@f+1
 15393  005FA0                     
 15394                           ; BSR set to: 0
 15395  005FA0  0E00               	movlw	0
 15396  005FA2  6F8D               	movwf	(sprintf@f+3)& (0+255),b
 15397  005FA4  0E00               	movlw	0
 15398  005FA6  6F8C               	movwf	(sprintf@f+2)& (0+255),b
 15399  005FA8                     
 15400                           ; BSR set to: 0
 15401  005FA8  0E00               	movlw	0
 15402  005FAA  6F8F               	movwf	(sprintf@f+5)& (0+255),b
 15403  005FAC  0E00               	movlw	0
 15404  005FAE  6F8E               	movwf	(sprintf@f+4)& (0+255),b
 15405  005FB0                     
 15406                           ; BSR set to: 0
 15407  005FB0  0E8A               	movlw	low sprintf@f
 15408  005FB2  6F7A               	movwf	vfprintf@fp& (0+255),b
 15409  005FB4  0E00               	movlw	high sprintf@f
 15410  005FB6  6F7B               	movwf	(vfprintf@fp+1)& (0+255),b
 15411  005FB8  C084  F07C         	movff	sprintf@fmt,vfprintf@fmt
 15412  005FBC  C085  F07D         	movff	sprintf@fmt+1,vfprintf@fmt+1
 15413  005FC0  0E88               	movlw	low sprintf@ap
 15414  005FC2  6F7E               	movwf	vfprintf@ap& (0+255),b
 15415  005FC4  0E00               	movlw	high sprintf@ap
 15416  005FC6  6F7F               	movwf	(vfprintf@ap+1)& (0+255),b
 15417  005FC8  EC10  F02F         	call	_vfprintf	;wreg free
 15418  005FCC  0100               	movlb	0	; () banked
 15419  005FCE  518C               	movf	(sprintf@f+2)& (0+255),w,b
 15420  005FD0  2582               	addwf	sprintf@s& (0+255),w,b
 15421  005FD2  6ED9               	movwf	fsr2l,c
 15422  005FD4  518D               	movf	(sprintf@f+3)& (0+255),w,b
 15423  005FD6  2183               	addwfc	(sprintf@s+1)& (0+255),w,b
 15424  005FD8  6EDA               	movwf	fsr2h,c
 15425  005FDA  0E00               	movlw	0
 15426  005FDC  6EDF               	movwf	indf2,c
 15427  005FDE                     
 15428                           ; BSR set to: 0
 15429  005FDE  0012               	return		;funcret
 15430  005FE0                     __end_of_sprintf:
 15431                           	callstack 0
 15432                           
 15433 ;; *************** function _vfprintf *****************
 15434 ;; Defined at:
 15435 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15436 ;; Parameters:    Size  Location     Type
 15437 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
 15438 ;;		 -> sprintf@f(6), 
 15439 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
 15440 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15441 ;;  ap              2   30[BANK0 ] PTR PTR void 
 15442 ;;		 -> sprintf@ap(2), 
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;  cfmt            2   32[BANK0 ] PTR unsigned char 
 15445 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15446 ;; Return value:  Size  Location     Type
 15447 ;;                  2   26[BANK0 ] int 
 15448 ;; Registers used:
 15449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15450 ;; Tracked objects:
 15451 ;;		On entry : 0/0
 15452 ;;		On exit  : 0/0
 15453 ;;		Unchanged: 0/0
 15454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15455 ;;      Params:         0       6       0       0       0       0       0
 15456 ;;      Locals:         0       2       0       0       0       0       0
 15457 ;;      Temps:          0       0       0       0       0       0       0
 15458 ;;      Totals:         0       8       0       0       0       0       0
 15459 ;;Total ram usage:        8 bytes
 15460 ;; Hardware stack levels used: 1
 15461 ;; Hardware stack levels required when called: 10
 15462 ;; This function calls:
 15463 ;;		_vfpfcnvrt
 15464 ;; This function is called by:
 15465 ;;		_sprintf
 15466 ;; This function uses a non-reentrant model
 15467 ;;
 15468                           
 15469                           	psect	text58
 15470  005E20                     __ptext58:
 15471                           	callstack 0
 15472  005E20                     _vfprintf:
 15473                           	callstack 14
 15474  005E20                     
 15475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 15476  005E20  C07C  F080         	movff	vfprintf@fmt,vfprintf@cfmt
 15477  005E24  C07D  F081         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 15478  005E28                     
 15479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 15480  005E28  0E00               	movlw	0
 15481  005E2A  0100               	movlb	0	; () banked
 15482  005E2C  6FDC               	movwf	(_nout+1)& (0+255),b
 15483  005E2E  0E00               	movlw	0
 15484  005E30  6FDB               	movwf	_nout& (0+255),b
 15485                           
 15486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 15487  005E32  EF2E  F02F         	goto	l9265
 15488  005E36                     l9263:
 15489                           
 15490                           ; BSR set to: 0
 15491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 15492  005E36  C07A  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
 15493  005E3A  C07B  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 15494  005E3E  0E80               	movlw	low vfprintf@cfmt
 15495  005E40  6E41               	movwf	vfpfcnvrt@fmt^0,c
 15496  005E42  0E00               	movlw	high vfprintf@cfmt
 15497  005E44  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
 15498  005E46  C07E  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
 15499  005E4A  C07F  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 15500  005E4E  EC10  F01E         	call	_vfpfcnvrt	;wreg free
 15501  005E52  503F               	movf	?_vfpfcnvrt^0,w,c
 15502  005E54  0100               	movlb	0	; () banked
 15503  005E56  27DB               	addwf	_nout& (0+255),f,b
 15504  005E58  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
 15505  005E5A  23DC               	addwfc	(_nout+1)& (0+255),f,b
 15506  005E5C                     l9265:
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 15510  005E5C  C080  FFF6         	movff	vfprintf@cfmt,tblptrl
 15511  005E60  C081  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 15512  005E64                     	if	0	;tblptru may be non-zero
 15513  005E64                     	endif
 15514  005E64                     	if	0	;tblptru may be non-zero
 15515  005E64                     	endif
 15516  005E64  0008               	tblrd		*
 15517  005E66  50F5               	movf	tablat,w,c
 15518  005E68  0900               	iorlw	0
 15519  005E6A  A4D8               	btfss	status,2,c
 15520  005E6C  EF3A  F02F         	goto	u6491
 15521  005E70  EF3C  F02F         	goto	u6490
 15522  005E74                     u6491:
 15523  005E74  EF1B  F02F         	goto	l9263
 15524  005E78                     u6490:
 15525  005E78                     
 15526                           ; BSR set to: 0
 15527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 15528  005E78  C0DB  F07A         	movff	_nout,?_vfprintf
 15529  005E7C  C0DC  F07B         	movff	_nout+1,?_vfprintf+1
 15530  005E80                     
 15531                           ; BSR set to: 0
 15532  005E80  0012               	return		;funcret
 15533  005E82                     __end_of_vfprintf:
 15534                           	callstack 0
 15535                           
 15536 ;; *************** function _vfpfcnvrt *****************
 15537 ;; Defined at:
 15538 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15539 ;; Parameters:    Size  Location     Type
 15540 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
 15541 ;;		 -> sprintf@f(6), 
 15542 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
 15543 ;;		 -> vfprintf@cfmt(2), 
 15544 ;;  ap              2   66[COMRAM] PTR PTR void 
 15545 ;;		 -> sprintf@ap(2), 
 15546 ;; Auto vars:     Size  Location     Type
 15547 ;;  ll              8   18[BANK0 ] long long 
 15548 ;;  llu             8    0        unsigned long long 
 15549 ;;  f               4    0        unsigned long long 
 15550 ;;  vp              3    0        PTR void 
 15551 ;;  ct              3    0        unsigned char [3]
 15552 ;;  cp              3    0        PTR unsigned char 
 15553 ;;  i               2    0        int 
 15554 ;;  done            2    0        int 
 15555 ;;  c               1    0        unsigned char 
 15556 ;; Return value:  Size  Location     Type
 15557 ;;                  2   62[COMRAM] int 
 15558 ;; Registers used:
 15559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15560 ;; Tracked objects:
 15561 ;;		On entry : 0/0
 15562 ;;		On exit  : 0/0
 15563 ;;		Unchanged: 0/0
 15564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15565 ;;      Params:         6       0       0       0       0       0       0
 15566 ;;      Locals:         0       8       0       0       0       0       0
 15567 ;;      Temps:          2       0       0       0       0       0       0
 15568 ;;      Totals:         8       8       0       0       0       0       0
 15569 ;;Total ram usage:       16 bytes
 15570 ;; Hardware stack levels used: 1
 15571 ;; Hardware stack levels required when called: 9
 15572 ;; This function calls:
 15573 ;;		_dtoa
 15574 ;;		_fputc
 15575 ;; This function is called by:
 15576 ;;		_vfprintf
 15577 ;; This function uses a non-reentrant model
 15578 ;;
 15579                           
 15580                           	psect	text59
 15581  003C20                     __ptext59:
 15582                           	callstack 0
 15583  003C20                     _vfpfcnvrt:
 15584                           	callstack 14
 15585  003C20                     
 15586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 15587  003C20  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15588  003C24  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15589  003C28  CFDE FFF6          	movff	postinc2,tblptrl
 15590  003C2C  CFDD FFF7          	movff	postdec2,tblptrh
 15591  003C30                     	if	0	;tblptru may be non-zero
 15592  003C30                     	endif
 15593  003C30                     	if	0	;tblptru may be non-zero
 15594  003C30                     	endif
 15595  003C30  0008               	tblrd		*
 15596  003C32  50F5               	movf	tablat,w,c
 15597  003C34  0A25               	xorlw	37
 15598  003C36  A4D8               	btfss	status,2,c
 15599  003C38  EF20  F01E         	goto	u6151
 15600  003C3C  EF22  F01E         	goto	u6150
 15601  003C40                     u6151:
 15602  003C40  EFCE  F01E         	goto	l8687
 15603  003C44                     u6150:
 15604  003C44                     
 15605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 15606  003C44  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15607  003C48  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15608  003C4C  2ADE               	incf	postinc2,f,c
 15609  003C4E  0E00               	movlw	0
 15610  003C50  22DD               	addwfc	postdec2,f,c
 15611  003C52                     
 15612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 15613  003C52  0E00               	movlw	0
 15614  003C54  6E48               	movwf	(_width+1)^0,c
 15615  003C56  0E00               	movlw	0
 15616  003C58  6E47               	movwf	_width^0,c
 15617  003C5A  C047  F04B         	movff	_width,_flags
 15618  003C5E  C048  F04C         	movff	_width+1,_flags+1
 15619  003C62                     
 15620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 15621  003C62  6849               	setf	_prec^0,c
 15622  003C64  684A               	setf	(_prec+1)^0,c
 15623  003C66                     
 15624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 15625  003C66  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15626  003C6A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15627  003C6E  CFDE FFF6          	movff	postinc2,tblptrl
 15628  003C72  CFDD FFF7          	movff	postdec2,tblptrh
 15629  003C76                     	if	0	;tblptru may be non-zero
 15630  003C76                     	endif
 15631  003C76                     	if	0	;tblptru may be non-zero
 15632  003C76                     	endif
 15633  003C76  0008               	tblrd		*
 15634  003C78  50F5               	movf	tablat,w,c
 15635  003C7A  0A64               	xorlw	100
 15636  003C7C  B4D8               	btfsc	status,2,c
 15637  003C7E  EF43  F01E         	goto	u6161
 15638  003C82  EF45  F01E         	goto	u6160
 15639  003C86                     u6161:
 15640  003C86  EF57  F01E         	goto	l8665
 15641  003C8A                     u6160:
 15642  003C8A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15643  003C8E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15644  003C92  CFDE FFF6          	movff	postinc2,tblptrl
 15645  003C96  CFDD FFF7          	movff	postdec2,tblptrh
 15646  003C9A                     	if	0	;tblptru may be non-zero
 15647  003C9A                     	endif
 15648  003C9A                     	if	0	;tblptru may be non-zero
 15649  003C9A                     	endif
 15650  003C9A  0008               	tblrd		*
 15651  003C9C  50F5               	movf	tablat,w,c
 15652  003C9E  0A69               	xorlw	105
 15653  003CA0  A4D8               	btfss	status,2,c
 15654  003CA2  EF55  F01E         	goto	u6171
 15655  003CA6  EF57  F01E         	goto	u6170
 15656  003CAA                     u6171:
 15657  003CAA  EF98  F01E         	goto	l8671
 15658  003CAE                     u6170:
 15659  003CAE                     l8665:
 15660                           
 15661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 15662  003CAE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15663  003CB2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15664  003CB6  2ADE               	incf	postinc2,f,c
 15665  003CB8  0E00               	movlw	0
 15666  003CBA  22DD               	addwfc	postdec2,f,c
 15667                           
 15668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 15669  003CBC  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15670  003CC0  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15671  003CC4  CFDF F045          	movff	indf2,??_vfpfcnvrt
 15672  003CC8  0E02               	movlw	2
 15673  003CCA  26DE               	addwf	postinc2,f,c
 15674  003CCC  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
 15675  003CD0  0E00               	movlw	0
 15676  003CD2  22DD               	addwfc	postdec2,f,c
 15677  003CD4  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15678  003CD8  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15679  003CDC  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
 15680  003CE0  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
 15681  003CE4  0100               	movlb	0	; () banked
 15682  003CE6  0E00               	movlw	0
 15683  003CE8  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 15684  003CEA  0EFF               	movlw	-1
 15685  003CEC  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 15686  003CEE  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 15687  003CF0  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 15688  003CF2  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 15689  003CF4  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 15690  003CF6  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 15691  003CF8                     
 15692                           ; BSR set to: 0
 15693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 15694  003CF8  C03F  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
 15695  003CFC  C040  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 15696  003D00  C072  F02F         	movff	vfpfcnvrt@ll,dtoa@d
 15697  003D04  C073  F030         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 15698  003D08  C074  F031         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 15699  003D0C  C075  F032         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 15700  003D10  C076  F033         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 15701  003D14  C077  F034         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 15702  003D18  C078  F035         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 15703  003D1C  C079  F036         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 15704  003D20  EC21  F018         	call	_dtoa	;wreg free
 15705  003D24  C02D  F03F         	movff	?_dtoa,?_vfpfcnvrt
 15706  003D28  C02E  F040         	movff	?_dtoa+1,?_vfpfcnvrt+1
 15707  003D2C  EFE9  F01E         	goto	l1552
 15708  003D30                     l8671:
 15709                           
 15710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 15711  003D30  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15712  003D34  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15713  003D38  CFDE FFF6          	movff	postinc2,tblptrl
 15714  003D3C  CFDD FFF7          	movff	postdec2,tblptrh
 15715  003D40                     	if	0	;tblptru may be non-zero
 15716  003D40                     	endif
 15717  003D40                     	if	0	;tblptru may be non-zero
 15718  003D40                     	endif
 15719  003D40  0008               	tblrd		*
 15720  003D42  50F5               	movf	tablat,w,c
 15721  003D44  0A25               	xorlw	37
 15722  003D46  A4D8               	btfss	status,2,c
 15723  003D48  EFA8  F01E         	goto	u6181
 15724  003D4C  EFAA  F01E         	goto	u6180
 15725  003D50                     u6181:
 15726  003D50  EFC1  F01E         	goto	l8681
 15727  003D54                     u6180:
 15728  003D54                     
 15729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 15730  003D54  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15731  003D58  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15732  003D5C  2ADE               	incf	postinc2,f,c
 15733  003D5E  0E00               	movlw	0
 15734  003D60  22DD               	addwfc	postdec2,f,c
 15735  003D62                     
 15736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 15737  003D62  0E00               	movlw	0
 15738  003D64  6E13               	movwf	(fputc@c+1)^0,c
 15739  003D66  0E25               	movlw	37
 15740  003D68  6E12               	movwf	fputc@c^0,c
 15741  003D6A  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 15742  003D6E  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15743  003D72  EC72  F028         	call	_fputc	;wreg free
 15744  003D76                     l8677:
 15745                           
 15746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 15747  003D76  0E00               	movlw	0
 15748  003D78  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 15749  003D7A  0E01               	movlw	1
 15750  003D7C  6E3F               	movwf	?_vfpfcnvrt^0,c
 15751  003D7E  EFE9  F01E         	goto	l1552
 15752  003D82                     l8681:
 15753                           
 15754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 15755  003D82  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15756  003D86  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15757  003D8A  2ADE               	incf	postinc2,f,c
 15758  003D8C  0E00               	movlw	0
 15759  003D8E  22DD               	addwfc	postdec2,f,c
 15760  003D90                     
 15761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 15762  003D90  0E00               	movlw	0
 15763  003D92  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 15764  003D94  0E00               	movlw	0
 15765  003D96  6E3F               	movwf	?_vfpfcnvrt^0,c
 15766  003D98  EFE9  F01E         	goto	l1552
 15767  003D9C                     l8687:
 15768                           
 15769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 15770  003D9C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15771  003DA0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15772  003DA4  CFDE FFF6          	movff	postinc2,tblptrl
 15773  003DA8  CFDD FFF7          	movff	postdec2,tblptrh
 15774  003DAC                     	if	0	;tblptru may be non-zero
 15775  003DAC                     	endif
 15776  003DAC                     	if	0	;tblptru may be non-zero
 15777  003DAC                     	endif
 15778  003DAC  0008               	tblrd		*
 15779  003DAE  50F5               	movf	tablat,w,c
 15780  003DB0  6E12               	movwf	fputc@c^0,c
 15781  003DB2  6A13               	clrf	(fputc@c+1)^0,c
 15782  003DB4  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 15783  003DB8  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15784  003DBC  EC72  F028         	call	_fputc	;wreg free
 15785  003DC0                     
 15786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 15787  003DC0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15788  003DC4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15789  003DC8  2ADE               	incf	postinc2,f,c
 15790  003DCA  0E00               	movlw	0
 15791  003DCC  22DD               	addwfc	postdec2,f,c
 15792  003DCE  EFBB  F01E         	goto	l8677
 15793  003DD2                     l1552:
 15794  003DD2  0012               	return		;funcret
 15795  003DD4                     __end_of_vfpfcnvrt:
 15796                           	callstack 0
 15797                           
 15798 ;; *************** function _dtoa *****************
 15799 ;; Defined at:
 15800 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15801 ;; Parameters:    Size  Location     Type
 15802 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
 15803 ;;		 -> sprintf@f(6), 
 15804 ;;  d               8   46[COMRAM] long long 
 15805 ;; Auto vars:     Size  Location     Type
 15806 ;;  n               8    8[BANK0 ] long long 
 15807 ;;  i               2   16[BANK0 ] int 
 15808 ;;  s               2    6[BANK0 ] int 
 15809 ;;  w               2    4[BANK0 ] int 
 15810 ;;  p               2    2[BANK0 ] int 
 15811 ;; Return value:  Size  Location     Type
 15812 ;;                  2   44[COMRAM] int 
 15813 ;; Registers used:
 15814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15815 ;; Tracked objects:
 15816 ;;		On entry : 0/0
 15817 ;;		On exit  : 0/0
 15818 ;;		Unchanged: 0/0
 15819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15820 ;;      Params:        10       0       0       0       0       0       0
 15821 ;;      Locals:         0      18       0       0       0       0       0
 15822 ;;      Temps:          8       0       0       0       0       0       0
 15823 ;;      Totals:        18      18       0       0       0       0       0
 15824 ;;Total ram usage:       36 bytes
 15825 ;; Hardware stack levels used: 1
 15826 ;; Hardware stack levels required when called: 8
 15827 ;; This function calls:
 15828 ;;		___aodiv
 15829 ;;		___aomod
 15830 ;;		_abs
 15831 ;;		_pad
 15832 ;; This function is called by:
 15833 ;;		_vfpfcnvrt
 15834 ;; This function uses a non-reentrant model
 15835 ;;
 15836                           
 15837                           	psect	text60
 15838  003042                     __ptext60:
 15839                           	callstack 0
 15840  003042                     _dtoa:
 15841                           	callstack 14
 15842  003042                     
 15843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 15844  003042  C02F  F068         	movff	dtoa@d,dtoa@n
 15845  003046  C030  F069         	movff	dtoa@d+1,dtoa@n+1
 15846  00304A  C031  F06A         	movff	dtoa@d+2,dtoa@n+2
 15847  00304E  C032  F06B         	movff	dtoa@d+3,dtoa@n+3
 15848  003052  C033  F06C         	movff	dtoa@d+4,dtoa@n+4
 15849  003056  C034  F06D         	movff	dtoa@d+5,dtoa@n+5
 15850  00305A  C035  F06E         	movff	dtoa@d+6,dtoa@n+6
 15851  00305E  C036  F06F         	movff	dtoa@d+7,dtoa@n+7
 15852  003062                     
 15853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 15854  003062  0100               	movlb	0	; () banked
 15855  003064  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
 15856  003066  EF37  F018         	goto	u5671
 15857  00306A  EF3A  F018         	goto	u5670
 15858  00306E                     u5671:
 15859  00306E  0E01               	movlw	1
 15860  003070  EF3B  F018         	goto	u5680
 15861  003074                     u5670:
 15862  003074  0E00               	movlw	0
 15863  003076                     u5680:
 15864  003076  6F66               	movwf	dtoa@s& (0+255),b
 15865  003078  6B67               	clrf	(dtoa@s+1)& (0+255),b
 15866                           
 15867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 15868  00307A  5166               	movf	dtoa@s& (0+255),w,b
 15869  00307C  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 15870  00307E  B4D8               	btfsc	status,2,c
 15871  003080  EF44  F018         	goto	u5691
 15872  003084  EF46  F018         	goto	u5690
 15873  003088                     u5691:
 15874  003088  EF56  F018         	goto	l8037
 15875  00308C                     u5690:
 15876  00308C                     
 15877                           ; BSR set to: 0
 15878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 15879  00308C  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
 15880  00308E  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
 15881  003090  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
 15882  003092  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
 15883  003094  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
 15884  003096  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
 15885  003098  1F69               	comf	(dtoa@n+1)& (0+255),f,b
 15886  00309A  6D68               	negf	dtoa@n& (0+255),b
 15887  00309C  0E00               	movlw	0
 15888  00309E  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
 15889  0030A0  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
 15890  0030A2  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
 15891  0030A4  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
 15892  0030A6  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
 15893  0030A8  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
 15894  0030AA  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
 15895  0030AC                     l8037:
 15896                           
 15897                           ; BSR set to: 0
 15898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 15899  0030AC  BE4A               	btfsc	(_prec+1)^0,7,c
 15900  0030AE  EF5B  F018         	goto	u5701
 15901  0030B2  EF5D  F018         	goto	u5700
 15902  0030B6                     u5701:
 15903  0030B6  EF5E  F018         	goto	l8041
 15904  0030BA                     u5700:
 15905  0030BA                     
 15906                           ; BSR set to: 0
 15907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 15908  0030BA  924B               	bcf	_flags^0,1,c
 15909  0030BC                     l8041:
 15910                           
 15911                           ; BSR set to: 0
 15912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 15913  0030BC  BE4A               	btfsc	(_prec+1)^0,7,c
 15914  0030BE  EF6B  F018         	goto	u5710
 15915  0030C2  504A               	movf	(_prec+1)^0,w,c
 15916  0030C4  E106               	bnz	u5711
 15917  0030C6  0449               	decf	_prec^0,w,c
 15918  0030C8  B0D8               	btfsc	status,0,c
 15919  0030CA  EF69  F018         	goto	u5711
 15920  0030CE  EF6B  F018         	goto	u5710
 15921  0030D2                     u5711:
 15922  0030D2  EF71  F018         	goto	l1525
 15923  0030D6                     u5710:
 15924  0030D6                     
 15925                           ; BSR set to: 0
 15926  0030D6  0E00               	movlw	0
 15927  0030D8  6F63               	movwf	(dtoa@p+1)& (0+255),b
 15928  0030DA  0E01               	movlw	1
 15929  0030DC  6F62               	movwf	dtoa@p& (0+255),b
 15930  0030DE  EF75  F018         	goto	l1527
 15931  0030E2                     l1525:
 15932                           
 15933                           ; BSR set to: 0
 15934  0030E2  C049  F062         	movff	_prec,dtoa@p
 15935  0030E6  C04A  F063         	movff	_prec+1,dtoa@p+1
 15936  0030EA                     l1527:
 15937                           
 15938                           ; BSR set to: 0
 15939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 15940  0030EA  C047  F064         	movff	_width,dtoa@w
 15941  0030EE  C048  F065         	movff	_width+1,dtoa@w+1
 15942  0030F2                     
 15943                           ; BSR set to: 0
 15944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 15945  0030F2  5166               	movf	dtoa@s& (0+255),w,b
 15946  0030F4  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 15947  0030F6  A4D8               	btfss	status,2,c
 15948  0030F8  EF80  F018         	goto	u5721
 15949  0030FC  EF82  F018         	goto	u5720
 15950  003100                     u5721:
 15951  003100  EF89  F018         	goto	l8049
 15952  003104                     u5720:
 15953  003104                     
 15954                           ; BSR set to: 0
 15955  003104  A44B               	btfss	_flags^0,2,c
 15956  003106  EF87  F018         	goto	u5731
 15957  00310A  EF89  F018         	goto	u5730
 15958  00310E                     u5731:
 15959  00310E  EF8C  F018         	goto	l8051
 15960  003112                     u5730:
 15961  003112                     l8049:
 15962                           
 15963                           ; BSR set to: 0
 15964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 15965  003112  0764               	decf	dtoa@w& (0+255),f,b
 15966  003114  A0D8               	btfss	status,0,c
 15967  003116  0765               	decf	(dtoa@w+1)& (0+255),f,b
 15968  003118                     l8051:
 15969                           
 15970                           ; BSR set to: 0
 15971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 15972  003118  0E00               	movlw	0
 15973  00311A  6F71               	movwf	(dtoa@i+1)& (0+255),b
 15974  00311C  0E1F               	movlw	31
 15975  00311E  6F70               	movwf	dtoa@i& (0+255),b
 15976  003120                     
 15977                           ; BSR set to: 0
 15978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 15979  003120  0E00               	movlw	0
 15980  003122  6FFF               	movwf	(_dbuf+31)& (0+255),b
 15981                           
 15982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15983  003124  EF11  F019         	goto	l8065
 15984  003128                     l8055:
 15985                           
 15986                           ; BSR set to: 0
 15987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 15988  003128  0770               	decf	dtoa@i& (0+255),f,b
 15989  00312A  A0D8               	btfss	status,0,c
 15990  00312C  0771               	decf	(dtoa@i+1)& (0+255),f,b
 15991  00312E                     
 15992                           ; BSR set to: 0
 15993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 15994  00312E  0EE0               	movlw	low _dbuf
 15995  003130  2570               	addwf	dtoa@i& (0+255),w,b
 15996  003132  6ED9               	movwf	fsr2l,c
 15997  003134  0E00               	movlw	high _dbuf
 15998  003136  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 15999  003138  6EDA               	movwf	fsr2h,c
 16000  00313A  C068  F012         	movff	dtoa@n,___aomod@dividend
 16001  00313E  C069  F013         	movff	dtoa@n+1,___aomod@dividend+1
 16002  003142  C06A  F014         	movff	dtoa@n+2,___aomod@dividend+2
 16003  003146  C06B  F015         	movff	dtoa@n+3,___aomod@dividend+3
 16004  00314A  C06C  F016         	movff	dtoa@n+4,___aomod@dividend+4
 16005  00314E  C06D  F017         	movff	dtoa@n+5,___aomod@dividend+5
 16006  003152  C06E  F018         	movff	dtoa@n+6,___aomod@dividend+6
 16007  003156  C06F  F019         	movff	dtoa@n+7,___aomod@dividend+7
 16008  00315A  0E0A               	movlw	10
 16009  00315C  6E1A               	movwf	___aomod@divisor^0,c
 16010  00315E  0E00               	movlw	0
 16011  003160  6E1B               	movwf	(___aomod@divisor+1)^0,c
 16012  003162  0E00               	movlw	0
 16013  003164  6E1C               	movwf	(___aomod@divisor+2)^0,c
 16014  003166  0E00               	movlw	0
 16015  003168  6E1D               	movwf	(___aomod@divisor+3)^0,c
 16016  00316A  0E00               	movlw	0
 16017  00316C  6E1E               	movwf	(___aomod@divisor+4)^0,c
 16018  00316E  0E00               	movlw	0
 16019  003170  6E1F               	movwf	(___aomod@divisor+5)^0,c
 16020  003172  0E00               	movlw	0
 16021  003174  6E20               	movwf	(___aomod@divisor+6)^0,c
 16022  003176  0E00               	movlw	0
 16023  003178  6E21               	movwf	(___aomod@divisor+7)^0,c
 16024  00317A  ECAE  F01F         	call	___aomod	;wreg free
 16025  00317E  C012  F037         	movff	?___aomod,??_dtoa
 16026  003182  C013  F038         	movff	?___aomod+1,??_dtoa+1
 16027  003186  C014  F039         	movff	?___aomod+2,??_dtoa+2
 16028  00318A  C015  F03A         	movff	?___aomod+3,??_dtoa+3
 16029  00318E  C016  F03B         	movff	?___aomod+4,??_dtoa+4
 16030  003192  C017  F03C         	movff	?___aomod+5,??_dtoa+5
 16031  003196  C018  F03D         	movff	?___aomod+6,??_dtoa+6
 16032  00319A  C019  F03E         	movff	?___aomod+7,??_dtoa+7
 16033  00319E  C037  F024         	movff	??_dtoa,abs@a
 16034  0031A2  C039  F025         	movff	??_dtoa+2,abs@a+1
 16035  0031A6  EC83  F030         	call	_abs	;wreg free
 16036  0031AA  5024               	movf	?_abs^0,w,c
 16037  0031AC  0F30               	addlw	48
 16038  0031AE  6EDF               	movwf	indf2,c
 16039  0031B0                     
 16040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 16041  0031B0  0100               	movlb	0	; () banked
 16042  0031B2  0762               	decf	dtoa@p& (0+255),f,b
 16043  0031B4  A0D8               	btfss	status,0,c
 16044  0031B6  0763               	decf	(dtoa@p+1)& (0+255),f,b
 16045  0031B8                     
 16046                           ; BSR set to: 0
 16047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 16048  0031B8  0764               	decf	dtoa@w& (0+255),f,b
 16049  0031BA  A0D8               	btfss	status,0,c
 16050  0031BC  0765               	decf	(dtoa@w+1)& (0+255),f,b
 16051  0031BE                     
 16052                           ; BSR set to: 0
 16053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 16054  0031BE  C068  F012         	movff	dtoa@n,___aodiv@dividend
 16055  0031C2  C069  F013         	movff	dtoa@n+1,___aodiv@dividend+1
 16056  0031C6  C06A  F014         	movff	dtoa@n+2,___aodiv@dividend+2
 16057  0031CA  C06B  F015         	movff	dtoa@n+3,___aodiv@dividend+3
 16058  0031CE  C06C  F016         	movff	dtoa@n+4,___aodiv@dividend+4
 16059  0031D2  C06D  F017         	movff	dtoa@n+5,___aodiv@dividend+5
 16060  0031D6  C06E  F018         	movff	dtoa@n+6,___aodiv@dividend+6
 16061  0031DA  C06F  F019         	movff	dtoa@n+7,___aodiv@dividend+7
 16062  0031DE  0E0A               	movlw	10
 16063  0031E0  6E1A               	movwf	___aodiv@divisor^0,c
 16064  0031E2  0E00               	movlw	0
 16065  0031E4  6E1B               	movwf	(___aodiv@divisor+1)^0,c
 16066  0031E6  0E00               	movlw	0
 16067  0031E8  6E1C               	movwf	(___aodiv@divisor+2)^0,c
 16068  0031EA  0E00               	movlw	0
 16069  0031EC  6E1D               	movwf	(___aodiv@divisor+3)^0,c
 16070  0031EE  0E00               	movlw	0
 16071  0031F0  6E1E               	movwf	(___aodiv@divisor+4)^0,c
 16072  0031F2  0E00               	movlw	0
 16073  0031F4  6E1F               	movwf	(___aodiv@divisor+5)^0,c
 16074  0031F6  0E00               	movlw	0
 16075  0031F8  6E20               	movwf	(___aodiv@divisor+6)^0,c
 16076  0031FA  0E00               	movlw	0
 16077  0031FC  6E21               	movwf	(___aodiv@divisor+7)^0,c
 16078  0031FE  ECEA  F01E         	call	___aodiv	;wreg free
 16079  003202  C012  F068         	movff	?___aodiv,dtoa@n
 16080  003206  C013  F069         	movff	?___aodiv+1,dtoa@n+1
 16081  00320A  C014  F06A         	movff	?___aodiv+2,dtoa@n+2
 16082  00320E  C015  F06B         	movff	?___aodiv+3,dtoa@n+3
 16083  003212  C016  F06C         	movff	?___aodiv+4,dtoa@n+4
 16084  003216  C017  F06D         	movff	?___aodiv+5,dtoa@n+5
 16085  00321A  C018  F06E         	movff	?___aodiv+6,dtoa@n+6
 16086  00321E  C019  F06F         	movff	?___aodiv+7,dtoa@n+7
 16087  003222                     l8065:
 16088                           
 16089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16090  003222  0100               	movlb	0	; () banked
 16091  003224  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
 16092  003226  EF1D  F019         	goto	u5741
 16093  00322A  5171               	movf	(dtoa@i+1)& (0+255),w,b
 16094  00322C  E108               	bnz	u5740
 16095  00322E  0570               	decf	dtoa@i& (0+255),w,b
 16096  003230  A0D8               	btfss	status,0,c
 16097  003232  EF1D  F019         	goto	u5741
 16098  003236  EF1F  F019         	goto	u5740
 16099  00323A                     u5741:
 16100  00323A  EF4F  F019         	goto	l8075
 16101  00323E                     u5740:
 16102  00323E                     
 16103                           ; BSR set to: 0
 16104  00323E  5168               	movf	dtoa@n& (0+255),w,b
 16105  003240  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
 16106  003242  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
 16107  003244  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
 16108  003246  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
 16109  003248  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
 16110  00324A  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
 16111  00324C  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
 16112  00324E  A4D8               	btfss	status,2,c
 16113  003250  EF2C  F019         	goto	u5751
 16114  003254  EF2E  F019         	goto	u5750
 16115  003258                     u5751:
 16116  003258  EF94  F018         	goto	l8055
 16117  00325C                     u5750:
 16118  00325C                     
 16119                           ; BSR set to: 0
 16120  00325C  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
 16121  00325E  EF3B  F019         	goto	u5760
 16122  003262  5163               	movf	(dtoa@p+1)& (0+255),w,b
 16123  003264  E106               	bnz	u5761
 16124  003266  0562               	decf	dtoa@p& (0+255),w,b
 16125  003268  B0D8               	btfsc	status,0,c
 16126  00326A  EF39  F019         	goto	u5761
 16127  00326E  EF3B  F019         	goto	u5760
 16128  003272                     u5761:
 16129  003272  EF94  F018         	goto	l8055
 16130  003276                     u5760:
 16131  003276                     
 16132                           ; BSR set to: 0
 16133  003276  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
 16134  003278  EF46  F019         	goto	u5771
 16135  00327C  5165               	movf	(dtoa@w+1)& (0+255),w,b
 16136  00327E  E108               	bnz	u5770
 16137  003280  0564               	decf	dtoa@w& (0+255),w,b
 16138  003282  A0D8               	btfss	status,0,c
 16139  003284  EF46  F019         	goto	u5771
 16140  003288  EF48  F019         	goto	u5770
 16141  00328C                     u5771:
 16142  00328C  EF4F  F019         	goto	l8075
 16143  003290                     u5770:
 16144  003290                     
 16145                           ; BSR set to: 0
 16146  003290  B24B               	btfsc	_flags^0,1,c
 16147  003292  EF4D  F019         	goto	u5781
 16148  003296  EF4F  F019         	goto	u5780
 16149  00329A                     u5781:
 16150  00329A  EF94  F018         	goto	l8055
 16151  00329E                     u5780:
 16152  00329E                     l8075:
 16153                           
 16154                           ; BSR set to: 0
 16155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 16156  00329E  5166               	movf	dtoa@s& (0+255),w,b
 16157  0032A0  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16158  0032A2  A4D8               	btfss	status,2,c
 16159  0032A4  EF56  F019         	goto	u5791
 16160  0032A8  EF58  F019         	goto	u5790
 16161  0032AC                     u5791:
 16162  0032AC  EF5F  F019         	goto	l8079
 16163  0032B0                     u5790:
 16164  0032B0                     
 16165                           ; BSR set to: 0
 16166  0032B0  A44B               	btfss	_flags^0,2,c
 16167  0032B2  EF5D  F019         	goto	u5801
 16168  0032B6  EF5F  F019         	goto	u5800
 16169  0032BA                     u5801:
 16170  0032BA  EF7D  F019         	goto	l8089
 16171  0032BE                     u5800:
 16172  0032BE                     l8079:
 16173                           
 16174                           ; BSR set to: 0
 16175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 16176  0032BE  0770               	decf	dtoa@i& (0+255),f,b
 16177  0032C0  A0D8               	btfss	status,0,c
 16178  0032C2  0771               	decf	(dtoa@i+1)& (0+255),f,b
 16179  0032C4                     
 16180                           ; BSR set to: 0
 16181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 16182  0032C4  5166               	movf	dtoa@s& (0+255),w,b
 16183  0032C6  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16184  0032C8  A4D8               	btfss	status,2,c
 16185  0032CA  EF69  F019         	goto	u5811
 16186  0032CE  EF6B  F019         	goto	u5810
 16187  0032D2                     u5811:
 16188  0032D2  EF71  F019         	goto	l8085
 16189  0032D6                     u5810:
 16190  0032D6                     
 16191                           ; BSR set to: 0
 16192  0032D6  0E00               	movlw	0
 16193  0032D8  6F61               	movwf	(_dtoa$4924+1)& (0+255),b
 16194  0032DA  0E2B               	movlw	43
 16195  0032DC  6F60               	movwf	_dtoa$4924& (0+255),b
 16196  0032DE  EF75  F019         	goto	l8087
 16197  0032E2                     l8085:
 16198                           
 16199                           ; BSR set to: 0
 16200  0032E2  0E00               	movlw	0
 16201  0032E4  6F61               	movwf	(_dtoa$4924+1)& (0+255),b
 16202  0032E6  0E2D               	movlw	45
 16203  0032E8  6F60               	movwf	_dtoa$4924& (0+255),b
 16204  0032EA                     l8087:
 16205                           
 16206                           ; BSR set to: 0
 16207  0032EA  0EE0               	movlw	low _dbuf
 16208  0032EC  2570               	addwf	dtoa@i& (0+255),w,b
 16209  0032EE  6ED9               	movwf	fsr2l,c
 16210  0032F0  0E00               	movlw	high _dbuf
 16211  0032F2  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16212  0032F4  6EDA               	movwf	fsr2h,c
 16213  0032F6  C060  FFDF         	movff	_dtoa$4924,indf2
 16214  0032FA                     l8089:
 16215                           
 16216                           ; BSR set to: 0
 16217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 16218  0032FA  C02D  F022         	movff	dtoa@fp,pad@fp
 16219  0032FE  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
 16220  003302  0EE0               	movlw	low _dbuf
 16221  003304  2570               	addwf	dtoa@i& (0+255),w,b
 16222  003306  6E24               	movwf	pad@buf^0,c
 16223  003308  0E00               	movlw	high _dbuf
 16224  00330A  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16225  00330C  6E25               	movwf	(pad@buf+1)^0,c
 16226  00330E  C064  F026         	movff	dtoa@w,pad@p
 16227  003312  C065  F027         	movff	dtoa@w+1,pad@p+1
 16228  003316  EC39  F029         	call	_pad	;wreg free
 16229  00331A  C022  F02D         	movff	?_pad,?_dtoa
 16230  00331E  C023  F02E         	movff	?_pad+1,?_dtoa+1
 16231  003322  0012               	return		;funcret
 16232  003324                     __end_of_dtoa:
 16233                           	callstack 0
 16234                           
 16235 ;; *************** function _pad *****************
 16236 ;; Defined at:
 16237 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16238 ;; Parameters:    Size  Location     Type
 16239 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 16240 ;;		 -> sprintf@f(6), 
 16241 ;;  buf             2   35[COMRAM] PTR unsigned char 
 16242 ;;		 -> dbuf(32), 
 16243 ;;  p               2   37[COMRAM] int 
 16244 ;; Auto vars:     Size  Location     Type
 16245 ;;  w               2   42[COMRAM] int 
 16246 ;;  i               2   40[COMRAM] int 
 16247 ;; Return value:  Size  Location     Type
 16248 ;;                  2   33[COMRAM] int 
 16249 ;; Registers used:
 16250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16251 ;; Tracked objects:
 16252 ;;		On entry : 0/0
 16253 ;;		On exit  : 0/0
 16254 ;;		Unchanged: 0/0
 16255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16256 ;;      Params:         6       0       0       0       0       0       0
 16257 ;;      Locals:         4       0       0       0       0       0       0
 16258 ;;      Temps:          1       0       0       0       0       0       0
 16259 ;;      Totals:        11       0       0       0       0       0       0
 16260 ;;Total ram usage:       11 bytes
 16261 ;; Hardware stack levels used: 1
 16262 ;; Hardware stack levels required when called: 7
 16263 ;; This function calls:
 16264 ;;		_fputc
 16265 ;;		_fputs
 16266 ;;		_strlen
 16267 ;; This function is called by:
 16268 ;;		_dtoa
 16269 ;; This function uses a non-reentrant model
 16270 ;;
 16271                           
 16272                           	psect	text61
 16273  005272                     __ptext61:
 16274                           	callstack 0
 16275  005272                     _pad:
 16276                           	callstack 14
 16277  005272                     
 16278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 16279  005272  A04B               	btfss	_flags^0,0,c
 16280  005274  EF3E  F029         	goto	u5621
 16281  005278  EF40  F029         	goto	u5620
 16282  00527C                     u5621:
 16283  00527C  EF4A  F029         	goto	l8009
 16284  005280                     u5620:
 16285  005280                     
 16286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 16287  005280  C024  F01B         	movff	pad@buf,fputs@s
 16288  005284  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16289  005288  C022  F01D         	movff	pad@fp,fputs@fp
 16290  00528C  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16291  005290  EC61  F030         	call	_fputs	;wreg free
 16292  005294                     l8009:
 16293                           
 16294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 16295  005294  BE27               	btfsc	(pad@p+1)^0,7,c
 16296  005296  EF4F  F029         	goto	u5631
 16297  00529A  EF51  F029         	goto	u5630
 16298  00529E                     u5631:
 16299  00529E  EF57  F029         	goto	l8013
 16300  0052A2                     u5630:
 16301  0052A2  C026  F02B         	movff	pad@p,pad@w
 16302  0052A6  C027  F02C         	movff	pad@p+1,pad@w+1
 16303  0052AA  EF5B  F029         	goto	l1514
 16304  0052AE                     l8013:
 16305  0052AE  0E00               	movlw	0
 16306  0052B0  6E2C               	movwf	(pad@w+1)^0,c
 16307  0052B2  0E00               	movlw	0
 16308  0052B4  6E2B               	movwf	pad@w^0,c
 16309  0052B6                     l1514:
 16310                           
 16311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 16312  0052B6  0E00               	movlw	0
 16313  0052B8  6E2A               	movwf	(pad@i+1)^0,c
 16314  0052BA  0E00               	movlw	0
 16315  0052BC  6E29               	movwf	pad@i^0,c
 16316                           
 16317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16318  0052BE  EF6D  F029         	goto	l8019
 16319  0052C2                     l8015:
 16320                           
 16321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 16322  0052C2  0E00               	movlw	0
 16323  0052C4  6E13               	movwf	(fputc@c+1)^0,c
 16324  0052C6  0E20               	movlw	32
 16325  0052C8  6E12               	movwf	fputc@c^0,c
 16326  0052CA  C022  F014         	movff	pad@fp,fputc@fp
 16327  0052CE  C023  F015         	movff	pad@fp+1,fputc@fp+1
 16328  0052D2  EC72  F028         	call	_fputc	;wreg free
 16329  0052D6                     
 16330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 16331  0052D6  4A29               	infsnz	pad@i^0,f,c
 16332  0052D8  2A2A               	incf	(pad@i+1)^0,f,c
 16333  0052DA                     l8019:
 16334                           
 16335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16336  0052DA  502B               	movf	pad@w^0,w,c
 16337  0052DC  5C29               	subwf	pad@i^0,w,c
 16338  0052DE  502A               	movf	(pad@i+1)^0,w,c
 16339  0052E0  0A80               	xorlw	128
 16340  0052E2  6E28               	movwf	??_pad^0,c
 16341  0052E4  502C               	movf	(pad@w+1)^0,w,c
 16342  0052E6  0A80               	xorlw	128
 16343  0052E8  5828               	subwfb	??_pad^0,w,c
 16344  0052EA  A0D8               	btfss	status,0,c
 16345  0052EC  EF7A  F029         	goto	u5641
 16346  0052F0  EF7C  F029         	goto	u5640
 16347  0052F4                     u5641:
 16348  0052F4  EF61  F029         	goto	l8015
 16349  0052F8                     u5640:
 16350  0052F8                     
 16351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 16352  0052F8  B04B               	btfsc	_flags^0,0,c
 16353  0052FA  EF81  F029         	goto	u5651
 16354  0052FE  EF83  F029         	goto	u5650
 16355  005302                     u5651:
 16356  005302  EF8D  F029         	goto	l8023
 16357  005306                     u5650:
 16358  005306                     
 16359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 16360  005306  C024  F01B         	movff	pad@buf,fputs@s
 16361  00530A  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16362  00530E  C022  F01D         	movff	pad@fp,fputs@fp
 16363  005312  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16364  005316  EC61  F030         	call	_fputs	;wreg free
 16365  00531A                     l8023:
 16366                           
 16367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 16368  00531A  C024  F012         	movff	pad@buf,strlen@s
 16369  00531E  C025  F013         	movff	pad@buf+1,strlen@s+1
 16370  005322  EC18  F030         	call	_strlen	;wreg free
 16371  005326  502B               	movf	pad@w^0,w,c
 16372  005328  2412               	addwf	?_strlen^0,w,c
 16373  00532A  6E22               	movwf	?_pad^0,c
 16374  00532C  502C               	movf	(pad@w+1)^0,w,c
 16375  00532E  2013               	addwfc	(?_strlen+1)^0,w,c
 16376  005330  6E23               	movwf	(?_pad+1)^0,c
 16377  005332  0012               	return		;funcret
 16378  005334                     __end_of_pad:
 16379                           	callstack 0
 16380                           
 16381 ;; *************** function _fputs *****************
 16382 ;; Defined at:
 16383 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 16384 ;; Parameters:    Size  Location     Type
 16385 ;;  s               2   26[COMRAM] PTR const unsigned char 
 16386 ;;		 -> dbuf(32), 
 16387 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 16388 ;;		 -> sprintf@f(6), 
 16389 ;; Auto vars:     Size  Location     Type
 16390 ;;  i               2   31[COMRAM] int 
 16391 ;;  c               1   30[COMRAM] unsigned char 
 16392 ;; Return value:  Size  Location     Type
 16393 ;;                  2   26[COMRAM] int 
 16394 ;; Registers used:
 16395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16396 ;; Tracked objects:
 16397 ;;		On entry : 0/0
 16398 ;;		On exit  : 0/0
 16399 ;;		Unchanged: 0/0
 16400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16401 ;;      Params:         4       0       0       0       0       0       0
 16402 ;;      Locals:         3       0       0       0       0       0       0
 16403 ;;      Temps:          0       0       0       0       0       0       0
 16404 ;;      Totals:         7       0       0       0       0       0       0
 16405 ;;Total ram usage:        7 bytes
 16406 ;; Hardware stack levels used: 1
 16407 ;; Hardware stack levels required when called: 6
 16408 ;; This function calls:
 16409 ;;		_fputc
 16410 ;; This function is called by:
 16411 ;;		_pad
 16412 ;; This function uses a non-reentrant model
 16413 ;;
 16414                           
 16415                           	psect	text62
 16416  0060C2                     __ptext62:
 16417                           	callstack 0
 16418  0060C2                     _fputs:
 16419                           	callstack 14
 16420  0060C2  0E00               	movlw	0
 16421  0060C4  6E21               	movwf	(fputs@i+1)^0,c
 16422  0060C6  0E00               	movlw	0
 16423  0060C8  6E20               	movwf	fputs@i^0,c
 16424  0060CA  EF72  F030         	goto	l7923
 16425  0060CE                     l7919:
 16426  0060CE  C01F  F012         	movff	fputs@c,fputc@c
 16427  0060D2  6A13               	clrf	(fputc@c+1)^0,c
 16428  0060D4  C01D  F014         	movff	fputs@fp,fputc@fp
 16429  0060D8  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
 16430  0060DC  EC72  F028         	call	_fputc	;wreg free
 16431  0060E0  4A20               	infsnz	fputs@i^0,f,c
 16432  0060E2  2A21               	incf	(fputs@i+1)^0,f,c
 16433  0060E4                     l7923:
 16434  0060E4  5020               	movf	fputs@i^0,w,c
 16435  0060E6  241B               	addwf	fputs@s^0,w,c
 16436  0060E8  6ED9               	movwf	fsr2l,c
 16437  0060EA  5021               	movf	(fputs@i+1)^0,w,c
 16438  0060EC  201C               	addwfc	(fputs@s+1)^0,w,c
 16439  0060EE  6EDA               	movwf	fsr2h,c
 16440  0060F0  50DF               	movf	indf2,w,c
 16441  0060F2  6E1F               	movwf	fputs@c^0,c
 16442  0060F4  501F               	movf	fputs@c^0,w,c
 16443  0060F6  A4D8               	btfss	status,2,c
 16444  0060F8  EF80  F030         	goto	u5481
 16445  0060FC  EF82  F030         	goto	u5480
 16446  006100                     u5481:
 16447  006100  EF67  F030         	goto	l7919
 16448  006104                     u5480:
 16449  006104  0012               	return		;funcret
 16450  006106                     __end_of_fputs:
 16451                           	callstack 0
 16452                           
 16453 ;; *************** function _fputc *****************
 16454 ;; Defined at:
 16455 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 16456 ;; Parameters:    Size  Location     Type
 16457 ;;  c               2   17[COMRAM] int 
 16458 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 16459 ;;		 -> sprintf@f(6), 
 16460 ;; Auto vars:     Size  Location     Type
 16461 ;;		None
 16462 ;; Return value:  Size  Location     Type
 16463 ;;                  2   17[COMRAM] int 
 16464 ;; Registers used:
 16465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16466 ;; Tracked objects:
 16467 ;;		On entry : 0/0
 16468 ;;		On exit  : 0/0
 16469 ;;		Unchanged: 0/0
 16470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16471 ;;      Params:         4       0       0       0       0       0       0
 16472 ;;      Locals:         0       0       0       0       0       0       0
 16473 ;;      Temps:          5       0       0       0       0       0       0
 16474 ;;      Totals:         9       0       0       0       0       0       0
 16475 ;;Total ram usage:        9 bytes
 16476 ;; Hardware stack levels used: 1
 16477 ;; Hardware stack levels required when called: 5
 16478 ;; This function calls:
 16479 ;;		_putch
 16480 ;; This function is called by:
 16481 ;;		_pad
 16482 ;;		_vfpfcnvrt
 16483 ;;		_fputs
 16484 ;; This function uses a non-reentrant model
 16485 ;;
 16486                           
 16487                           	psect	text63
 16488  0050E4                     __ptext63:
 16489                           	callstack 0
 16490  0050E4                     _fputc:
 16491                           	callstack 17
 16492  0050E4  5014               	movf	fputc@fp^0,w,c
 16493  0050E6  1015               	iorwf	(fputc@fp+1)^0,w,c
 16494  0050E8  B4D8               	btfsc	status,2,c
 16495  0050EA  EF79  F028         	goto	u5421
 16496  0050EE  EF7B  F028         	goto	u5420
 16497  0050F2                     u5421:
 16498  0050F2  EF84  F028         	goto	l7897
 16499  0050F6                     u5420:
 16500  0050F6  5014               	movf	fputc@fp^0,w,c
 16501  0050F8  1015               	iorwf	(fputc@fp+1)^0,w,c
 16502  0050FA  A4D8               	btfss	status,2,c
 16503  0050FC  EF82  F028         	goto	u5431
 16504  005100  EF84  F028         	goto	u5430
 16505  005104                     u5431:
 16506  005104  EF89  F028         	goto	l7899
 16507  005108                     u5430:
 16508  005108                     l7897:
 16509  005108  5012               	movf	fputc@c^0,w,c
 16510  00510A  ECE4  F031         	call	_putch
 16511  00510E  EFD6  F028         	goto	l1578
 16512  005112                     l7899:
 16513  005112  EE20 F004          	lfsr	2,4
 16514  005116  5014               	movf	fputc@fp^0,w,c
 16515  005118  26D9               	addwf	fsr2l,f,c
 16516  00511A  5015               	movf	(fputc@fp+1)^0,w,c
 16517  00511C  22DA               	addwfc	fsr2h,f,c
 16518  00511E  50DE               	movf	postinc2,w,c
 16519  005120  10DE               	iorwf	postinc2,w,c
 16520  005122  B4D8               	btfsc	status,2,c
 16521  005124  EF96  F028         	goto	u5441
 16522  005128  EF98  F028         	goto	u5440
 16523  00512C                     u5441:
 16524  00512C  EFB3  F028         	goto	l7903
 16525  005130                     u5440:
 16526  005130  EE20 F004          	lfsr	2,4
 16527  005134  5014               	movf	fputc@fp^0,w,c
 16528  005136  26D9               	addwf	fsr2l,f,c
 16529  005138  5015               	movf	(fputc@fp+1)^0,w,c
 16530  00513A  22DA               	addwfc	fsr2h,f,c
 16531  00513C  EE10 F002          	lfsr	1,2
 16532  005140  5014               	movf	fputc@fp^0,w,c
 16533  005142  26E1               	addwf	fsr1l,f,c
 16534  005144  5015               	movf	(fputc@fp+1)^0,w,c
 16535  005146  22E2               	addwfc	fsr1h,f,c
 16536  005148  50DE               	movf	postinc2,w,c
 16537  00514A  5CE6               	subwf	postinc1,w,c
 16538  00514C  50E6               	movf	postinc1,w,c
 16539  00514E  0A80               	xorlw	128
 16540  005150  6E1A               	movwf	(??_fputc+4)^0,c
 16541  005152  50DE               	movf	postinc2,w,c
 16542  005154  0A80               	xorlw	128
 16543  005156  581A               	subwfb	(??_fputc+4)^0,w,c
 16544  005158  B0D8               	btfsc	status,0,c
 16545  00515A  EFB1  F028         	goto	u5451
 16546  00515E  EFB3  F028         	goto	u5450
 16547  005162                     u5451:
 16548  005162  EFD6  F028         	goto	l1578
 16549  005166                     u5450:
 16550  005166                     l7903:
 16551  005166  EE20 F002          	lfsr	2,2
 16552  00516A  5014               	movf	fputc@fp^0,w,c
 16553  00516C  26D9               	addwf	fsr2l,f,c
 16554  00516E  5015               	movf	(fputc@fp+1)^0,w,c
 16555  005170  22DA               	addwfc	fsr2h,f,c
 16556  005172  CFDE F016          	movff	postinc2,??_fputc
 16557  005176  CFDD F017          	movff	postdec2,??_fputc+1
 16558  00517A  C014  FFD9         	movff	fputc@fp,fsr2l
 16559  00517E  C015  FFDA         	movff	fputc@fp+1,fsr2h
 16560  005182  CFDE F018          	movff	postinc2,??_fputc+2
 16561  005186  CFDD F019          	movff	postdec2,??_fputc+3
 16562  00518A  5016               	movf	??_fputc^0,w,c
 16563  00518C  2418               	addwf	(??_fputc+2)^0,w,c
 16564  00518E  6ED9               	movwf	fsr2l,c
 16565  005190  5017               	movf	(??_fputc+1)^0,w,c
 16566  005192  2019               	addwfc	(??_fputc+3)^0,w,c
 16567  005194  6EDA               	movwf	fsr2h,c
 16568  005196  C012  FFDF         	movff	fputc@c,indf2
 16569  00519A  EE20 F002          	lfsr	2,2
 16570  00519E  5014               	movf	fputc@fp^0,w,c
 16571  0051A0  26D9               	addwf	fsr2l,f,c
 16572  0051A2  5015               	movf	(fputc@fp+1)^0,w,c
 16573  0051A4  22DA               	addwfc	fsr2h,f,c
 16574  0051A6  2ADE               	incf	postinc2,f,c
 16575  0051A8  0E00               	movlw	0
 16576  0051AA  22DD               	addwfc	postdec2,f,c
 16577  0051AC                     l1578:
 16578  0051AC  0012               	return		;funcret
 16579  0051AE                     __end_of_fputc:
 16580                           	callstack 0
 16581                           
 16582 ;; *************** function _putch *****************
 16583 ;; Defined at:
 16584 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 16585 ;; Parameters:    Size  Location     Type
 16586 ;;  c               1    wreg     unsigned char 
 16587 ;; Auto vars:     Size  Location     Type
 16588 ;;  c               1    0[COMRAM] unsigned char 
 16589 ;; Return value:  Size  Location     Type
 16590 ;;                  1    wreg      void 
 16591 ;; Registers used:
 16592 ;;		wreg
 16593 ;; Tracked objects:
 16594 ;;		On entry : 0/0
 16595 ;;		On exit  : 0/0
 16596 ;;		Unchanged: 0/0
 16597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16598 ;;      Params:         0       0       0       0       0       0       0
 16599 ;;      Locals:         0       0       0       0       0       0       0
 16600 ;;      Temps:          0       0       0       0       0       0       0
 16601 ;;      Totals:         0       0       0       0       0       0       0
 16602 ;;Total ram usage:        0 bytes
 16603 ;; Hardware stack levels used: 1
 16604 ;; Hardware stack levels required when called: 4
 16605 ;; This function calls:
 16606 ;;		Nothing
 16607 ;; This function is called by:
 16608 ;;		_fputc
 16609 ;; This function uses a non-reentrant model
 16610 ;;
 16611                           
 16612                           	psect	text64
 16613  0063C8                     __ptext64:
 16614                           	callstack 0
 16615  0063C8                     _putch:
 16616                           	callstack 17
 16617  0063C8  0012               	return		;funcret
 16618  0063CA                     __end_of_putch:
 16619                           	callstack 0
 16620                           
 16621 ;; *************** function _abs *****************
 16622 ;; Defined at:
 16623 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 16624 ;; Parameters:    Size  Location     Type
 16625 ;;  a               2   35[COMRAM] int 
 16626 ;; Auto vars:     Size  Location     Type
 16627 ;;		None
 16628 ;; Return value:  Size  Location     Type
 16629 ;;                  2   35[COMRAM] int 
 16630 ;; Registers used:
 16631 ;;		wreg, status,2, status,0
 16632 ;; Tracked objects:
 16633 ;;		On entry : 0/0
 16634 ;;		On exit  : 0/0
 16635 ;;		Unchanged: 0/0
 16636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16637 ;;      Params:         2       0       0       0       0       0       0
 16638 ;;      Locals:         0       0       0       0       0       0       0
 16639 ;;      Temps:          2       0       0       0       0       0       0
 16640 ;;      Totals:         4       0       0       0       0       0       0
 16641 ;;Total ram usage:        4 bytes
 16642 ;; Hardware stack levels used: 1
 16643 ;; Hardware stack levels required when called: 4
 16644 ;; This function calls:
 16645 ;;		Nothing
 16646 ;; This function is called by:
 16647 ;;		_dtoa
 16648 ;; This function uses a non-reentrant model
 16649 ;;
 16650                           
 16651                           	psect	text65
 16652  006106                     __ptext65:
 16653                           	callstack 0
 16654  006106                     _abs:
 16655                           	callstack 17
 16656  006106  BE25               	btfsc	(abs@a+1)^0,7,c
 16657  006108  EF90  F030         	goto	u5660
 16658  00610C  5025               	movf	(abs@a+1)^0,w,c
 16659  00610E  E106               	bnz	u5661
 16660  006110  0424               	decf	abs@a^0,w,c
 16661  006112  B0D8               	btfsc	status,0,c
 16662  006114  EF8E  F030         	goto	u5661
 16663  006118  EF90  F030         	goto	u5660
 16664  00611C                     u5661:
 16665  00611C  EF9E  F030         	goto	l1563
 16666  006120                     u5660:
 16667  006120  C024  F026         	movff	abs@a,??_abs
 16668  006124  C025  F027         	movff	abs@a+1,??_abs+1
 16669  006128  1E26               	comf	??_abs^0,f,c
 16670  00612A  1E27               	comf	(??_abs+1)^0,f,c
 16671  00612C  4A26               	infsnz	??_abs^0,f,c
 16672  00612E  2A27               	incf	(??_abs+1)^0,f,c
 16673  006130  C026  F024         	movff	??_abs,?_abs
 16674  006134  C027  F025         	movff	??_abs+1,?_abs+1
 16675  006138  EFA2  F030         	goto	l1566
 16676  00613C                     l1563:
 16677  00613C  C024  F024         	movff	abs@a,?_abs
 16678  006140  C025  F025         	movff	abs@a+1,?_abs+1
 16679  006144                     l1566:
 16680  006144  0012               	return		;funcret
 16681  006146                     __end_of_abs:
 16682                           	callstack 0
 16683                           
 16684 ;; *************** function ___aomod *****************
 16685 ;; Defined at:
 16686 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 16687 ;; Parameters:    Size  Location     Type
 16688 ;;  dividend        8   17[COMRAM] long long 
 16689 ;;  divisor         8   25[COMRAM] long long 
 16690 ;; Auto vars:     Size  Location     Type
 16691 ;;  sign            1   34[COMRAM] unsigned char 
 16692 ;;  counter         1   33[COMRAM] unsigned char 
 16693 ;; Return value:  Size  Location     Type
 16694 ;;                  8   17[COMRAM] long long 
 16695 ;; Registers used:
 16696 ;;		wreg, status,2, status,0
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/0
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16702 ;;      Params:        16       0       0       0       0       0       0
 16703 ;;      Locals:         2       0       0       0       0       0       0
 16704 ;;      Temps:          0       0       0       0       0       0       0
 16705 ;;      Totals:        18       0       0       0       0       0       0
 16706 ;;Total ram usage:       18 bytes
 16707 ;; Hardware stack levels used: 1
 16708 ;; Hardware stack levels required when called: 4
 16709 ;; This function calls:
 16710 ;;		Nothing
 16711 ;; This function is called by:
 16712 ;;		_dtoa
 16713 ;; This function uses a non-reentrant model
 16714 ;;
 16715                           
 16716                           	psect	text66
 16717  003F5C                     __ptext66:
 16718                           	callstack 0
 16719  003F5C                     ___aomod:
 16720                           	callstack 17
 16721  003F5C  0E00               	movlw	0
 16722  003F5E  6E23               	movwf	___aomod@sign^0,c
 16723  003F60  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
 16724  003F62  EFB7  F01F         	goto	u5560
 16725  003F66  EFB5  F01F         	goto	u5561
 16726  003F6A                     u5561:
 16727  003F6A  EFC9  F01F         	goto	l7977
 16728  003F6E                     u5560:
 16729  003F6E  1E19               	comf	(___aomod@dividend+7)^0,f,c
 16730  003F70  1E18               	comf	(___aomod@dividend+6)^0,f,c
 16731  003F72  1E17               	comf	(___aomod@dividend+5)^0,f,c
 16732  003F74  1E16               	comf	(___aomod@dividend+4)^0,f,c
 16733  003F76  1E15               	comf	(___aomod@dividend+3)^0,f,c
 16734  003F78  1E14               	comf	(___aomod@dividend+2)^0,f,c
 16735  003F7A  1E13               	comf	(___aomod@dividend+1)^0,f,c
 16736  003F7C  6C12               	negf	___aomod@dividend^0,c
 16737  003F7E  0E00               	movlw	0
 16738  003F80  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 16739  003F82  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 16740  003F84  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 16741  003F86  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 16742  003F88  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 16743  003F8A  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 16744  003F8C  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 16745  003F8E  0E01               	movlw	1
 16746  003F90  6E23               	movwf	___aomod@sign^0,c
 16747  003F92                     l7977:
 16748  003F92  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
 16749  003F94  EFD0  F01F         	goto	u5570
 16750  003F98  EFCE  F01F         	goto	u5571
 16751  003F9C                     u5571:
 16752  003F9C  EFE0  F01F         	goto	l7981
 16753  003FA0                     u5570:
 16754  003FA0  1E21               	comf	(___aomod@divisor+7)^0,f,c
 16755  003FA2  1E20               	comf	(___aomod@divisor+6)^0,f,c
 16756  003FA4  1E1F               	comf	(___aomod@divisor+5)^0,f,c
 16757  003FA6  1E1E               	comf	(___aomod@divisor+4)^0,f,c
 16758  003FA8  1E1D               	comf	(___aomod@divisor+3)^0,f,c
 16759  003FAA  1E1C               	comf	(___aomod@divisor+2)^0,f,c
 16760  003FAC  1E1B               	comf	(___aomod@divisor+1)^0,f,c
 16761  003FAE  6C1A               	negf	___aomod@divisor^0,c
 16762  003FB0  0E00               	movlw	0
 16763  003FB2  221B               	addwfc	(___aomod@divisor+1)^0,f,c
 16764  003FB4  221C               	addwfc	(___aomod@divisor+2)^0,f,c
 16765  003FB6  221D               	addwfc	(___aomod@divisor+3)^0,f,c
 16766  003FB8  221E               	addwfc	(___aomod@divisor+4)^0,f,c
 16767  003FBA  221F               	addwfc	(___aomod@divisor+5)^0,f,c
 16768  003FBC  2220               	addwfc	(___aomod@divisor+6)^0,f,c
 16769  003FBE  2221               	addwfc	(___aomod@divisor+7)^0,f,c
 16770  003FC0                     l7981:
 16771  003FC0  501A               	movf	___aomod@divisor^0,w,c
 16772  003FC2  101B               	iorwf	(___aomod@divisor+1)^0,w,c
 16773  003FC4  101C               	iorwf	(___aomod@divisor+2)^0,w,c
 16774  003FC6  101D               	iorwf	(___aomod@divisor+3)^0,w,c
 16775  003FC8  101E               	iorwf	(___aomod@divisor+4)^0,w,c
 16776  003FCA  101F               	iorwf	(___aomod@divisor+5)^0,w,c
 16777  003FCC  1020               	iorwf	(___aomod@divisor+6)^0,w,c
 16778  003FCE  1021               	iorwf	(___aomod@divisor+7)^0,w,c
 16779  003FD0  B4D8               	btfsc	status,2,c
 16780  003FD2  EFED  F01F         	goto	u5581
 16781  003FD6  EFEF  F01F         	goto	u5580
 16782  003FDA                     u5581:
 16783  003FDA  EF37  F020         	goto	l7997
 16784  003FDE                     u5580:
 16785  003FDE  0E01               	movlw	1
 16786  003FE0  6E22               	movwf	___aomod@counter^0,c
 16787  003FE2  EFFD  F01F         	goto	l7987
 16788  003FE6                     l7985:
 16789  003FE6  90D8               	bcf	status,0,c
 16790  003FE8  361A               	rlcf	___aomod@divisor^0,f,c
 16791  003FEA  361B               	rlcf	(___aomod@divisor+1)^0,f,c
 16792  003FEC  361C               	rlcf	(___aomod@divisor+2)^0,f,c
 16793  003FEE  361D               	rlcf	(___aomod@divisor+3)^0,f,c
 16794  003FF0  361E               	rlcf	(___aomod@divisor+4)^0,f,c
 16795  003FF2  361F               	rlcf	(___aomod@divisor+5)^0,f,c
 16796  003FF4  3620               	rlcf	(___aomod@divisor+6)^0,f,c
 16797  003FF6  3621               	rlcf	(___aomod@divisor+7)^0,f,c
 16798  003FF8  2A22               	incf	___aomod@counter^0,f,c
 16799  003FFA                     l7987:
 16800  003FFA  AE21               	btfss	(___aomod@divisor+7)^0,7,c
 16801  003FFC  EF02  F020         	goto	u5591
 16802  004000  EF04  F020         	goto	u5590
 16803  004004                     u5591:
 16804  004004  EFF3  F01F         	goto	l7985
 16805  004008                     u5590:
 16806  004008                     l7989:
 16807  004008  501A               	movf	___aomod@divisor^0,w,c
 16808  00400A  5C12               	subwf	___aomod@dividend^0,w,c
 16809  00400C  501B               	movf	(___aomod@divisor+1)^0,w,c
 16810  00400E  5813               	subwfb	(___aomod@dividend+1)^0,w,c
 16811  004010  501C               	movf	(___aomod@divisor+2)^0,w,c
 16812  004012  5814               	subwfb	(___aomod@dividend+2)^0,w,c
 16813  004014  501D               	movf	(___aomod@divisor+3)^0,w,c
 16814  004016  5815               	subwfb	(___aomod@dividend+3)^0,w,c
 16815  004018  501E               	movf	(___aomod@divisor+4)^0,w,c
 16816  00401A  5816               	subwfb	(___aomod@dividend+4)^0,w,c
 16817  00401C  501F               	movf	(___aomod@divisor+5)^0,w,c
 16818  00401E  5817               	subwfb	(___aomod@dividend+5)^0,w,c
 16819  004020  5020               	movf	(___aomod@divisor+6)^0,w,c
 16820  004022  5818               	subwfb	(___aomod@dividend+6)^0,w,c
 16821  004024  5021               	movf	(___aomod@divisor+7)^0,w,c
 16822  004026  5819               	subwfb	(___aomod@dividend+7)^0,w,c
 16823  004028  A0D8               	btfss	status,0,c
 16824  00402A  EF19  F020         	goto	u5601
 16825  00402E  EF1B  F020         	goto	u5600
 16826  004032                     u5601:
 16827  004032  EF2B  F020         	goto	l7993
 16828  004036                     u5600:
 16829  004036  501A               	movf	___aomod@divisor^0,w,c
 16830  004038  5E12               	subwf	___aomod@dividend^0,f,c
 16831  00403A  501B               	movf	(___aomod@divisor+1)^0,w,c
 16832  00403C  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
 16833  00403E  501C               	movf	(___aomod@divisor+2)^0,w,c
 16834  004040  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
 16835  004042  501D               	movf	(___aomod@divisor+3)^0,w,c
 16836  004044  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
 16837  004046  501E               	movf	(___aomod@divisor+4)^0,w,c
 16838  004048  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
 16839  00404A  501F               	movf	(___aomod@divisor+5)^0,w,c
 16840  00404C  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
 16841  00404E  5020               	movf	(___aomod@divisor+6)^0,w,c
 16842  004050  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
 16843  004052  5021               	movf	(___aomod@divisor+7)^0,w,c
 16844  004054  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
 16845  004056                     l7993:
 16846  004056  90D8               	bcf	status,0,c
 16847  004058  3221               	rrcf	(___aomod@divisor+7)^0,f,c
 16848  00405A  3220               	rrcf	(___aomod@divisor+6)^0,f,c
 16849  00405C  321F               	rrcf	(___aomod@divisor+5)^0,f,c
 16850  00405E  321E               	rrcf	(___aomod@divisor+4)^0,f,c
 16851  004060  321D               	rrcf	(___aomod@divisor+3)^0,f,c
 16852  004062  321C               	rrcf	(___aomod@divisor+2)^0,f,c
 16853  004064  321B               	rrcf	(___aomod@divisor+1)^0,f,c
 16854  004066  321A               	rrcf	___aomod@divisor^0,f,c
 16855  004068  2E22               	decfsz	___aomod@counter^0,f,c
 16856  00406A  EF04  F020         	goto	l7989
 16857  00406E                     l7997:
 16858  00406E  5023               	movf	___aomod@sign^0,w,c
 16859  004070  B4D8               	btfsc	status,2,c
 16860  004072  EF3D  F020         	goto	u5611
 16861  004076  EF3F  F020         	goto	u5610
 16862  00407A                     u5611:
 16863  00407A  EF4F  F020         	goto	l8001
 16864  00407E                     u5610:
 16865  00407E  1E19               	comf	(___aomod@dividend+7)^0,f,c
 16866  004080  1E18               	comf	(___aomod@dividend+6)^0,f,c
 16867  004082  1E17               	comf	(___aomod@dividend+5)^0,f,c
 16868  004084  1E16               	comf	(___aomod@dividend+4)^0,f,c
 16869  004086  1E15               	comf	(___aomod@dividend+3)^0,f,c
 16870  004088  1E14               	comf	(___aomod@dividend+2)^0,f,c
 16871  00408A  1E13               	comf	(___aomod@dividend+1)^0,f,c
 16872  00408C  6C12               	negf	___aomod@dividend^0,c
 16873  00408E  0E00               	movlw	0
 16874  004090  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 16875  004092  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 16876  004094  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 16877  004096  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 16878  004098  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 16879  00409A  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 16880  00409C  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 16881  00409E                     l8001:
 16882  00409E  C012  F012         	movff	___aomod@dividend,?___aomod
 16883  0040A2  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
 16884  0040A6  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
 16885  0040AA  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
 16886  0040AE  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
 16887  0040B2  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
 16888  0040B6  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
 16889  0040BA  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
 16890  0040BE  0012               	return		;funcret
 16891  0040C0                     __end_of___aomod:
 16892                           	callstack 0
 16893                           
 16894 ;; *************** function ___aodiv *****************
 16895 ;; Defined at:
 16896 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 16897 ;; Parameters:    Size  Location     Type
 16898 ;;  dividend        8   17[COMRAM] long long 
 16899 ;;  divisor         8   25[COMRAM] long long 
 16900 ;; Auto vars:     Size  Location     Type
 16901 ;;  quotient        8   35[COMRAM] long long 
 16902 ;;  sign            1   34[COMRAM] unsigned char 
 16903 ;;  counter         1   33[COMRAM] unsigned char 
 16904 ;; Return value:  Size  Location     Type
 16905 ;;                  8   17[COMRAM] long long 
 16906 ;; Registers used:
 16907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16908 ;; Tracked objects:
 16909 ;;		On entry : 0/0
 16910 ;;		On exit  : 0/0
 16911 ;;		Unchanged: 0/0
 16912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16913 ;;      Params:        16       0       0       0       0       0       0
 16914 ;;      Locals:        10       0       0       0       0       0       0
 16915 ;;      Temps:          0       0       0       0       0       0       0
 16916 ;;      Totals:        26       0       0       0       0       0       0
 16917 ;;Total ram usage:       26 bytes
 16918 ;; Hardware stack levels used: 1
 16919 ;; Hardware stack levels required when called: 4
 16920 ;; This function calls:
 16921 ;;		Nothing
 16922 ;; This function is called by:
 16923 ;;		_dtoa
 16924 ;; This function uses a non-reentrant model
 16925 ;;
 16926                           
 16927                           	psect	text67
 16928  003DD4                     __ptext67:
 16929                           	callstack 0
 16930  003DD4                     ___aodiv:
 16931                           	callstack 17
 16932  003DD4  0E00               	movlw	0
 16933  003DD6  6E23               	movwf	___aodiv@sign^0,c
 16934  003DD8  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
 16935  003DDA  EFF3  F01E         	goto	u5490
 16936  003DDE  EFF1  F01E         	goto	u5491
 16937  003DE2                     u5491:
 16938  003DE2  EF05  F01F         	goto	l7933
 16939  003DE6                     u5490:
 16940  003DE6  1E21               	comf	(___aodiv@divisor+7)^0,f,c
 16941  003DE8  1E20               	comf	(___aodiv@divisor+6)^0,f,c
 16942  003DEA  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
 16943  003DEC  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
 16944  003DEE  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
 16945  003DF0  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
 16946  003DF2  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
 16947  003DF4  6C1A               	negf	___aodiv@divisor^0,c
 16948  003DF6  0E00               	movlw	0
 16949  003DF8  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
 16950  003DFA  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
 16951  003DFC  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
 16952  003DFE  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
 16953  003E00  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
 16954  003E02  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
 16955  003E04  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
 16956  003E06  0E01               	movlw	1
 16957  003E08  6E23               	movwf	___aodiv@sign^0,c
 16958  003E0A                     l7933:
 16959  003E0A  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
 16960  003E0C  EF0C  F01F         	goto	u5500
 16961  003E10  EF0A  F01F         	goto	u5501
 16962  003E14                     u5501:
 16963  003E14  EF1E  F01F         	goto	l7939
 16964  003E18                     u5500:
 16965  003E18  1E19               	comf	(___aodiv@dividend+7)^0,f,c
 16966  003E1A  1E18               	comf	(___aodiv@dividend+6)^0,f,c
 16967  003E1C  1E17               	comf	(___aodiv@dividend+5)^0,f,c
 16968  003E1E  1E16               	comf	(___aodiv@dividend+4)^0,f,c
 16969  003E20  1E15               	comf	(___aodiv@dividend+3)^0,f,c
 16970  003E22  1E14               	comf	(___aodiv@dividend+2)^0,f,c
 16971  003E24  1E13               	comf	(___aodiv@dividend+1)^0,f,c
 16972  003E26  6C12               	negf	___aodiv@dividend^0,c
 16973  003E28  0E00               	movlw	0
 16974  003E2A  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
 16975  003E2C  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
 16976  003E2E  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
 16977  003E30  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
 16978  003E32  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
 16979  003E34  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
 16980  003E36  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
 16981  003E38  0E01               	movlw	1
 16982  003E3A  1A23               	xorwf	___aodiv@sign^0,f,c
 16983  003E3C                     l7939:
 16984  003E3C  EE20  F024         	lfsr	2,___aodiv@quotient
 16985  003E40  0E07               	movlw	7
 16986  003E42                     u5511:
 16987  003E42  6ADE               	clrf	postinc2,c
 16988  003E44  06E8               	decf	wreg,f,c
 16989  003E46  E2FD               	bc	u5511
 16990  003E48  501A               	movf	___aodiv@divisor^0,w,c
 16991  003E4A  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
 16992  003E4C  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
 16993  003E4E  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
 16994  003E50  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
 16995  003E52  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
 16996  003E54  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
 16997  003E56  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
 16998  003E58  B4D8               	btfsc	status,2,c
 16999  003E5A  EF31  F01F         	goto	u5521
 17000  003E5E  EF33  F01F         	goto	u5520
 17001  003E62                     u5521:
 17002  003E62  EF85  F01F         	goto	l7961
 17003  003E66                     u5520:
 17004  003E66  0E01               	movlw	1
 17005  003E68  6E22               	movwf	___aodiv@counter^0,c
 17006  003E6A  EF41  F01F         	goto	l7947
 17007  003E6E                     l7945:
 17008  003E6E  90D8               	bcf	status,0,c
 17009  003E70  361A               	rlcf	___aodiv@divisor^0,f,c
 17010  003E72  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
 17011  003E74  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
 17012  003E76  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
 17013  003E78  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
 17014  003E7A  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
 17015  003E7C  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
 17016  003E7E  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
 17017  003E80  2A22               	incf	___aodiv@counter^0,f,c
 17018  003E82                     l7947:
 17019  003E82  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
 17020  003E84  EF46  F01F         	goto	u5531
 17021  003E88  EF48  F01F         	goto	u5530
 17022  003E8C                     u5531:
 17023  003E8C  EF37  F01F         	goto	l7945
 17024  003E90                     u5530:
 17025  003E90                     l7949:
 17026  003E90  90D8               	bcf	status,0,c
 17027  003E92  3624               	rlcf	___aodiv@quotient^0,f,c
 17028  003E94  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
 17029  003E96  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
 17030  003E98  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
 17031  003E9A  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
 17032  003E9C  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
 17033  003E9E  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
 17034  003EA0  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
 17035  003EA2  501A               	movf	___aodiv@divisor^0,w,c
 17036  003EA4  5C12               	subwf	___aodiv@dividend^0,w,c
 17037  003EA6  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17038  003EA8  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
 17039  003EAA  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17040  003EAC  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
 17041  003EAE  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17042  003EB0  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
 17043  003EB2  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17044  003EB4  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
 17045  003EB6  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17046  003EB8  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
 17047  003EBA  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17048  003EBC  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
 17049  003EBE  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17050  003EC0  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
 17051  003EC2  A0D8               	btfss	status,0,c
 17052  003EC4  EF66  F01F         	goto	u5541
 17053  003EC8  EF68  F01F         	goto	u5540
 17054  003ECC                     u5541:
 17055  003ECC  EF79  F01F         	goto	l7957
 17056  003ED0                     u5540:
 17057  003ED0  501A               	movf	___aodiv@divisor^0,w,c
 17058  003ED2  5E12               	subwf	___aodiv@dividend^0,f,c
 17059  003ED4  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17060  003ED6  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
 17061  003ED8  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17062  003EDA  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
 17063  003EDC  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17064  003EDE  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
 17065  003EE0  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17066  003EE2  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
 17067  003EE4  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17068  003EE6  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
 17069  003EE8  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17070  003EEA  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
 17071  003EEC  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17072  003EEE  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
 17073  003EF0  8024               	bsf	___aodiv@quotient^0,0,c
 17074  003EF2                     l7957:
 17075  003EF2  90D8               	bcf	status,0,c
 17076  003EF4  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
 17077  003EF6  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
 17078  003EF8  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
 17079  003EFA  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
 17080  003EFC  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
 17081  003EFE  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
 17082  003F00  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
 17083  003F02  321A               	rrcf	___aodiv@divisor^0,f,c
 17084  003F04  2E22               	decfsz	___aodiv@counter^0,f,c
 17085  003F06  EF48  F01F         	goto	l7949
 17086  003F0A                     l7961:
 17087  003F0A  5023               	movf	___aodiv@sign^0,w,c
 17088  003F0C  B4D8               	btfsc	status,2,c
 17089  003F0E  EF8B  F01F         	goto	u5551
 17090  003F12  EF8D  F01F         	goto	u5550
 17091  003F16                     u5551:
 17092  003F16  EF9D  F01F         	goto	l7965
 17093  003F1A                     u5550:
 17094  003F1A  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
 17095  003F1C  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
 17096  003F1E  1E29               	comf	(___aodiv@quotient+5)^0,f,c
 17097  003F20  1E28               	comf	(___aodiv@quotient+4)^0,f,c
 17098  003F22  1E27               	comf	(___aodiv@quotient+3)^0,f,c
 17099  003F24  1E26               	comf	(___aodiv@quotient+2)^0,f,c
 17100  003F26  1E25               	comf	(___aodiv@quotient+1)^0,f,c
 17101  003F28  6C24               	negf	___aodiv@quotient^0,c
 17102  003F2A  0E00               	movlw	0
 17103  003F2C  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
 17104  003F2E  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
 17105  003F30  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
 17106  003F32  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
 17107  003F34  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
 17108  003F36  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
 17109  003F38  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
 17110  003F3A                     l7965:
 17111  003F3A  C024  F012         	movff	___aodiv@quotient,?___aodiv
 17112  003F3E  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
 17113  003F42  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
 17114  003F46  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
 17115  003F4A  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
 17116  003F4E  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
 17117  003F52  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
 17118  003F56  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
 17119  003F5A  0012               	return		;funcret
 17120  003F5C                     __end_of___aodiv:
 17121                           	callstack 0
 17122                           
 17123 ;; *************** function _LCD_DrawText *****************
 17124 ;; Defined at:
 17125 ;;		line 713 in file "libraries/lcd_highlevel.c"
 17126 ;; Parameters:    Size  Location     Type
 17127 ;;  msg             2   31[COMRAM] PTR const unsigned char 
 17128 ;;		 -> g1.str(2), touchScreenController@s(20), STR_14(13), STR_13(13), 
 17129 ;;		 -> STR_12(11), STR_11(8), STR_10(9), STR_9(4), 
 17130 ;;		 -> STR_8(4), STR_7(8), STR_6(9), STR_5(9), 
 17131 ;;		 -> STR_4(11), g1(239), STR_1(10), 
 17132 ;;  font            2   33[COMRAM] PTR const struct .
 17133 ;;		 -> arialNarrow_12ptFontInfo(7), 
 17134 ;;  align           1   35[COMRAM] enum E355
 17135 ;;  posX            2   36[COMRAM] unsigned short 
 17136 ;;  posY            2   38[COMRAM] unsigned short 
 17137 ;;  color           2   40[COMRAM] unsigned short 
 17138 ;;  bg_color        2   42[COMRAM] unsigned short 
 17139 ;; Auto vars:     Size  Location     Type
 17140 ;;  posXEnd         2   58[COMRAM] unsigned short 
 17141 ;;  posYEnd         2   56[COMRAM] unsigned short 
 17142 ;;  yOffset         2   52[COMRAM] unsigned short 
 17143 ;;  offset          2   50[COMRAM] unsigned short 
 17144 ;;  width           1   64[COMRAM] unsigned char 
 17145 ;;  x               1   63[COMRAM] unsigned char 
 17146 ;;  tempChar        1   62[COMRAM] char 
 17147 ;;  i               1   61[COMRAM] unsigned char 
 17148 ;;  y               1   60[COMRAM] unsigned char 
 17149 ;;  fontPixel       1   55[COMRAM] unsigned char 
 17150 ;;  fontByte        1   54[COMRAM] unsigned char 
 17151 ;; Return value:  Size  Location     Type
 17152 ;;                  1    wreg      void 
 17153 ;; Registers used:
 17154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17155 ;; Tracked objects:
 17156 ;;		On entry : 0/0
 17157 ;;		On exit  : 0/0
 17158 ;;		Unchanged: 0/0
 17159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17160 ;;      Params:        13       0       0       0       0       0       0
 17161 ;;      Locals:        15       0       0       0       0       0       0
 17162 ;;      Temps:          6       0       0       0       0       0       0
 17163 ;;      Totals:        34       0       0       0       0       0       0
 17164 ;;Total ram usage:       34 bytes
 17165 ;; Hardware stack levels used: 1
 17166 ;; Hardware stack levels required when called: 5
 17167 ;; This function calls:
 17168 ;;		___awdiv
 17169 ;;		___wmul
 17170 ;;		_strlen
 17171 ;; This function is called by:
 17172 ;;		_Factory_init
 17173 ;;		_Score_draw
 17174 ;;		_Menu_welcomeDraw
 17175 ;;		_Menu_parametersDraw
 17176 ;;		_Menu_endGame
 17177 ;;		_LCD_ButtonDraw
 17178 ;;		_touchScreenController
 17179 ;; This function uses a non-reentrant model
 17180 ;;
 17181                           
 17182                           	psect	text68
 17183  001DD6                     __ptext68:
 17184                           	callstack 0
 17185  001DD6                     _LCD_DrawText:
 17186                           	callstack 20
 17187  001DD6                     
 17188                           ;libraries/lcd_highlevel.c: 713: void LCD_DrawText(const uint8_t * msg,const FONT_INFO *
      +                           font, ALIGN align,;libraries/lcd_highlevel.c: 714:         uint16_t posX, uint16_t posY
      +                          , uint16_t color, uint16_t bg_color);libraries/lcd_highlevel.c: 715: {;libraries/lcd_hig
      +                          hlevel.c: 716:   uint8_t x,y,i;;libraries/lcd_highlevel.c: 717:   int8_t tempChar;;libra
      +                          ries/lcd_highlevel.c: 718:   uint16_t offset;;libraries/lcd_highlevel.c: 719:   uint8_t 
      +                          width=0;
 17189  001DD6  0E00               	movlw	0
 17190  001DD8  6E41               	movwf	LCD_DrawText@width^0,c
 17191                           
 17192                           ;libraries/lcd_highlevel.c: 720:   uint8_t fontByte,fontPixel;;libraries/lcd_highlevel.c
      +                          : 721:   uint16_t posYEnd, posXEnd, yOffset;;libraries/lcd_highlevel.c: 725:   for(i=0;i
      +                          <strlen(msg);i++)
 17193  001DDA  0E00               	movlw	0
 17194  001DDC  6E3E               	movwf	LCD_DrawText@i^0,c
 17195  001DDE  EF40  F00F         	goto	l8703
 17196  001DE2                     l8697:
 17197                           
 17198                           ;libraries/lcd_highlevel.c: 726:   {;libraries/lcd_highlevel.c: 727:     tempChar = (msg
      +                          [i]) - font->start_char;
 17199  001DE2  0E01               	movlw	1
 17200  001DE4  2422               	addwf	LCD_DrawText@font^0,w,c
 17201  001DE6  6E2D               	movwf	??_LCD_DrawText^0,c
 17202  001DE8  0E00               	movlw	0
 17203  001DEA  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17204  001DEC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17205  001DEE  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17206  001DF2  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17207  001DF6                     	if	0	;tblptru may be non-zero
 17208  001DF6                     	endif
 17209  001DF6                     	if	0	;tblptru may be non-zero
 17210  001DF6                     	endif
 17211  001DF6  0008               	tblrd		*
 17212  001DF8  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17213  001DFC  503E               	movf	LCD_DrawText@i^0,w,c
 17214  001DFE  2420               	addwf	LCD_DrawText@msg^0,w,c
 17215  001E00  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17216  001E02  0E00               	movlw	0
 17217  001E04  2021               	addwfc	(LCD_DrawText@msg+1)^0,w,c
 17218  001E06  6E31               	movwf	(??_LCD_DrawText+4)^0,c
 17219  001E08  C030  FFF6         	movff	??_LCD_DrawText+3,tblptrl
 17220  001E0C  C031  FFF7         	movff	??_LCD_DrawText+4,tblptrh
 17221  001E10  6AF8               	clrf	tblptru,c
 17222  001E12  0E05               	movlw	(high __ramtop+-1)
 17223  001E14  64F7               	cpfsgt	tblptrh,c
 17224  001E16  D003               	bra	u6197
 17225  001E18  0008               	tblrd		*
 17226  001E1A  50F5               	movf	tablat,w,c
 17227  001E1C  D005               	bra	u6190
 17228  001E1E                     u6197:
 17229  001E1E  CFF6 FFE1          	movff	tblptrl,fsr1l
 17230  001E22  CFF7 FFE2          	movff	tblptrh,fsr1h
 17231  001E26  50E7               	movf	indf1,w,c
 17232  001E28                     u6190:
 17233  001E28  6E32               	movwf	(??_LCD_DrawText+5)^0,c
 17234  001E2A  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17235  001E2C  5C32               	subwf	(??_LCD_DrawText+5)^0,w,c
 17236  001E2E  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17237  001E30                     
 17238                           ;libraries/lcd_highlevel.c: 728:     width += font->descriptor[tempChar].width+2;
 17239  001E30  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17240  001E32  6E1A               	movwf	___wmul@multiplier^0,c
 17241  001E34  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17242  001E36  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17243  001E38  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17244  001E3A  0E00               	movlw	0
 17245  001E3C  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17246  001E3E  0E03               	movlw	3
 17247  001E40  6E1C               	movwf	___wmul@multiplicand^0,c
 17248  001E42  EC45  F031         	call	___wmul	;wreg free
 17249  001E46  0E03               	movlw	3
 17250  001E48  2422               	addwf	LCD_DrawText@font^0,w,c
 17251  001E4A  6E2D               	movwf	??_LCD_DrawText^0,c
 17252  001E4C  0E00               	movlw	0
 17253  001E4E  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17254  001E50  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17255  001E52  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17256  001E56  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17257  001E5A                     	if	0	;tblptru may be non-zero
 17258  001E5A                     	endif
 17259  001E5A                     	if	0	;tblptru may be non-zero
 17260  001E5A                     	endif
 17261  001E5A  0009               	tblrd		*+
 17262  001E5C  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17263  001E60  0009               	tblrd		*+
 17264  001E62  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17265  001E66  501A               	movf	?___wmul^0,w,c
 17266  001E68  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17267  001E6A  501B               	movf	(?___wmul+1)^0,w,c
 17268  001E6C  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17269  001E6E  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17270  001E72  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17271  001E76                     	if	0	;tblptru may be non-zero
 17272  001E76                     	endif
 17273  001E76                     	if	0	;tblptru may be non-zero
 17274  001E76                     	endif
 17275  001E76  0008               	tblrd		*
 17276  001E78  50F5               	movf	tablat,w,c
 17277  001E7A  0F02               	addlw	2
 17278  001E7C  2641               	addwf	LCD_DrawText@width^0,f,c
 17279  001E7E                     
 17280                           ;libraries/lcd_highlevel.c: 729:   }
 17281  001E7E  2A3E               	incf	LCD_DrawText@i^0,f,c
 17282  001E80                     l8703:
 17283  001E80  C020  F012         	movff	LCD_DrawText@msg,strlen@s
 17284  001E84  C021  F013         	movff	LCD_DrawText@msg+1,strlen@s+1
 17285  001E88  EC18  F030         	call	_strlen	;wreg free
 17286  001E8C  503E               	movf	LCD_DrawText@i^0,w,c
 17287  001E8E  6E2D               	movwf	??_LCD_DrawText^0,c
 17288  001E90  6A2E               	clrf	(??_LCD_DrawText+1)^0,c
 17289  001E92  5012               	movf	?_strlen^0,w,c
 17290  001E94  5C2D               	subwf	??_LCD_DrawText^0,w,c
 17291  001E96  5013               	movf	(?_strlen+1)^0,w,c
 17292  001E98  582E               	subwfb	(??_LCD_DrawText+1)^0,w,c
 17293  001E9A  A0D8               	btfss	status,0,c
 17294  001E9C  EF52  F00F         	goto	u6201
 17295  001EA0  EF54  F00F         	goto	u6200
 17296  001EA4                     u6201:
 17297  001EA4  EFF1  F00E         	goto	l8697
 17298  001EA8                     u6200:
 17299  001EA8                     
 17300                           ;libraries/lcd_highlevel.c: 730:   if(align == A_RIGHT)
 17301  001EA8  0424               	decf	LCD_DrawText@align^0,w,c
 17302  001EAA  A4D8               	btfss	status,2,c
 17303  001EAC  EF5A  F00F         	goto	u6211
 17304  001EB0  EF5C  F00F         	goto	u6210
 17305  001EB4                     u6211:
 17306  001EB4  EF65  F00F         	goto	l8709
 17307  001EB8                     u6210:
 17308  001EB8                     
 17309                           ;libraries/lcd_highlevel.c: 731:   {;libraries/lcd_highlevel.c: 732:     posX = posX - w
      +                          idth;
 17310  001EB8  5041               	movf	LCD_DrawText@width^0,w,c
 17311  001EBA  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17312  001EBC  6E25               	movwf	LCD_DrawText@posX^0,c
 17313  001EBE  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17314  001EC0  A0D8               	btfss	status,0,c
 17315  001EC2  0426               	decf	(LCD_DrawText@posX+1)^0,w,c
 17316  001EC4  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17317                           
 17318                           ;libraries/lcd_highlevel.c: 733:   }
 17319  001EC6  EF7D  F00F         	goto	l8713
 17320  001ECA                     l8709:
 17321  001ECA  0E02               	movlw	2
 17322  001ECC  1824               	xorwf	LCD_DrawText@align^0,w,c
 17323  001ECE  A4D8               	btfss	status,2,c
 17324  001ED0  EF6C  F00F         	goto	u6221
 17325  001ED4  EF6E  F00F         	goto	u6220
 17326  001ED8                     u6221:
 17327  001ED8  EF7D  F00F         	goto	l8713
 17328  001EDC                     u6220:
 17329  001EDC                     
 17330                           ;libraries/lcd_highlevel.c: 735:   {;libraries/lcd_highlevel.c: 736:     posX = posX - w
      +                          idth / 2;
 17331  001EDC  C041  F012         	movff	LCD_DrawText@width,___awdiv@dividend
 17332  001EE0  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17333  001EE2  0E00               	movlw	0
 17334  001EE4  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17335  001EE6  0E02               	movlw	2
 17336  001EE8  6E14               	movwf	___awdiv@divisor^0,c
 17337  001EEA  ECD7  F028         	call	___awdiv	;wreg free
 17338  001EEE  5012               	movf	?___awdiv^0,w,c
 17339  001EF0  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17340  001EF2  6E25               	movwf	LCD_DrawText@posX^0,c
 17341  001EF4  5013               	movf	(?___awdiv+1)^0,w,c
 17342  001EF6  5826               	subwfb	(LCD_DrawText@posX+1)^0,w,c
 17343  001EF8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17344  001EFA                     l8713:
 17345                           
 17346                           ;libraries/lcd_highlevel.c: 740:   {;libraries/lcd_highlevel.c: 741:     tempChar = (*ms
      +                          g) - font->start_char;
 17347  001EFA  0E01               	movlw	1
 17348  001EFC  2422               	addwf	LCD_DrawText@font^0,w,c
 17349  001EFE  6E2D               	movwf	??_LCD_DrawText^0,c
 17350  001F00  0E00               	movlw	0
 17351  001F02  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17352  001F04  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17353  001F06  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17354  001F0A  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17355  001F0E                     	if	0	;tblptru may be non-zero
 17356  001F0E                     	endif
 17357  001F0E                     	if	0	;tblptru may be non-zero
 17358  001F0E                     	endif
 17359  001F0E  0008               	tblrd		*
 17360  001F10  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17361  001F14  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17362  001F18  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17363  001F1C  6AF8               	clrf	tblptru,c
 17364  001F1E  0E05               	movlw	(high __ramtop+-1)
 17365  001F20  64F7               	cpfsgt	tblptrh,c
 17366  001F22  D003               	bra	u6237
 17367  001F24  0008               	tblrd		*
 17368  001F26  50F5               	movf	tablat,w,c
 17369  001F28  D005               	bra	u6230
 17370  001F2A                     u6237:
 17371  001F2A  CFF6 FFE1          	movff	tblptrl,fsr1l
 17372  001F2E  CFF7 FFE2          	movff	tblptrh,fsr1h
 17373  001F32  50E7               	movf	indf1,w,c
 17374  001F34                     u6230:
 17375  001F34  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17376  001F36  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17377  001F38  5C30               	subwf	(??_LCD_DrawText+3)^0,w,c
 17378  001F3A  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17379  001F3C                     
 17380                           ;libraries/lcd_highlevel.c: 742:     offset = font->descriptor[tempChar].offset;
 17381  001F3C  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17382  001F3E  6E1A               	movwf	___wmul@multiplier^0,c
 17383  001F40  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17384  001F42  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17385  001F44  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17386  001F46  0E00               	movlw	0
 17387  001F48  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17388  001F4A  0E03               	movlw	3
 17389  001F4C  6E1C               	movwf	___wmul@multiplicand^0,c
 17390  001F4E  EC45  F031         	call	___wmul	;wreg free
 17391  001F52  0E03               	movlw	3
 17392  001F54  2422               	addwf	LCD_DrawText@font^0,w,c
 17393  001F56  6E2D               	movwf	??_LCD_DrawText^0,c
 17394  001F58  0E00               	movlw	0
 17395  001F5A  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17396  001F5C  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17397  001F5E  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17398  001F62  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17399  001F66                     	if	0	;tblptru may be non-zero
 17400  001F66                     	endif
 17401  001F66                     	if	0	;tblptru may be non-zero
 17402  001F66                     	endif
 17403  001F66  0009               	tblrd		*+
 17404  001F68  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17405  001F6C  0009               	tblrd		*+
 17406  001F6E  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17407  001F72  501A               	movf	?___wmul^0,w,c
 17408  001F74  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17409  001F76  501B               	movf	(?___wmul+1)^0,w,c
 17410  001F78  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17411  001F7A  0E01               	movlw	1
 17412  001F7C  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17413  001F7E  0E00               	movlw	0
 17414  001F80  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17415  001F82  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17416  001F86  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17417  001F8A                     	if	0	;tblptru may be non-zero
 17418  001F8A                     	endif
 17419  001F8A                     	if	0	;tblptru may be non-zero
 17420  001F8A                     	endif
 17421  001F8A  0009               	tblrd		*+
 17422  001F8C  CFF5 F033          	movff	tablat,LCD_DrawText@offset
 17423  001F90  000A               	tblrd		*-
 17424  001F92  CFF5 F034          	movff	tablat,LCD_DrawText@offset+1
 17425  001F96                     
 17426                           ;libraries/lcd_highlevel.c: 743:     width = font->descriptor[tempChar].width;
 17427  001F96  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17428  001F98  6E1A               	movwf	___wmul@multiplier^0,c
 17429  001F9A  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17430  001F9C  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17431  001F9E  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17432  001FA0  0E00               	movlw	0
 17433  001FA2  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17434  001FA4  0E03               	movlw	3
 17435  001FA6  6E1C               	movwf	___wmul@multiplicand^0,c
 17436  001FA8  EC45  F031         	call	___wmul	;wreg free
 17437  001FAC  0E03               	movlw	3
 17438  001FAE  2422               	addwf	LCD_DrawText@font^0,w,c
 17439  001FB0  6E2D               	movwf	??_LCD_DrawText^0,c
 17440  001FB2  0E00               	movlw	0
 17441  001FB4  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17442  001FB6  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17443  001FB8  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17444  001FBC  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17445  001FC0                     	if	0	;tblptru may be non-zero
 17446  001FC0                     	endif
 17447  001FC0                     	if	0	;tblptru may be non-zero
 17448  001FC0                     	endif
 17449  001FC0  0009               	tblrd		*+
 17450  001FC2  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17451  001FC6  0009               	tblrd		*+
 17452  001FC8  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17453  001FCC  501A               	movf	?___wmul^0,w,c
 17454  001FCE  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17455  001FD0  501B               	movf	(?___wmul+1)^0,w,c
 17456  001FD2  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17457  001FD4  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17458  001FD8  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17459  001FDC                     	if	0	;tblptru may be non-zero
 17460  001FDC                     	endif
 17461  001FDC                     	if	0	;tblptru may be non-zero
 17462  001FDC                     	endif
 17463  001FDC  0008               	tblrd		*
 17464  001FDE  CFF5 F041          	movff	tablat,LCD_DrawText@width
 17465  001FE2                     
 17466                           ;libraries/lcd_highlevel.c: 748:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17467  001FE2  0E2A               	movlw	42
 17468  001FE4  6E80               	movwf	128,c	;volatile
 17469  001FE6  988B               	bcf	3979,4,c	;volatile
 17470  001FE8  968B               	bcf	3979,3,c	;volatile
 17471  001FEA  868B               	bsf	3979,3,c	;volatile
 17472  001FEC  888B               	bsf	3979,4,c	;volatile
 17473  001FEE                     
 17474                           ;libraries/lcd_highlevel.c: 749:     PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 17475  001FEE  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17476  001FF0  6E80               	movwf	128,c	;volatile
 17477  001FF2  968B               	bcf	3979,3,c	;volatile
 17478  001FF4  868B               	bsf	3979,3,c	;volatile
 17479  001FF6                     
 17480                           ;libraries/lcd_highlevel.c: 750:     PORTA = posX; LATC3 = 0; LATC3 = 1;;
 17481  001FF6  C025  FF80         	movff	LCD_DrawText@posX,3968	;volatile
 17482  001FFA  968B               	bcf	3979,3,c	;volatile
 17483  001FFC  868B               	bsf	3979,3,c	;volatile
 17484  001FFE                     
 17485                           ;libraries/lcd_highlevel.c: 751:     posXEnd = posX+width-1+2;
 17486  001FFE  5041               	movf	LCD_DrawText@width^0,w,c
 17487  002000  2425               	addwf	LCD_DrawText@posX^0,w,c
 17488  002002  6E2D               	movwf	??_LCD_DrawText^0,c
 17489  002004  0E00               	movlw	0
 17490  002006  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 17491  002008  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17492  00200A  0E01               	movlw	1
 17493  00200C  242D               	addwf	??_LCD_DrawText^0,w,c
 17494  00200E  6E3B               	movwf	LCD_DrawText@posXEnd^0,c
 17495  002010  0E00               	movlw	0
 17496  002012  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17497  002014  6E3C               	movwf	(LCD_DrawText@posXEnd+1)^0,c
 17498  002016                     
 17499                           ;libraries/lcd_highlevel.c: 752:     PORTA = posXEnd>>8; LATC3 = 0; LATC3 = 1;;
 17500  002016  503C               	movf	(LCD_DrawText@posXEnd+1)^0,w,c
 17501  002018  6E80               	movwf	128,c	;volatile
 17502  00201A  968B               	bcf	3979,3,c	;volatile
 17503  00201C  868B               	bsf	3979,3,c	;volatile
 17504  00201E                     
 17505                           ;libraries/lcd_highlevel.c: 753:     PORTA = posXEnd; LATC3 = 0; LATC3 = 1;;
 17506  00201E  C03B  FF80         	movff	LCD_DrawText@posXEnd,3968	;volatile
 17507  002022  968B               	bcf	3979,3,c	;volatile
 17508  002024  868B               	bsf	3979,3,c	;volatile
 17509  002026                     
 17510                           ;libraries/lcd_highlevel.c: 755:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17511  002026  0E2B               	movlw	43
 17512  002028  6E80               	movwf	128,c	;volatile
 17513  00202A  988B               	bcf	3979,4,c	;volatile
 17514  00202C  968B               	bcf	3979,3,c	;volatile
 17515  00202E  868B               	bsf	3979,3,c	;volatile
 17516  002030  888B               	bsf	3979,4,c	;volatile
 17517  002032                     
 17518                           ;libraries/lcd_highlevel.c: 756:     PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 17519  002032  5028               	movf	(LCD_DrawText@posY+1)^0,w,c
 17520  002034  6E80               	movwf	128,c	;volatile
 17521  002036  968B               	bcf	3979,3,c	;volatile
 17522  002038  868B               	bsf	3979,3,c	;volatile
 17523  00203A                     
 17524                           ;libraries/lcd_highlevel.c: 757:     PORTA = posY; LATC3 = 0; LATC3 = 1;;
 17525  00203A  C027  FF80         	movff	LCD_DrawText@posY,3968	;volatile
 17526  00203E  968B               	bcf	3979,3,c	;volatile
 17527  002040  868B               	bsf	3979,3,c	;volatile
 17528  002042                     
 17529                           ;libraries/lcd_highlevel.c: 758:     posYEnd = posY + font->height-1;
 17530  002042  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 17531  002046  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 17532  00204A                     	if	0	;tblptru may be non-zero
 17533  00204A                     	endif
 17534  00204A                     	if	0	;tblptru may be non-zero
 17535  00204A                     	endif
 17536  00204A  0008               	tblrd		*
 17537  00204C  50F5               	movf	tablat,w,c
 17538  00204E  2427               	addwf	LCD_DrawText@posY^0,w,c
 17539  002050  6E2D               	movwf	??_LCD_DrawText^0,c
 17540  002052  0E00               	movlw	0
 17541  002054  2028               	addwfc	(LCD_DrawText@posY+1)^0,w,c
 17542  002056  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17543  002058  0EFF               	movlw	255
 17544  00205A  242D               	addwf	??_LCD_DrawText^0,w,c
 17545  00205C  6E39               	movwf	LCD_DrawText@posYEnd^0,c
 17546  00205E  0EFF               	movlw	255
 17547  002060  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17548  002062  6E3A               	movwf	(LCD_DrawText@posYEnd+1)^0,c
 17549  002064                     
 17550                           ;libraries/lcd_highlevel.c: 759:     PORTA = posYEnd>>8; LATC3 = 0; LATC3 = 1;;
 17551  002064  503A               	movf	(LCD_DrawText@posYEnd+1)^0,w,c
 17552  002066  6E80               	movwf	128,c	;volatile
 17553  002068  968B               	bcf	3979,3,c	;volatile
 17554  00206A  868B               	bsf	3979,3,c	;volatile
 17555  00206C                     
 17556                           ;libraries/lcd_highlevel.c: 760:     PORTA = posYEnd; LATC3 = 0; LATC3 = 1;;
 17557  00206C  C039  FF80         	movff	LCD_DrawText@posYEnd,3968	;volatile
 17558  002070  968B               	bcf	3979,3,c	;volatile
 17559  002072  868B               	bsf	3979,3,c	;volatile
 17560  002074                     
 17561                           ;libraries/lcd_highlevel.c: 761:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17562  002074  0E2C               	movlw	44
 17563  002076  6E80               	movwf	128,c	;volatile
 17564  002078  988B               	bcf	3979,4,c	;volatile
 17565  00207A  968B               	bcf	3979,3,c	;volatile
 17566  00207C  868B               	bsf	3979,3,c	;volatile
 17567  00207E  888B               	bsf	3979,4,c	;volatile
 17568  002080                     
 17569                           ;libraries/lcd_highlevel.c: 763:     for(y=0;y<font->height;y++)
 17570  002080  0E00               	movlw	0
 17571  002082  6E3D               	movwf	LCD_DrawText@y^0,c
 17572  002084  EFDB  F010         	goto	l8865
 17573  002088                     l8803:
 17574                           
 17575                           ;libraries/lcd_highlevel.c: 764:     {;libraries/lcd_highlevel.c: 765:       yOffset = o
      +                          ffset + (y * ((width+7)/8));
 17576  002088  C03D  F01A         	movff	LCD_DrawText@y,___wmul@multiplier
 17577  00208C  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17578  00208E  0E00               	movlw	0
 17579  002090  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17580  002092  0E08               	movlw	8
 17581  002094  6E14               	movwf	___awdiv@divisor^0,c
 17582  002096  0E07               	movlw	7
 17583  002098  2441               	addwf	LCD_DrawText@width^0,w,c
 17584  00209A  6E12               	movwf	___awdiv@dividend^0,c
 17585  00209C  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17586  00209E  0E00               	movlw	0
 17587  0020A0  2213               	addwfc	(___awdiv@dividend+1)^0,f,c
 17588  0020A2  ECD7  F028         	call	___awdiv	;wreg free
 17589  0020A6  C012  F01C         	movff	?___awdiv,___wmul@multiplicand
 17590  0020AA  C013  F01D         	movff	?___awdiv+1,___wmul@multiplicand+1
 17591  0020AE  EC45  F031         	call	___wmul	;wreg free
 17592  0020B2  5033               	movf	LCD_DrawText@offset^0,w,c
 17593  0020B4  241A               	addwf	?___wmul^0,w,c
 17594  0020B6  6E35               	movwf	LCD_DrawText@yOffset^0,c
 17595  0020B8  5034               	movf	(LCD_DrawText@offset+1)^0,w,c
 17596  0020BA  201B               	addwfc	(?___wmul+1)^0,w,c
 17597  0020BC  6E36               	movwf	(LCD_DrawText@yOffset+1)^0,c
 17598  0020BE                     
 17599                           ;libraries/lcd_highlevel.c: 766:       for(x=0;x<width;x++)
 17600  0020BE  0E00               	movlw	0
 17601  0020C0  6E40               	movwf	LCD_DrawText@x^0,c
 17602  0020C2  EFBA  F010         	goto	l8839
 17603  0020C6                     l8807:
 17604                           
 17605                           ;libraries/lcd_highlevel.c: 767:       {;libraries/lcd_highlevel.c: 768:         fontByt
      +                          e = font->bitmap[yOffset + (x/8)];
 17606  0020C6  C040  F012         	movff	LCD_DrawText@x,___awdiv@dividend
 17607  0020CA  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17608  0020CC  0E00               	movlw	0
 17609  0020CE  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17610  0020D0  0E08               	movlw	8
 17611  0020D2  6E14               	movwf	___awdiv@divisor^0,c
 17612  0020D4  ECD7  F028         	call	___awdiv	;wreg free
 17613  0020D8  0E05               	movlw	5
 17614  0020DA  2422               	addwf	LCD_DrawText@font^0,w,c
 17615  0020DC  6E2D               	movwf	??_LCD_DrawText^0,c
 17616  0020DE  0E00               	movlw	0
 17617  0020E0  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17618  0020E2  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17619  0020E4  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17620  0020E8  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17621  0020EC                     	if	0	;tblptru may be non-zero
 17622  0020EC                     	endif
 17623  0020EC                     	if	0	;tblptru may be non-zero
 17624  0020EC                     	endif
 17625  0020EC  0009               	tblrd		*+
 17626  0020EE  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17627  0020F2  0009               	tblrd		*+
 17628  0020F4  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17629  0020F8  5012               	movf	?___awdiv^0,w,c
 17630  0020FA  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17631  0020FC  5013               	movf	(?___awdiv+1)^0,w,c
 17632  0020FE  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17633  002100  5035               	movf	LCD_DrawText@yOffset^0,w,c
 17634  002102  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17635  002104  5036               	movf	(LCD_DrawText@yOffset+1)^0,w,c
 17636  002106  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17637  002108  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17638  00210C  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17639  002110                     	if	0	;tblptru may be non-zero
 17640  002110                     	endif
 17641  002110                     	if	0	;tblptru may be non-zero
 17642  002110                     	endif
 17643  002110  0008               	tblrd		*
 17644  002112  CFF5 F037          	movff	tablat,LCD_DrawText@fontByte
 17645  002116                     
 17646                           ;libraries/lcd_highlevel.c: 769:         fontPixel = fontByte & (0x80 >> (x%8));
 17647  002116  C040  F02D         	movff	LCD_DrawText@x,??_LCD_DrawText
 17648  00211A  0E07               	movlw	7
 17649  00211C  162D               	andwf	??_LCD_DrawText^0,f,c
 17650  00211E  0E80               	movlw	128
 17651  002120  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17652  002122  0E00               	movlw	0
 17653  002124  6E2F               	movwf	(??_LCD_DrawText+2)^0,c
 17654  002126  2A2D               	incf	??_LCD_DrawText^0,f,c
 17655  002128  EF99  F010         	goto	u6244
 17656  00212C                     u6245:
 17657  00212C  342F               	rlcf	(??_LCD_DrawText+2)^0,w,c
 17658  00212E  322F               	rrcf	(??_LCD_DrawText+2)^0,f,c
 17659  002130  322E               	rrcf	(??_LCD_DrawText+1)^0,f,c
 17660  002132                     u6244:
 17661  002132  2E2D               	decfsz	??_LCD_DrawText^0,f,c
 17662  002134  EF96  F010         	goto	u6245
 17663  002138  502E               	movf	(??_LCD_DrawText+1)^0,w,c
 17664  00213A  1437               	andwf	LCD_DrawText@fontByte^0,w,c
 17665  00213C  6E38               	movwf	LCD_DrawText@fontPixel^0,c
 17666  00213E                     
 17667                           ;libraries/lcd_highlevel.c: 770:         if(fontPixel != 0)
 17668  00213E  5038               	movf	LCD_DrawText@fontPixel^0,w,c
 17669  002140  B4D8               	btfsc	status,2,c
 17670  002142  EFA5  F010         	goto	u6251
 17671  002146  EFA7  F010         	goto	u6250
 17672  00214A                     u6251:
 17673  00214A  EFB1  F010         	goto	l8825
 17674  00214E                     u6250:
 17675  00214E                     
 17676                           ;libraries/lcd_highlevel.c: 771:         {;libraries/lcd_highlevel.c: 772:           POR
      +                          TA = color>>8; LATC3 = 0; LATC3 = 1;;
 17677  00214E  502A               	movf	(LCD_DrawText@color+1)^0,w,c
 17678  002150  6E80               	movwf	128,c	;volatile
 17679  002152  968B               	bcf	3979,3,c	;volatile
 17680  002154  868B               	bsf	3979,3,c	;volatile
 17681  002156                     
 17682                           ;libraries/lcd_highlevel.c: 773:           PORTA = color; LATC3 = 0; LATC3 = 1;;
 17683  002156  C029  FF80         	movff	LCD_DrawText@color,3968	;volatile
 17684  00215A                     l8821:
 17685  00215A  968B               	bcf	3979,3,c	;volatile
 17686  00215C  868B               	bsf	3979,3,c	;volatile
 17687                           
 17688                           ;libraries/lcd_highlevel.c: 774:         }
 17689  00215E  EFB9  F010         	goto	l8837
 17690  002162                     l8825:
 17691                           
 17692                           ;libraries/lcd_highlevel.c: 776:         {;libraries/lcd_highlevel.c: 777:           POR
      +                          TA = bg_color>>8; LATC3 = 0; LATC3 = 1;;
 17693  002162  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 17694  002164  6E80               	movwf	128,c	;volatile
 17695  002166  968B               	bcf	3979,3,c	;volatile
 17696  002168  868B               	bsf	3979,3,c	;volatile
 17697  00216A                     
 17698                           ;libraries/lcd_highlevel.c: 778:           PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 17699  00216A  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 17700  00216E  EFAD  F010         	goto	l8821
 17701  002172                     l8837:
 17702                           
 17703                           ;libraries/lcd_highlevel.c: 780:       }
 17704  002172  2A40               	incf	LCD_DrawText@x^0,f,c
 17705  002174                     l8839:
 17706  002174  5041               	movf	LCD_DrawText@width^0,w,c
 17707  002176  5C40               	subwf	LCD_DrawText@x^0,w,c
 17708  002178  A0D8               	btfss	status,0,c
 17709  00217A  EFC1  F010         	goto	u6261
 17710  00217E  EFC3  F010         	goto	u6260
 17711  002182                     u6261:
 17712  002182  EF63  F010         	goto	l8807
 17713  002186                     u6260:
 17714  002186                     
 17715                           ;libraries/lcd_highlevel.c: 781:       for(x=0;x<2;x++)
 17716  002186  0E00               	movlw	0
 17717  002188  6E40               	movwf	LCD_DrawText@x^0,c
 17718  00218A                     l8843:
 17719  00218A  0E01               	movlw	1
 17720  00218C  6440               	cpfsgt	LCD_DrawText@x^0,c
 17721  00218E  EFCB  F010         	goto	u6271
 17722  002192  EFCD  F010         	goto	u6270
 17723  002196                     u6271:
 17724  002196  EFCF  F010         	goto	l8847
 17725  00219A                     u6270:
 17726  00219A  EFDA  F010         	goto	l8863
 17727  00219E                     l8847:
 17728                           
 17729                           ;libraries/lcd_highlevel.c: 782:       {;libraries/lcd_highlevel.c: 783:         PORTA =
      +                           bg_color>>8; LATC3 = 0; LATC3 = 1;;
 17730  00219E  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 17731  0021A0  6E80               	movwf	128,c	;volatile
 17732  0021A2  968B               	bcf	3979,3,c	;volatile
 17733  0021A4  868B               	bsf	3979,3,c	;volatile
 17734  0021A6                     
 17735                           ;libraries/lcd_highlevel.c: 784:         PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 17736  0021A6  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 17737  0021AA  968B               	bcf	3979,3,c	;volatile
 17738  0021AC  868B               	bsf	3979,3,c	;volatile
 17739  0021AE                     
 17740                           ;libraries/lcd_highlevel.c: 785:       }
 17741  0021AE  2A40               	incf	LCD_DrawText@x^0,f,c
 17742  0021B0  EFC5  F010         	goto	l8843
 17743  0021B4                     l8863:
 17744                           
 17745                           ;libraries/lcd_highlevel.c: 786:     }
 17746  0021B4  2A3D               	incf	LCD_DrawText@y^0,f,c
 17747  0021B6                     l8865:
 17748  0021B6  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 17749  0021BA  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 17750  0021BE                     	if	0	;tblptru may be non-zero
 17751  0021BE                     	endif
 17752  0021BE                     	if	0	;tblptru may be non-zero
 17753  0021BE                     	endif
 17754  0021BE  0009               	tblrd		*+
 17755  0021C0  50F5               	movf	tablat,w,c
 17756  0021C2  5C3D               	subwf	LCD_DrawText@y^0,w,c
 17757  0021C4  A0D8               	btfss	status,0,c
 17758  0021C6  EFE7  F010         	goto	u6281
 17759  0021CA  EFE9  F010         	goto	u6280
 17760  0021CE                     u6281:
 17761  0021CE  EF44  F010         	goto	l8803
 17762  0021D2                     u6280:
 17763  0021D2                     
 17764                           ;libraries/lcd_highlevel.c: 787:     posX = posX + 2 + width;
 17765  0021D2  5041               	movf	LCD_DrawText@width^0,w,c
 17766  0021D4  2425               	addwf	LCD_DrawText@posX^0,w,c
 17767  0021D6  6E2D               	movwf	??_LCD_DrawText^0,c
 17768  0021D8  0E00               	movlw	0
 17769  0021DA  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 17770  0021DC  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17771  0021DE  0E02               	movlw	2
 17772  0021E0  242D               	addwf	??_LCD_DrawText^0,w,c
 17773  0021E2  6E25               	movwf	LCD_DrawText@posX^0,c
 17774  0021E4  0E00               	movlw	0
 17775  0021E6  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17776  0021E8  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17777  0021EA                     
 17778                           ;libraries/lcd_highlevel.c: 788:     msg++;
 17779  0021EA  4A20               	infsnz	LCD_DrawText@msg^0,f,c
 17780  0021EC  2A21               	incf	(LCD_DrawText@msg+1)^0,f,c
 17781  0021EE                     
 17782                           ;libraries/lcd_highlevel.c: 789:  }while(*msg != 0);
 17783  0021EE  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17784  0021F2  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17785  0021F6  6AF8               	clrf	tblptru,c
 17786  0021F8  0E05               	movlw	(high __ramtop+-1)
 17787  0021FA  64F7               	cpfsgt	tblptrh,c
 17788  0021FC  D003               	bra	u6297
 17789  0021FE  0008               	tblrd		*
 17790  002200  50F5               	movf	tablat,w,c
 17791  002202  D005               	bra	u6290
 17792  002204                     u6297:
 17793  002204  CFF6 FFE1          	movff	tblptrl,fsr1l
 17794  002208  CFF7 FFE2          	movff	tblptrh,fsr1h
 17795  00220C  50E7               	movf	indf1,w,c
 17796  00220E                     u6290:
 17797  00220E  0900               	iorlw	0
 17798  002210  A4D8               	btfss	status,2,c
 17799  002212  EF0D  F011         	goto	u6301
 17800  002216  EF0F  F011         	goto	u6300
 17801  00221A                     u6301:
 17802  00221A  EF7D  F00F         	goto	l8713
 17803  00221E                     u6300:
 17804  00221E  0012               	return		;funcret
 17805  002220                     __end_of_LCD_DrawText:
 17806                           	callstack 0
 17807                           
 17808 ;; *************** function _strlen *****************
 17809 ;; Defined at:
 17810 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 17811 ;; Parameters:    Size  Location     Type
 17812 ;;  s               2   17[COMRAM] PTR const unsigned char 
 17813 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 17814 ;;		 -> STR_13(13), STR_12(11), STR_11(8), STR_10(9), 
 17815 ;;		 -> STR_9(4), STR_8(4), STR_7(8), STR_6(9), 
 17816 ;;		 -> STR_5(9), STR_4(11), g1(239), STR_1(10), 
 17817 ;; Auto vars:     Size  Location     Type
 17818 ;;  a               2   19[COMRAM] PTR const unsigned char 
 17819 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 17820 ;;		 -> STR_13(13), STR_12(11), STR_11(8), STR_10(9), 
 17821 ;;		 -> STR_9(4), STR_8(4), STR_7(8), STR_6(9), 
 17822 ;;		 -> STR_5(9), STR_4(11), g1(239), STR_1(10), 
 17823 ;; Return value:  Size  Location     Type
 17824 ;;                  2   17[COMRAM] unsigned int 
 17825 ;; Registers used:
 17826 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 17827 ;; Tracked objects:
 17828 ;;		On entry : 0/0
 17829 ;;		On exit  : 0/0
 17830 ;;		Unchanged: 0/0
 17831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17832 ;;      Params:         2       0       0       0       0       0       0
 17833 ;;      Locals:         2       0       0       0       0       0       0
 17834 ;;      Temps:          0       0       0       0       0       0       0
 17835 ;;      Totals:         4       0       0       0       0       0       0
 17836 ;;Total ram usage:        4 bytes
 17837 ;; Hardware stack levels used: 1
 17838 ;; Hardware stack levels required when called: 4
 17839 ;; This function calls:
 17840 ;;		Nothing
 17841 ;; This function is called by:
 17842 ;;		_LCD_ButtonDraw
 17843 ;;		_LCD_DrawText
 17844 ;;		_pad
 17845 ;; This function uses a non-reentrant model
 17846 ;;
 17847                           
 17848                           	psect	text69
 17849  006030                     __ptext69:
 17850                           	callstack 0
 17851  006030                     _strlen:
 17852                           	callstack 16
 17853  006030  C012  F014         	movff	strlen@s,strlen@a
 17854  006034  C013  F015         	movff	strlen@s+1,strlen@a+1
 17855  006038  EF20  F030         	goto	l7911
 17856  00603C                     l7909:
 17857  00603C  4A12               	infsnz	strlen@s^0,f,c
 17858  00603E  2A13               	incf	(strlen@s+1)^0,f,c
 17859  006040                     l7911:
 17860  006040  C012  FFF6         	movff	strlen@s,tblptrl
 17861  006044  C013  FFF7         	movff	strlen@s+1,tblptrh
 17862  006048  6AF8               	clrf	tblptru,c
 17863  00604A  0E05               	movlw	(high __ramtop+-1)
 17864  00604C  64F7               	cpfsgt	tblptrh,c
 17865  00604E  D003               	bra	u5467
 17866  006050  0008               	tblrd		*
 17867  006052  50F5               	movf	tablat,w,c
 17868  006054  D005               	bra	u5460
 17869  006056                     u5467:
 17870  006056  CFF6 FFE1          	movff	tblptrl,fsr1l
 17871  00605A  CFF7 FFE2          	movff	tblptrh,fsr1h
 17872  00605E  50E7               	movf	indf1,w,c
 17873  006060                     u5460:
 17874  006060  0900               	iorlw	0
 17875  006062  A4D8               	btfss	status,2,c
 17876  006064  EF36  F030         	goto	u5471
 17877  006068  EF38  F030         	goto	u5470
 17878  00606C                     u5471:
 17879  00606C  EF1E  F030         	goto	l7909
 17880  006070                     u5470:
 17881  006070  5014               	movf	strlen@a^0,w,c
 17882  006072  5C12               	subwf	strlen@s^0,w,c
 17883  006074  6E12               	movwf	?_strlen^0,c
 17884  006076  5015               	movf	(strlen@a+1)^0,w,c
 17885  006078  5813               	subwfb	(strlen@s+1)^0,w,c
 17886  00607A  6E13               	movwf	(?_strlen+1)^0,c
 17887  00607C  0012               	return		;funcret
 17888  00607E                     __end_of_strlen:
 17889                           	callstack 0
 17890                           
 17891 ;; *************** function ___wmul *****************
 17892 ;; Defined at:
 17893 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 17894 ;; Parameters:    Size  Location     Type
 17895 ;;  multiplier      2   25[COMRAM] unsigned int 
 17896 ;;  multiplicand    2   27[COMRAM] unsigned int 
 17897 ;; Auto vars:     Size  Location     Type
 17898 ;;  product         2   29[COMRAM] unsigned int 
 17899 ;; Return value:  Size  Location     Type
 17900 ;;                  2   25[COMRAM] unsigned int 
 17901 ;; Registers used:
 17902 ;;		wreg, status,2, status,0, prodl, prodh
 17903 ;; Tracked objects:
 17904 ;;		On entry : 0/0
 17905 ;;		On exit  : 0/0
 17906 ;;		Unchanged: 0/0
 17907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17908 ;;      Params:         4       0       0       0       0       0       0
 17909 ;;      Locals:         2       0       0       0       0       0       0
 17910 ;;      Temps:          0       0       0       0       0       0       0
 17911 ;;      Totals:         6       0       0       0       0       0       0
 17912 ;;Total ram usage:        6 bytes
 17913 ;; Hardware stack levels used: 1
 17914 ;; Hardware stack levels required when called: 4
 17915 ;; This function calls:
 17916 ;;		Nothing
 17917 ;; This function is called by:
 17918 ;;		_LCD_SliderUpdate
 17919 ;;		_LCD_DrawText
 17920 ;;		_LCD_Bitmap
 17921 ;;		_XF_init
 17922 ;; This function uses a non-reentrant model
 17923 ;;
 17924                           
 17925                           	psect	text70
 17926  00628A                     __ptext70:
 17927                           	callstack 0
 17928  00628A                     ___wmul:
 17929                           	callstack 21
 17930  00628A  501A               	movf	___wmul@multiplier^0,w,c
 17931  00628C  021C               	mulwf	___wmul@multiplicand^0,c
 17932  00628E  CFF3 F01E          	movff	prodl,___wmul@product
 17933  006292  CFF4 F01F          	movff	prodh,___wmul@product+1
 17934  006296  501A               	movf	___wmul@multiplier^0,w,c
 17935  006298  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 17936  00629A  50F3               	movf	243,w,c
 17937  00629C  261F               	addwf	(___wmul@product+1)^0,f,c
 17938  00629E  501B               	movf	(___wmul@multiplier+1)^0,w,c
 17939  0062A0  021C               	mulwf	___wmul@multiplicand^0,c
 17940  0062A2  50F3               	movf	243,w,c
 17941  0062A4  261F               	addwf	(___wmul@product+1)^0,f,c
 17942  0062A6  C01E  F01A         	movff	___wmul@product,?___wmul
 17943  0062AA  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 17944  0062AE  0012               	return		;funcret
 17945  0062B0                     __end_of___wmul:
 17946                           	callstack 0
 17947                           
 17948 ;; *************** function ___awdiv *****************
 17949 ;; Defined at:
 17950 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 17951 ;; Parameters:    Size  Location     Type
 17952 ;;  dividend        2   17[COMRAM] int 
 17953 ;;  divisor         2   19[COMRAM] int 
 17954 ;; Auto vars:     Size  Location     Type
 17955 ;;  quotient        2   23[COMRAM] int 
 17956 ;;  sign            1   22[COMRAM] unsigned char 
 17957 ;;  counter         1   21[COMRAM] unsigned char 
 17958 ;; Return value:  Size  Location     Type
 17959 ;;                  2   17[COMRAM] int 
 17960 ;; Registers used:
 17961 ;;		wreg, status,2, status,0
 17962 ;; Tracked objects:
 17963 ;;		On entry : 0/0
 17964 ;;		On exit  : 0/0
 17965 ;;		Unchanged: 0/0
 17966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17967 ;;      Params:         4       0       0       0       0       0       0
 17968 ;;      Locals:         4       0       0       0       0       0       0
 17969 ;;      Temps:          0       0       0       0       0       0       0
 17970 ;;      Totals:         8       0       0       0       0       0       0
 17971 ;;Total ram usage:        8 bytes
 17972 ;; Hardware stack levels used: 1
 17973 ;; Hardware stack levels required when called: 4
 17974 ;; This function calls:
 17975 ;;		Nothing
 17976 ;; This function is called by:
 17977 ;;		_LCD_ButtonDraw
 17978 ;;		_LCD_DrawText
 17979 ;; This function uses a non-reentrant model
 17980 ;;
 17981                           
 17982                           	psect	text71
 17983  0051AE                     __ptext71:
 17984                           	callstack 0
 17985  0051AE                     ___awdiv:
 17986                           	callstack 20
 17987  0051AE  0E00               	movlw	0
 17988  0051B0  6E17               	movwf	___awdiv@sign^0,c
 17989  0051B2  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
 17990  0051B4  EFE0  F028         	goto	u5970
 17991  0051B8  EFDE  F028         	goto	u5971
 17992  0051BC                     u5971:
 17993  0051BC  EFE6  F028         	goto	l8543
 17994  0051C0                     u5970:
 17995  0051C0  6C14               	negf	___awdiv@divisor^0,c
 17996  0051C2  1E15               	comf	(___awdiv@divisor+1)^0,f,c
 17997  0051C4  B0D8               	btfsc	status,0,c
 17998  0051C6  2A15               	incf	(___awdiv@divisor+1)^0,f,c
 17999  0051C8  0E01               	movlw	1
 18000  0051CA  6E17               	movwf	___awdiv@sign^0,c
 18001  0051CC                     l8543:
 18002  0051CC  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
 18003  0051CE  EFED  F028         	goto	u5980
 18004  0051D2  EFEB  F028         	goto	u5981
 18005  0051D6                     u5981:
 18006  0051D6  EFF3  F028         	goto	l8549
 18007  0051DA                     u5980:
 18008  0051DA  6C12               	negf	___awdiv@dividend^0,c
 18009  0051DC  1E13               	comf	(___awdiv@dividend+1)^0,f,c
 18010  0051DE  B0D8               	btfsc	status,0,c
 18011  0051E0  2A13               	incf	(___awdiv@dividend+1)^0,f,c
 18012  0051E2  0E01               	movlw	1
 18013  0051E4  1A17               	xorwf	___awdiv@sign^0,f,c
 18014  0051E6                     l8549:
 18015  0051E6  0E00               	movlw	0
 18016  0051E8  6E19               	movwf	(___awdiv@quotient+1)^0,c
 18017  0051EA  0E00               	movlw	0
 18018  0051EC  6E18               	movwf	___awdiv@quotient^0,c
 18019  0051EE  5014               	movf	___awdiv@divisor^0,w,c
 18020  0051F0  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
 18021  0051F2  B4D8               	btfsc	status,2,c
 18022  0051F4  EFFE  F028         	goto	u5991
 18023  0051F8  EF00  F029         	goto	u5990
 18024  0051FC                     u5991:
 18025  0051FC  EF28  F029         	goto	l8571
 18026  005200                     u5990:
 18027  005200  0E01               	movlw	1
 18028  005202  6E16               	movwf	___awdiv@counter^0,c
 18029  005204  EF08  F029         	goto	l8557
 18030  005208                     l8555:
 18031  005208  90D8               	bcf	status,0,c
 18032  00520A  3614               	rlcf	___awdiv@divisor^0,f,c
 18033  00520C  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
 18034  00520E  2A16               	incf	___awdiv@counter^0,f,c
 18035  005210                     l8557:
 18036  005210  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
 18037  005212  EF0D  F029         	goto	u6001
 18038  005216  EF0F  F029         	goto	u6000
 18039  00521A                     u6001:
 18040  00521A  EF04  F029         	goto	l8555
 18041  00521E                     u6000:
 18042  00521E                     l8559:
 18043  00521E  90D8               	bcf	status,0,c
 18044  005220  3618               	rlcf	___awdiv@quotient^0,f,c
 18045  005222  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
 18046  005224  5014               	movf	___awdiv@divisor^0,w,c
 18047  005226  5C12               	subwf	___awdiv@dividend^0,w,c
 18048  005228  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18049  00522A  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
 18050  00522C  A0D8               	btfss	status,0,c
 18051  00522E  EF1B  F029         	goto	u6011
 18052  005232  EF1D  F029         	goto	u6010
 18053  005236                     u6011:
 18054  005236  EF22  F029         	goto	l8567
 18055  00523A                     u6010:
 18056  00523A  5014               	movf	___awdiv@divisor^0,w,c
 18057  00523C  5E12               	subwf	___awdiv@dividend^0,f,c
 18058  00523E  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18059  005240  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
 18060  005242  8018               	bsf	___awdiv@quotient^0,0,c
 18061  005244                     l8567:
 18062  005244  90D8               	bcf	status,0,c
 18063  005246  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
 18064  005248  3214               	rrcf	___awdiv@divisor^0,f,c
 18065  00524A  2E16               	decfsz	___awdiv@counter^0,f,c
 18066  00524C  EF0F  F029         	goto	l8559
 18067  005250                     l8571:
 18068  005250  5017               	movf	___awdiv@sign^0,w,c
 18069  005252  B4D8               	btfsc	status,2,c
 18070  005254  EF2E  F029         	goto	u6021
 18071  005258  EF30  F029         	goto	u6020
 18072  00525C                     u6021:
 18073  00525C  EF34  F029         	goto	l8575
 18074  005260                     u6020:
 18075  005260  6C18               	negf	___awdiv@quotient^0,c
 18076  005262  1E19               	comf	(___awdiv@quotient+1)^0,f,c
 18077  005264  B0D8               	btfsc	status,0,c
 18078  005266  2A19               	incf	(___awdiv@quotient+1)^0,f,c
 18079  005268                     l8575:
 18080  005268  C018  F012         	movff	___awdiv@quotient,?___awdiv
 18081  00526C  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
 18082  005270  0012               	return		;funcret
 18083  005272                     __end_of___awdiv:
 18084                           	callstack 0
 18085                           
 18086 ;; *************** function _Paddle_draw *****************
 18087 ;; Defined at:
 18088 ;;		line 55 in file "class/paddle.c"
 18089 ;; Parameters:    Size  Location     Type
 18090 ;;  p               2   36[COMRAM] PTR struct Paddle
 18091 ;;		 -> g1(239), 
 18092 ;; Auto vars:     Size  Location     Type
 18093 ;;		None
 18094 ;; Return value:  Size  Location     Type
 18095 ;;                  1    wreg      void 
 18096 ;; Registers used:
 18097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18098 ;; Tracked objects:
 18099 ;;		On entry : 0/0
 18100 ;;		On exit  : 0/0
 18101 ;;		Unchanged: 0/0
 18102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18103 ;;      Params:         2       0       0       0       0       0       0
 18104 ;;      Locals:         0       0       0       0       0       0       0
 18105 ;;      Temps:          4       0       0       0       0       0       0
 18106 ;;      Totals:         6       0       0       0       0       0       0
 18107 ;;Total ram usage:        6 bytes
 18108 ;; Hardware stack levels used: 1
 18109 ;; Hardware stack levels required when called: 5
 18110 ;; This function calls:
 18111 ;;		_LCD_DrawRect
 18112 ;; This function is called by:
 18113 ;;		_Menu_inGameDraw
 18114 ;;		_displayController
 18115 ;; This function uses a non-reentrant model
 18116 ;;
 18117                           
 18118                           	psect	text72
 18119  004358                     __ptext72:
 18120                           	callstack 0
 18121  004358                     _Paddle_draw:
 18122                           	callstack 21
 18123  004358                     
 18124                           ;class/paddle.c: 55: void Paddle_draw(struct Paddle* p);class/paddle.c: 56: {;class/padd
      +                          le.c: 58:     LCD_DrawRect(p->oldx,p->oldy,p->oldx+50,p->oldy+10,1,0b0000000000000000);
 18125  004358  EE20 F004          	lfsr	2,4
 18126  00435C  5025               	movf	Paddle_draw@p^0,w,c
 18127  00435E  26D9               	addwf	fsr2l,f,c
 18128  004360  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18129  004362  22DA               	addwfc	fsr2h,f,c
 18130  004364  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18131  004368  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18132  00436C  EE20 F006          	lfsr	2,6
 18133  004370  5025               	movf	Paddle_draw@p^0,w,c
 18134  004372  26D9               	addwf	fsr2l,f,c
 18135  004374  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18136  004376  22DA               	addwfc	fsr2h,f,c
 18137  004378  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18138  00437C  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18139  004380  EE20 F004          	lfsr	2,4
 18140  004384  5025               	movf	Paddle_draw@p^0,w,c
 18141  004386  26D9               	addwf	fsr2l,f,c
 18142  004388  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18143  00438A  22DA               	addwfc	fsr2h,f,c
 18144  00438C  CFDE F027          	movff	postinc2,??_Paddle_draw
 18145  004390  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18146  004394  0E32               	movlw	50
 18147  004396  2427               	addwf	??_Paddle_draw^0,w,c
 18148  004398  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18149  00439A  0E00               	movlw	0
 18150  00439C  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18151  00439E  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18152  0043A0  EE20 F006          	lfsr	2,6
 18153  0043A4  5025               	movf	Paddle_draw@p^0,w,c
 18154  0043A6  26D9               	addwf	fsr2l,f,c
 18155  0043A8  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18156  0043AA  22DA               	addwfc	fsr2h,f,c
 18157  0043AC  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18158  0043B0  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18159  0043B4  0E0A               	movlw	10
 18160  0043B6  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18161  0043B8  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18162  0043BA  0E00               	movlw	0
 18163  0043BC  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18164  0043BE  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18165  0043C0  0E01               	movlw	1
 18166  0043C2  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18167  0043C4  0E00               	movlw	0
 18168  0043C6  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18169  0043C8  0E00               	movlw	0
 18170  0043CA  6E1B               	movwf	LCD_DrawRect@color^0,c
 18171  0043CC  EC84  F016         	call	_LCD_DrawRect	;wreg free
 18172  0043D0                     
 18173                           ;class/paddle.c: 60:     p->oldx=p->x;
 18174  0043D0  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18175  0043D4  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18176  0043D8  EE10 F004          	lfsr	1,4
 18177  0043DC  5025               	movf	Paddle_draw@p^0,w,c
 18178  0043DE  26E1               	addwf	fsr1l,f,c
 18179  0043E0  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18180  0043E2  22E2               	addwfc	fsr1h,f,c
 18181  0043E4  CFDE FFE6          	movff	postinc2,postinc1
 18182  0043E8  CFDD FFE5          	movff	postdec2,postdec1
 18183  0043EC                     
 18184                           ;class/paddle.c: 61:     p->oldy=p->y;
 18185  0043EC  EE20 F002          	lfsr	2,2
 18186  0043F0  5025               	movf	Paddle_draw@p^0,w,c
 18187  0043F2  26D9               	addwf	fsr2l,f,c
 18188  0043F4  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18189  0043F6  22DA               	addwfc	fsr2h,f,c
 18190  0043F8  EE10 F006          	lfsr	1,6
 18191  0043FC  5025               	movf	Paddle_draw@p^0,w,c
 18192  0043FE  26E1               	addwf	fsr1l,f,c
 18193  004400  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18194  004402  22E2               	addwfc	fsr1h,f,c
 18195  004404  CFDE FFE6          	movff	postinc2,postinc1
 18196  004408  CFDD FFE5          	movff	postdec2,postdec1
 18197                           
 18198                           ;class/paddle.c: 63:     LCD_DrawRect(p->x,p->y,p->x+50,p->y+10,1,p->color);
 18199  00440C  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18200  004410  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18201  004414  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18202  004418  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18203  00441C  EE20 F002          	lfsr	2,2
 18204  004420  5025               	movf	Paddle_draw@p^0,w,c
 18205  004422  26D9               	addwf	fsr2l,f,c
 18206  004424  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18207  004426  22DA               	addwfc	fsr2h,f,c
 18208  004428  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18209  00442C  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18210  004430  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18211  004434  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18212  004438  CFDE F027          	movff	postinc2,??_Paddle_draw
 18213  00443C  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18214  004440  0E32               	movlw	50
 18215  004442  2427               	addwf	??_Paddle_draw^0,w,c
 18216  004444  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18217  004446  0E00               	movlw	0
 18218  004448  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18219  00444A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18220  00444C  EE20 F002          	lfsr	2,2
 18221  004450  5025               	movf	Paddle_draw@p^0,w,c
 18222  004452  26D9               	addwf	fsr2l,f,c
 18223  004454  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18224  004456  22DA               	addwfc	fsr2h,f,c
 18225  004458  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18226  00445C  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18227  004460  0E0A               	movlw	10
 18228  004462  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18229  004464  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18230  004466  0E00               	movlw	0
 18231  004468  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18232  00446A  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18233  00446C  0E01               	movlw	1
 18234  00446E  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18235  004470  EE20 F008          	lfsr	2,8
 18236  004474  5025               	movf	Paddle_draw@p^0,w,c
 18237  004476  26D9               	addwf	fsr2l,f,c
 18238  004478  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18239  00447A  22DA               	addwfc	fsr2h,f,c
 18240  00447C  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 18241  004480  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 18242  004484  EC84  F016         	call	_LCD_DrawRect	;wreg free
 18243  004488  0012               	return		;funcret
 18244  00448A                     __end_of_Paddle_draw:
 18245                           	callstack 0
 18246                           
 18247 ;; *************** function _LCD_Fill *****************
 18248 ;; Defined at:
 18249 ;;		line 218 in file "libraries/lcd_highlevel.c"
 18250 ;; Parameters:    Size  Location     Type
 18251 ;;  color           2   17[COMRAM] unsigned short 
 18252 ;; Auto vars:     Size  Location     Type
 18253 ;;  page            2   23[COMRAM] unsigned short 
 18254 ;;  column          2   21[COMRAM] unsigned short 
 18255 ;;  colorL          1   20[COMRAM] unsigned char 
 18256 ;;  colorH          1   19[COMRAM] unsigned char 
 18257 ;; Return value:  Size  Location     Type
 18258 ;;                  1    wreg      void 
 18259 ;; Registers used:
 18260 ;;		wreg, status,2, status,0
 18261 ;; Tracked objects:
 18262 ;;		On entry : 0/0
 18263 ;;		On exit  : 0/0
 18264 ;;		Unchanged: 0/0
 18265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18266 ;;      Params:         2       0       0       0       0       0       0
 18267 ;;      Locals:         6       0       0       0       0       0       0
 18268 ;;      Temps:          0       0       0       0       0       0       0
 18269 ;;      Totals:         8       0       0       0       0       0       0
 18270 ;;Total ram usage:        8 bytes
 18271 ;; Hardware stack levels used: 1
 18272 ;; Hardware stack levels required when called: 4
 18273 ;; This function calls:
 18274 ;;		Nothing
 18275 ;; This function is called by:
 18276 ;;		_Factory_init
 18277 ;;		_Menu_welcomeDraw
 18278 ;;		_Menu_parametersDraw
 18279 ;;		_Menu_inGameDraw
 18280 ;;		_Menu_endGame
 18281 ;; This function uses a non-reentrant model
 18282 ;;
 18283                           
 18284                           	psect	text73
 18285  005334                     __ptext73:
 18286                           	callstack 0
 18287  005334                     _LCD_Fill:
 18288                           	callstack 21
 18289  005334                     
 18290                           ;libraries/lcd_highlevel.c: 218: void LCD_Fill(uint16_t color);libraries/lcd_highlevel.c
      +                          : 219: {;libraries/lcd_highlevel.c: 220:   uint16_t column;;libraries/lcd_highlevel.c: 2
      +                          21:   uint16_t page;;libraries/lcd_highlevel.c: 222:   uint8_t colorH, colorL;;libraries
      +                          /lcd_highlevel.c: 223:   colorH = color >> 8;
 18291  005334  5013               	movf	(LCD_Fill@color+1)^0,w,c
 18292  005336  6E14               	movwf	LCD_Fill@colorH^0,c
 18293  005338                     
 18294                           ;libraries/lcd_highlevel.c: 224:   colorL = color;
 18295  005338  C012  F015         	movff	LCD_Fill@color,LCD_Fill@colorL
 18296                           
 18297                           ;libraries/lcd_highlevel.c: 226:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18298  00533C  0E2A               	movlw	42
 18299  00533E  6E80               	movwf	128,c	;volatile
 18300  005340  988B               	bcf	3979,4,c	;volatile
 18301  005342  968B               	bcf	3979,3,c	;volatile
 18302  005344  868B               	bsf	3979,3,c	;volatile
 18303  005346  888B               	bsf	3979,4,c	;volatile
 18304                           
 18305                           ;libraries/lcd_highlevel.c: 227:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18306  005348  0E00               	movlw	0
 18307  00534A  6E80               	movwf	128,c	;volatile
 18308  00534C  968B               	bcf	3979,3,c	;volatile
 18309  00534E  868B               	bsf	3979,3,c	;volatile
 18310                           
 18311                           ;libraries/lcd_highlevel.c: 228:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18312  005350  0E00               	movlw	0
 18313  005352  6E80               	movwf	128,c	;volatile
 18314  005354  968B               	bcf	3979,3,c	;volatile
 18315  005356  868B               	bsf	3979,3,c	;volatile
 18316                           
 18317                           ;libraries/lcd_highlevel.c: 229:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18318  005358  0E00               	movlw	0
 18319  00535A  6E80               	movwf	128,c	;volatile
 18320  00535C  968B               	bcf	3979,3,c	;volatile
 18321  00535E  868B               	bsf	3979,3,c	;volatile
 18322                           
 18323                           ;libraries/lcd_highlevel.c: 230:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 18324  005360  0EEF               	movlw	239
 18325  005362  6E80               	movwf	128,c	;volatile
 18326  005364  968B               	bcf	3979,3,c	;volatile
 18327  005366  868B               	bsf	3979,3,c	;volatile
 18328                           
 18329                           ;libraries/lcd_highlevel.c: 232:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18330  005368  0E2B               	movlw	43
 18331  00536A  6E80               	movwf	128,c	;volatile
 18332  00536C  988B               	bcf	3979,4,c	;volatile
 18333  00536E  968B               	bcf	3979,3,c	;volatile
 18334  005370  868B               	bsf	3979,3,c	;volatile
 18335  005372  888B               	bsf	3979,4,c	;volatile
 18336                           
 18337                           ;libraries/lcd_highlevel.c: 233:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18338  005374  0E00               	movlw	0
 18339  005376  6E80               	movwf	128,c	;volatile
 18340  005378  968B               	bcf	3979,3,c	;volatile
 18341  00537A  868B               	bsf	3979,3,c	;volatile
 18342                           
 18343                           ;libraries/lcd_highlevel.c: 234:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18344  00537C  0E00               	movlw	0
 18345  00537E  6E80               	movwf	128,c	;volatile
 18346  005380  968B               	bcf	3979,3,c	;volatile
 18347  005382  868B               	bsf	3979,3,c	;volatile
 18348                           
 18349                           ;libraries/lcd_highlevel.c: 235:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18350  005384  0E01               	movlw	1
 18351  005386  6E80               	movwf	128,c	;volatile
 18352  005388  968B               	bcf	3979,3,c	;volatile
 18353  00538A  868B               	bsf	3979,3,c	;volatile
 18354                           
 18355                           ;libraries/lcd_highlevel.c: 236:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18356  00538C  0E3F               	movlw	63
 18357  00538E  6E80               	movwf	128,c	;volatile
 18358  005390  968B               	bcf	3979,3,c	;volatile
 18359  005392  868B               	bsf	3979,3,c	;volatile
 18360                           
 18361                           ;libraries/lcd_highlevel.c: 238:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18362  005394  0E2C               	movlw	44
 18363  005396  6E80               	movwf	128,c	;volatile
 18364  005398  988B               	bcf	3979,4,c	;volatile
 18365  00539A  968B               	bcf	3979,3,c	;volatile
 18366  00539C  868B               	bsf	3979,3,c	;volatile
 18367  00539E  888B               	bsf	3979,4,c	;volatile
 18368                           
 18369                           ;libraries/lcd_highlevel.c: 239:   for(column=0; column<320; column++)
 18370  0053A0  0E00               	movlw	0
 18371  0053A2  6E17               	movwf	(LCD_Fill@column+1)^0,c
 18372  0053A4  0E00               	movlw	0
 18373  0053A6  6E16               	movwf	LCD_Fill@column^0,c
 18374  0053A8                     l9373:
 18375                           
 18376                           ;libraries/lcd_highlevel.c: 240:   {;libraries/lcd_highlevel.c: 241:     for(page=0; pag
      +                          e<240; page++)
 18377  0053A8  0E00               	movlw	0
 18378  0053AA  6E19               	movwf	(LCD_Fill@page+1)^0,c
 18379  0053AC  0E00               	movlw	0
 18380  0053AE  6E18               	movwf	LCD_Fill@page^0,c
 18381  0053B0                     l224:
 18382                           
 18383                           ;libraries/lcd_highlevel.c: 242:     {;libraries/lcd_highlevel.c: 243:       PORTA = col
      +                          orH;
 18384  0053B0  C014  FF80         	movff	LCD_Fill@colorH,3968	;volatile
 18385                           
 18386                           ;libraries/lcd_highlevel.c: 244:       LATC3 = 0;
 18387  0053B4  968B               	bcf	3979,3,c	;volatile
 18388                           
 18389                           ;libraries/lcd_highlevel.c: 245:       LATC3 = 1;
 18390  0053B6  868B               	bsf	3979,3,c	;volatile
 18391                           
 18392                           ;libraries/lcd_highlevel.c: 246:       PORTA = colorL;
 18393  0053B8  C015  FF80         	movff	LCD_Fill@colorL,3968	;volatile
 18394                           
 18395                           ;libraries/lcd_highlevel.c: 247:       LATC3 = 0;
 18396  0053BC  968B               	bcf	3979,3,c	;volatile
 18397                           
 18398                           ;libraries/lcd_highlevel.c: 248:       LATC3 = 1;
 18399  0053BE  868B               	bsf	3979,3,c	;volatile
 18400  0053C0                     
 18401                           ;libraries/lcd_highlevel.c: 249:     }
 18402  0053C0  4A18               	infsnz	LCD_Fill@page^0,f,c
 18403  0053C2  2A19               	incf	(LCD_Fill@page+1)^0,f,c
 18404  0053C4  5019               	movf	(LCD_Fill@page+1)^0,w,c
 18405  0053C6  E109               	bnz	u6540
 18406  0053C8  0EF0               	movlw	240
 18407  0053CA  5C18               	subwf	LCD_Fill@page^0,w,c
 18408  0053CC  A0D8               	btfss	status,0,c
 18409  0053CE  EFEB  F029         	goto	u6541
 18410  0053D2  EFED  F029         	goto	u6540
 18411  0053D6                     u6541:
 18412  0053D6  EFD8  F029         	goto	l224
 18413  0053DA                     u6540:
 18414  0053DA                     
 18415                           ;libraries/lcd_highlevel.c: 250:   }
 18416  0053DA  4A16               	infsnz	LCD_Fill@column^0,f,c
 18417  0053DC  2A17               	incf	(LCD_Fill@column+1)^0,f,c
 18418  0053DE  0E40               	movlw	64
 18419  0053E0  5C16               	subwf	LCD_Fill@column^0,w,c
 18420  0053E2  0E01               	movlw	1
 18421  0053E4  5817               	subwfb	(LCD_Fill@column+1)^0,w,c
 18422  0053E6  A0D8               	btfss	status,0,c
 18423  0053E8  EFF8  F029         	goto	u6551
 18424  0053EC  EFFA  F029         	goto	u6550
 18425  0053F0                     u6551:
 18426  0053F0  EFD4  F029         	goto	l9373
 18427  0053F4                     u6550:
 18428  0053F4  0012               	return		;funcret
 18429  0053F6                     __end_of_LCD_Fill:
 18430                           	callstack 0
 18431                           
 18432 ;; *************** function _Ball_draw *****************
 18433 ;; Defined at:
 18434 ;;		line 17 in file "class/ball.c"
 18435 ;; Parameters:    Size  Location     Type
 18436 ;;  b               2   36[COMRAM] PTR struct Ball
 18437 ;;		 -> g1(239), 
 18438 ;; Auto vars:     Size  Location     Type
 18439 ;;		None
 18440 ;; Return value:  Size  Location     Type
 18441 ;;                  1    wreg      void 
 18442 ;; Registers used:
 18443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18444 ;; Tracked objects:
 18445 ;;		On entry : 0/0
 18446 ;;		On exit  : 0/0
 18447 ;;		Unchanged: 0/0
 18448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18449 ;;      Params:         2       0       0       0       0       0       0
 18450 ;;      Locals:         0       0       0       0       0       0       0
 18451 ;;      Temps:          8       0       0       0       0       0       0
 18452 ;;      Totals:        10       0       0       0       0       0       0
 18453 ;;Total ram usage:       10 bytes
 18454 ;; Hardware stack levels used: 1
 18455 ;; Hardware stack levels required when called: 5
 18456 ;; This function calls:
 18457 ;;		_LCD_DrawRect
 18458 ;; This function is called by:
 18459 ;;		_Menu_inGameDraw
 18460 ;;		_displayController
 18461 ;; This function uses a non-reentrant model
 18462 ;;
 18463                           
 18464                           	psect	text74
 18465  0040C0                     __ptext74:
 18466                           	callstack 0
 18467  0040C0                     _Ball_draw:
 18468                           	callstack 21
 18469  0040C0                     
 18470                           ;class/ball.c: 17: void Ball_draw(struct Ball* b);class/ball.c: 18: {;class/ball.c: 19: 
      +                              LCD_DrawRect(b->oldx-8,b->oldy-8,b->oldx+8,b->oldy+8,1,0b0000000000000000);
 18471  0040C0  EE20 F004          	lfsr	2,4
 18472  0040C4  5025               	movf	Ball_draw@b^0,w,c
 18473  0040C6  26D9               	addwf	fsr2l,f,c
 18474  0040C8  5026               	movf	(Ball_draw@b+1)^0,w,c
 18475  0040CA  22DA               	addwfc	fsr2h,f,c
 18476  0040CC  CFDE F027          	movff	postinc2,??_Ball_draw
 18477  0040D0  CFDD F028          	movff	postdec2,??_Ball_draw+1
 18478  0040D4  0EF8               	movlw	248
 18479  0040D6  2427               	addwf	??_Ball_draw^0,w,c
 18480  0040D8  6E12               	movwf	LCD_DrawRect@posX1^0,c
 18481  0040DA  0EFF               	movlw	255
 18482  0040DC  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 18483  0040DE  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 18484  0040E0  EE20 F006          	lfsr	2,6
 18485  0040E4  5025               	movf	Ball_draw@b^0,w,c
 18486  0040E6  26D9               	addwf	fsr2l,f,c
 18487  0040E8  5026               	movf	(Ball_draw@b+1)^0,w,c
 18488  0040EA  22DA               	addwfc	fsr2h,f,c
 18489  0040EC  CFDE F029          	movff	postinc2,??_Ball_draw+2
 18490  0040F0  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 18491  0040F4  0EF8               	movlw	248
 18492  0040F6  2429               	addwf	(??_Ball_draw+2)^0,w,c
 18493  0040F8  6E14               	movwf	LCD_DrawRect@posY1^0,c
 18494  0040FA  0EFF               	movlw	255
 18495  0040FC  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 18496  0040FE  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 18497  004100  EE20 F004          	lfsr	2,4
 18498  004104  5025               	movf	Ball_draw@b^0,w,c
 18499  004106  26D9               	addwf	fsr2l,f,c
 18500  004108  5026               	movf	(Ball_draw@b+1)^0,w,c
 18501  00410A  22DA               	addwfc	fsr2h,f,c
 18502  00410C  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 18503  004110  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 18504  004114  0E08               	movlw	8
 18505  004116  242B               	addwf	(??_Ball_draw+4)^0,w,c
 18506  004118  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18507  00411A  0E00               	movlw	0
 18508  00411C  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 18509  00411E  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18510  004120  EE20 F006          	lfsr	2,6
 18511  004124  5025               	movf	Ball_draw@b^0,w,c
 18512  004126  26D9               	addwf	fsr2l,f,c
 18513  004128  5026               	movf	(Ball_draw@b+1)^0,w,c
 18514  00412A  22DA               	addwfc	fsr2h,f,c
 18515  00412C  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 18516  004130  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 18517  004134  0E08               	movlw	8
 18518  004136  242D               	addwf	(??_Ball_draw+6)^0,w,c
 18519  004138  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18520  00413A  0E00               	movlw	0
 18521  00413C  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 18522  00413E  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18523  004140  0E01               	movlw	1
 18524  004142  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18525  004144  0E00               	movlw	0
 18526  004146  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18527  004148  0E00               	movlw	0
 18528  00414A  6E1B               	movwf	LCD_DrawRect@color^0,c
 18529  00414C  EC84  F016         	call	_LCD_DrawRect	;wreg free
 18530  004150                     
 18531                           ;class/ball.c: 20:     b->oldx=b->x;
 18532  004150  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18533  004154  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18534  004158  EE10 F004          	lfsr	1,4
 18535  00415C  5025               	movf	Ball_draw@b^0,w,c
 18536  00415E  26E1               	addwf	fsr1l,f,c
 18537  004160  5026               	movf	(Ball_draw@b+1)^0,w,c
 18538  004162  22E2               	addwfc	fsr1h,f,c
 18539  004164  CFDE FFE6          	movff	postinc2,postinc1
 18540  004168  CFDD FFE5          	movff	postdec2,postdec1
 18541  00416C                     
 18542                           ;class/ball.c: 21:     b->oldy=b->y;
 18543  00416C  EE20 F002          	lfsr	2,2
 18544  004170  5025               	movf	Ball_draw@b^0,w,c
 18545  004172  26D9               	addwf	fsr2l,f,c
 18546  004174  5026               	movf	(Ball_draw@b+1)^0,w,c
 18547  004176  22DA               	addwfc	fsr2h,f,c
 18548  004178  EE10 F006          	lfsr	1,6
 18549  00417C  5025               	movf	Ball_draw@b^0,w,c
 18550  00417E  26E1               	addwf	fsr1l,f,c
 18551  004180  5026               	movf	(Ball_draw@b+1)^0,w,c
 18552  004182  22E2               	addwfc	fsr1h,f,c
 18553  004184  CFDE FFE6          	movff	postinc2,postinc1
 18554  004188  CFDD FFE5          	movff	postdec2,postdec1
 18555                           
 18556                           ;class/ball.c: 22:     LCD_DrawRect(b->x-8,b->y-8,b->x+8,b->y+8,1,0b1111100000000000);
 18557  00418C  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18558  004190  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18559  004194  CFDE F027          	movff	postinc2,??_Ball_draw
 18560  004198  CFDD F028          	movff	postdec2,??_Ball_draw+1
 18561  00419C  0EF8               	movlw	248
 18562  00419E  2427               	addwf	??_Ball_draw^0,w,c
 18563  0041A0  6E12               	movwf	LCD_DrawRect@posX1^0,c
 18564  0041A2  0EFF               	movlw	255
 18565  0041A4  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 18566  0041A6  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 18567  0041A8  EE20 F002          	lfsr	2,2
 18568  0041AC  5025               	movf	Ball_draw@b^0,w,c
 18569  0041AE  26D9               	addwf	fsr2l,f,c
 18570  0041B0  5026               	movf	(Ball_draw@b+1)^0,w,c
 18571  0041B2  22DA               	addwfc	fsr2h,f,c
 18572  0041B4  CFDE F029          	movff	postinc2,??_Ball_draw+2
 18573  0041B8  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 18574  0041BC  0EF8               	movlw	248
 18575  0041BE  2429               	addwf	(??_Ball_draw+2)^0,w,c
 18576  0041C0  6E14               	movwf	LCD_DrawRect@posY1^0,c
 18577  0041C2  0EFF               	movlw	255
 18578  0041C4  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 18579  0041C6  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 18580  0041C8  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18581  0041CC  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18582  0041D0  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 18583  0041D4  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 18584  0041D8  0E08               	movlw	8
 18585  0041DA  242B               	addwf	(??_Ball_draw+4)^0,w,c
 18586  0041DC  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18587  0041DE  0E00               	movlw	0
 18588  0041E0  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 18589  0041E2  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18590  0041E4  EE20 F002          	lfsr	2,2
 18591  0041E8  5025               	movf	Ball_draw@b^0,w,c
 18592  0041EA  26D9               	addwf	fsr2l,f,c
 18593  0041EC  5026               	movf	(Ball_draw@b+1)^0,w,c
 18594  0041EE  22DA               	addwfc	fsr2h,f,c
 18595  0041F0  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 18596  0041F4  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 18597  0041F8  0E08               	movlw	8
 18598  0041FA  242D               	addwf	(??_Ball_draw+6)^0,w,c
 18599  0041FC  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18600  0041FE  0E00               	movlw	0
 18601  004200  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 18602  004202  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18603  004204  0E01               	movlw	1
 18604  004206  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18605  004208  0EF8               	movlw	248
 18606  00420A  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18607  00420C  0E00               	movlw	0
 18608  00420E  6E1B               	movwf	LCD_DrawRect@color^0,c
 18609  004210  EC84  F016         	call	_LCD_DrawRect	;wreg free
 18610  004214  0012               	return		;funcret
 18611  004216                     __end_of_Ball_draw:
 18612                           	callstack 0
 18613                           
 18614 ;; *************** function _LCD_DrawRect *****************
 18615 ;; Defined at:
 18616 ;;		line 584 in file "libraries/lcd_highlevel.c"
 18617 ;; Parameters:    Size  Location     Type
 18618 ;;  posX1           2   17[COMRAM] unsigned short 
 18619 ;;  posY1           2   19[COMRAM] unsigned short 
 18620 ;;  posX2           2   21[COMRAM] unsigned short 
 18621 ;;  posY2           2   23[COMRAM] unsigned short 
 18622 ;;  fill            1   25[COMRAM] unsigned char 
 18623 ;;  color           2   26[COMRAM] unsigned short 
 18624 ;; Auto vars:     Size  Location     Type
 18625 ;;  i               2   34[COMRAM] unsigned short 
 18626 ;;  temp            2   30[COMRAM] unsigned short 
 18627 ;;  j               2   28[COMRAM] unsigned short 
 18628 ;;  colorL          1   33[COMRAM] unsigned char 
 18629 ;;  colorH          1   32[COMRAM] unsigned char 
 18630 ;; Return value:  Size  Location     Type
 18631 ;;                  1    wreg      void 
 18632 ;; Registers used:
 18633 ;;		wreg, status,2, status,0
 18634 ;; Tracked objects:
 18635 ;;		On entry : 0/0
 18636 ;;		On exit  : 0/0
 18637 ;;		Unchanged: 0/0
 18638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18639 ;;      Params:        11       0       0       0       0       0       0
 18640 ;;      Locals:         8       0       0       0       0       0       0
 18641 ;;      Temps:          0       0       0       0       0       0       0
 18642 ;;      Totals:        19       0       0       0       0       0       0
 18643 ;;Total ram usage:       19 bytes
 18644 ;; Hardware stack levels used: 1
 18645 ;; Hardware stack levels required when called: 4
 18646 ;; This function calls:
 18647 ;;		Nothing
 18648 ;; This function is called by:
 18649 ;;		_Ball_draw
 18650 ;;		_Paddle_draw
 18651 ;;		_LCD_SliderUpdate
 18652 ;;		_LCD_SliderDraw
 18653 ;;		_LCD_ButtonUpdate
 18654 ;;		_LCD_ButtonDraw
 18655 ;; This function uses a non-reentrant model
 18656 ;;
 18657                           
 18658                           	psect	text75
 18659  002D08                     __ptext75:
 18660                           	callstack 0
 18661  002D08                     _LCD_DrawRect:
 18662                           	callstack 21
 18663  002D08                     
 18664                           ;libraries/lcd_highlevel.c: 584: void LCD_DrawRect(uint16_t posX1,uint16_t posY1, uint16
      +                          _t posX2,;libraries/lcd_highlevel.c: 585:   uint16_t posY2,uint8_t fill,uint16_t color);
      +                          libraries/lcd_highlevel.c: 586: {;libraries/lcd_highlevel.c: 587:   uint16_t i;;librarie
      +                          s/lcd_highlevel.c: 588:   uint16_t j;;libraries/lcd_highlevel.c: 589:   uint16_t temp;;l
      +                          ibraries/lcd_highlevel.c: 590:   uint8_t colorH,colorL;;libraries/lcd_highlevel.c: 592: 
      +                            colorH = color>>8;
 18665  002D08  501C               	movf	(LCD_DrawRect@color+1)^0,w,c
 18666  002D0A  6E21               	movwf	LCD_DrawRect@colorH^0,c
 18667  002D0C                     
 18668                           ;libraries/lcd_highlevel.c: 593:   colorL = color;
 18669  002D0C  C01B  F022         	movff	LCD_DrawRect@color,LCD_DrawRect@colorL
 18670  002D10                     
 18671                           ;libraries/lcd_highlevel.c: 597:   if(posX1 > posX2)
 18672  002D10  5012               	movf	LCD_DrawRect@posX1^0,w,c
 18673  002D12  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18674  002D14  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18675  002D16  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18676  002D18  B0D8               	btfsc	status,0,c
 18677  002D1A  EF91  F016         	goto	u5821
 18678  002D1E  EF93  F016         	goto	u5820
 18679  002D22                     u5821:
 18680  002D22  EF9F  F016         	goto	l8101
 18681  002D26                     u5820:
 18682  002D26                     
 18683                           ;libraries/lcd_highlevel.c: 598:   {;libraries/lcd_highlevel.c: 599:     temp = posX1;
 18684  002D26  C012  F01F         	movff	LCD_DrawRect@posX1,LCD_DrawRect@temp
 18685  002D2A  C013  F020         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@temp+1
 18686                           
 18687                           ;libraries/lcd_highlevel.c: 600:     posX1 = posX2;
 18688  002D2E  C016  F012         	movff	LCD_DrawRect@posX2,LCD_DrawRect@posX1
 18689  002D32  C017  F013         	movff	LCD_DrawRect@posX2+1,LCD_DrawRect@posX1+1
 18690                           
 18691                           ;libraries/lcd_highlevel.c: 601:     posX2 = temp;
 18692  002D36  C01F  F016         	movff	LCD_DrawRect@temp,LCD_DrawRect@posX2
 18693  002D3A  C020  F017         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posX2+1
 18694  002D3E                     l8101:
 18695                           
 18696                           ;libraries/lcd_highlevel.c: 603:   if(posY1 > posY2)
 18697  002D3E  5014               	movf	LCD_DrawRect@posY1^0,w,c
 18698  002D40  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18699  002D42  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18700  002D44  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18701  002D46  B0D8               	btfsc	status,0,c
 18702  002D48  EFA8  F016         	goto	u5831
 18703  002D4C  EFAA  F016         	goto	u5830
 18704  002D50                     u5831:
 18705  002D50  EFB6  F016         	goto	l8105
 18706  002D54                     u5830:
 18707  002D54                     
 18708                           ;libraries/lcd_highlevel.c: 604:   {;libraries/lcd_highlevel.c: 605:     temp = posY1;
 18709  002D54  C014  F01F         	movff	LCD_DrawRect@posY1,LCD_DrawRect@temp
 18710  002D58  C015  F020         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@temp+1
 18711                           
 18712                           ;libraries/lcd_highlevel.c: 606:     posY1 = posY2;
 18713  002D5C  C018  F014         	movff	LCD_DrawRect@posY2,LCD_DrawRect@posY1
 18714  002D60  C019  F015         	movff	LCD_DrawRect@posY2+1,LCD_DrawRect@posY1+1
 18715                           
 18716                           ;libraries/lcd_highlevel.c: 607:     posY2 = temp;
 18717  002D64  C01F  F018         	movff	LCD_DrawRect@temp,LCD_DrawRect@posY2
 18718  002D68  C020  F019         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posY2+1
 18719  002D6C                     l8105:
 18720                           
 18721                           ;libraries/lcd_highlevel.c: 610:   if(fill==1)
 18722  002D6C  041A               	decf	LCD_DrawRect@fill^0,w,c
 18723  002D6E  A4D8               	btfss	status,2,c
 18724  002D70  EFBC  F016         	goto	u5841
 18725  002D74  EFBE  F016         	goto	u5840
 18726  002D78                     u5841:
 18727  002D78  EF20  F017         	goto	l8181
 18728  002D7C                     u5840:
 18729  002D7C                     
 18730                           ;libraries/lcd_highlevel.c: 611:   {;libraries/lcd_highlevel.c: 613:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18731  002D7C  0E2A               	movlw	42
 18732  002D7E  6E80               	movwf	128,c	;volatile
 18733  002D80  988B               	bcf	3979,4,c	;volatile
 18734  002D82  968B               	bcf	3979,3,c	;volatile
 18735  002D84  868B               	bsf	3979,3,c	;volatile
 18736  002D86  888B               	bsf	3979,4,c	;volatile
 18737                           
 18738                           ;libraries/lcd_highlevel.c: 614:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18739  002D88  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18740  002D8A  6E80               	movwf	128,c	;volatile
 18741  002D8C  968B               	bcf	3979,3,c	;volatile
 18742  002D8E  868B               	bsf	3979,3,c	;volatile
 18743  002D90                     
 18744                           ;libraries/lcd_highlevel.c: 615:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18745  002D90  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18746  002D94  968B               	bcf	3979,3,c	;volatile
 18747  002D96  868B               	bsf	3979,3,c	;volatile
 18748                           
 18749                           ;libraries/lcd_highlevel.c: 616:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18750  002D98  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18751  002D9A  6E80               	movwf	128,c	;volatile
 18752  002D9C  968B               	bcf	3979,3,c	;volatile
 18753  002D9E  868B               	bsf	3979,3,c	;volatile
 18754  002DA0                     
 18755                           ;libraries/lcd_highlevel.c: 617:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18756  002DA0  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18757  002DA4  968B               	bcf	3979,3,c	;volatile
 18758  002DA6  868B               	bsf	3979,3,c	;volatile
 18759                           
 18760                           ;libraries/lcd_highlevel.c: 619:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18761  002DA8  0E2B               	movlw	43
 18762  002DAA  6E80               	movwf	128,c	;volatile
 18763  002DAC  988B               	bcf	3979,4,c	;volatile
 18764  002DAE  968B               	bcf	3979,3,c	;volatile
 18765  002DB0  868B               	bsf	3979,3,c	;volatile
 18766  002DB2  888B               	bsf	3979,4,c	;volatile
 18767                           
 18768                           ;libraries/lcd_highlevel.c: 620:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18769  002DB4  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18770  002DB6  6E80               	movwf	128,c	;volatile
 18771  002DB8  968B               	bcf	3979,3,c	;volatile
 18772  002DBA  868B               	bsf	3979,3,c	;volatile
 18773  002DBC                     
 18774                           ;libraries/lcd_highlevel.c: 621:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18775  002DBC  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18776  002DC0  968B               	bcf	3979,3,c	;volatile
 18777  002DC2  868B               	bsf	3979,3,c	;volatile
 18778                           
 18779                           ;libraries/lcd_highlevel.c: 622:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18780  002DC4  0E01               	movlw	1
 18781  002DC6  6E80               	movwf	128,c	;volatile
 18782  002DC8  968B               	bcf	3979,3,c	;volatile
 18783  002DCA  868B               	bsf	3979,3,c	;volatile
 18784                           
 18785                           ;libraries/lcd_highlevel.c: 623:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18786  002DCC  0E3F               	movlw	63
 18787  002DCE  6E80               	movwf	128,c	;volatile
 18788  002DD0  968B               	bcf	3979,3,c	;volatile
 18789  002DD2  868B               	bsf	3979,3,c	;volatile
 18790                           
 18791                           ;libraries/lcd_highlevel.c: 625:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18792  002DD4  0E2C               	movlw	44
 18793  002DD6  6E80               	movwf	128,c	;volatile
 18794  002DD8  988B               	bcf	3979,4,c	;volatile
 18795  002DDA  968B               	bcf	3979,3,c	;volatile
 18796  002DDC  868B               	bsf	3979,3,c	;volatile
 18797  002DDE  888B               	bsf	3979,4,c	;volatile
 18798  002DE0                     
 18799                           ;libraries/lcd_highlevel.c: 626:     for(i=posX1;i<=posX2;i++)
 18800  002DE0  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18801  002DE4  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18802  002DE8  EF13  F017         	goto	l8179
 18803  002DEC                     l281:
 18804                           
 18805                           ;libraries/lcd_highlevel.c: 627:     {;libraries/lcd_highlevel.c: 628:       for(j=posY1
      +                          ;j<=posY2;j++)
 18806  002DEC  C014  F01D         	movff	LCD_DrawRect@posY1,LCD_DrawRect@j
 18807  002DF0  C015  F01E         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@j+1
 18808  002DF4  EF06  F017         	goto	l8175
 18809  002DF8                     l283:
 18810                           
 18811                           ;libraries/lcd_highlevel.c: 629:       {;libraries/lcd_highlevel.c: 630:         PORTA =
      +                           colorH; LATC3 = 0; LATC3 = 1;;
 18812  002DF8  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18813  002DFC  968B               	bcf	3979,3,c	;volatile
 18814  002DFE  868B               	bsf	3979,3,c	;volatile
 18815                           
 18816                           ;libraries/lcd_highlevel.c: 631:         PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18817  002E00  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18818  002E04  968B               	bcf	3979,3,c	;volatile
 18819  002E06  868B               	bsf	3979,3,c	;volatile
 18820  002E08                     
 18821                           ;libraries/lcd_highlevel.c: 632:       }
 18822  002E08  4A1D               	infsnz	LCD_DrawRect@j^0,f,c
 18823  002E0A  2A1E               	incf	(LCD_DrawRect@j+1)^0,f,c
 18824  002E0C                     l8175:
 18825  002E0C  501D               	movf	LCD_DrawRect@j^0,w,c
 18826  002E0E  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18827  002E10  501E               	movf	(LCD_DrawRect@j+1)^0,w,c
 18828  002E12  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18829  002E14  B0D8               	btfsc	status,0,c
 18830  002E16  EF0F  F017         	goto	u5851
 18831  002E1A  EF11  F017         	goto	u5850
 18832  002E1E                     u5851:
 18833  002E1E  EFFC  F016         	goto	l283
 18834  002E22                     u5850:
 18835  002E22                     
 18836                           ;libraries/lcd_highlevel.c: 633:     }
 18837  002E22  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18838  002E24  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18839  002E26                     l8179:
 18840  002E26  5023               	movf	LCD_DrawRect@i^0,w,c
 18841  002E28  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18842  002E2A  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18843  002E2C  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18844  002E2E  B0D8               	btfsc	status,0,c
 18845  002E30  EF1C  F017         	goto	u5861
 18846  002E34  EF1E  F017         	goto	u5860
 18847  002E38                     u5861:
 18848  002E38  EFF6  F016         	goto	l281
 18849  002E3C                     u5860:
 18850  002E3C  EF20  F018         	goto	l299
 18851  002E40                     l8181:
 18852                           
 18853                           ;libraries/lcd_highlevel.c: 637:   {;libraries/lcd_highlevel.c: 639:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18854  002E40  0E2A               	movlw	42
 18855  002E42  6E80               	movwf	128,c	;volatile
 18856  002E44  988B               	bcf	3979,4,c	;volatile
 18857  002E46  968B               	bcf	3979,3,c	;volatile
 18858  002E48  868B               	bsf	3979,3,c	;volatile
 18859  002E4A  888B               	bsf	3979,4,c	;volatile
 18860                           
 18861                           ;libraries/lcd_highlevel.c: 640:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18862  002E4C  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18863  002E4E  6E80               	movwf	128,c	;volatile
 18864  002E50  968B               	bcf	3979,3,c	;volatile
 18865  002E52  868B               	bsf	3979,3,c	;volatile
 18866  002E54                     
 18867                           ;libraries/lcd_highlevel.c: 641:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18868  002E54  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18869  002E58  968B               	bcf	3979,3,c	;volatile
 18870  002E5A  868B               	bsf	3979,3,c	;volatile
 18871                           
 18872                           ;libraries/lcd_highlevel.c: 642:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18873  002E5C  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18874  002E5E  6E80               	movwf	128,c	;volatile
 18875  002E60  968B               	bcf	3979,3,c	;volatile
 18876  002E62  868B               	bsf	3979,3,c	;volatile
 18877  002E64                     
 18878                           ;libraries/lcd_highlevel.c: 643:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18879  002E64  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18880  002E68  968B               	bcf	3979,3,c	;volatile
 18881  002E6A  868B               	bsf	3979,3,c	;volatile
 18882                           
 18883                           ;libraries/lcd_highlevel.c: 645:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18884  002E6C  0E2B               	movlw	43
 18885  002E6E  6E80               	movwf	128,c	;volatile
 18886  002E70  988B               	bcf	3979,4,c	;volatile
 18887  002E72  968B               	bcf	3979,3,c	;volatile
 18888  002E74  868B               	bsf	3979,3,c	;volatile
 18889  002E76  888B               	bsf	3979,4,c	;volatile
 18890                           
 18891                           ;libraries/lcd_highlevel.c: 646:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18892  002E78  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18893  002E7A  6E80               	movwf	128,c	;volatile
 18894  002E7C  968B               	bcf	3979,3,c	;volatile
 18895  002E7E  868B               	bsf	3979,3,c	;volatile
 18896  002E80                     
 18897                           ;libraries/lcd_highlevel.c: 647:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18898  002E80  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18899  002E84  968B               	bcf	3979,3,c	;volatile
 18900  002E86  868B               	bsf	3979,3,c	;volatile
 18901                           
 18902                           ;libraries/lcd_highlevel.c: 648:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18903  002E88  0E01               	movlw	1
 18904  002E8A  6E80               	movwf	128,c	;volatile
 18905  002E8C  968B               	bcf	3979,3,c	;volatile
 18906  002E8E  868B               	bsf	3979,3,c	;volatile
 18907                           
 18908                           ;libraries/lcd_highlevel.c: 649:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18909  002E90  0E3F               	movlw	63
 18910  002E92  6E80               	movwf	128,c	;volatile
 18911  002E94  968B               	bcf	3979,3,c	;volatile
 18912  002E96  868B               	bsf	3979,3,c	;volatile
 18913                           
 18914                           ;libraries/lcd_highlevel.c: 651:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18915  002E98  0E2C               	movlw	44
 18916  002E9A  6E80               	movwf	128,c	;volatile
 18917  002E9C  988B               	bcf	3979,4,c	;volatile
 18918  002E9E  968B               	bcf	3979,3,c	;volatile
 18919  002EA0  868B               	bsf	3979,3,c	;volatile
 18920  002EA2  888B               	bsf	3979,4,c	;volatile
 18921  002EA4                     
 18922                           ;libraries/lcd_highlevel.c: 653:     for(i=posX1;i<=posX2;i++)
 18923  002EA4  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18924  002EA8  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18925  002EAC  EF62  F017         	goto	l8249
 18926  002EB0                     l288:
 18927                           
 18928                           ;libraries/lcd_highlevel.c: 654:     {;libraries/lcd_highlevel.c: 655:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18929  002EB0  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18930  002EB4  968B               	bcf	3979,3,c	;volatile
 18931  002EB6  868B               	bsf	3979,3,c	;volatile
 18932                           
 18933                           ;libraries/lcd_highlevel.c: 656:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18934  002EB8  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18935  002EBC  968B               	bcf	3979,3,c	;volatile
 18936  002EBE  868B               	bsf	3979,3,c	;volatile
 18937  002EC0                     
 18938                           ;libraries/lcd_highlevel.c: 657:     }
 18939  002EC0  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18940  002EC2  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18941  002EC4                     l8249:
 18942  002EC4  5023               	movf	LCD_DrawRect@i^0,w,c
 18943  002EC6  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18944  002EC8  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18945  002ECA  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18946  002ECC  B0D8               	btfsc	status,0,c
 18947  002ECE  EF6B  F017         	goto	u5871
 18948  002ED2  EF6D  F017         	goto	u5870
 18949  002ED6                     u5871:
 18950  002ED6  EF58  F017         	goto	l288
 18951  002EDA                     u5870:
 18952  002EDA                     
 18953                           ;libraries/lcd_highlevel.c: 659:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18954  002EDA  0E2B               	movlw	43
 18955  002EDC  6E80               	movwf	128,c	;volatile
 18956  002EDE  988B               	bcf	3979,4,c	;volatile
 18957  002EE0  968B               	bcf	3979,3,c	;volatile
 18958  002EE2  868B               	bsf	3979,3,c	;volatile
 18959  002EE4  888B               	bsf	3979,4,c	;volatile
 18960                           
 18961                           ;libraries/lcd_highlevel.c: 660:     PORTA = posY2>>8; LATC3 = 0; LATC3 = 1;;
 18962  002EE6  5019               	movf	(LCD_DrawRect@posY2+1)^0,w,c
 18963  002EE8  6E80               	movwf	128,c	;volatile
 18964  002EEA  968B               	bcf	3979,3,c	;volatile
 18965  002EEC  868B               	bsf	3979,3,c	;volatile
 18966  002EEE                     
 18967                           ;libraries/lcd_highlevel.c: 661:     PORTA = posY2; LATC3 = 0; LATC3 = 1;;
 18968  002EEE  C018  FF80         	movff	LCD_DrawRect@posY2,3968	;volatile
 18969  002EF2  968B               	bcf	3979,3,c	;volatile
 18970  002EF4  868B               	bsf	3979,3,c	;volatile
 18971                           
 18972                           ;libraries/lcd_highlevel.c: 662:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18973  002EF6  0E2C               	movlw	44
 18974  002EF8  6E80               	movwf	128,c	;volatile
 18975  002EFA  988B               	bcf	3979,4,c	;volatile
 18976  002EFC  968B               	bcf	3979,3,c	;volatile
 18977  002EFE  868B               	bsf	3979,3,c	;volatile
 18978  002F00  888B               	bsf	3979,4,c	;volatile
 18979  002F02                     
 18980                           ;libraries/lcd_highlevel.c: 663:     for(i=posX1;i<=posX2;i++)
 18981  002F02  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18982  002F06  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18983  002F0A  EF91  F017         	goto	l8283
 18984  002F0E                     l291:
 18985                           
 18986                           ;libraries/lcd_highlevel.c: 664:     {;libraries/lcd_highlevel.c: 665:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18987  002F0E  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18988  002F12  968B               	bcf	3979,3,c	;volatile
 18989  002F14  868B               	bsf	3979,3,c	;volatile
 18990                           
 18991                           ;libraries/lcd_highlevel.c: 666:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18992  002F16  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18993  002F1A  968B               	bcf	3979,3,c	;volatile
 18994  002F1C  868B               	bsf	3979,3,c	;volatile
 18995  002F1E                     
 18996                           ;libraries/lcd_highlevel.c: 667:     }
 18997  002F1E  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18998  002F20  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18999  002F22                     l8283:
 19000  002F22  5023               	movf	LCD_DrawRect@i^0,w,c
 19001  002F24  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 19002  002F26  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19003  002F28  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 19004  002F2A  B0D8               	btfsc	status,0,c
 19005  002F2C  EF9A  F017         	goto	u5881
 19006  002F30  EF9C  F017         	goto	u5880
 19007  002F34                     u5881:
 19008  002F34  EF87  F017         	goto	l291
 19009  002F38                     u5880:
 19010  002F38                     
 19011                           ;libraries/lcd_highlevel.c: 669:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19012  002F38  0E2A               	movlw	42
 19013  002F3A  6E80               	movwf	128,c	;volatile
 19014  002F3C  988B               	bcf	3979,4,c	;volatile
 19015  002F3E  968B               	bcf	3979,3,c	;volatile
 19016  002F40  868B               	bsf	3979,3,c	;volatile
 19017  002F42  888B               	bsf	3979,4,c	;volatile
 19018                           
 19019                           ;libraries/lcd_highlevel.c: 670:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19020  002F44  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19021  002F46  6E80               	movwf	128,c	;volatile
 19022  002F48  968B               	bcf	3979,3,c	;volatile
 19023  002F4A  868B               	bsf	3979,3,c	;volatile
 19024  002F4C                     
 19025                           ;libraries/lcd_highlevel.c: 671:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19026  002F4C  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19027  002F50  968B               	bcf	3979,3,c	;volatile
 19028  002F52  868B               	bsf	3979,3,c	;volatile
 19029                           
 19030                           ;libraries/lcd_highlevel.c: 672:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19031  002F54  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19032  002F56  6E80               	movwf	128,c	;volatile
 19033  002F58  968B               	bcf	3979,3,c	;volatile
 19034  002F5A  868B               	bsf	3979,3,c	;volatile
 19035  002F5C                     
 19036                           ;libraries/lcd_highlevel.c: 673:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19037  002F5C  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19038  002F60  968B               	bcf	3979,3,c	;volatile
 19039  002F62  868B               	bsf	3979,3,c	;volatile
 19040                           
 19041                           ;libraries/lcd_highlevel.c: 675:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19042  002F64  0E2B               	movlw	43
 19043  002F66  6E80               	movwf	128,c	;volatile
 19044  002F68  988B               	bcf	3979,4,c	;volatile
 19045  002F6A  968B               	bcf	3979,3,c	;volatile
 19046  002F6C  868B               	bsf	3979,3,c	;volatile
 19047  002F6E  888B               	bsf	3979,4,c	;volatile
 19048                           
 19049                           ;libraries/lcd_highlevel.c: 676:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 19050  002F70  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 19051  002F72  6E80               	movwf	128,c	;volatile
 19052  002F74  968B               	bcf	3979,3,c	;volatile
 19053  002F76  868B               	bsf	3979,3,c	;volatile
 19054  002F78                     
 19055                           ;libraries/lcd_highlevel.c: 677:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 19056  002F78  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 19057  002F7C  968B               	bcf	3979,3,c	;volatile
 19058  002F7E  868B               	bsf	3979,3,c	;volatile
 19059                           
 19060                           ;libraries/lcd_highlevel.c: 678:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 19061  002F80  0E01               	movlw	1
 19062  002F82  6E80               	movwf	128,c	;volatile
 19063  002F84  968B               	bcf	3979,3,c	;volatile
 19064  002F86  868B               	bsf	3979,3,c	;volatile
 19065                           
 19066                           ;libraries/lcd_highlevel.c: 679:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 19067  002F88  0E3F               	movlw	63
 19068  002F8A  6E80               	movwf	128,c	;volatile
 19069  002F8C  968B               	bcf	3979,3,c	;volatile
 19070  002F8E  868B               	bsf	3979,3,c	;volatile
 19071                           
 19072                           ;libraries/lcd_highlevel.c: 680:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19073  002F90  0E2C               	movlw	44
 19074  002F92  6E80               	movwf	128,c	;volatile
 19075  002F94  988B               	bcf	3979,4,c	;volatile
 19076  002F96  968B               	bcf	3979,3,c	;volatile
 19077  002F98  868B               	bsf	3979,3,c	;volatile
 19078  002F9A  888B               	bsf	3979,4,c	;volatile
 19079  002F9C                     
 19080                           ;libraries/lcd_highlevel.c: 681:     for(i=posY1;i<=posY2;i++)
 19081  002F9C  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19082  002FA0  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19083  002FA4  EFDE  F017         	goto	l8353
 19084  002FA8                     l294:
 19085                           
 19086                           ;libraries/lcd_highlevel.c: 682:     {;libraries/lcd_highlevel.c: 683:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19087  002FA8  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19088  002FAC  968B               	bcf	3979,3,c	;volatile
 19089  002FAE  868B               	bsf	3979,3,c	;volatile
 19090                           
 19091                           ;libraries/lcd_highlevel.c: 684:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19092  002FB0  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19093  002FB4  968B               	bcf	3979,3,c	;volatile
 19094  002FB6  868B               	bsf	3979,3,c	;volatile
 19095  002FB8                     
 19096                           ;libraries/lcd_highlevel.c: 685:     }
 19097  002FB8  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19098  002FBA  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19099  002FBC                     l8353:
 19100  002FBC  5023               	movf	LCD_DrawRect@i^0,w,c
 19101  002FBE  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19102  002FC0  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19103  002FC2  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19104  002FC4  B0D8               	btfsc	status,0,c
 19105  002FC6  EFE7  F017         	goto	u5891
 19106  002FCA  EFE9  F017         	goto	u5890
 19107  002FCE                     u5891:
 19108  002FCE  EFD4  F017         	goto	l294
 19109  002FD2                     u5890:
 19110  002FD2                     
 19111                           ;libraries/lcd_highlevel.c: 687:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19112  002FD2  0E2A               	movlw	42
 19113  002FD4  6E80               	movwf	128,c	;volatile
 19114  002FD6  988B               	bcf	3979,4,c	;volatile
 19115  002FD8  968B               	bcf	3979,3,c	;volatile
 19116  002FDA  868B               	bsf	3979,3,c	;volatile
 19117  002FDC  888B               	bsf	3979,4,c	;volatile
 19118                           
 19119                           ;libraries/lcd_highlevel.c: 688:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19120  002FDE  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19121  002FE0  6E80               	movwf	128,c	;volatile
 19122  002FE2  968B               	bcf	3979,3,c	;volatile
 19123  002FE4  868B               	bsf	3979,3,c	;volatile
 19124  002FE6                     
 19125                           ;libraries/lcd_highlevel.c: 689:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19126  002FE6  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19127  002FEA  968B               	bcf	3979,3,c	;volatile
 19128  002FEC  868B               	bsf	3979,3,c	;volatile
 19129                           
 19130                           ;libraries/lcd_highlevel.c: 690:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19131  002FEE  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19132  002FF0  6E80               	movwf	128,c	;volatile
 19133  002FF2  968B               	bcf	3979,3,c	;volatile
 19134  002FF4  868B               	bsf	3979,3,c	;volatile
 19135  002FF6                     
 19136                           ;libraries/lcd_highlevel.c: 691:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19137  002FF6  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19138  002FFA  968B               	bcf	3979,3,c	;volatile
 19139  002FFC  868B               	bsf	3979,3,c	;volatile
 19140                           
 19141                           ;libraries/lcd_highlevel.c: 692:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19142  002FFE  0E2C               	movlw	44
 19143  003000  6E80               	movwf	128,c	;volatile
 19144  003002  988B               	bcf	3979,4,c	;volatile
 19145  003004  968B               	bcf	3979,3,c	;volatile
 19146  003006  868B               	bsf	3979,3,c	;volatile
 19147  003008  888B               	bsf	3979,4,c	;volatile
 19148  00300A                     
 19149                           ;libraries/lcd_highlevel.c: 693:     for(i=posY1;i<=posY2;i++)
 19150  00300A  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19151  00300E  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19152  003012  EF15  F018         	goto	l8397
 19153  003016                     l297:
 19154                           
 19155                           ;libraries/lcd_highlevel.c: 694:     {;libraries/lcd_highlevel.c: 695:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19156  003016  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19157  00301A  968B               	bcf	3979,3,c	;volatile
 19158  00301C  868B               	bsf	3979,3,c	;volatile
 19159                           
 19160                           ;libraries/lcd_highlevel.c: 696:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19161  00301E  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19162  003022  968B               	bcf	3979,3,c	;volatile
 19163  003024  868B               	bsf	3979,3,c	;volatile
 19164  003026                     
 19165                           ;libraries/lcd_highlevel.c: 697:     }
 19166  003026  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19167  003028  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19168  00302A                     l8397:
 19169  00302A  5023               	movf	LCD_DrawRect@i^0,w,c
 19170  00302C  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19171  00302E  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19172  003030  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19173  003032  B0D8               	btfsc	status,0,c
 19174  003034  EF1E  F018         	goto	u5901
 19175  003038  EF20  F018         	goto	u5900
 19176  00303C                     u5901:
 19177  00303C  EF0B  F018         	goto	l297
 19178  003040                     u5900:
 19179  003040                     l299:
 19180  003040  0012               	return		;funcret
 19181  003042                     __end_of_LCD_DrawRect:
 19182                           	callstack 0
 19183                           
 19184 ;; *************** function _XF_popEvent *****************
 19185 ;; Defined at:
 19186 ;;		line 72 in file "xf/xf.c"
 19187 ;; Parameters:    Size  Location     Type
 19188 ;;  inISR           1    wreg     _Bool 
 19189 ;; Auto vars:     Size  Location     Type
 19190 ;;  inISR           1   24[COMRAM] _Bool 
 19191 ;;  ev              1   23[COMRAM] unsigned char 
 19192 ;; Return value:  Size  Location     Type
 19193 ;;                  1    wreg      unsigned char 
 19194 ;; Registers used:
 19195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19196 ;; Tracked objects:
 19197 ;;		On entry : 0/0
 19198 ;;		On exit  : 0/0
 19199 ;;		Unchanged: 0/0
 19200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19201 ;;      Params:         0       0       0       0       0       0       0
 19202 ;;      Locals:         2       0       0       0       0       0       0
 19203 ;;      Temps:          0       0       0       0       0       0       0
 19204 ;;      Totals:         2       0       0       0       0       0       0
 19205 ;;Total ram usage:        2 bytes
 19206 ;; Hardware stack levels used: 1
 19207 ;; Hardware stack levels required when called: 5
 19208 ;; This function calls:
 19209 ;;		_ENTERCRITICAL
 19210 ;;		_LEAVECRITICAL
 19211 ;;		___awmod
 19212 ;; This function is called by:
 19213 ;;		_Factory_exec
 19214 ;; This function uses a non-reentrant model
 19215 ;;
 19216                           
 19217                           	psect	text76
 19218  005E82                     __ptext76:
 19219                           	callstack 0
 19220  005E82                     _XF_popEvent:
 19221                           	callstack 24
 19222                           
 19223                           ;incstack = 0
 19224                           ;XF_popEvent@inISR stored from wreg
 19225  005E82  6E19               	movwf	XF_popEvent@inISR^0,c
 19226  005E84                     
 19227                           ;xf/xf.c: 76:     ENTERCRITICAL(inISR);
 19228  005E84  5019               	movf	XF_popEvent@inISR^0,w,c
 19229  005E86  ECB4  F031         	call	_ENTERCRITICAL
 19230  005E8A                     
 19231                           ;xf/xf.c: 77:     if(theXF.in == theXF.out)
 19232  005E8A  0100               	movlb	0	; () banked
 19233  005E8C  51DA               	movf	(_theXF+37)& (0+255),w,b
 19234  005E8E  19D9               	xorwf	(_theXF+36)& (0+255),w,b
 19235  005E90  A4D8               	btfss	status,2,c
 19236  005E92  EF4D  F02F         	goto	u7781
 19237  005E96  EF4F  F02F         	goto	u7780
 19238  005E9A                     u7781:
 19239  005E9A  EF55  F02F         	goto	l10299
 19240  005E9E                     u7780:
 19241  005E9E                     
 19242                           ; BSR set to: 0
 19243                           ;xf/xf.c: 78:     {;xf/xf.c: 79:       LEAVECRITICAL(inISR);
 19244  005E9E  5019               	movf	XF_popEvent@inISR^0,w,c
 19245  005EA0  ECA9  F031         	call	_LEAVECRITICAL
 19246  005EA4                     
 19247                           ;xf/xf.c: 80:       return ev;
 19248  005EA4  0E00               	movlw	0
 19249  005EA6  EF70  F02F         	goto	l734
 19250  005EAA                     l10299:
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;xf/xf.c: 82:     ev = theXF.eventQueue[theXF.out];
 19254  005EAA  0ECD               	movlw	low (_theXF+24)
 19255  005EAC  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19256  005EAE  6ED9               	movwf	fsr2l,c
 19257  005EB0  6ADA               	clrf	fsr2h,c
 19258  005EB2  0E00               	movlw	high (_theXF+24)
 19259  005EB4  22DA               	addwfc	fsr2h,f,c
 19260  005EB6  50DF               	movf	indf2,w,c
 19261  005EB8  6E18               	movwf	XF_popEvent@ev^0,c
 19262  005EBA                     
 19263                           ; BSR set to: 0
 19264                           ;xf/xf.c: 83:     theXF.out = (theXF.out + 1)%(uint8_t)sizeof(theXF.eventQueue);
 19265  005EBA  0E01               	movlw	1
 19266  005EBC  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19267  005EBE  6E12               	movwf	___awmod@dividend^0,c
 19268  005EC0  6A13               	clrf	(___awmod@dividend+1)^0,c
 19269  005EC2  0E00               	movlw	0
 19270  005EC4  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 19271  005EC6  0E00               	movlw	0
 19272  005EC8  6E15               	movwf	(___awmod@divisor+1)^0,c
 19273  005ECA  0E0C               	movlw	12
 19274  005ECC  6E14               	movwf	___awmod@divisor^0,c
 19275  005ECE  ECC4  F02B         	call	___awmod	;wreg free
 19276  005ED2  5012               	movf	?___awmod^0,w,c
 19277  005ED4  0100               	movlb	0	; () banked
 19278  005ED6  6FDA               	movwf	(_theXF+37)& (0+255),b
 19279  005ED8                     
 19280                           ; BSR set to: 0
 19281                           ;xf/xf.c: 84:     LEAVECRITICAL(inISR);
 19282  005ED8  5019               	movf	XF_popEvent@inISR^0,w,c
 19283  005EDA  ECA9  F031         	call	_LEAVECRITICAL
 19284  005EDE                     
 19285                           ;xf/xf.c: 85:     return ev;
 19286  005EDE  5018               	movf	XF_popEvent@ev^0,w,c
 19287  005EE0                     l734:
 19288  005EE0  0012               	return		;funcret
 19289  005EE2                     __end_of_XF_popEvent:
 19290                           	callstack 0
 19291                           
 19292 ;; *************** function ___awmod *****************
 19293 ;; Defined at:
 19294 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 19295 ;; Parameters:    Size  Location     Type
 19296 ;;  dividend        2   17[COMRAM] int 
 19297 ;;  divisor         2   19[COMRAM] int 
 19298 ;; Auto vars:     Size  Location     Type
 19299 ;;  sign            1   22[COMRAM] unsigned char 
 19300 ;;  counter         1   21[COMRAM] unsigned char 
 19301 ;; Return value:  Size  Location     Type
 19302 ;;                  2   17[COMRAM] int 
 19303 ;; Registers used:
 19304 ;;		wreg, status,2, status,0
 19305 ;; Tracked objects:
 19306 ;;		On entry : 0/0
 19307 ;;		On exit  : 0/0
 19308 ;;		Unchanged: 0/0
 19309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19310 ;;      Params:         4       0       0       0       0       0       0
 19311 ;;      Locals:         2       0       0       0       0       0       0
 19312 ;;      Temps:          0       0       0       0       0       0       0
 19313 ;;      Totals:         6       0       0       0       0       0       0
 19314 ;;Total ram usage:        6 bytes
 19315 ;; Hardware stack levels used: 1
 19316 ;; Hardware stack levels required when called: 4
 19317 ;; This function calls:
 19318 ;;		Nothing
 19319 ;; This function is called by:
 19320 ;;		_XF_pushEvent
 19321 ;;		_XF_popEvent
 19322 ;; This function uses a non-reentrant model
 19323 ;;
 19324                           
 19325                           	psect	text77
 19326  005788                     __ptext77:
 19327                           	callstack 0
 19328  005788                     ___awmod:
 19329                           	callstack 20
 19330  005788  0E00               	movlw	0
 19331  00578A  6E17               	movwf	___awmod@sign^0,c
 19332  00578C  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
 19333  00578E  EFCD  F02B         	goto	u6030
 19334  005792  EFCB  F02B         	goto	u6031
 19335  005796                     u6031:
 19336  005796  EFD3  F02B         	goto	l8587
 19337  00579A                     u6030:
 19338  00579A  6C12               	negf	___awmod@dividend^0,c
 19339  00579C  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19340  00579E  B0D8               	btfsc	status,0,c
 19341  0057A0  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19342  0057A2  0E01               	movlw	1
 19343  0057A4  6E17               	movwf	___awmod@sign^0,c
 19344  0057A6                     l8587:
 19345  0057A6  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
 19346  0057A8  EFDA  F02B         	goto	u6040
 19347  0057AC  EFD8  F02B         	goto	u6041
 19348  0057B0                     u6041:
 19349  0057B0  EFDE  F02B         	goto	l8591
 19350  0057B4                     u6040:
 19351  0057B4  6C14               	negf	___awmod@divisor^0,c
 19352  0057B6  1E15               	comf	(___awmod@divisor+1)^0,f,c
 19353  0057B8  B0D8               	btfsc	status,0,c
 19354  0057BA  2A15               	incf	(___awmod@divisor+1)^0,f,c
 19355  0057BC                     l8591:
 19356  0057BC  5014               	movf	___awmod@divisor^0,w,c
 19357  0057BE  1015               	iorwf	(___awmod@divisor+1)^0,w,c
 19358  0057C0  B4D8               	btfsc	status,2,c
 19359  0057C2  EFE5  F02B         	goto	u6051
 19360  0057C6  EFE7  F02B         	goto	u6050
 19361  0057CA                     u6051:
 19362  0057CA  EF0B  F02C         	goto	l8607
 19363  0057CE                     u6050:
 19364  0057CE  0E01               	movlw	1
 19365  0057D0  6E16               	movwf	___awmod@counter^0,c
 19366  0057D2  EFEF  F02B         	goto	l8597
 19367  0057D6                     l8595:
 19368  0057D6  90D8               	bcf	status,0,c
 19369  0057D8  3614               	rlcf	___awmod@divisor^0,f,c
 19370  0057DA  3615               	rlcf	(___awmod@divisor+1)^0,f,c
 19371  0057DC  2A16               	incf	___awmod@counter^0,f,c
 19372  0057DE                     l8597:
 19373  0057DE  AE15               	btfss	(___awmod@divisor+1)^0,7,c
 19374  0057E0  EFF4  F02B         	goto	u6061
 19375  0057E4  EFF6  F02B         	goto	u6060
 19376  0057E8                     u6061:
 19377  0057E8  EFEB  F02B         	goto	l8595
 19378  0057EC                     u6060:
 19379  0057EC                     l8599:
 19380  0057EC  5014               	movf	___awmod@divisor^0,w,c
 19381  0057EE  5C12               	subwf	___awmod@dividend^0,w,c
 19382  0057F0  5015               	movf	(___awmod@divisor+1)^0,w,c
 19383  0057F2  5813               	subwfb	(___awmod@dividend+1)^0,w,c
 19384  0057F4  A0D8               	btfss	status,0,c
 19385  0057F6  EFFF  F02B         	goto	u6071
 19386  0057FA  EF01  F02C         	goto	u6070
 19387  0057FE                     u6071:
 19388  0057FE  EF05  F02C         	goto	l8603
 19389  005802                     u6070:
 19390  005802  5014               	movf	___awmod@divisor^0,w,c
 19391  005804  5E12               	subwf	___awmod@dividend^0,f,c
 19392  005806  5015               	movf	(___awmod@divisor+1)^0,w,c
 19393  005808  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
 19394  00580A                     l8603:
 19395  00580A  90D8               	bcf	status,0,c
 19396  00580C  3215               	rrcf	(___awmod@divisor+1)^0,f,c
 19397  00580E  3214               	rrcf	___awmod@divisor^0,f,c
 19398  005810  2E16               	decfsz	___awmod@counter^0,f,c
 19399  005812  EFF6  F02B         	goto	l8599
 19400  005816                     l8607:
 19401  005816  5017               	movf	___awmod@sign^0,w,c
 19402  005818  B4D8               	btfsc	status,2,c
 19403  00581A  EF11  F02C         	goto	u6081
 19404  00581E  EF13  F02C         	goto	u6080
 19405  005822                     u6081:
 19406  005822  EF17  F02C         	goto	l8611
 19407  005826                     u6080:
 19408  005826  6C12               	negf	___awmod@dividend^0,c
 19409  005828  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19410  00582A  B0D8               	btfsc	status,0,c
 19411  00582C  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19412  00582E                     l8611:
 19413  00582E  C012  F012         	movff	___awmod@dividend,?___awmod
 19414  005832  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
 19415  005836  0012               	return		;funcret
 19416  005838                     __end_of___awmod:
 19417                           	callstack 0
 19418                           
 19419 ;; *************** function _LEAVECRITICAL *****************
 19420 ;; Defined at:
 19421 ;;		line 186 in file "xf/xf.c"
 19422 ;; Parameters:    Size  Location     Type
 19423 ;;  inISR           1    wreg     _Bool 
 19424 ;; Auto vars:     Size  Location     Type
 19425 ;;  inISR           1   17[COMRAM] _Bool 
 19426 ;; Return value:  Size  Location     Type
 19427 ;;                  1    wreg      void 
 19428 ;; Registers used:
 19429 ;;		wreg, status,2
 19430 ;; Tracked objects:
 19431 ;;		On entry : 0/0
 19432 ;;		On exit  : 0/0
 19433 ;;		Unchanged: 0/0
 19434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19435 ;;      Params:         0       0       0       0       0       0       0
 19436 ;;      Locals:         1       0       0       0       0       0       0
 19437 ;;      Temps:          0       0       0       0       0       0       0
 19438 ;;      Totals:         1       0       0       0       0       0       0
 19439 ;;Total ram usage:        1 bytes
 19440 ;; Hardware stack levels used: 1
 19441 ;; Hardware stack levels required when called: 4
 19442 ;; This function calls:
 19443 ;;		Nothing
 19444 ;; This function is called by:
 19445 ;;		_XF_pushEvent
 19446 ;;		_XF_popEvent
 19447 ;;		_XF_scheduleTimer
 19448 ;; This function uses a non-reentrant model
 19449 ;;
 19450                           
 19451                           	psect	text78
 19452  006352                     __ptext78:
 19453                           	callstack 0
 19454  006352                     _LEAVECRITICAL:
 19455                           	callstack 20
 19456                           
 19457                           ;incstack = 0
 19458                           ;LEAVECRITICAL@inISR stored from wreg
 19459  006352  6E12               	movwf	LEAVECRITICAL@inISR^0,c
 19460  006354                     
 19461                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 19462  006354  5012               	movf	LEAVECRITICAL@inISR^0,w,c
 19463  006356  A4D8               	btfss	status,2,c
 19464  006358  EFB0  F031         	goto	u5961
 19465  00635C  EFB2  F031         	goto	u5960
 19466  006360                     u5961:
 19467  006360  EFB3  F031         	goto	l760
 19468  006364                     u5960:
 19469  006364                     
 19470                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 19471  006364  8EF2               	bsf	4082,7,c	;volatile
 19472  006366                     l760:
 19473  006366  0012               	return		;funcret
 19474  006368                     __end_of_LEAVECRITICAL:
 19475                           	callstack 0
 19476                           
 19477 ;; *************** function _ENTERCRITICAL *****************
 19478 ;; Defined at:
 19479 ;;		line 172 in file "xf/xf.c"
 19480 ;; Parameters:    Size  Location     Type
 19481 ;;  inISR           1    wreg     _Bool 
 19482 ;; Auto vars:     Size  Location     Type
 19483 ;;  inISR           1   17[COMRAM] _Bool 
 19484 ;; Return value:  Size  Location     Type
 19485 ;;                  1    wreg      void 
 19486 ;; Registers used:
 19487 ;;		wreg, status,2
 19488 ;; Tracked objects:
 19489 ;;		On entry : 0/0
 19490 ;;		On exit  : 0/0
 19491 ;;		Unchanged: 0/0
 19492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19493 ;;      Params:         0       0       0       0       0       0       0
 19494 ;;      Locals:         1       0       0       0       0       0       0
 19495 ;;      Temps:          0       0       0       0       0       0       0
 19496 ;;      Totals:         1       0       0       0       0       0       0
 19497 ;;Total ram usage:        1 bytes
 19498 ;; Hardware stack levels used: 1
 19499 ;; Hardware stack levels required when called: 4
 19500 ;; This function calls:
 19501 ;;		Nothing
 19502 ;; This function is called by:
 19503 ;;		_XF_pushEvent
 19504 ;;		_XF_popEvent
 19505 ;;		_XF_scheduleTimer
 19506 ;; This function uses a non-reentrant model
 19507 ;;
 19508                           
 19509                           	psect	text79
 19510  006368                     __ptext79:
 19511                           	callstack 0
 19512  006368                     _ENTERCRITICAL:
 19513                           	callstack 20
 19514                           
 19515                           ;incstack = 0
 19516                           ;ENTERCRITICAL@inISR stored from wreg
 19517  006368  6E12               	movwf	ENTERCRITICAL@inISR^0,c
 19518  00636A                     
 19519                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 19520  00636A  5012               	movf	ENTERCRITICAL@inISR^0,w,c
 19521  00636C  A4D8               	btfss	status,2,c
 19522  00636E  EFBB  F031         	goto	u5951
 19523  006372  EFBD  F031         	goto	u5950
 19524  006376                     u5951:
 19525  006376  EFBE  F031         	goto	l756
 19526  00637A                     u5950:
 19527  00637A                     
 19528                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 19529  00637A  9EF2               	bcf	4082,7,c	;volatile
 19530  00637C                     l756:
 19531  00637C  0012               	return		;funcret
 19532  00637E                     __end_of_ENTERCRITICAL:
 19533                           	callstack 0
 19534                           
 19535 ;; *************** function _isr *****************
 19536 ;; Defined at:
 19537 ;;		line 18 in file "main.c"
 19538 ;; Parameters:    Size  Location     Type
 19539 ;;		None
 19540 ;; Auto vars:     Size  Location     Type
 19541 ;;		None
 19542 ;; Return value:  Size  Location     Type
 19543 ;;                  1    wreg      void 
 19544 ;; Registers used:
 19545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19546 ;; Tracked objects:
 19547 ;;		On entry : 0/0
 19548 ;;		On exit  : 0/0
 19549 ;;		Unchanged: 0/0
 19550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19551 ;;      Params:         0       0       0       0       0       0       0
 19552 ;;      Locals:         0       0       0       0       0       0       0
 19553 ;;      Temps:          4       0       0       0       0       0       0
 19554 ;;      Totals:         4       0       0       0       0       0       0
 19555 ;;Total ram usage:        4 bytes
 19556 ;; Hardware stack levels used: 1
 19557 ;; Hardware stack levels required when called: 3
 19558 ;; This function calls:
 19559 ;;		_XF_decrementAndQueueTimers
 19560 ;;		i2_XF_pushEvent
 19561 ;; This function is called by:
 19562 ;;		Interrupt level 2
 19563 ;; This function uses a non-reentrant model
 19564 ;;
 19565                           
 19566                           	psect	intcode
 19567  000008                     __pintcode:
 19568                           	callstack 0
 19569  000008                     _isr:
 19570                           	callstack 14
 19571                           
 19572                           ;incstack = 0
 19573  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 19574  00000A  CFD9 F00E          	movff	fsr2l,??_isr
 19575  00000E  CFDA F00F          	movff	fsr2h,??_isr+1
 19576  000012  CFF3 F010          	movff	prodl,??_isr+2
 19577  000016  CFF4 F011          	movff	prodh,??_isr+3
 19578  00001A                     
 19579                           ;main.c: 20:     if((INT1IF==1)&&(INT1IE==1))
 19580  00001A  A0F0               	btfss	4080,0,c	;volatile
 19581  00001C  EF12  F000         	goto	i2u536_41
 19582  000020  EF14  F000         	goto	i2u536_40
 19583  000024                     i2u536_41:
 19584  000024  EF39  F000         	goto	i2l7689
 19585  000028                     i2u536_40:
 19586  000028  A6F0               	btfss	4080,3,c	;volatile
 19587  00002A  EF19  F000         	goto	i2u537_41
 19588  00002E  EF1B  F000         	goto	i2u537_40
 19589  000032                     i2u537_41:
 19590  000032  EF39  F000         	goto	i2l7689
 19591  000036                     i2u537_40:
 19592  000036                     
 19593                           ;main.c: 21:     {;main.c: 22:         if(INTEDG1==0)
 19594  000036  BAF1               	btfsc	4081,5,c	;volatile
 19595  000038  EF20  F000         	goto	i2u538_41
 19596  00003C  EF22  F000         	goto	i2u538_40
 19597  000040                     i2u538_41:
 19598  000040  EF2B  F000         	goto	i2l794
 19599  000044                     i2u538_40:
 19600  000044                     
 19601                           ;main.c: 23:         {;main.c: 24:             INTEDG1=1;
 19602  000044  8AF1               	bsf	4081,5,c	;volatile
 19603                           
 19604                           ;main.c: 25:             INT1IF=0;
 19605  000046  90F0               	bcf	4080,0,c	;volatile
 19606  000048                     
 19607                           ;main.c: 26:             XF_pushEvent(evPress,1);
 19608  000048  0E01               	movlw	1
 19609  00004A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19610  00004C  0E01               	movlw	1
 19611  00004E  ECDE  F02E         	call	i2_XF_pushEvent
 19612                           
 19613                           ;main.c: 28:         }
 19614  000052  EF39  F000         	goto	i2l7689
 19615  000056                     i2l794:
 19616  000056  AAF1               	btfss	4081,5,c	;volatile
 19617  000058  EF30  F000         	goto	i2u539_41
 19618  00005C  EF32  F000         	goto	i2u539_40
 19619  000060                     i2u539_41:
 19620  000060  EF39  F000         	goto	i2l7689
 19621  000064                     i2u539_40:
 19622  000064                     
 19623                           ;main.c: 30:         {;main.c: 31:             INTEDG1=0;
 19624  000064  9AF1               	bcf	4081,5,c	;volatile
 19625                           
 19626                           ;main.c: 32:             INT1IF=0;
 19627  000066  90F0               	bcf	4080,0,c	;volatile
 19628  000068                     
 19629                           ;main.c: 33:             XF_pushEvent(evRelease,1);
 19630  000068  0E01               	movlw	1
 19631  00006A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19632  00006C  0E02               	movlw	2
 19633  00006E  ECDE  F02E         	call	i2_XF_pushEvent
 19634  000072                     i2l7689:
 19635                           
 19636                           ;main.c: 39:     if((TMR0IF==1)&&(TMR0IE==1))
 19637  000072  A4F2               	btfss	4082,2,c	;volatile
 19638  000074  EF3E  F000         	goto	i2u540_41
 19639  000078  EF40  F000         	goto	i2u540_40
 19640  00007C                     i2u540_41:
 19641  00007C  EF4E  F000         	goto	i2l798
 19642  000080                     i2u540_40:
 19643  000080  AAF2               	btfss	4082,5,c	;volatile
 19644  000082  EF45  F000         	goto	i2u541_41
 19645  000086  EF47  F000         	goto	i2u541_40
 19646  00008A                     i2u541_41:
 19647  00008A  EF4E  F000         	goto	i2l798
 19648  00008E                     i2u541_40:
 19649  00008E                     
 19650                           ;main.c: 40:     {;main.c: 41:         XF_decrementAndQueueTimers();
 19651  00008E  EC45  F022         	call	_XF_decrementAndQueueTimers	;wreg free
 19652  000092                     
 19653                           ;main.c: 42:         TMR0H=0xFB;
 19654  000092  0EFB               	movlw	251
 19655  000094  6ED7               	movwf	215,c	;volatile
 19656  000096                     
 19657                           ;main.c: 43:         TMR0L=0x1D;
 19658  000096  0E1D               	movlw	29
 19659  000098  6ED6               	movwf	214,c	;volatile
 19660  00009A                     
 19661                           ;main.c: 44:         TMR0IF=0;
 19662  00009A  94F2               	bcf	4082,2,c	;volatile
 19663  00009C                     i2l798:
 19664  00009C  C011  FFF4         	movff	??_isr+3,prodh
 19665  0000A0  C010  FFF3         	movff	??_isr+2,prodl
 19666  0000A4  C00F  FFDA         	movff	??_isr+1,fsr2h
 19667  0000A8  C00E  FFD9         	movff	??_isr,fsr2l
 19668  0000AC  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 19669  0000AE  0011               	retfie		f
 19670  0000B0                     __end_of_isr:
 19671                           	callstack 0
 19672                           
 19673 ;; *************** function _XF_decrementAndQueueTimers *****************
 19674 ;; Defined at:
 19675 ;;		line 139 in file "xf/xf.c"
 19676 ;; Parameters:    Size  Location     Type
 19677 ;;		None
 19678 ;; Auto vars:     Size  Location     Type
 19679 ;;  i               2   11[COMRAM] int 
 19680 ;; Return value:  Size  Location     Type
 19681 ;;                  1    wreg      void 
 19682 ;; Registers used:
 19683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19684 ;; Tracked objects:
 19685 ;;		On entry : 0/0
 19686 ;;		On exit  : 0/0
 19687 ;;		Unchanged: 0/0
 19688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19689 ;;      Params:         0       0       0       0       0       0       0
 19690 ;;      Locals:         2       0       0       0       0       0       0
 19691 ;;      Temps:          2       0       0       0       0       0       0
 19692 ;;      Totals:         4       0       0       0       0       0       0
 19693 ;;Total ram usage:        4 bytes
 19694 ;; Hardware stack levels used: 1
 19695 ;; Hardware stack levels required when called: 2
 19696 ;; This function calls:
 19697 ;;		_XF_unscheduleTimer
 19698 ;;		i2_XF_pushEvent
 19699 ;;		i2___wmul
 19700 ;; This function is called by:
 19701 ;;		_isr
 19702 ;; This function uses a non-reentrant model
 19703 ;;
 19704                           
 19705                           	psect	text81
 19706  00448A                     __ptext81:
 19707                           	callstack 0
 19708  00448A                     _XF_decrementAndQueueTimers:
 19709                           	callstack 14
 19710  00448A                     
 19711                           ;xf/xf.c: 141:     int i;;xf/xf.c: 142:     for (i=0; i<8; i++)
 19712  00448A  0E00               	movlw	0
 19713  00448C  6E0D               	movwf	(XF_decrementAndQueueTimers@i+1)^0,c
 19714  00448E  0E00               	movlw	0
 19715  004490  6E0C               	movwf	XF_decrementAndQueueTimers@i^0,c
 19716  004492                     i2l7661:
 19717                           
 19718                           ;xf/xf.c: 143:     {;xf/xf.c: 144:         if (theXF.timerList[i].ev != NULLEVENT)
 19719  004492  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19720  004496  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19721  00449A  0E00               	movlw	0
 19722  00449C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19723  00449E  0E03               	movlw	3
 19724  0044A0  6E03               	movwf	i2___wmul@multiplicand^0,c
 19725  0044A2  EC58  F031         	call	i2___wmul	;wreg free
 19726  0044A6  0EB7               	movlw	low (_theXF+2)
 19727  0044A8  2401               	addwf	?i2___wmul^0,w,c
 19728  0044AA  6ED9               	movwf	fsr2l,c
 19729  0044AC  0E00               	movlw	high (_theXF+2)
 19730  0044AE  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19731  0044B0  6EDA               	movwf	fsr2h,c
 19732  0044B2  50DF               	movf	indf2,w,c
 19733  0044B4  B4D8               	btfsc	status,2,c
 19734  0044B6  EF5F  F022         	goto	i2u532_41
 19735  0044BA  EF61  F022         	goto	i2u532_40
 19736  0044BE                     i2u532_41:
 19737  0044BE  EFC5  F022         	goto	i2l7671
 19738  0044C2                     i2u532_40:
 19739  0044C2                     
 19740                           ;xf/xf.c: 145:         {;xf/xf.c: 147:             theXF.timerList[i].tm-=1;
 19741  0044C2  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19742  0044C6  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19743  0044CA  0E00               	movlw	0
 19744  0044CC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19745  0044CE  0E03               	movlw	3
 19746  0044D0  6E03               	movwf	i2___wmul@multiplicand^0,c
 19747  0044D2  EC58  F031         	call	i2___wmul	;wreg free
 19748  0044D6  0EB5               	movlw	low _theXF
 19749  0044D8  2401               	addwf	?i2___wmul^0,w,c
 19750  0044DA  6ED9               	movwf	fsr2l,c
 19751  0044DC  0E00               	movlw	high _theXF
 19752  0044DE  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19753  0044E0  6EDA               	movwf	fsr2h,c
 19754  0044E2  06DE               	decf	postinc2,f,c
 19755  0044E4  0E00               	movlw	0
 19756  0044E6  5ADD               	subwfb	postdec2,f,c
 19757                           
 19758                           ;xf/xf.c: 148:             if (theXF.timerList[i].tm ==0)
 19759  0044E8  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19760  0044EC  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19761  0044F0  0E00               	movlw	0
 19762  0044F2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19763  0044F4  0E03               	movlw	3
 19764  0044F6  6E03               	movwf	i2___wmul@multiplicand^0,c
 19765  0044F8  EC58  F031         	call	i2___wmul	;wreg free
 19766  0044FC  0EB5               	movlw	low _theXF
 19767  0044FE  2401               	addwf	?i2___wmul^0,w,c
 19768  004500  6ED9               	movwf	fsr2l,c
 19769  004502  0E00               	movlw	high _theXF
 19770  004504  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19771  004506  6EDA               	movwf	fsr2h,c
 19772  004508  50DE               	movf	postinc2,w,c
 19773  00450A  10DE               	iorwf	postinc2,w,c
 19774  00450C  A4D8               	btfss	status,2,c
 19775  00450E  EF8B  F022         	goto	i2u533_41
 19776  004512  EF8D  F022         	goto	i2u533_40
 19777  004516                     i2u533_41:
 19778  004516  EFC5  F022         	goto	i2l7671
 19779  00451A                     i2u533_40:
 19780  00451A                     
 19781                           ;xf/xf.c: 149:             {;xf/xf.c: 150:                 if(XF_pushEvent(theXF.timerLi
      +                          st[i].ev, 1) == 1)
 19782  00451A  0E01               	movlw	1
 19783  00451C  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19784  00451E  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19785  004522  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19786  004526  0E00               	movlw	0
 19787  004528  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19788  00452A  0E03               	movlw	3
 19789  00452C  6E03               	movwf	i2___wmul@multiplicand^0,c
 19790  00452E  EC58  F031         	call	i2___wmul	;wreg free
 19791  004532  0EB7               	movlw	low (_theXF+2)
 19792  004534  2401               	addwf	?i2___wmul^0,w,c
 19793  004536  6ED9               	movwf	fsr2l,c
 19794  004538  0E00               	movlw	high (_theXF+2)
 19795  00453A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19796  00453C  6EDA               	movwf	fsr2h,c
 19797  00453E  50DF               	movf	indf2,w,c
 19798  004540  ECDE  F02E         	call	i2_XF_pushEvent
 19799  004544  06E8               	decf	wreg,f,c
 19800  004546  A4D8               	btfss	status,2,c
 19801  004548  EFA8  F022         	goto	i2u534_41
 19802  00454C  EFAA  F022         	goto	i2u534_40
 19803  004550                     i2u534_41:
 19804  004550  EFB1  F022         	goto	i2l7669
 19805  004554                     i2u534_40:
 19806  004554                     
 19807                           ;xf/xf.c: 151:                 {;xf/xf.c: 152:                   XF_unscheduleTimer(i, 1
      +                          );
 19808  004554  0E01               	movlw	1
 19809  004556  6E02               	movwf	XF_unscheduleTimer@inISR^0,c
 19810  004558  500C               	movf	XF_decrementAndQueueTimers@i^0,w,c
 19811  00455A  ECA3  F030         	call	_XF_unscheduleTimer
 19812                           
 19813                           ;xf/xf.c: 153:                 }
 19814  00455E  EFC5  F022         	goto	i2l7671
 19815  004562                     i2l7669:
 19816                           
 19817                           ;xf/xf.c: 155:                 {;xf/xf.c: 156:                   theXF.timerList[i].tm=1
      +                          ;
 19818  004562  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19819  004566  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19820  00456A  0E00               	movlw	0
 19821  00456C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19822  00456E  0E03               	movlw	3
 19823  004570  6E03               	movwf	i2___wmul@multiplicand^0,c
 19824  004572  EC58  F031         	call	i2___wmul	;wreg free
 19825  004576  0EB5               	movlw	low _theXF
 19826  004578  2401               	addwf	?i2___wmul^0,w,c
 19827  00457A  6ED9               	movwf	fsr2l,c
 19828  00457C  0E00               	movlw	high _theXF
 19829  00457E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19830  004580  6EDA               	movwf	fsr2h,c
 19831  004582  0E01               	movlw	1
 19832  004584  6EDE               	movwf	postinc2,c
 19833  004586  0E00               	movlw	0
 19834  004588  6EDD               	movwf	postdec2,c
 19835  00458A                     i2l7671:
 19836                           
 19837                           ;xf/xf.c: 160:     }
 19838  00458A  4A0C               	infsnz	XF_decrementAndQueueTimers@i^0,f,c
 19839  00458C  2A0D               	incf	(XF_decrementAndQueueTimers@i+1)^0,f,c
 19840  00458E  BE0D               	btfsc	(XF_decrementAndQueueTimers@i+1)^0,7,c
 19841  004590  EFD3  F022         	goto	i2u535_41
 19842  004594  500D               	movf	(XF_decrementAndQueueTimers@i+1)^0,w,c
 19843  004596  E109               	bnz	i2u535_40
 19844  004598  0E08               	movlw	8
 19845  00459A  5C0C               	subwf	XF_decrementAndQueueTimers@i^0,w,c
 19846  00459C  A0D8               	btfss	status,0,c
 19847  00459E  EFD3  F022         	goto	i2u535_41
 19848  0045A2  EFD5  F022         	goto	i2u535_40
 19849  0045A6                     i2u535_41:
 19850  0045A6  EF49  F022         	goto	i2l7661
 19851  0045AA                     i2u535_40:
 19852  0045AA  0012               	return		;funcret
 19853  0045AC                     __end_of_XF_decrementAndQueueTimers:
 19854                           	callstack 0
 19855                           
 19856 ;; *************** function i2___wmul *****************
 19857 ;; Defined at:
 19858 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 19859 ;; Parameters:    Size  Location     Type
 19860 ;;  multiplier      2    0[COMRAM] unsigned int 
 19861 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19862 ;; Auto vars:     Size  Location     Type
 19863 ;;  product         2    4[COMRAM] unsigned int 
 19864 ;; Return value:  Size  Location     Type
 19865 ;;                  2    0[COMRAM] unsigned int 
 19866 ;; Registers used:
 19867 ;;		wreg, status,2, status,0, prodl, prodh
 19868 ;; Tracked objects:
 19869 ;;		On entry : 0/0
 19870 ;;		On exit  : 0/0
 19871 ;;		Unchanged: 0/0
 19872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19873 ;;      Params:         4       0       0       0       0       0       0
 19874 ;;      Locals:         2       0       0       0       0       0       0
 19875 ;;      Temps:          0       0       0       0       0       0       0
 19876 ;;      Totals:         6       0       0       0       0       0       0
 19877 ;;Total ram usage:        6 bytes
 19878 ;; Hardware stack levels used: 1
 19879 ;; This function calls:
 19880 ;;		Nothing
 19881 ;; This function is called by:
 19882 ;;		_XF_decrementAndQueueTimers
 19883 ;; This function uses a non-reentrant model
 19884 ;;
 19885                           
 19886                           	psect	text82
 19887  0062B0                     __ptext82:
 19888                           	callstack 0
 19889  0062B0                     i2___wmul:
 19890                           	callstack 15
 19891  0062B0  5001               	movf	i2___wmul@multiplier^0,w,c
 19892  0062B2  0203               	mulwf	i2___wmul@multiplicand^0,c
 19893  0062B4  CFF3 F005          	movff	prodl,i2___wmul@product
 19894  0062B8  CFF4 F006          	movff	prodh,i2___wmul@product+1
 19895  0062BC  5001               	movf	i2___wmul@multiplier^0,w,c
 19896  0062BE  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 19897  0062C0  50F3               	movf	243,w,c
 19898  0062C2  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19899  0062C4  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 19900  0062C6  0203               	mulwf	i2___wmul@multiplicand^0,c
 19901  0062C8  50F3               	movf	243,w,c
 19902  0062CA  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19903  0062CC  C005  F001         	movff	i2___wmul@product,?i2___wmul
 19904  0062D0  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 19905  0062D4  0012               	return		;funcret
 19906  0062D6                     __end_ofi2___wmul:
 19907                           	callstack 0
 19908                           
 19909 ;; *************** function i2_XF_pushEvent *****************
 19910 ;; Defined at:
 19911 ;;		line 49 in file "xf/xf.c"
 19912 ;; Parameters:    Size  Location     Type
 19913 ;;  ev              1    wreg     unsigned char 
 19914 ;;  inISR           1    6[COMRAM] _Bool 
 19915 ;; Auto vars:     Size  Location     Type
 19916 ;;  ev              1    7[COMRAM] unsigned char 
 19917 ;;  temp            1    8[COMRAM] unsigned char 
 19918 ;; Return value:  Size  Location     Type
 19919 ;;                  1    wreg      _Bool 
 19920 ;; Registers used:
 19921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19922 ;; Tracked objects:
 19923 ;;		On entry : 0/0
 19924 ;;		On exit  : 0/0
 19925 ;;		Unchanged: 0/0
 19926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19927 ;;      Params:         1       0       0       0       0       0       0
 19928 ;;      Locals:         2       0       0       0       0       0       0
 19929 ;;      Temps:          0       0       0       0       0       0       0
 19930 ;;      Totals:         3       0       0       0       0       0       0
 19931 ;;Total ram usage:        3 bytes
 19932 ;; Hardware stack levels used: 1
 19933 ;; Hardware stack levels required when called: 1
 19934 ;; This function calls:
 19935 ;;		i2_ENTERCRITICAL
 19936 ;;		i2_LEAVECRITICAL
 19937 ;;		i2___awmod
 19938 ;; This function is called by:
 19939 ;;		_XF_decrementAndQueueTimers
 19940 ;;		_isr
 19941 ;; This function uses a non-reentrant model
 19942 ;;
 19943                           
 19944                           	psect	text83
 19945  005DBC                     __ptext83:
 19946                           	callstack 0
 19947  005DBC                     i2_XF_pushEvent:
 19948                           	callstack 15
 19949                           
 19950                           ;incstack = 0
 19951                           ;i2XF_pushEvent@ev stored from wreg
 19952  005DBC  6E08               	movwf	i2XF_pushEvent@ev^0,c
 19953  005DBE                     
 19954                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 19955  005DBE  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 19956  005DC0  ECCA  F031         	call	i2_ENTERCRITICAL
 19957  005DC4                     
 19958                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 19959  005DC4  0E01               	movlw	1
 19960  005DC6  0100               	movlb	0	; () banked
 19961  005DC8  25D9               	addwf	(_theXF+36)& (0+255),w,b
 19962  005DCA  6E01               	movwf	i2___awmod@dividend^0,c
 19963  005DCC  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 19964  005DCE  0E00               	movlw	0
 19965  005DD0  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
 19966  005DD2  0E00               	movlw	0
 19967  005DD4  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 19968  005DD6  0E0C               	movlw	12
 19969  005DD8  6E03               	movwf	i2___awmod@divisor^0,c
 19970  005DDA  EC1C  F02C         	call	i2___awmod	;wreg free
 19971  005DDE  5001               	movf	?i2___awmod^0,w,c
 19972  005DE0  6E09               	movwf	i2XF_pushEvent@temp^0,c
 19973  005DE2                     
 19974                           ;xf/xf.c: 55:     if(temp == theXF.out)
 19975  005DE2  5009               	movf	i2XF_pushEvent@temp^0,w,c
 19976  005DE4  0100               	movlb	0	; () banked
 19977  005DE6  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 19978  005DE8  A4D8               	btfss	status,2,c
 19979  005DEA  EFF9  F02E         	goto	i2u530_41
 19980  005DEE  EFFB  F02E         	goto	i2u530_40
 19981  005DF2                     i2u530_41:
 19982  005DF2  EF01  F02F         	goto	i2l7571
 19983  005DF6                     i2u530_40:
 19984  005DF6                     
 19985                           ; BSR set to: 0
 19986                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 19987  005DF6  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 19988  005DF8  ECBF  F031         	call	i2_LEAVECRITICAL
 19989  005DFC                     
 19990                           ;xf/xf.c: 58:       return 0;
 19991  005DFC  0E00               	movlw	0
 19992  005DFE  EF0F  F02F         	goto	i2l730
 19993  005E02                     i2l7571:
 19994                           
 19995                           ; BSR set to: 0
 19996                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 19997  005E02  0ECD               	movlw	low (_theXF+24)
 19998  005E04  25D9               	addwf	(_theXF+36)& (0+255),w,b
 19999  005E06  6ED9               	movwf	fsr2l,c
 20000  005E08  6ADA               	clrf	fsr2h,c
 20001  005E0A  0E00               	movlw	high (_theXF+24)
 20002  005E0C  22DA               	addwfc	fsr2h,f,c
 20003  005E0E  C008  FFDF         	movff	i2XF_pushEvent@ev,indf2
 20004  005E12                     
 20005                           ; BSR set to: 0
 20006                           ;xf/xf.c: 61:     theXF.in = temp;
 20007  005E12  C009  F0D9         	movff	i2XF_pushEvent@temp,_theXF+36
 20008  005E16                     
 20009                           ; BSR set to: 0
 20010                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 20011  005E16  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20012  005E18  ECBF  F031         	call	i2_LEAVECRITICAL
 20013  005E1C                     
 20014                           ;xf/xf.c: 63:     return 1;
 20015  005E1C  0E01               	movlw	1
 20016  005E1E                     i2l730:
 20017  005E1E  0012               	return		;funcret
 20018  005E20                     __end_ofi2_XF_pushEvent:
 20019                           	callstack 0
 20020                           
 20021 ;; *************** function i2___awmod *****************
 20022 ;; Defined at:
 20023 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 20024 ;; Parameters:    Size  Location     Type
 20025 ;;  dividend        2    0[COMRAM] int 
 20026 ;;  divisor         2    2[COMRAM] int 
 20027 ;; Auto vars:     Size  Location     Type
 20028 ;;  sign            1    5[COMRAM] unsigned char 
 20029 ;;  counter         1    4[COMRAM] unsigned char 
 20030 ;; Return value:  Size  Location     Type
 20031 ;;                  2    0[COMRAM] int 
 20032 ;; Registers used:
 20033 ;;		wreg, status,2, status,0
 20034 ;; Tracked objects:
 20035 ;;		On entry : 0/0
 20036 ;;		On exit  : 0/0
 20037 ;;		Unchanged: 0/0
 20038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20039 ;;      Params:         4       0       0       0       0       0       0
 20040 ;;      Locals:         2       0       0       0       0       0       0
 20041 ;;      Temps:          0       0       0       0       0       0       0
 20042 ;;      Totals:         6       0       0       0       0       0       0
 20043 ;;Total ram usage:        6 bytes
 20044 ;; Hardware stack levels used: 1
 20045 ;; This function calls:
 20046 ;;		Nothing
 20047 ;; This function is called by:
 20048 ;;		i2_XF_pushEvent
 20049 ;; This function uses a non-reentrant model
 20050 ;;
 20051                           
 20052                           	psect	text84
 20053  005838                     __ptext84:
 20054                           	callstack 0
 20055  005838                     i2___awmod:
 20056                           	callstack 15
 20057  005838  0E00               	movlw	0
 20058  00583A  6E06               	movwf	i2___awmod@sign^0,c
 20059  00583C  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 20060  00583E  EF25  F02C         	goto	i2u509_40
 20061  005842  EF23  F02C         	goto	i2u509_41
 20062  005846                     i2u509_41:
 20063  005846  EF2B  F02C         	goto	i2l7353
 20064  00584A                     i2u509_40:
 20065  00584A  6C01               	negf	i2___awmod@dividend^0,c
 20066  00584C  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20067  00584E  B0D8               	btfsc	status,0,c
 20068  005850  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20069  005852  0E01               	movlw	1
 20070  005854  6E06               	movwf	i2___awmod@sign^0,c
 20071  005856                     i2l7353:
 20072  005856  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 20073  005858  EF32  F02C         	goto	i2u510_40
 20074  00585C  EF30  F02C         	goto	i2u510_41
 20075  005860                     i2u510_41:
 20076  005860  EF36  F02C         	goto	i2l7357
 20077  005864                     i2u510_40:
 20078  005864  6C03               	negf	i2___awmod@divisor^0,c
 20079  005866  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 20080  005868  B0D8               	btfsc	status,0,c
 20081  00586A  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 20082  00586C                     i2l7357:
 20083  00586C  5003               	movf	i2___awmod@divisor^0,w,c
 20084  00586E  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 20085  005870  B4D8               	btfsc	status,2,c
 20086  005872  EF3D  F02C         	goto	i2u511_41
 20087  005876  EF3F  F02C         	goto	i2u511_40
 20088  00587A                     i2u511_41:
 20089  00587A  EF63  F02C         	goto	i2l7373
 20090  00587E                     i2u511_40:
 20091  00587E  0E01               	movlw	1
 20092  005880  6E05               	movwf	i2___awmod@counter^0,c
 20093  005882  EF47  F02C         	goto	i2l7363
 20094  005886                     i2l7361:
 20095  005886  90D8               	bcf	status,0,c
 20096  005888  3603               	rlcf	i2___awmod@divisor^0,f,c
 20097  00588A  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 20098  00588C  2A05               	incf	i2___awmod@counter^0,f,c
 20099  00588E                     i2l7363:
 20100  00588E  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 20101  005890  EF4C  F02C         	goto	i2u512_41
 20102  005894  EF4E  F02C         	goto	i2u512_40
 20103  005898                     i2u512_41:
 20104  005898  EF43  F02C         	goto	i2l7361
 20105  00589C                     i2u512_40:
 20106  00589C                     i2l7365:
 20107  00589C  5003               	movf	i2___awmod@divisor^0,w,c
 20108  00589E  5C01               	subwf	i2___awmod@dividend^0,w,c
 20109  0058A0  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20110  0058A2  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 20111  0058A4  A0D8               	btfss	status,0,c
 20112  0058A6  EF57  F02C         	goto	i2u513_41
 20113  0058AA  EF59  F02C         	goto	i2u513_40
 20114  0058AE                     i2u513_41:
 20115  0058AE  EF5D  F02C         	goto	i2l7369
 20116  0058B2                     i2u513_40:
 20117  0058B2  5003               	movf	i2___awmod@divisor^0,w,c
 20118  0058B4  5E01               	subwf	i2___awmod@dividend^0,f,c
 20119  0058B6  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20120  0058B8  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 20121  0058BA                     i2l7369:
 20122  0058BA  90D8               	bcf	status,0,c
 20123  0058BC  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 20124  0058BE  3203               	rrcf	i2___awmod@divisor^0,f,c
 20125  0058C0  2E05               	decfsz	i2___awmod@counter^0,f,c
 20126  0058C2  EF4E  F02C         	goto	i2l7365
 20127  0058C6                     i2l7373:
 20128  0058C6  5006               	movf	i2___awmod@sign^0,w,c
 20129  0058C8  B4D8               	btfsc	status,2,c
 20130  0058CA  EF69  F02C         	goto	i2u514_41
 20131  0058CE  EF6B  F02C         	goto	i2u514_40
 20132  0058D2                     i2u514_41:
 20133  0058D2  EF6F  F02C         	goto	i2l7377
 20134  0058D6                     i2u514_40:
 20135  0058D6  6C01               	negf	i2___awmod@dividend^0,c
 20136  0058D8  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20137  0058DA  B0D8               	btfsc	status,0,c
 20138  0058DC  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20139  0058DE                     i2l7377:
 20140  0058DE  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 20141  0058E2  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 20142  0058E6  0012               	return		;funcret
 20143  0058E8                     __end_ofi2___awmod:
 20144                           	callstack 0
 20145                           
 20146 ;; *************** function _XF_unscheduleTimer *****************
 20147 ;; Defined at:
 20148 ;;		line 125 in file "xf/xf.c"
 20149 ;; Parameters:    Size  Location     Type
 20150 ;;  id              1    wreg     unsigned char 
 20151 ;;  inISR           1    1[COMRAM] _Bool 
 20152 ;; Auto vars:     Size  Location     Type
 20153 ;;  id              1    2[COMRAM] unsigned char 
 20154 ;; Return value:  Size  Location     Type
 20155 ;;                  1    wreg      void 
 20156 ;; Registers used:
 20157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20158 ;; Tracked objects:
 20159 ;;		On entry : 0/0
 20160 ;;		On exit  : 0/0
 20161 ;;		Unchanged: 0/0
 20162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20163 ;;      Params:         1       0       0       0       0       0       0
 20164 ;;      Locals:         1       0       0       0       0       0       0
 20165 ;;      Temps:          0       0       0       0       0       0       0
 20166 ;;      Totals:         2       0       0       0       0       0       0
 20167 ;;Total ram usage:        2 bytes
 20168 ;; Hardware stack levels used: 1
 20169 ;; Hardware stack levels required when called: 1
 20170 ;; This function calls:
 20171 ;;		i2_ENTERCRITICAL
 20172 ;;		i2_LEAVECRITICAL
 20173 ;; This function is called by:
 20174 ;;		_XF_decrementAndQueueTimers
 20175 ;; This function uses a non-reentrant model
 20176 ;;
 20177                           
 20178                           	psect	text85
 20179  006146                     __ptext85:
 20180                           	callstack 0
 20181  006146                     _XF_unscheduleTimer:
 20182                           	callstack 14
 20183                           
 20184                           ;incstack = 0
 20185                           ;XF_unscheduleTimer@id stored from wreg
 20186  006146  6E03               	movwf	XF_unscheduleTimer@id^0,c
 20187  006148                     
 20188                           ;xf/xf.c: 125: void XF_unscheduleTimer(TimerID id, _Bool inISR);xf/xf.c: 126: {;xf/xf.c:
      +                           127:     ENTERCRITICAL(inISR);
 20189  006148  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20190  00614A  ECCA  F031         	call	i2_ENTERCRITICAL
 20191  00614E                     
 20192                           ;xf/xf.c: 128:     theXF.timerList[id].tm = 0;
 20193  00614E  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20194  006150  0D03               	mullw	3
 20195  006152  0EB5               	movlw	low _theXF
 20196  006154  24F3               	addwf	243,w,c
 20197  006156  6ED9               	movwf	fsr2l,c
 20198  006158  0E00               	movlw	high _theXF
 20199  00615A  20F4               	addwfc	prodh,w,c
 20200  00615C  6EDA               	movwf	fsr2h,c
 20201  00615E  0E00               	movlw	0
 20202  006160  6EDE               	movwf	postinc2,c
 20203  006162  0E00               	movlw	0
 20204  006164  6EDD               	movwf	postdec2,c
 20205  006166                     
 20206                           ;xf/xf.c: 129:     theXF.timerList[id].ev = NULLEVENT;
 20207  006166  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20208  006168  0D03               	mullw	3
 20209  00616A  0EB7               	movlw	low (_theXF+2)
 20210  00616C  24F3               	addwf	243,w,c
 20211  00616E  6ED9               	movwf	fsr2l,c
 20212  006170  0E00               	movlw	high (_theXF+2)
 20213  006172  20F4               	addwfc	prodh,w,c
 20214  006174  6EDA               	movwf	fsr2h,c
 20215  006176  0E00               	movlw	0
 20216  006178  6EDF               	movwf	indf2,c
 20217                           
 20218                           ;xf/xf.c: 130:     LEAVECRITICAL(inISR);
 20219  00617A  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20220  00617C  ECBF  F031         	call	i2_LEAVECRITICAL
 20221  006180  0012               	return		;funcret
 20222  006182                     __end_of_XF_unscheduleTimer:
 20223                           	callstack 0
 20224                           
 20225 ;; *************** function i2_LEAVECRITICAL *****************
 20226 ;; Defined at:
 20227 ;;		line 186 in file "xf/xf.c"
 20228 ;; Parameters:    Size  Location     Type
 20229 ;;  inISR           1    wreg     _Bool 
 20230 ;; Auto vars:     Size  Location     Type
 20231 ;;  inISR           1    0[COMRAM] _Bool 
 20232 ;; Return value:  Size  Location     Type
 20233 ;;                  1    wreg      void 
 20234 ;; Registers used:
 20235 ;;		wreg, status,2
 20236 ;; Tracked objects:
 20237 ;;		On entry : 0/0
 20238 ;;		On exit  : 0/0
 20239 ;;		Unchanged: 0/0
 20240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20241 ;;      Params:         0       0       0       0       0       0       0
 20242 ;;      Locals:         1       0       0       0       0       0       0
 20243 ;;      Temps:          0       0       0       0       0       0       0
 20244 ;;      Totals:         1       0       0       0       0       0       0
 20245 ;;Total ram usage:        1 bytes
 20246 ;; Hardware stack levels used: 1
 20247 ;; This function calls:
 20248 ;;		Nothing
 20249 ;; This function is called by:
 20250 ;;		_XF_unscheduleTimer
 20251 ;;		i2_XF_pushEvent
 20252 ;; This function uses a non-reentrant model
 20253 ;;
 20254                           
 20255                           	psect	text86
 20256  00637E                     __ptext86:
 20257                           	callstack 0
 20258  00637E                     i2_LEAVECRITICAL:
 20259                           	callstack 15
 20260                           
 20261                           ;incstack = 0
 20262                           ;i2LEAVECRITICAL@inISR stored from wreg
 20263  00637E  6E01               	movwf	i2LEAVECRITICAL@inISR^0,c
 20264  006380                     
 20265                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 20266  006380  5001               	movf	i2LEAVECRITICAL@inISR^0,w,c
 20267  006382  A4D8               	btfss	status,2,c
 20268  006384  EFC6  F031         	goto	i2u508_41
 20269  006388  EFC8  F031         	goto	i2u508_40
 20270  00638C                     i2u508_41:
 20271  00638C  EFC9  F031         	goto	i2l760
 20272  006390                     i2u508_40:
 20273  006390                     
 20274                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 20275  006390  8EF2               	bsf	4082,7,c	;volatile
 20276  006392                     i2l760:
 20277  006392  0012               	return		;funcret
 20278  006394                     __end_ofi2_LEAVECRITICAL:
 20279                           	callstack 0
 20280                           
 20281 ;; *************** function i2_ENTERCRITICAL *****************
 20282 ;; Defined at:
 20283 ;;		line 172 in file "xf/xf.c"
 20284 ;; Parameters:    Size  Location     Type
 20285 ;;  inISR           1    wreg     _Bool 
 20286 ;; Auto vars:     Size  Location     Type
 20287 ;;  inISR           1    0[COMRAM] _Bool 
 20288 ;; Return value:  Size  Location     Type
 20289 ;;                  1    wreg      void 
 20290 ;; Registers used:
 20291 ;;		wreg, status,2
 20292 ;; Tracked objects:
 20293 ;;		On entry : 0/0
 20294 ;;		On exit  : 0/0
 20295 ;;		Unchanged: 0/0
 20296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20297 ;;      Params:         0       0       0       0       0       0       0
 20298 ;;      Locals:         1       0       0       0       0       0       0
 20299 ;;      Temps:          0       0       0       0       0       0       0
 20300 ;;      Totals:         1       0       0       0       0       0       0
 20301 ;;Total ram usage:        1 bytes
 20302 ;; Hardware stack levels used: 1
 20303 ;; This function calls:
 20304 ;;		Nothing
 20305 ;; This function is called by:
 20306 ;;		_XF_unscheduleTimer
 20307 ;;		i2_XF_pushEvent
 20308 ;; This function uses a non-reentrant model
 20309 ;;
 20310                           
 20311                           	psect	text87
 20312  006394                     __ptext87:
 20313                           	callstack 0
 20314  006394                     i2_ENTERCRITICAL:
 20315                           	callstack 15
 20316                           
 20317                           ;incstack = 0
 20318                           ;i2ENTERCRITICAL@inISR stored from wreg
 20319  006394  6E01               	movwf	i2ENTERCRITICAL@inISR^0,c
 20320  006396                     
 20321                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 20322  006396  5001               	movf	i2ENTERCRITICAL@inISR^0,w,c
 20323  006398  A4D8               	btfss	status,2,c
 20324  00639A  EFD1  F031         	goto	i2u507_41
 20325  00639E  EFD3  F031         	goto	i2u507_40
 20326  0063A2                     i2u507_41:
 20327  0063A2  EFD4  F031         	goto	i2l756
 20328  0063A6                     i2u507_40:
 20329  0063A6                     
 20330                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 20331  0063A6  9EF2               	bcf	4082,7,c	;volatile
 20332  0063A8                     i2l756:
 20333  0063A8  0012               	return		;funcret
 20334  0063AA                     __end_ofi2_ENTERCRITICAL:
 20335                           	callstack 0
 20336                           
 20337                           	psect	rparam
 20338  0000                     
 20339                           	psect	temp
 20340  00004E                     btemp:
 20341                           	callstack 0
 20342  00004E                     	ds	1
 20343  0000                     int$flags	set	btemp
 20344  0000                     wtemp8	set	btemp+1
 20345  0000                     ttemp5	set	btemp+1
 20346  0000                     ttemp6	set	btemp+4
 20347  0000                     ttemp7	set	btemp+8
 20348                           
 20349                           	psect	idloc
 20350                           
 20351                           ;Config register IDLOC0 @ 0x200000
 20352                           ;	unspecified, using default values
 20353  200000                     	org	2097152
 20354  200000  FF                 	db	255
 20355                           
 20356                           ;Config register IDLOC1 @ 0x200001
 20357                           ;	unspecified, using default values
 20358  200001                     	org	2097153
 20359  200001  FF                 	db	255
 20360                           
 20361                           ;Config register IDLOC2 @ 0x200002
 20362                           ;	unspecified, using default values
 20363  200002                     	org	2097154
 20364  200002  FF                 	db	255
 20365                           
 20366                           ;Config register IDLOC3 @ 0x200003
 20367                           ;	unspecified, using default values
 20368  200003                     	org	2097155
 20369  200003  FF                 	db	255
 20370                           
 20371                           ;Config register IDLOC4 @ 0x200004
 20372                           ;	unspecified, using default values
 20373  200004                     	org	2097156
 20374  200004  FF                 	db	255
 20375                           
 20376                           ;Config register IDLOC5 @ 0x200005
 20377                           ;	unspecified, using default values
 20378  200005                     	org	2097157
 20379  200005  FF                 	db	255
 20380                           
 20381                           ;Config register IDLOC6 @ 0x200006
 20382                           ;	unspecified, using default values
 20383  200006                     	org	2097158
 20384  200006  FF                 	db	255
 20385                           
 20386                           ;Config register IDLOC7 @ 0x200007
 20387                           ;	unspecified, using default values
 20388  200007                     	org	2097159
 20389  200007  FF                 	db	255
 20390                           
 20391                           	psect	config
 20392                           
 20393                           ; Padding undefined space
 20394  300000                     	org	3145728
 20395  300000  FF                 	db	255
 20396                           
 20397                           ;Config register CONFIG1H @ 0x300001
 20398                           ;	Oscillator Selection bits
 20399                           ;	FOSC = INTIO67, Internal oscillator block
 20400                           ;	4X PLL Enable
 20401                           ;	PLLCFG = ON, Oscillator multiplied by 4
 20402                           ;	Primary clock enable bit
 20403                           ;	PRICLKEN = ON, Primary clock is always enabled
 20404                           ;	Fail-Safe Clock Monitor Enable bit
 20405                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 20406                           ;	Internal/External Oscillator Switchover bit
 20407                           ;	IESO = OFF, Oscillator Switchover mode disabled
 20408  300001                     	org	3145729
 20409  300001  38                 	db	56
 20410                           
 20411                           ;Config register CONFIG2L @ 0x300002
 20412                           ;	Power-up Timer Enable bit
 20413                           ;	PWRTEN = OFF, Power up timer disabled
 20414                           ;	Brown-out Reset Enable bits
 20415                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 20416                           ;	Brown Out Reset Voltage bits
 20417                           ;	BORV = 190, VBOR set to 1.90 V nominal
 20418  300002                     	org	3145730
 20419  300002  1F                 	db	31
 20420                           
 20421                           ;Config register CONFIG2H @ 0x300003
 20422                           ;	Watchdog Timer Enable bits
 20423                           ;	WDTEN = SWON, WDT is controlled by SWDTEN bit of the WDTCON register
 20424                           ;	Watchdog Timer Postscale Select bits
 20425                           ;	WDTPS = 32768, 1:32768
 20426  300003                     	org	3145731
 20427  300003  3E                 	db	62
 20428                           
 20429                           ; Padding undefined space
 20430  300004                     	org	3145732
 20431  300004  FF                 	db	255
 20432                           
 20433                           ;Config register CONFIG3H @ 0x300005
 20434                           ;	CCP2 MUX bit
 20435                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 20436                           ;	PORTB A/D Enable bit
 20437                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 20438                           ;	P3A/CCP3 Mux bit
 20439                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 20440                           ;	HFINTOSC Fast Start-up
 20441                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 20442                           ;	Timer3 Clock input mux bit
 20443                           ;	T3CMX = PORTC0, T3CKI is on RC0
 20444                           ;	ECCP2 B output mux bit
 20445                           ;	P2BMX = PORTB5, P2B is on RB5
 20446                           ;	MCLR Pin Enable bit
 20447                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 20448  300005                     	org	3145733
 20449  300005  BD                 	db	189
 20450                           
 20451                           ;Config register CONFIG4L @ 0x300006
 20452                           ;	Stack Full/Underflow Reset Enable bit
 20453                           ;	STVREN = ON, Stack full/underflow will cause Reset
 20454                           ;	Single-Supply ICSP Enable bit
 20455                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 20456                           ;	Extended Instruction Set Enable bit
 20457                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 20458                           ;	Background Debug
 20459                           ;	DEBUG = 0x1, unprogrammed default
 20460  300006                     	org	3145734
 20461  300006  85                 	db	133
 20462                           
 20463                           ; Padding undefined space
 20464  300007                     	org	3145735
 20465  300007  FF                 	db	255
 20466                           
 20467                           ;Config register CONFIG5L @ 0x300008
 20468                           ;	Code Protection Block 0
 20469                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 20470                           ;	Code Protection Block 1
 20471                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 20472                           ;	Code Protection Block 2
 20473                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 20474                           ;	Code Protection Block 3
 20475                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 20476  300008                     	org	3145736
 20477  300008  0F                 	db	15
 20478                           
 20479                           ;Config register CONFIG5H @ 0x300009
 20480                           ;	Boot Block Code Protection bit
 20481                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 20482                           ;	Data EEPROM Code Protection bit
 20483                           ;	CPD = OFF, Data EEPROM not code-protected
 20484  300009                     	org	3145737
 20485  300009  C0                 	db	192
 20486                           
 20487                           ;Config register CONFIG6L @ 0x30000A
 20488                           ;	Write Protection Block 0
 20489                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 20490                           ;	Write Protection Block 1
 20491                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 20492                           ;	Write Protection Block 2
 20493                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 20494                           ;	Write Protection Block 3
 20495                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 20496  30000A                     	org	3145738
 20497  30000A  0F                 	db	15
 20498                           
 20499                           ;Config register CONFIG6H @ 0x30000B
 20500                           ;	Configuration Register Write Protection bit
 20501                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 20502                           ;	Boot Block Write Protection bit
 20503                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 20504                           ;	Data EEPROM Write Protection bit
 20505                           ;	WRTD = OFF, Data EEPROM not write-protected
 20506  30000B                     	org	3145739
 20507  30000B  E0                 	db	224
 20508                           
 20509                           ;Config register CONFIG7L @ 0x30000C
 20510                           ;	Table Read Protection Block 0
 20511                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 20512                           ;	Table Read Protection Block 1
 20513                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 20514                           ;	Table Read Protection Block 2
 20515                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 20516                           ;	Table Read Protection Block 3
 20517                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 20518  30000C                     	org	3145740
 20519  30000C  0F                 	db	15
 20520                           
 20521                           ;Config register CONFIG7H @ 0x30000D
 20522                           ;	Boot Block Table Read Protection bit
 20523                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 20524  30000D                     	org	3145741
 20525  30000D  40                 	db	64
 20526                           tosu	equ	0xFFF
 20527                           tosh	equ	0xFFE
 20528                           tosl	equ	0xFFD
 20529                           stkptr	equ	0xFFC
 20530                           pclatu	equ	0xFFB
 20531                           pclath	equ	0xFFA
 20532                           pcl	equ	0xFF9
 20533                           tblptru	equ	0xFF8
 20534                           tblptrh	equ	0xFF7
 20535                           tblptrl	equ	0xFF6
 20536                           tablat	equ	0xFF5
 20537                           prodh	equ	0xFF4
 20538                           prodl	equ	0xFF3
 20539                           indf0	equ	0xFEF
 20540                           postinc0	equ	0xFEE
 20541                           postdec0	equ	0xFED
 20542                           preinc0	equ	0xFEC
 20543                           plusw0	equ	0xFEB
 20544                           fsr0h	equ	0xFEA
 20545                           fsr0l	equ	0xFE9
 20546                           wreg	equ	0xFE8
 20547                           indf1	equ	0xFE7
 20548                           postinc1	equ	0xFE6
 20549                           postdec1	equ	0xFE5
 20550                           preinc1	equ	0xFE4
 20551                           plusw1	equ	0xFE3
 20552                           fsr1h	equ	0xFE2
 20553                           fsr1l	equ	0xFE1
 20554                           bsr	equ	0xFE0
 20555                           indf2	equ	0xFDF
 20556                           postinc2	equ	0xFDE
 20557                           postdec2	equ	0xFDD
 20558                           preinc2	equ	0xFDC
 20559                           plusw2	equ	0xFDB
 20560                           fsr2h	equ	0xFDA
 20561                           fsr2l	equ	0xFD9
 20562                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    1867
    Data        0
    BSS         321
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      77
    BANK0           160     85     160
    BANK1           256      1     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    g1.font.bitmap	PTR const unsigned char  size(2) Largest target is 0
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    g1.font.descriptor	PTR const struct . size(2) Largest target is 0
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    g1.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.font	PTR struct . size(2) Largest target is 0
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.text	PTR const unsigned char  size(2) Largest target is 0
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.fpPress	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S4855_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    backlightController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    checkCollision@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    mooveBall@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    moovePaddle@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerSM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displayController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displaySM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displayInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    touchScreenController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    touchScreenSM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    sleepInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_Bitmap@colorTablePtr	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_Bitmap@bmpPtr	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_Bitmap@strPtr	PTR struct . size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    RGB2LCD@colorTableEntry	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_DrawText@font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_DrawText@font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_DrawText@font	PTR const struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_DrawText@msg	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    LCD_InSlider@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InSlider@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_InButton@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_InButton@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_InButton@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonDraw@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonDraw@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonDraw@bmpPtr	PTR struct . size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonDraw@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonDraw@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonDraw@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonUpdate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonUpdate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonUpdate@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonCreate@fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonCreate@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonCreate@font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@textOrBmp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonCreate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonCreate@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderDraw@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderDraw@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderUpdate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderUpdate@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderCreate@fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_endGame@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_inGameDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_parametersDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_welcomeDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setY@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setX@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_resetPos@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setPlayer@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_init@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Score_draw@s	PTR struct Score size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Score_init@s	PTR struct Score size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    S135$fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    S108$fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    S108$text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    S99$bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    arialNarrow_12ptFontInfo.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    S99$descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    arialNarrow_12ptFontInfo.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    Paddle_draw@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Paddle_addX@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Paddle_init@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_draw@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_Update@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_init@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 


Critical Paths under _main in COMRAM

    _gameControllerInit->_gameControllerController
    _XF_init->___wmul
    _LCD_Init->_LCD_Lowlevel_Init
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _gameControllerSM->_gameControllerController
    _gameControllerController->_LCD_SliderUpdate
    _moovePaddle->_LCD_InButton
    _mooveBall->_checkCollision
    _checkCollision->_XF_pushEvent
    _XF_pushEvent->___awmod
    _backlightController->_GameParameters_setBackLight
    _XF_scheduleTimer->_ENTERCRITICAL
    _XF_scheduleTimer->_LEAVECRITICAL
    _GameParameters_init->_LCD_ButtonCreate
    _Menu_welcomeDraw->_LCD_DrawText
    _Menu_parametersDraw->_LCD_SliderDraw
    _LCD_SliderDraw->_LCD_SliderUpdate
    _LCD_SliderUpdate->___lwdiv
    _Menu_endGame->_LCD_DrawText
    _LCD_ButtonDraw->_LCD_DrawText
    _LCD_ButtonUpdate->_LCD_DrawRect
    _LCD_Bitmap->___lwdiv
    ___lwdiv->___wmul
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_DrawText->___wmul
    ___wmul->___awdiv
    _Paddle_draw->_LCD_DrawRect
    _Ball_draw->_LCD_DrawRect
    _XF_popEvent->___awmod

Critical Paths under _isr in COMRAM

    _isr->_XF_decrementAndQueueTimers
    _XF_decrementAndQueueTimers->i2_XF_pushEvent
    i2_XF_pushEvent->i2___awmod
    i2_XF_pushEvent->i2___wmul
    _XF_unscheduleTimer->i2_ENTERCRITICAL
    _XF_unscheduleTimer->i2_LEAVECRITICAL

Critical Paths under _main in BANK0

    _Factory_init->_sleepInit
    _sleepInit->_displayInit
    _displayInit->_displayController
    _Factory_exec->_touchScreenSM
    _touchScreenSM->_touchScreenController
    _touchScreenController->_sprintf
    _displaySM->_displayController
    _displayController->_Menu_endGame
    _displayController->_Menu_parametersDraw
    _displayController->_Menu_welcomeDraw
    _Menu_welcomeDraw->_LCD_ButtonDraw
    _Menu_parametersDraw->_LCD_ButtonDraw
    _Menu_endGame->_LCD_ButtonDraw
    _LCD_ButtonDraw->_LCD_Bitmap
    _Menu_inGameDraw->_Score_draw
    _Score_draw->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Factory_exec

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  695898
                       _Factory_exec
                       _Factory_init
 ---------------------------------------------------------------------------------
 (1) _Factory_init                                         2     2      0  325127
                                             71 BANK0      2     2      0
                _GameParameters_init
                       _LCD_DrawText
                           _LCD_Fill
                           _LCD_Init
                            _XF_init
                          _sleepInit
 ---------------------------------------------------------------------------------
 (2) _sleepInit                                            2     0      2  296529
                                             69 BANK0      2     0      2
                        _displayInit
                 _gameControllerInit
                    _sleepController
                    _touchScreenInit
 ---------------------------------------------------------------------------------
 (3) _touchScreenInit                                      0     0      0       0
                        _configTouch
 ---------------------------------------------------------------------------------
 (3) _sleepController                                      2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _gameControllerInit                                   2     0      2   54108
                                             59 COMRAM     2     0      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (3) _displayInit                                          2     0      2  242269
                                             67 BANK0      2     0      2
                  _displayController
 ---------------------------------------------------------------------------------
 (2) _XF_init                                              2     2      0    3031
                                             31 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      90
                                             22 COMRAM     2     2      0
                  _LCD_Lowlevel_Init
 ---------------------------------------------------------------------------------
 (3) _LCD_Lowlevel_Init                                    5     5      0      60
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Factory_exec                                         1     1      0  370771
                                              0 BANK1      1     1      0
                        _XF_popEvent
                          _displaySM
                   _gameControllerSM
                            _sleepSM
                      _touchScreenSM
 ---------------------------------------------------------------------------------
 (2) _touchScreenSM                                        5     3      2   27550
                                             80 BANK0      5     3      2
              _touchScreenController
 ---------------------------------------------------------------------------------
 (3) _touchScreenController                               32    30      2   27274
                                             48 BANK0     32    30      2
                _GameParameters_setX
                _GameParameters_setY
                       _LCD_DrawText
                   _XF_scheduleTimer
                            ___fldiv
                            ___fltol
                           ___xxtofl
                      _configMeasure
                        _configTouch
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _configTouch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _configMeasure                                        1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     566
                                             17 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             56 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2003
                                             31 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setY                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setX                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sleepSM                                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _gameControllerSM                                     5     3      2   55821
                                             59 COMRAM     5     3      2
                   _XF_scheduleTimer
           _gameControllerController
 ---------------------------------------------------------------------------------
 (4) _gameControllerController                             5     2      3   53987
                                             54 COMRAM     5     2      3
                _GameParameters_init
            _GameParameters_resetPos
                       _LCD_InButton
                       _LCD_InSlider
                   _LCD_SliderUpdate
                       _XF_pushEvent
                   _XF_scheduleTimer
                _backlightController
                          _mooveBall
                        _moovePaddle
 ---------------------------------------------------------------------------------
 (5) _moovePaddle                                          2     0      2    6462
                                             27 COMRAM     2     0      2
            _GameParameters_resetPos
                       _LCD_InButton
                        _Paddle_addX
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _Paddle_addX                                          8     2      6     881
                                             17 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _LCD_InButton                                        10     4      6    2200
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (6) _GameParameters_resetPos                              2     0      2     692
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _mooveBall                                            2     0      2    7328
                                             36 COMRAM     2     0      2
                        _Ball_Update
                       _XF_pushEvent
                     _checkCollision
 ---------------------------------------------------------------------------------
 (6) _checkCollision                                      30    28      2    4611
                                             26 COMRAM    10     8      2
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _XF_pushEvent                                         3     2      1    2289
                                             23 COMRAM     3     2      1
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _Ball_Update                                          6     4      2     276
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _backlightController                                  4     2      2    3552
                                             23 COMRAM     4     2      2
        _GameParameters_setBackLight
 ---------------------------------------------------------------------------------
 (6) _GameParameters_setBackLight                          6     2      4    2284
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _XF_scheduleTimer                                     5     1      4    1434
                                             18 COMRAM     5     1      4
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (5) _LCD_InSlider                                        10     4      6     580
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _GameParameters_init                                  2     0      2   12380
                                             42 COMRAM     2     0      2
                          _Ball_init
                   _LCD_ButtonCreate
                   _LCD_SliderCreate
                        _Paddle_init
                         _Score_init
 ---------------------------------------------------------------------------------
 (6) _Score_init                                           2     0      2     152
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Paddle_init                                          4     0      4     639
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderCreate                                    22     0     22    1672
                                             17 COMRAM    22     0     22
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonCreate                                    25     0     25    8965
                                             17 COMRAM    25     0     25
 ---------------------------------------------------------------------------------
 (6) _Ball_init                                            2     0      2     276
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _displaySM                                            5     3      2  286226
                                             67 BANK0      5     3      2
                    _Menu_inGameDraw
                  _displayController
 ---------------------------------------------------------------------------------
 (4) _displayController                                    5     2      3  242148
                                             62 BANK0      5     2      3
                          _Ball_draw
                       _Menu_endGame
                _Menu_parametersDraw
                   _Menu_welcomeDraw
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Menu_welcomeDraw                                     2     0      2   57566
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (5) _Menu_parametersDraw                                  2     0      2   82977
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
                     _LCD_SliderDraw
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderDraw                                      14    12      2   25380
                                             54 COMRAM    14    12      2
                       _LCD_DrawRect
                   _LCD_SliderUpdate
 ---------------------------------------------------------------------------------
 (5) _LCD_SliderUpdate                                    16    14      2   15116
                                             38 COMRAM    16    14      2
                       _LCD_DrawRect
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _Menu_endGame                                         4     2      2   57535
                                             65 COMRAM     2     2      0
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonDraw                                      32    30      2   44286
                                             28 BANK0     32    30      2
                         _LCD_Bitmap
                   _LCD_ButtonUpdate
                       _LCD_DrawRect
                       _LCD_DrawText
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _LCD_ButtonUpdate                                    18    16      2   11351
                                             36 COMRAM    18    16      2
                       _LCD_DrawRect
                           _LCD_Read
 ---------------------------------------------------------------------------------
 (8) _LCD_Read                                            10     6      4     548
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _LCD_Bitmap                                          38    32      6    7372
                                             38 COMRAM    10     4      6
                                              0 BANK0     28    28      0
                            _RGB2LCD
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     901
                                             31 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _RGB2LCD                                             14    12      2     499
                                             17 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (3) _Menu_inGameDraw                                      2     0      2   43399
                                             50 BANK0      2     0      2
                          _Ball_draw
                           _LCD_Fill
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Score_draw                                           2     0      2   21884
                                             48 BANK0      2     0      2
                       _LCD_DrawText
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             16    10      6    9137
                                             34 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             8     2      6    8111
                                             26 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           42    36      6    7638
                                             62 COMRAM     8     2      6
                                             18 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _dtoa                                                36    26     10    5863
                                             44 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (10) _pad                                                11     5      6    3597
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _fputs                                               7     3      4    1537
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2     183
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (10) ___aomod                                            18     2     16     613
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (10) ___aodiv                                            26    10     16     625
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawText                                        34    21     13   12381
                                             31 COMRAM    34    21     13
                            ___awdiv
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _strlen                                              4     2      2     400
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2802
                                             25 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1105
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _Paddle_draw                                          6     4      2   10398
                                             36 COMRAM     6     4      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_Fill                                             8     6      2     716
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Ball_draw                                           10     8      2   10187
                                             36 COMRAM    10     8      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawRect                                        19     8     11    9635
                                             17 COMRAM    19     8     11
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                          2     2      0    1016
                                             23 COMRAM     2     2      0
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     793
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _LEAVECRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ENTERCRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _isr                                                 4     4      0    2011
                                             13 COMRAM     4     4      0
         _XF_decrementAndQueueTimers
                     i2_XF_pushEvent
 ---------------------------------------------------------------------------------
 (15) _XF_decrementAndQueueTimers                          4     4      0    1408
                                              9 COMRAM     4     4      0
                 _XF_unscheduleTimer
                     i2_XF_pushEvent
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     419
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2_XF_pushEvent                                      3     2      1     603
                                              6 COMRAM     3     2      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
                          i2___awmod
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) _XF_unscheduleTimer                                  2     1      1     208
                                              1 COMRAM     2     1      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (16) i2_LEAVECRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_ENTERCRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Factory_exec
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _displaySM
       _Menu_inGameDraw
         _Ball_draw
           _LCD_DrawRect
         _LCD_Fill
         _Paddle_draw
           _LCD_DrawRect
         _Score_draw
           _LCD_DrawText
             ___awdiv
             ___wmul
               ___awdiv (ARG)
             _strlen
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                     _strlen
                 _fputc
       _displayController
         _Ball_draw
         _Menu_endGame
           _LCD_ButtonDraw
             _LCD_Bitmap
               _RGB2LCD
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
               ___wmul
             _LCD_ButtonUpdate
               _LCD_DrawRect
               _LCD_Read
             _LCD_DrawRect
             _LCD_DrawText
             ___awdiv
             _strlen
           _LCD_DrawText
           _LCD_Fill
         _Menu_parametersDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
           _LCD_SliderDraw
             _LCD_DrawRect
             _LCD_SliderUpdate
               _LCD_DrawRect
               ___lwdiv
               ___wmul
         _Menu_welcomeDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
         _Paddle_draw
         _Score_draw
     _gameControllerSM
       _XF_scheduleTimer
         _ENTERCRITICAL
         _LEAVECRITICAL
       _gameControllerController
         _GameParameters_init
           _Ball_init
           _LCD_ButtonCreate
           _LCD_SliderCreate
           _Paddle_init
           _Score_init
         _GameParameters_resetPos
         _LCD_InButton
         _LCD_InSlider
         _LCD_SliderUpdate
         _XF_pushEvent
           _ENTERCRITICAL
           _LEAVECRITICAL
           ___awmod
         _XF_scheduleTimer
         _backlightController
           _GameParameters_setBackLight
         _mooveBall
           _Ball_Update
           _XF_pushEvent
           _checkCollision
             _XF_pushEvent
         _moovePaddle
           _GameParameters_resetPos
           _LCD_InButton
           _Paddle_addX
           _XF_pushEvent
     _sleepSM
     _touchScreenSM
       _touchScreenController
         _GameParameters_setX
         _GameParameters_setY
         _LCD_DrawText
         _XF_scheduleTimer
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _configMeasure
         _configTouch
         _sprintf
   _Factory_init
     _GameParameters_init
     _LCD_DrawText
     _LCD_Fill
     _LCD_Init
       _LCD_Lowlevel_Init
     _XF_init
       ___wmul
     _sleepInit
       _displayInit
         _displayController
       _gameControllerInit
         _gameControllerController
       _sleepController
       _touchScreenInit
         _configTouch

 _isr (ROOT)
   _XF_decrementAndQueueTimers
     _XF_unscheduleTimer
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
     i2_XF_pushEvent
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
       i2___awmod
       i2___wmul (ARG)
     i2___wmul
   i2_XF_pushEvent

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      1      F0       6       93.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     55      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4D       1       81.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DD       9        0.0%
DATA                 0      0     1DD      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 07 08:46:21 2021

                      _LCD_ButtonDraw 0F74                           ?_LCD_Bitmap 0027  
                                   l5 5C0A                                     l8 5A9A  
                        ___fldiv@aexp 0038                          ___fldiv@bexp 0037  
                    _LCD_ButtonCreate 49C4                          ___fldiv@sign 0030  
                        ?_displayInit 00A3                  __end_of_Factory_exec 5F38  
                __end_of_Factory_init 5570                                    l11 4214  
                                  l18 56D6                                    l26 5010  
                                  l29 4488                                    _g1 0100  
                        ___awdiv@sign 0017               __end_of_sleepController 61B8  
                   ??i2_ENTERCRITICAL 0001              __end_of_Menu_welcomeDraw 5B96  
                 ___wmul@multiplicand 001C                  backlightController@g 0018  
                    _LCD_ButtonUpdate 3836                         ?_LCD_InButton 0012  
                       ?_LCD_InSlider 0012                         ?_LCD_DrawRect 0012  
                       ?_LCD_DrawText 0020                                   l102 556E  
                                 l106 5F36                                   l115 6288  
                                 l124 50E2                                   l141 2602  
                                 l224 53B0                                   l320 221E  
                                 l232 4C9E                                   l152 6212  
                                 l226 53F4                                   l242 46B8  
                                 l146 60C0                                   l323 54B2  
                                 l251 3A6A                                   l155 6350  
                                 l219 35CA                                   l260 1460  
                                 l180 5B1C                                   l412 623A  
                                 l245 4ABC                                   l158 633A  
                                 l502 35D0                                   l183 5F8C  
                                 l239 1936                                   l271 4E5A  
                                 l415 63C6                                   l264 4D7C  
                                 l504 35DA                                   l424 61B6  
                                 l281 2DEC                                   l329 0F72  
                                 l177 5B94                                   l505 35E2  
                                 l291 2F0E                                   l283 2DF8  
                                 l523 602E                                   l515 3834  
                                 l611 6324                                   l188 5786  
                                 l509 36A4                                   l294 2FA8  
                                 l518 62F6                                   l711 1DD4  
                                 l631 2A00                                   l288 2EB0  
                                 l632 2A5E                                   l544 630E  
                                 l297 3016                                   l705 1DB8  
                                 l393 5984                                   l562 49C2  
                                 l730 5D56                                   l626 4F36  
                                 l299 3040                                   l651 4B32  
                                 l803 63AE                                   l740 5C7E  
                                 l660 01B8                                   l652 4BA6  
                                 l653 4BB0                                   l734 5EE0  
                                 l726 5626                                   l399 4356  
                                 l487 63C4                                   l760 6366  
                                 l576 48C2                                   l656 6262  
                                 l648 2D06                                   l809 62AE  
                                 l665 0506                                   l498 5A18  
                                 l923 3F5A                                   l659 0132  
                                 l756 637C                                   l676 0870  
                                 l685 097C                                   l936 40BE  
                                 _GIE 007F97                                   _PR2 000FBB  
                                 _abs 6106                                   _pad 5272  
                                 _isr 0008                  configMeasure@channel 0012  
                     ??_ENTERCRITICAL 0012                          ___awmod@sign 0017  
                                 prod 000FF3                                   wreg 000FE8  
              __size_of_touchScreenSM 0094                       __end_of_RGB2LCD 54B4  
                        ___fltol@exp1 0042                      _touchScreenState 00DE  
                         _Ball_Update 5A1A                         ??_Paddle_addX 0018  
                                l1040 5270                                  l1106 47BE  
                                ?_abs 0024                                  l1300 5CEA  
                                l1053 5836                                  l1310 5DB2  
                                l1402 2842                                  l1307 5CF2  
                                l1404 28BA                                  l1317 5DBA  
                                l1405 28A8                                  l1514 52B6  
                                l1517 52F8                                  l1525 30E2  
                                l4101 33A0                                  l1519 5332  
                                l1527 30EA                                  l1391 299C  
                                l1471 3B5A                                  l4111 33B2  
                                l4103 33A2                                  l1552 3DD2  
                                l1464 3AC2                                  l1545 3322  
                                l1393 27FC                                  l4201 3444  
                                l4121 33C4                                  l4113 33B4  
                                l4105 33A8                                  l4041 332C  
                                l1563 613C                                  l1467 3C1E  
                                l4211 3456                                  l4203 3446  
                                l4131 33D2                                  l4123 33C6  
                                l4115 33B6                                  l4107 33AA  
                                l4043 332E                                  l1396 27C0  
                                l4301 3500                                  l4221 3464  
                                l4213 3458                                  l4205 3448  
                                l4141 33E4                                  l4133 33D8  
                                l4125 33C8                                  l4117 33BC  
                                l4109 33B0                                  l4061 335C  
                                l4045 3330                                  l4037 3324  
                                l1566 6144                                  l1558 5E78  
                                l1478 3BB6                                  l1559 5E80  
                                l1487 5FDE                                  l4311 3516  
                                l4303 3506                                  l4231 347A  
                                l4223 346A                                  l4215 345E  
                                l4207 344E                                  l4151 33F2  
                                l4143 33E6                                  l4135 33DA  
                                l4127 33CA                                  l4119 33BE  
                                l4071 336A                                  l4063 335E  
                                l4055 3338                                  l4047 3332  
                                l4039 3328                                  l4401 35BC  
                                l4321 3528                                  l4313 3518  
                                l4305 3508                                  l4241 348C  
                                l4233 347C                                  l4225 346C  
                                l4217 3460                                  l4209 3450  
                                l4161 3400                                  l4153 33F8  
                                l4145 33EC                                  l4137 33DC  
                                l4129 33D0                                  l4081 337C  
                                l4073 3370                                  l4065 3360  
                                l4057 3346                                  l4049 3334  
                                l1578 51AC                                  l1586 6104  
                                l1595 607C                                  l4403 35C2  
                                l4331 353E                                  l4323 352E  
                                l4315 351E                                  l4307 350E  
                                l4251 34A2                                  l4243 3492  
                                l4235 3482                                  l4227 3472  
                                l4219 3462                                  l4171 3412  
                                l4163 3406                                  l4155 33FA  
                                l4147 33EE                                  l4139 33DE  
                                l4091 338A                                  l4083 337E  
                                l4075 3372                                  l4067 3362  
                                l4059 3358                                  l1589 63C8  
                                l4405 35C4                                  l4341 3550  
                                l4333 3540                                  l4325 3530  
                                l4317 3520                                  l4309 3510  
                                l4261 34B4                                  l4253 34A4  
                                l4245 3494                                  l4237 3484  
                                l4229 3474                                  l4181 3420  
                                l4173 3414                                  l4165 3408  
                                l4157 33FC                                  l4149 33F0  
                                l4093 3390                                  l4085 3384  
                                l4077 3374                                  l4069 3368  
                                l4407 35C6                                  l4351 3562  
                                l4343 3556                                  l4335 3546  
                                l4327 3536                                  l4319 3526  
                                l4271 34CA                                  l4263 34BA  
                                l4255 34AA                                  l4247 349A  
                                l4239 348A                                  l4191 3432  
                                l4183 3426                                  l4175 341A  
                                l4167 340A                                  l4159 33FE  
                                l4095 3392                                  l4087 3386  
                                l4079 3376                                  l4409 35C8  
                                l4361 3574                                  l4353 3564  
                                l4345 3558                                  l4337 3548  
                                l4329 3538                                  l4281 34DC  
                                l4273 34CC                                  l4265 34BC  
                                l4257 34AC                                  l4249 349C  
                                l4193 3434                                  l4185 3428  
                                l4177 341C                                  l4169 340C  
                                l4097 3398                                  l4089 3388  
                                l4371 3586                                  l4363 357A  
                                l4355 356A                                  l4347 355A  
                                l4339 354E                                  l4291 34EE  
                                l4283 34DE                                  l4275 34D2  
                                l4267 34C2                                  l4259 34B2  
                                l4195 343A                                  l4187 342E  
                                l4179 341E                                  l4099 339A  
                                l4381 3598                                  l4373 3588  
                                l4365 357C                                  l4357 356C  
                                l4349 355C                                  l4293 34F0  
                                l4285 34E0                                  l4277 34D4  
                                l4269 34C4                                  l4197 343C  
                                l4189 3430                                  ?_pad 0022  
                                l3911 5940                                  l4391 35AE  
                                l4383 359E                                  l4375 358E  
                                l4367 3582                                  l4359 3572  
                                l4295 34F6                                  l4287 34E6  
                                l4279 34DA                                  l4199 3442  
                                l8001 409E                                  l3921 596A  
                                l3905 590C                                  l4393 35B0  
                                l4385 35A0                                  l4377 3590  
                                l4369 3584                                  l4297 34F8  
                                l4289 34E8                                  l8011 52A2  
                                l3907 591A                                  l4395 35B2  
                                l4387 35A6                                  l4379 3596  
                                l4299 34FE                                  l8101 2D3E  
                                l8021 5306                                  l8013 52AE  
                                l8005 5272                                  l3917 5950  
                                l3909 5926                                  l4397 35B4  
                                l4389 35A8                                  l8111 2D82  
                                l8103 2D54                                  l8023 531A  
                                l8015 52C2                                  l8007 5280  
                                l8031 3042                                  l3919 595E  
                                l4399 35BA                                  l8201 2E60  
                                l8121 2D90                                  l8113 2D84  
                                l8105 2D6C                                  l8017 52D6  
                                l8009 5294                                  l8041 30BC  
                                l8033 3062                                  l9001 0B1C  
                                l8211 2E70                                  l8203 2E62  
                                l8131 2DA0                                  l8123 2D94  
                                l8115 2D86                                  l8107 2D7C  
                                l8027 6106                                  l8019 52DA  
                                l8051 3118                                  l8043 30D6  
                                l8035 308C                                  l9011 0B2A  
                                l9003 0B20                                  l3891 58F0  
                                l8301 2F50                                  l8221 2E7E  
                                l8213 2E72                                  l8205 2E64  
                                l8141 2DB0                                  l8133 2DA4  
                                l8125 2D96                                  l8117 2D8C  
                                l8109 2D80                                  l8029 6120  
                                l8061 31B8                                  l8053 3120  
                                l8045 30F2                                  l8037 30AC  
                                l9101 0C3E                                  l9021 0B58  
                                l9013 0B2C                                  l9005 0B22  
                                l3893 58F4                                  l8311 2F60  
                                l8303 2F52                                  l8231 2E8E  
                                l8223 2E80                                  l8215 2E74  
                                l8207 2E68                                  l8151 2DC0  
                                l8143 2DB2                                  l8135 2DA6  
                                l8127 2D9C                                  l8119 2D8E  
                                l8071 3276                                  l8063 31BE  
                                l8055 3128                                  l8047 3104  
                                l8039 30BA                                  l9111 0C76  
                                l9103 0C42                                  l9031 0B64  
                                l9023 0B5A                                  l9015 0B2E  
                                l9007 0B24                                  l3895 58F6  
                                l8321 2F6E                                  l8313 2F62  
                                l8305 2F58                                  l8241 2EA0  
                                l8233 2E94                                  l8225 2E84  
                                l8217 2E76                                  l8209 2E6A  
                                l8161 2DD2                                  l8153 2DC2  
                                l8145 2DB8                                  l8137 2DAC  
                                l8129 2D9E                                  l8081 32C4  
                                l8073 3290                                  l8057 312E  
                                l8065 3222                                  l8049 3112  
                                l9201 0F20                                  l9113 0C78  
                                l9121 0C84                                  l9105 0C64  
                                l9041 0B88                                  l9033 0B7C  
                                l9025 0B5C                                  l9017 0B30  
                                l9009 0B28                                  l8401 421A  
                                l3897 58F8                                  l3889 58E8  
                                l7281 6182                                  l8331 2F7E  
                                l8323 2F74                                  l8315 2F68  
                                l8307 2F5A                                  l8251 2EDA  
                                l8243 2EA2                                  l8235 2E96  
                                l8227 2E86                                  l8219 2E7C  
                                l8171 2DE0                                  l8163 2DD8  
                                l8155 2DC8                                  l8147 2DBA  
                                l8139 2DAE                                  l8083 32D6  
                                l8067 323E                                  l8075 329E  
                                l8059 31B0                                  l9203 0F22  
                                l9131 0D24                                  l9123 0CC0  
                                l9115 0C7C                                  l9107 0C70  
                                l9211 0F4C                                  l9051 0B94  
                                l9043 0B8A                                  l9035 0B80  
                                l9027 0B60                                  l9019 0B54  
                                l8411 4228                                  l8403 421C  
                                l3899 58FA                                  ?_isr 0001  
                                l8341 2F94                                  l8333 2F84  
                                l8325 2F76                                  l8317 2F6A  
                                l8309 2F5C                                  l8261 2EEA  
                                l8253 2EDE                                  l8245 2EA4  
                                l8237 2E9C                                  l8229 2E8C  
                                l8173 2E08                                  l8165 2DDA  
                                l8157 2DCA                                  l8149 2DBC  
                                l8181 2E40                                  l8093 2D08  
                                l8085 32E2                                  l8077 32B0  
                                l8069 325C                                  l9221 0F68  
                                l9213 0F5E                                  l9205 0F24  
                                l9141 0D32                                  l9133 0D28  
                                l9125 0CC8                                  l9117 0C7E  
                                l9109 0C74                                  l9053 0B96  
                                l9045 0B8C                                  l9037 0B82  
                                l9029 0B62                                  l8501 431E  
                                l8421 4238                                  l8413 422A  
                                l8405 421E                                  l9301 4FA0  
                                l7277 6182                                  l8351 2FB8  
                                l8343 2F96                                  l8335 2F86  
                                l8327 2F78                                  l8319 2F6C  
                                l8271 2EFA                                  l8263 2EEC  
                                l8255 2EE0                                  l8247 2EC0  
                                l8239 2E9E                                  l8191 2E50  
                                l8183 2E44                                  l8175 2E0C  
                                l8167 2DDC                                  l8159 2DD0  
                                l8095 2D0C                                  l9311 5338  
                                l8087 32EA                                  l8079 32BE  
                                l9223 0F6E                                  l9215 0F62  
                                l9207 0F28                                  l9151 0D98  
                                l9143 0D34                                  l9135 0D2A  
                                l9127 0D14                                  l9119 0C80  
                                l9071 0BE2                                  l9063 0BC8  
                                l9055 0B98                                  l9047 0B90  
                                l9039 0B84                                  l8503 4320  
                                l8431 424A                                  l8423 423E  
                                l8415 422E                                  l8407 4220  
                                l9303 4FB4                                  l8521 636A  
                                l8601 5802                                  l8361 2FDA  
                                l8353 2FBC                                  l8345 2F98  
                                l8337 2F8C                                  l8329 2F7C  
                                l8281 2F1E                                  l8273 2EFC  
                                l8265 2EEE                                  l8257 2EE2  
                                l8249 2EC4                                  l8193 2E52  
                                l8185 2E46                                  l8177 2E22  
                                l8169 2DDE                                  l8097 2D10  
                                l9321 534C                                  l9313 5340  
                                l8089 32FA                                  l8513 53F6  
                                l9225 0F70                                  l9217 0F64  
                                l9209 0F44                                  l9161 0E0A  
                                l9153 0DB2                                  l9137 0D2C  
                                l9129 0D20                                  l9145 0D38  
                                l9073 0BE4                                  l9081 0BF0  
                                l9065 0BD0                                  l9057 0BA0  
                                l9049 0B92                                  l8505 4342  
                                l8441 425A                                  l8433 424C  
                                l8425 4240                                  l8417 4230  
                                l8409 4226                                  l9241 5D1A  
                                l9305 4FD4                                  l8523 637A  
                                l8611 582E                                  l8603 580A  
                                l8371 2FEA                                  l8363 2FDC  
                                l8355 2FD2                                  l8347 2F9A  
                                l8339 2F8E                                  l8291 2F40  
                                l8283 2F22                                  l8275 2EFE  
                                l8267 2EF2                                  l8259 2EE4  
                                l8195 2E54                                  l8187 2E48  
                                l8179 2E26                                  l8099 2D26  
                                l9331 535E                                  l9323 534E  
                                l9315 5342                                  l8531 62A6  
                                l8515 546A                                  l9219 0F66  
                                l9171 0E16                                  l9163 0E0C  
                                l9155 0DBE                                  l9147 0D4E  
                                l9139 0D30                                  l9091 0C32  
                                l9083 0C12                                  l9075 0BE8  
                                l9067 0BDC                                  l9059 0BA8  
                                l8507 434A                                  l8451 426C  
                                l8443 425C                                  l8435 4252  
                                l8427 4246                                  l8419 4236  
                                l9411 4A10                                  l9403 49C4  
                                l9251 5D4A                                  l9243 5D2E  
                                l9307 4FE8                                  l8525 6354  
                                l8605 5810                                  l8381 2FFA  
                                l8373 2FEC                                  l8365 2FE2  
                                l8357 2FD6                                  l8349 2F9C  
                                l8293 2F42                                  l8285 2F38  
                                l8277 2F00                                  l8269 2EF4  
                                l8197 2E58                                  l8189 2E4A  
                                l9341 5370                                  l9333 5364  
                                l9325 5354                                  l9317 5344  
                                l9309 5334                                  l8541 51C8  
                                l8701 1E7E                                  l7901 5130  
                                l9261 5E28                                  l8517 54AA  
                                l8621 5CA2                                  l9165 0E0E  
                                l9157 0E00                                  l9173 0E1A  
                                l9149 0D8C                                  l9093 0C34  
                                l9085 0C1A                                  l9077 0BEA  
                                l9069 0BE0                                  l8509 434E  
                                l8461 427A                                  l8453 4272  
                                l8445 4262                                  l8437 4254  
                                l8429 4248                                  l9501 13A0  
                                l9421 4A74                                  l9413 4A24  
                                l9405 49D4                                  l9253 5D4E  
                                l9245 5D34                                  l9237 5CF6  
                                l8527 6364                                  l8607 5816  
                                l8391 3008                                  l8383 2FFC  
                                l8375 2FF2                                  l8367 2FE4  
                                l8359 2FD8                                  l8295 2F48  
                                l8287 2F3C                                  l8279 2F02  
                                l8199 2E5A                                  l9351 5382  
                                l9343 5372                                  l9335 5366  
                                l9327 5356                                  l9319 5346  
                                l8551 51EE                                  l8543 51CC  
                                l8535 51AE                                  l7911 6040  
                                l8711 1EDC                                  l8703 1E80  
                                l7903 5166                                  l9263 5E36  
                                l8631 5CDC                                  l8623 5CAA  
                                l8615 5C80                                  l9191 0F10  
                                l9175 0E36                                  l9167 0E12  
                                l9159 0E06                                  l9095 0C36  
                                l9087 0C22                                  l9079 0BEC  
                                l9183 0E72                                  l8471 4284  
                                l8463 427C                                  l8455 4274  
                                l8447 4264                                  l8439 4256  
                                l9503 13EC                                  l9511 45EC  
                                l9271 5BBA                                  l9423 4A88  
                                l9415 4A38                                  l9407 49E8  
                                l9431 4BC2                                  l9255 5D54  
                                l9239 5CFC                                  l8609 5826  
                                l8393 300A                                  l8385 3002  
                                l8377 2FF4                                  l8369 2FE6  
                                l8297 2F4A                                  l8289 2F3E  
                                l9361 5398                                  l9353 5388  
                                l9345 5378                                  l9337 536C  
                                l9329 535C                                  l8561 5224  
                                l8553 5200                                  l8545 51DA  
                                l8537 51B2                                  l8529 628A  
                                l7913 6070                                  l8801 2080  
                                l8721 1FE6                                  l8713 1EFA  
                                l8705 1EA8                                  l7921 60E0  
                                l9265 5E5C                                  l8633 5CDE  
                                l8625 5CB8                                  l8617 5C88  
                                l8641 5D72                                  l9193 0F14  
                                l9177 0E46                                  l9169 0E14  
                                l9097 0C3A                                  l9089 0C2E  
                                l9185 0EBA                                  l8481 42B2  
                                l8473 4286                                  l8465 427E  
                                l8457 4276                                  l8449 426A  
                                l9505 1454                                  l9513 4600  
                                l9273 5BCE                                  l9425 4A9C  
                                l9417 4A4C                                  l9409 49FC  
                                l9441 4C26                                  l9433 4BD6  
                                l9281 5628                                  l9249 5D3A  
                                l9601 082C                                  l9521 4CA0  
                                l8395 3026                                  l8387 3004  
                                l8379 2FF6                                  l8299 2F4C  
                                l9363 539A                                  l9355 538A  
                                l9347 537A                                  l9339 536E  
                                l8563 523A                                  l8555 5208  
                                l8571 5250                                  l8547 51E2  
                                l8539 51C0                                  l7907 6030  
                                l8811 213E                                  l8803 2088  
                                l8731 1FF2                                  l8723 1FE8  
                                l8715 1F3C                                  l8707 1EB8  
                                l7931 3E06                                  l7923 60E4  
                                l9259 5E20                                  l8635 5CE4  
                                l8627 5CBE                                  l8619 5C9A  
                                l8651 5DAC                                  l8643 5D7A  
                                l9195 0F18                                  l9187 0EC8  
                                l9179 0E66                                  l9099 0C3C  
                                l8491 42DC                                  l8483 42D0  
                                l8475 4288                                  l8467 4280  
                                l8459 4278                                  l9515 4634  
                                l9507 45AC                                  l9275 5BE2  
                                l9267 5B96                                  l9427 4AAC  
                                l9419 4A60                                  l9451 4C8A  
                                l9443 4C3A                                  l9435 4BEA  
                                l9291 569E                                  l9283 5650  
                                l9611 0908                                  l9603 0882  
                                l9523 4CBE                                  l8581 578C  
                                l8397 302A                                  l8389 3006  
                                l9621 40C0                                  l9381 53C4  
                                l9373 53A8                                  l9365 539C  
                                l9357 5390                                  l9349 5380  
                                l8573 5260                                  l8565 5242  
                                l8557 5210                                  l8549 51E6  
                                l7909 603C                                  l8821 215A  
                                l8813 214E                                  l8805 20BE  
                                l8741 1FFE                                  l8733 1FF4  
                                l8725 1FEA                                  l8717 1F96  
                                l8709 1ECA                                  l7941 3E48  
                                l7933 3E0A                                  l7925 3DD4  
                                l7917 60C2                                  l8661 3C66  
                                l8653 3C20                                  l8629 5CD4  
                                l8645 5D88                                  l8637 5D58  
                                l9197 0F1A                                  l9189 0F02  
                                l8493 42F8                                  l8485 42D2  
                                l8477 428E                                  l8469 4282  
                                l9701 5750                                  l8901 1786  
                                l9517 4670                                  l9509 45BC  
                                l9277 5BF6                                  l9269 5BA6  
                                l9445 4C4E                                  l9437 4BFE  
                                l9429 4BB2                                  l9293 56AE  
                                l9285 5662                                  l9453 607E  
                                l9613 090C                                  l9605 088C  
                                l9461 61EA                                  l9533 4D0A  
                                l8591 57BC                                  l8583 579A  
                                l9623 4150                                  l9383 53DA  
                                l9367 539E                                  l9359 5392  
                                l9631 43EC                                  l8575 5268  
                                l8567 5244                                  l8559 521E  
                                l8831 216A                                  l8823 215C  
                                l8815 2152                                  l8807 20C6  
                                l8751 2022                                  l8743 2016  
                                l8735 1FF6                                  l8727 1FEC  
                                l8719 1FE2                                  l7951 3EA2  
                                l7943 3E66                                  l7935 3E18  
                                l7927 3DD8                                  l7919 60CE  
                                l8671 3D30                                  l8663 3C8A  
                                l8655 3C44                                  l9391 5F8E  
                                l8647 5D9E                                  l8639 5D6A  
                                l9199 0F1C                                  l8495 4316  
                                l8487 42D4                                  l8479 4290  
                                l8399 4216                                  l9471 0FD2  
                                l9463 0F74                                  l8911 18BE  
                                l8903 17A6                                  l9519 46AC  
                                l9447 4C62                                  l9439 4C12  
                                l9295 56C2                                  l9287 5672  
                                l9703 4D7E                                  l9455 608E  
                                l9279 5A1A                                  l9615 095A  
                                l9607 08EA                                  l9551 0102  
                                l9527 4CC4                                  l8593 57CE  
                                l8585 57A2                                  l9625 416C  
                                l9385 53DE                                  l8569 524A  
                                l8841 2186                                  l8817 2154  
                                l8825 2162                                  l8809 2116  
                                l8761 202E                                  l8753 2024  
                                l8745 201A                                  l8737 1FFA  
                                l8729 1FEE                                  l7953 3ED0  
                                l7945 3E6E                                  l7961 3F0A  
                                l7937 3E38                                  l7929 3DE6  
                                l8673 3D54                                  l8681 3D82  
                                l8665 3CAE                                  l8657 3C52  
                                l9393 5FA0                                  l8649 5DA6  
                                l8497 4318                                  l8489 42DA  
                                l8921 388A                                  l9481 1112  
                                l9473 1006                                  l9465 0F7E  
                                l8913 18FA                                  l8905 17E6  
                                l9449 4C76                                  l9289 5686  
                                l9641 225A                                  l9633 2220  
                                l9721 4E0E                                  l9705 4D9C  
                                l9457 60AA                                  l9801 1C5C  
                                l9617 0964                                  l9609 08F4  
                                l9561 02E8                                  l9553 0188  
                                l9545 4D7A                                  l9297 4F38  
                       ??_Paddle_draw 0027                                  l8595 57D6  
                                l8587 57A6                                  l8579 5788  
                                l9379 53C0                                  l9627 4358  
                                l8851 21A4                                  l8843 218A  
                                l8827 2166                                  l8819 2156  
                                l8771 203A                                  l8763 2030  
                                l8755 2026                                  l8747 201C  
                                l8739 1FFC                                  l7963 3F1A  
                                l7955 3EF0                                  l7947 3E82  
                                l7939 3E3C                                  l7971 3F60  
                                l8683 3D90                                  l8675 3D62  
                                l8667 3CF8                                  l8659 3C62  
                                l9395 5FA8                                  l8499 431A  
                                l8931 393A                                  l8923 38BE  
                                l8915 3836                                  l9491 12AA  
                                l9483 1126                                  l9475 1036  
                                l9467 0F8E                                  l8907 1876  
                                l9387 6264                                  l9651 22BE  
                                l9643 226E                                  l9635 2230  
                                l9715 4DE8                                  l9731 5C0C  
                                l9459 60B0                                  l9811 1CF8  
                                l9803 1C80                                  l9619 0978  
                                l9571 0436                                  l9563 0330  
                                l9555 020E                                  l9539 4D30  
                                l9299 4F4A                                  l8597 57DE  
                                l8589 57B4                                  l9629 43D0  
                                l8853 21A6                                  l8829 2168  
                                l8837 2172                                  l8781 2068  
                                l8773 203E                                  l8765 2032  
                                l8757 202A                                  l8749 201E  
                                l7965 3F3A                                  l7957 3EF2  
                                l7949 3E90                                  l7981 3FC0  
                                l7973 3F6E                                  l7893 50E4  
                                l8677 3D76                                  l9397 5FB0  
                                l8941 09D4                                  l8933 396A  
                                l8925 38DA                                  l8917 3846  
                                l9493 12B2                                  l9485 11A2  
                                l9477 10B0                                  l9469 0FBE  
                                l8909 189E                                  l9389 6274  
                                l9661 24D0                                  l9653 2328  
                                l9645 227E                                  l9637 2232  
                                l9709 4DA2                                  l9741 5C36  
                                l9733 5C12                                  l9821 1DA0  
                                l9813 1D1C                                  l9805 1C98  
                                l9581 0578                                  l9573 047C  
                                l9565 0376                                  l9557 024C  
                                l9549 00B4                                  l9901 29A2  
                                l8599 57EC                                  l8871 21EE  
                                l8855 21AA                                  l8863 21B4  
                                l8847 219E                                  l8839 2174  
                                l8791 2074                                  l8783 206A  
                                l8775 2040                                  l8767 2036  
                                l8759 202C                                  l8695 1DD6  
                                l7959 3F04                                  l7991 4036  
                                l7983 3FDE                                  l7975 3F8E  
                                l7895 50F6                                  l8687 3D9C  
                                l9399 5FCC                                  l9671 5078  
                                l8951 0A9E                                  l8943 09F4  
                                l8935 097E                                  l8927 3906  
                                l8919 3876                                  l9495 130C  
                                l9487 121A                                  l9479 10DA  
                                l9663 253A                                  l9655 2392  
                                l9647 228E                                  l9639 2246  
                                l9727 4E58                                  l9743 5C66  
                                l9815 1D40                                  l9807 1CBC  
                                l9823 1DB8                                  l9751 1938  
                                l9591 06E0                                  l9583 05B6  
                                l9575 04C2                                  l9567 03BC  
                                l9559 02A2                                  l9831 623C  
                                l9911 2B08                                  l9903 29EA  
                                l8857 21AC                                  l8849 21A2  
                                l8865 21B6                                  l8793 2078  
                                l8785 206C                                  l8777 2042  
                                l8769 2038                                  l8697 1DE2  
                                l7993 4056                                  l7985 3FE6  
                                l7977 3F92                                  l7969 3F5C  
                                l7897 5108                                  l8689 3DC0  
                                l8961 0AAE                                  l8953 0AA2  
                                l8945 0A20                                  l8937 0986  
                                l8929 3926                                  l9497 1368  
                                l9489 123A                                  l8881 1558  
                                l8873 1462                                  l9681 5B82  
                                l9673 5B1E                                  l9665 25A4  
                                l9657 23FC                                  l9649 22A6  
                                l9745 5C68                                  l9817 1D58  
                                l9809 1CE0                                  l9761 19E0  
                                l9753 195C                                  l9593 0726  
                                l9585 060C                                  l9577 0518  
                                l9569 0402                                  l9825 4ABE  
                                l9921 2BA4                                  l9913 2B24  
                                l9905 2A48                                  l9833 633C  
                                l9841 62E8                                  l8867 21D2  
                                l8859 21AE                                  l8795 207A  
                                l8787 2070                                  l8779 2064  
                                l8699 1E30                                  l7995 4068  
                                l7987 3FFA                                  l7979 3FA0  
                                l7899 5112                                  l9667 5012  
                                l8971 0ADE                                  l8963 0AB0  
                                l8955 0AA4                                  l8947 0A56  
                                l8939 09B4                                  l9499 136A  
                                l8891 1680                                  l8875 1480  
                                l8883 1598                                  l9691 5B0C  
                                l9683 5A9C                                  l9675 5B28  
                                l9659 2466                                  l9747 5C78  
                                l9739 5C16                                  l9819 1D7C  
                                l9771 1A7C                                  l9763 19F8  
                                l9755 1980                                  l9595 076C  
                                l9587 0652                                  l9579 0522  
                                l9827 4B06                                  l9931 2C1C  
                                l9923 2BB4                                  l9915 2B30  
                                l9907 2AA6                                  l9835 6326  
                                l9851 62F2                                  l9843 62EA  
                                l8869 21EA                                  l8797 207C  
                                l8789 2072                                  l7989 4008  
                                l7997 406E                                  l9669 503C  
                                l8981 0AEA                                  l8973 0AE2  
                                l8965 0AB2                                  l8957 0AA6  
                                l8949 0A78                                  l9693 56D8  
                                l8893 16BC                                  l8885 15B4  
                                l8877 1510                                  l9685 5AA6  
                                l9677 5B5E                                  l9781 1B18  
                                l9773 1AA0                                  l9765 1A1C  
                                l9757 1998                                  l9597 07A0  
                                l9589 069A                                  l9829 4B7A  
                                l9941 2CBC                                  l9933 2C3C  
                                l9925 2BC6                                  l9917 2B78  
                                l9909 2AC0                                  l9861 6008  
                                l9853 62F4                                  l9845 62EC  
                                l9837 62D6                   __end_of_XF_popEvent 5EE2  
                                l8799 207E                                  l7999 407E  
                                l8991 0AF8                                  l8983 0AEE  
                                l8975 0AE4                                  l8967 0ABE  
                                l8959 0AA8                                  l9695 56E4  
                                l8895 16DC                                  l8887 1624  
                                l8879 1538                                  l9687 5ADC  
                                l9679 5B70                                  l9871 47D4  
                                l9791 1BC0                                  l9783 1B3C  
                                l9775 1AB8                                  l9767 1A40  
                                l9759 19BC                                  l9599 07E6  
                                l9935 2C46                                  l9927 2BD2  
                                l9919 2B92                                  l9951 2604  
                                l9863 6018                                  l9855 5FE2  
                                l9847 62EE                                  l9839 62E4  
                                STR_1 7FB6                                  STR_2 7FEE  
                                l8993 0AFA                                  l8985 0AF0  
                                l8977 0AE6                                  l8969 0ACA  
                                l9697 56F6                                  l8897 16FA  
                                l8889 1644                                  l9689 5AEE  
                                l9881 482A                                  l9873 47E4  
                                l9793 1BD8                                  l9785 1B60  
                                l9777 1ADC                                  l9769 1A58  
                                l9937 2C5E                                  l9929 2C04  
                                l9945 2CC4                                  l9961 2640  
                                l9953 2610                                  l9865 602A  
                                l9857 5FF2                                  l9849 62F0  
                                STR_3 7FEE                                  STR_4 7FAB  
                                l8995 0B14                                  l8987 0AF2  
                                l8979 0AE8                                  l9699 5716  
                                l8899 1716                                  l9883 483E  
                                l9875 47F6                                  l9867 47C0  
                                l9795 1BFC                                  l9787 1B78  
                                l9779 1B00                                  l9939 2CA6  
                                l9971 2670                                  l9963 2650  
                                l9955 261E                                  l9859 6004  
                                STR_5 7FC9                                  STR_6 7FD2  
                                l8997 0B18                                  l8989 0AF6  
                                l9885 484E                                  l9877 4806  
                                l9869 47C4                                  l9893 4886  
                                l9797 1C20                                  l9789 1B9C  
                                l9981 26A6                                  l9973 2676  
                                l9965 2652                                  l9957 2620  
                                STR_7 7FE3                                  STR_8 7FF7  
                                l8999 0B1A                                  l9887 4862  
                                l9879 481A                                  l9799 1C38  
                                l9991 26E6                                  l9983 26B6  
                                l9975 2684                                  l9959 2630  
                                l9967 265A                                  STR_9 7FFB  
                                l9889 4876                                  l9993 26F6  
                                l9985 26B8                                  l9977 2686  
                                l9969 266A                                  l9899 299E  
                                l9995 26FE                                  l9979 2696  
                                l9987 26C0                                  l9997 2702  
                                l9989 26D0                         ??_Paddle_init 0016  
                                u2300 5940                                  u2301 593C  
                                u2310 5984                                  u2311 5980  
                                u2450 3358                                  u2451 3354  
                                u6000 521E                                  u6001 521A  
                                u6010 523A                                  u6011 5236  
                                u6020 5260                                  u6100 5CB8  
                                u6021 525C                                  u6101 5CB4  
                                u6030 579A                                  u6110 5CD4  
                                u6031 5796                                  u6111 5CD0  
                                u6040 57B4                                  u6200 1EA8  
                                u6120 5D6A                                  u7000 1B3C  
                                u6041 57B0                                  u6201 1EA4  
                                u6121 5D66                                  u7001 1B38  
                                u6050 57CE                                  u6210 1EB8  
                                u6130 5D88                                  u7010 1B60  
                                u6051 57CA                                  u6211 1EB4  
                                u6131 5D84                                  u7011 1B5C  
                                u6060 57EC                                  u6300 221E  
                                u6220 1EDC                                  u5500 3E18  
                                u5420 50F6                                  u6140 5D9E  
                                u7100 1D1C                                  u7020 1B9C  
                                u6061 57E8                                  u6301 221A  
                                u6221 1ED8                                  u5501 3E14  
                                u5421 50F2                                  u6141 5D9A  
                                u7101 1D18                                  u7021 1B98  
                                u6070 5802                                  u6230 1F34  
                                u5430 5108                                  u6150 3C44  
                                u6310 1480                                  u7110 1D40  
                                u7030 1BC0                                  u6071 57FE  
                                u5511 3E42                                  u5431 5104  
                                u6151 3C40                                  u6311 147C  
                                u7111 1D3C                                  u7031 1BBC  
                                u6080 5826                                  u5520 3E66  
                                u5600 4036                                  u5440 5130  
                                u6160 3C8A                                  u6400 0C12  
                                u6320 16FA                                  u7200 483E  
                                u7120 1D7C                                  u7040 1BFC  
                                u6081 5822                                  u5521 3E62  
                                u5601 4032                                  u5441 512C  
                                u6161 3C86                                  u6401 0C0E  
                                u6321 16F6                                  u7201 483A  
                                u7121 1D78                                  u7041 1BF8  
                                u6250 214E                                  u5530 3E90  
                                u5610 407E                                  u5450 5166  
                                u6170 3CAE                                  u6090 5C9A  
                                u6410 0C64                                  u6330 38DA  
                                u7210 4862                                  u7130 1DA0  
                                u7050 1C20                                  u6251 214A  
                                u5531 3E8C                                  u5611 407A  
                                u5451 5162                                  u6171 3CAA  
                                u6091 5C96                                  u6411 0C60  
                                u6331 38D6                                  u7211 485E  
                                u7131 1D9C                                  u7051 1C1C  
                                u5460 6060                                  u6260 2186  
                                u6244 2132                                  u5540 3ED0  
                                u5620 5280                                  u5700 30BA  
                                u6180 3D54                                  u6420 0CC0  
                                u6340 396A                                  u6500 5662  
                                u7060 1C5C                                  u7140 4B06  
                                u7300 2CA6                                  u7220 29EA  
                                u6261 2182                                  u6245 212C  
                                u6237 1F2A                                  u5541 3ECC  
                                u5621 527C                                  u5701 30B6  
                                u6181 3D50                                  u6421 0CBC  
                                u6341 3966                                  u6501 565E  
                                u7061 1C58                                  u7141 4B02  
                                u7301 2CA2                                  u7221 29E6  
                                u5470 6070                                  u6270 219A  
                                u6190 1E28                                  u5550 3F1A  
                                u5630 52A2                                  u5710 30D6  
                                u6430 0D4E                                  u6350 0A20  
                                u7070 1C80                                  u6510 4F4A  
                                u7150 4B7A                                  u7230 2A48  
                                u7310 261E                                  u5471 606C  
                                u6271 2196                                  u5551 3F16  
                                u5631 529E                                  u5711 30D2  
                                u6431 0D4A                                  u6351 0A1C  
                                u7071 1C7C                                  u6511 4F46  
                                u7151 4B76                                  u7231 2A44  
                                u7311 261A                                  u6280 21D2  
                                u5560 3F6E                                  u5480 6104  
                                u5640 52F8                                  u5800 32BE  
                                u5720 3104                                  u6440 0E36  
                                u6360 0A52                                  u6600 13A0  
                                u7080 1CBC                                  u6520 4FA0  
                                u7240 2AA6                                  u7400 27BE  
                                u7320 2630                                  u7160 5FF2  
                                u6281 21CE                                  u5561 3F6A  
                                u5481 6100                                  u5641 52F4  
                                u5801 32BA                                  u5721 3100  
                                u6441 0E32                                  u6361 0A4E  
                                u6601 139C                                  u7081 1CB8  
                                u6521 4F9C                                  u7241 2AA2  
                                u7401 27BA                                  u7321 262C  
                                u7161 5FEE                                  u6290 220E  
                                u5490 3DE6                                  u5570 3FA0  
                                u5650 5306                                  u5810 32D6  
                                u5730 3112                                  u6450 0E46  
                                u6370 0A78                                  u7090 1CE0  
                                u6610 4CBE                                  u6530 4FD4  
                                u7250 2B08                                  u7410 27E8  
                                u7330 2640                                  u7170 6018  
                                u5467 6056                                  u5491 3DE2  
                                u5571 3F9C                                  u5651 5302  
                                u5811 32D2                                  u5731 310E  
                                u6451 0E42                                  u6371 0A74  
                                u7091 1CDC                                  u6611 4CBA  
                                u6531 4FD0                                  u7251 2B04  
                                u7411 27E4                                  u7331 263C  
                                u7171 6014                                  u5900 3040  
                                u5820 2D26                                  u6540 53DA  
                                u5580 3FDE                                  u5660 6120  
                                u5740 323E                                  u6460 0F44  
                                u6380 0A9A                                  u7180 47F6  
                                u6700 02E8                                  u6620 4D06  
                                u7260 2B78                                  u7500 28E4  
                                u7420 280C                                  u7340 2684  
                                u5901 303C                                  u5821 2D22  
                                u6541 53D6                                  u6197 1E1E  
                                u5581 3FDA                                  u5661 611C  
                                u5741 323A                                  u6461 0F40  
                                u6381 0A96                                  u7181 47F2  
                                u6701 02E4                                  u6621 4D02  
                                u7261 2B74                                  u7501 28E0  
                                u7421 2808                                  u7341 2680  
                                u5830 2D54                                  u6550 53F4  
                                u5590 4008                                  u5750 325C  
                                u5670 3074                                  u6470 0F5E  
                                u6390 0BC4                                  u7190 481A  
                                u6710 0376                                  u6630 4D2C  
                                u7270 2BA4                                  u7510 292C  
                                u7430 2822                                  u7350 2696  
                                u5831 2D50                                  u6551 53F0  
                                u5591 4004                                  u5751 3258  
                                u5671 306E                                  u6471 0F5A  
                                u6391 0BC0                                  u7191 4816  
                                u6711 0372                                  u6631 4D28  
                                u7271 2BA0                                  u7511 2928  
                                u7431 281E                                  u7351 2692  
                                u5840 2D7C                                  u5760 3276  
                                u5680 3076                                  u6560 60AA  
                                u6480 5D2E                                  u6800 07E6  
                                u6720 0402                                  u6640 4D76  
                                u7280 2BC6                                  u7520 295C  
                                u7440 2840                                  u7360 26A6  
                                u7600 479E                                  u5841 2D78  
                                u6297 2204                                  u5761 3272  
                                u6561 60A6                                  u6481 5D2A  
                                u6801 07E2                                  u6721 03FE  
                                u6641 4D72                                  u7281 2BC2  
                                u7521 2958                                  u7441 283C  
                                u7361 26A2                                  u7601 479A  
                                u5850 2E22                                  u5770 3290  
                                u5690 308C                                  u6490 5E78  
                                u6570 1036                                  u6810 08EA  
                                u6730 047C                                  u6650 0102  
                                u7290 2C04                                  u7530 298A  
                                u7450 2860                                  u7370 26E6  
                                u7610 3A7E                                  u5851 2E1E  
                                u5771 328C                                  u5691 3088  
                                u6491 5E74                                  u5915 42BC  
                                u6571 1032                                  u6811 08E6  
                                u6731 0478                                  u6651 00FE  
                                u7291 2C00                                  u7531 2986  
                                u7451 285C                                  u7371 26E2  
                                u7611 3A7A                                  u5860 2E3C  
                                u5780 329E                                  u6580 10DA  
                                u6900 195C                                  u6820 095A  
                                u6740 0578                                  u6660 0188  
                                u7460 2872                                  u7380 2726  
                                u7540 46D0                                  u7700 3C0C  
                                u7620 3A8C                                  u5861 2E38  
                                u5781 329A                                  u5925 4302  
                                u6581 10D6                                  u6901 1958  
                                u6821 0956                                  u6741 0574  
                                u6661 0184                                  u7461 286E  
                                u7381 2722                                  u7541 46CC  
                                u7701 3C08                                  u7621 3A88  
                                u5950 637A                                  u5870 2EDA  
                                u5790 32B0                                  u6590 1112  
                                u6830 5716                                  u6910 1980  
                                u6750 05B6                                  u6670 020E  
                                u7470 28A0                                  u7390 279C  
                                u7550 4704                                  u7630 3AE8  
                                u7710 35F0                                  u5951 6376  
                                u5871 2ED6                                  u5791 32AC  
                                u5935 5474                                  u6591 110E  
                                u6831 5712                                  u6911 197C  
                                u6751 05B2                                  u6671 020A  
                                u7471 289C                                  u7391 2798  
                                u7631 3AE4                                  u7711 35EC  
                                u5960 6364                                  u5880 2F38  
                                u6840 4D9C                                  u6920 19BC  
                                u6760 060C                                  u6680 024C  
                                u7480 28B6                                  u7560 4732  
                                u7640 3B3E                                  u7720 361A  
                                u7800 59C4                                  u5961 6360  
                                u5881 2F34                                  u5945 548A  
                                u6841 4D98                                  u6921 19B8  
                                u6761 0608                                  u6681 0248  
                                u7481 28B2                                  u7561 472E  
                                u7641 3B3A                                  u7721 3616  
                                u7801 59C0                                  u5890 2FD2  
                                u5970 51C0                                  u6850 4DE4  
                                u6930 19E0                                  u6770 0652  
                                u6690 02A2                                  u7490 28CA  
                                u7570 4746                                  u7650 3B88  
                                u7730 36B2                                  u7810 59E8  
                                u5891 2FCE                                  u5971 51BC  
                                u6851 4DE0                                  u6931 19DC  
                                u6771 064E                                  u6691 029E  
                                u7491 28C6                                  u7571 4742  
                                u7555 46FA                                  u7651 3B84  
                                u7731 36AE                                  u7811 59E4  
                                u5980 51DA                                  u7820 48DE  
                                u6860 4E0A                                  u6940 1A1C  
                                u6780 06E0                                  u7900 4ED8  
                                u7580 476E                                  u7660 3BA6  
                                u7740 36DC                                  u5981 51D6  
                                u7821 48DA                                  u6861 4E06  
                                u6941 1A18                                  u6781 06DC  
                                u7901 4ED4                                  u7581 476A  
                                u7661 3BA2                                  u7741 36D8  
                                _RBPU 007F8F                                  u5990 5200  
                                u7830 48F0                                  u6870 4E54  
                                u6950 1A40                                  u6790 076C  
                                u7590 478E                                  u7670 3BB6  
                                u7750 3734                                  u7910 5EFC  
                                u5991 51FC                                  u7831 48EC  
                                u6871 4E50                                  u6951 1A3C  
                                u6791 0768                                  u7591 478A  
                                u7671 3BB2                                  u7751 3730  
                                u7911 5EF8                                  u7840 4924  
                                u6880 5C36                                  u6960 1A7C  
                                u7680 3BC4                                  u7760 55A8  
                                u7841 4920                                  u6881 5C32  
                                u6961 1A78                                  u7681 3BC0  
                                u7761 55A4                                  u7850 494E  
                                u6890 5C78                                  u6970 1AA0  
                                u7690 3BFE                                  u7770 561C  
                                u7851 494A                                  u6891 5C74  
                                u6971 1A9C                                  u7691 3BFA  
                                u7771 5618                                  u7780 5E9E  
                                u7860 4968                                  u6980 1ADC  
                                u7781 5E9A                                  u7861 4964  
                                u6981 1AD8                                  u7870 4982  
                                u6990 1B00                                  u7790 599E  
                                u7871 497E                                  u6991 1AFC  
                                u7791 599A                                  u7927 54C6  
                                u7880 4E84                                  u7881 4E80  
                                u7937 333E                                  u7890 4E9A  
                                u7891 4E96                                  u7947 5912  
                                u7957 5956                                  _WPUB 000F61  
                         displaySM@ev 00A7                           LCD_Bitmap@i 007A  
                                abs@a 0024                                  _dbuf 00E0  
                     ?_checkCollision 001B             __size_of_LCD_SliderCreate 00EE  
                                _main 63AA                                  _dtoa 3042  
                    _XF_scheduleTimer 5C0C                                  _prec 0049  
                                _nout 00DB                                  pad@i 0029  
                                pad@p 0026                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf1 000FE7  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 002B                                  fsr2l 000FD9  
                                btemp 004E                      Menu_inGameDraw@g 0092  
                      touchScreenSM@g 00B0                                  prodh 000FF4  
                                prodl 000FF3      __end_of_arialNarrow_12ptFontInfo 7F86  
                                start 00B0                           RGB2LCD@blue 001C  
              __end_of_LCD_ButtonDraw 1462             __size_of_LCD_SliderUpdate 04D6  
                     ___fldiv@new_exp 0031                        _LCD_SliderDraw 45AC  
                  LCD_InSlider@slider 0012                       __end_of_XF_init 5628  
                        ___param_bank 000000                      _gameStateMachine 004D  
              LCD_ButtonCreate@height 0018                    XF_scheduleTimer@ev 0015  
                  XF_scheduleTimer@tm 0013                LCD_ButtonCreate@button 0028  
                               ??_abs 0026                                 ??_pad 0028  
                               ??_isr 000E                      __end_of_LCD_Fill 53F6  
                      ??_LCD_InButton 0018                      __end_of_LCD_Init 35CC  
                    __end_of_LCD_Read 4358                        ??_LCD_InSlider 0018  
                      ??_LCD_DrawRect 001D           LCD_SliderCreate@cursorWidth 0020  
                               l10001 2716                                 l10011 2754  
                               l10003 2726                                 l10021 279C  
                               l10013 2764                                 l10005 2726  
                               l10101 4720                                 l10031 27EA  
                               l10023 27B0                                 l10015 2774  
                               l10111 474A                                 l10103 4724  
                               l10041 2832                                 l10033 27FA  
                               l10025 27BE                                 l10017 2784  
                               l10009 273A                                 l10121 4772  
                               l10113 4754                                 l10105 4732  
                               l10201 35CC                                 l10051 2872  
                               l10043 2840                                 l10035 280C  
                               l10027 27CA                                 l10019 278C  
                               l10123 477E                                 l10115 475E  
                               l10211 3622                                 l10203 35D2  
                               l10301 5EBA                                 l10061 28E4  
                               l10053 28A0                                 l10037 2822  
                               l10045 2852                                 l10029 27E8  
                               l10125 478E                                 l10141 3AE8  
                               l10133 3A6E                                 l10221 36E4  
                               l10213 368C                                 l10205 35DC  
                               l10303 5ED8                                 l10071 295C  
                               l10063 290E                                 l10047 2860  
                               l10039 2828                                 l10127 479E  
                               l10151 3B42                                 l10135 3A7E  
                               l10231 3734                                 l10223 370A  
                               l10215 369E                                 l10207 35F0  
                               l10311 598E                                 l10305 5EDE  
                               l10401 4EB6                                 l10081 2992  
                               l10073 2978                                 l10057 28CA  
                               l10065 2912                                 l10049 2864  
                               l10129 47AE                                 l10161 3BA6  
                               l10153 3B44                                 l10145 3AFC  
                               l10137 3A8C                                 l10233 3752  
                               l10225 371E                                 l10217 36B2  
                               l10209 361A                                 l10321 59C8  
                               l10313 599E                                 l10403 4EC6  
                               l10075 297C                                 l10067 292C  
                               l10059 28D6                                 l10091 46D0  
                               l10171 3BFE                                 l10163 3BC4  
                               l10155 3B50                                 l10147 3B04  
                               l10139 3AD2                                 l10235 3788  
                               l10227 3722                                 l10219 36DC  
                               l10243 3808                                 l10323 59D4  
                               l10315 59A2                                 l10251 5570  
                               l10181 5F44                                 l10341 48F0  
                               l10405 4ED8                                 l10413 4EF4  
                               l10077 298A                                 l10069 2942  
                               l10173 3C0C                                 l10165 3BC6  
                               l10157 3B8C                                 l10149 3B10  
                               l10237 379C                                 l10229 3726  
                               l10317 59B2                                 l10309 598A  
                               l10261 558C                                 l10421 54B6  
                               l10183 5F56                                 l10351 4928  
                               l10343 48F4                                 l10335 48C8  
                               l10407 4EE0                                 l10079 2990  
                               l10095 46E4                                 l10175 3C0E  
                               l10167 3BCA                                 l10159 3B98  
                               l10239 37BA                                 l10319 59C4  
                               l10271 55FC                                 l10263 55A8  
                               l10191 62FE                                 l10431 551A  
                               l10423 54BA                                 l10185 5F68  
                               l10361 4968                                 l10353 493C  
                               l10345 4900                                 l10337 48CC  
                               l10097 470E                                 l10089 46BA  
                               l10169 3BEE                                 l10329 59EC  
                               l10273 5600                                 l10257 5578  
                               l10193 6310                                 l10281 6226  
                               l10441 5524                                 l10433 551C  
                               l10425 54D4                                 l10291 5E8A  
                               l10187 5F7A                                 l10179 5F38  
                               l10355 494E                                 l10347 4910  
                               l10339 48DE                                 l10099 4710  
                               l10275 561C                                 l10259 5588  
                               l10195 6314                                 l10283 6232  
                               l10451 5534                                 l10443 5528  
                               l10435 551E                                 l10427 54D8  
                               l10419 54B4                                 l10293 5E9E  
                               l10349 4924                                 l10381 4E5E  
                               l10269 55B0                                 l10189 62F8  
                               l10197 63BA                                 l10285 6236  
                               l10277 6214                                 l10461 5546  
                               l10453 5536                                 l10445 552C  
                               l10437 5520                                 l10429 54E4  
                               l10295 5EA4                                 l10287 5E84  
                               l10367 4970                                 l10359 4956  
                               l10375 4986                                 l10391 4E9A  
                               l10383 4E62                                 l10199 63C0  
                               l10279 621A                                 l10471 5554  
                               l10463 5548                                 l10455 553E  
                               l10447 5530                                 l10439 5522  
                               l10289 5E84                                 l10393 4E9E  
                               l10385 4E72                                 l10481 5F02  
                               l10473 5560                                 l10465 554A  
                               l10457 5540                                 l10449 5532  
                               l10299 5EAA                                 l10387 4E84  
                               l10483 5F14                                 l10475 5EE2  
                               l10467 554C                                 l10459 5544  
                               l10389 4E88                                 l10485 5F26  
                               l10477 5EEC                                 l10469 5550  
                               l10479 5EFC                                 l10487 63AA  
                      ??_LCD_DrawText 002D                                 l10681 5A02  
                               l10691 489C                                 l10683 381E  
                               l10693 0E9C                                 l10685 4F08  
                               l10687 2CD8                                 l10679 6198  
                               l10689 499C                         ___fltol@sign1 0041  
                     __end_of___aodiv 3F5C                                 ?_main 0001  
                               ?_dtoa 002D                       __end_of___aomod 40C0  
                     LCD_ButtonDraw@i 0099                       __end_of___fldiv 299E  
                     __end_of___awdiv 5272                                 STR_10 7FC0  
                               STR_11 7FDB                                 STR_12 7FA0  
                               STR_13 7F93                                 STR_14 7F86  
                               STR_15 7FEB                                 STR_16 7FF1  
                     __end_of___awmod 5838                                 _ANSB1 0079C9  
                               _ANSB2 0079CA                       __end_of___fltol 47C0  
                               _T0CON 000FD5                       ___awdiv@divisor 0014  
                               _LATB1 007C51                                 _LATC0 007C58  
                               _LATB2 007C52                                 _LATB3 007C53  
                               _LATC2 007C5A                                 _LATB4 007C54  
                               _LATC3 007C5B                                 _LATC4 007C5C  
                               _LATC5 007C5D                       __end_of___lwdiv 5CF4  
                     __end_of___lwmod 5DBC                                 i2l730 5E1E  
                               i2l743 6180                                 i2l760 6392  
                               i2l752 45AA                                 i2l809 62D4  
                               i2l756 63A8                                 i2l794 0056  
                     ___awdiv@counter 0016                                 i2l798 009C  
                               _PLLEN 007CDE                          vfpfcnvrt@fmt 0041  
                               _TMR0H 000FD7                                 _TMR0L 000FD6  
                               _PORTA 000F80                       ??_configMeasure 0012  
                               _TRISA 000F92                   LCD_Bitmap@bfOffBits 0060  
                        LCD_Fill@page 0018                                 _flags 004B  
                        displayInit@g 00A3                                 _fputc 50E4  
                               _theXF 00B5                                 _fputs 60C2  
              LCD_ButtonDraw@tempChar 008A                   __size_of_LCD_Bitmap 05F6  
                               pad@fp 0022                                 _width 0047  
                               _putch 63C8                                 dtoa@d 002F  
                               dtoa@i 0070                                 dtoa@n 0068  
                               dtoa@p 0062                                 dtoa@s 0066  
                               dtoa@w 0064                  __end_of_XF_pushEvent 5D58  
                     __end_of_sleepSM 63C8                          Paddle_addX@p 0012  
                               tablat 000FF5            ??_gameControllerController 003A  
                     touchScreenSM@ev 00B4                      __end_ofi2___wmul 62D6  
                               plusw2 000FDB           ?_XF_decrementAndQueueTimers 0001  
                               ttemp5 004F                                 ttemp6 0052  
                               ttemp7 0056                                 status 000FD8  
                               wtemp8 004F                          Paddle_draw@p 0025  
                     __end_of_sprintf 5FE0                          RGB2LCD@color 001E  
                        RGB2LCD@green 001A                __end_of_LCD_SliderDraw 46BA  
                       ?_Menu_endGame 009C                          Paddle_init@p 0012  
            __size_of_touchScreenInit 000C               LCD_ButtonCreate@bgColor 001C  
                  __size_ofi2___awmod 00B0                   __end_of_Paddle_addX 5012  
                     ?_LCD_ButtonDraw 007C                     ?_gameControllerSM 003C  
                 __end_of_Paddle_draw 448A                         _touchScreenSM 5986  
                 __end_of_Paddle_init 56D8                    __size_of_Ball_draw 0156  
                        LCD_Read@posX 0012                          LCD_Read@posY 0014  
                  __size_of_Ball_init 0076                       __initialization 61B8  
                  ??_gameControllerSM 003E                          __end_of_main 63BA  
                        __end_of_dtoa 3324               LCD_ButtonCreate@fpPress 0022  
              touchScreenController@g 0090                touchScreenController@s 0098  
                    ?_sleepController 0001                      i2XF_pushEvent@ev 0008  
                              ??_main 0047                                ??_dtoa 0037  
                       __activetblptr 000002                             ??_RGB2LCD 0014  
                         _XF_popEvent 5E82                                _ADCON0 000FC2  
                              _ADCON2 000FC0                      LCD_ButtonDraw@x1 008D  
                    LCD_ButtonDraw@x2 008F                      LCD_ButtonDraw@y1 0091  
                    LCD_ButtonDraw@y2 0093                                ?_fputc 0012  
                              ?_fputs 001B                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                _CCPR2L 000F67  
                    ___awdiv@dividend 0012                                ?_putch 0001  
                              _INT1IE 007F83                                _INT1IF 007F80  
                  LCD_DrawRect@colorH 0021                    LCD_DrawRect@colorL 0022  
             _GameParameters_resetPos 61EA                                i2l1053 58E6  
                              i2l7341 6380                                i2l7343 6390  
                              i2l7351 5852                                i2l7337 6396  
                              i2l7361 5886                                i2l7353 5856  
                              i2l7345 5838                                i2l7339 63A6  
                              i2l7371 58C0                                i2l7363 588E  
                              i2l7355 5864                                i2l7347 583C  
                              i2l7365 589C                                i2l7373 58C6  
                              i2l7357 586C                                i2l7349 584A  
                              i2l7375 58D6                                i2l7367 58B2  
                              i2l7359 587E                                i2l7553 6148  
                              i2l7377 58DE                                i2l7369 58BA  
                              i2l7561 5DC4                                i2l7555 614E  
                              i2l7571 5E02                                i2l7563 5DE2  
                              i2l7557 6166                                i2l7573 5E12  
                              i2l7565 5DF6                                i2l7581 62B0  
                              i2l7661 4492                                i2l7575 5E16  
                              i2l7567 5DFC                                i2l7559 5DBE  
                              i2l7583 62CC                                i2l7663 44C2  
                              i2l7671 458A                                i2l7655 448A  
                              i2l7577 5E1C                                i2l7673 458E  
                              i2l7665 451A                                i2l7681 0044  
                              i2l7667 4554                                i2l7691 0080  
                              i2l7683 0048                                i2l7675 001A  
                              i2l7669 4562                                i2l7693 008E  
                              i2l7685 0064                                i2l7677 0028  
                              i2l7695 0092                                i2l7687 0068  
                              i2l7679 0036                                i2l7697 0096  
                              i2l7689 0072                                i2l7699 009A  
                              _OSCCON 000FD3                             ??_XF_init 0020  
                              _TMR0IE 007F95                                _TMR0IF 007F92  
                              _TMR2IF 007CF1                        ??_Menu_endGame 0042  
                              _TRISB1 007C99                                _TRISC0 007CA0  
                              _TRISB2 007C9A                                _TRISC1 007CA1  
                              _TRISB3 007C9B                                _TRISC2 007CA2  
                              _TRISB4 007C9C                                _TRISC3 007CA3  
                              _TRISC4 007CA4                                _TRISC5 007CA5  
                        ?_moovePaddle 001C                      __end_of___xxtofl 3C20  
                     ?_LCD_SliderDraw 0037                   i2XF_pushEvent@inISR 0007  
                LCD_DrawText@bg_color 002B                            _Score_draw 5012  
                          _Score_init 6264                        ?_touchScreenSM 00B0  
                     i2_LEAVECRITICAL 637E                 __size_of_Factory_exec 0056  
               __size_of_Factory_init 00BC                          vfprintf@cfmt 0080  
                 LCD_Bitmap@jumpColor 0078                   LCD_Bitmap@jumpCount 0065  
                 _Menu_parametersDraw 5A9C                  __size_of_configTouch 0022  
          __end_of_gameControllerInit 6326                             ??___aodiv 0022  
                           ??___aomod 0022                                ___wmul 628A  
                           ??___fldiv 0028                             ??___awdiv 0016  
                           ??___awmod 0016                         LCD_Fill@color 0012  
                           ??___fltol 003D                LCD_ButtonUpdate@button 0025  
                           ??___lwdiv 0024                             ??___lwmod 0016  
          gameControllerController@ev 0039                  LCD_DrawText@fontByte 0037  
        __size_of_GameParameters_init 03E4                                clear_0 61BE  
                              clear_1 61CA                                clear_2 61D6  
        __size_of_GameParameters_setX 0016          __size_of_GameParameters_setY 0016  
                    ___awdiv@quotient 0018             LCD_ButtonCreate@textOrBmp 001E  
               _touchScreenController 35CC                       ___awmod@divisor 0014  
                              isa$std 000001                       ___awmod@counter 0016  
                __size_of_displayInit 0018                                pad@buf 0024  
                              dtoa@fp 002D                                _strlen 6030  
                       LCD_DrawRect@i 0023                         LCD_DrawRect@j 001D  
                              fputc@c 0012                                fputs@c 001F  
                              fputs@i 0020                                fputs@s 001B  
        ?_GameParameters_setBackLight 0012                         LCD_DrawText@i 003E  
                   __end_ofi2___awmod 58E8                         LCD_DrawText@x 0040  
                       LCD_DrawText@y 003D                  LCD_DrawText@tempChar 003F  
                        __mediumconst 783A                                tblptrh 000FF7  
                           ??_sleepSM 0012                                tblptrl 000FF6  
                              tblptru 000FF8                     __end_of_Ball_draw 4216  
                   __end_of_Ball_init 5C0C                  ?_Menu_parametersDraw 009C  
                              putch@c 0001                      __end_of_vfprintf 5E82  
                      i2___awmod@sign 0006                             ??_sprintf 0047  
            __end_of_LCD_ButtonCreate 4ABE                           _Paddle_addX 4F38  
                        _Factory_exec 5EE2                          _Factory_init 54B4  
                         _Paddle_draw 4358                           _Paddle_init 5628  
                    XF_pushEvent@temp 001A                          ___xxtofl@arg 001C  
               LCD_SliderCreate@width 0016                          ___xxtofl@exp 001B  
                        ___xxtofl@val 0012                  __end_of_LCD_InButton 4D7E  
               LCD_SliderCreate@steps 0022              __end_of_LCD_ButtonUpdate 3A6C  
                          __accesstop 0060               __end_of__initialization 61DC  
                           ?_LCD_Fill 0012                      _LCD_SliderCreate 4BB2  
                           ?_LCD_Init 0001                             ?_LCD_Read 0012  
                __end_of_LCD_InSlider 4E5C                  __end_of_LCD_DrawRect 3042  
                __end_of_LCD_DrawText 2220           __size_of_XF_unscheduleTimer 003C  
                     i2_ENTERCRITICAL 6394                         ___rparam_used 000001  
                          ___fltol@f1 0039                         LCD_Read@color 0018  
                    _LCD_SliderUpdate 1462                    LEAVECRITICAL@inISR 0012  
                           LCD_Init@i 0018                        __pcstackCOMRAM 0001  
                        ??_LCD_Bitmap 002D                     ??_touchScreenInit 0012  
         __end_of_backlightController 1DD6                         __end_of_fputc 51AE  
                       __end_of_fputs 6106                   gameControllerInit@g 003C  
          LCD_ButtonCreate@fpReleased 0024                         __end_of_putch 63CA  
                   LCD_Bitmap@biWidth 0076                     ?_Menu_welcomeDraw 009C  
                LCD_Bitmap@endOfImage 0064              __end_of_XF_scheduleTimer 5C80  
                           ?i2___wmul 0001                    ??_Menu_welcomeDraw 0042  
                   LCD_Bitmap@curXPos 006F   __size_of_XF_decrementAndQueueTimers 0122  
                   LCD_Bitmap@curYPos 0067                 __size_of_XF_pushEvent 0064  
               ??_Menu_parametersDraw 0045         ??_GameParameters_setBackLight 0016  
                        Ball_Update@b 0012             ??_GameParameters_resetPos 0014  
             _arialNarrow_12ptBitmaps 783B                      ??_checkCollision 001D  
                  __size_of_displaySM 0100                 __end_of_LEAVECRITICAL 6368  
                  LCD_DrawText@offset 0033                               ??_fputc 0016  
                             ??_fputs 001F                          ?_Ball_Update 0012  
                             ??_putch 0012      __end_of_gameControllerController 2D08  
           gameControllerController@g 0037               __end_ofi2_LEAVECRITICAL 6394  
                      XF_pushEvent@ev 0019                            __pbssBANK0 00B5  
                          __pbssBANK1 0100                    __end_of_LCD_Bitmap 0F74  
                          ??_LCD_Fill 0014                            ??_LCD_Init 0017  
                          ??_LCD_Read 0016                       ??_touchScreenSM 00B2  
            LCD_ButtonCreate@txtColor 001A                           ?_Score_draw 0090  
                         ?_Score_init 0012                    ENTERCRITICAL@inISR 0012  
            __size_of_Menu_inGameDraw 0056                           Score_draw@s 0090  
                         Score_init@s 0012                               ?___wmul 001A  
              ?_touchScreenController 0090                          _XF_pushEvent 5CF4  
                  __size_of_mooveBall 0028                    __size_of_sleepInit 0028  
                             ?_strlen 0012                  __end_of_Menu_endGame 5788  
                          ??i2___wmul 0005               __size_ofi2_XF_pushEvent 0064  
                             _RGB2LCD 53F6                               _INTEDG1 007F8D  
                GameParameters_init@s 002B                             ?___xxtofl 0012  
                GameParameters_setX@s 0012                  GameParameters_setY@s 0012  
                  __size_of_vfpfcnvrt 01B4                 __end_of_ENTERCRITICAL 637E  
             __end_ofi2_ENTERCRITICAL 63AA                      ??_LCD_ButtonDraw 007E  
                Menu_parametersDraw@g 009C   __end_of_arialNarrow_12ptDescriptors 7F7F  
         _arialNarrow_12ptDescriptors 7E62                               _XF_init 5570  
                 LCD_ButtonDraw@xText 0095                   LCD_ButtonDraw@yText 0097  
                 LCD_ButtonDraw@width 008B                               __Hparam 0000  
                __size_of_moovePaddle 00F4                               __Lparam 0000  
                             ___aodiv 3DD4                     __end_of_displaySM 49C4  
                             ___aomod 3F5C                               ___fldiv 2604  
                             ___awdiv 51AE                               ___awmod 5788  
                             ___fltol 46BA                       __size_of___wmul 0026  
             LCD_ButtonUpdate@colorIn 002D                               ___lwdiv 5C80  
                             ___lwmod 5D58                             ?_vfprintf 007A  
                      LCD_Bitmap@newY 0073                        LCD_Bitmap@posX 0029  
                      LCD_Bitmap@posY 002B                        LCD_Fill@colorH 0014  
                      LCD_Fill@colorL 0015                               __pcinit 61B8  
                      LCD_Fill@column 0016                               __ramtop 0600  
                             __ptext0 63AA                               __ptext1 54B4  
                             __ptext2 6214                               __ptext3 63BA  
                             __ptext4 6182                               __ptext5 6310  
                             __ptext6 62F8                               __ptext7 5570  
                             __ptext8 3324                               __ptext9 58E8  
                     __size_of_strlen 004E             __size_of_gameControllerSM 00DC  
                           _T2CONbits 000FBA                          __size_of_abs 0040  
                        __size_of_pad 00C2                          __size_of_isr 00A8  
                        ?_XF_popEvent 0001                            ??___xxtofl 0016  
                LCD_Bitmap@pixelCount 0075                   __size_of_Score_draw 00D2  
                    ___awmod@dividend 0012                   __size_of_Score_init 0026  
               LCD_DrawText@fontPixel 0038                               _sleepSM 63C6  
               __end_of_configMeasure 6030                 __size_of_LCD_InButton 00DE  
             XF_unscheduleTimer@inISR 0002                 __size_of_LCD_InSlider 00DE  
                   Menu_welcomeDraw@g 009C                 __size_of_LCD_DrawRect 033A  
                             _sprintf 5F8E                 __size_of_LCD_DrawText 044A  
                    ??_LCD_SliderDraw 0039                  end_of_initialization 61DC  
                    ?i2_LEAVECRITICAL 0001                   _GameParameters_init 2220  
                 _GameParameters_setX 633C                   _GameParameters_setY 6326  
                   __end_of_mooveBall 6264                               fputc@fp 0014  
                       __Lmediumconst 783A                               fputs@fp 001D  
                      Paddle_addX@add 0016                   i2___wmul@multiplier 0001  
                   __end_of_sleepInit 623C                   displayController@ev 00A0  
                   __end_of_vfpfcnvrt 3DD4                            _sleepState 00DF  
                             postdec1 000FE5                               postdec2 000FDD  
                   _LCD_Lowlevel_Init 58E8                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                          ??_vfprintf 0047     __size_of_gameControllerController 036A  
                ?_GameParameters_init 002B             ?_gameControllerController 0037  
                   ??_Menu_inGameDraw 0047                  ?_GameParameters_setX 0012  
                  ?_LCD_Lowlevel_Init 0001                  ?_GameParameters_setY 0012  
                             strlen@a 0014                               strlen@s 0012  
                        _LCD_InButton 4CA0                             _PORTBbits 000F81  
            __end_of_LCD_SliderCreate 4CA0                LCD_SliderCreate@height 0018  
                        _LCD_InSlider 4D7E                          _displayState 00DD  
                        _LCD_DrawRect 2D08                          _LCD_DrawText 1DD6  
                   XF_pushEvent@inISR 0018              __end_of_LCD_SliderUpdate 1938  
                    XF_popEvent@inISR 0019                LCD_SliderCreate@slider 0026  
                 ??_LCD_Lowlevel_Init 0012                         ___xxtofl@sign 001A  
                  _gameControllerInit 6310              __size_of_sleepController 0036  
                      Factory_exec@ev 01EF                           ___fldiv@grs 0033  
                         ___fldiv@rem 002C                             i2___awmod 5838  
                    ?i2_ENTERCRITICAL 0001                     ?_LCD_ButtonCreate 0012  
                        ?_Paddle_addX 0012                          ?_Paddle_draw 0025  
                           _Ball_draw 40C0                          ?_Paddle_init 0012  
                           _Ball_init 5B96                   ?_gameControllerInit 003C  
                __size_of_Ball_Update 0082                    ??_LCD_ButtonCreate 002B  
                   ?_LCD_ButtonUpdate 0025                       _touchScreenInit 63BA  
                   _displayController 47C0                           _CCP2CONbits 000F66  
                          displaySM@g 00A3                        LCD_Read@temp16 001A  
     __end_of_arialNarrow_12ptBitmaps 7E62                RGB2LCD@colorTableEntry 0012  
                       ??_configTouch 0012                    ??_LCD_ButtonUpdate 0027  
                   __size_of_LCD_Fill 00C2                     __size_of_LCD_Init 02A8  
                   __size_of_LCD_Read 0142                    ?_displayController 009E  
                          RGB2LCD@red 0018             __end_of_LCD_Lowlevel_Init 5986  
                  LCD_Lowlevel_Init@i 0013                 LCD_ButtonCreate@fpOut 0026  
                   XF_scheduleTimer@i 0017                 LCD_ButtonCreate@index 002A  
               LCD_ButtonCreate@width 0016                         ??_displayInit 0047  
               __size_of_Menu_endGame 00B0                 ??_GameParameters_init 002D  
               ??_GameParameters_setX 0016                 ??_GameParameters_setY 0016  
                 ??_displayController 00A1                           vfpfcnvrt@ap 0043  
                         vfpfcnvrt@fp 003F                           vfpfcnvrt@ll 0072  
                      __end_of___wmul 62B0                  ??_gameControllerInit 003E  
                  LCD_Bitmap@biHeight 006B                  XF_unscheduleTimer@id 0003  
                      i2_XF_pushEvent 5DBC                      i2___wmul@product 0005  
                   ?_XF_scheduleTimer 0013                        __end_of_strlen 607E  
                       XF_popEvent@ev 0018                   start_initialization 61B8  
                   __size_ofi2___wmul 0026                    ??_XF_scheduleTimer 0017  
                         __end_of_abs 6146                    LCD_InButton@button 0012  
                         __end_of_pad 5334                           __end_of_isr 00B0  
               XF_scheduleTimer@inISR 0016                            ?i2___awmod 0001  
                          ?_Ball_draw 0025                            ?_Ball_init 0012  
           __end_of_displayController 48C4             __size_of_Menu_welcomeDraw 0078  
          __end_of_XF_unscheduleTimer 6182                          ??_Score_draw 0047  
                   LCD_DrawRect@color 001B                          _Menu_endGame 56D8  
                        ??_Score_init 0014                     LCD_DrawRect@posX1 0012  
                   LCD_DrawRect@posX2 0016                     LCD_DrawRect@posY1 0014  
                   LCD_DrawRect@posY2 0018                    i2XF_pushEvent@temp 0009  
             ??_touchScreenController 0092                           vfprintf@fmt 007C  
                            ??___wmul 001E                   LCD_DrawText@yOffset 0035  
                 __end_of_configTouch 62F8                __end_ofi2_XF_pushEvent 5E20  
                 LCD_DrawText@posXEnd 003B                   LCD_DrawText@posYEnd 0039  
            _arialNarrow_12ptFontInfo 7F7F           __end_of_Menu_parametersDraw 5B1E  
                            ??_strlen 0014                  LCD_SliderCreate@posX 0012  
                LCD_SliderCreate@posY 0014                      _gameControllerSM 4E5C  
                 __end_of_displayInit 6310                             ___fldiv@a 0024  
                           ___fldiv@b 0020                              ?_RGB2LCD 0012  
        __size_of_backlightController 049E                           __pbssCOMRAM 0047  
              LCD_SliderUpdate@slider 0027                         Menu_endGame@g 009C  
         XF_decrementAndQueueTimers@i 000C                         __pcstackBANK0 0060  
                       __pcstackBANK1 01EF                    __end_of_Score_draw 50E4  
                LCD_SliderDraw@slider 0037                    __end_of_Score_init 628A  
                    ___aodiv@dividend 0012                    gameControllerSM@ev 0040  
             __end_of_touchScreenInit 63C6                  __size_of_XF_popEvent 0060  
                   __size_of___xxtofl 01B4                      LCD_InButton@posX 0014  
                    LCD_InButton@posY 0016                      LCD_Bitmap@bmpPtr 0027  
                   LCD_DrawText@align 0024                              ?_XF_init 0001  
                   LCD_DrawText@color 0029                     ??_sleepController 0012  
                    LCD_Bitmap@strPtr 0071          ??_XF_decrementAndQueueTimers 000A  
                   LCD_DrawText@width 0041                 __end_of_touchScreenSM 5A1A  
             LCD_Bitmap@colorTablePtr 0069                  i2LEAVECRITICAL@inISR 0001  
                    LCD_SliderDraw@x1 003D                      LCD_SliderDraw@x2 003F  
                    LCD_SliderDraw@y1 0041                      LCD_SliderDraw@y2 0043  
          __size_of_LCD_Lowlevel_Init 009E                      ___lwdiv@dividend 0020  
                           _dtoa$4924 0060                             __pintcode 0008  
                       __pmediumconst 783A                              ?___aodiv 0012  
                            ?___aomod 0012                              ?___fldiv 0020  
                            ?___awdiv 0012                      ___aodiv@quotient 0024  
                            ?___awmod 0012                              ?___fltol 0039  
                            ?___lwdiv 0020                              ?___lwmod 0012  
              __size_of_LEAVECRITICAL 0016                       ?i2_XF_pushEvent 0007  
                           _displaySM 48C4                     __size_of_vfprintf 0062  
 __end_of_GameParameters_setBackLight 60C2           _GameParameters_setBackLight 607E  
            ?_GameParameters_resetPos 0012                            mooveBall@g 0025  
                            ?_sleepSM 0001                      ___lwdiv@quotient 0025  
         touchScreenController@valueX 00AE           touchScreenController@valueY 00AC  
                         ??i2___awmod 0005                              ?_sprintf 0082  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                      __size_of_putch 0002                           ??_Ball_draw 0027  
                         ??_Ball_init 0014            __size_of_displayController 0104  
                          sleepInit@g 00A5                              _LCD_Fill 5334  
                            _LCD_Init 3324                              _LCD_Read 4216  
                       ??_moovePaddle 001E                        ___wmul@product 001E  
                __size_of_Paddle_addX 00DA                  __size_of_Paddle_draw 0132  
                __size_of_Paddle_init 00B0                       _Menu_inGameDraw 5F38  
                i2ENTERCRITICAL@inISR 0001                    LCD_SliderUpdate@x1 0035  
                  LCD_SliderUpdate@x2 002F                    LCD_SliderUpdate@y1 0031  
                  LCD_SliderUpdate@y2 0033                    displayController@g 009E  
             __size_of_checkCollision 08CA                             _mooveBall 623C  
                         _configTouch 62D6                              i2u510_40 5864  
                            i2u510_41 5860                              i2u511_40 587E  
                            i2u511_41 587A                              i2u512_40 589C  
                            i2u512_41 5898                              i2u513_40 58B2  
                            i2u513_41 58AE                              i2u514_40 58D6  
                            i2u530_40 5DF6                              i2u514_41 58D2  
                            i2u530_41 5DF2                              i2u507_40 63A6  
                            i2u507_41 63A2                              i2u508_40 6390  
                            i2u532_40 44C2                              i2u540_40 0080  
                            i2u508_41 638C                              i2u532_41 44BE  
                            i2u540_41 007C                              i2u509_40 584A  
                            i2u533_40 451A                              i2u541_40 008E  
                            i2u509_41 5846                              i2u533_41 4516  
                            i2u541_41 008A                              XF_init@i 0020  
                            i2u534_40 4554                              i2u534_41 4550  
                            i2u535_40 45AA                              i2u535_41 45A6  
                            i2u536_40 0028                              i2u536_41 0024  
                           _sleepInit 6214                              i2u537_40 0036  
                            i2u537_41 0032                              i2u538_40 0044  
                            i2u538_41 0040                              i2u539_40 0064  
                            i2u539_41 0060                __size_of_ENTERCRITICAL 0016  
                         _displayInit 62F8                             _vfpfcnvrt 3C20  
                          ?_displaySM 00A3                     ___wmul@multiplier 001A  
                   ?_LCD_SliderCreate 0012                              i2___wmul 62B0  
    GameParameters_setBackLight@value 0014                    LCD_ButtonUpdate@x1 0033  
                  LCD_ButtonUpdate@x2 002F                    LCD_ButtonUpdate@y1 0031  
                  LCD_ButtonUpdate@y2 0035                    ??_LCD_SliderCreate 0028  
                    __size_of_RGB2LCD 00BE                     ?_LCD_SliderUpdate 0027  
                    LCD_InSlider@posX 0014                      LCD_InSlider@posY 0016  
                LCD_ButtonCreate@font 0020                  LCD_ButtonCreate@posX 0012  
                LCD_ButtonCreate@posY 0014                  LCD_ButtonDraw@bmpPtr 009A  
                    ?_touchScreenInit 0001                    ??_LCD_SliderUpdate 0029  
                LCD_ButtonDraw@button 007C                         _LEAVECRITICAL 6352  
                       ?_Factory_exec 0001                         ?_Factory_init 0001  
                  i2___awmod@dividend 0001                      _Menu_welcomeDraw 5B1E  
                     checkCollision@g 001B                      __size_of_XF_init 00B8  
                    LCD_DrawRect@fill 001A                            ?_mooveBall 0025  
                            __Hrparam 0000                      LCD_DrawRect@temp 001F  
                          ?_sleepInit 00A5              __size_ofi2_LEAVECRITICAL 0016  
                          vfprintf@ap 007E                              __Lrparam 0000  
                          vfprintf@fp 007A                   __end_of_moovePaddle 4BB2  
             __size_of_LCD_ButtonDraw 04EE                __size_of_configMeasure 0050  
           __size_of_LCD_ButtonCreate 00FA                      __size_of___aodiv 0188  
     __end_of_GameParameters_resetPos 6214                      __size_of___aomod 0164  
                    __size_of___fldiv 039A                      __size_of___awdiv 00C4  
                    __size_of___awmod 00B0                      __size_of___fltol 0106  
               i2___wmul@multiplicand 0003                            ?_vfpfcnvrt 003F  
                    __size_of___lwdiv 0074                      __size_of___lwmod 0064  
           __size_of_LCD_ButtonUpdate 0236                     gameControllerSM@g 003C  
                     ___aodiv@divisor 001A                      Paddle_addX@value 0014  
            LCD_ButtonUpdate@colorOut 002B                       ___aodiv@counter 0022  
                        moovePaddle@g 001C              GameParameters_setX@value 0014  
                     LCD_Bitmap@color 006D              GameParameters_setY@value 0014  
                    LCD_DrawText@font 0022                            sprintf@fmt 0084  
                    LCD_DrawText@posX 0025                      LCD_DrawText@posY 0027  
                            ___xxtofl 3A6C                            Ball_draw@b 0025  
                     ___lwdiv@divisor 0022                            Ball_init@b 0012  
                     ___lwdiv@counter 0024                              __ptext10 5EE2  
                            __ptext11 5986                              __ptext20 63C6  
                            __ptext12 35CC                              __ptext21 4E5C  
                            __ptext13 62D6                              __ptext30 5A1A  
                            __ptext22 299E                              __ptext14 5FE0  
                            __ptext31 1938                              __ptext23 4ABE  
                            __ptext15 3A6C                              __ptext40 5B96  
                            __ptext32 607E                              __ptext24 4F38  
                            __ptext16 46BA                              __ptext41 48C4  
                            __ptext33 5C0C                              __ptext25 4CA0  
                            __ptext17 2604                              __ptext50 4216  
                            __ptext42 47C0                              __ptext34 4D7E  
                            __ptext26 61EA                              __ptext18 6326  
                            __ptext51 097E                              __ptext43 5B1E  
                            __ptext35 2220                              __ptext27 623C  
                            __ptext19 633C                              __ptext60 3042  
                            __ptext52 5D58                              __ptext44 5A9C  
                            __ptext36 6264                              __ptext28 00B4  
                            __ptext61 5272                              __ptext53 5C80  
                            __ptext45 45AC                              __ptext37 5628  
                            __ptext29 5CF4                              __ptext70 628A  
                            __ptext62 60C2                              __ptext54 53F6  
                            __ptext46 1462                              __ptext38 4BB2  
                            __ptext71 51AE                              __ptext63 50E4  
                            __ptext55 5F38                              __ptext47 56D8  
                            __ptext39 49C4                              __ptext72 4358  
                            __ptext64 63C8                              __ptext56 5012  
                            __ptext48 0F74                              __ptext81 448A  
                            __ptext73 5334                              __ptext65 6106  
                            __ptext57 5F8E                              __ptext49 3836  
                            __ptext82 62B0                              __ptext74 40C0  
                            __ptext66 3F5C                              __ptext58 5E20  
                            __ptext83 5DBC                              __ptext75 2D08  
                            __ptext67 3DD4                              __ptext59 3C20  
                            __ptext84 5838                              __ptext76 5E82  
                            __ptext68 1DD6                              __ptext85 6146  
                            __ptext77 5788                              __ptext69 6030  
                            __ptext86 637E                              __ptext78 6352  
                            __ptext87 6394                              __ptext79 6368  
                    __size_of_sleepSM 0002                        ?_LEAVECRITICAL 0001  
                       _ENTERCRITICAL 6368                         ??_Ball_Update 0014  
                      ??_Factory_exec 0047                        ??_Factory_init 00A7  
             __end_of_Menu_inGameDraw 5F8E              GameParameters_resetPos@s 0012  
                    __size_of_sprintf 0052    __end_of_XF_decrementAndQueueTimers 45AC  
          _XF_decrementAndQueueTimers 448A                         __size_of_main 0010  
                           sleepSM@ev 0001                         __size_of_dtoa 02E2  
           __size_of_XF_scheduleTimer 0074              __end_of_gameControllerSM 4F38  
                 _backlightController 1938           __end_of_GameParameters_init 2604  
         __end_of_GameParameters_setX 6352           __end_of_GameParameters_setY 633C  
            __size_ofi2_ENTERCRITICAL 0016               __size_of_LCD_SliderDraw 010E  
        GameParameters_setBackLight@s 0012              _gameControllerController 299E  
                            isa$xinst 000000                            _LCD_Bitmap 097E  
      __size_of_touchScreenController 026A                    _XF_unscheduleTimer 6146  
       __end_of_touchScreenController 3836                              int$flags 004E  
                            _vfprintf 5E20                         ?_XF_pushEvent 0018  
         __size_of_gameControllerInit 0016                           ??_displaySM 00A5  
                    ___aomod@dividend 0012                   ?_XF_unscheduleTimer 0002  
                   i2___awmod@divisor 0003                     i2___awmod@counter 0005  
                ?_backlightController 0018                       _sleepController 6182  
                      ?_ENTERCRITICAL 0001                         _configMeasure 5FE0  
                            intlevel2 0000                             sprintf@ap 0088  
                     LCD_DrawText@msg 0020                      ___lwmod@dividend 0012  
                ??_XF_unscheduleTimer 0003                           _moovePaddle 4ABE  
                 __end_of_Ball_Update 5A9C                        _checkCollision 00B4  
                         ??_mooveBall 0027                           ??_sleepInit 0047  
                    ??i2_XF_pushEvent 0008                        ??_XF_pushEvent 0019  
                     ___aomod@divisor 001A                           ??_vfpfcnvrt 0045  
                     ___aomod@counter 0022                     ??i2_LEAVECRITICAL 0001  
                            sprintf@f 008A                              sprintf@s 0082  
               ??_backlightController 001A                         ??_XF_popEvent 0018  
                     ___lwmod@divisor 0014               LCD_SliderCreate@bgColor 001C  
                     ___lwmod@counter 0016                       ??_LEAVECRITICAL 0012  
                      ?_configMeasure 0001           LCD_SliderCreate@borderColor 001E  
        __size_of_Menu_parametersDraw 0082              LCD_SliderCreate@sldColor 001A  
             LCD_SliderCreate@fpPress 0024                      ?_Menu_inGameDraw 0092  
                        ___aodiv@sign 0023                       Paddle_init@team 0014  
              __end_of_checkCollision 097E      __size_of_GameParameters_resetPos 002A  
__size_of_GameParameters_setBackLight 0044                          ___aomod@sign 0023  
                        ?_configTouch 0001  
