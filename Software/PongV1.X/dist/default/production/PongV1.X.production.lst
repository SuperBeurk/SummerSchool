

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 06 16:10:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	text83,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	text86,global,reloc=2,class=CODE,delta=1
   100                           	psect	text87,global,reloc=2,class=CODE,delta=1
   101                           	psect	text88,global,reloc=2,class=CODE,delta=1
   102                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   103                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   104                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   105                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   106                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   107  0000                     
   108                           ; Version 2.32
   109                           ; Generated 02/02/2021 GMT
   110                           ; 
   111                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution. Publication is not required when
   125                           ;        this file is used in an embedded application.
   126                           ; 
   127                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   128                           ;        software without specific prior written permission.
   129                           ; 
   130                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   131                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   132                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   133                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   134                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   135                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   136                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   137                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   138                           ; 
   139                           ; 
   140                           ; Code-generator required, PIC18LF25K22 Definitions
   141                           ; 
   142                           ; SFR Addresses
   143  0000                     
   144                           	psect	mediumconst
   145  00783A                     __pmediumconst:
   146                           	callstack 0
   147  00783A  00                 	db	0
   148  00783B                     _arialNarrow_12ptBitmaps:
   149                           	callstack 0
   150  00783B  00                 	db	0
   151  00783C  00                 	db	0
   152  00783D  00                 	db	0
   153  00783E  00                 	db	0
   154  00783F  00                 	db	0
   155  007840  00                 	db	0
   156  007841  00                 	db	0
   157  007842  00                 	db	0
   158  007843  00                 	db	0
   159  007844  00                 	db	0
   160  007845  00                 	db	0
   161  007846  00                 	db	0
   162  007847  00                 	db	0
   163  007848  00                 	db	0
   164  007849  00                 	db	0
   165  00784A  00                 	db	0
   166  00784B  C0                 	db	192
   167  00784C  C0                 	db	192
   168  00784D  C0                 	db	192
   169  00784E  C0                 	db	192
   170  00784F  C0                 	db	192
   171  007850  C0                 	db	192
   172  007851  C0                 	db	192
   173  007852  C0                 	db	192
   174  007853  00                 	db	0
   175  007854  C0                 	db	192
   176  007855  C0                 	db	192
   177  007856  00                 	db	0
   178  007857  00                 	db	0
   179  007858  00                 	db	0
   180  007859  00                 	db	0
   181  00785A  D8                 	db	216
   182  00785B  D8                 	db	216
   183  00785C  D8                 	db	216
   184  00785D  D8                 	db	216
   185  00785E  00                 	db	0
   186  00785F  00                 	db	0
   187  007860  00                 	db	0
   188  007861  00                 	db	0
   189  007862  00                 	db	0
   190  007863  00                 	db	0
   191  007864  00                 	db	0
   192  007865  00                 	db	0
   193  007866  00                 	db	0
   194  007867  00                 	db	0
   195  007868  00                 	db	0
   196  007869  12                 	db	18
   197  00786A  12                 	db	18
   198  00786B  24                 	db	36
   199  00786C  FE                 	db	254
   200  00786D  FE                 	db	254
   201  00786E  48                 	db	72
   202  00786F  FE                 	db	254
   203  007870  FE                 	db	254
   204  007871  48                 	db	72
   205  007872  90                 	db	144
   206  007873  90                 	db	144
   207  007874  00                 	db	0
   208  007875  00                 	db	0
   209  007876  00                 	db	0
   210  007877  10                 	db	16
   211  007878  7C                 	db	124
   212  007879  FC                 	db	252
   213  00787A  D6                 	db	214
   214  00787B  D0                 	db	208
   215  00787C  F0                 	db	240
   216  00787D  7C                 	db	124
   217  00787E  1E                 	db	30
   218  00787F  16                 	db	22
   219  007880  D6                 	db	214
   220  007881  7E                 	db	126
   221  007882  7C                 	db	124
   222  007883  10                 	db	16
   223  007884  00                 	db	0
   224  007885  00                 	db	0
   225  007886  00                 	db	0
   226  007887  00                 	db	0
   227  007888  61                 	db	97
   228  007889  00                 	db	0
   229  00788A  91                 	db	145
   230  00788B  00                 	db	0
   231  00788C  92                 	db	146
   232  00788D  00                 	db	0
   233  00788E  92                 	db	146
   234  00788F  00                 	db	0
   235  007890  94                 	db	148
   236  007891  00                 	db	0
   237  007892  65                 	db	101
   238  007893  80                 	db	128
   239  007894  06                 	db	6
   240  007895  40                 	db	64
   241  007896  0A                 	db	10
   242  007897  40                 	db	64
   243  007898  0A                 	db	10
   244  007899  40                 	db	64
   245  00789A  12                 	db	18
   246  00789B  40                 	db	64
   247  00789C  11                 	db	17
   248  00789D  80                 	db	128
   249  00789E  00                 	db	0
   250  00789F  00                 	db	0
   251  0078A0  00                 	db	0
   252  0078A1  00                 	db	0
   253  0078A2  00                 	db	0
   254  0078A3  00                 	db	0
   255  0078A4  00                 	db	0
   256  0078A5  38                 	db	56
   257  0078A6  7C                 	db	124
   258  0078A7  6C                 	db	108
   259  0078A8  7C                 	db	124
   260  0078A9  30                 	db	48
   261  0078AA  78                 	db	120
   262  0078AB  DA                 	db	218
   263  0078AC  CE                 	db	206
   264  0078AD  CE                 	db	206
   265  0078AE  FF                 	db	255
   266  0078AF  7A                 	db	122
   267  0078B0  00                 	db	0
   268  0078B1  00                 	db	0
   269  0078B2  00                 	db	0
   270  0078B3  00                 	db	0
   271  0078B4  C0                 	db	192
   272  0078B5  C0                 	db	192
   273  0078B6  C0                 	db	192
   274  0078B7  C0                 	db	192
   275  0078B8  00                 	db	0
   276  0078B9  00                 	db	0
   277  0078BA  00                 	db	0
   278  0078BB  00                 	db	0
   279  0078BC  00                 	db	0
   280  0078BD  00                 	db	0
   281  0078BE  00                 	db	0
   282  0078BF  00                 	db	0
   283  0078C0  00                 	db	0
   284  0078C1  00                 	db	0
   285  0078C2  00                 	db	0
   286  0078C3  10                 	db	16
   287  0078C4  20                 	db	32
   288  0078C5  60                 	db	96
   289  0078C6  60                 	db	96
   290  0078C7  C0                 	db	192
   291  0078C8  C0                 	db	192
   292  0078C9  C0                 	db	192
   293  0078CA  C0                 	db	192
   294  0078CB  C0                 	db	192
   295  0078CC  C0                 	db	192
   296  0078CD  60                 	db	96
   297  0078CE  60                 	db	96
   298  0078CF  20                 	db	32
   299  0078D0  10                 	db	16
   300  0078D1  00                 	db	0
   301  0078D2  80                 	db	128
   302  0078D3  40                 	db	64
   303  0078D4  60                 	db	96
   304  0078D5  20                 	db	32
   305  0078D6  30                 	db	48
   306  0078D7  30                 	db	48
   307  0078D8  30                 	db	48
   308  0078D9  30                 	db	48
   309  0078DA  30                 	db	48
   310  0078DB  30                 	db	48
   311  0078DC  60                 	db	96
   312  0078DD  60                 	db	96
   313  0078DE  40                 	db	64
   314  0078DF  80                 	db	128
   315  0078E0  00                 	db	0
   316  0078E1  20                 	db	32
   317  0078E2  A8                 	db	168
   318  0078E3  F8                 	db	248
   319  0078E4  20                 	db	32
   320  0078E5  50                 	db	80
   321  0078E6  50                 	db	80
   322  0078E7  00                 	db	0
   323  0078E8  00                 	db	0
   324  0078E9  00                 	db	0
   325  0078EA  00                 	db	0
   326  0078EB  00                 	db	0
   327  0078EC  00                 	db	0
   328  0078ED  00                 	db	0
   329  0078EE  00                 	db	0
   330  0078EF  00                 	db	0
   331  0078F0  00                 	db	0
   332  0078F1  00                 	db	0
   333  0078F2  00                 	db	0
   334  0078F3  30                 	db	48
   335  0078F4  30                 	db	48
   336  0078F5  30                 	db	48
   337  0078F6  FC                 	db	252
   338  0078F7  FC                 	db	252
   339  0078F8  30                 	db	48
   340  0078F9  30                 	db	48
   341  0078FA  30                 	db	48
   342  0078FB  00                 	db	0
   343  0078FC  00                 	db	0
   344  0078FD  00                 	db	0
   345  0078FE  00                 	db	0
   346  0078FF  00                 	db	0
   347  007900  00                 	db	0
   348  007901  00                 	db	0
   349  007902  00                 	db	0
   350  007903  00                 	db	0
   351  007904  00                 	db	0
   352  007905  00                 	db	0
   353  007906  00                 	db	0
   354  007907  00                 	db	0
   355  007908  C0                 	db	192
   356  007909  C0                 	db	192
   357  00790A  40                 	db	64
   358  00790B  40                 	db	64
   359  00790C  80                 	db	128
   360  00790D  00                 	db	0
   361  00790E  00                 	db	0
   362  00790F  00                 	db	0
   363  007910  00                 	db	0
   364  007911  00                 	db	0
   365  007912  00                 	db	0
   366  007913  00                 	db	0
   367  007914  F0                 	db	240
   368  007915  F0                 	db	240
   369  007916  00                 	db	0
   370  007917  00                 	db	0
   371  007918  00                 	db	0
   372  007919  00                 	db	0
   373  00791A  00                 	db	0
   374  00791B  00                 	db	0
   375  00791C  00                 	db	0
   376  00791D  00                 	db	0
   377  00791E  00                 	db	0
   378  00791F  00                 	db	0
   379  007920  00                 	db	0
   380  007921  00                 	db	0
   381  007922  00                 	db	0
   382  007923  00                 	db	0
   383  007924  00                 	db	0
   384  007925  00                 	db	0
   385  007926  C0                 	db	192
   386  007927  C0                 	db	192
   387  007928  00                 	db	0
   388  007929  00                 	db	0
   389  00792A  00                 	db	0
   390  00792B  00                 	db	0
   391  00792C  30                 	db	48
   392  00792D  30                 	db	48
   393  00792E  30                 	db	48
   394  00792F  60                 	db	96
   395  007930  60                 	db	96
   396  007931  60                 	db	96
   397  007932  60                 	db	96
   398  007933  60                 	db	96
   399  007934  C0                 	db	192
   400  007935  C0                 	db	192
   401  007936  C0                 	db	192
   402  007937  00                 	db	0
   403  007938  00                 	db	0
   404  007939  00                 	db	0
   405  00793A  00                 	db	0
   406  00793B  78                 	db	120
   407  00793C  78                 	db	120
   408  00793D  CC                 	db	204
   409  00793E  CC                 	db	204
   410  00793F  CC                 	db	204
   411  007940  CC                 	db	204
   412  007941  CC                 	db	204
   413  007942  CC                 	db	204
   414  007943  CC                 	db	204
   415  007944  78                 	db	120
   416  007945  78                 	db	120
   417  007946  00                 	db	0
   418  007947  00                 	db	0
   419  007948  00                 	db	0
   420  007949  00                 	db	0
   421  00794A  30                 	db	48
   422  00794B  30                 	db	48
   423  00794C  70                 	db	112
   424  00794D  F0                 	db	240
   425  00794E  B0                 	db	176
   426  00794F  30                 	db	48
   427  007950  30                 	db	48
   428  007951  30                 	db	48
   429  007952  30                 	db	48
   430  007953  30                 	db	48
   431  007954  30                 	db	48
   432  007955  00                 	db	0
   433  007956  00                 	db	0
   434  007957  00                 	db	0
   435  007958  00                 	db	0
   436  007959  38                 	db	56
   437  00795A  7C                 	db	124
   438  00795B  CC                 	db	204
   439  00795C  CC                 	db	204
   440  00795D  0C                 	db	12
   441  00795E  18                 	db	24
   442  00795F  38                 	db	56
   443  007960  70                 	db	112
   444  007961  60                 	db	96
   445  007962  FC                 	db	252
   446  007963  FC                 	db	252
   447  007964  00                 	db	0
   448  007965  00                 	db	0
   449  007966  00                 	db	0
   450  007967  00                 	db	0
   451  007968  78                 	db	120
   452  007969  FC                 	db	252
   453  00796A  CC                 	db	204
   454  00796B  0C                 	db	12
   455  00796C  38                 	db	56
   456  00796D  38                 	db	56
   457  00796E  0C                 	db	12
   458  00796F  0C                 	db	12
   459  007970  CC                 	db	204
   460  007971  F8                 	db	248
   461  007972  78                 	db	120
   462  007973  00                 	db	0
   463  007974  00                 	db	0
   464  007975  00                 	db	0
   465  007976  00                 	db	0
   466  007977  0C                 	db	12
   467  007978  1C                 	db	28
   468  007979  1C                 	db	28
   469  00797A  3C                 	db	60
   470  00797B  2C                 	db	44
   471  00797C  6C                 	db	108
   472  00797D  CC                 	db	204
   473  00797E  FE                 	db	254
   474  00797F  FE                 	db	254
   475  007980  0C                 	db	12
   476  007981  0C                 	db	12
   477  007982  00                 	db	0
   478  007983  00                 	db	0
   479  007984  00                 	db	0
   480  007985  00                 	db	0
   481  007986  7C                 	db	124
   482  007987  7C                 	db	124
   483  007988  60                 	db	96
   484  007989  D8                 	db	216
   485  00798A  FC                 	db	252
   486  00798B  CC                 	db	204
   487  00798C  0C                 	db	12
   488  00798D  CC                 	db	204
   489  00798E  CC                 	db	204
   490  00798F  78                 	db	120
   491  007990  78                 	db	120
   492  007991  00                 	db	0
   493  007992  00                 	db	0
   494  007993  00                 	db	0
   495  007994  00                 	db	0
   496  007995  70                 	db	112
   497  007996  78                 	db	120
   498  007997  D8                 	db	216
   499  007998  C0                 	db	192
   500  007999  F0                 	db	240
   501  00799A  F8                 	db	248
   502  00799B  D8                 	db	216
   503  00799C  D8                 	db	216
   504  00799D  D8                 	db	216
   505  00799E  78                 	db	120
   506  00799F  70                 	db	112
   507  0079A0  00                 	db	0
   508  0079A1  00                 	db	0
   509  0079A2  00                 	db	0
   510  0079A3  00                 	db	0
   511  0079A4  F8                 	db	248
   512  0079A5  F8                 	db	248
   513  0079A6  18                 	db	24
   514  0079A7  10                 	db	16
   515  0079A8  30                 	db	48
   516  0079A9  30                 	db	48
   517  0079AA  20                 	db	32
   518  0079AB  60                 	db	96
   519  0079AC  60                 	db	96
   520  0079AD  60                 	db	96
   521  0079AE  60                 	db	96
   522  0079AF  00                 	db	0
   523  0079B0  00                 	db	0
   524  0079B1  00                 	db	0
   525  0079B2  00                 	db	0
   526  0079B3  78                 	db	120
   527  0079B4  FC                 	db	252
   528  0079B5  CC                 	db	204
   529  0079B6  CC                 	db	204
   530  0079B7  78                 	db	120
   531  0079B8  78                 	db	120
   532  0079B9  CC                 	db	204
   533  0079BA  CC                 	db	204
   534  0079BB  CC                 	db	204
   535  0079BC  FC                 	db	252
   536  0079BD  78                 	db	120
   537  0079BE  00                 	db	0
   538  0079BF  00                 	db	0
   539  0079C0  00                 	db	0
   540  0079C1  00                 	db	0
   541  0079C2  70                 	db	112
   542  0079C3  F8                 	db	248
   543  0079C4  CC                 	db	204
   544  0079C5  CC                 	db	204
   545  0079C6  CC                 	db	204
   546  0079C7  FC                 	db	252
   547  0079C8  7C                 	db	124
   548  0079C9  0C                 	db	12
   549  0079CA  CC                 	db	204
   550  0079CB  F8                 	db	248
   551  0079CC  70                 	db	112
   552  0079CD  00                 	db	0
   553  0079CE  00                 	db	0
   554  0079CF  00                 	db	0
   555  0079D0  00                 	db	0
   556  0079D1  00                 	db	0
   557  0079D2  00                 	db	0
   558  0079D3  00                 	db	0
   559  0079D4  C0                 	db	192
   560  0079D5  C0                 	db	192
   561  0079D6  00                 	db	0
   562  0079D7  00                 	db	0
   563  0079D8  00                 	db	0
   564  0079D9  00                 	db	0
   565  0079DA  C0                 	db	192
   566  0079DB  C0                 	db	192
   567  0079DC  00                 	db	0
   568  0079DD  00                 	db	0
   569  0079DE  00                 	db	0
   570  0079DF  00                 	db	0
   571  0079E0  00                 	db	0
   572  0079E1  00                 	db	0
   573  0079E2  00                 	db	0
   574  0079E3  C0                 	db	192
   575  0079E4  C0                 	db	192
   576  0079E5  00                 	db	0
   577  0079E6  00                 	db	0
   578  0079E7  00                 	db	0
   579  0079E8  00                 	db	0
   580  0079E9  C0                 	db	192
   581  0079EA  C0                 	db	192
   582  0079EB  40                 	db	64
   583  0079EC  40                 	db	64
   584  0079ED  80                 	db	128
   585  0079EE  00                 	db	0
   586  0079EF  00                 	db	0
   587  0079F0  04                 	db	4
   588  0079F1  1C                 	db	28
   589  0079F2  38                 	db	56
   590  0079F3  F0                 	db	240
   591  0079F4  C0                 	db	192
   592  0079F5  F0                 	db	240
   593  0079F6  38                 	db	56
   594  0079F7  1C                 	db	28
   595  0079F8  04                 	db	4
   596  0079F9  00                 	db	0
   597  0079FA  00                 	db	0
   598  0079FB  00                 	db	0
   599  0079FC  00                 	db	0
   600  0079FD  00                 	db	0
   601  0079FE  00                 	db	0
   602  0079FF  00                 	db	0
   603  007A00  00                 	db	0
   604  007A01  FC                 	db	252
   605  007A02  FC                 	db	252
   606  007A03  00                 	db	0
   607  007A04  FC                 	db	252
   608  007A05  FC                 	db	252
   609  007A06  00                 	db	0
   610  007A07  00                 	db	0
   611  007A08  00                 	db	0
   612  007A09  00                 	db	0
   613  007A0A  00                 	db	0
   614  007A0B  00                 	db	0
   615  007A0C  00                 	db	0
   616  007A0D  00                 	db	0
   617  007A0E  80                 	db	128
   618  007A0F  E0                 	db	224
   619  007A10  70                 	db	112
   620  007A11  3C                 	db	60
   621  007A12  0C                 	db	12
   622  007A13  1C                 	db	28
   623  007A14  70                 	db	112
   624  007A15  E0                 	db	224
   625  007A16  80                 	db	128
   626  007A17  00                 	db	0
   627  007A18  00                 	db	0
   628  007A19  00                 	db	0
   629  007A1A  00                 	db	0
   630  007A1B  00                 	db	0
   631  007A1C  78                 	db	120
   632  007A1D  FC                 	db	252
   633  007A1E  CC                 	db	204
   634  007A1F  CC                 	db	204
   635  007A20  1C                 	db	28
   636  007A21  18                 	db	24
   637  007A22  30                 	db	48
   638  007A23  30                 	db	48
   639  007A24  00                 	db	0
   640  007A25  30                 	db	48
   641  007A26  30                 	db	48
   642  007A27  00                 	db	0
   643  007A28  00                 	db	0
   644  007A29  00                 	db	0
   645  007A2A  00                 	db	0
   646  007A2B  00                 	db	0
   647  007A2C  0F                 	db	15
   648  007A2D  C0                 	db	192
   649  007A2E  1F                 	db	31
   650  007A2F  E0                 	db	224
   651  007A30  30                 	db	48
   652  007A31  30                 	db	48
   653  007A32  66                 	db	102
   654  007A33  D8                 	db	216
   655  007A34  EF                 	db	239
   656  007A35  D8                 	db	216
   657  007A36  DD                 	db	221
   658  007A37  D8                 	db	216
   659  007A38  D8                 	db	216
   660  007A39  98                 	db	152
   661  007A3A  D9                 	db	217
   662  007A3B  98                 	db	152
   663  007A3C  D9                 	db	217
   664  007A3D  B0                 	db	176
   665  007A3E  DF                 	db	223
   666  007A3F  F0                 	db	240
   667  007A40  6E                 	db	110
   668  007A41  C8                 	db	200
   669  007A42  70                 	db	112
   670  007A43  10                 	db	16
   671  007A44  3F                 	db	63
   672  007A45  E0                 	db	224
   673  007A46  0F                 	db	15
   674  007A47  C0                 	db	192
   675  007A48  00                 	db	0
   676  007A49  00                 	db	0
   677  007A4A  1C                 	db	28
   678  007A4B  00                 	db	0
   679  007A4C  1C                 	db	28
   680  007A4D  00                 	db	0
   681  007A4E  1C                 	db	28
   682  007A4F  00                 	db	0
   683  007A50  36                 	db	54
   684  007A51  00                 	db	0
   685  007A52  36                 	db	54
   686  007A53  00                 	db	0
   687  007A54  36                 	db	54
   688  007A55  00                 	db	0
   689  007A56  63                 	db	99
   690  007A57  00                 	db	0
   691  007A58  7F                 	db	127
   692  007A59  00                 	db	0
   693  007A5A  7F                 	db	127
   694  007A5B  00                 	db	0
   695  007A5C  C1                 	db	193
   696  007A5D  80                 	db	128
   697  007A5E  C1                 	db	193
   698  007A5F  80                 	db	128
   699  007A60  00                 	db	0
   700  007A61  00                 	db	0
   701  007A62  00                 	db	0
   702  007A63  00                 	db	0
   703  007A64  00                 	db	0
   704  007A65  00                 	db	0
   705  007A66  00                 	db	0
   706  007A67  FC                 	db	252
   707  007A68  FE                 	db	254
   708  007A69  C6                 	db	198
   709  007A6A  C6                 	db	198
   710  007A6B  FC                 	db	252
   711  007A6C  FC                 	db	252
   712  007A6D  C6                 	db	198
   713  007A6E  C6                 	db	198
   714  007A6F  C6                 	db	198
   715  007A70  FE                 	db	254
   716  007A71  FC                 	db	252
   717  007A72  00                 	db	0
   718  007A73  00                 	db	0
   719  007A74  00                 	db	0
   720  007A75  00                 	db	0
   721  007A76  3C                 	db	60
   722  007A77  7E                 	db	126
   723  007A78  67                 	db	103
   724  007A79  C2                 	db	194
   725  007A7A  C0                 	db	192
   726  007A7B  C0                 	db	192
   727  007A7C  C0                 	db	192
   728  007A7D  C2                 	db	194
   729  007A7E  67                 	db	103
   730  007A7F  7E                 	db	126
   731  007A80  3C                 	db	60
   732  007A81  00                 	db	0
   733  007A82  00                 	db	0
   734  007A83  00                 	db	0
   735  007A84  00                 	db	0
   736  007A85  F8                 	db	248
   737  007A86  FC                 	db	252
   738  007A87  CE                 	db	206
   739  007A88  C6                 	db	198
   740  007A89  C6                 	db	198
   741  007A8A  C6                 	db	198
   742  007A8B  C6                 	db	198
   743  007A8C  C6                 	db	198
   744  007A8D  CE                 	db	206
   745  007A8E  FC                 	db	252
   746  007A8F  F8                 	db	248
   747  007A90  00                 	db	0
   748  007A91  00                 	db	0
   749  007A92  00                 	db	0
   750  007A93  00                 	db	0
   751  007A94  FE                 	db	254
   752  007A95  FE                 	db	254
   753  007A96  C0                 	db	192
   754  007A97  C0                 	db	192
   755  007A98  FE                 	db	254
   756  007A99  FE                 	db	254
   757  007A9A  C0                 	db	192
   758  007A9B  C0                 	db	192
   759  007A9C  C0                 	db	192
   760  007A9D  FE                 	db	254
   761  007A9E  FE                 	db	254
   762  007A9F  00                 	db	0
   763  007AA0  00                 	db	0
   764  007AA1  00                 	db	0
   765  007AA2  00                 	db	0
   766  007AA3  FC                 	db	252
   767  007AA4  FC                 	db	252
   768  007AA5  C0                 	db	192
   769  007AA6  C0                 	db	192
   770  007AA7  F8                 	db	248
   771  007AA8  F8                 	db	248
   772  007AA9  C0                 	db	192
   773  007AAA  C0                 	db	192
   774  007AAB  C0                 	db	192
   775  007AAC  C0                 	db	192
   776  007AAD  C0                 	db	192
   777  007AAE  00                 	db	0
   778  007AAF  00                 	db	0
   779  007AB0  00                 	db	0
   780  007AB1  00                 	db	0
   781  007AB2  3C                 	db	60
   782  007AB3  7E                 	db	126
   783  007AB4  67                 	db	103
   784  007AB5  C3                 	db	195
   785  007AB6  C0                 	db	192
   786  007AB7  CF                 	db	207
   787  007AB8  CF                 	db	207
   788  007AB9  C3                 	db	195
   789  007ABA  63                 	db	99
   790  007ABB  7F                 	db	127
   791  007ABC  3C                 	db	60
   792  007ABD  00                 	db	0
   793  007ABE  00                 	db	0
   794  007ABF  00                 	db	0
   795  007AC0  00                 	db	0
   796  007AC1  C6                 	db	198
   797  007AC2  C6                 	db	198
   798  007AC3  C6                 	db	198
   799  007AC4  C6                 	db	198
   800  007AC5  FE                 	db	254
   801  007AC6  FE                 	db	254
   802  007AC7  C6                 	db	198
   803  007AC8  C6                 	db	198
   804  007AC9  C6                 	db	198
   805  007ACA  C6                 	db	198
   806  007ACB  C6                 	db	198
   807  007ACC  00                 	db	0
   808  007ACD  00                 	db	0
   809  007ACE  00                 	db	0
   810  007ACF  00                 	db	0
   811  007AD0  C0                 	db	192
   812  007AD1  C0                 	db	192
   813  007AD2  C0                 	db	192
   814  007AD3  C0                 	db	192
   815  007AD4  C0                 	db	192
   816  007AD5  C0                 	db	192
   817  007AD6  C0                 	db	192
   818  007AD7  C0                 	db	192
   819  007AD8  C0                 	db	192
   820  007AD9  C0                 	db	192
   821  007ADA  C0                 	db	192
   822  007ADB  00                 	db	0
   823  007ADC  00                 	db	0
   824  007ADD  00                 	db	0
   825  007ADE  00                 	db	0
   826  007ADF  0C                 	db	12
   827  007AE0  0C                 	db	12
   828  007AE1  0C                 	db	12
   829  007AE2  0C                 	db	12
   830  007AE3  0C                 	db	12
   831  007AE4  0C                 	db	12
   832  007AE5  0C                 	db	12
   833  007AE6  CC                 	db	204
   834  007AE7  CC                 	db	204
   835  007AE8  FC                 	db	252
   836  007AE9  78                 	db	120
   837  007AEA  00                 	db	0
   838  007AEB  00                 	db	0
   839  007AEC  00                 	db	0
   840  007AED  00                 	db	0
   841  007AEE  C3                 	db	195
   842  007AEF  C6                 	db	198
   843  007AF0  CC                 	db	204
   844  007AF1  CC                 	db	204
   845  007AF2  D8                 	db	216
   846  007AF3  FC                 	db	252
   847  007AF4  EC                 	db	236
   848  007AF5  C6                 	db	198
   849  007AF6  C6                 	db	198
   850  007AF7  C3                 	db	195
   851  007AF8  C3                 	db	195
   852  007AF9  00                 	db	0
   853  007AFA  00                 	db	0
   854  007AFB  00                 	db	0
   855  007AFC  00                 	db	0
   856  007AFD  C0                 	db	192
   857  007AFE  C0                 	db	192
   858  007AFF  C0                 	db	192
   859  007B00  C0                 	db	192
   860  007B01  C0                 	db	192
   861  007B02  C0                 	db	192
   862  007B03  C0                 	db	192
   863  007B04  C0                 	db	192
   864  007B05  C0                 	db	192
   865  007B06  FE                 	db	254
   866  007B07  FE                 	db	254
   867  007B08  00                 	db	0
   868  007B09  00                 	db	0
   869  007B0A  00                 	db	0
   870  007B0B  00                 	db	0
   871  007B0C  00                 	db	0
   872  007B0D  E3                 	db	227
   873  007B0E  80                 	db	128
   874  007B0F  E3                 	db	227
   875  007B10  80                 	db	128
   876  007B11  E3                 	db	227
   877  007B12  80                 	db	128
   878  007B13  F7                 	db	247
   879  007B14  80                 	db	128
   880  007B15  D5                 	db	213
   881  007B16  80                 	db	128
   882  007B17  D5                 	db	213
   883  007B18  80                 	db	128
   884  007B19  D5                 	db	213
   885  007B1A  80                 	db	128
   886  007B1B  D5                 	db	213
   887  007B1C  80                 	db	128
   888  007B1D  DD                 	db	221
   889  007B1E  80                 	db	128
   890  007B1F  D9                 	db	217
   891  007B20  80                 	db	128
   892  007B21  C9                 	db	201
   893  007B22  80                 	db	128
   894  007B23  00                 	db	0
   895  007B24  00                 	db	0
   896  007B25  00                 	db	0
   897  007B26  00                 	db	0
   898  007B27  00                 	db	0
   899  007B28  00                 	db	0
   900  007B29  00                 	db	0
   901  007B2A  C6                 	db	198
   902  007B2B  E6                 	db	230
   903  007B2C  E6                 	db	230
   904  007B2D  E6                 	db	230
   905  007B2E  F6                 	db	246
   906  007B2F  D6                 	db	214
   907  007B30  DE                 	db	222
   908  007B31  DE                 	db	222
   909  007B32  CE                 	db	206
   910  007B33  CE                 	db	206
   911  007B34  C6                 	db	198
   912  007B35  00                 	db	0
   913  007B36  00                 	db	0
   914  007B37  00                 	db	0
   915  007B38  00                 	db	0
   916  007B39  3C                 	db	60
   917  007B3A  7E                 	db	126
   918  007B3B  67                 	db	103
   919  007B3C  C3                 	db	195
   920  007B3D  C3                 	db	195
   921  007B3E  C3                 	db	195
   922  007B3F  C3                 	db	195
   923  007B40  C3                 	db	195
   924  007B41  66                 	db	102
   925  007B42  7E                 	db	126
   926  007B43  3C                 	db	60
   927  007B44  00                 	db	0
   928  007B45  00                 	db	0
   929  007B46  00                 	db	0
   930  007B47  00                 	db	0
   931  007B48  FC                 	db	252
   932  007B49  FE                 	db	254
   933  007B4A  C6                 	db	198
   934  007B4B  C6                 	db	198
   935  007B4C  C6                 	db	198
   936  007B4D  FE                 	db	254
   937  007B4E  FC                 	db	252
   938  007B4F  C0                 	db	192
   939  007B50  C0                 	db	192
   940  007B51  C0                 	db	192
   941  007B52  C0                 	db	192
   942  007B53  00                 	db	0
   943  007B54  00                 	db	0
   944  007B55  00                 	db	0
   945  007B56  00                 	db	0
   946  007B57  00                 	db	0
   947  007B58  3C                 	db	60
   948  007B59  00                 	db	0
   949  007B5A  7E                 	db	126
   950  007B5B  00                 	db	0
   951  007B5C  E7                 	db	231
   952  007B5D  00                 	db	0
   953  007B5E  C3                 	db	195
   954  007B5F  00                 	db	0
   955  007B60  C3                 	db	195
   956  007B61  00                 	db	0
   957  007B62  C3                 	db	195
   958  007B63  00                 	db	0
   959  007B64  C3                 	db	195
   960  007B65  00                 	db	0
   961  007B66  CB                 	db	203
   962  007B67  00                 	db	0
   963  007B68  66                 	db	102
   964  007B69  00                 	db	0
   965  007B6A  7F                 	db	127
   966  007B6B  00                 	db	0
   967  007B6C  3D                 	db	61
   968  007B6D  80                 	db	128
   969  007B6E  00                 	db	0
   970  007B6F  80                 	db	128
   971  007B70  00                 	db	0
   972  007B71  00                 	db	0
   973  007B72  00                 	db	0
   974  007B73  00                 	db	0
   975  007B74  00                 	db	0
   976  007B75  FC                 	db	252
   977  007B76  FE                 	db	254
   978  007B77  C6                 	db	198
   979  007B78  C6                 	db	198
   980  007B79  FE                 	db	254
   981  007B7A  FC                 	db	252
   982  007B7B  CC                 	db	204
   983  007B7C  C6                 	db	198
   984  007B7D  C6                 	db	198
   985  007B7E  C6                 	db	198
   986  007B7F  C3                 	db	195
   987  007B80  00                 	db	0
   988  007B81  00                 	db	0
   989  007B82  00                 	db	0
   990  007B83  00                 	db	0
   991  007B84  7C                 	db	124
   992  007B85  FE                 	db	254
   993  007B86  C6                 	db	198
   994  007B87  C6                 	db	198
   995  007B88  F0                 	db	240
   996  007B89  7C                 	db	124
   997  007B8A  0E                 	db	14
   998  007B8B  C6                 	db	198
   999  007B8C  C6                 	db	198
  1000  007B8D  FE                 	db	254
  1001  007B8E  7C                 	db	124
  1002  007B8F  00                 	db	0
  1003  007B90  00                 	db	0
  1004  007B91  00                 	db	0
  1005  007B92  00                 	db	0
  1006  007B93  FF                 	db	255
  1007  007B94  FF                 	db	255
  1008  007B95  18                 	db	24
  1009  007B96  18                 	db	24
  1010  007B97  18                 	db	24
  1011  007B98  18                 	db	24
  1012  007B99  18                 	db	24
  1013  007B9A  18                 	db	24
  1014  007B9B  18                 	db	24
  1015  007B9C  18                 	db	24
  1016  007B9D  18                 	db	24
  1017  007B9E  00                 	db	0
  1018  007B9F  00                 	db	0
  1019  007BA0  00                 	db	0
  1020  007BA1  00                 	db	0
  1021  007BA2  C6                 	db	198
  1022  007BA3  C6                 	db	198
  1023  007BA4  C6                 	db	198
  1024  007BA5  C6                 	db	198
  1025  007BA6  C6                 	db	198
  1026  007BA7  C6                 	db	198
  1027  007BA8  C6                 	db	198
  1028  007BA9  C6                 	db	198
  1029  007BAA  C6                 	db	198
  1030  007BAB  7E                 	db	126
  1031  007BAC  38                 	db	56
  1032  007BAD  00                 	db	0
  1033  007BAE  00                 	db	0
  1034  007BAF  00                 	db	0
  1035  007BB0  00                 	db	0
  1036  007BB1  00                 	db	0
  1037  007BB2  C1                 	db	193
  1038  007BB3  80                 	db	128
  1039  007BB4  C1                 	db	193
  1040  007BB5  80                 	db	128
  1041  007BB6  63                 	db	99
  1042  007BB7  00                 	db	0
  1043  007BB8  63                 	db	99
  1044  007BB9  00                 	db	0
  1045  007BBA  63                 	db	99
  1046  007BBB  00                 	db	0
  1047  007BBC  36                 	db	54
  1048  007BBD  00                 	db	0
  1049  007BBE  36                 	db	54
  1050  007BBF  00                 	db	0
  1051  007BC0  36                 	db	54
  1052  007BC1  00                 	db	0
  1053  007BC2  1C                 	db	28
  1054  007BC3  00                 	db	0
  1055  007BC4  1C                 	db	28
  1056  007BC5  00                 	db	0
  1057  007BC6  1C                 	db	28
  1058  007BC7  00                 	db	0
  1059  007BC8  00                 	db	0
  1060  007BC9  00                 	db	0
  1061  007BCA  00                 	db	0
  1062  007BCB  00                 	db	0
  1063  007BCC  00                 	db	0
  1064  007BCD  00                 	db	0
  1065  007BCE  00                 	db	0
  1066  007BCF  00                 	db	0
  1067  007BD0  C4                 	db	196
  1068  007BD1  60                 	db	96
  1069  007BD2  C4                 	db	196
  1070  007BD3  60                 	db	96
  1071  007BD4  CA                 	db	202
  1072  007BD5  60                 	db	96
  1073  007BD6  6A                 	db	106
  1074  007BD7  C0                 	db	192
  1075  007BD8  6A                 	db	106
  1076  007BD9  C0                 	db	192
  1077  007BDA  6A                 	db	106
  1078  007BDB  C0                 	db	192
  1079  007BDC  6A                 	db	106
  1080  007BDD  C0                 	db	192
  1081  007BDE  6A                 	db	106
  1082  007BDF  C0                 	db	192
  1083  007BE0  31                 	db	49
  1084  007BE1  80                 	db	128
  1085  007BE2  31                 	db	49
  1086  007BE3  80                 	db	128
  1087  007BE4  31                 	db	49
  1088  007BE5  80                 	db	128
  1089  007BE6  00                 	db	0
  1090  007BE7  00                 	db	0
  1091  007BE8  00                 	db	0
  1092  007BE9  00                 	db	0
  1093  007BEA  00                 	db	0
  1094  007BEB  00                 	db	0
  1095  007BEC  00                 	db	0
  1096  007BED  00                 	db	0
  1097  007BEE  C1                 	db	193
  1098  007BEF  80                 	db	128
  1099  007BF0  63                 	db	99
  1100  007BF1  00                 	db	0
  1101  007BF2  36                 	db	54
  1102  007BF3  00                 	db	0
  1103  007BF4  36                 	db	54
  1104  007BF5  00                 	db	0
  1105  007BF6  1C                 	db	28
  1106  007BF7  00                 	db	0
  1107  007BF8  1C                 	db	28
  1108  007BF9  00                 	db	0
  1109  007BFA  1C                 	db	28
  1110  007BFB  00                 	db	0
  1111  007BFC  36                 	db	54
  1112  007BFD  00                 	db	0
  1113  007BFE  36                 	db	54
  1114  007BFF  00                 	db	0
  1115  007C00  63                 	db	99
  1116  007C01  00                 	db	0
  1117  007C02  C1                 	db	193
  1118  007C03  80                 	db	128
  1119  007C04  00                 	db	0
  1120  007C05  00                 	db	0
  1121  007C06  00                 	db	0
  1122  007C07  00                 	db	0
  1123  007C08  00                 	db	0
  1124  007C09  00                 	db	0
  1125  007C0A  00                 	db	0
  1126  007C0B  C3                 	db	195
  1127  007C0C  66                 	db	102
  1128  007C0D  66                 	db	102
  1129  007C0E  3C                 	db	60
  1130  007C0F  3C                 	db	60
  1131  007C10  18                 	db	24
  1132  007C11  18                 	db	24
  1133  007C12  18                 	db	24
  1134  007C13  18                 	db	24
  1135  007C14  18                 	db	24
  1136  007C15  18                 	db	24
  1137  007C16  00                 	db	0
  1138  007C17  00                 	db	0
  1139  007C18  00                 	db	0
  1140  007C19  00                 	db	0
  1141  007C1A  FE                 	db	254
  1142  007C1B  FE                 	db	254
  1143  007C1C  06                 	db	6
  1144  007C1D  0C                 	db	12
  1145  007C1E  18                 	db	24
  1146  007C1F  30                 	db	48
  1147  007C20  30                 	db	48
  1148  007C21  60                 	db	96
  1149  007C22  C0                 	db	192
  1150  007C23  FE                 	db	254
  1151  007C24  FE                 	db	254
  1152  007C25  00                 	db	0
  1153  007C26  00                 	db	0
  1154  007C27  00                 	db	0
  1155  007C28  00                 	db	0
  1156  007C29  E0                 	db	224
  1157  007C2A  E0                 	db	224
  1158  007C2B  C0                 	db	192
  1159  007C2C  C0                 	db	192
  1160  007C2D  C0                 	db	192
  1161  007C2E  C0                 	db	192
  1162  007C2F  C0                 	db	192
  1163  007C30  C0                 	db	192
  1164  007C31  C0                 	db	192
  1165  007C32  C0                 	db	192
  1166  007C33  C0                 	db	192
  1167  007C34  C0                 	db	192
  1168  007C35  E0                 	db	224
  1169  007C36  E0                 	db	224
  1170  007C37  00                 	db	0
  1171  007C38  C0                 	db	192
  1172  007C39  C0                 	db	192
  1173  007C3A  C0                 	db	192
  1174  007C3B  60                 	db	96
  1175  007C3C  60                 	db	96
  1176  007C3D  60                 	db	96
  1177  007C3E  60                 	db	96
  1178  007C3F  60                 	db	96
  1179  007C40  30                 	db	48
  1180  007C41  30                 	db	48
  1181  007C42  30                 	db	48
  1182  007C43  00                 	db	0
  1183  007C44  00                 	db	0
  1184  007C45  00                 	db	0
  1185  007C46  00                 	db	0
  1186  007C47  E0                 	db	224
  1187  007C48  E0                 	db	224
  1188  007C49  60                 	db	96
  1189  007C4A  60                 	db	96
  1190  007C4B  60                 	db	96
  1191  007C4C  60                 	db	96
  1192  007C4D  60                 	db	96
  1193  007C4E  60                 	db	96
  1194  007C4F  60                 	db	96
  1195  007C50  60                 	db	96
  1196  007C51  60                 	db	96
  1197  007C52  60                 	db	96
  1198  007C53  E0                 	db	224
  1199  007C54  E0                 	db	224
  1200  007C55  00                 	db	0
  1201  007C56  38                 	db	56
  1202  007C57  38                 	db	56
  1203  007C58  6C                 	db	108
  1204  007C59  6C                 	db	108
  1205  007C5A  6C                 	db	108
  1206  007C5B  C6                 	db	198
  1207  007C5C  00                 	db	0
  1208  007C5D  00                 	db	0
  1209  007C5E  00                 	db	0
  1210  007C5F  00                 	db	0
  1211  007C60  00                 	db	0
  1212  007C61  00                 	db	0
  1213  007C62  00                 	db	0
  1214  007C63  00                 	db	0
  1215  007C64  00                 	db	0
  1216  007C65  00                 	db	0
  1217  007C66  00                 	db	0
  1218  007C67  00                 	db	0
  1219  007C68  00                 	db	0
  1220  007C69  00                 	db	0
  1221  007C6A  00                 	db	0
  1222  007C6B  00                 	db	0
  1223  007C6C  00                 	db	0
  1224  007C6D  00                 	db	0
  1225  007C6E  00                 	db	0
  1226  007C6F  00                 	db	0
  1227  007C70  00                 	db	0
  1228  007C71  FE                 	db	254
  1229  007C72  00                 	db	0
  1230  007C73  00                 	db	0
  1231  007C74  C0                 	db	192
  1232  007C75  60                 	db	96
  1233  007C76  00                 	db	0
  1234  007C77  00                 	db	0
  1235  007C78  00                 	db	0
  1236  007C79  00                 	db	0
  1237  007C7A  00                 	db	0
  1238  007C7B  00                 	db	0
  1239  007C7C  00                 	db	0
  1240  007C7D  00                 	db	0
  1241  007C7E  00                 	db	0
  1242  007C7F  00                 	db	0
  1243  007C80  00                 	db	0
  1244  007C81  00                 	db	0
  1245  007C82  00                 	db	0
  1246  007C83  00                 	db	0
  1247  007C84  00                 	db	0
  1248  007C85  00                 	db	0
  1249  007C86  78                 	db	120
  1250  007C87  FC                 	db	252
  1251  007C88  CC                 	db	204
  1252  007C89  3C                 	db	60
  1253  007C8A  FC                 	db	252
  1254  007C8B  CC                 	db	204
  1255  007C8C  FC                 	db	252
  1256  007C8D  6C                 	db	108
  1257  007C8E  00                 	db	0
  1258  007C8F  00                 	db	0
  1259  007C90  00                 	db	0
  1260  007C91  00                 	db	0
  1261  007C92  C0                 	db	192
  1262  007C93  C0                 	db	192
  1263  007C94  C0                 	db	192
  1264  007C95  F8                 	db	248
  1265  007C96  FC                 	db	252
  1266  007C97  CC                 	db	204
  1267  007C98  CC                 	db	204
  1268  007C99  CC                 	db	204
  1269  007C9A  CC                 	db	204
  1270  007C9B  F8                 	db	248
  1271  007C9C  F8                 	db	248
  1272  007C9D  00                 	db	0
  1273  007C9E  00                 	db	0
  1274  007C9F  00                 	db	0
  1275  007CA0  00                 	db	0
  1276  007CA1  00                 	db	0
  1277  007CA2  00                 	db	0
  1278  007CA3  00                 	db	0
  1279  007CA4  70                 	db	112
  1280  007CA5  78                 	db	120
  1281  007CA6  D8                 	db	216
  1282  007CA7  C0                 	db	192
  1283  007CA8  C0                 	db	192
  1284  007CA9  D8                 	db	216
  1285  007CAA  78                 	db	120
  1286  007CAB  70                 	db	112
  1287  007CAC  00                 	db	0
  1288  007CAD  00                 	db	0
  1289  007CAE  00                 	db	0
  1290  007CAF  00                 	db	0
  1291  007CB0  0C                 	db	12
  1292  007CB1  0C                 	db	12
  1293  007CB2  0C                 	db	12
  1294  007CB3  7C                 	db	124
  1295  007CB4  FC                 	db	252
  1296  007CB5  CC                 	db	204
  1297  007CB6  CC                 	db	204
  1298  007CB7  CC                 	db	204
  1299  007CB8  CC                 	db	204
  1300  007CB9  FC                 	db	252
  1301  007CBA  7C                 	db	124
  1302  007CBB  00                 	db	0
  1303  007CBC  00                 	db	0
  1304  007CBD  00                 	db	0
  1305  007CBE  00                 	db	0
  1306  007CBF  00                 	db	0
  1307  007CC0  00                 	db	0
  1308  007CC1  00                 	db	0
  1309  007CC2  70                 	db	112
  1310  007CC3  F8                 	db	248
  1311  007CC4  D8                 	db	216
  1312  007CC5  F8                 	db	248
  1313  007CC6  C0                 	db	192
  1314  007CC7  D8                 	db	216
  1315  007CC8  F8                 	db	248
  1316  007CC9  70                 	db	112
  1317  007CCA  00                 	db	0
  1318  007CCB  00                 	db	0
  1319  007CCC  00                 	db	0
  1320  007CCD  00                 	db	0
  1321  007CCE  30                 	db	48
  1322  007CCF  70                 	db	112
  1323  007CD0  60                 	db	96
  1324  007CD1  F0                 	db	240
  1325  007CD2  F0                 	db	240
  1326  007CD3  60                 	db	96
  1327  007CD4  60                 	db	96
  1328  007CD5  60                 	db	96
  1329  007CD6  60                 	db	96
  1330  007CD7  60                 	db	96
  1331  007CD8  60                 	db	96
  1332  007CD9  00                 	db	0
  1333  007CDA  00                 	db	0
  1334  007CDB  00                 	db	0
  1335  007CDC  00                 	db	0
  1336  007CDD  00                 	db	0
  1337  007CDE  00                 	db	0
  1338  007CDF  00                 	db	0
  1339  007CE0  6C                 	db	108
  1340  007CE1  FC                 	db	252
  1341  007CE2  CC                 	db	204
  1342  007CE3  CC                 	db	204
  1343  007CE4  CC                 	db	204
  1344  007CE5  CC                 	db	204
  1345  007CE6  FC                 	db	252
  1346  007CE7  6C                 	db	108
  1347  007CE8  0C                 	db	12
  1348  007CE9  CC                 	db	204
  1349  007CEA  78                 	db	120
  1350  007CEB  00                 	db	0
  1351  007CEC  C0                 	db	192
  1352  007CED  C0                 	db	192
  1353  007CEE  C0                 	db	192
  1354  007CEF  D8                 	db	216
  1355  007CF0  FC                 	db	252
  1356  007CF1  CC                 	db	204
  1357  007CF2  CC                 	db	204
  1358  007CF3  CC                 	db	204
  1359  007CF4  CC                 	db	204
  1360  007CF5  CC                 	db	204
  1361  007CF6  CC                 	db	204
  1362  007CF7  00                 	db	0
  1363  007CF8  00                 	db	0
  1364  007CF9  00                 	db	0
  1365  007CFA  00                 	db	0
  1366  007CFB  C0                 	db	192
  1367  007CFC  C0                 	db	192
  1368  007CFD  00                 	db	0
  1369  007CFE  C0                 	db	192
  1370  007CFF  C0                 	db	192
  1371  007D00  C0                 	db	192
  1372  007D01  C0                 	db	192
  1373  007D02  C0                 	db	192
  1374  007D03  C0                 	db	192
  1375  007D04  C0                 	db	192
  1376  007D05  C0                 	db	192
  1377  007D06  00                 	db	0
  1378  007D07  00                 	db	0
  1379  007D08  00                 	db	0
  1380  007D09  00                 	db	0
  1381  007D0A  30                 	db	48
  1382  007D0B  30                 	db	48
  1383  007D0C  00                 	db	0
  1384  007D0D  30                 	db	48
  1385  007D0E  30                 	db	48
  1386  007D0F  30                 	db	48
  1387  007D10  30                 	db	48
  1388  007D11  30                 	db	48
  1389  007D12  30                 	db	48
  1390  007D13  30                 	db	48
  1391  007D14  30                 	db	48
  1392  007D15  30                 	db	48
  1393  007D16  F0                 	db	240
  1394  007D17  E0                 	db	224
  1395  007D18  00                 	db	0
  1396  007D19  C0                 	db	192
  1397  007D1A  C0                 	db	192
  1398  007D1B  C0                 	db	192
  1399  007D1C  CC                 	db	204
  1400  007D1D  D8                 	db	216
  1401  007D1E  F0                 	db	240
  1402  007D1F  F8                 	db	248
  1403  007D20  D8                 	db	216
  1404  007D21  D8                 	db	216
  1405  007D22  CC                 	db	204
  1406  007D23  CC                 	db	204
  1407  007D24  00                 	db	0
  1408  007D25  00                 	db	0
  1409  007D26  00                 	db	0
  1410  007D27  00                 	db	0
  1411  007D28  C0                 	db	192
  1412  007D29  C0                 	db	192
  1413  007D2A  C0                 	db	192
  1414  007D2B  C0                 	db	192
  1415  007D2C  C0                 	db	192
  1416  007D2D  C0                 	db	192
  1417  007D2E  C0                 	db	192
  1418  007D2F  C0                 	db	192
  1419  007D30  C0                 	db	192
  1420  007D31  C0                 	db	192
  1421  007D32  C0                 	db	192
  1422  007D33  00                 	db	0
  1423  007D34  00                 	db	0
  1424  007D35  00                 	db	0
  1425  007D36  00                 	db	0
  1426  007D37  00                 	db	0
  1427  007D38  00                 	db	0
  1428  007D39  00                 	db	0
  1429  007D3A  00                 	db	0
  1430  007D3B  00                 	db	0
  1431  007D3C  00                 	db	0
  1432  007D3D  00                 	db	0
  1433  007D3E  D9                 	db	217
  1434  007D3F  80                 	db	128
  1435  007D40  FF                 	db	255
  1436  007D41  C0                 	db	192
  1437  007D42  CC                 	db	204
  1438  007D43  C0                 	db	192
  1439  007D44  CC                 	db	204
  1440  007D45  C0                 	db	192
  1441  007D46  CC                 	db	204
  1442  007D47  C0                 	db	192
  1443  007D48  CC                 	db	204
  1444  007D49  C0                 	db	192
  1445  007D4A  CC                 	db	204
  1446  007D4B  C0                 	db	192
  1447  007D4C  CC                 	db	204
  1448  007D4D  C0                 	db	192
  1449  007D4E  00                 	db	0
  1450  007D4F  00                 	db	0
  1451  007D50  00                 	db	0
  1452  007D51  00                 	db	0
  1453  007D52  00                 	db	0
  1454  007D53  00                 	db	0
  1455  007D54  00                 	db	0
  1456  007D55  00                 	db	0
  1457  007D56  00                 	db	0
  1458  007D57  00                 	db	0
  1459  007D58  D8                 	db	216
  1460  007D59  FC                 	db	252
  1461  007D5A  CC                 	db	204
  1462  007D5B  CC                 	db	204
  1463  007D5C  CC                 	db	204
  1464  007D5D  CC                 	db	204
  1465  007D5E  CC                 	db	204
  1466  007D5F  CC                 	db	204
  1467  007D60  00                 	db	0
  1468  007D61  00                 	db	0
  1469  007D62  00                 	db	0
  1470  007D63  00                 	db	0
  1471  007D64  00                 	db	0
  1472  007D65  00                 	db	0
  1473  007D66  00                 	db	0
  1474  007D67  78                 	db	120
  1475  007D68  78                 	db	120
  1476  007D69  CC                 	db	204
  1477  007D6A  CC                 	db	204
  1478  007D6B  CC                 	db	204
  1479  007D6C  CC                 	db	204
  1480  007D6D  78                 	db	120
  1481  007D6E  78                 	db	120
  1482  007D6F  00                 	db	0
  1483  007D70  00                 	db	0
  1484  007D71  00                 	db	0
  1485  007D72  00                 	db	0
  1486  007D73  00                 	db	0
  1487  007D74  00                 	db	0
  1488  007D75  00                 	db	0
  1489  007D76  D8                 	db	216
  1490  007D77  FC                 	db	252
  1491  007D78  CC                 	db	204
  1492  007D79  CC                 	db	204
  1493  007D7A  CC                 	db	204
  1494  007D7B  CC                 	db	204
  1495  007D7C  F8                 	db	248
  1496  007D7D  D8                 	db	216
  1497  007D7E  C0                 	db	192
  1498  007D7F  C0                 	db	192
  1499  007D80  C0                 	db	192
  1500  007D81  00                 	db	0
  1501  007D82  00                 	db	0
  1502  007D83  00                 	db	0
  1503  007D84  00                 	db	0
  1504  007D85  6C                 	db	108
  1505  007D86  FC                 	db	252
  1506  007D87  CC                 	db	204
  1507  007D88  CC                 	db	204
  1508  007D89  CC                 	db	204
  1509  007D8A  CC                 	db	204
  1510  007D8B  FC                 	db	252
  1511  007D8C  6C                 	db	108
  1512  007D8D  0C                 	db	12
  1513  007D8E  0C                 	db	12
  1514  007D8F  0C                 	db	12
  1515  007D90  00                 	db	0
  1516  007D91  00                 	db	0
  1517  007D92  00                 	db	0
  1518  007D93  00                 	db	0
  1519  007D94  D0                 	db	208
  1520  007D95  F0                 	db	240
  1521  007D96  C0                 	db	192
  1522  007D97  C0                 	db	192
  1523  007D98  C0                 	db	192
  1524  007D99  C0                 	db	192
  1525  007D9A  C0                 	db	192
  1526  007D9B  C0                 	db	192
  1527  007D9C  00                 	db	0
  1528  007D9D  00                 	db	0
  1529  007D9E  00                 	db	0
  1530  007D9F  00                 	db	0
  1531  007DA0  00                 	db	0
  1532  007DA1  00                 	db	0
  1533  007DA2  00                 	db	0
  1534  007DA3  70                 	db	112
  1535  007DA4  F8                 	db	248
  1536  007DA5  C8                 	db	200
  1537  007DA6  E0                 	db	224
  1538  007DA7  38                 	db	56
  1539  007DA8  98                 	db	152
  1540  007DA9  F8                 	db	248
  1541  007DAA  70                 	db	112
  1542  007DAB  00                 	db	0
  1543  007DAC  00                 	db	0
  1544  007DAD  00                 	db	0
  1545  007DAE  00                 	db	0
  1546  007DAF  20                 	db	32
  1547  007DB0  60                 	db	96
  1548  007DB1  60                 	db	96
  1549  007DB2  F0                 	db	240
  1550  007DB3  F0                 	db	240
  1551  007DB4  60                 	db	96
  1552  007DB5  60                 	db	96
  1553  007DB6  60                 	db	96
  1554  007DB7  60                 	db	96
  1555  007DB8  70                 	db	112
  1556  007DB9  70                 	db	112
  1557  007DBA  00                 	db	0
  1558  007DBB  00                 	db	0
  1559  007DBC  00                 	db	0
  1560  007DBD  00                 	db	0
  1561  007DBE  00                 	db	0
  1562  007DBF  00                 	db	0
  1563  007DC0  00                 	db	0
  1564  007DC1  CC                 	db	204
  1565  007DC2  CC                 	db	204
  1566  007DC3  CC                 	db	204
  1567  007DC4  CC                 	db	204
  1568  007DC5  CC                 	db	204
  1569  007DC6  CC                 	db	204
  1570  007DC7  FC                 	db	252
  1571  007DC8  6C                 	db	108
  1572  007DC9  00                 	db	0
  1573  007DCA  00                 	db	0
  1574  007DCB  00                 	db	0
  1575  007DCC  00                 	db	0
  1576  007DCD  00                 	db	0
  1577  007DCE  00                 	db	0
  1578  007DCF  00                 	db	0
  1579  007DD0  C6                 	db	198
  1580  007DD1  C6                 	db	198
  1581  007DD2  6C                 	db	108
  1582  007DD3  6C                 	db	108
  1583  007DD4  6C                 	db	108
  1584  007DD5  38                 	db	56
  1585  007DD6  38                 	db	56
  1586  007DD7  38                 	db	56
  1587  007DD8  00                 	db	0
  1588  007DD9  00                 	db	0
  1589  007DDA  00                 	db	0
  1590  007DDB  00                 	db	0
  1591  007DDC  00                 	db	0
  1592  007DDD  00                 	db	0
  1593  007DDE  00                 	db	0
  1594  007DDF  00                 	db	0
  1595  007DE0  00                 	db	0
  1596  007DE1  00                 	db	0
  1597  007DE2  00                 	db	0
  1598  007DE3  DD                 	db	221
  1599  007DE4  80                 	db	128
  1600  007DE5  DD                 	db	221
  1601  007DE6  80                 	db	128
  1602  007DE7  DD                 	db	221
  1603  007DE8  80                 	db	128
  1604  007DE9  D5                 	db	213
  1605  007DEA  80                 	db	128
  1606  007DEB  55                 	db	85
  1607  007DEC  00                 	db	0
  1608  007DED  77                 	db	119
  1609  007DEE  00                 	db	0
  1610  007DEF  77                 	db	119
  1611  007DF0  00                 	db	0
  1612  007DF1  77                 	db	119
  1613  007DF2  00                 	db	0
  1614  007DF3  00                 	db	0
  1615  007DF4  00                 	db	0
  1616  007DF5  00                 	db	0
  1617  007DF6  00                 	db	0
  1618  007DF7  00                 	db	0
  1619  007DF8  00                 	db	0
  1620  007DF9  00                 	db	0
  1621  007DFA  00                 	db	0
  1622  007DFB  00                 	db	0
  1623  007DFC  00                 	db	0
  1624  007DFD  CC                 	db	204
  1625  007DFE  78                 	db	120
  1626  007DFF  78                 	db	120
  1627  007E00  30                 	db	48
  1628  007E01  30                 	db	48
  1629  007E02  78                 	db	120
  1630  007E03  78                 	db	120
  1631  007E04  CC                 	db	204
  1632  007E05  00                 	db	0
  1633  007E06  00                 	db	0
  1634  007E07  00                 	db	0
  1635  007E08  00                 	db	0
  1636  007E09  00                 	db	0
  1637  007E0A  00                 	db	0
  1638  007E0B  00                 	db	0
  1639  007E0C  C6                 	db	198
  1640  007E0D  C6                 	db	198
  1641  007E0E  6C                 	db	108
  1642  007E0F  6C                 	db	108
  1643  007E10  6C                 	db	108
  1644  007E11  38                 	db	56
  1645  007E12  38                 	db	56
  1646  007E13  38                 	db	56
  1647  007E14  30                 	db	48
  1648  007E15  F0                 	db	240
  1649  007E16  E0                 	db	224
  1650  007E17  00                 	db	0
  1651  007E18  00                 	db	0
  1652  007E19  00                 	db	0
  1653  007E1A  00                 	db	0
  1654  007E1B  FC                 	db	252
  1655  007E1C  FC                 	db	252
  1656  007E1D  18                 	db	24
  1657  007E1E  30                 	db	48
  1658  007E1F  30                 	db	48
  1659  007E20  60                 	db	96
  1660  007E21  FC                 	db	252
  1661  007E22  FC                 	db	252
  1662  007E23  00                 	db	0
  1663  007E24  00                 	db	0
  1664  007E25  00                 	db	0
  1665  007E26  00                 	db	0
  1666  007E27  30                 	db	48
  1667  007E28  70                 	db	112
  1668  007E29  60                 	db	96
  1669  007E2A  60                 	db	96
  1670  007E2B  60                 	db	96
  1671  007E2C  60                 	db	96
  1672  007E2D  C0                 	db	192
  1673  007E2E  C0                 	db	192
  1674  007E2F  60                 	db	96
  1675  007E30  60                 	db	96
  1676  007E31  60                 	db	96
  1677  007E32  60                 	db	96
  1678  007E33  70                 	db	112
  1679  007E34  30                 	db	48
  1680  007E35  00                 	db	0
  1681  007E36  C0                 	db	192
  1682  007E37  C0                 	db	192
  1683  007E38  C0                 	db	192
  1684  007E39  C0                 	db	192
  1685  007E3A  C0                 	db	192
  1686  007E3B  C0                 	db	192
  1687  007E3C  C0                 	db	192
  1688  007E3D  C0                 	db	192
  1689  007E3E  C0                 	db	192
  1690  007E3F  C0                 	db	192
  1691  007E40  C0                 	db	192
  1692  007E41  C0                 	db	192
  1693  007E42  C0                 	db	192
  1694  007E43  C0                 	db	192
  1695  007E44  00                 	db	0
  1696  007E45  C0                 	db	192
  1697  007E46  E0                 	db	224
  1698  007E47  60                 	db	96
  1699  007E48  60                 	db	96
  1700  007E49  60                 	db	96
  1701  007E4A  60                 	db	96
  1702  007E4B  30                 	db	48
  1703  007E4C  30                 	db	48
  1704  007E4D  60                 	db	96
  1705  007E4E  60                 	db	96
  1706  007E4F  60                 	db	96
  1707  007E50  60                 	db	96
  1708  007E51  E0                 	db	224
  1709  007E52  C0                 	db	192
  1710  007E53  00                 	db	0
  1711  007E54  00                 	db	0
  1712  007E55  00                 	db	0
  1713  007E56  00                 	db	0
  1714  007E57  00                 	db	0
  1715  007E58  E4                 	db	228
  1716  007E59  FC                 	db	252
  1717  007E5A  9C                 	db	156
  1718  007E5B  00                 	db	0
  1719  007E5C  00                 	db	0
  1720  007E5D  00                 	db	0
  1721  007E5E  00                 	db	0
  1722  007E5F  00                 	db	0
  1723  007E60  00                 	db	0
  1724  007E61  00                 	db	0
  1725  007E62                     __end_of_arialNarrow_12ptBitmaps:
  1726                           	callstack 0
  1727  007E62                     _arialNarrow_12ptDescriptors:
  1728                           	callstack 0
  1729  007E62  08                 	db	8
  1730  007E63  0000               	dw	0
  1731  007E65  02                 	db	2
  1732  007E66  000F               	dw	15
  1733  007E68  05                 	db	5
  1734  007E69  001E               	dw	30
  1735  007E6B  07                 	db	7
  1736  007E6C  002D               	dw	45
  1737  007E6E  07                 	db	7
  1738  007E6F  003C               	dw	60
  1739  007E71  0A                 	db	10
  1740  007E72  004B               	dw	75
  1741  007E74  08                 	db	8
  1742  007E75  0069               	dw	105
  1743  007E77  02                 	db	2
  1744  007E78  0078               	dw	120
  1745  007E7A  04                 	db	4
  1746  007E7B  0087               	dw	135
  1747  007E7D  04                 	db	4
  1748  007E7E  0096               	dw	150
  1749  007E80  05                 	db	5
  1750  007E81  00A5               	dw	165
  1751  007E83  06                 	db	6
  1752  007E84  00B4               	dw	180
  1753  007E86  02                 	db	2
  1754  007E87  00C3               	dw	195
  1755  007E89  04                 	db	4
  1756  007E8A  00D2               	dw	210
  1757  007E8C  02                 	db	2
  1758  007E8D  00E1               	dw	225
  1759  007E8F  04                 	db	4
  1760  007E90  00F0               	dw	240
  1761  007E92  06                 	db	6
  1762  007E93  00FF               	dw	255
  1763  007E95  04                 	db	4
  1764  007E96  010E               	dw	270
  1765  007E98  06                 	db	6
  1766  007E99  011D               	dw	285
  1767  007E9B  06                 	db	6
  1768  007E9C  012C               	dw	300
  1769  007E9E  07                 	db	7
  1770  007E9F  013B               	dw	315
  1771  007EA1  06                 	db	6
  1772  007EA2  014A               	dw	330
  1773  007EA4  05                 	db	5
  1774  007EA5  0159               	dw	345
  1775  007EA7  05                 	db	5
  1776  007EA8  0168               	dw	360
  1777  007EAA  06                 	db	6
  1778  007EAB  0177               	dw	375
  1779  007EAD  06                 	db	6
  1780  007EAE  0186               	dw	390
  1781  007EB0  02                 	db	2
  1782  007EB1  0195               	dw	405
  1783  007EB3  02                 	db	2
  1784  007EB4  01A4               	dw	420
  1785  007EB6  06                 	db	6
  1786  007EB7  01B3               	dw	435
  1787  007EB9  06                 	db	6
  1788  007EBA  01C2               	dw	450
  1789  007EBC  06                 	db	6
  1790  007EBD  01D1               	dw	465
  1791  007EBF  06                 	db	6
  1792  007EC0  01E0               	dw	480
  1793  007EC2  0D                 	db	13
  1794  007EC3  01EF               	dw	495
  1795  007EC5  09                 	db	9
  1796  007EC6  020D               	dw	525
  1797  007EC8  07                 	db	7
  1798  007EC9  022B               	dw	555
  1799  007ECB  08                 	db	8
  1800  007ECC  023A               	dw	570
  1801  007ECE  07                 	db	7
  1802  007ECF  0249               	dw	585
  1803  007ED1  07                 	db	7
  1804  007ED2  0258               	dw	600
  1805  007ED4  06                 	db	6
  1806  007ED5  0267               	dw	615
  1807  007ED7  08                 	db	8
  1808  007ED8  0276               	dw	630
  1809  007EDA  07                 	db	7
  1810  007EDB  0285               	dw	645
  1811  007EDD  02                 	db	2
  1812  007EDE  0294               	dw	660
  1813  007EE0  06                 	db	6
  1814  007EE1  02A3               	dw	675
  1815  007EE3  08                 	db	8
  1816  007EE4  02B2               	dw	690
  1817  007EE6  07                 	db	7
  1818  007EE7  02C1               	dw	705
  1819  007EE9  09                 	db	9
  1820  007EEA  02D0               	dw	720
  1821  007EEC  07                 	db	7
  1822  007EED  02EE               	dw	750
  1823  007EEF  08                 	db	8
  1824  007EF0  02FD               	dw	765
  1825  007EF2  07                 	db	7
  1826  007EF3  030C               	dw	780
  1827  007EF5  09                 	db	9
  1828  007EF6  031B               	dw	795
  1829  007EF8  08                 	db	8
  1830  007EF9  0339               	dw	825
  1831  007EFB  07                 	db	7
  1832  007EFC  0348               	dw	840
  1833  007EFE  08                 	db	8
  1834  007EFF  0357               	dw	855
  1835  007F01  07                 	db	7
  1836  007F02  0366               	dw	870
  1837  007F04  09                 	db	9
  1838  007F05  0375               	dw	885
  1839  007F07  0B                 	db	11
  1840  007F08  0393               	dw	915
  1841  007F0A  09                 	db	9
  1842  007F0B  03B1               	dw	945
  1843  007F0D  08                 	db	8
  1844  007F0E  03CF               	dw	975
  1845  007F10  07                 	db	7
  1846  007F11  03DE               	dw	990
  1847  007F13  03                 	db	3
  1848  007F14  03ED               	dw	1005
  1849  007F16  04                 	db	4
  1850  007F17  03FC               	dw	1020
  1851  007F19  03                 	db	3
  1852  007F1A  040B               	dw	1035
  1853  007F1C  07                 	db	7
  1854  007F1D  041A               	dw	1050
  1855  007F1F  07                 	db	7
  1856  007F20  0429               	dw	1065
  1857  007F22  03                 	db	3
  1858  007F23  0438               	dw	1080
  1859  007F25  06                 	db	6
  1860  007F26  0447               	dw	1095
  1861  007F28  06                 	db	6
  1862  007F29  0456               	dw	1110
  1863  007F2B  05                 	db	5
  1864  007F2C  0465               	dw	1125
  1865  007F2E  06                 	db	6
  1866  007F2F  0474               	dw	1140
  1867  007F31  05                 	db	5
  1868  007F32  0483               	dw	1155
  1869  007F34  04                 	db	4
  1870  007F35  0492               	dw	1170
  1871  007F37  06                 	db	6
  1872  007F38  04A1               	dw	1185
  1873  007F3A  06                 	db	6
  1874  007F3B  04B0               	dw	1200
  1875  007F3D  02                 	db	2
  1876  007F3E  04BF               	dw	1215
  1877  007F40  04                 	db	4
  1878  007F41  04CE               	dw	1230
  1879  007F43  06                 	db	6
  1880  007F44  04DD               	dw	1245
  1881  007F46  02                 	db	2
  1882  007F47  04EC               	dw	1260
  1883  007F49  0A                 	db	10
  1884  007F4A  04FB               	dw	1275
  1885  007F4C  06                 	db	6
  1886  007F4D  0519               	dw	1305
  1887  007F4F  06                 	db	6
  1888  007F50  0528               	dw	1320
  1889  007F52  06                 	db	6
  1890  007F53  0537               	dw	1335
  1891  007F55  06                 	db	6
  1892  007F56  0546               	dw	1350
  1893  007F58  04                 	db	4
  1894  007F59  0555               	dw	1365
  1895  007F5B  05                 	db	5
  1896  007F5C  0564               	dw	1380
  1897  007F5E  04                 	db	4
  1898  007F5F  0573               	dw	1395
  1899  007F61  06                 	db	6
  1900  007F62  0582               	dw	1410
  1901  007F64  07                 	db	7
  1902  007F65  0591               	dw	1425
  1903  007F67  09                 	db	9
  1904  007F68  05A0               	dw	1440
  1905  007F6A  06                 	db	6
  1906  007F6B  05BE               	dw	1470
  1907  007F6D  07                 	db	7
  1908  007F6E  05CD               	dw	1485
  1909  007F70  06                 	db	6
  1910  007F71  05DC               	dw	1500
  1911  007F73  04                 	db	4
  1912  007F74  05EB               	dw	1515
  1913  007F76  02                 	db	2
  1914  007F77  05FA               	dw	1530
  1915  007F79  04                 	db	4
  1916  007F7A  0609               	dw	1545
  1917  007F7C  06                 	db	6
  1918  007F7D  0618               	dw	1560
  1919  007F7F                     __end_of_arialNarrow_12ptDescriptors:
  1920                           	callstack 0
  1921  007F7F                     _arialNarrow_12ptFontInfo:
  1922                           	callstack 0
  1923  007F7F  0F                 	db	15
  1924  007F80  20                 	db	32
  1925  007F81  7E                 	db	126
  1926  007F82  62                 	db	low _arialNarrow_12ptDescriptors
  1927  007F83  7E                 	db	high _arialNarrow_12ptDescriptors
  1928  007F84  3B                 	db	low _arialNarrow_12ptBitmaps
  1929  007F85  78                 	db	high _arialNarrow_12ptBitmaps
  1930  007F86                     __end_of_arialNarrow_12ptFontInfo:
  1931                           	callstack 0
  1932  0000                     _ANSB2	set	31178
  1933  0000                     _ANSB1	set	31177
  1934  0000                     _WPUB	set	3937
  1935  0000                     _PORTBbits	set	3969
  1936  0000                     _ADRESL	set	4035
  1937  0000                     _ADRESH	set	4036
  1938  0000                     _ADCON0	set	4034
  1939  0000                     _TRISA	set	3986
  1940  0000                     _PORTA	set	3968
  1941  0000                     _ADCON2	set	4032
  1942  0000                     _T2CONbits	set	4026
  1943  0000                     _CCPR2L	set	3943
  1944  0000                     _CCP2CONbits	set	3942
  1945  0000                     _PR2	set	4027
  1946  0000                     _TMR0L	set	4054
  1947  0000                     _TMR0H	set	4055
  1948  0000                     _T0CON	set	4053
  1949  0000                     _OSCCON	set	4051
  1950  0000                     _TMR0IF	set	32658
  1951  0000                     _LATB4	set	31828
  1952  0000                     _LATB3	set	31827
  1953  0000                     _LATB1	set	31825
  1954  0000                     _TRISB4	set	31900
  1955  0000                     _TRISB3	set	31899
  1956  0000                     _RBPU	set	32655
  1957  0000                     _TRISB1	set	31897
  1958  0000                     _LATB2	set	31826
  1959  0000                     _TRISB2	set	31898
  1960  0000                     _INT1IF	set	32640
  1961  0000                     _LATC2	set	31834
  1962  0000                     _LATC5	set	31837
  1963  0000                     _TRISC4	set	31908
  1964  0000                     _TRISC3	set	31907
  1965  0000                     _TRISC2	set	31906
  1966  0000                     _TRISC5	set	31909
  1967  0000                     _LATC3	set	31835
  1968  0000                     _LATC4	set	31836
  1969  0000                     _TMR2IF	set	31985
  1970  0000                     _TRISC1	set	31905
  1971  0000                     _TMR0IE	set	32661
  1972  0000                     _LATC0	set	31832
  1973  0000                     _TRISC0	set	31904
  1974  0000                     _INTEDG1	set	32653
  1975  0000                     _INT1IE	set	32643
  1976  0000                     _GIE	set	32663
  1977  0000                     _PLLEN	set	31966
  1978  007F86                     STR_14:
  1979  007F86  50                 	db	80	;'P'
  1980  007F87  4C                 	db	76	;'L'
  1981  007F88  41                 	db	65	;'A'
  1982  007F89  59                 	db	89	;'Y'
  1983  007F8A  45                 	db	69	;'E'
  1984  007F8B  52                 	db	82	;'R'
  1985  007F8C  20                 	db	32
  1986  007F8D  31                 	db	49	;'1'
  1987  007F8E  20                 	db	32
  1988  007F8F  57                 	db	87	;'W'
  1989  007F90  49                 	db	73	;'I'
  1990  007F91  4E                 	db	78	;'N'
  1991  007F92  00                 	db	0
  1992  007F93                     STR_13:
  1993  007F93  50                 	db	80	;'P'
  1994  007F94  4C                 	db	76	;'L'
  1995  007F95  41                 	db	65	;'A'
  1996  007F96  59                 	db	89	;'Y'
  1997  007F97  45                 	db	69	;'E'
  1998  007F98  52                 	db	82	;'R'
  1999  007F99  20                 	db	32
  2000  007F9A  32                 	db	50	;'2'
  2001  007F9B  20                 	db	32
  2002  007F9C  57                 	db	87	;'W'
  2003  007F9D  49                 	db	73	;'I'
  2004  007F9E  4E                 	db	78	;'N'
  2005  007F9F  00                 	db	0
  2006  007FA0                     STR_12:
  2007  007FA0  50                 	db	80	;'P'
  2008  007FA1  41                 	db	65	;'A'
  2009  007FA2  52                 	db	82	;'R'
  2010  007FA3  41                 	db	65	;'A'
  2011  007FA4  4D                 	db	77	;'M'
  2012  007FA5  45                 	db	69	;'E'
  2013  007FA6  54                 	db	84	;'T'
  2014  007FA7  45                 	db	69	;'E'
  2015  007FA8  52                 	db	82	;'R'
  2016  007FA9  53                 	db	83	;'S'
  2017  007FAA  00                 	db	0
  2018  007FAB                     STR_4:
  2019  007FAB  50                 	db	80	;'P'
  2020  007FAC  61                 	db	97	;'a'
  2021  007FAD  72                 	db	114	;'r'
  2022  007FAE  61                 	db	97	;'a'
  2023  007FAF  6D                 	db	109	;'m'
  2024  007FB0  65                 	db	101	;'e'
  2025  007FB1  74                 	db	116	;'t'
  2026  007FB2  72                 	db	114	;'r'
  2027  007FB3  65                 	db	101	;'e'
  2028  007FB4  73                 	db	115	;'s'
  2029  007FB5  00                 	db	0
  2030  007FB6                     STR_1:
  2031  007FB6  4D                 	db	77	;'M'
  2032  007FB7  65                 	db	101	;'e'
  2033  007FB8  6E                 	db	110	;'n'
  2034  007FB9  75                 	db	117	;'u'
  2035  007FBA  53                 	db	83	;'S'
  2036  007FBB  74                 	db	116	;'t'
  2037  007FBC  61                 	db	97	;'a'
  2038  007FBD  72                 	db	114	;'r'
  2039  007FBE  74                 	db	116	;'t'
  2040  007FBF  00                 	db	0
  2041  007FC0                     STR_10:
  2042  007FC0  4E                 	db	78	;'N'
  2043  007FC1  65                 	db	101	;'e'
  2044  007FC2  77                 	db	119	;'w'
  2045  007FC3  20                 	db	32
  2046  007FC4  47                 	db	71	;'G'
  2047  007FC5  61                 	db	97	;'a'
  2048  007FC6  6D                 	db	109	;'m'
  2049  007FC7  65                 	db	101	;'e'
  2050  007FC8  00                 	db	0
  2051  007FC9                     STR_5:
  2052  007FC9  31                 	db	49	;'1'
  2053  007FCA  20                 	db	32
  2054  007FCB  50                 	db	80	;'P'
  2055  007FCC  6C                 	db	108	;'l'
  2056  007FCD  61                 	db	97	;'a'
  2057  007FCE  79                 	db	121	;'y'
  2058  007FCF  65                 	db	101	;'e'
  2059  007FD0  72                 	db	114	;'r'
  2060  007FD1  00                 	db	0
  2061  007FD2                     STR_6:
  2062  007FD2  32                 	db	50	;'2'
  2063  007FD3  20                 	db	32
  2064  007FD4  50                 	db	80	;'P'
  2065  007FD5  6C                 	db	108	;'l'
  2066  007FD6  61                 	db	97	;'a'
  2067  007FD7  79                 	db	121	;'y'
  2068  007FD8  65                 	db	101	;'e'
  2069  007FD9  72                 	db	114	;'r'
  2070  007FDA  00                 	db	0
  2071  007FDB                     STR_11:
  2072  007FDB  57                 	db	87	;'W'
  2073  007FDC  45                 	db	69	;'E'
  2074  007FDD  4C                 	db	76	;'L'
  2075  007FDE  43                 	db	67	;'C'
  2076  007FDF  4F                 	db	79	;'O'
  2077  007FE0  4D                 	db	77	;'M'
  2078  007FE1  45                 	db	69	;'E'
  2079  007FE2  00                 	db	0
  2080  007FE3                     STR_7:
  2081  007FE3  51                 	db	81	;'Q'
  2082  007FE4  55                 	db	85	;'U'
  2083  007FE5  49                 	db	73	;'I'
  2084  007FE6  54                 	db	84	;'T'
  2085  007FE7  54                 	db	84	;'T'
  2086  007FE8  45                 	db	69	;'E'
  2087  007FE9  52                 	db	82	;'R'
  2088  007FEA  00                 	db	0
  2089  007FEB                     STR_15:
  2090  007FEB  58                 	db	88	;'X'
  2091  007FEC  3A                 	db	58	;':'
  2092  007FED  20                 	db	32
  2093  007FEE  25                 	db	37
  2094  007FEF  64                 	db	100	;'d'
  2095  007FF0  00                 	db	0
  2096  007FF1                     STR_16:
  2097  007FF1  59                 	db	89	;'Y'
  2098  007FF2  3A                 	db	58	;':'
  2099  007FF3  20                 	db	32
  2100  007FF4  25                 	db	37
  2101  007FF5  64                 	db	100	;'d'
  2102  007FF6  00                 	db	0
  2103  007FF7                     STR_8:
  2104  007FF7  3C                 	db	60	;'<'
  2105  007FF8  2D                 	db	45
  2106  007FF9  2D                 	db	45
  2107  007FFA  00                 	db	0
  2108  007FFB                     STR_9:
  2109  007FFB  2D                 	db	45
  2110  007FFC  2D                 	db	45
  2111  007FFD  3E                 	db	62	;'>'
  2112  007FFE  00                 	db	0
  2113  007FFF  00                 	db	0	; dummy byte at the end
  2114  0000                     
  2115                           ; #config settings
  2116                           
  2117                           	psect	cinit
  2118  00624E                     __pcinit:
  2119                           	callstack 0
  2120  00624E                     start_initialization:
  2121                           	callstack 0
  2122  00624E                     __initialization:
  2123                           	callstack 0
  2124                           
  2125                           ; Clear objects allocated to BANK1 (239 bytes)
  2126  00624E  EE01  F000         	lfsr	0,__pbssBANK1
  2127  006252  0EEF               	movlw	239
  2128  006254                     clear_0:
  2129  006254  6AEE               	clrf	postinc0,c
  2130  006256  06E8               	decf	wreg,f,c
  2131  006258  E1FD               	bnz	clear_0
  2132                           
  2133                           ; Clear objects allocated to BANK0 (75 bytes)
  2134  00625A  EE00  F0B5         	lfsr	0,__pbssBANK0
  2135  00625E  0E4B               	movlw	75
  2136  006260                     clear_1:
  2137  006260  6AEE               	clrf	postinc0,c
  2138  006262  06E8               	decf	wreg,f,c
  2139  006264  E1FD               	bnz	clear_1
  2140                           
  2141                           ; Clear objects allocated to COMRAM (9 bytes)
  2142  006266  EE00  F045         	lfsr	0,__pbssCOMRAM
  2143  00626A  0E09               	movlw	9
  2144  00626C                     clear_2:
  2145  00626C  6AEE               	clrf	postinc0,c
  2146  00626E  06E8               	decf	wreg,f,c
  2147  006270  E1FD               	bnz	clear_2
  2148  006272                     end_of_initialization:
  2149                           	callstack 0
  2150  006272                     __end_of__initialization:
  2151                           	callstack 0
  2152  006272  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2153  006274  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2154  006276  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2155  006278  6EF8               	movwf	tblptru,c
  2156  00627A  0100               	movlb	0
  2157  00627C  EF1C  F032         	goto	_main	;jump to C main() function
  2158                           
  2159                           	psect	bssCOMRAM
  2160  000045                     __pbssCOMRAM:
  2161                           	callstack 0
  2162  000045                     _width:
  2163                           	callstack 0
  2164  000045                     	ds	2
  2165  000047                     _prec:
  2166                           	callstack 0
  2167  000047                     	ds	2
  2168  000049                     _flags:
  2169                           	callstack 0
  2170  000049                     	ds	2
  2171  00004B                     _i:
  2172                           	callstack 0
  2173  00004B                     	ds	2
  2174  00004D                     _gameStateMachine:
  2175                           	callstack 0
  2176  00004D                     	ds	1
  2177                           
  2178                           	psect	bssBANK0
  2179  0000B5                     __pbssBANK0:
  2180                           	callstack 0
  2181  0000B5                     _theXF:
  2182                           	callstack 0
  2183  0000B5                     	ds	38
  2184  0000DB                     _nout:
  2185                           	callstack 0
  2186  0000DB                     	ds	2
  2187  0000DD                     _displayState:
  2188                           	callstack 0
  2189  0000DD                     	ds	1
  2190  0000DE                     _touchScreenState:
  2191                           	callstack 0
  2192  0000DE                     	ds	1
  2193  0000DF                     _sleepState:
  2194                           	callstack 0
  2195  0000DF                     	ds	1
  2196  0000E0                     _dbuf:
  2197                           	callstack 0
  2198  0000E0                     	ds	32
  2199                           
  2200                           	psect	bssBANK1
  2201  000100                     __pbssBANK1:
  2202                           	callstack 0
  2203  000100                     _g1:
  2204                           	callstack 0
  2205  000100                     	ds	239
  2206                           
  2207                           	psect	cstackBANK1
  2208  0001EF                     __pcstackBANK1:
  2209                           	callstack 0
  2210  0001EF                     ??_touchScreenSM:
  2211                           
  2212                           ; 1 bytes @ 0x0
  2213  0001EF                     	ds	2
  2214  0001F1                     Factory_exec@ev:
  2215                           	callstack 0
  2216                           
  2217                           ; 1 bytes @ 0x2
  2218  0001F1                     	ds	1
  2219                           
  2220                           	psect	cstackBANK0
  2221  000060                     __pcstackBANK0:
  2222                           	callstack 0
  2223  000060                     _dtoa$4924:
  2224                           	callstack 0
  2225  000060                     LCD_Bitmap@bfOffBits:
  2226                           	callstack 0
  2227                           
  2228                           ; 4 bytes @ 0x0
  2229  000060                     	ds	2
  2230  000062                     dtoa@p:
  2231                           	callstack 0
  2232                           
  2233                           ; 2 bytes @ 0x2
  2234  000062                     	ds	2
  2235  000064                     LCD_Bitmap@endOfImage:
  2236                           	callstack 0
  2237  000064                     dtoa@w:
  2238                           	callstack 0
  2239                           
  2240                           ; 2 bytes @ 0x4
  2241  000064                     	ds	1
  2242  000065                     LCD_Bitmap@jumpCount:
  2243                           	callstack 0
  2244                           
  2245                           ; 2 bytes @ 0x5
  2246  000065                     	ds	1
  2247  000066                     dtoa@s:
  2248                           	callstack 0
  2249                           
  2250                           ; 2 bytes @ 0x6
  2251  000066                     	ds	1
  2252  000067                     LCD_Bitmap@curYPos:
  2253                           	callstack 0
  2254                           
  2255                           ; 2 bytes @ 0x7
  2256  000067                     	ds	1
  2257  000068                     dtoa@n:
  2258                           	callstack 0
  2259                           
  2260                           ; 8 bytes @ 0x8
  2261  000068                     	ds	1
  2262  000069                     LCD_Bitmap@colorTablePtr:
  2263                           	callstack 0
  2264                           
  2265                           ; 2 bytes @ 0x9
  2266  000069                     	ds	2
  2267  00006B                     LCD_Bitmap@biHeight:
  2268                           	callstack 0
  2269                           
  2270                           ; 2 bytes @ 0xB
  2271  00006B                     	ds	2
  2272  00006D                     LCD_Bitmap@color:
  2273                           	callstack 0
  2274                           
  2275                           ; 2 bytes @ 0xD
  2276  00006D                     	ds	2
  2277  00006F                     LCD_Bitmap@curXPos:
  2278                           	callstack 0
  2279                           
  2280                           ; 2 bytes @ 0xF
  2281  00006F                     	ds	1
  2282  000070                     dtoa@i:
  2283                           	callstack 0
  2284                           
  2285                           ; 2 bytes @ 0x10
  2286  000070                     	ds	1
  2287  000071                     LCD_Bitmap@strPtr:
  2288                           	callstack 0
  2289                           
  2290                           ; 2 bytes @ 0x11
  2291  000071                     	ds	1
  2292  000072                     ??_vfpfcnvrt:
  2293                           
  2294                           ; 1 bytes @ 0x12
  2295  000072                     	ds	1
  2296  000073                     LCD_Bitmap@newY:
  2297                           	callstack 0
  2298                           
  2299                           ; 2 bytes @ 0x13
  2300  000073                     	ds	1
  2301  000074                     vfpfcnvrt@ll:
  2302                           	callstack 0
  2303                           
  2304                           ; 8 bytes @ 0x14
  2305  000074                     	ds	1
  2306  000075                     LCD_Bitmap@pixelCount:
  2307                           	callstack 0
  2308                           
  2309                           ; 1 bytes @ 0x15
  2310  000075                     	ds	1
  2311  000076                     LCD_Bitmap@biWidth:
  2312                           	callstack 0
  2313                           
  2314                           ; 2 bytes @ 0x16
  2315  000076                     	ds	2
  2316  000078                     LCD_Bitmap@jumpColor:
  2317                           	callstack 0
  2318                           
  2319                           ; 2 bytes @ 0x18
  2320  000078                     	ds	2
  2321  00007A                     LCD_Bitmap@i:
  2322                           	callstack 0
  2323                           
  2324                           ; 2 bytes @ 0x1A
  2325  00007A                     	ds	2
  2326  00007C                     ?_vfprintf:
  2327                           	callstack 0
  2328  00007C                     LCD_ButtonDraw@button:
  2329                           	callstack 0
  2330  00007C                     vfprintf@fp:
  2331                           	callstack 0
  2332                           
  2333                           ; 2 bytes @ 0x1C
  2334  00007C                     	ds	2
  2335  00007E                     ??_LCD_ButtonDraw:
  2336  00007E                     vfprintf@fmt:
  2337                           	callstack 0
  2338                           
  2339                           ; 2 bytes @ 0x1E
  2340  00007E                     	ds	2
  2341  000080                     vfprintf@ap:
  2342                           	callstack 0
  2343                           
  2344                           ; 2 bytes @ 0x20
  2345  000080                     	ds	2
  2346  000082                     vfprintf@cfmt:
  2347                           	callstack 0
  2348                           
  2349                           ; 2 bytes @ 0x22
  2350  000082                     	ds	2
  2351  000084                     ?_sprintf:
  2352                           	callstack 0
  2353  000084                     sprintf@s:
  2354                           	callstack 0
  2355                           
  2356                           ; 2 bytes @ 0x24
  2357  000084                     	ds	2
  2358  000086                     sprintf@fmt:
  2359                           	callstack 0
  2360                           
  2361                           ; 2 bytes @ 0x26
  2362  000086                     	ds	4
  2363  00008A                     LCD_ButtonDraw@tempChar:
  2364                           	callstack 0
  2365  00008A                     sprintf@ap:
  2366                           	callstack 0
  2367                           
  2368                           ; 2 bytes @ 0x2A
  2369  00008A                     	ds	1
  2370  00008B                     LCD_ButtonDraw@width:
  2371                           	callstack 0
  2372                           
  2373                           ; 2 bytes @ 0x2B
  2374  00008B                     	ds	1
  2375  00008C                     sprintf@f:
  2376                           	callstack 0
  2377                           
  2378                           ; 6 bytes @ 0x2C
  2379  00008C                     	ds	1
  2380  00008D                     LCD_ButtonDraw@x1:
  2381                           	callstack 0
  2382                           
  2383                           ; 2 bytes @ 0x2D
  2384  00008D                     	ds	2
  2385  00008F                     LCD_ButtonDraw@x2:
  2386                           	callstack 0
  2387                           
  2388                           ; 2 bytes @ 0x2F
  2389  00008F                     	ds	2
  2390  000091                     LCD_ButtonDraw@y1:
  2391                           	callstack 0
  2392                           
  2393                           ; 2 bytes @ 0x31
  2394  000091                     	ds	1
  2395  000092                     Score_draw@s:
  2396                           	callstack 0
  2397  000092                     touchScreenController@g:
  2398                           	callstack 0
  2399                           
  2400                           ; 2 bytes @ 0x32
  2401  000092                     	ds	1
  2402  000093                     LCD_ButtonDraw@y2:
  2403                           	callstack 0
  2404                           
  2405                           ; 2 bytes @ 0x33
  2406  000093                     	ds	1
  2407  000094                     ??_touchScreenController:
  2408  000094                     Menu_inGameDraw@g:
  2409                           	callstack 0
  2410                           
  2411                           ; 2 bytes @ 0x34
  2412  000094                     	ds	1
  2413  000095                     LCD_ButtonDraw@xText:
  2414                           	callstack 0
  2415                           
  2416                           ; 2 bytes @ 0x35
  2417  000095                     	ds	2
  2418  000097                     LCD_ButtonDraw@yText:
  2419                           	callstack 0
  2420                           
  2421                           ; 2 bytes @ 0x37
  2422  000097                     	ds	2
  2423  000099                     LCD_ButtonDraw@i:
  2424                           	callstack 0
  2425                           
  2426                           ; 1 bytes @ 0x39
  2427  000099                     	ds	1
  2428  00009A                     LCD_ButtonDraw@bmpPtr:
  2429                           	callstack 0
  2430  00009A                     touchScreenController@s:
  2431                           	callstack 0
  2432                           
  2433                           ; 20 bytes @ 0x3A
  2434  00009A                     	ds	2
  2435  00009C                     Menu_welcomeDraw@g:
  2436                           	callstack 0
  2437  00009C                     Menu_parametersDraw@g:
  2438                           	callstack 0
  2439  00009C                     Menu_endGame@g:
  2440                           	callstack 0
  2441                           
  2442                           ; 2 bytes @ 0x3C
  2443  00009C                     	ds	2
  2444  00009E                     displayController@g:
  2445                           	callstack 0
  2446                           
  2447                           ; 2 bytes @ 0x3E
  2448  00009E                     	ds	2
  2449  0000A0                     displayController@ev:
  2450                           	callstack 0
  2451                           
  2452                           ; 1 bytes @ 0x40
  2453  0000A0                     	ds	1
  2454  0000A1                     ??_displayController:
  2455                           
  2456                           ; 1 bytes @ 0x41
  2457  0000A1                     	ds	2
  2458  0000A3                     displayInit@g:
  2459                           	callstack 0
  2460  0000A3                     displaySM@g:
  2461                           	callstack 0
  2462                           
  2463                           ; 2 bytes @ 0x43
  2464  0000A3                     	ds	2
  2465  0000A5                     ??_displaySM:
  2466  0000A5                     sleepInit@g:
  2467                           	callstack 0
  2468                           
  2469                           ; 2 bytes @ 0x45
  2470  0000A5                     	ds	2
  2471  0000A7                     ??_Factory_init:
  2472  0000A7                     displaySM@ev:
  2473                           	callstack 0
  2474                           
  2475                           ; 1 bytes @ 0x47
  2476  0000A7                     	ds	7
  2477  0000AE                     touchScreenController@valueY:
  2478                           	callstack 0
  2479                           
  2480                           ; 2 bytes @ 0x4E
  2481  0000AE                     	ds	2
  2482  0000B0                     touchScreenController@valueX:
  2483                           	callstack 0
  2484                           
  2485                           ; 2 bytes @ 0x50
  2486  0000B0                     	ds	2
  2487  0000B2                     touchScreenSM@g:
  2488                           	callstack 0
  2489                           
  2490                           ; 2 bytes @ 0x52
  2491  0000B2                     	ds	2
  2492  0000B4                     touchScreenSM@ev:
  2493                           	callstack 0
  2494                           
  2495                           ; 1 bytes @ 0x54
  2496  0000B4                     	ds	1
  2497                           
  2498                           	psect	cstackCOMRAM
  2499  000001                     __pcstackCOMRAM:
  2500                           	callstack 0
  2501  000001                     ?i2___wmul:
  2502                           	callstack 0
  2503  000001                     ?i2___awmod:
  2504                           	callstack 0
  2505  000001                     i2ENTERCRITICAL@inISR:
  2506                           	callstack 0
  2507  000001                     i2LEAVECRITICAL@inISR:
  2508                           	callstack 0
  2509  000001                     i2___wmul@multiplier:
  2510                           	callstack 0
  2511  000001                     i2___awmod@dividend:
  2512                           	callstack 0
  2513                           
  2514                           ; 2 bytes @ 0x0
  2515  000001                     	ds	1
  2516  000002                     XF_unscheduleTimer@inISR:
  2517                           	callstack 0
  2518  000002                     i2XF_scheduleTimer@tm:
  2519                           	callstack 0
  2520                           
  2521                           ; 2 bytes @ 0x1
  2522  000002                     	ds	1
  2523  000003                     XF_unscheduleTimer@id:
  2524                           	callstack 0
  2525  000003                     i2___wmul@multiplicand:
  2526                           	callstack 0
  2527  000003                     i2___awmod@divisor:
  2528                           	callstack 0
  2529                           
  2530                           ; 2 bytes @ 0x2
  2531  000003                     	ds	1
  2532  000004                     i2XF_scheduleTimer@ev:
  2533                           	callstack 0
  2534                           
  2535                           ; 1 bytes @ 0x3
  2536  000004                     	ds	1
  2537  000005                     i2XF_scheduleTimer@inISR:
  2538                           	callstack 0
  2539  000005                     i2___awmod@counter:
  2540                           	callstack 0
  2541  000005                     i2___wmul@product:
  2542                           	callstack 0
  2543                           
  2544                           ; 2 bytes @ 0x4
  2545  000005                     	ds	1
  2546  000006                     i2XF_scheduleTimer@i:
  2547                           	callstack 0
  2548  000006                     i2___awmod@sign:
  2549                           	callstack 0
  2550                           
  2551                           ; 1 bytes @ 0x5
  2552  000006                     	ds	1
  2553  000007                     i2XF_pushEvent@inISR:
  2554                           	callstack 0
  2555                           
  2556                           ; 1 bytes @ 0x6
  2557  000007                     	ds	1
  2558  000008                     i2XF_pushEvent@ev:
  2559                           	callstack 0
  2560                           
  2561                           ; 1 bytes @ 0x7
  2562  000008                     	ds	1
  2563  000009                     i2XF_pushEvent@temp:
  2564                           	callstack 0
  2565                           
  2566                           ; 1 bytes @ 0x8
  2567  000009                     	ds	1
  2568  00000A                     
  2569                           ; 1 bytes @ 0x9
  2570  00000A                     	ds	2
  2571  00000C                     XF_decrementAndQueueTimers@i:
  2572                           	callstack 0
  2573                           
  2574                           ; 2 bytes @ 0xB
  2575  00000C                     	ds	2
  2576  00000E                     ??_isr:
  2577                           
  2578                           ; 1 bytes @ 0xD
  2579  00000E                     	ds	4
  2580  000012                     ??_LCD_Lowlevel_Init:
  2581  000012                     ??_sleepController:
  2582  000012                     ?_LCD_Read:
  2583                           	callstack 0
  2584  000012                     ?_strlen:
  2585                           	callstack 0
  2586  000012                     ?_RGB2LCD:
  2587                           	callstack 0
  2588  000012                     ?___awdiv:
  2589                           	callstack 0
  2590  000012                     ?___awmod:
  2591                           	callstack 0
  2592  000012                     ?___lwmod:
  2593                           	callstack 0
  2594  000012                     ?___xxtofl:
  2595                           	callstack 0
  2596  000012                     ?___aodiv:
  2597                           	callstack 0
  2598  000012                     ?___aomod:
  2599                           	callstack 0
  2600  000012                     configMeasure@channel:
  2601                           	callstack 0
  2602  000012                     ENTERCRITICAL@inISR:
  2603                           	callstack 0
  2604  000012                     LEAVECRITICAL@inISR:
  2605                           	callstack 0
  2606  000012                     Ball_init@b:
  2607                           	callstack 0
  2608  000012                     Ball_Update@b:
  2609                           	callstack 0
  2610  000012                     Paddle_init@p:
  2611                           	callstack 0
  2612  000012                     Paddle_addX@p:
  2613                           	callstack 0
  2614  000012                     Score_init@s:
  2615                           	callstack 0
  2616  000012                     GameParameters_setBackLight@s:
  2617                           	callstack 0
  2618  000012                     GameParameters_resetPos@s:
  2619                           	callstack 0
  2620  000012                     GameParameters_setX@s:
  2621                           	callstack 0
  2622  000012                     GameParameters_setY@s:
  2623                           	callstack 0
  2624  000012                     LCD_Fill@color:
  2625                           	callstack 0
  2626  000012                     LCD_SliderCreate@posX:
  2627                           	callstack 0
  2628  000012                     LCD_ButtonCreate@posX:
  2629                           	callstack 0
  2630  000012                     LCD_InButton@button:
  2631                           	callstack 0
  2632  000012                     LCD_InSlider@slider:
  2633                           	callstack 0
  2634  000012                     LCD_DrawRect@posX1:
  2635                           	callstack 0
  2636  000012                     RGB2LCD@colorTableEntry:
  2637                           	callstack 0
  2638  000012                     LCD_Read@posX:
  2639                           	callstack 0
  2640  000012                     ___awdiv@dividend:
  2641                           	callstack 0
  2642  000012                     ___awmod@dividend:
  2643                           	callstack 0
  2644  000012                     ___lwmod@dividend:
  2645                           	callstack 0
  2646  000012                     fputc@c:
  2647                           	callstack 0
  2648  000012                     strlen@s:
  2649                           	callstack 0
  2650  000012                     ___xxtofl@val:
  2651                           	callstack 0
  2652  000012                     ___aodiv@dividend:
  2653                           	callstack 0
  2654  000012                     ___aomod@dividend:
  2655                           	callstack 0
  2656                           
  2657                           ; 8 bytes @ 0x11
  2658  000012                     	ds	1
  2659  000013                     XF_scheduleTimer@tm:
  2660                           	callstack 0
  2661  000013                     LCD_Lowlevel_Init@i:
  2662                           	callstack 0
  2663                           
  2664                           ; 4 bytes @ 0x12
  2665  000013                     	ds	1
  2666  000014                     ??_Ball_Update:
  2667  000014                     ??_RGB2LCD:
  2668  000014                     LCD_Fill@colorH:
  2669                           	callstack 0
  2670  000014                     Paddle_init@team:
  2671                           	callstack 0
  2672  000014                     Paddle_addX@value:
  2673                           	callstack 0
  2674  000014                     GameParameters_setBackLight@value:
  2675                           	callstack 0
  2676  000014                     GameParameters_setX@value:
  2677                           	callstack 0
  2678  000014                     GameParameters_setY@value:
  2679                           	callstack 0
  2680  000014                     LCD_SliderCreate@posY:
  2681                           	callstack 0
  2682  000014                     LCD_ButtonCreate@posY:
  2683                           	callstack 0
  2684  000014                     LCD_InButton@posX:
  2685                           	callstack 0
  2686  000014                     LCD_InSlider@posX:
  2687                           	callstack 0
  2688  000014                     LCD_DrawRect@posY1:
  2689                           	callstack 0
  2690  000014                     LCD_Read@posY:
  2691                           	callstack 0
  2692  000014                     ___awdiv@divisor:
  2693                           	callstack 0
  2694  000014                     ___awmod@divisor:
  2695                           	callstack 0
  2696  000014                     ___lwmod@divisor:
  2697                           	callstack 0
  2698  000014                     fputc@fp:
  2699                           	callstack 0
  2700  000014                     strlen@a:
  2701                           	callstack 0
  2702                           
  2703                           ; 2 bytes @ 0x13
  2704  000014                     	ds	1
  2705  000015                     LCD_Fill@colorL:
  2706                           	callstack 0
  2707  000015                     XF_scheduleTimer@ev:
  2708                           	callstack 0
  2709                           
  2710                           ; 1 bytes @ 0x14
  2711  000015                     	ds	1
  2712  000016                     ??_LCD_Read:
  2713  000016                     ??_fputc:
  2714  000016                     ??___xxtofl:
  2715  000016                     XF_scheduleTimer@inISR:
  2716                           	callstack 0
  2717  000016                     ___awdiv@counter:
  2718                           	callstack 0
  2719  000016                     ___awmod@counter:
  2720                           	callstack 0
  2721  000016                     ___lwmod@counter:
  2722                           	callstack 0
  2723  000016                     Paddle_addX@add:
  2724                           	callstack 0
  2725  000016                     LCD_Fill@column:
  2726                           	callstack 0
  2727  000016                     LCD_SliderCreate@width:
  2728                           	callstack 0
  2729  000016                     LCD_ButtonCreate@width:
  2730                           	callstack 0
  2731  000016                     LCD_InButton@posY:
  2732                           	callstack 0
  2733  000016                     LCD_InSlider@posY:
  2734                           	callstack 0
  2735  000016                     LCD_DrawRect@posX2:
  2736                           	callstack 0
  2737                           
  2738                           ; 2 bytes @ 0x15
  2739  000016                     	ds	1
  2740  000017                     ??_LCD_Init:
  2741  000017                     XF_scheduleTimer@i:
  2742                           	callstack 0
  2743  000017                     ___awdiv@sign:
  2744                           	callstack 0
  2745  000017                     ___awmod@sign:
  2746                           	callstack 0
  2747                           
  2748                           ; 1 bytes @ 0x16
  2749  000017                     	ds	1
  2750  000018                     ??_Paddle_addX:
  2751  000018                     ??_LCD_InButton:
  2752  000018                     ??_LCD_InSlider:
  2753  000018                     LCD_Init@i:
  2754                           	callstack 0
  2755  000018                     XF_pushEvent@inISR:
  2756                           	callstack 0
  2757  000018                     XF_popEvent@ev:
  2758                           	callstack 0
  2759  000018                     LCD_Fill@page:
  2760                           	callstack 0
  2761  000018                     LCD_SliderCreate@height:
  2762                           	callstack 0
  2763  000018                     LCD_ButtonCreate@height:
  2764                           	callstack 0
  2765  000018                     LCD_DrawRect@posY2:
  2766                           	callstack 0
  2767  000018                     RGB2LCD@red:
  2768                           	callstack 0
  2769  000018                     LCD_Read@color:
  2770                           	callstack 0
  2771  000018                     backlightController@g:
  2772                           	callstack 0
  2773  000018                     ___awdiv@quotient:
  2774                           	callstack 0
  2775                           
  2776                           ; 2 bytes @ 0x17
  2777  000018                     	ds	1
  2778  000019                     XF_pushEvent@ev:
  2779                           	callstack 0
  2780  000019                     XF_popEvent@inISR:
  2781                           	callstack 0
  2782                           
  2783                           ; 1 bytes @ 0x18
  2784  000019                     	ds	1
  2785  00001A                     ?___wmul:
  2786                           	callstack 0
  2787  00001A                     LCD_DrawRect@fill:
  2788                           	callstack 0
  2789  00001A                     XF_pushEvent@temp:
  2790                           	callstack 0
  2791  00001A                     ___xxtofl@sign:
  2792                           	callstack 0
  2793  00001A                     LCD_SliderCreate@sldColor:
  2794                           	callstack 0
  2795  00001A                     LCD_ButtonCreate@txtColor:
  2796                           	callstack 0
  2797  00001A                     RGB2LCD@green:
  2798                           	callstack 0
  2799  00001A                     LCD_Read@temp16:
  2800                           	callstack 0
  2801  00001A                     ___wmul@multiplier:
  2802                           	callstack 0
  2803  00001A                     ___aodiv@divisor:
  2804                           	callstack 0
  2805  00001A                     ___aomod@divisor:
  2806                           	callstack 0
  2807                           
  2808                           ; 8 bytes @ 0x19
  2809  00001A                     	ds	1
  2810  00001B                     ___xxtofl@exp:
  2811                           	callstack 0
  2812  00001B                     LCD_DrawRect@color:
  2813                           	callstack 0
  2814  00001B                     checkCollision@g:
  2815                           	callstack 0
  2816  00001B                     fputs@s:
  2817                           	callstack 0
  2818                           
  2819                           ; 2 bytes @ 0x1A
  2820  00001B                     	ds	1
  2821  00001C                     LCD_SliderCreate@bgColor:
  2822                           	callstack 0
  2823  00001C                     LCD_ButtonCreate@bgColor:
  2824                           	callstack 0
  2825  00001C                     RGB2LCD@blue:
  2826                           	callstack 0
  2827  00001C                     moovePaddle@g:
  2828                           	callstack 0
  2829  00001C                     ___wmul@multiplicand:
  2830                           	callstack 0
  2831  00001C                     ___xxtofl@arg:
  2832                           	callstack 0
  2833                           
  2834                           ; 4 bytes @ 0x1B
  2835  00001C                     	ds	1
  2836  00001D                     ??_checkCollision:
  2837  00001D                     LCD_DrawRect@j:
  2838                           	callstack 0
  2839  00001D                     fputs@fp:
  2840                           	callstack 0
  2841                           
  2842                           ; 2 bytes @ 0x1C
  2843  00001D                     	ds	1
  2844  00001E                     LCD_SliderCreate@borderColor:
  2845                           	callstack 0
  2846  00001E                     LCD_ButtonCreate@textOrBmp:
  2847                           	callstack 0
  2848  00001E                     RGB2LCD@color:
  2849                           	callstack 0
  2850  00001E                     ___wmul@product:
  2851                           	callstack 0
  2852                           
  2853                           ; 2 bytes @ 0x1D
  2854  00001E                     	ds	1
  2855  00001F                     fputs@c:
  2856                           	callstack 0
  2857  00001F                     LCD_DrawRect@temp:
  2858                           	callstack 0
  2859                           
  2860                           ; 2 bytes @ 0x1E
  2861  00001F                     	ds	1
  2862  000020                     ?___lwdiv:
  2863                           	callstack 0
  2864  000020                     ?___fldiv:
  2865                           	callstack 0
  2866  000020                     LCD_SliderCreate@cursorWidth:
  2867                           	callstack 0
  2868  000020                     LCD_ButtonCreate@font:
  2869                           	callstack 0
  2870  000020                     LCD_DrawText@msg:
  2871                           	callstack 0
  2872  000020                     XF_init@i:
  2873                           	callstack 0
  2874  000020                     ___lwdiv@dividend:
  2875                           	callstack 0
  2876  000020                     fputs@i:
  2877                           	callstack 0
  2878  000020                     ___fldiv@b:
  2879                           	callstack 0
  2880                           
  2881                           ; 4 bytes @ 0x1F
  2882  000020                     	ds	1
  2883  000021                     LCD_DrawRect@colorH:
  2884                           	callstack 0
  2885                           
  2886                           ; 1 bytes @ 0x20
  2887  000021                     	ds	1
  2888  000022                     ?_pad:
  2889                           	callstack 0
  2890  000022                     LCD_DrawRect@colorL:
  2891                           	callstack 0
  2892  000022                     ___aodiv@counter:
  2893                           	callstack 0
  2894  000022                     ___aomod@counter:
  2895                           	callstack 0
  2896  000022                     LCD_SliderCreate@steps:
  2897                           	callstack 0
  2898  000022                     LCD_ButtonCreate@fpPress:
  2899                           	callstack 0
  2900  000022                     LCD_DrawText@font:
  2901                           	callstack 0
  2902  000022                     ___lwdiv@divisor:
  2903                           	callstack 0
  2904  000022                     pad@fp:
  2905                           	callstack 0
  2906                           
  2907                           ; 2 bytes @ 0x21
  2908  000022                     	ds	1
  2909  000023                     ___aodiv@sign:
  2910                           	callstack 0
  2911  000023                     ___aomod@sign:
  2912                           	callstack 0
  2913  000023                     LCD_DrawRect@i:
  2914                           	callstack 0
  2915                           
  2916                           ; 2 bytes @ 0x22
  2917  000023                     	ds	1
  2918  000024                     ?_abs:
  2919                           	callstack 0
  2920  000024                     LCD_DrawText@align:
  2921                           	callstack 0
  2922  000024                     ___lwdiv@counter:
  2923                           	callstack 0
  2924  000024                     LCD_SliderCreate@fpPress:
  2925                           	callstack 0
  2926  000024                     LCD_ButtonCreate@fpReleased:
  2927                           	callstack 0
  2928  000024                     pad@buf:
  2929                           	callstack 0
  2930  000024                     abs@a:
  2931                           	callstack 0
  2932  000024                     ___fldiv@a:
  2933                           	callstack 0
  2934  000024                     ___aodiv@quotient:
  2935                           	callstack 0
  2936                           
  2937                           ; 8 bytes @ 0x23
  2938  000024                     	ds	1
  2939  000025                     Ball_draw@b:
  2940                           	callstack 0
  2941  000025                     Paddle_draw@p:
  2942                           	callstack 0
  2943  000025                     LCD_ButtonUpdate@button:
  2944                           	callstack 0
  2945  000025                     LCD_DrawText@posX:
  2946                           	callstack 0
  2947  000025                     mooveBall@g:
  2948                           	callstack 0
  2949  000025                     ___lwdiv@quotient:
  2950                           	callstack 0
  2951                           
  2952                           ; 2 bytes @ 0x24
  2953  000025                     	ds	1
  2954  000026                     ??_abs:
  2955  000026                     LCD_SliderCreate@slider:
  2956                           	callstack 0
  2957  000026                     LCD_ButtonCreate@fpOut:
  2958                           	callstack 0
  2959  000026                     pad@p:
  2960                           	callstack 0
  2961                           
  2962                           ; 2 bytes @ 0x25
  2963  000026                     	ds	1
  2964  000027                     ??_Ball_draw:
  2965  000027                     ??_Paddle_draw:
  2966  000027                     ??_LCD_ButtonUpdate:
  2967  000027                     LCD_SliderUpdate@slider:
  2968                           	callstack 0
  2969  000027                     LCD_DrawText@posY:
  2970                           	callstack 0
  2971  000027                     LCD_Bitmap@bmpPtr:
  2972                           	callstack 0
  2973                           
  2974                           ; 2 bytes @ 0x26
  2975  000027                     	ds	1
  2976  000028                     ??___fldiv:
  2977  000028                     ??_pad:
  2978  000028                     LCD_ButtonCreate@button:
  2979                           	callstack 0
  2980                           
  2981                           ; 2 bytes @ 0x27
  2982  000028                     	ds	1
  2983  000029                     ??_LCD_SliderUpdate:
  2984  000029                     LCD_DrawText@color:
  2985                           	callstack 0
  2986  000029                     LCD_Bitmap@posX:
  2987                           	callstack 0
  2988  000029                     pad@i:
  2989                           	callstack 0
  2990                           
  2991                           ; 2 bytes @ 0x28
  2992  000029                     	ds	1
  2993  00002A                     LCD_ButtonCreate@index:
  2994                           	callstack 0
  2995                           
  2996                           ; 1 bytes @ 0x29
  2997  00002A                     	ds	1
  2998  00002B                     GameParameters_init@s:
  2999                           	callstack 0
  3000  00002B                     LCD_ButtonUpdate@colorOut:
  3001                           	callstack 0
  3002  00002B                     LCD_DrawText@bg_color:
  3003                           	callstack 0
  3004  00002B                     LCD_Bitmap@posY:
  3005                           	callstack 0
  3006  00002B                     pad@w:
  3007                           	callstack 0
  3008                           
  3009                           ; 2 bytes @ 0x2A
  3010  00002B                     	ds	1
  3011  00002C                     ___fldiv@rem:
  3012                           	callstack 0
  3013                           
  3014                           ; 4 bytes @ 0x2B
  3015  00002C                     	ds	1
  3016  00002D                     ??_LCD_DrawText:
  3017  00002D                     ??_LCD_Bitmap:
  3018  00002D                     ?_dtoa:
  3019                           	callstack 0
  3020  00002D                     LCD_ButtonUpdate@colorIn:
  3021                           	callstack 0
  3022  00002D                     dtoa@fp:
  3023                           	callstack 0
  3024                           
  3025                           ; 2 bytes @ 0x2C
  3026  00002D                     	ds	2
  3027  00002F                     LCD_SliderUpdate@x2:
  3028                           	callstack 0
  3029  00002F                     LCD_ButtonUpdate@x2:
  3030                           	callstack 0
  3031  00002F                     dtoa@d:
  3032                           	callstack 0
  3033                           
  3034                           ; 8 bytes @ 0x2E
  3035  00002F                     	ds	1
  3036  000030                     ___fldiv@sign:
  3037                           	callstack 0
  3038                           
  3039                           ; 1 bytes @ 0x2F
  3040  000030                     	ds	1
  3041  000031                     LCD_SliderUpdate@y1:
  3042                           	callstack 0
  3043  000031                     LCD_ButtonUpdate@y1:
  3044                           	callstack 0
  3045  000031                     ___fldiv@new_exp:
  3046                           	callstack 0
  3047                           
  3048                           ; 2 bytes @ 0x30
  3049  000031                     	ds	2
  3050  000033                     LCD_SliderUpdate@y2:
  3051                           	callstack 0
  3052  000033                     LCD_ButtonUpdate@x1:
  3053                           	callstack 0
  3054  000033                     LCD_DrawText@offset:
  3055                           	callstack 0
  3056  000033                     ___fldiv@grs:
  3057                           	callstack 0
  3058                           
  3059                           ; 4 bytes @ 0x32
  3060  000033                     	ds	2
  3061  000035                     LCD_SliderUpdate@x1:
  3062                           	callstack 0
  3063  000035                     LCD_ButtonUpdate@y2:
  3064                           	callstack 0
  3065  000035                     LCD_DrawText@yOffset:
  3066                           	callstack 0
  3067                           
  3068                           ; 2 bytes @ 0x34
  3069  000035                     	ds	2
  3070  000037                     ??_dtoa:
  3071  000037                     LCD_DrawText@fontByte:
  3072                           	callstack 0
  3073  000037                     ___fldiv@bexp:
  3074                           	callstack 0
  3075  000037                     LCD_SliderDraw@slider:
  3076                           	callstack 0
  3077  000037                     gameControllerController@g:
  3078                           	callstack 0
  3079                           
  3080                           ; 2 bytes @ 0x36
  3081  000037                     	ds	1
  3082  000038                     LCD_DrawText@fontPixel:
  3083                           	callstack 0
  3084  000038                     ___fldiv@aexp:
  3085                           	callstack 0
  3086                           
  3087                           ; 1 bytes @ 0x37
  3088  000038                     	ds	1
  3089  000039                     ??_LCD_SliderDraw:
  3090  000039                     ?___fltol:
  3091                           	callstack 0
  3092  000039                     gameControllerController@ev:
  3093                           	callstack 0
  3094  000039                     LCD_DrawText@posYEnd:
  3095                           	callstack 0
  3096  000039                     ___fltol@f1:
  3097                           	callstack 0
  3098                           
  3099                           ; 4 bytes @ 0x38
  3100  000039                     	ds	1
  3101  00003A                     ??_gameControllerController:
  3102                           
  3103                           ; 1 bytes @ 0x39
  3104  00003A                     	ds	1
  3105  00003B                     LCD_DrawText@posXEnd:
  3106                           	callstack 0
  3107                           
  3108                           ; 2 bytes @ 0x3A
  3109  00003B                     	ds	1
  3110  00003C                     gameControllerInit@g:
  3111                           	callstack 0
  3112  00003C                     gameControllerSM@g:
  3113                           	callstack 0
  3114                           
  3115                           ; 2 bytes @ 0x3B
  3116  00003C                     	ds	1
  3117  00003D                     ??___fltol:
  3118  00003D                     LCD_DrawText@y:
  3119                           	callstack 0
  3120  00003D                     LCD_SliderDraw@x1:
  3121                           	callstack 0
  3122                           
  3123                           ; 2 bytes @ 0x3C
  3124  00003D                     	ds	1
  3125  00003E                     ??_gameControllerSM:
  3126  00003E                     LCD_DrawText@i:
  3127                           	callstack 0
  3128                           
  3129                           ; 1 bytes @ 0x3D
  3130  00003E                     	ds	1
  3131  00003F                     ?_vfpfcnvrt:
  3132                           	callstack 0
  3133  00003F                     LCD_DrawText@tempChar:
  3134                           	callstack 0
  3135  00003F                     LCD_SliderDraw@x2:
  3136                           	callstack 0
  3137  00003F                     vfpfcnvrt@fp:
  3138                           	callstack 0
  3139                           
  3140                           ; 2 bytes @ 0x3E
  3141  00003F                     	ds	1
  3142  000040                     LCD_DrawText@x:
  3143                           	callstack 0
  3144  000040                     gameControllerSM@ev:
  3145                           	callstack 0
  3146                           
  3147                           ; 1 bytes @ 0x3F
  3148  000040                     	ds	1
  3149  000041                     LCD_DrawText@width:
  3150                           	callstack 0
  3151  000041                     ___fltol@sign1:
  3152                           	callstack 0
  3153  000041                     LCD_SliderDraw@y1:
  3154                           	callstack 0
  3155  000041                     vfpfcnvrt@fmt:
  3156                           	callstack 0
  3157                           
  3158                           ; 2 bytes @ 0x40
  3159  000041                     	ds	1
  3160  000042                     ___fltol@exp1:
  3161                           	callstack 0
  3162                           
  3163                           ; 1 bytes @ 0x41
  3164  000042                     	ds	1
  3165  000043                     LCD_SliderDraw@y2:
  3166                           	callstack 0
  3167  000043                     vfpfcnvrt@ap:
  3168                           	callstack 0
  3169                           
  3170                           ; 2 bytes @ 0x42
  3171  000043                     	ds	2
  3172  000045                     
  3173                           ; 1 bytes @ 0x44
  3174 ;;
  3175 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3176 ;;
  3177 ;; *************** function _main *****************
  3178 ;; Defined at:
  3179 ;;		line 57 in file "main.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3193 ;;      Params:         0       0       0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0
  3196 ;;      Totals:         0       0       0       0       0       0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels required when called: 17
  3199 ;; This function calls:
  3200 ;;		_Factory_exec
  3201 ;;		_Factory_init
  3202 ;; This function is called by:
  3203 ;;		Startup code after reset
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text0
  3208  006438                     __ptext0:
  3209                           	callstack 0
  3210  006438                     _main:
  3211                           	callstack 14
  3212  006438                     
  3213                           ;main.c: 59:     Factory_init();
  3214  006438  EC68  F02A         	call	_Factory_init	;wreg free
  3215  00643C                     l805:
  3216                           
  3217                           ;main.c: 61:     {;main.c: 62:         Factory_exec();
  3218  00643C  ECBC  F02F         	call	_Factory_exec	;wreg free
  3219  006440  EF1E  F032         	goto	l805
  3220  006444  EF78  F000         	goto	start
  3221  006448                     __end_of_main:
  3222                           	callstack 0
  3223                           
  3224 ;; *************** function _Factory_init *****************
  3225 ;; Defined at:
  3226 ;;		line 11 in file "class/factory.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3240 ;;      Params:         0       0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0
  3242 ;;      Temps:          0       2       0       0       0       0       0
  3243 ;;      Totals:         0       2       0       0       0       0       0
  3244 ;;Total ram usage:        2 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 16
  3247 ;; This function calls:
  3248 ;;		_GameParameters_init
  3249 ;;		_LCD_DrawText
  3250 ;;		_LCD_Fill
  3251 ;;		_LCD_Init
  3252 ;;		_XF_init
  3253 ;;		_sleepInit
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text1
  3260  0054D0                     __ptext1:
  3261                           	callstack 0
  3262  0054D0                     _Factory_init:
  3263                           	callstack 14
  3264  0054D0                     
  3265                           ;class/factory.c: 14:     PLLEN = 1;
  3266  0054D0  8C9B               	bsf	3995,6,c	;volatile
  3267  0054D2                     
  3268                           ;class/factory.c: 15:     OSCCON = 0b01110000;
  3269  0054D2  0E70               	movlw	112
  3270  0054D4  6ED3               	movwf	211,c	;volatile
  3271  0054D6                     
  3272                           ;class/factory.c: 16:     _delay((unsigned long)((100)*(64000000L/4000.0)));
  3273  0054D6  0E09               	movlw	9
  3274  0054D8  0100               	movlb	0	; () banked
  3275  0054DA  6FA8               	movwf	(??_Factory_init+1)& (0+255),b
  3276  0054DC  0E1E               	movlw	30
  3277  0054DE  6FA7               	movwf	??_Factory_init& (0+255),b
  3278  0054E0  0EE4               	movlw	228
  3279  0054E2                     u7987:
  3280  0054E2  2EE8               	decfsz	wreg,f,c
  3281  0054E4  D7FE               	bra	u7987
  3282  0054E6  2FA7               	decfsz	??_Factory_init& (0+255),f,b
  3283  0054E8  D7FC               	bra	u7987
  3284  0054EA  2FA8               	decfsz	(??_Factory_init+1)& (0+255),f,b
  3285  0054EC  D7FA               	bra	u7987
  3286  0054EE  F000               	nop	
  3287  0054F0                     
  3288                           ;class/factory.c: 18:     LCD_Init();
  3289  0054F0  ECA8  F019         	call	_LCD_Init	;wreg free
  3290  0054F4                     
  3291                           ;class/factory.c: 19:     LCD_Fill(0b0000000000011111);
  3292  0054F4  0E00               	movlw	0
  3293  0054F6  6E13               	movwf	(LCD_Fill@color+1)^0,c
  3294  0054F8  0E1F               	movlw	31
  3295  0054FA  6E12               	movwf	LCD_Fill@color^0,c
  3296  0054FC  ECA8  F029         	call	_LCD_Fill	;wreg free
  3297  005500                     
  3298                           ;class/factory.c: 20:     LCD_DrawText("MenuStart",&arialNarrow_12ptFontInfo,A_CENTER,50
      +                          ,50,0b0000000000000000,0b1111111111111111);
  3299  005500  0EB6               	movlw	low STR_1
  3300  005502  6E20               	movwf	LCD_DrawText@msg^0,c
  3301  005504  0E7F               	movlw	high STR_1
  3302  005506  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  3303  005508  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  3304  00550A  6E22               	movwf	LCD_DrawText@font^0,c
  3305  00550C  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  3306  00550E  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  3307  005510  0E02               	movlw	2
  3308  005512  6E24               	movwf	LCD_DrawText@align^0,c
  3309  005514  0E00               	movlw	0
  3310  005516  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  3311  005518  0E32               	movlw	50
  3312  00551A  6E25               	movwf	LCD_DrawText@posX^0,c
  3313  00551C  0E00               	movlw	0
  3314  00551E  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  3315  005520  0E32               	movlw	50
  3316  005522  6E27               	movwf	LCD_DrawText@posY^0,c
  3317  005524  0E00               	movlw	0
  3318  005526  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  3319  005528  0E00               	movlw	0
  3320  00552A  6E29               	movwf	LCD_DrawText@color^0,c
  3321  00552C  0EFF               	movlw	255
  3322  00552E  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  3323  005530  682B               	setf	LCD_DrawText@bg_color^0,c
  3324  005532  EC0B  F00F         	call	_LCD_DrawText	;wreg free
  3325  005536                     
  3326                           ;class/factory.c: 25:     GIE=1;
  3327  005536  8EF2               	bsf	4082,7,c	;volatile
  3328  005538                     
  3329                           ;class/factory.c: 26:     INT1IE=0;
  3330  005538  96F0               	bcf	4080,3,c	;volatile
  3331  00553A                     
  3332                           ;class/factory.c: 27:     INTEDG1=0;
  3333  00553A  9AF1               	bcf	4081,5,c	;volatile
  3334  00553C                     
  3335                           ;class/factory.c: 28:     TRISC0=0;
  3336  00553C  9094               	bcf	3988,0,c	;volatile
  3337  00553E                     
  3338                           ;class/factory.c: 29:     LATC0=1;
  3339  00553E  808B               	bsf	3979,0,c	;volatile
  3340  005540                     
  3341                           ;class/factory.c: 32:     T0CON=0b10000110;
  3342  005540  0E86               	movlw	134
  3343  005542  6ED5               	movwf	213,c	;volatile
  3344  005544                     
  3345                           ;class/factory.c: 33:     TMR0H=0xFB;
  3346  005544  0EFB               	movlw	251
  3347  005546  6ED7               	movwf	215,c	;volatile
  3348  005548                     
  3349                           ;class/factory.c: 34:     TMR0L=0x1D;
  3350  005548  0E1D               	movlw	29
  3351  00554A  6ED6               	movwf	214,c	;volatile
  3352  00554C                     
  3353                           ;class/factory.c: 35:     TMR0IE=1;
  3354  00554C  8AF2               	bsf	4082,5,c	;volatile
  3355  00554E                     
  3356                           ;class/factory.c: 38:     TRISC1=0;
  3357  00554E  9294               	bcf	3988,1,c	;volatile
  3358  005550                     
  3359                           ;class/factory.c: 39:     PR2=255;
  3360  005550  68BB               	setf	187,c	;volatile
  3361  005552                     
  3362                           ;class/factory.c: 40:     CCP2CONbits.CCP2M = 0xC;
  3363  005552  5066               	movf	102,w,c	;volatile
  3364  005554  0BF0               	andlw	-16
  3365  005556  090C               	iorlw	12
  3366  005558  6E66               	movwf	102,c	;volatile
  3367  00555A                     
  3368                           ;class/factory.c: 41:     CCPR2L = 255;
  3369  00555A  6867               	setf	103,c	;volatile
  3370  00555C                     
  3371                           ;class/factory.c: 42:     CCP2CONbits.DC2B = 0;
  3372  00555C  0ECF               	movlw	-49
  3373  00555E  1666               	andwf	102,f,c	;volatile
  3374  005560                     
  3375                           ;class/factory.c: 43:     TMR2IF=0;
  3376  005560  929E               	bcf	3998,1,c	;volatile
  3377  005562                     
  3378                           ;class/factory.c: 44:     T2CONbits.T2CKPS0 = 1;
  3379  005562  80BA               	bsf	186,0,c	;volatile
  3380  005564                     
  3381                           ;class/factory.c: 45:     T2CONbits.T2CKPS1 = 0;
  3382  005564  92BA               	bcf	186,1,c	;volatile
  3383  005566                     
  3384                           ;class/factory.c: 46:     T2CONbits.TMR2ON = 1;
  3385  005566  84BA               	bsf	186,2,c	;volatile
  3386  005568                     
  3387                           ;class/factory.c: 48:     ADCON2=0b10100110;
  3388  005568  0EA6               	movlw	166
  3389  00556A  6EC0               	movwf	192,c	;volatile
  3390  00556C                     
  3391                           ;class/factory.c: 51:     XF_init();
  3392  00556C  ECC6  F02A         	call	_XF_init	;wreg free
  3393  005570                     
  3394                           ;class/factory.c: 52:     GameParameters_init(&g1);
  3395  005570  0E00               	movlw	low _g1
  3396  005572  6E2B               	movwf	GameParameters_init@s^0,c
  3397  005574  0E01               	movlw	high _g1
  3398  005576  6E2C               	movwf	(GameParameters_init@s+1)^0,c
  3399  005578  EC30  F011         	call	_GameParameters_init	;wreg free
  3400  00557C                     
  3401                           ;class/factory.c: 53:     sleepInit(&g1);
  3402  00557C  0E00               	movlw	low _g1
  3403  00557E  0100               	movlb	0	; () banked
  3404  005580  6FA5               	movwf	sleepInit@g& (0+255),b
  3405  005582  0E01               	movlw	high _g1
  3406  005584  6FA6               	movwf	(sleepInit@g+1)& (0+255),b
  3407  005586  EC55  F031         	call	_sleepInit	;wreg free
  3408  00558A  0012               	return		;funcret
  3409  00558C                     __end_of_Factory_init:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _sleepInit *****************
  3413 ;; Defined at:
  3414 ;;		line 11 in file "stateMachine/sleepSM.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  g               2   69[BANK0 ] PTR struct GameParameter
  3417 ;;		 -> g1(239), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3429 ;;      Params:         0       2       0       0       0       0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0
  3432 ;;      Totals:         0       2       0       0       0       0       0
  3433 ;;Total ram usage:        2 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 15
  3436 ;; This function calls:
  3437 ;;		_displayInit
  3438 ;;		_gameControllerInit
  3439 ;;		_sleepController
  3440 ;;		_touchScreenInit
  3441 ;; This function is called by:
  3442 ;;		_Factory_init
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text2
  3447  0062AA                     __ptext2:
  3448                           	callstack 0
  3449  0062AA                     _sleepInit:
  3450                           	callstack 14
  3451  0062AA                     
  3452                           ;stateMachine/sleepSM.c: 11: void sleepInit(GameParameters* g);stateMachine/sleepSM.c: 1
      +                          2: {;stateMachine/sleepSM.c: 13:     sleepState=WAKEUP;
  3453  0062AA  0E00               	movlw	0
  3454  0062AC  0100               	movlb	0	; () banked
  3455  0062AE  6FDF               	movwf	_sleepState& (0+255),b
  3456  0062B0                     
  3457                           ; BSR set to: 0
  3458                           ;stateMachine/sleepSM.c: 14:     displayInit(g);
  3459  0062B0  C0A5  F0A3         	movff	sleepInit@g,displayInit@g
  3460  0062B4  C0A6  F0A4         	movff	sleepInit@g+1,displayInit@g+1
  3461  0062B8  ECC3  F031         	call	_displayInit	;wreg free
  3462  0062BC                     
  3463                           ;stateMachine/sleepSM.c: 15:     gameControllerInit(g);
  3464  0062BC  C0A5  F03C         	movff	sleepInit@g,gameControllerInit@g
  3465  0062C0  C0A6  F03D         	movff	sleepInit@g+1,gameControllerInit@g+1
  3466  0062C4  ECCF  F031         	call	_gameControllerInit	;wreg free
  3467  0062C8                     
  3468                           ;stateMachine/sleepSM.c: 16:     touchScreenInit();
  3469  0062C8  EC24  F032         	call	_touchScreenInit	;wreg free
  3470  0062CC                     
  3471                           ;stateMachine/sleepSM.c: 17:     sleepController();
  3472  0062CC  EC0C  F031         	call	_sleepController	;wreg free
  3473  0062D0  0012               	return		;funcret
  3474  0062D2                     __end_of_sleepInit:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _touchScreenInit *****************
  3478 ;; Defined at:
  3479 ;;		line 17 in file "stateMachine/touchScreenSM.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3493 ;;      Params:         0       0       0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0
  3496 ;;      Totals:         0       0       0       0       0       0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 5
  3500 ;; This function calls:
  3501 ;;		_configTouch
  3502 ;; This function is called by:
  3503 ;;		_sleepInit
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text3
  3508  006448                     __ptext3:
  3509                           	callstack 0
  3510  006448                     _touchScreenInit:
  3511                           	callstack 23
  3512  006448                     
  3513                           ;stateMachine/touchScreenSM.c: 19:     touchScreenState=WAITING;
  3514  006448  0E00               	movlw	0
  3515  00644A  0100               	movlb	0	; () banked
  3516  00644C  6FDE               	movwf	_touchScreenState& (0+255),b
  3517  00644E                     
  3518                           ; BSR set to: 0
  3519                           ;stateMachine/touchScreenSM.c: 20:     configTouch();
  3520  00644E  ECB6  F031         	call	_configTouch	;wreg free
  3521  006452  0012               	return		;funcret
  3522  006454                     __end_of_touchScreenInit:
  3523                           	callstack 0
  3524                           
  3525 ;; *************** function _sleepController *****************
  3526 ;; Defined at:
  3527 ;;		line 53 in file "stateMachine/sleepSM.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3541 ;;      Params:         0       0       0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0       0       0
  3543 ;;      Temps:          2       0       0       0       0       0       0
  3544 ;;      Totals:         2       0       0       0       0       0       0
  3545 ;;Total ram usage:        2 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 4
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_sleepInit
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text4
  3556  006218                     __ptext4:
  3557                           	callstack 0
  3558  006218                     _sleepController:
  3559                           	callstack 24
  3560  006218  0100               	movlb	0	; () banked
  3561  00621A  51DF               	movf	_sleepState& (0+255),w,b
  3562  00621C  6E12               	movwf	??_sleepController^0,c
  3563  00621E  6A13               	clrf	(??_sleepController+1)^0,c
  3564                           
  3565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3566                           ; Switch size 1, requested type "simple"
  3567                           ; Number of cases is 1, Range of values is 0 to 0
  3568                           ; switch strategies available:
  3569                           ; Name         Instructions Cycles
  3570                           ; simple_byte            4     3 (average)
  3571                           ;	Chosen strategy is simple_byte
  3572  006220  5013               	movf	(??_sleepController+1)^0,w,c
  3573  006222  0A00               	xorlw	0	; case 0
  3574  006224  B4D8               	btfsc	status,2,c
  3575  006226  EF17  F031         	goto	l10699
  3576  00622A  EF26  F031         	goto	l424
  3577  00622E                     l10699:
  3578                           
  3579                           ; BSR set to: 0
  3580                           ; Switch size 1, requested type "simple"
  3581                           ; Number of cases is 3, Range of values is 0 to 2
  3582                           ; switch strategies available:
  3583                           ; Name         Instructions Cycles
  3584                           ; simple_byte           10     6 (average)
  3585                           ;	Chosen strategy is simple_byte
  3586  00622E  5012               	movf	??_sleepController^0,w,c
  3587  006230  0A00               	xorlw	0	; case 0
  3588  006232  B4D8               	btfsc	status,2,c
  3589  006234  EF26  F031         	goto	l424
  3590  006238  0A01               	xorlw	1	; case 1
  3591  00623A  B4D8               	btfsc	status,2,c
  3592  00623C  EF26  F031         	goto	l424
  3593  006240  0A03               	xorlw	3	; case 2
  3594  006242  B4D8               	btfsc	status,2,c
  3595  006244  EF26  F031         	goto	l424
  3596  006248  EF26  F031         	goto	l424
  3597  00624C                     l424:
  3598                           
  3599                           ; BSR set to: 0
  3600  00624C  0012               	return		;funcret
  3601  00624E                     __end_of_sleepController:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _gameControllerInit *****************
  3605 ;; Defined at:
  3606 ;;		line 13 in file "stateMachine/gameController.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  g               2   59[COMRAM] PTR struct GameParameter
  3609 ;;		 -> g1(239), 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3621 ;;      Params:         2       0       0       0       0       0       0
  3622 ;;      Locals:         0       0       0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0
  3624 ;;      Totals:         2       0       0       0       0       0       0
  3625 ;;Total ram usage:        2 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 9
  3628 ;; This function calls:
  3629 ;;		_gameControllerController
  3630 ;; This function is called by:
  3631 ;;		_sleepInit
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text5
  3636  00639E                     __ptext5:
  3637                           	callstack 0
  3638  00639E                     _gameControllerInit:
  3639                           	callstack 19
  3640  00639E                     
  3641                           ;stateMachine/gameController.c: 13: void gameControllerInit(GameParameters* g);stateMach
      +                          ine/gameController.c: 14: {;stateMachine/gameController.c: 15:     gameStateMachine=NOGA
      +                          ME;
  3642  00639E  0E00               	movlw	0
  3643  0063A0  6E4D               	movwf	_gameStateMachine^0,c
  3644  0063A2                     
  3645                           ;stateMachine/gameController.c: 16:     gameControllerController(g,NULLEVENT);
  3646  0063A2  C03C  F037         	movff	gameControllerInit@g,gameControllerController@g
  3647  0063A6  C03D  F038         	movff	gameControllerInit@g+1,gameControllerController@g+1
  3648  0063AA  0E00               	movlw	0
  3649  0063AC  6E39               	movwf	gameControllerController@ev^0,c
  3650  0063AE  ECEF  F014         	call	_gameControllerController	;wreg free
  3651  0063B2  0012               	return		;funcret
  3652  0063B4                     __end_of_gameControllerInit:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function _displayInit *****************
  3656 ;; Defined at:
  3657 ;;		line 16 in file "stateMachine/display.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  g               2   67[BANK0 ] PTR struct GameParameter
  3660 ;;		 -> g1(239), 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3672 ;;      Params:         0       2       0       0       0       0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0
  3675 ;;      Totals:         0       2       0       0       0       0       0
  3676 ;;Total ram usage:        2 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 14
  3679 ;; This function calls:
  3680 ;;		_displayController
  3681 ;; This function is called by:
  3682 ;;		_sleepInit
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text6
  3687  006386                     __ptext6:
  3688                           	callstack 0
  3689  006386                     _displayInit:
  3690                           	callstack 14
  3691  006386                     
  3692                           ;stateMachine/display.c: 16: void displayInit(GameParameters* g);stateMachine/display.c:
      +                           17: {;stateMachine/display.c: 19:     displayState=WELCOME;
  3693  006386  0E00               	movlw	0
  3694  006388  0100               	movlb	0	; () banked
  3695  00638A  6FDD               	movwf	_displayState& (0+255),b
  3696  00638C                     
  3697                           ; BSR set to: 0
  3698                           ;stateMachine/display.c: 20:     displayController(g,NULLEVENT);
  3699  00638C  C0A3  F09E         	movff	displayInit@g,displayController@g
  3700  006390  C0A4  F09F         	movff	displayInit@g+1,displayController@g+1
  3701  006394  0E00               	movlw	0
  3702  006396  6FA0               	movwf	displayController@ev& (0+255),b
  3703  006398  ECF8  F023         	call	_displayController	;wreg free
  3704  00639C  0012               	return		;funcret
  3705  00639E                     __end_of_displayInit:
  3706                           	callstack 0
  3707                           
  3708 ;; *************** function _XF_init *****************
  3709 ;; Defined at:
  3710 ;;		line 25 in file "xf/xf.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  i               2   31[COMRAM] int 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3724 ;;      Params:         0       0       0       0       0       0       0
  3725 ;;      Locals:         2       0       0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0
  3727 ;;      Totals:         2       0       0       0       0       0       0
  3728 ;;Total ram usage:        2 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 5
  3731 ;; This function calls:
  3732 ;;		___wmul
  3733 ;; This function is called by:
  3734 ;;		_Factory_init
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text7
  3739  00558C                     __ptext7:
  3740                           	callstack 0
  3741  00558C                     _XF_init:
  3742                           	callstack 24
  3743  00558C                     
  3744                           ;xf/xf.c: 27:     int i;;xf/xf.c: 28:     for (i=0; i<12; i++)
  3745  00558C  0E00               	movlw	0
  3746  00558E  6E21               	movwf	(XF_init@i+1)^0,c
  3747  005590  0E00               	movlw	0
  3748  005592  6E20               	movwf	XF_init@i^0,c
  3749  005594                     l10281:
  3750                           
  3751                           ;xf/xf.c: 29:     {;xf/xf.c: 30:         theXF.eventQueue[i] = NULLEVENT;
  3752  005594  0ECD               	movlw	low (_theXF+24)
  3753  005596  2420               	addwf	XF_init@i^0,w,c
  3754  005598  6ED9               	movwf	fsr2l,c
  3755  00559A  0E00               	movlw	high (_theXF+24)
  3756  00559C  2021               	addwfc	(XF_init@i+1)^0,w,c
  3757  00559E  6EDA               	movwf	fsr2h,c
  3758  0055A0  0E00               	movlw	0
  3759  0055A2  6EDF               	movwf	indf2,c
  3760  0055A4                     
  3761                           ;xf/xf.c: 31:     }
  3762  0055A4  4A20               	infsnz	XF_init@i^0,f,c
  3763  0055A6  2A21               	incf	(XF_init@i+1)^0,f,c
  3764  0055A8  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3765  0055AA  EFE0  F02A         	goto	u7821
  3766  0055AE  5021               	movf	(XF_init@i+1)^0,w,c
  3767  0055B0  E109               	bnz	u7820
  3768  0055B2  0E0C               	movlw	12
  3769  0055B4  5C20               	subwf	XF_init@i^0,w,c
  3770  0055B6  A0D8               	btfss	status,0,c
  3771  0055B8  EFE0  F02A         	goto	u7821
  3772  0055BC  EFE2  F02A         	goto	u7820
  3773  0055C0                     u7821:
  3774  0055C0  EFCA  F02A         	goto	l10281
  3775  0055C4                     u7820:
  3776  0055C4                     
  3777                           ;xf/xf.c: 33:     for (i=0; i<8; i++)
  3778  0055C4  0E00               	movlw	0
  3779  0055C6  6E21               	movwf	(XF_init@i+1)^0,c
  3780  0055C8  0E00               	movlw	0
  3781  0055CA  6E20               	movwf	XF_init@i^0,c
  3782  0055CC                     l10293:
  3783                           
  3784                           ;xf/xf.c: 34:     {;xf/xf.c: 35:         theXF.timerList[i].tm = 0;
  3785  0055CC  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3786  0055D0  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3787  0055D4  0E00               	movlw	0
  3788  0055D6  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3789  0055D8  0E03               	movlw	3
  3790  0055DA  6E1C               	movwf	___wmul@multiplicand^0,c
  3791  0055DC  EC90  F031         	call	___wmul	;wreg free
  3792  0055E0  0EB5               	movlw	low _theXF
  3793  0055E2  241A               	addwf	?___wmul^0,w,c
  3794  0055E4  6ED9               	movwf	fsr2l,c
  3795  0055E6  0E00               	movlw	high _theXF
  3796  0055E8  201B               	addwfc	(?___wmul+1)^0,w,c
  3797  0055EA  6EDA               	movwf	fsr2h,c
  3798  0055EC  0E00               	movlw	0
  3799  0055EE  6EDE               	movwf	postinc2,c
  3800  0055F0  0E00               	movlw	0
  3801  0055F2  6EDD               	movwf	postdec2,c
  3802                           
  3803                           ;xf/xf.c: 36:         theXF.timerList[i].ev = NULLEVENT;
  3804  0055F4  C020  F01A         	movff	XF_init@i,___wmul@multiplier
  3805  0055F8  C021  F01B         	movff	XF_init@i+1,___wmul@multiplier+1
  3806  0055FC  0E00               	movlw	0
  3807  0055FE  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  3808  005600  0E03               	movlw	3
  3809  005602  6E1C               	movwf	___wmul@multiplicand^0,c
  3810  005604  EC90  F031         	call	___wmul	;wreg free
  3811  005608  0EB7               	movlw	low (_theXF+2)
  3812  00560A  241A               	addwf	?___wmul^0,w,c
  3813  00560C  6ED9               	movwf	fsr2l,c
  3814  00560E  0E00               	movlw	high (_theXF+2)
  3815  005610  201B               	addwfc	(?___wmul+1)^0,w,c
  3816  005612  6EDA               	movwf	fsr2h,c
  3817  005614  0E00               	movlw	0
  3818  005616  6EDF               	movwf	indf2,c
  3819  005618                     
  3820                           ;xf/xf.c: 37:     }
  3821  005618  4A20               	infsnz	XF_init@i^0,f,c
  3822  00561A  2A21               	incf	(XF_init@i+1)^0,f,c
  3823  00561C  BE21               	btfsc	(XF_init@i+1)^0,7,c
  3824  00561E  EF1A  F02B         	goto	u7831
  3825  005622  5021               	movf	(XF_init@i+1)^0,w,c
  3826  005624  E109               	bnz	u7830
  3827  005626  0E08               	movlw	8
  3828  005628  5C20               	subwf	XF_init@i^0,w,c
  3829  00562A  A0D8               	btfss	status,0,c
  3830  00562C  EF1A  F02B         	goto	u7831
  3831  005630  EF1C  F02B         	goto	u7830
  3832  005634                     u7831:
  3833  005634  EFE6  F02A         	goto	l10293
  3834  005638                     u7830:
  3835  005638                     
  3836                           ;xf/xf.c: 38:     theXF.in = 0;
  3837  005638  0E00               	movlw	0
  3838  00563A  0100               	movlb	0	; () banked
  3839  00563C  6FD9               	movwf	(_theXF+36)& (0+255),b
  3840                           
  3841                           ;xf/xf.c: 39:     theXF.out = 0;
  3842  00563E  0E00               	movlw	0
  3843  005640  6FDA               	movwf	(_theXF+37)& (0+255),b
  3844  005642                     
  3845                           ; BSR set to: 0
  3846  005642  0012               	return		;funcret
  3847  005644                     __end_of_XF_init:
  3848                           	callstack 0
  3849                           
  3850 ;; *************** function _LCD_Init *****************
  3851 ;; Defined at:
  3852 ;;		line 20 in file "libraries/lcd_highlevel.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  i               1   23[COMRAM] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3866 ;;      Params:         0       0       0       0       0       0       0
  3867 ;;      Locals:         1       0       0       0       0       0       0
  3868 ;;      Temps:          1       0       0       0       0       0       0
  3869 ;;      Totals:         2       0       0       0       0       0       0
  3870 ;;Total ram usage:        2 bytes
  3871 ;; Hardware stack levels used: 1
  3872 ;; Hardware stack levels required when called: 5
  3873 ;; This function calls:
  3874 ;;		_LCD_Lowlevel_Init
  3875 ;; This function is called by:
  3876 ;;		_Factory_init
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text8
  3881  003350                     __ptext8:
  3882                           	callstack 0
  3883  003350                     _LCD_Init:
  3884                           	callstack 24
  3885  003350                     
  3886                           ;libraries/lcd_highlevel.c: 22:   uint8_t i;;libraries/lcd_highlevel.c: 86:   LCD_Lowlev
      +                          el_Init();
  3887  003350  EC82  F02C         	call	_LCD_Lowlevel_Init	;wreg free
  3888  003354                     
  3889                           ;libraries/lcd_highlevel.c: 87:   PORTA = 0x11; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3890  003354  0E11               	movlw	17
  3891  003356  6E80               	movwf	128,c	;volatile
  3892  003358  988B               	bcf	3979,4,c	;volatile
  3893  00335A  968B               	bcf	3979,3,c	;volatile
  3894  00335C  868B               	bsf	3979,3,c	;volatile
  3895  00335E  888B               	bsf	3979,4,c	;volatile
  3896  003360                     
  3897                           ;libraries/lcd_highlevel.c: 88:   for(i=0;i<10;i++)
  3898  003360  0E00               	movlw	0
  3899  003362  6E18               	movwf	LCD_Init@i^0,c
  3900  003364                     l4051:
  3901                           
  3902                           ;libraries/lcd_highlevel.c: 89:   {;libraries/lcd_highlevel.c: 90:     _delay((unsigned 
      +                          long)((10)*(64000000L/4000.0)));
  3903  003364  0ED0               	movlw	208
  3904  003366  6E17               	movwf	??_LCD_Init^0,c
  3905  003368  0ECA               	movlw	202
  3906  00336A                     u7997:
  3907  00336A  2EE8               	decfsz	wreg,f,c
  3908  00336C  D7FE               	bra	u7997
  3909  00336E  2E17               	decfsz	??_LCD_Init^0,f,c
  3910  003370  D7FC               	bra	u7997
  3911  003372                     
  3912                           ;libraries/lcd_highlevel.c: 91:   }
  3913  003372  2A18               	incf	LCD_Init@i^0,f,c
  3914  003374  0E09               	movlw	9
  3915  003376  6418               	cpfsgt	LCD_Init@i^0,c
  3916  003378  EFC0  F019         	goto	u2451
  3917  00337C  EFC2  F019         	goto	u2450
  3918  003380                     u2451:
  3919  003380  EFB2  F019         	goto	l4051
  3920  003384                     u2450:
  3921  003384                     
  3922                           ;libraries/lcd_highlevel.c: 92:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3923  003384  0E36               	movlw	54
  3924  003386  6E80               	movwf	128,c	;volatile
  3925  003388  988B               	bcf	3979,4,c	;volatile
  3926  00338A  968B               	bcf	3979,3,c	;volatile
  3927  00338C  868B               	bsf	3979,3,c	;volatile
  3928  00338E  888B               	bsf	3979,4,c	;volatile
  3929                           
  3930                           ;libraries/lcd_highlevel.c: 93:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
  3931  003390  0E00               	movlw	0
  3932  003392  6E80               	movwf	128,c	;volatile
  3933  003394  968B               	bcf	3979,3,c	;volatile
  3934  003396  868B               	bsf	3979,3,c	;volatile
  3935                           
  3936                           ;libraries/lcd_highlevel.c: 94:   PORTA = 0x3A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3937  003398  0E3A               	movlw	58
  3938  00339A  6E80               	movwf	128,c	;volatile
  3939  00339C  988B               	bcf	3979,4,c	;volatile
  3940  00339E  968B               	bcf	3979,3,c	;volatile
  3941  0033A0  868B               	bsf	3979,3,c	;volatile
  3942  0033A2  888B               	bsf	3979,4,c	;volatile
  3943                           
  3944                           ;libraries/lcd_highlevel.c: 95:   PORTA = 0x55; LATC3 = 0; LATC3 = 1;;
  3945  0033A4  0E55               	movlw	85
  3946  0033A6  6E80               	movwf	128,c	;volatile
  3947  0033A8  968B               	bcf	3979,3,c	;volatile
  3948  0033AA  868B               	bsf	3979,3,c	;volatile
  3949                           
  3950                           ;libraries/lcd_highlevel.c: 96:   PORTA = 0xB2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 =
      +                           1;;
  3951  0033AC  0EB2               	movlw	178
  3952  0033AE  6E80               	movwf	128,c	;volatile
  3953  0033B0  988B               	bcf	3979,4,c	;volatile
  3954  0033B2  968B               	bcf	3979,3,c	;volatile
  3955  0033B4  868B               	bsf	3979,3,c	;volatile
  3956  0033B6  888B               	bsf	3979,4,c	;volatile
  3957                           
  3958                           ;libraries/lcd_highlevel.c: 97:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3959  0033B8  0E0C               	movlw	12
  3960  0033BA  6E80               	movwf	128,c	;volatile
  3961  0033BC  968B               	bcf	3979,3,c	;volatile
  3962  0033BE  868B               	bsf	3979,3,c	;volatile
  3963                           
  3964                           ;libraries/lcd_highlevel.c: 98:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  3965  0033C0  0E0C               	movlw	12
  3966  0033C2  6E80               	movwf	128,c	;volatile
  3967  0033C4  968B               	bcf	3979,3,c	;volatile
  3968  0033C6  868B               	bsf	3979,3,c	;volatile
  3969                           
  3970                           ;libraries/lcd_highlevel.c: 99:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3971  0033C8  0E33               	movlw	51
  3972  0033CA  6E80               	movwf	128,c	;volatile
  3973  0033CC  968B               	bcf	3979,3,c	;volatile
  3974  0033CE  868B               	bsf	3979,3,c	;volatile
  3975                           
  3976                           ;libraries/lcd_highlevel.c: 100:   PORTA = 0x33; LATC3 = 0; LATC3 = 1;;
  3977  0033D0  0E33               	movlw	51
  3978  0033D2  6E80               	movwf	128,c	;volatile
  3979  0033D4  968B               	bcf	3979,3,c	;volatile
  3980  0033D6  868B               	bsf	3979,3,c	;volatile
  3981                           
  3982                           ;libraries/lcd_highlevel.c: 101:   PORTA = 0xB7; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3983  0033D8  0EB7               	movlw	183
  3984  0033DA  6E80               	movwf	128,c	;volatile
  3985  0033DC  988B               	bcf	3979,4,c	;volatile
  3986  0033DE  968B               	bcf	3979,3,c	;volatile
  3987  0033E0  868B               	bsf	3979,3,c	;volatile
  3988  0033E2  888B               	bsf	3979,4,c	;volatile
  3989                           
  3990                           ;libraries/lcd_highlevel.c: 102:   PORTA = 0x35; LATC3 = 0; LATC3 = 1;;
  3991  0033E4  0E35               	movlw	53
  3992  0033E6  6E80               	movwf	128,c	;volatile
  3993  0033E8  968B               	bcf	3979,3,c	;volatile
  3994  0033EA  868B               	bsf	3979,3,c	;volatile
  3995                           
  3996                           ;libraries/lcd_highlevel.c: 103:   PORTA = 0xBB; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  3997  0033EC  0EBB               	movlw	187
  3998  0033EE  6E80               	movwf	128,c	;volatile
  3999  0033F0  988B               	bcf	3979,4,c	;volatile
  4000  0033F2  968B               	bcf	3979,3,c	;volatile
  4001  0033F4  868B               	bsf	3979,3,c	;volatile
  4002  0033F6  888B               	bsf	3979,4,c	;volatile
  4003                           
  4004                           ;libraries/lcd_highlevel.c: 104:   PORTA = 0x2B; LATC3 = 0; LATC3 = 1;;
  4005  0033F8  0E2B               	movlw	43
  4006  0033FA  6E80               	movwf	128,c	;volatile
  4007  0033FC  968B               	bcf	3979,3,c	;volatile
  4008  0033FE  868B               	bsf	3979,3,c	;volatile
  4009                           
  4010                           ;libraries/lcd_highlevel.c: 105:   PORTA = 0xC0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4011  003400  0EC0               	movlw	192
  4012  003402  6E80               	movwf	128,c	;volatile
  4013  003404  988B               	bcf	3979,4,c	;volatile
  4014  003406  968B               	bcf	3979,3,c	;volatile
  4015  003408  868B               	bsf	3979,3,c	;volatile
  4016  00340A  888B               	bsf	3979,4,c	;volatile
  4017                           
  4018                           ;libraries/lcd_highlevel.c: 106:   PORTA = 0x2C; LATC3 = 0; LATC3 = 1;;
  4019  00340C  0E2C               	movlw	44
  4020  00340E  6E80               	movwf	128,c	;volatile
  4021  003410  968B               	bcf	3979,3,c	;volatile
  4022  003412  868B               	bsf	3979,3,c	;volatile
  4023                           
  4024                           ;libraries/lcd_highlevel.c: 107:   PORTA = 0xC2; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4025  003414  0EC2               	movlw	194
  4026  003416  6E80               	movwf	128,c	;volatile
  4027  003418  988B               	bcf	3979,4,c	;volatile
  4028  00341A  968B               	bcf	3979,3,c	;volatile
  4029  00341C  868B               	bsf	3979,3,c	;volatile
  4030  00341E  888B               	bsf	3979,4,c	;volatile
  4031                           
  4032                           ;libraries/lcd_highlevel.c: 108:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4033  003420  0E01               	movlw	1
  4034  003422  6E80               	movwf	128,c	;volatile
  4035  003424  968B               	bcf	3979,3,c	;volatile
  4036  003426  868B               	bsf	3979,3,c	;volatile
  4037  003428                     
  4038                           ;libraries/lcd_highlevel.c: 109:   PORTA = 0xFF; LATC3 = 0; LATC3 = 1;;
  4039  003428  6880               	setf	128,c	;volatile
  4040  00342A  968B               	bcf	3979,3,c	;volatile
  4041  00342C  868B               	bsf	3979,3,c	;volatile
  4042                           
  4043                           ;libraries/lcd_highlevel.c: 110:   PORTA = 0XC3; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4044  00342E  0EC3               	movlw	195
  4045  003430  6E80               	movwf	128,c	;volatile
  4046  003432  988B               	bcf	3979,4,c	;volatile
  4047  003434  968B               	bcf	3979,3,c	;volatile
  4048  003436  868B               	bsf	3979,3,c	;volatile
  4049  003438  888B               	bsf	3979,4,c	;volatile
  4050                           
  4051                           ;libraries/lcd_highlevel.c: 111:   PORTA = 0x11; LATC3 = 0; LATC3 = 1;;
  4052  00343A  0E11               	movlw	17
  4053  00343C  6E80               	movwf	128,c	;volatile
  4054  00343E  968B               	bcf	3979,3,c	;volatile
  4055  003440  868B               	bsf	3979,3,c	;volatile
  4056                           
  4057                           ;libraries/lcd_highlevel.c: 112:   PORTA = 0xC4; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4058  003442  0EC4               	movlw	196
  4059  003444  6E80               	movwf	128,c	;volatile
  4060  003446  988B               	bcf	3979,4,c	;volatile
  4061  003448  968B               	bcf	3979,3,c	;volatile
  4062  00344A  868B               	bsf	3979,3,c	;volatile
  4063  00344C  888B               	bsf	3979,4,c	;volatile
  4064                           
  4065                           ;libraries/lcd_highlevel.c: 113:   PORTA = 0x20; LATC3 = 0; LATC3 = 1;;
  4066  00344E  0E20               	movlw	32
  4067  003450  6E80               	movwf	128,c	;volatile
  4068  003452  968B               	bcf	3979,3,c	;volatile
  4069  003454  868B               	bsf	3979,3,c	;volatile
  4070                           
  4071                           ;libraries/lcd_highlevel.c: 114:   PORTA = 0xC6; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4072  003456  0EC6               	movlw	198
  4073  003458  6E80               	movwf	128,c	;volatile
  4074  00345A  988B               	bcf	3979,4,c	;volatile
  4075  00345C  968B               	bcf	3979,3,c	;volatile
  4076  00345E  868B               	bsf	3979,3,c	;volatile
  4077  003460  888B               	bsf	3979,4,c	;volatile
  4078                           
  4079                           ;libraries/lcd_highlevel.c: 115:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4080  003462  0E09               	movlw	9
  4081  003464  6E80               	movwf	128,c	;volatile
  4082  003466  968B               	bcf	3979,3,c	;volatile
  4083  003468  868B               	bsf	3979,3,c	;volatile
  4084                           
  4085                           ;libraries/lcd_highlevel.c: 116:   PORTA = 0xD0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4086  00346A  0ED0               	movlw	208
  4087  00346C  6E80               	movwf	128,c	;volatile
  4088  00346E  988B               	bcf	3979,4,c	;volatile
  4089  003470  968B               	bcf	3979,3,c	;volatile
  4090  003472  868B               	bsf	3979,3,c	;volatile
  4091  003474  888B               	bsf	3979,4,c	;volatile
  4092                           
  4093                           ;libraries/lcd_highlevel.c: 117:   PORTA = 0xA4; LATC3 = 0; LATC3 = 1;;
  4094  003476  0EA4               	movlw	164
  4095  003478  6E80               	movwf	128,c	;volatile
  4096  00347A  968B               	bcf	3979,3,c	;volatile
  4097  00347C  868B               	bsf	3979,3,c	;volatile
  4098                           
  4099                           ;libraries/lcd_highlevel.c: 118:   PORTA = 0xA1; LATC3 = 0; LATC3 = 1;;
  4100  00347E  0EA1               	movlw	161
  4101  003480  6E80               	movwf	128,c	;volatile
  4102  003482  968B               	bcf	3979,3,c	;volatile
  4103  003484  868B               	bsf	3979,3,c	;volatile
  4104                           
  4105                           ;libraries/lcd_highlevel.c: 119:   PORTA = 0xE0; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4106  003486  0EE0               	movlw	224
  4107  003488  6E80               	movwf	128,c	;volatile
  4108  00348A  988B               	bcf	3979,4,c	;volatile
  4109  00348C  968B               	bcf	3979,3,c	;volatile
  4110  00348E  868B               	bsf	3979,3,c	;volatile
  4111  003490  888B               	bsf	3979,4,c	;volatile
  4112                           
  4113                           ;libraries/lcd_highlevel.c: 120:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4114  003492  0ED0               	movlw	208
  4115  003494  6E80               	movwf	128,c	;volatile
  4116  003496  968B               	bcf	3979,3,c	;volatile
  4117  003498  868B               	bsf	3979,3,c	;volatile
  4118                           
  4119                           ;libraries/lcd_highlevel.c: 121:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4120  00349A  0E00               	movlw	0
  4121  00349C  6E80               	movwf	128,c	;volatile
  4122  00349E  968B               	bcf	3979,3,c	;volatile
  4123  0034A0  868B               	bsf	3979,3,c	;volatile
  4124                           
  4125                           ;libraries/lcd_highlevel.c: 122:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4126  0034A2  0E05               	movlw	5
  4127  0034A4  6E80               	movwf	128,c	;volatile
  4128  0034A6  968B               	bcf	3979,3,c	;volatile
  4129  0034A8  868B               	bsf	3979,3,c	;volatile
  4130                           
  4131                           ;libraries/lcd_highlevel.c: 123:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4132  0034AA  0E0E               	movlw	14
  4133  0034AC  6E80               	movwf	128,c	;volatile
  4134  0034AE  968B               	bcf	3979,3,c	;volatile
  4135  0034B0  868B               	bsf	3979,3,c	;volatile
  4136                           
  4137                           ;libraries/lcd_highlevel.c: 124:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4138  0034B2  0E15               	movlw	21
  4139  0034B4  6E80               	movwf	128,c	;volatile
  4140  0034B6  968B               	bcf	3979,3,c	;volatile
  4141  0034B8  868B               	bsf	3979,3,c	;volatile
  4142                           
  4143                           ;libraries/lcd_highlevel.c: 125:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4144  0034BA  0E0D               	movlw	13
  4145  0034BC  6E80               	movwf	128,c	;volatile
  4146  0034BE  968B               	bcf	3979,3,c	;volatile
  4147  0034C0  868B               	bsf	3979,3,c	;volatile
  4148                           
  4149                           ;libraries/lcd_highlevel.c: 126:   PORTA = 0x37; LATC3 = 0; LATC3 = 1;;
  4150  0034C2  0E37               	movlw	55
  4151  0034C4  6E80               	movwf	128,c	;volatile
  4152  0034C6  968B               	bcf	3979,3,c	;volatile
  4153  0034C8  868B               	bsf	3979,3,c	;volatile
  4154                           
  4155                           ;libraries/lcd_highlevel.c: 127:   PORTA = 0x43; LATC3 = 0; LATC3 = 1;;
  4156  0034CA  0E43               	movlw	67
  4157  0034CC  6E80               	movwf	128,c	;volatile
  4158  0034CE  968B               	bcf	3979,3,c	;volatile
  4159  0034D0  868B               	bsf	3979,3,c	;volatile
  4160                           
  4161                           ;libraries/lcd_highlevel.c: 128:   PORTA = 0x47; LATC3 = 0; LATC3 = 1;;
  4162  0034D2  0E47               	movlw	71
  4163  0034D4  6E80               	movwf	128,c	;volatile
  4164  0034D6  968B               	bcf	3979,3,c	;volatile
  4165  0034D8  868B               	bsf	3979,3,c	;volatile
  4166                           
  4167                           ;libraries/lcd_highlevel.c: 129:   PORTA = 0x09; LATC3 = 0; LATC3 = 1;;
  4168  0034DA  0E09               	movlw	9
  4169  0034DC  6E80               	movwf	128,c	;volatile
  4170  0034DE  968B               	bcf	3979,3,c	;volatile
  4171  0034E0  868B               	bsf	3979,3,c	;volatile
  4172                           
  4173                           ;libraries/lcd_highlevel.c: 130:   PORTA = 0x15; LATC3 = 0; LATC3 = 1;;
  4174  0034E2  0E15               	movlw	21
  4175  0034E4  6E80               	movwf	128,c	;volatile
  4176  0034E6  968B               	bcf	3979,3,c	;volatile
  4177  0034E8  868B               	bsf	3979,3,c	;volatile
  4178                           
  4179                           ;libraries/lcd_highlevel.c: 131:   PORTA = 0x12; LATC3 = 0; LATC3 = 1;;
  4180  0034EA  0E12               	movlw	18
  4181  0034EC  6E80               	movwf	128,c	;volatile
  4182  0034EE  968B               	bcf	3979,3,c	;volatile
  4183  0034F0  868B               	bsf	3979,3,c	;volatile
  4184                           
  4185                           ;libraries/lcd_highlevel.c: 132:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4186  0034F2  0E16               	movlw	22
  4187  0034F4  6E80               	movwf	128,c	;volatile
  4188  0034F6  968B               	bcf	3979,3,c	;volatile
  4189  0034F8  868B               	bsf	3979,3,c	;volatile
  4190                           
  4191                           ;libraries/lcd_highlevel.c: 133:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4192  0034FA  0E19               	movlw	25
  4193  0034FC  6E80               	movwf	128,c	;volatile
  4194  0034FE  968B               	bcf	3979,3,c	;volatile
  4195  003500  868B               	bsf	3979,3,c	;volatile
  4196                           
  4197                           ;libraries/lcd_highlevel.c: 134:   PORTA = 0xE1; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4198  003502  0EE1               	movlw	225
  4199  003504  6E80               	movwf	128,c	;volatile
  4200  003506  988B               	bcf	3979,4,c	;volatile
  4201  003508  968B               	bcf	3979,3,c	;volatile
  4202  00350A  868B               	bsf	3979,3,c	;volatile
  4203  00350C  888B               	bsf	3979,4,c	;volatile
  4204                           
  4205                           ;libraries/lcd_highlevel.c: 135:   PORTA = 0xD0; LATC3 = 0; LATC3 = 1;;
  4206  00350E  0ED0               	movlw	208
  4207  003510  6E80               	movwf	128,c	;volatile
  4208  003512  968B               	bcf	3979,3,c	;volatile
  4209  003514  868B               	bsf	3979,3,c	;volatile
  4210                           
  4211                           ;libraries/lcd_highlevel.c: 136:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4212  003516  0E00               	movlw	0
  4213  003518  6E80               	movwf	128,c	;volatile
  4214  00351A  968B               	bcf	3979,3,c	;volatile
  4215  00351C  868B               	bsf	3979,3,c	;volatile
  4216                           
  4217                           ;libraries/lcd_highlevel.c: 137:   PORTA = 0x05; LATC3 = 0; LATC3 = 1;;
  4218  00351E  0E05               	movlw	5
  4219  003520  6E80               	movwf	128,c	;volatile
  4220  003522  968B               	bcf	3979,3,c	;volatile
  4221  003524  868B               	bsf	3979,3,c	;volatile
  4222                           
  4223                           ;libraries/lcd_highlevel.c: 138:   PORTA = 0x0D; LATC3 = 0; LATC3 = 1;;
  4224  003526  0E0D               	movlw	13
  4225  003528  6E80               	movwf	128,c	;volatile
  4226  00352A  968B               	bcf	3979,3,c	;volatile
  4227  00352C  868B               	bsf	3979,3,c	;volatile
  4228                           
  4229                           ;libraries/lcd_highlevel.c: 139:   PORTA = 0x0C; LATC3 = 0; LATC3 = 1;;
  4230  00352E  0E0C               	movlw	12
  4231  003530  6E80               	movwf	128,c	;volatile
  4232  003532  968B               	bcf	3979,3,c	;volatile
  4233  003534  868B               	bsf	3979,3,c	;volatile
  4234                           
  4235                           ;libraries/lcd_highlevel.c: 140:   PORTA = 0x06; LATC3 = 0; LATC3 = 1;;
  4236  003536  0E06               	movlw	6
  4237  003538  6E80               	movwf	128,c	;volatile
  4238  00353A  968B               	bcf	3979,3,c	;volatile
  4239  00353C  868B               	bsf	3979,3,c	;volatile
  4240                           
  4241                           ;libraries/lcd_highlevel.c: 141:   PORTA = 0x2D; LATC3 = 0; LATC3 = 1;;
  4242  00353E  0E2D               	movlw	45
  4243  003540  6E80               	movwf	128,c	;volatile
  4244  003542  968B               	bcf	3979,3,c	;volatile
  4245  003544  868B               	bsf	3979,3,c	;volatile
  4246                           
  4247                           ;libraries/lcd_highlevel.c: 142:   PORTA = 0x44; LATC3 = 0; LATC3 = 1;;
  4248  003546  0E44               	movlw	68
  4249  003548  6E80               	movwf	128,c	;volatile
  4250  00354A  968B               	bcf	3979,3,c	;volatile
  4251  00354C  868B               	bsf	3979,3,c	;volatile
  4252                           
  4253                           ;libraries/lcd_highlevel.c: 143:   PORTA = 0x40; LATC3 = 0; LATC3 = 1;;
  4254  00354E  0E40               	movlw	64
  4255  003550  6E80               	movwf	128,c	;volatile
  4256  003552  968B               	bcf	3979,3,c	;volatile
  4257  003554  868B               	bsf	3979,3,c	;volatile
  4258                           
  4259                           ;libraries/lcd_highlevel.c: 144:   PORTA = 0x0E; LATC3 = 0; LATC3 = 1;;
  4260  003556  0E0E               	movlw	14
  4261  003558  6E80               	movwf	128,c	;volatile
  4262  00355A  968B               	bcf	3979,3,c	;volatile
  4263  00355C  868B               	bsf	3979,3,c	;volatile
  4264                           
  4265                           ;libraries/lcd_highlevel.c: 145:   PORTA = 0x1C; LATC3 = 0; LATC3 = 1;;
  4266  00355E  0E1C               	movlw	28
  4267  003560  6E80               	movwf	128,c	;volatile
  4268  003562  968B               	bcf	3979,3,c	;volatile
  4269  003564  868B               	bsf	3979,3,c	;volatile
  4270                           
  4271                           ;libraries/lcd_highlevel.c: 146:   PORTA = 0x18; LATC3 = 0; LATC3 = 1;;
  4272  003566  0E18               	movlw	24
  4273  003568  6E80               	movwf	128,c	;volatile
  4274  00356A  968B               	bcf	3979,3,c	;volatile
  4275  00356C  868B               	bsf	3979,3,c	;volatile
  4276                           
  4277                           ;libraries/lcd_highlevel.c: 147:   PORTA = 0x16; LATC3 = 0; LATC3 = 1;;
  4278  00356E  0E16               	movlw	22
  4279  003570  6E80               	movwf	128,c	;volatile
  4280  003572  968B               	bcf	3979,3,c	;volatile
  4281  003574  868B               	bsf	3979,3,c	;volatile
  4282                           
  4283                           ;libraries/lcd_highlevel.c: 148:   PORTA = 0x19; LATC3 = 0; LATC3 = 1;;
  4284  003576  0E19               	movlw	25
  4285  003578  6E80               	movwf	128,c	;volatile
  4286  00357A  968B               	bcf	3979,3,c	;volatile
  4287  00357C  868B               	bsf	3979,3,c	;volatile
  4288                           
  4289                           ;libraries/lcd_highlevel.c: 149:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4290  00357E  0E2A               	movlw	42
  4291  003580  6E80               	movwf	128,c	;volatile
  4292  003582  988B               	bcf	3979,4,c	;volatile
  4293  003584  968B               	bcf	3979,3,c	;volatile
  4294  003586  868B               	bsf	3979,3,c	;volatile
  4295  003588  888B               	bsf	3979,4,c	;volatile
  4296                           
  4297                           ;libraries/lcd_highlevel.c: 150:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4298  00358A  0E00               	movlw	0
  4299  00358C  6E80               	movwf	128,c	;volatile
  4300  00358E  968B               	bcf	3979,3,c	;volatile
  4301  003590  868B               	bsf	3979,3,c	;volatile
  4302                           
  4303                           ;libraries/lcd_highlevel.c: 151:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4304  003592  0E00               	movlw	0
  4305  003594  6E80               	movwf	128,c	;volatile
  4306  003596  968B               	bcf	3979,3,c	;volatile
  4307  003598  868B               	bsf	3979,3,c	;volatile
  4308                           
  4309                           ;libraries/lcd_highlevel.c: 152:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4310  00359A  0E00               	movlw	0
  4311  00359C  6E80               	movwf	128,c	;volatile
  4312  00359E  968B               	bcf	3979,3,c	;volatile
  4313  0035A0  868B               	bsf	3979,3,c	;volatile
  4314                           
  4315                           ;libraries/lcd_highlevel.c: 153:   PORTA = 0xEF; LATC3 = 0; LATC3 = 1;;
  4316  0035A2  0EEF               	movlw	239
  4317  0035A4  6E80               	movwf	128,c	;volatile
  4318  0035A6  968B               	bcf	3979,3,c	;volatile
  4319  0035A8  868B               	bsf	3979,3,c	;volatile
  4320                           
  4321                           ;libraries/lcd_highlevel.c: 154:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4322  0035AA  0E2B               	movlw	43
  4323  0035AC  6E80               	movwf	128,c	;volatile
  4324  0035AE  988B               	bcf	3979,4,c	;volatile
  4325  0035B0  968B               	bcf	3979,3,c	;volatile
  4326  0035B2  868B               	bsf	3979,3,c	;volatile
  4327  0035B4  888B               	bsf	3979,4,c	;volatile
  4328                           
  4329                           ;libraries/lcd_highlevel.c: 155:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4330  0035B6  0E00               	movlw	0
  4331  0035B8  6E80               	movwf	128,c	;volatile
  4332  0035BA  968B               	bcf	3979,3,c	;volatile
  4333  0035BC  868B               	bsf	3979,3,c	;volatile
  4334                           
  4335                           ;libraries/lcd_highlevel.c: 156:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
  4336  0035BE  0E00               	movlw	0
  4337  0035C0  6E80               	movwf	128,c	;volatile
  4338  0035C2  968B               	bcf	3979,3,c	;volatile
  4339  0035C4  868B               	bsf	3979,3,c	;volatile
  4340                           
  4341                           ;libraries/lcd_highlevel.c: 157:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4342  0035C6  0E01               	movlw	1
  4343  0035C8  6E80               	movwf	128,c	;volatile
  4344  0035CA  968B               	bcf	3979,3,c	;volatile
  4345  0035CC  868B               	bsf	3979,3,c	;volatile
  4346                           
  4347                           ;libraries/lcd_highlevel.c: 158:   PORTA = 0x3F; LATC3 = 0; LATC3 = 1;;
  4348  0035CE  0E3F               	movlw	63
  4349  0035D0  6E80               	movwf	128,c	;volatile
  4350  0035D2  968B               	bcf	3979,3,c	;volatile
  4351  0035D4  868B               	bsf	3979,3,c	;volatile
  4352                           
  4353                           ;libraries/lcd_highlevel.c: 159:   PORTA = 0x26; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4354  0035D6  0E26               	movlw	38
  4355  0035D8  6E80               	movwf	128,c	;volatile
  4356  0035DA  988B               	bcf	3979,4,c	;volatile
  4357  0035DC  968B               	bcf	3979,3,c	;volatile
  4358  0035DE  868B               	bsf	3979,3,c	;volatile
  4359  0035E0  888B               	bsf	3979,4,c	;volatile
  4360                           
  4361                           ;libraries/lcd_highlevel.c: 160:   PORTA = 0x01; LATC3 = 0; LATC3 = 1;;
  4362  0035E2  0E01               	movlw	1
  4363  0035E4  6E80               	movwf	128,c	;volatile
  4364  0035E6  968B               	bcf	3979,3,c	;volatile
  4365  0035E8  868B               	bsf	3979,3,c	;volatile
  4366                           
  4367                           ;libraries/lcd_highlevel.c: 161:   PORTA = 0x29; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
  4368  0035EA  0E29               	movlw	41
  4369  0035EC  6E80               	movwf	128,c	;volatile
  4370  0035EE  988B               	bcf	3979,4,c	;volatile
  4371  0035F0  968B               	bcf	3979,3,c	;volatile
  4372  0035F2  868B               	bsf	3979,3,c	;volatile
  4373  0035F4  888B               	bsf	3979,4,c	;volatile
  4374  0035F6  0012               	return		;funcret
  4375  0035F8                     __end_of_LCD_Init:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _LCD_Lowlevel_Init *****************
  4379 ;; Defined at:
  4380 ;;		line 17 in file "libraries/lcd_lowlevel.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  i               4   18[COMRAM] unsigned long 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4394 ;;      Params:         0       0       0       0       0       0       0
  4395 ;;      Locals:         4       0       0       0       0       0       0
  4396 ;;      Temps:          1       0       0       0       0       0       0
  4397 ;;      Totals:         5       0       0       0       0       0       0
  4398 ;;Total ram usage:        5 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; Hardware stack levels required when called: 4
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_LCD_Init
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text9
  4409  005904                     __ptext9:
  4410                           	callstack 0
  4411  005904                     _LCD_Lowlevel_Init:
  4412                           	callstack 24
  4413  005904                     
  4414                           ;libraries/lcd_lowlevel.c: 19:   uint32_t i;;libraries/lcd_lowlevel.c: 20:   TRISC5 = 0;
  4415  005904  9A94               	bcf	3988,5,c	;volatile
  4416                           
  4417                           ;libraries/lcd_lowlevel.c: 21:   TRISC2 = 0;
  4418  005906  9494               	bcf	3988,2,c	;volatile
  4419                           
  4420                           ;libraries/lcd_lowlevel.c: 22:   TRISC3 = 0;
  4421  005908  9694               	bcf	3988,3,c	;volatile
  4422                           
  4423                           ;libraries/lcd_lowlevel.c: 23:   TRISC4 = 0;
  4424  00590A  9894               	bcf	3988,4,c	;volatile
  4425  00590C                     
  4426                           ;libraries/lcd_lowlevel.c: 25:   TRISA = 0x00;
  4427  00590C  0E00               	movlw	0
  4428  00590E  6E92               	movwf	146,c	;volatile
  4429  005910                     
  4430                           ;libraries/lcd_lowlevel.c: 28:  LATC5 = 0;
  4431  005910  9A8B               	bcf	3979,5,c	;volatile
  4432  005912                     
  4433                           ;libraries/lcd_lowlevel.c: 29:  LATC2 = 1;
  4434  005912  848B               	bsf	3979,2,c	;volatile
  4435  005914                     
  4436                           ;libraries/lcd_lowlevel.c: 30:  LATC3 = 1;
  4437  005914  868B               	bsf	3979,3,c	;volatile
  4438  005916                     
  4439                           ;libraries/lcd_lowlevel.c: 31:  LATC4 = 1;
  4440  005916  888B               	bsf	3979,4,c	;volatile
  4441                           
  4442                           ;libraries/lcd_lowlevel.c: 33:   for(i=0;i<12;i++)
  4443  005918  0E00               	movlw	0
  4444  00591A  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4445  00591C  0E00               	movlw	0
  4446  00591E  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4447  005920  0E00               	movlw	0
  4448  005922  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4449  005924  0E00               	movlw	0
  4450  005926  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4451  005928                     l3897:
  4452                           
  4453                           ;libraries/lcd_lowlevel.c: 34:   {;libraries/lcd_lowlevel.c: 35:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4454  005928  0ED0               	movlw	208
  4455  00592A  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4456  00592C  0ECA               	movlw	202
  4457  00592E                     u8007:
  4458  00592E  2EE8               	decfsz	wreg,f,c
  4459  005930  D7FE               	bra	u8007
  4460  005932  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4461  005934  D7FC               	bra	u8007
  4462  005936                     
  4463                           ;libraries/lcd_lowlevel.c: 36:   }
  4464  005936  0E01               	movlw	1
  4465  005938  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4466  00593A  0E00               	movlw	0
  4467  00593C  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4468  00593E  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4469  005940  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4470  005942  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4471  005944  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4472  005946  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4473  005948  E109               	bnz	u2300
  4474  00594A  0E0C               	movlw	12
  4475  00594C  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4476  00594E  A0D8               	btfss	status,0,c
  4477  005950  EFAC  F02C         	goto	u2301
  4478  005954  EFAE  F02C         	goto	u2300
  4479  005958                     u2301:
  4480  005958  EF94  F02C         	goto	l3897
  4481  00595C                     u2300:
  4482  00595C                     
  4483                           ;libraries/lcd_lowlevel.c: 38:   for(i=0;i<12;i++)
  4484  00595C  0E00               	movlw	0
  4485  00595E  6E13               	movwf	LCD_Lowlevel_Init@i^0,c
  4486  005960  0E00               	movlw	0
  4487  005962  6E14               	movwf	(LCD_Lowlevel_Init@i+1)^0,c
  4488  005964  0E00               	movlw	0
  4489  005966  6E15               	movwf	(LCD_Lowlevel_Init@i+2)^0,c
  4490  005968  0E00               	movlw	0
  4491  00596A  6E16               	movwf	(LCD_Lowlevel_Init@i+3)^0,c
  4492  00596C                     l3909:
  4493                           
  4494                           ;libraries/lcd_lowlevel.c: 39:   {;libraries/lcd_lowlevel.c: 40:     _delay((unsigned lo
      +                          ng)((10)*(64000000L/4000.0)));
  4495  00596C  0ED0               	movlw	208
  4496  00596E  6E12               	movwf	??_LCD_Lowlevel_Init^0,c
  4497  005970  0ECA               	movlw	202
  4498  005972                     u8017:
  4499  005972  2EE8               	decfsz	wreg,f,c
  4500  005974  D7FE               	bra	u8017
  4501  005976  2E12               	decfsz	??_LCD_Lowlevel_Init^0,f,c
  4502  005978  D7FC               	bra	u8017
  4503  00597A                     
  4504                           ;libraries/lcd_lowlevel.c: 41:   }
  4505  00597A  0E01               	movlw	1
  4506  00597C  2613               	addwf	LCD_Lowlevel_Init@i^0,f,c
  4507  00597E  0E00               	movlw	0
  4508  005980  2214               	addwfc	(LCD_Lowlevel_Init@i+1)^0,f,c
  4509  005982  2215               	addwfc	(LCD_Lowlevel_Init@i+2)^0,f,c
  4510  005984  2216               	addwfc	(LCD_Lowlevel_Init@i+3)^0,f,c
  4511  005986  5016               	movf	(LCD_Lowlevel_Init@i+3)^0,w,c
  4512  005988  1015               	iorwf	(LCD_Lowlevel_Init@i+2)^0,w,c
  4513  00598A  1014               	iorwf	(LCD_Lowlevel_Init@i+1)^0,w,c
  4514  00598C  E109               	bnz	u2310
  4515  00598E  0E0C               	movlw	12
  4516  005990  5C13               	subwf	LCD_Lowlevel_Init@i^0,w,c
  4517  005992  A0D8               	btfss	status,0,c
  4518  005994  EFCE  F02C         	goto	u2311
  4519  005998  EFD0  F02C         	goto	u2310
  4520  00599C                     u2311:
  4521  00599C  EFB6  F02C         	goto	l3909
  4522  0059A0                     u2310:
  4523  0059A0  0012               	return		;funcret
  4524  0059A2                     __end_of_LCD_Lowlevel_Init:
  4525                           	callstack 0
  4526                           
  4527 ;; *************** function _Factory_exec *****************
  4528 ;; Defined at:
  4529 ;;		line 56 in file "class/factory.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  ev              1    2[BANK1 ] unsigned char 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      void 
  4536 ;; Registers used:
  4537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4543 ;;      Params:         0       0       0       0       0       0       0
  4544 ;;      Locals:         0       0       1       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0
  4546 ;;      Totals:         0       0       1       0       0       0       0
  4547 ;;Total ram usage:        1 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; Hardware stack levels required when called: 15
  4550 ;; This function calls:
  4551 ;;		_XF_popEvent
  4552 ;;		_displaySM
  4553 ;;		_gameControllerSM
  4554 ;;		_sleepSM
  4555 ;;		_touchScreenSM
  4556 ;; This function is called by:
  4557 ;;		_main
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text10
  4562  005F78                     __ptext10:
  4563                           	callstack 0
  4564  005F78                     _Factory_exec:
  4565                           	callstack 15
  4566  005F78                     
  4567                           ;class/factory.c: 59:     Event ev;;class/factory.c: 60:     ev = XF_popEvent(0);
  4568  005F78  0E00               	movlw	0
  4569  005F7A  EC8C  F02F         	call	_XF_popEvent
  4570  005F7E  0101               	movlb	1	; () banked
  4571  005F80  6FF1               	movwf	Factory_exec@ev& (0+255),b
  4572  005F82                     
  4573                           ; BSR set to: 1
  4574                           ;class/factory.c: 61:     if (ev != NULLEVENT)
  4575  005F82  51F1               	movf	Factory_exec@ev& (0+255),w,b
  4576  005F84  B4D8               	btfsc	status,2,c
  4577  005F86  EFC7  F02F         	goto	u7971
  4578  005F8A  EFC9  F02F         	goto	u7970
  4579  005F8E                     u7971:
  4580  005F8E  EFE6  F02F         	goto	l106
  4581  005F92                     u7970:
  4582  005F92                     
  4583                           ; BSR set to: 1
  4584                           ;class/factory.c: 62:     {;class/factory.c: 63:         sleepSM(ev);
  4585  005F92  51F1               	movf	Factory_exec@ev& (0+255),w,b
  4586  005F94  EC2A  F032         	call	_sleepSM
  4587  005F98                     
  4588                           ;class/factory.c: 64:         touchScreenSM(ev,&g1);
  4589  005F98  0E00               	movlw	low _g1
  4590  005F9A  0100               	movlb	0	; () banked
  4591  005F9C  6FB2               	movwf	touchScreenSM@g& (0+255),b
  4592  005F9E  0E01               	movlw	high _g1
  4593  005FA0  6FB3               	movwf	(touchScreenSM@g+1)& (0+255),b
  4594  005FA2  0101               	movlb	1	; () banked
  4595  005FA4  51F1               	movf	Factory_exec@ev& (0+255),w,b
  4596  005FA6  ECD1  F02C         	call	_touchScreenSM
  4597  005FAA                     
  4598                           ;class/factory.c: 65:         displaySM(ev,&g1);
  4599  005FAA  0E00               	movlw	low _g1
  4600  005FAC  0100               	movlb	0	; () banked
  4601  005FAE  6FA3               	movwf	displaySM@g& (0+255),b
  4602  005FB0  0E01               	movlw	high _g1
  4603  005FB2  6FA4               	movwf	(displaySM@g+1)& (0+255),b
  4604  005FB4  0101               	movlb	1	; () banked
  4605  005FB6  51F1               	movf	Factory_exec@ev& (0+255),w,b
  4606  005FB8  EC7A  F024         	call	_displaySM
  4607  005FBC                     
  4608                           ;class/factory.c: 66:         gameControllerSM(ev,&g1);
  4609  005FBC  0E00               	movlw	low _g1
  4610  005FBE  6E3C               	movwf	gameControllerSM@g^0,c
  4611  005FC0  0E01               	movlw	high _g1
  4612  005FC2  6E3D               	movwf	(gameControllerSM@g+1)^0,c
  4613  005FC4  0101               	movlb	1	; () banked
  4614  005FC6  51F1               	movf	Factory_exec@ev& (0+255),w,b
  4615  005FC8  EC81  F028         	call	_gameControllerSM
  4616  005FCC                     l106:
  4617  005FCC  0012               	return		;funcret
  4618  005FCE                     __end_of_Factory_exec:
  4619                           	callstack 0
  4620                           
  4621 ;; *************** function _touchScreenSM *****************
  4622 ;; Defined at:
  4623 ;;		line 25 in file "stateMachine/touchScreenSM.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  ev              1    wreg     unsigned char 
  4626 ;;  g               2   82[BANK0 ] PTR struct GameParameter
  4627 ;;		 -> g1(239), 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  ev              1   84[BANK0 ] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4639 ;;      Params:         0       2       0       0       0       0       0
  4640 ;;      Locals:         0       1       0       0       0       0       0
  4641 ;;      Temps:          0       0       2       0       0       0       0
  4642 ;;      Totals:         0       3       2       0       0       0       0
  4643 ;;Total ram usage:        5 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 13
  4646 ;; This function calls:
  4647 ;;		_touchScreenController
  4648 ;; This function is called by:
  4649 ;;		_Factory_exec
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text11
  4654  0059A2                     __ptext11:
  4655                           	callstack 0
  4656  0059A2                     _touchScreenSM:
  4657                           	callstack 16
  4658                           
  4659                           ;incstack = 0
  4660                           ;touchScreenSM@ev stored from wreg
  4661  0059A2  0100               	movlb	0	; () banked
  4662  0059A4  6FB4               	movwf	touchScreenSM@ev& (0+255),b
  4663  0059A6                     
  4664                           ;stateMachine/touchScreenSM.c: 25: void touchScreenSM(Event ev, GameParameters* g);state
      +                          Machine/touchScreenSM.c: 26: {;stateMachine/touchScreenSM.c: 27:     switch(touchScreenS
      +                          tate)
  4665  0059A6  EF06  F02D         	goto	l10353
  4666  0059AA                     l10335:
  4667                           
  4668                           ; BSR set to: 1
  4669                           ;stateMachine/touchScreenSM.c: 30:             if(ev==evPress)
  4670  0059AA  0100               	movlb	0	; () banked
  4671  0059AC  05B4               	decf	touchScreenSM@ev& (0+255),w,b
  4672  0059AE  A4D8               	btfss	status,2,c
  4673  0059B0  EFDC  F02C         	goto	u7851
  4674  0059B4  EFDE  F02C         	goto	u7850
  4675  0059B8                     u7851:
  4676  0059B8  EF1D  F02D         	goto	l496
  4677  0059BC                     u7850:
  4678  0059BC                     
  4679                           ; BSR set to: 0
  4680                           ;stateMachine/touchScreenSM.c: 31:             {;stateMachine/touchScreenSM.c: 32:      
      +                                     touchScreenState=CALCULATEPOSITION;
  4681  0059BC  0E01               	movlw	1
  4682  0059BE  6FDE               	movwf	_touchScreenState& (0+255),b
  4683  0059C0                     l10339:
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;stateMachine/touchScreenSM.c: 33:                 touchScreenController(g);
  4687  0059C0  C0B2  F092         	movff	touchScreenSM@g,touchScreenController@g
  4688  0059C4  C0B3  F093         	movff	touchScreenSM@g+1,touchScreenController@g+1
  4689  0059C8  ECFC  F01A         	call	_touchScreenController	;wreg free
  4690  0059CC  EF1D  F02D         	goto	l496
  4691  0059D0                     l10341:
  4692                           
  4693                           ; BSR set to: 1
  4694                           ;stateMachine/touchScreenSM.c: 37:             if(ev==evRelease)
  4695  0059D0  0E02               	movlw	2
  4696  0059D2  0100               	movlb	0	; () banked
  4697  0059D4  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  4698  0059D6  A4D8               	btfss	status,2,c
  4699  0059D8  EFF0  F02C         	goto	u7861
  4700  0059DC  EFF2  F02C         	goto	u7860
  4701  0059E0                     u7861:
  4702  0059E0  EFFA  F02C         	goto	l10347
  4703  0059E4                     u7860:
  4704  0059E4                     
  4705                           ; BSR set to: 0
  4706                           ;stateMachine/touchScreenSM.c: 38:             {;stateMachine/touchScreenSM.c: 39:      
      +                                     touchScreenState=WAITING;
  4707  0059E4  0E00               	movlw	0
  4708  0059E6  6FDE               	movwf	_touchScreenState& (0+255),b
  4709  0059E8                     
  4710                           ; BSR set to: 0
  4711                           ;stateMachine/touchScreenSM.c: 40:                 touchScreenController(g);
  4712  0059E8  C0B2  F092         	movff	touchScreenSM@g,touchScreenController@g
  4713  0059EC  C0B3  F093         	movff	touchScreenSM@g+1,touchScreenController@g+1
  4714  0059F0  ECFC  F01A         	call	_touchScreenController	;wreg free
  4715  0059F4                     l10347:
  4716                           
  4717                           ;stateMachine/touchScreenSM.c: 42:             if(ev==evTimerPos)
  4718  0059F4  0E04               	movlw	4
  4719  0059F6  0100               	movlb	0	; () banked
  4720  0059F8  19B4               	xorwf	touchScreenSM@ev& (0+255),w,b
  4721  0059FA  A4D8               	btfss	status,2,c
  4722  0059FC  EF02  F02D         	goto	u7871
  4723  005A00  EF04  F02D         	goto	u7870
  4724  005A04                     u7871:
  4725  005A04  EF1D  F02D         	goto	l496
  4726  005A08                     u7870:
  4727  005A08  EFE0  F02C         	goto	l10339
  4728  005A0C                     l10353:
  4729  005A0C  0100               	movlb	0	; () banked
  4730  005A0E  51DE               	movf	_touchScreenState& (0+255),w,b
  4731  005A10  0101               	movlb	1	; () banked
  4732  005A12  6FEF               	movwf	??_touchScreenSM& (0+255),b
  4733  005A14  6BF0               	clrf	(??_touchScreenSM+1)& (0+255),b
  4734                           
  4735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4736                           ; Switch size 1, requested type "simple"
  4737                           ; Number of cases is 1, Range of values is 0 to 0
  4738                           ; switch strategies available:
  4739                           ; Name         Instructions Cycles
  4740                           ; simple_byte            4     3 (average)
  4741                           ;	Chosen strategy is simple_byte
  4742  005A16  51F0               	movf	(??_touchScreenSM+1)& (0+255),w,b
  4743  005A18  0A00               	xorlw	0	; case 0
  4744  005A1A  B4D8               	btfsc	status,2,c
  4745  005A1C  EF12  F02D         	goto	l10701
  4746  005A20  EF1D  F02D         	goto	l496
  4747  005A24                     l10701:
  4748                           
  4749                           ; BSR set to: 1
  4750                           ; Switch size 1, requested type "simple"
  4751                           ; Number of cases is 2, Range of values is 0 to 1
  4752                           ; switch strategies available:
  4753                           ; Name         Instructions Cycles
  4754                           ; simple_byte            7     4 (average)
  4755                           ;	Chosen strategy is simple_byte
  4756  005A24  51EF               	movf	??_touchScreenSM& (0+255),w,b
  4757  005A26  0A00               	xorlw	0	; case 0
  4758  005A28  B4D8               	btfsc	status,2,c
  4759  005A2A  EFD5  F02C         	goto	l10335
  4760  005A2E  0A01               	xorlw	1	; case 1
  4761  005A30  B4D8               	btfsc	status,2,c
  4762  005A32  EFE8  F02C         	goto	l10341
  4763  005A36  EF1D  F02D         	goto	l496
  4764  005A3A                     l496:
  4765  005A3A  0012               	return		;funcret
  4766  005A3C                     __end_of_touchScreenSM:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function _touchScreenController *****************
  4770 ;; Defined at:
  4771 ;;		line 54 in file "stateMachine/touchScreenSM.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  g               2   50[BANK0 ] PTR struct GameParameter
  4774 ;;		 -> g1(239), 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  valueX          2   80[BANK0 ] unsigned short 
  4777 ;;  valueY          2   78[BANK0 ] unsigned short 
  4778 ;;  s              20   58[BANK0 ] unsigned char [20]
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4788 ;;      Params:         0       2       0       0       0       0       0
  4789 ;;      Locals:         0      24       0       0       0       0       0
  4790 ;;      Temps:          0       6       0       0       0       0       0
  4791 ;;      Totals:         0      32       0       0       0       0       0
  4792 ;;Total ram usage:       32 bytes
  4793 ;; Hardware stack levels used: 1
  4794 ;; Hardware stack levels required when called: 12
  4795 ;; This function calls:
  4796 ;;		_GameParameters_setX
  4797 ;;		_GameParameters_setY
  4798 ;;		_LCD_DrawText
  4799 ;;		_XF_scheduleTimer
  4800 ;;		___fldiv
  4801 ;;		___fltol
  4802 ;;		___xxtofl
  4803 ;;		_configMeasure
  4804 ;;		_configTouch
  4805 ;;		_sprintf
  4806 ;; This function is called by:
  4807 ;;		_touchScreenSM
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text12
  4812  0035F8                     __ptext12:
  4813                           	callstack 0
  4814  0035F8                     _touchScreenController:
  4815                           	callstack 16
  4816  0035F8                     
  4817                           ;stateMachine/touchScreenSM.c: 54: void touchScreenController(GameParameters* g);stateMa
      +                          chine/touchScreenSM.c: 55: {;stateMachine/touchScreenSM.c: 56:     char s[20];;stateMach
      +                          ine/touchScreenSM.c: 58:     switch(touchScreenState)
  4818  0035F8  EF1C  F01C         	goto	l10267
  4819  0035FC                     l500:
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;stateMachine/touchScreenSM.c: 63:             INTEDG1=0;
  4823  0035FC  9AF1               	bcf	4081,5,c	;volatile
  4824  0035FE                     
  4825                           ; BSR set to: 0
  4826                           ;stateMachine/touchScreenSM.c: 64:             configTouch();
  4827  0035FE  ECB6  F031         	call	_configTouch	;wreg free
  4828                           
  4829                           ;stateMachine/touchScreenSM.c: 67:             break;
  4830  003602  EF32  F01C         	goto	l513
  4831  003606                     l502:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;stateMachine/touchScreenSM.c: 72:             INT1IE=0;
  4835  003606  96F0               	bcf	4080,3,c	;volatile
  4836  003608                     
  4837                           ; BSR set to: 0
  4838                           ;stateMachine/touchScreenSM.c: 73:             configMeasure(0);
  4839  003608  0E00               	movlw	0
  4840  00360A  EC3B  F030         	call	_configMeasure
  4841  00360E                     l503:
  4842  00360E  B2C2               	btfsc	194,1,c	;volatile
  4843  003610  EF0C  F01B         	goto	u7771
  4844  003614  EF0E  F01B         	goto	u7770
  4845  003618                     u7771:
  4846  003618  EF07  F01B         	goto	l503
  4847  00361C                     u7770:
  4848  00361C                     
  4849                           ;stateMachine/touchScreenSM.c: 75:             uint16_t valueX;;stateMachine/touchScreen
      +                          SM.c: 76:             valueX=(ADRESH<<8)+ADRESL;
  4850  00361C  50C4               	movf	196,w,c	;volatile
  4851  00361E  0100               	movlb	0	; () banked
  4852  003620  6F95               	movwf	(??_touchScreenController+1)& (0+255),b
  4853  003622  6B94               	clrf	??_touchScreenController& (0+255),b
  4854  003624  50C3               	movf	195,w,c	;volatile
  4855  003626  2594               	addwf	??_touchScreenController& (0+255),w,b
  4856  003628  6FB0               	movwf	touchScreenController@valueX& (0+255),b
  4857  00362A  0E00               	movlw	0
  4858  00362C  2195               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  4859  00362E  6FB1               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4860                           
  4861                           ;stateMachine/touchScreenSM.c: 77:             if(valueX<=120)
  4862  003630  51B1               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  4863  003632  E107               	bnz	u7781
  4864  003634  0E79               	movlw	121
  4865  003636  5DB0               	subwf	touchScreenController@valueX& (0+255),w,b
  4866  003638  B0D8               	btfsc	status,0,c
  4867  00363A  EF21  F01B         	goto	u7781
  4868  00363E  EF23  F01B         	goto	u7780
  4869  003642                     u7781:
  4870  003642  EF27  F01B         	goto	l10231
  4871  003646                     u7780:
  4872  003646                     
  4873                           ; BSR set to: 0
  4874                           ;stateMachine/touchScreenSM.c: 78:             {;stateMachine/touchScreenSM.c: 79:      
      +                                     valueX=120;
  4875  003646  0E00               	movlw	0
  4876  003648  6FB1               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4877  00364A  0E78               	movlw	120
  4878  00364C  6FB0               	movwf	touchScreenController@valueX& (0+255),b
  4879  00364E                     l10231:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;stateMachine/touchScreenSM.c: 81:             valueX=(valueX-120)/2.35;
  4883  00364E  0E66               	movlw	102
  4884  003650  6E24               	movwf	___fldiv@a^0,c
  4885  003652  0E66               	movlw	102
  4886  003654  6E25               	movwf	(___fldiv@a+1)^0,c
  4887  003656  0E16               	movlw	22
  4888  003658  6E26               	movwf	(___fldiv@a+2)^0,c
  4889  00365A  0E40               	movlw	64
  4890  00365C  6E27               	movwf	(___fldiv@a+3)^0,c
  4891  00365E  0E88               	movlw	136
  4892  003660  6F94               	movwf	??_touchScreenController& (0+255),b
  4893  003662  0EFF               	movlw	255
  4894  003664  6F95               	movwf	(??_touchScreenController+1)& (0+255),b
  4895  003666  C0B0  F096         	movff	touchScreenController@valueX,??_touchScreenController+2
  4896  00366A  C0B1  F097         	movff	touchScreenController@valueX+1,??_touchScreenController+3
  4897  00366E  5194               	movf	??_touchScreenController& (0+255),w,b
  4898  003670  2796               	addwf	(??_touchScreenController+2)& (0+255),f,b
  4899  003672  5195               	movf	(??_touchScreenController+1)& (0+255),w,b
  4900  003674  2397               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  4901  003676  C096  F012         	movff	??_touchScreenController+2,___xxtofl@val
  4902  00367A  C097  F013         	movff	??_touchScreenController+3,___xxtofl@val+1
  4903  00367E  6A14               	clrf	(___xxtofl@val+2)^0,c
  4904  003680  6A15               	clrf	(___xxtofl@val+3)^0,c
  4905  003682  0E00               	movlw	0
  4906  003684  EC4E  F01D         	call	___xxtofl
  4907  003688  C012  F020         	movff	?___xxtofl,___fldiv@b
  4908  00368C  C013  F021         	movff	?___xxtofl+1,___fldiv@b+1
  4909  003690  C014  F022         	movff	?___xxtofl+2,___fldiv@b+2
  4910  003694  C015  F023         	movff	?___xxtofl+3,___fldiv@b+3
  4911  003698  EC22  F013         	call	___fldiv	;wreg free
  4912  00369C  C020  F039         	movff	?___fldiv,___fltol@f1
  4913  0036A0  C021  F03A         	movff	?___fldiv+1,___fltol@f1+1
  4914  0036A4  C022  F03B         	movff	?___fldiv+2,___fltol@f1+2
  4915  0036A8  C023  F03C         	movff	?___fldiv+3,___fltol@f1+3
  4916  0036AC  EC75  F023         	call	___fltol	;wreg free
  4917  0036B0  C039  F0B0         	movff	?___fltol,touchScreenController@valueX
  4918  0036B4  C03A  F0B1         	movff	?___fltol+1,touchScreenController@valueX+1
  4919  0036B8                     
  4920                           ;stateMachine/touchScreenSM.c: 82:             valueX=240 -valueX;
  4921  0036B8  0100               	movlb	0	; () banked
  4922  0036BA  51B0               	movf	touchScreenController@valueX& (0+255),w,b
  4923  0036BC  08F0               	sublw	240
  4924  0036BE  6FB0               	movwf	touchScreenController@valueX& (0+255),b
  4925  0036C0  51B1               	movf	(touchScreenController@valueX+1)& (0+255),w,b
  4926  0036C2  A0D8               	btfss	status,0,c
  4927  0036C4  2AE8               	incf	wreg,f,c
  4928  0036C6  0800               	sublw	0
  4929  0036C8  6FB1               	movwf	(touchScreenController@valueX+1)& (0+255),b
  4930  0036CA                     
  4931                           ; BSR set to: 0
  4932                           ;stateMachine/touchScreenSM.c: 84:             configMeasure(1);
  4933  0036CA  0E01               	movlw	1
  4934  0036CC  EC3B  F030         	call	_configMeasure
  4935  0036D0                     l507:
  4936  0036D0  B2C2               	btfsc	194,1,c	;volatile
  4937  0036D2  EF6D  F01B         	goto	u7791
  4938  0036D6  EF6F  F01B         	goto	u7790
  4939  0036DA                     u7791:
  4940  0036DA  EF68  F01B         	goto	l507
  4941  0036DE                     u7790:
  4942  0036DE                     
  4943                           ;stateMachine/touchScreenSM.c: 86:             uint16_t valueY;;stateMachine/touchScreen
      +                          SM.c: 87:             valueY=(ADRESH<<8)+ADRESL;
  4944  0036DE  50C4               	movf	196,w,c	;volatile
  4945  0036E0  0100               	movlb	0	; () banked
  4946  0036E2  6F95               	movwf	(??_touchScreenController+1)& (0+255),b
  4947  0036E4  6B94               	clrf	??_touchScreenController& (0+255),b
  4948  0036E6  50C3               	movf	195,w,c	;volatile
  4949  0036E8  2594               	addwf	??_touchScreenController& (0+255),w,b
  4950  0036EA  6FAE               	movwf	touchScreenController@valueY& (0+255),b
  4951  0036EC  0E00               	movlw	0
  4952  0036EE  2195               	addwfc	(??_touchScreenController+1)& (0+255),w,b
  4953  0036F0  6FAF               	movwf	(touchScreenController@valueY+1)& (0+255),b
  4954                           
  4955                           ;stateMachine/touchScreenSM.c: 88:             if(valueY<=105)
  4956  0036F2  51AF               	movf	(touchScreenController@valueY+1)& (0+255),w,b
  4957  0036F4  E107               	bnz	u7801
  4958  0036F6  0E6A               	movlw	106
  4959  0036F8  5DAE               	subwf	touchScreenController@valueY& (0+255),w,b
  4960  0036FA  B0D8               	btfsc	status,0,c
  4961  0036FC  EF82  F01B         	goto	u7801
  4962  003700  EF84  F01B         	goto	u7800
  4963  003704                     u7801:
  4964  003704  EF88  F01B         	goto	l10241
  4965  003708                     u7800:
  4966  003708                     
  4967                           ; BSR set to: 0
  4968                           ;stateMachine/touchScreenSM.c: 89:             {;stateMachine/touchScreenSM.c: 90:      
      +                                     valueY=105;
  4969  003708  0E00               	movlw	0
  4970  00370A  6FAF               	movwf	(touchScreenController@valueY+1)& (0+255),b
  4971  00370C  0E69               	movlw	105
  4972  00370E  6FAE               	movwf	touchScreenController@valueY& (0+255),b
  4973  003710                     l10241:
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;stateMachine/touchScreenSM.c: 92:             valueY=(valueY-105)/2;
  4977  003710  0E97               	movlw	151
  4978  003712  6F94               	movwf	??_touchScreenController& (0+255),b
  4979  003714  0EFF               	movlw	255
  4980  003716  6F95               	movwf	(??_touchScreenController+1)& (0+255),b
  4981  003718  C0AE  F096         	movff	touchScreenController@valueY,??_touchScreenController+2
  4982  00371C  C0AF  F097         	movff	touchScreenController@valueY+1,??_touchScreenController+3
  4983  003720  5194               	movf	??_touchScreenController& (0+255),w,b
  4984  003722  2796               	addwf	(??_touchScreenController+2)& (0+255),f,b
  4985  003724  5195               	movf	(??_touchScreenController+1)& (0+255),w,b
  4986  003726  2397               	addwfc	(??_touchScreenController+3)& (0+255),f,b
  4987  003728  90D8               	bcf	status,0,c
  4988  00372A  3197               	rrcf	(??_touchScreenController+3)& (0+255),w,b
  4989  00372C  6F98               	movwf	(??_touchScreenController+4)& (0+255),b
  4990  00372E  3196               	rrcf	(??_touchScreenController+2)& (0+255),w,b
  4991  003730  6FAE               	movwf	touchScreenController@valueY& (0+255),b
  4992  003732  C098  F0AF         	movff	??_touchScreenController+4,touchScreenController@valueY+1
  4993  003736                     
  4994                           ; BSR set to: 0
  4995                           ;stateMachine/touchScreenSM.c: 93:             XF_scheduleTimer(9,evTimerPos,0);
  4996  003736  0E00               	movlw	0
  4997  003738  6E14               	movwf	(XF_scheduleTimer@tm+1)^0,c
  4998  00373A  0E09               	movlw	9
  4999  00373C  6E13               	movwf	XF_scheduleTimer@tm^0,c
  5000  00373E  0E04               	movlw	4
  5001  003740  6E15               	movwf	XF_scheduleTimer@ev^0,c
  5002  003742  0E00               	movlw	0
  5003  003744  6E16               	movwf	XF_scheduleTimer@inISR^0,c
  5004  003746  EC17  F02E         	call	_XF_scheduleTimer	;wreg free
  5005  00374A                     
  5006                           ;stateMachine/touchScreenSM.c: 96:             ADCON0=0b00101000;
  5007  00374A  0E28               	movlw	40
  5008  00374C  6EC2               	movwf	194,c	;volatile
  5009  00374E                     
  5010                           ;stateMachine/touchScreenSM.c: 97:             configTouch();
  5011  00374E  ECB6  F031         	call	_configTouch	;wreg free
  5012  003752                     
  5013                           ;stateMachine/touchScreenSM.c: 98:             INT1IF=0;
  5014  003752  90F0               	bcf	4080,0,c	;volatile
  5015  003754                     
  5016                           ;stateMachine/touchScreenSM.c: 99:             INT1IE=1;
  5017  003754  86F0               	bsf	4080,3,c	;volatile
  5018  003756                     
  5019                           ;stateMachine/touchScreenSM.c: 102:             if(PORTBbits.RB1 == 0)
  5020  003756  B281               	btfsc	129,1,c	;volatile
  5021  003758  EFB0  F01B         	goto	u7811
  5022  00375C  EFB2  F01B         	goto	u7810
  5023  003760                     u7811:
  5024  003760  EF32  F01C         	goto	l513
  5025  003764                     u7810:
  5026  003764                     
  5027                           ;stateMachine/touchScreenSM.c: 103:             {;stateMachine/touchScreenSM.c: 104:    
      +                                       sprintf(s,"X: %d",valueX);
  5028  003764  0E9A               	movlw	low touchScreenController@s
  5029  003766  0100               	movlb	0	; () banked
  5030  003768  6F84               	movwf	sprintf@s& (0+255),b
  5031  00376A  0E00               	movlw	high touchScreenController@s
  5032  00376C  6F85               	movwf	(sprintf@s+1)& (0+255),b
  5033  00376E  0EEB               	movlw	low STR_15
  5034  003770  6F86               	movwf	sprintf@fmt& (0+255),b
  5035  003772  0E7F               	movlw	high STR_15
  5036  003774  6F87               	movwf	(sprintf@fmt+1)& (0+255),b
  5037  003776  C0B0  F088         	movff	touchScreenController@valueX,?_sprintf+4
  5038  00377A  C0B1  F089         	movff	touchScreenController@valueX+1,?_sprintf+5
  5039  00377E  EC12  F030         	call	_sprintf	;wreg free
  5040  003782                     
  5041                           ;stateMachine/touchScreenSM.c: 105:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,200,0b0000000000000000,0b1111111111111111);
  5042  003782  0E9A               	movlw	low touchScreenController@s
  5043  003784  6E20               	movwf	LCD_DrawText@msg^0,c
  5044  003786  0E00               	movlw	high touchScreenController@s
  5045  003788  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5046  00378A  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  5047  00378C  6E22               	movwf	LCD_DrawText@font^0,c
  5048  00378E  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5049  003790  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5050  003792  0E01               	movlw	1
  5051  003794  6E24               	movwf	LCD_DrawText@align^0,c
  5052  003796  0E00               	movlw	0
  5053  003798  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5054  00379A  0EC8               	movlw	200
  5055  00379C  6E25               	movwf	LCD_DrawText@posX^0,c
  5056  00379E  0E00               	movlw	0
  5057  0037A0  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5058  0037A2  0EC8               	movlw	200
  5059  0037A4  6E27               	movwf	LCD_DrawText@posY^0,c
  5060  0037A6  0E00               	movlw	0
  5061  0037A8  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5062  0037AA  0E00               	movlw	0
  5063  0037AC  6E29               	movwf	LCD_DrawText@color^0,c
  5064  0037AE  0EFF               	movlw	255
  5065  0037B0  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5066  0037B2  682B               	setf	LCD_DrawText@bg_color^0,c
  5067  0037B4  EC0B  F00F         	call	_LCD_DrawText	;wreg free
  5068  0037B8                     
  5069                           ;stateMachine/touchScreenSM.c: 106:                 GameParameters_setX(g,valueX);
  5070  0037B8  C092  F012         	movff	touchScreenController@g,GameParameters_setX@s
  5071  0037BC  C093  F013         	movff	touchScreenController@g+1,GameParameters_setX@s+1
  5072  0037C0  C0B0  F014         	movff	touchScreenController@valueX,GameParameters_setX@value
  5073  0037C4  C0B1  F015         	movff	touchScreenController@valueX+1,GameParameters_setX@value+1
  5074  0037C8  ECE5  F031         	call	_GameParameters_setX	;wreg free
  5075  0037CC                     
  5076                           ;stateMachine/touchScreenSM.c: 107:                 sprintf(s,"Y: %d",valueY);
  5077  0037CC  0E9A               	movlw	low touchScreenController@s
  5078  0037CE  0100               	movlb	0	; () banked
  5079  0037D0  6F84               	movwf	sprintf@s& (0+255),b
  5080  0037D2  0E00               	movlw	high touchScreenController@s
  5081  0037D4  6F85               	movwf	(sprintf@s+1)& (0+255),b
  5082  0037D6  0EF1               	movlw	low STR_16
  5083  0037D8  6F86               	movwf	sprintf@fmt& (0+255),b
  5084  0037DA  0E7F               	movlw	high STR_16
  5085  0037DC  6F87               	movwf	(sprintf@fmt+1)& (0+255),b
  5086  0037DE  C0AE  F088         	movff	touchScreenController@valueY,?_sprintf+4
  5087  0037E2  C0AF  F089         	movff	touchScreenController@valueY+1,?_sprintf+5
  5088  0037E6  EC12  F030         	call	_sprintf	;wreg free
  5089  0037EA                     
  5090                           ;stateMachine/touchScreenSM.c: 108:                 LCD_DrawText(s,&arialNarrow_12ptFont
      +                          Info,A_RIGHT,200,250,0b0000000000000000,0b1111111111111111);
  5091  0037EA  0E9A               	movlw	low touchScreenController@s
  5092  0037EC  6E20               	movwf	LCD_DrawText@msg^0,c
  5093  0037EE  0E00               	movlw	high touchScreenController@s
  5094  0037F0  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
  5095  0037F2  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  5096  0037F4  6E22               	movwf	LCD_DrawText@font^0,c
  5097  0037F6  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  5098  0037F8  6E23               	movwf	(LCD_DrawText@font+1)^0,c
  5099  0037FA  0E01               	movlw	1
  5100  0037FC  6E24               	movwf	LCD_DrawText@align^0,c
  5101  0037FE  0E00               	movlw	0
  5102  003800  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
  5103  003802  0EC8               	movlw	200
  5104  003804  6E25               	movwf	LCD_DrawText@posX^0,c
  5105  003806  0E00               	movlw	0
  5106  003808  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
  5107  00380A  0EFA               	movlw	250
  5108  00380C  6E27               	movwf	LCD_DrawText@posY^0,c
  5109  00380E  0E00               	movlw	0
  5110  003810  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
  5111  003812  0E00               	movlw	0
  5112  003814  6E29               	movwf	LCD_DrawText@color^0,c
  5113  003816  0EFF               	movlw	255
  5114  003818  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
  5115  00381A  682B               	setf	LCD_DrawText@bg_color^0,c
  5116  00381C  EC0B  F00F         	call	_LCD_DrawText	;wreg free
  5117                           
  5118                           ;stateMachine/touchScreenSM.c: 109:                 GameParameters_setY(g,valueY);
  5119  003820  C092  F012         	movff	touchScreenController@g,GameParameters_setY@s
  5120  003824  C093  F013         	movff	touchScreenController@g+1,GameParameters_setY@s+1
  5121  003828  C0AE  F014         	movff	touchScreenController@valueY,GameParameters_setY@value
  5122  00382C  C0AF  F015         	movff	touchScreenController@valueY+1,GameParameters_setY@value+1
  5123  003830  ECDA  F031         	call	_GameParameters_setY	;wreg free
  5124  003834  EF32  F01C         	goto	l513
  5125  003838                     l10267:
  5126  003838  0100               	movlb	0	; () banked
  5127  00383A  51DE               	movf	_touchScreenState& (0+255),w,b
  5128  00383C  6F94               	movwf	??_touchScreenController& (0+255),b
  5129  00383E  6B95               	clrf	(??_touchScreenController+1)& (0+255),b
  5130                           
  5131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5132                           ; Switch size 1, requested type "simple"
  5133                           ; Number of cases is 1, Range of values is 0 to 0
  5134                           ; switch strategies available:
  5135                           ; Name         Instructions Cycles
  5136                           ; simple_byte            4     3 (average)
  5137                           ;	Chosen strategy is simple_byte
  5138  003840  5195               	movf	(??_touchScreenController+1)& (0+255),w,b
  5139  003842  0A00               	xorlw	0	; case 0
  5140  003844  B4D8               	btfsc	status,2,c
  5141  003846  EF27  F01C         	goto	l10703
  5142  00384A  EF32  F01C         	goto	l513
  5143  00384E                     l10703:
  5144                           
  5145                           ; BSR set to: 0
  5146                           ; Switch size 1, requested type "simple"
  5147                           ; Number of cases is 2, Range of values is 0 to 1
  5148                           ; switch strategies available:
  5149                           ; Name         Instructions Cycles
  5150                           ; simple_byte            7     4 (average)
  5151                           ;	Chosen strategy is simple_byte
  5152  00384E  5194               	movf	??_touchScreenController& (0+255),w,b
  5153  003850  0A00               	xorlw	0	; case 0
  5154  003852  B4D8               	btfsc	status,2,c
  5155  003854  EFFE  F01A         	goto	l500
  5156  003858  0A01               	xorlw	1	; case 1
  5157  00385A  B4D8               	btfsc	status,2,c
  5158  00385C  EF03  F01B         	goto	l502
  5159  003860  EF32  F01C         	goto	l513
  5160  003864                     l513:
  5161  003864  0012               	return		;funcret
  5162  003866                     __end_of_touchScreenController:
  5163                           	callstack 0
  5164                           
  5165 ;; *************** function _configTouch *****************
  5166 ;; Defined at:
  5167 ;;		line 120 in file "stateMachine/touchScreenSM.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;		None
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;		None
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  1    wreg      void 
  5174 ;; Registers used:
  5175 ;;		wreg, status,2
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5181 ;;      Params:         0       0       0       0       0       0       0
  5182 ;;      Locals:         0       0       0       0       0       0       0
  5183 ;;      Temps:          0       0       0       0       0       0       0
  5184 ;;      Totals:         0       0       0       0       0       0       0
  5185 ;;Total ram usage:        0 bytes
  5186 ;; Hardware stack levels used: 1
  5187 ;; Hardware stack levels required when called: 4
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_touchScreenInit
  5192 ;;		_touchScreenController
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text13
  5197  00636C                     __ptext13:
  5198                           	callstack 0
  5199  00636C                     _configTouch:
  5200                           	callstack 23
  5201  00636C                     
  5202                           ;stateMachine/touchScreenSM.c: 122:     ANSB1=0;
  5203  00636C  010F               	movlb	15	; () banked
  5204  00636E  9339               	bcf	57,1,b	;volatile
  5205                           
  5206                           ;stateMachine/touchScreenSM.c: 123:     ANSB2=0;
  5207  006370  9539               	bcf	57,2,b	;volatile
  5208                           
  5209                           ;stateMachine/touchScreenSM.c: 124:     TRISB2=0;
  5210  006372  9493               	bcf	3987,2,c	;volatile
  5211                           
  5212                           ;stateMachine/touchScreenSM.c: 125:     LATB2=0;
  5213  006374  948A               	bcf	3978,2,c	;volatile
  5214                           
  5215                           ;stateMachine/touchScreenSM.c: 126:     TRISB1=1;
  5216  006376  8293               	bsf	3987,1,c	;volatile
  5217                           
  5218                           ;stateMachine/touchScreenSM.c: 127:     RBPU=0;
  5219  006378  9EF1               	bcf	4081,7,c	;volatile
  5220  00637A                     
  5221                           ; BSR set to: 15
  5222                           ;stateMachine/touchScreenSM.c: 128:     WPUB=0b00000010;
  5223  00637A  0E02               	movlw	2
  5224  00637C  6E61               	movwf	97,c	;volatile
  5225  00637E                     
  5226                           ; BSR set to: 15
  5227                           ;stateMachine/touchScreenSM.c: 129:     TRISB3=1;
  5228  00637E  8693               	bsf	3987,3,c	;volatile
  5229  006380                     
  5230                           ; BSR set to: 15
  5231                           ;stateMachine/touchScreenSM.c: 130:     TRISB4=1;
  5232  006380  8893               	bsf	3987,4,c	;volatile
  5233  006382                     
  5234                           ; BSR set to: 15
  5235                           ;stateMachine/touchScreenSM.c: 131:     INT1IE=1;
  5236  006382  86F0               	bsf	4080,3,c	;volatile
  5237  006384                     
  5238                           ; BSR set to: 15
  5239  006384  0012               	return		;funcret
  5240  006386                     __end_of_configTouch:
  5241                           	callstack 0
  5242                           
  5243 ;; *************** function _configMeasure *****************
  5244 ;; Defined at:
  5245 ;;		line 133 in file "stateMachine/touchScreenSM.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;  channel         1    wreg     _Bool 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  channel         1   17[COMRAM] _Bool 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      void 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5259 ;;      Params:         0       0       0       0       0       0       0
  5260 ;;      Locals:         1       0       0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0
  5262 ;;      Totals:         1       0       0       0       0       0       0
  5263 ;;Total ram usage:        1 bytes
  5264 ;; Hardware stack levels used: 1
  5265 ;; Hardware stack levels required when called: 4
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_touchScreenController
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text14
  5274  006076                     __ptext14:
  5275                           	callstack 0
  5276  006076                     _configMeasure:
  5277                           	callstack 23
  5278                           
  5279                           ; BSR set to: 15
  5280                           ;incstack = 0
  5281                           ;configMeasure@channel stored from wreg
  5282  006076  6E12               	movwf	configMeasure@channel^0,c
  5283  006078                     
  5284                           ;stateMachine/touchScreenSM.c: 133: void configMeasure(_Bool channel);stateMachine/touch
      +                          ScreenSM.c: 134: {;stateMachine/touchScreenSM.c: 135:     if(channel==0)
  5285  006078  5012               	movf	configMeasure@channel^0,w,c
  5286  00607A  A4D8               	btfss	status,2,c
  5287  00607C  EF42  F030         	goto	u7201
  5288  006080  EF44  F030         	goto	u7200
  5289  006084                     u7201:
  5290  006084  EF4F  F030         	goto	l9863
  5291  006088                     u7200:
  5292  006088                     
  5293                           ;stateMachine/touchScreenSM.c: 136:     {;stateMachine/touchScreenSM.c: 137:         ANS
      +                          B1=0;
  5294  006088  010F               	movlb	15	; () banked
  5295  00608A  9339               	bcf	57,1,b	;volatile
  5296                           
  5297                           ;stateMachine/touchScreenSM.c: 138:         TRISB1=0;
  5298  00608C  9293               	bcf	3987,1,c	;volatile
  5299                           
  5300                           ;stateMachine/touchScreenSM.c: 139:         LATB1=0;
  5301  00608E  928A               	bcf	3978,1,c	;volatile
  5302                           
  5303                           ;stateMachine/touchScreenSM.c: 140:         TRISB3=0;
  5304  006090  9693               	bcf	3987,3,c	;volatile
  5305                           
  5306                           ;stateMachine/touchScreenSM.c: 141:         LATB3=1;
  5307  006092  868A               	bsf	3978,3,c	;volatile
  5308                           
  5309                           ;stateMachine/touchScreenSM.c: 142:         TRISB4=1;
  5310  006094  8893               	bsf	3987,4,c	;volatile
  5311                           
  5312                           ;stateMachine/touchScreenSM.c: 143:         TRISB2=1;
  5313  006096  8493               	bsf	3987,2,c	;volatile
  5314                           
  5315                           ;stateMachine/touchScreenSM.c: 144:         ANSB2=1;
  5316  006098  8539               	bsf	57,2,b	;volatile
  5317  00609A                     
  5318                           ; BSR set to: 15
  5319                           ;stateMachine/touchScreenSM.c: 145:         ADCON0=0b00100011;
  5320  00609A  0E23               	movlw	35
  5321  00609C  6EC2               	movwf	194,c	;volatile
  5322  00609E                     l9863:
  5323                           
  5324                           ;stateMachine/touchScreenSM.c: 147:     if(channel==1)
  5325  00609E  0412               	decf	configMeasure@channel^0,w,c
  5326  0060A0  A4D8               	btfss	status,2,c
  5327  0060A2  EF55  F030         	goto	u7211
  5328  0060A6  EF57  F030         	goto	u7210
  5329  0060AA                     u7211:
  5330  0060AA  EF62  F030         	goto	l521
  5331  0060AE                     u7210:
  5332  0060AE                     
  5333                           ;stateMachine/touchScreenSM.c: 148:     {;stateMachine/touchScreenSM.c: 149:         ANS
      +                          B2=0;
  5334  0060AE  010F               	movlb	15	; () banked
  5335  0060B0  9539               	bcf	57,2,b	;volatile
  5336                           
  5337                           ;stateMachine/touchScreenSM.c: 150:         TRISB2=0;
  5338  0060B2  9493               	bcf	3987,2,c	;volatile
  5339                           
  5340                           ;stateMachine/touchScreenSM.c: 151:         LATB2=0;
  5341  0060B4  948A               	bcf	3978,2,c	;volatile
  5342                           
  5343                           ;stateMachine/touchScreenSM.c: 152:         TRISB4=0;
  5344  0060B6  9893               	bcf	3987,4,c	;volatile
  5345                           
  5346                           ;stateMachine/touchScreenSM.c: 153:         LATB4=1;
  5347  0060B8  888A               	bsf	3978,4,c	;volatile
  5348                           
  5349                           ;stateMachine/touchScreenSM.c: 154:         TRISB3=1;
  5350  0060BA  8693               	bsf	3987,3,c	;volatile
  5351                           
  5352                           ;stateMachine/touchScreenSM.c: 155:         TRISB1=1;
  5353  0060BC  8293               	bsf	3987,1,c	;volatile
  5354                           
  5355                           ;stateMachine/touchScreenSM.c: 156:         ANSB1=1;
  5356  0060BE  8339               	bsf	57,1,b	;volatile
  5357  0060C0                     
  5358                           ; BSR set to: 15
  5359                           ;stateMachine/touchScreenSM.c: 157:         ADCON0=0b00101011;
  5360  0060C0  0E2B               	movlw	43
  5361  0060C2  6EC2               	movwf	194,c	;volatile
  5362  0060C4                     l521:
  5363  0060C4  0012               	return		;funcret
  5364  0060C6                     __end_of_configMeasure:
  5365                           	callstack 0
  5366                           
  5367 ;; *************** function ___xxtofl *****************
  5368 ;; Defined at:
  5369 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  sign            1    wreg     unsigned char 
  5372 ;;  val             4   17[COMRAM] long 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  sign            1   25[COMRAM] unsigned char 
  5375 ;;  arg             4   27[COMRAM] unsigned long 
  5376 ;;  exp             1   26[COMRAM] unsigned char 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  4   17[COMRAM] unsigned char 
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5386 ;;      Params:         4       0       0       0       0       0       0
  5387 ;;      Locals:         6       0       0       0       0       0       0
  5388 ;;      Temps:          4       0       0       0       0       0       0
  5389 ;;      Totals:        14       0       0       0       0       0       0
  5390 ;;Total ram usage:       14 bytes
  5391 ;; Hardware stack levels used: 1
  5392 ;; Hardware stack levels required when called: 4
  5393 ;; This function calls:
  5394 ;;		Nothing
  5395 ;; This function is called by:
  5396 ;;		_touchScreenController
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text15
  5401  003A9C                     __ptext15:
  5402                           	callstack 0
  5403  003A9C                     ___xxtofl:
  5404                           	callstack 23
  5405                           
  5406                           ;incstack = 0
  5407                           ;___xxtofl@sign stored from wreg
  5408  003A9C  6E1A               	movwf	___xxtofl@sign^0,c
  5409  003A9E  501A               	movf	___xxtofl@sign^0,w,c
  5410  003AA0  B4D8               	btfsc	status,2,c
  5411  003AA2  EF55  F01D         	goto	u7671
  5412  003AA6  EF57  F01D         	goto	u7670
  5413  003AAA                     u7671:
  5414  003AAA  EF79  F01D         	goto	l1466
  5415  003AAE                     u7670:
  5416  003AAE  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5417  003AB0  EF5E  F01D         	goto	u7680
  5418  003AB4  EF5C  F01D         	goto	u7681
  5419  003AB8                     u7681:
  5420  003AB8  EF79  F01D         	goto	l1466
  5421  003ABC                     u7680:
  5422  003ABC  C012  F016         	movff	___xxtofl@val,??___xxtofl
  5423  003AC0  C013  F017         	movff	___xxtofl@val+1,??___xxtofl+1
  5424  003AC4  C014  F018         	movff	___xxtofl@val+2,??___xxtofl+2
  5425  003AC8  C015  F019         	movff	___xxtofl@val+3,??___xxtofl+3
  5426  003ACC  1E16               	comf	??___xxtofl^0,f,c
  5427  003ACE  1E17               	comf	(??___xxtofl+1)^0,f,c
  5428  003AD0  1E18               	comf	(??___xxtofl+2)^0,f,c
  5429  003AD2  1E19               	comf	(??___xxtofl+3)^0,f,c
  5430  003AD4  2A16               	incf	??___xxtofl^0,f,c
  5431  003AD6  0E00               	movlw	0
  5432  003AD8  2217               	addwfc	(??___xxtofl+1)^0,f,c
  5433  003ADA  2218               	addwfc	(??___xxtofl+2)^0,f,c
  5434  003ADC  2219               	addwfc	(??___xxtofl+3)^0,f,c
  5435  003ADE  C016  F01C         	movff	??___xxtofl,___xxtofl@arg
  5436  003AE2  C017  F01D         	movff	??___xxtofl+1,___xxtofl@arg+1
  5437  003AE6  C018  F01E         	movff	??___xxtofl+2,___xxtofl@arg+2
  5438  003AEA  C019  F01F         	movff	??___xxtofl+3,___xxtofl@arg+3
  5439  003AEE  EF81  F01D         	goto	l10159
  5440  003AF2                     l1466:
  5441  003AF2  C012  F01C         	movff	___xxtofl@val,___xxtofl@arg
  5442  003AF6  C013  F01D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5443  003AFA  C014  F01E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5444  003AFE  C015  F01F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5445  003B02                     l10159:
  5446  003B02  5012               	movf	___xxtofl@val^0,w,c
  5447  003B04  1013               	iorwf	(___xxtofl@val+1)^0,w,c
  5448  003B06  1014               	iorwf	(___xxtofl@val+2)^0,w,c
  5449  003B08  1015               	iorwf	(___xxtofl@val+3)^0,w,c
  5450  003B0A  A4D8               	btfss	status,2,c
  5451  003B0C  EF8A  F01D         	goto	u7691
  5452  003B10  EF8C  F01D         	goto	u7690
  5453  003B14                     u7691:
  5454  003B14  EF96  F01D         	goto	l10165
  5455  003B18                     u7690:
  5456  003B18  0E00               	movlw	0
  5457  003B1A  6E12               	movwf	?___xxtofl^0,c
  5458  003B1C  0E00               	movlw	0
  5459  003B1E  6E13               	movwf	(?___xxtofl+1)^0,c
  5460  003B20  0E00               	movlw	0
  5461  003B22  6E14               	movwf	(?___xxtofl+2)^0,c
  5462  003B24  0E00               	movlw	0
  5463  003B26  6E15               	movwf	(?___xxtofl+3)^0,c
  5464  003B28  EF27  F01E         	goto	l1469
  5465  003B2C                     l10165:
  5466  003B2C  0E96               	movlw	150
  5467  003B2E  6E1B               	movwf	___xxtofl@exp^0,c
  5468  003B30  EFA0  F01D         	goto	l10169
  5469  003B34                     l10167:
  5470  003B34  2A1B               	incf	___xxtofl@exp^0,f,c
  5471  003B36  90D8               	bcf	status,0,c
  5472  003B38  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5473  003B3A  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5474  003B3C  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5475  003B3E  321C               	rrcf	___xxtofl@arg^0,f,c
  5476  003B40                     l10169:
  5477  003B40  0E00               	movlw	0
  5478  003B42  141C               	andwf	___xxtofl@arg^0,w,c
  5479  003B44  6E16               	movwf	??___xxtofl^0,c
  5480  003B46  0E00               	movlw	0
  5481  003B48  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  5482  003B4A  6E17               	movwf	(??___xxtofl+1)^0,c
  5483  003B4C  0E00               	movlw	0
  5484  003B4E  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  5485  003B50  6E18               	movwf	(??___xxtofl+2)^0,c
  5486  003B52  0EFE               	movlw	254
  5487  003B54  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  5488  003B56  6E19               	movwf	(??___xxtofl+3)^0,c
  5489  003B58  5016               	movf	??___xxtofl^0,w,c
  5490  003B5A  1017               	iorwf	(??___xxtofl+1)^0,w,c
  5491  003B5C  1018               	iorwf	(??___xxtofl+2)^0,w,c
  5492  003B5E  1019               	iorwf	(??___xxtofl+3)^0,w,c
  5493  003B60  A4D8               	btfss	status,2,c
  5494  003B62  EFB5  F01D         	goto	u7701
  5495  003B66  EFB7  F01D         	goto	u7700
  5496  003B6A                     u7701:
  5497  003B6A  EF9A  F01D         	goto	l10167
  5498  003B6E                     u7700:
  5499  003B6E  EFC5  F01D         	goto	l1473
  5500  003B72                     l10171:
  5501  003B72  2A1B               	incf	___xxtofl@exp^0,f,c
  5502  003B74  0E01               	movlw	1
  5503  003B76  261C               	addwf	___xxtofl@arg^0,f,c
  5504  003B78  0E00               	movlw	0
  5505  003B7A  221D               	addwfc	(___xxtofl@arg+1)^0,f,c
  5506  003B7C  221E               	addwfc	(___xxtofl@arg+2)^0,f,c
  5507  003B7E  221F               	addwfc	(___xxtofl@arg+3)^0,f,c
  5508  003B80  90D8               	bcf	status,0,c
  5509  003B82  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  5510  003B84  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  5511  003B86  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  5512  003B88  321C               	rrcf	___xxtofl@arg^0,f,c
  5513  003B8A                     l1473:
  5514  003B8A  0E00               	movlw	0
  5515  003B8C  141C               	andwf	___xxtofl@arg^0,w,c
  5516  003B8E  6E16               	movwf	??___xxtofl^0,c
  5517  003B90  0E00               	movlw	0
  5518  003B92  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  5519  003B94  6E17               	movwf	(??___xxtofl+1)^0,c
  5520  003B96  0E00               	movlw	0
  5521  003B98  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  5522  003B9A  6E18               	movwf	(??___xxtofl+2)^0,c
  5523  003B9C  0EFF               	movlw	255
  5524  003B9E  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  5525  003BA0  6E19               	movwf	(??___xxtofl+3)^0,c
  5526  003BA2  5016               	movf	??___xxtofl^0,w,c
  5527  003BA4  1017               	iorwf	(??___xxtofl+1)^0,w,c
  5528  003BA6  1018               	iorwf	(??___xxtofl+2)^0,w,c
  5529  003BA8  1019               	iorwf	(??___xxtofl+3)^0,w,c
  5530  003BAA  A4D8               	btfss	status,2,c
  5531  003BAC  EFDA  F01D         	goto	u7711
  5532  003BB0  EFDC  F01D         	goto	u7710
  5533  003BB4                     u7711:
  5534  003BB4  EFB9  F01D         	goto	l10171
  5535  003BB8                     u7710:
  5536  003BB8  EFE4  F01D         	goto	l10179
  5537  003BBC                     l10177:
  5538  003BBC  061B               	decf	___xxtofl@exp^0,f,c
  5539  003BBE  90D8               	bcf	status,0,c
  5540  003BC0  361C               	rlcf	___xxtofl@arg^0,f,c
  5541  003BC2  361D               	rlcf	(___xxtofl@arg+1)^0,f,c
  5542  003BC4  361E               	rlcf	(___xxtofl@arg+2)^0,f,c
  5543  003BC6  361F               	rlcf	(___xxtofl@arg+3)^0,f,c
  5544  003BC8                     l10179:
  5545  003BC8  BE1E               	btfsc	(___xxtofl@arg+2)^0,7,c
  5546  003BCA  EFE9  F01D         	goto	u7721
  5547  003BCE  EFEB  F01D         	goto	u7720
  5548  003BD2                     u7721:
  5549  003BD2  EFF3  F01D         	goto	l1480
  5550  003BD6                     u7720:
  5551  003BD6  0E02               	movlw	2
  5552  003BD8  601B               	cpfslt	___xxtofl@exp^0,c
  5553  003BDA  EFF1  F01D         	goto	u7731
  5554  003BDE  EFF3  F01D         	goto	u7730
  5555  003BE2                     u7731:
  5556  003BE2  EFDE  F01D         	goto	l10177
  5557  003BE6                     u7730:
  5558  003BE6                     l1480:
  5559  003BE6  B01B               	btfsc	___xxtofl@exp^0,0,c
  5560  003BE8  EFF8  F01D         	goto	u7741
  5561  003BEC  EFFA  F01D         	goto	u7740
  5562  003BF0                     u7741:
  5563  003BF0  EFFB  F01D         	goto	l10185
  5564  003BF4                     u7740:
  5565  003BF4  9E1E               	bcf	(___xxtofl@arg+2)^0,7,c
  5566  003BF6                     l10185:
  5567  003BF6  90D8               	bcf	status,0,c
  5568  003BF8  321B               	rrcf	___xxtofl@exp^0,f,c
  5569  003BFA  C01B  F016         	movff	___xxtofl@exp,??___xxtofl
  5570  003BFE  6A17               	clrf	(??___xxtofl+1)^0,c
  5571  003C00  6A18               	clrf	(??___xxtofl+2)^0,c
  5572  003C02  6A19               	clrf	(??___xxtofl+3)^0,c
  5573  003C04  C016  F019         	movff	??___xxtofl,??___xxtofl+3
  5574  003C08  6A18               	clrf	(??___xxtofl+2)^0,c
  5575  003C0A  6A17               	clrf	(??___xxtofl+1)^0,c
  5576  003C0C  6A16               	clrf	??___xxtofl^0,c
  5577  003C0E  5016               	movf	??___xxtofl^0,w,c
  5578  003C10  121C               	iorwf	___xxtofl@arg^0,f,c
  5579  003C12  5017               	movf	(??___xxtofl+1)^0,w,c
  5580  003C14  121D               	iorwf	(___xxtofl@arg+1)^0,f,c
  5581  003C16  5018               	movf	(??___xxtofl+2)^0,w,c
  5582  003C18  121E               	iorwf	(___xxtofl@arg+2)^0,f,c
  5583  003C1A  5019               	movf	(??___xxtofl+3)^0,w,c
  5584  003C1C  121F               	iorwf	(___xxtofl@arg+3)^0,f,c
  5585  003C1E  501A               	movf	___xxtofl@sign^0,w,c
  5586  003C20  B4D8               	btfsc	status,2,c
  5587  003C22  EF15  F01E         	goto	u7751
  5588  003C26  EF17  F01E         	goto	u7750
  5589  003C2A                     u7751:
  5590  003C2A  EF1F  F01E         	goto	l10195
  5591  003C2E                     u7750:
  5592  003C2E  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5593  003C30  EF1E  F01E         	goto	u7760
  5594  003C34  EF1C  F01E         	goto	u7761
  5595  003C38                     u7761:
  5596  003C38  EF1F  F01E         	goto	l10195
  5597  003C3C                     u7760:
  5598  003C3C  8E1F               	bsf	(___xxtofl@arg+3)^0,7,c
  5599  003C3E                     l10195:
  5600  003C3E  C01C  F012         	movff	___xxtofl@arg,?___xxtofl
  5601  003C42  C01D  F013         	movff	___xxtofl@arg+1,?___xxtofl+1
  5602  003C46  C01E  F014         	movff	___xxtofl@arg+2,?___xxtofl+2
  5603  003C4A  C01F  F015         	movff	___xxtofl@arg+3,?___xxtofl+3
  5604  003C4E                     l1469:
  5605  003C4E  0012               	return		;funcret
  5606  003C50                     __end_of___xxtofl:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function ___fltol *****************
  5610 ;; Defined at:
  5611 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  f1              4   56[COMRAM] unsigned char 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  exp1            1   65[COMRAM] unsigned char 
  5616 ;;  sign1           1   64[COMRAM] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  4   56[COMRAM] long 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5626 ;;      Params:         4       0       0       0       0       0       0
  5627 ;;      Locals:         2       0       0       0       0       0       0
  5628 ;;      Temps:          4       0       0       0       0       0       0
  5629 ;;      Totals:        10       0       0       0       0       0       0
  5630 ;;Total ram usage:       10 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; Hardware stack levels required when called: 4
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_touchScreenController
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text16
  5641  0046EA                     __ptext16:
  5642                           	callstack 0
  5643  0046EA                     ___fltol:
  5644                           	callstack 23
  5645  0046EA  343B               	rlcf	(___fltol@f1+2)^0,w,c
  5646  0046EC  343C               	rlcf	(___fltol@f1+3)^0,w,c
  5647  0046EE  6E42               	movwf	___fltol@exp1^0,c
  5648  0046F0  5042               	movf	___fltol@exp1^0,w,c
  5649  0046F2  A4D8               	btfss	status,2,c
  5650  0046F4  EF7E  F023         	goto	u7601
  5651  0046F8  EF80  F023         	goto	u7600
  5652  0046FC                     u7601:
  5653  0046FC  EF8A  F023         	goto	l10115
  5654  004700                     u7600:
  5655  004700                     l10111:
  5656  004700  0E00               	movlw	0
  5657  004702  6E39               	movwf	?___fltol^0,c
  5658  004704  0E00               	movlw	0
  5659  004706  6E3A               	movwf	(?___fltol+1)^0,c
  5660  004708  0E00               	movlw	0
  5661  00470A  6E3B               	movwf	(?___fltol+2)^0,c
  5662  00470C  0E00               	movlw	0
  5663  00470E  6E3C               	movwf	(?___fltol+3)^0,c
  5664  004710  EFF7  F023         	goto	l1108
  5665  004714                     l10115:
  5666  004714  C039  F03D         	movff	___fltol@f1,??___fltol
  5667  004718  C03A  F03E         	movff	___fltol@f1+1,??___fltol+1
  5668  00471C  C03B  F03F         	movff	___fltol@f1+2,??___fltol+2
  5669  004720  C03C  F040         	movff	___fltol@f1+3,??___fltol+3
  5670  004724  0E20               	movlw	32
  5671  004726  EF9A  F023         	goto	u7610
  5672  00472A                     u7615:
  5673  00472A  90D8               	bcf	status,0,c
  5674  00472C  3240               	rrcf	(??___fltol+3)^0,f,c
  5675  00472E  323F               	rrcf	(??___fltol+2)^0,f,c
  5676  004730  323E               	rrcf	(??___fltol+1)^0,f,c
  5677  004732  323D               	rrcf	??___fltol^0,f,c
  5678  004734                     u7610:
  5679  004734  2EE8               	decfsz	wreg,f,c
  5680  004736  EF95  F023         	goto	u7615
  5681  00473A  503D               	movf	??___fltol^0,w,c
  5682  00473C  6E41               	movwf	___fltol@sign1^0,c
  5683  00473E  8E3B               	bsf	(___fltol@f1+2)^0,7,c
  5684  004740  0EFF               	movlw	255
  5685  004742  1639               	andwf	___fltol@f1^0,f,c
  5686  004744  0EFF               	movlw	255
  5687  004746  163A               	andwf	(___fltol@f1+1)^0,f,c
  5688  004748  0EFF               	movlw	255
  5689  00474A  163B               	andwf	(___fltol@f1+2)^0,f,c
  5690  00474C  0E00               	movlw	0
  5691  00474E  163C               	andwf	(___fltol@f1+3)^0,f,c
  5692  004750  0E96               	movlw	150
  5693  004752  5E42               	subwf	___fltol@exp1^0,f,c
  5694  004754  BE42               	btfsc	___fltol@exp1^0,7,c
  5695  004756  EFB1  F023         	goto	u7620
  5696  00475A  EFAF  F023         	goto	u7621
  5697  00475E                     u7621:
  5698  00475E  EFC7  F023         	goto	l10135
  5699  004762                     u7620:
  5700  004762  5042               	movf	___fltol@exp1^0,w,c
  5701  004764  0A80               	xorlw	128
  5702  004766  0F97               	addlw	151
  5703  004768  B0D8               	btfsc	status,0,c
  5704  00476A  EFB9  F023         	goto	u7631
  5705  00476E  EFBB  F023         	goto	u7630
  5706  004772                     u7631:
  5707  004772  EFBD  F023         	goto	l10131
  5708  004776                     u7630:
  5709  004776  EF80  F023         	goto	l10111
  5710  00477A                     l10131:
  5711  00477A  90D8               	bcf	status,0,c
  5712  00477C  323C               	rrcf	(___fltol@f1+3)^0,f,c
  5713  00477E  323B               	rrcf	(___fltol@f1+2)^0,f,c
  5714  004780  323A               	rrcf	(___fltol@f1+1)^0,f,c
  5715  004782  3239               	rrcf	___fltol@f1^0,f,c
  5716  004784  3E42               	incfsz	___fltol@exp1^0,f,c
  5717  004786  EFBD  F023         	goto	l10131
  5718  00478A  EFDF  F023         	goto	l10145
  5719  00478E                     l10135:
  5720  00478E  0E1F               	movlw	31
  5721  004790  6442               	cpfsgt	___fltol@exp1^0,c
  5722  004792  EFCD  F023         	goto	u7641
  5723  004796  EFCF  F023         	goto	u7640
  5724  00479A                     u7641:
  5725  00479A  EFD7  F023         	goto	l10143
  5726  00479E                     u7640:
  5727  00479E  EF80  F023         	goto	l10111
  5728  0047A2                     l10141:
  5729  0047A2  90D8               	bcf	status,0,c
  5730  0047A4  3639               	rlcf	___fltol@f1^0,f,c
  5731  0047A6  363A               	rlcf	(___fltol@f1+1)^0,f,c
  5732  0047A8  363B               	rlcf	(___fltol@f1+2)^0,f,c
  5733  0047AA  363C               	rlcf	(___fltol@f1+3)^0,f,c
  5734  0047AC  0642               	decf	___fltol@exp1^0,f,c
  5735  0047AE                     l10143:
  5736  0047AE  5042               	movf	___fltol@exp1^0,w,c
  5737  0047B0  A4D8               	btfss	status,2,c
  5738  0047B2  EFDD  F023         	goto	u7651
  5739  0047B6  EFDF  F023         	goto	u7650
  5740  0047BA                     u7651:
  5741  0047BA  EFD1  F023         	goto	l10141
  5742  0047BE                     u7650:
  5743  0047BE                     l10145:
  5744  0047BE  5041               	movf	___fltol@sign1^0,w,c
  5745  0047C0  B4D8               	btfsc	status,2,c
  5746  0047C2  EFE5  F023         	goto	u7661
  5747  0047C6  EFE7  F023         	goto	u7660
  5748  0047CA                     u7661:
  5749  0047CA  EFEF  F023         	goto	l10149
  5750  0047CE                     u7660:
  5751  0047CE  1E3C               	comf	(___fltol@f1+3)^0,f,c
  5752  0047D0  1E3B               	comf	(___fltol@f1+2)^0,f,c
  5753  0047D2  1E3A               	comf	(___fltol@f1+1)^0,f,c
  5754  0047D4  6C39               	negf	___fltol@f1^0,c
  5755  0047D6  0E00               	movlw	0
  5756  0047D8  223A               	addwfc	(___fltol@f1+1)^0,f,c
  5757  0047DA  223B               	addwfc	(___fltol@f1+2)^0,f,c
  5758  0047DC  223C               	addwfc	(___fltol@f1+3)^0,f,c
  5759  0047DE                     l10149:
  5760  0047DE  C039  F039         	movff	___fltol@f1,?___fltol
  5761  0047E2  C03A  F03A         	movff	___fltol@f1+1,?___fltol+1
  5762  0047E6  C03B  F03B         	movff	___fltol@f1+2,?___fltol+2
  5763  0047EA  C03C  F03C         	movff	___fltol@f1+3,?___fltol+3
  5764  0047EE                     l1108:
  5765  0047EE  0012               	return		;funcret
  5766  0047F0                     __end_of___fltol:
  5767                           	callstack 0
  5768                           
  5769 ;; *************** function ___fldiv *****************
  5770 ;; Defined at:
  5771 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  b               4   31[COMRAM] long 
  5774 ;;  a               4   35[COMRAM] long 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  grs             4   50[COMRAM] unsigned long 
  5777 ;;  rem             4   43[COMRAM] unsigned long 
  5778 ;;  new_exp         2   48[COMRAM] short 
  5779 ;;  aexp            1   55[COMRAM] unsigned char 
  5780 ;;  bexp            1   54[COMRAM] unsigned char 
  5781 ;;  sign            1   47[COMRAM] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  4   31[COMRAM] unsigned char 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5791 ;;      Params:         8       0       0       0       0       0       0
  5792 ;;      Locals:        13       0       0       0       0       0       0
  5793 ;;      Temps:          4       0       0       0       0       0       0
  5794 ;;      Totals:        25       0       0       0       0       0       0
  5795 ;;Total ram usage:       25 bytes
  5796 ;; Hardware stack levels used: 1
  5797 ;; Hardware stack levels required when called: 4
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_touchScreenController
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text17
  5806  002644                     __ptext17:
  5807                           	callstack 0
  5808  002644                     ___fldiv:
  5809                           	callstack 23
  5810  002644  5023               	movf	(___fldiv@b+3)^0,w,c
  5811  002646  0B80               	andlw	128
  5812  002648  6E30               	movwf	___fldiv@sign^0,c
  5813  00264A  5023               	movf	(___fldiv@b+3)^0,w,c
  5814  00264C  2423               	addwf	(___fldiv@b+3)^0,w,c
  5815  00264E  6E37               	movwf	___fldiv@bexp^0,c
  5816  002650  AE22               	btfss	(___fldiv@b+2)^0,7,c
  5817  002652  EF2D  F013         	goto	u7371
  5818  002656  EF2F  F013         	goto	u7370
  5819  00265A                     u7371:
  5820  00265A  EF30  F013         	goto	l9977
  5821  00265E                     u7370:
  5822  00265E  8037               	bsf	___fldiv@bexp^0,0,c
  5823  002660                     l9977:
  5824  002660  5037               	movf	___fldiv@bexp^0,w,c
  5825  002662  B4D8               	btfsc	status,2,c
  5826  002664  EF36  F013         	goto	u7381
  5827  002668  EF38  F013         	goto	u7380
  5828  00266C                     u7381:
  5829  00266C  EF4D  F013         	goto	l9987
  5830  002670                     u7380:
  5831  002670  2837               	incf	___fldiv@bexp^0,w,c
  5832  002672  A4D8               	btfss	status,2,c
  5833  002674  EF3E  F013         	goto	u7391
  5834  002678  EF40  F013         	goto	u7390
  5835  00267C                     u7391:
  5836  00267C  EF48  F013         	goto	l9983
  5837  002680                     u7390:
  5838  002680  0E00               	movlw	0
  5839  002682  6E20               	movwf	___fldiv@b^0,c
  5840  002684  0E00               	movlw	0
  5841  002686  6E21               	movwf	(___fldiv@b+1)^0,c
  5842  002688  0E00               	movlw	0
  5843  00268A  6E22               	movwf	(___fldiv@b+2)^0,c
  5844  00268C  0E00               	movlw	0
  5845  00268E  6E23               	movwf	(___fldiv@b+3)^0,c
  5846  002690                     l9983:
  5847  002690  8E22               	bsf	(___fldiv@b+2)^0,7,c
  5848  002692  0E00               	movlw	0
  5849  002694  6E23               	movwf	(___fldiv@b+3)^0,c
  5850  002696  EF55  F013         	goto	l9989
  5851  00269A                     l9987:
  5852  00269A  0E00               	movlw	0
  5853  00269C  6E20               	movwf	___fldiv@b^0,c
  5854  00269E  0E00               	movlw	0
  5855  0026A0  6E21               	movwf	(___fldiv@b+1)^0,c
  5856  0026A2  0E00               	movlw	0
  5857  0026A4  6E22               	movwf	(___fldiv@b+2)^0,c
  5858  0026A6  0E00               	movlw	0
  5859  0026A8  6E23               	movwf	(___fldiv@b+3)^0,c
  5860  0026AA                     l9989:
  5861  0026AA  5027               	movf	(___fldiv@a+3)^0,w,c
  5862  0026AC  0B80               	andlw	128
  5863  0026AE  1A30               	xorwf	___fldiv@sign^0,f,c
  5864  0026B0  5027               	movf	(___fldiv@a+3)^0,w,c
  5865  0026B2  2427               	addwf	(___fldiv@a+3)^0,w,c
  5866  0026B4  6E38               	movwf	___fldiv@aexp^0,c
  5867  0026B6  AE26               	btfss	(___fldiv@a+2)^0,7,c
  5868  0026B8  EF60  F013         	goto	u7401
  5869  0026BC  EF62  F013         	goto	u7400
  5870  0026C0                     u7401:
  5871  0026C0  EF63  F013         	goto	l9997
  5872  0026C4                     u7400:
  5873  0026C4  8038               	bsf	___fldiv@aexp^0,0,c
  5874  0026C6                     l9997:
  5875  0026C6  5038               	movf	___fldiv@aexp^0,w,c
  5876  0026C8  B4D8               	btfsc	status,2,c
  5877  0026CA  EF69  F013         	goto	u7411
  5878  0026CE  EF6B  F013         	goto	u7410
  5879  0026D2                     u7411:
  5880  0026D2  EF80  F013         	goto	l10007
  5881  0026D6                     u7410:
  5882  0026D6  2838               	incf	___fldiv@aexp^0,w,c
  5883  0026D8  A4D8               	btfss	status,2,c
  5884  0026DA  EF71  F013         	goto	u7421
  5885  0026DE  EF73  F013         	goto	u7420
  5886  0026E2                     u7421:
  5887  0026E2  EF7B  F013         	goto	l10003
  5888  0026E6                     u7420:
  5889  0026E6  0E00               	movlw	0
  5890  0026E8  6E24               	movwf	___fldiv@a^0,c
  5891  0026EA  0E00               	movlw	0
  5892  0026EC  6E25               	movwf	(___fldiv@a+1)^0,c
  5893  0026EE  0E00               	movlw	0
  5894  0026F0  6E26               	movwf	(___fldiv@a+2)^0,c
  5895  0026F2  0E00               	movlw	0
  5896  0026F4  6E27               	movwf	(___fldiv@a+3)^0,c
  5897  0026F6                     l10003:
  5898  0026F6  8E26               	bsf	(___fldiv@a+2)^0,7,c
  5899  0026F8  0E00               	movlw	0
  5900  0026FA  6E27               	movwf	(___fldiv@a+3)^0,c
  5901  0026FC  EF88  F013         	goto	l10009
  5902  002700                     l10007:
  5903  002700  0E00               	movlw	0
  5904  002702  6E24               	movwf	___fldiv@a^0,c
  5905  002704  0E00               	movlw	0
  5906  002706  6E25               	movwf	(___fldiv@a+1)^0,c
  5907  002708  0E00               	movlw	0
  5908  00270A  6E26               	movwf	(___fldiv@a+2)^0,c
  5909  00270C  0E00               	movlw	0
  5910  00270E  6E27               	movwf	(___fldiv@a+3)^0,c
  5911  002710                     l10009:
  5912  002710  5024               	movf	___fldiv@a^0,w,c
  5913  002712  1025               	iorwf	(___fldiv@a+1)^0,w,c
  5914  002714  1026               	iorwf	(___fldiv@a+2)^0,w,c
  5915  002716  1027               	iorwf	(___fldiv@a+3)^0,w,c
  5916  002718  A4D8               	btfss	status,2,c
  5917  00271A  EF91  F013         	goto	u7431
  5918  00271E  EF93  F013         	goto	u7430
  5919  002722                     u7431:
  5920  002722  EFAB  F013         	goto	l10021
  5921  002726                     u7430:
  5922  002726  0E00               	movlw	0
  5923  002728  6E20               	movwf	___fldiv@b^0,c
  5924  00272A  0E00               	movlw	0
  5925  00272C  6E21               	movwf	(___fldiv@b+1)^0,c
  5926  00272E  0E00               	movlw	0
  5927  002730  6E22               	movwf	(___fldiv@b+2)^0,c
  5928  002732  0E00               	movlw	0
  5929  002734  6E23               	movwf	(___fldiv@b+3)^0,c
  5930  002736  0E80               	movlw	128
  5931  002738  1222               	iorwf	(___fldiv@b+2)^0,f,c
  5932  00273A  0E7F               	movlw	127
  5933  00273C  1223               	iorwf	(___fldiv@b+3)^0,f,c
  5934  00273E                     l10015:
  5935  00273E  5030               	movf	___fldiv@sign^0,w,c
  5936  002740  1223               	iorwf	(___fldiv@b+3)^0,f,c
  5937  002742  C020  F020         	movff	___fldiv@b,?___fldiv
  5938  002746  C021  F021         	movff	___fldiv@b+1,?___fldiv+1
  5939  00274A  C022  F022         	movff	___fldiv@b+2,?___fldiv+2
  5940  00274E  C023  F023         	movff	___fldiv@b+3,?___fldiv+3
  5941  002752  EFEE  F014         	goto	l1393
  5942  002756                     l10021:
  5943  002756  5037               	movf	___fldiv@bexp^0,w,c
  5944  002758  A4D8               	btfss	status,2,c
  5945  00275A  EFB1  F013         	goto	u7441
  5946  00275E  EFB3  F013         	goto	u7440
  5947  002762                     u7441:
  5948  002762  EFBD  F013         	goto	l10029
  5949  002766                     u7440:
  5950  002766  0E00               	movlw	0
  5951  002768  6E20               	movwf	?___fldiv^0,c
  5952  00276A  0E00               	movlw	0
  5953  00276C  6E21               	movwf	(?___fldiv+1)^0,c
  5954  00276E  0E00               	movlw	0
  5955  002770  6E22               	movwf	(?___fldiv+2)^0,c
  5956  002772  0E00               	movlw	0
  5957  002774  6E23               	movwf	(?___fldiv+3)^0,c
  5958  002776  EFEE  F014         	goto	l1393
  5959  00277A                     l10029:
  5960  00277A  5038               	movf	___fldiv@aexp^0,w,c
  5961  00277C  C037  F028         	movff	___fldiv@bexp,??___fldiv
  5962  002780  6A29               	clrf	(??___fldiv+1)^0,c
  5963  002782  5E28               	subwf	??___fldiv^0,f,c
  5964  002784  0E00               	movlw	0
  5965  002786  5A29               	subwfb	(??___fldiv+1)^0,f,c
  5966  002788  0E7F               	movlw	127
  5967  00278A  2428               	addwf	??___fldiv^0,w,c
  5968  00278C  6E31               	movwf	___fldiv@new_exp^0,c
  5969  00278E  0E00               	movlw	0
  5970  002790  2029               	addwfc	(??___fldiv+1)^0,w,c
  5971  002792  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  5972  002794  C020  F02C         	movff	___fldiv@b,___fldiv@rem
  5973  002798  C021  F02D         	movff	___fldiv@b+1,___fldiv@rem+1
  5974  00279C  C022  F02E         	movff	___fldiv@b+2,___fldiv@rem+2
  5975  0027A0  C023  F02F         	movff	___fldiv@b+3,___fldiv@rem+3
  5976  0027A4  0E00               	movlw	0
  5977  0027A6  6E20               	movwf	___fldiv@b^0,c
  5978  0027A8  0E00               	movlw	0
  5979  0027AA  6E21               	movwf	(___fldiv@b+1)^0,c
  5980  0027AC  0E00               	movlw	0
  5981  0027AE  6E22               	movwf	(___fldiv@b+2)^0,c
  5982  0027B0  0E00               	movlw	0
  5983  0027B2  6E23               	movwf	(___fldiv@b+3)^0,c
  5984  0027B4  0E00               	movlw	0
  5985  0027B6  6E33               	movwf	___fldiv@grs^0,c
  5986  0027B8  0E00               	movlw	0
  5987  0027BA  6E34               	movwf	(___fldiv@grs+1)^0,c
  5988  0027BC  0E00               	movlw	0
  5989  0027BE  6E35               	movwf	(___fldiv@grs+2)^0,c
  5990  0027C0  0E00               	movlw	0
  5991  0027C2  6E36               	movwf	(___fldiv@grs+3)^0,c
  5992  0027C4  0E00               	movlw	0
  5993  0027C6  6E38               	movwf	___fldiv@aexp^0,c
  5994  0027C8  EF1E  F014         	goto	l1395
  5995  0027CC                     l10039:
  5996  0027CC  5038               	movf	___fldiv@aexp^0,w,c
  5997  0027CE  B4D8               	btfsc	status,2,c
  5998  0027D0  EFEC  F013         	goto	u7451
  5999  0027D4  EFEE  F013         	goto	u7450
  6000  0027D8                     u7451:
  6001  0027D8  EF05  F014         	goto	l10047
  6002  0027DC                     u7450:
  6003  0027DC  90D8               	bcf	status,0,c
  6004  0027DE  362C               	rlcf	___fldiv@rem^0,f,c
  6005  0027E0  362D               	rlcf	(___fldiv@rem+1)^0,f,c
  6006  0027E2  362E               	rlcf	(___fldiv@rem+2)^0,f,c
  6007  0027E4  362F               	rlcf	(___fldiv@rem+3)^0,f,c
  6008  0027E6  90D8               	bcf	status,0,c
  6009  0027E8  3620               	rlcf	___fldiv@b^0,f,c
  6010  0027EA  3621               	rlcf	(___fldiv@b+1)^0,f,c
  6011  0027EC  3622               	rlcf	(___fldiv@b+2)^0,f,c
  6012  0027EE  3623               	rlcf	(___fldiv@b+3)^0,f,c
  6013  0027F0  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6014  0027F2  EFFD  F013         	goto	u7461
  6015  0027F6  EFFF  F013         	goto	u7460
  6016  0027FA                     u7461:
  6017  0027FA  EF00  F014         	goto	l1398
  6018  0027FE                     u7460:
  6019  0027FE  8020               	bsf	___fldiv@b^0,0,c
  6020  002800                     l1398:
  6021  002800  90D8               	bcf	status,0,c
  6022  002802  3633               	rlcf	___fldiv@grs^0,f,c
  6023  002804  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  6024  002806  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  6025  002808  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  6026  00280A                     l10047:
  6027  00280A  5024               	movf	___fldiv@a^0,w,c
  6028  00280C  5C2C               	subwf	___fldiv@rem^0,w,c
  6029  00280E  5025               	movf	(___fldiv@a+1)^0,w,c
  6030  002810  582D               	subwfb	(___fldiv@rem+1)^0,w,c
  6031  002812  5026               	movf	(___fldiv@a+2)^0,w,c
  6032  002814  582E               	subwfb	(___fldiv@rem+2)^0,w,c
  6033  002816  5027               	movf	(___fldiv@a+3)^0,w,c
  6034  002818  582F               	subwfb	(___fldiv@rem+3)^0,w,c
  6035  00281A  A0D8               	btfss	status,0,c
  6036  00281C  EF12  F014         	goto	u7471
  6037  002820  EF14  F014         	goto	u7470
  6038  002824                     u7471:
  6039  002824  EF1D  F014         	goto	l10053
  6040  002828                     u7470:
  6041  002828  8C36               	bsf	(___fldiv@grs+3)^0,6,c
  6042  00282A  5024               	movf	___fldiv@a^0,w,c
  6043  00282C  5E2C               	subwf	___fldiv@rem^0,f,c
  6044  00282E  5025               	movf	(___fldiv@a+1)^0,w,c
  6045  002830  5A2D               	subwfb	(___fldiv@rem+1)^0,f,c
  6046  002832  5026               	movf	(___fldiv@a+2)^0,w,c
  6047  002834  5A2E               	subwfb	(___fldiv@rem+2)^0,f,c
  6048  002836  5027               	movf	(___fldiv@a+3)^0,w,c
  6049  002838  5A2F               	subwfb	(___fldiv@rem+3)^0,f,c
  6050  00283A                     l10053:
  6051  00283A  2A38               	incf	___fldiv@aexp^0,f,c
  6052  00283C                     l1395:
  6053  00283C  0E19               	movlw	25
  6054  00283E  6438               	cpfsgt	___fldiv@aexp^0,c
  6055  002840  EF24  F014         	goto	u7481
  6056  002844  EF26  F014         	goto	u7480
  6057  002848                     u7481:
  6058  002848  EFE6  F013         	goto	l10039
  6059  00284C                     u7480:
  6060  00284C  502C               	movf	___fldiv@rem^0,w,c
  6061  00284E  102D               	iorwf	(___fldiv@rem+1)^0,w,c
  6062  002850  102E               	iorwf	(___fldiv@rem+2)^0,w,c
  6063  002852  102F               	iorwf	(___fldiv@rem+3)^0,w,c
  6064  002854  B4D8               	btfsc	status,2,c
  6065  002856  EF2F  F014         	goto	u7491
  6066  00285A  EF31  F014         	goto	u7490
  6067  00285E                     u7491:
  6068  00285E  EF49  F014         	goto	l10065
  6069  002862                     u7490:
  6070  002862  8033               	bsf	___fldiv@grs^0,0,c
  6071  002864  EF49  F014         	goto	l10065
  6072  002868                     l10059:
  6073  002868  90D8               	bcf	status,0,c
  6074  00286A  3620               	rlcf	___fldiv@b^0,f,c
  6075  00286C  3621               	rlcf	(___fldiv@b+1)^0,f,c
  6076  00286E  3622               	rlcf	(___fldiv@b+2)^0,f,c
  6077  002870  3623               	rlcf	(___fldiv@b+3)^0,f,c
  6078  002872  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6079  002874  EF3E  F014         	goto	u7501
  6080  002878  EF40  F014         	goto	u7500
  6081  00287C                     u7501:
  6082  00287C  EF41  F014         	goto	l1404
  6083  002880                     u7500:
  6084  002880  8020               	bsf	___fldiv@b^0,0,c
  6085  002882                     l1404:
  6086  002882  90D8               	bcf	status,0,c
  6087  002884  3633               	rlcf	___fldiv@grs^0,f,c
  6088  002886  3634               	rlcf	(___fldiv@grs+1)^0,f,c
  6089  002888  3635               	rlcf	(___fldiv@grs+2)^0,f,c
  6090  00288A  3636               	rlcf	(___fldiv@grs+3)^0,f,c
  6091  00288C  0631               	decf	___fldiv@new_exp^0,f,c
  6092  00288E  A0D8               	btfss	status,0,c
  6093  002890  0632               	decf	(___fldiv@new_exp+1)^0,f,c
  6094  002892                     l10065:
  6095  002892  AE22               	btfss	(___fldiv@b+2)^0,7,c
  6096  002894  EF4E  F014         	goto	u7511
  6097  002898  EF50  F014         	goto	u7510
  6098  00289C                     u7511:
  6099  00289C  EF34  F014         	goto	l10059
  6100  0028A0                     u7510:
  6101  0028A0  0E00               	movlw	0
  6102  0028A2  6E38               	movwf	___fldiv@aexp^0,c
  6103  0028A4  AE36               	btfss	(___fldiv@grs+3)^0,7,c
  6104  0028A6  EF57  F014         	goto	u7521
  6105  0028AA  EF59  F014         	goto	u7520
  6106  0028AE                     u7521:
  6107  0028AE  EF7D  F014         	goto	l1406
  6108  0028B2                     u7520:
  6109  0028B2  0EFF               	movlw	255
  6110  0028B4  1433               	andwf	___fldiv@grs^0,w,c
  6111  0028B6  6E28               	movwf	??___fldiv^0,c
  6112  0028B8  0EFF               	movlw	255
  6113  0028BA  1434               	andwf	(___fldiv@grs+1)^0,w,c
  6114  0028BC  6E29               	movwf	(??___fldiv+1)^0,c
  6115  0028BE  0EFF               	movlw	255
  6116  0028C0  1435               	andwf	(___fldiv@grs+2)^0,w,c
  6117  0028C2  6E2A               	movwf	(??___fldiv+2)^0,c
  6118  0028C4  0E7F               	movlw	127
  6119  0028C6  1436               	andwf	(___fldiv@grs+3)^0,w,c
  6120  0028C8  6E2B               	movwf	(??___fldiv+3)^0,c
  6121  0028CA  5028               	movf	??___fldiv^0,w,c
  6122  0028CC  1029               	iorwf	(??___fldiv+1)^0,w,c
  6123  0028CE  102A               	iorwf	(??___fldiv+2)^0,w,c
  6124  0028D0  102B               	iorwf	(??___fldiv+3)^0,w,c
  6125  0028D2  B4D8               	btfsc	status,2,c
  6126  0028D4  EF6E  F014         	goto	u7531
  6127  0028D8  EF70  F014         	goto	u7530
  6128  0028DC                     u7531:
  6129  0028DC  EF74  F014         	goto	l1407
  6130  0028E0                     u7530:
  6131  0028E0                     l10073:
  6132  0028E0  0E01               	movlw	1
  6133  0028E2  6E38               	movwf	___fldiv@aexp^0,c
  6134  0028E4  EF7D  F014         	goto	l1406
  6135  0028E8                     l1407:
  6136  0028E8  A020               	btfss	___fldiv@b^0,0,c
  6137  0028EA  EF79  F014         	goto	u7541
  6138  0028EE  EF7B  F014         	goto	u7540
  6139  0028F2                     u7541:
  6140  0028F2  EF7D  F014         	goto	l1406
  6141  0028F6                     u7540:
  6142  0028F6  EF70  F014         	goto	l10073
  6143  0028FA                     l1406:
  6144  0028FA  5038               	movf	___fldiv@aexp^0,w,c
  6145  0028FC  B4D8               	btfsc	status,2,c
  6146  0028FE  EF83  F014         	goto	u7551
  6147  002902  EF85  F014         	goto	u7550
  6148  002906                     u7551:
  6149  002906  EFA9  F014         	goto	l10085
  6150  00290A                     u7550:
  6151  00290A  0E01               	movlw	1
  6152  00290C  2620               	addwf	___fldiv@b^0,f,c
  6153  00290E  0E00               	movlw	0
  6154  002910  2221               	addwfc	(___fldiv@b+1)^0,f,c
  6155  002912  2222               	addwfc	(___fldiv@b+2)^0,f,c
  6156  002914  2223               	addwfc	(___fldiv@b+3)^0,f,c
  6157  002916  A023               	btfss	(___fldiv@b+3)^0,0,c
  6158  002918  EF90  F014         	goto	u7561
  6159  00291C  EF92  F014         	goto	u7560
  6160  002920                     u7561:
  6161  002920  EFA9  F014         	goto	l10085
  6162  002924                     u7560:
  6163  002924  C020  F028         	movff	___fldiv@b,??___fldiv
  6164  002928  C021  F029         	movff	___fldiv@b+1,??___fldiv+1
  6165  00292C  C022  F02A         	movff	___fldiv@b+2,??___fldiv+2
  6166  002930  C023  F02B         	movff	___fldiv@b+3,??___fldiv+3
  6167  002934  342B               	rlcf	(??___fldiv+3)^0,w,c
  6168  002936  322B               	rrcf	(??___fldiv+3)^0,f,c
  6169  002938  322A               	rrcf	(??___fldiv+2)^0,f,c
  6170  00293A  3229               	rrcf	(??___fldiv+1)^0,f,c
  6171  00293C  3228               	rrcf	??___fldiv^0,f,c
  6172  00293E  C028  F020         	movff	??___fldiv,___fldiv@b
  6173  002942  C029  F021         	movff	??___fldiv+1,___fldiv@b+1
  6174  002946  C02A  F022         	movff	??___fldiv+2,___fldiv@b+2
  6175  00294A  C02B  F023         	movff	??___fldiv+3,___fldiv@b+3
  6176  00294E  4A31               	infsnz	___fldiv@new_exp^0,f,c
  6177  002950  2A32               	incf	(___fldiv@new_exp+1)^0,f,c
  6178  002952                     l10085:
  6179  002952  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6180  002954  EFB4  F014         	goto	u7571
  6181  002958  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  6182  00295A  E108               	bnz	u7570
  6183  00295C  2831               	incf	___fldiv@new_exp^0,w,c
  6184  00295E  A0D8               	btfss	status,0,c
  6185  002960  EFB4  F014         	goto	u7571
  6186  002964  EFB6  F014         	goto	u7570
  6187  002968                     u7571:
  6188  002968  EFC1  F014         	goto	l10089
  6189  00296C                     u7570:
  6190  00296C  0E00               	movlw	0
  6191  00296E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  6192  002970  6831               	setf	___fldiv@new_exp^0,c
  6193  002972  0E00               	movlw	0
  6194  002974  6E20               	movwf	___fldiv@b^0,c
  6195  002976  0E00               	movlw	0
  6196  002978  6E21               	movwf	(___fldiv@b+1)^0,c
  6197  00297A  0E00               	movlw	0
  6198  00297C  6E22               	movwf	(___fldiv@b+2)^0,c
  6199  00297E  0E00               	movlw	0
  6200  002980  6E23               	movwf	(___fldiv@b+3)^0,c
  6201  002982                     l10089:
  6202  002982  BE32               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6203  002984  EFCE  F014         	goto	u7580
  6204  002988  5032               	movf	(___fldiv@new_exp+1)^0,w,c
  6205  00298A  E106               	bnz	u7581
  6206  00298C  0431               	decf	___fldiv@new_exp^0,w,c
  6207  00298E  B0D8               	btfsc	status,0,c
  6208  002990  EFCC  F014         	goto	u7581
  6209  002994  EFCE  F014         	goto	u7580
  6210  002998                     u7581:
  6211  002998  EFDC  F014         	goto	l10093
  6212  00299C                     u7580:
  6213  00299C  0E00               	movlw	0
  6214  00299E  6E32               	movwf	(___fldiv@new_exp+1)^0,c
  6215  0029A0  0E00               	movlw	0
  6216  0029A2  6E31               	movwf	___fldiv@new_exp^0,c
  6217  0029A4  0E00               	movlw	0
  6218  0029A6  6E20               	movwf	___fldiv@b^0,c
  6219  0029A8  0E00               	movlw	0
  6220  0029AA  6E21               	movwf	(___fldiv@b+1)^0,c
  6221  0029AC  0E00               	movlw	0
  6222  0029AE  6E22               	movwf	(___fldiv@b+2)^0,c
  6223  0029B0  0E00               	movlw	0
  6224  0029B2  6E23               	movwf	(___fldiv@b+3)^0,c
  6225  0029B4  0E00               	movlw	0
  6226  0029B6  6E30               	movwf	___fldiv@sign^0,c
  6227  0029B8                     l10093:
  6228  0029B8  C031  F037         	movff	___fldiv@new_exp,___fldiv@bexp
  6229  0029BC  A037               	btfss	___fldiv@bexp^0,0,c
  6230  0029BE  EFE3  F014         	goto	u7591
  6231  0029C2  EFE5  F014         	goto	u7590
  6232  0029C6                     u7591:
  6233  0029C6  EFE8  F014         	goto	l10099
  6234  0029CA                     u7590:
  6235  0029CA  8E22               	bsf	(___fldiv@b+2)^0,7,c
  6236  0029CC  EFE9  F014         	goto	l10101
  6237  0029D0                     l10099:
  6238  0029D0  9E22               	bcf	(___fldiv@b+2)^0,7,c
  6239  0029D2                     l10101:
  6240  0029D2  90D8               	bcf	status,0,c
  6241  0029D4  3037               	rrcf	___fldiv@bexp^0,w,c
  6242  0029D6  6E23               	movwf	(___fldiv@b+3)^0,c
  6243  0029D8  EF9F  F013         	goto	l10015
  6244  0029DC                     l1393:
  6245  0029DC  0012               	return		;funcret
  6246  0029DE                     __end_of___fldiv:
  6247                           	callstack 0
  6248                           
  6249 ;; *************** function _XF_scheduleTimer *****************
  6250 ;; Defined at:
  6251 ;;		line 96 in file "xf/xf.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  tm              2   18[COMRAM] unsigned short 
  6254 ;;  ev              1   20[COMRAM] unsigned char 
  6255 ;;  inISR           1   21[COMRAM] _Bool 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  i               1   22[COMRAM] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      unsigned char 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6267 ;;      Params:         4       0       0       0       0       0       0
  6268 ;;      Locals:         1       0       0       0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0
  6270 ;;      Totals:         5       0       0       0       0       0       0
  6271 ;;Total ram usage:        5 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; Hardware stack levels required when called: 5
  6274 ;; This function calls:
  6275 ;;		_ENTERCRITICAL
  6276 ;;		_LEAVECRITICAL
  6277 ;; This function is called by:
  6278 ;;		_touchScreenController
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text18
  6283  005C2E                     __ptext18:
  6284                           	callstack 0
  6285  005C2E                     _XF_scheduleTimer:
  6286                           	callstack 22
  6287  005C2E                     
  6288                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
  6289  005C2E  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  6290  005C30  ECFB  F031         	call	_ENTERCRITICAL
  6291  005C34                     
  6292                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
  6293  005C34  0E00               	movlw	0
  6294  005C36  6E17               	movwf	XF_scheduleTimer@i^0,c
  6295  005C38                     l9877:
  6296                           
  6297                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
  6298  005C38  5017               	movf	XF_scheduleTimer@i^0,w,c
  6299  005C3A  0D03               	mullw	3
  6300  005C3C  0EB7               	movlw	low (_theXF+2)
  6301  005C3E  24F3               	addwf	243,w,c
  6302  005C40  6ED9               	movwf	fsr2l,c
  6303  005C42  0E00               	movlw	high (_theXF+2)
  6304  005C44  20F4               	addwfc	prodh,w,c
  6305  005C46  6EDA               	movwf	fsr2h,c
  6306  005C48  50DF               	movf	indf2,w,c
  6307  005C4A  A4D8               	btfss	status,2,c
  6308  005C4C  EF2A  F02E         	goto	u7221
  6309  005C50  EF2C  F02E         	goto	u7220
  6310  005C54                     u7221:
  6311  005C54  EF44  F02E         	goto	l9881
  6312  005C58                     u7220:
  6313  005C58                     
  6314                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
  6315  005C58  5017               	movf	XF_scheduleTimer@i^0,w,c
  6316  005C5A  0D03               	mullw	3
  6317  005C5C  0EB5               	movlw	low _theXF
  6318  005C5E  24F3               	addwf	243,w,c
  6319  005C60  6ED9               	movwf	fsr2l,c
  6320  005C62  0E00               	movlw	high _theXF
  6321  005C64  20F4               	addwfc	prodh,w,c
  6322  005C66  6EDA               	movwf	fsr2h,c
  6323  005C68  C013  FFDE         	movff	XF_scheduleTimer@tm,postinc2
  6324  005C6C  C014  FFDD         	movff	XF_scheduleTimer@tm+1,postdec2
  6325                           
  6326                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
  6327  005C70  5017               	movf	XF_scheduleTimer@i^0,w,c
  6328  005C72  0D03               	mullw	3
  6329  005C74  0EB7               	movlw	low (_theXF+2)
  6330  005C76  24F3               	addwf	243,w,c
  6331  005C78  6ED9               	movwf	fsr2l,c
  6332  005C7A  0E00               	movlw	high (_theXF+2)
  6333  005C7C  20F4               	addwfc	prodh,w,c
  6334  005C7E  6EDA               	movwf	fsr2h,c
  6335  005C80  C015  FFDF         	movff	XF_scheduleTimer@ev,indf2
  6336                           
  6337                           ;xf/xf.c: 107:             break;
  6338  005C84  EF4D  F02E         	goto	l9885
  6339  005C88                     l9881:
  6340                           
  6341                           ;xf/xf.c: 109:     }
  6342  005C88  2A17               	incf	XF_scheduleTimer@i^0,f,c
  6343  005C8A  0E07               	movlw	7
  6344  005C8C  6417               	cpfsgt	XF_scheduleTimer@i^0,c
  6345  005C8E  EF4B  F02E         	goto	u7231
  6346  005C92  EF4D  F02E         	goto	u7230
  6347  005C96                     u7231:
  6348  005C96  EF1C  F02E         	goto	l9877
  6349  005C9A                     u7230:
  6350  005C9A                     l9885:
  6351                           
  6352                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
  6353  005C9A  5016               	movf	XF_scheduleTimer@inISR^0,w,c
  6354  005C9C  ECF0  F031         	call	_LEAVECRITICAL
  6355  005CA0  0012               	return		;funcret
  6356  005CA2                     __end_of_XF_scheduleTimer:
  6357                           	callstack 0
  6358                           
  6359 ;; *************** function _GameParameters_setY *****************
  6360 ;; Defined at:
  6361 ;;		line 48 in file "class/gameParameters.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  s               2   17[COMRAM] PTR struct GameParameter
  6364 ;;		 -> g1(239), 
  6365 ;;  value           2   19[COMRAM] unsigned short 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6377 ;;      Params:         4       0       0       0       0       0       0
  6378 ;;      Locals:         0       0       0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0
  6380 ;;      Totals:         4       0       0       0       0       0       0
  6381 ;;Total ram usage:        4 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 4
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_touchScreenController
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text19
  6392  0063B4                     __ptext19:
  6393                           	callstack 0
  6394  0063B4                     _GameParameters_setY:
  6395                           	callstack 23
  6396  0063B4                     
  6397                           ;class/gameParameters.c: 48: void GameParameters_setY(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 49: {;class/gameParameters.c: 50:     s->y=value;
  6398  0063B4  EE20 F006          	lfsr	2,6
  6399  0063B8  5012               	movf	GameParameters_setY@s^0,w,c
  6400  0063BA  26D9               	addwf	fsr2l,f,c
  6401  0063BC  5013               	movf	(GameParameters_setY@s+1)^0,w,c
  6402  0063BE  22DA               	addwfc	fsr2h,f,c
  6403  0063C0  C014  FFDE         	movff	GameParameters_setY@value,postinc2
  6404  0063C4  C015  FFDD         	movff	GameParameters_setY@value+1,postdec2
  6405  0063C8  0012               	return		;funcret
  6406  0063CA                     __end_of_GameParameters_setY:
  6407                           	callstack 0
  6408                           
  6409 ;; *************** function _GameParameters_setX *****************
  6410 ;; Defined at:
  6411 ;;		line 44 in file "class/gameParameters.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  s               2   17[COMRAM] PTR struct GameParameter
  6414 ;;		 -> g1(239), 
  6415 ;;  value           2   19[COMRAM] unsigned short 
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1    wreg      void 
  6420 ;; Registers used:
  6421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6427 ;;      Params:         4       0       0       0       0       0       0
  6428 ;;      Locals:         0       0       0       0       0       0       0
  6429 ;;      Temps:          0       0       0       0       0       0       0
  6430 ;;      Totals:         4       0       0       0       0       0       0
  6431 ;;Total ram usage:        4 bytes
  6432 ;; Hardware stack levels used: 1
  6433 ;; Hardware stack levels required when called: 4
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_touchScreenController
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           	psect	text20
  6442  0063CA                     __ptext20:
  6443                           	callstack 0
  6444  0063CA                     _GameParameters_setX:
  6445                           	callstack 23
  6446  0063CA                     
  6447                           ;class/gameParameters.c: 44: void GameParameters_setX(struct GameParameters* s, uint16_t
      +                           value);class/gameParameters.c: 45: {;class/gameParameters.c: 46:     s->x=value;
  6448  0063CA  EE20 F004          	lfsr	2,4
  6449  0063CE  5012               	movf	GameParameters_setX@s^0,w,c
  6450  0063D0  26D9               	addwf	fsr2l,f,c
  6451  0063D2  5013               	movf	(GameParameters_setX@s+1)^0,w,c
  6452  0063D4  22DA               	addwfc	fsr2h,f,c
  6453  0063D6  C014  FFDE         	movff	GameParameters_setX@value,postinc2
  6454  0063DA  C015  FFDD         	movff	GameParameters_setX@value+1,postdec2
  6455  0063DE  0012               	return		;funcret
  6456  0063E0                     __end_of_GameParameters_setX:
  6457                           	callstack 0
  6458                           
  6459 ;; *************** function _sleepSM *****************
  6460 ;; Defined at:
  6461 ;;		line 19 in file "stateMachine/sleepSM.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;  ev              1    wreg     unsigned char 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  ev              1    0[COMRAM] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		wreg
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6475 ;;      Params:         0       0       0       0       0       0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0
  6478 ;;      Totals:         0       0       0       0       0       0       0
  6479 ;;Total ram usage:        0 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 4
  6482 ;; This function calls:
  6483 ;;		Nothing
  6484 ;; This function is called by:
  6485 ;;		_Factory_exec
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text21
  6490  006454                     __ptext21:
  6491                           	callstack 0
  6492  006454                     _sleepSM:
  6493                           	callstack 25
  6494  006454  0012               	return		;funcret
  6495  006456                     __end_of_sleepSM:
  6496                           	callstack 0
  6497                           
  6498 ;; *************** function _gameControllerSM *****************
  6499 ;; Defined at:
  6500 ;;		line 22 in file "stateMachine/gameController.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  ev              1    wreg     unsigned char 
  6503 ;;  g               2   59[COMRAM] PTR struct GameParameter
  6504 ;;		 -> g1(239), 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  ev              1   63[COMRAM] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6516 ;;      Params:         2       0       0       0       0       0       0
  6517 ;;      Locals:         1       0       0       0       0       0       0
  6518 ;;      Temps:          2       0       0       0       0       0       0
  6519 ;;      Totals:         5       0       0       0       0       0       0
  6520 ;;Total ram usage:        5 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 9
  6523 ;; This function calls:
  6524 ;;		_gameControllerController
  6525 ;; This function is called by:
  6526 ;;		_Factory_exec
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text22
  6531  005102                     __ptext22:
  6532                           	callstack 0
  6533  005102                     _gameControllerSM:
  6534                           	callstack 20
  6535                           
  6536                           ;incstack = 0
  6537                           ;gameControllerSM@ev stored from wreg
  6538  005102  6E40               	movwf	gameControllerSM@ev^0,c
  6539  005104                     
  6540                           ;stateMachine/gameController.c: 22: void gameControllerSM(Event ev,GameParameters* g);st
      +                          ateMachine/gameController.c: 23: {;stateMachine/gameController.c: 24:    switch(gameStat
      +                          eMachine)
  6541  005104  EFC3  F028         	goto	l10433
  6542  005108                     l10407:
  6543                           
  6544                           ;stateMachine/gameController.c: 28:             gameControllerController(g,NULLEVENT);
  6545  005108  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6546  00510C  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6547  005110  0E00               	movlw	0
  6548  005112  6E39               	movwf	gameControllerController@ev^0,c
  6549  005114  ECEF  F014         	call	_gameControllerController	;wreg free
  6550  005118                     
  6551                           ;stateMachine/gameController.c: 29:             if(ev==evParameters)
  6552  005118  0E07               	movlw	7
  6553  00511A  1840               	xorwf	gameControllerSM@ev^0,w,c
  6554  00511C  A4D8               	btfss	status,2,c
  6555  00511E  EF93  F028         	goto	u7941
  6556  005122  EF95  F028         	goto	u7940
  6557  005126                     u7941:
  6558  005126  EF97  F028         	goto	l10413
  6559  00512A                     u7940:
  6560  00512A                     
  6561                           ;stateMachine/gameController.c: 30:             {;stateMachine/gameController.c: 31:    
      +                                       gameStateMachine=PARAMETERS;
  6562  00512A  0E01               	movlw	1
  6563  00512C  6E4D               	movwf	_gameStateMachine^0,c
  6564  00512E                     l10413:
  6565                           
  6566                           ;stateMachine/gameController.c: 33:             if(ev==evOnePlayer)
  6567  00512E  0E05               	movlw	5
  6568  005130  1840               	xorwf	gameControllerSM@ev^0,w,c
  6569  005132  A4D8               	btfss	status,2,c
  6570  005134  EF9E  F028         	goto	u7951
  6571  005138  EFA0  F028         	goto	u7950
  6572  00513C                     u7951:
  6573  00513C  EFE4  F028         	goto	l622
  6574  005140                     u7950:
  6575  005140                     
  6576                           ;stateMachine/gameController.c: 34:             {;stateMachine/gameController.c: 35:    
      +                                       gameStateMachine=LOCAL;
  6577  005140  0E02               	movlw	2
  6578  005142  6E4D               	movwf	_gameStateMachine^0,c
  6579  005144  EFE4  F028         	goto	l622
  6580  005148                     l10421:
  6581                           
  6582                           ;stateMachine/gameController.c: 44:             gameControllerController(g,NULLEVENT);
  6583  005148  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6584  00514C  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6585  005150  0E00               	movlw	0
  6586  005152  6E39               	movwf	gameControllerController@ev^0,c
  6587  005154  ECEF  F014         	call	_gameControllerController	;wreg free
  6588  005158                     
  6589                           ;stateMachine/gameController.c: 45:             if(ev==evLeaveParam)
  6590  005158  0E08               	movlw	8
  6591  00515A  1840               	xorwf	gameControllerSM@ev^0,w,c
  6592  00515C  A4D8               	btfss	status,2,c
  6593  00515E  EFB3  F028         	goto	u7961
  6594  005162  EFB5  F028         	goto	u7960
  6595  005166                     u7961:
  6596  005166  EFE4  F028         	goto	l622
  6597  00516A                     u7960:
  6598  00516A                     
  6599                           ;stateMachine/gameController.c: 46:             {;stateMachine/gameController.c: 47:    
      +                                       gameStateMachine=NOGAME;
  6600  00516A  0E00               	movlw	0
  6601  00516C  6E4D               	movwf	_gameStateMachine^0,c
  6602  00516E  EFE4  F028         	goto	l622
  6603  005172                     l10427:
  6604                           
  6605                           ;stateMachine/gameController.c: 51:             gameControllerController(g,ev);
  6606  005172  C03C  F037         	movff	gameControllerSM@g,gameControllerController@g
  6607  005176  C03D  F038         	movff	gameControllerSM@g+1,gameControllerController@g+1
  6608  00517A  C040  F039         	movff	gameControllerSM@ev,gameControllerController@ev
  6609  00517E  ECEF  F014         	call	_gameControllerController	;wreg free
  6610                           
  6611                           ;stateMachine/gameController.c: 52:             break;
  6612  005182  EFE4  F028         	goto	l622
  6613  005186                     l10433:
  6614  005186  504D               	movf	_gameStateMachine^0,w,c
  6615  005188  6E3E               	movwf	??_gameControllerSM^0,c
  6616  00518A  6A3F               	clrf	(??_gameControllerSM+1)^0,c
  6617                           
  6618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6619                           ; Switch size 1, requested type "simple"
  6620                           ; Number of cases is 1, Range of values is 0 to 0
  6621                           ; switch strategies available:
  6622                           ; Name         Instructions Cycles
  6623                           ; simple_byte            4     3 (average)
  6624                           ;	Chosen strategy is simple_byte
  6625  00518C  503F               	movf	(??_gameControllerSM+1)^0,w,c
  6626  00518E  0A00               	xorlw	0	; case 0
  6627  005190  B4D8               	btfsc	status,2,c
  6628  005192  EFCD  F028         	goto	l10705
  6629  005196  EFE4  F028         	goto	l622
  6630  00519A                     l10705:
  6631                           
  6632                           ; Switch size 1, requested type "simple"
  6633                           ; Number of cases is 5, Range of values is 0 to 4
  6634                           ; switch strategies available:
  6635                           ; Name         Instructions Cycles
  6636                           ; simple_byte           16     9 (average)
  6637                           ;	Chosen strategy is simple_byte
  6638  00519A  503E               	movf	??_gameControllerSM^0,w,c
  6639  00519C  0A00               	xorlw	0	; case 0
  6640  00519E  B4D8               	btfsc	status,2,c
  6641  0051A0  EF84  F028         	goto	l10407
  6642  0051A4  0A01               	xorlw	1	; case 1
  6643  0051A6  B4D8               	btfsc	status,2,c
  6644  0051A8  EFA4  F028         	goto	l10421
  6645  0051AC  0A03               	xorlw	3	; case 2
  6646  0051AE  B4D8               	btfsc	status,2,c
  6647  0051B0  EFB9  F028         	goto	l10427
  6648  0051B4  0A01               	xorlw	1	; case 3
  6649  0051B6  B4D8               	btfsc	status,2,c
  6650  0051B8  EFE4  F028         	goto	l622
  6651  0051BC  0A07               	xorlw	7	; case 4
  6652  0051BE  B4D8               	btfsc	status,2,c
  6653  0051C0  EFB9  F028         	goto	l10427
  6654  0051C4  EFE4  F028         	goto	l622
  6655  0051C8                     l622:
  6656  0051C8  0012               	return		;funcret
  6657  0051CA                     __end_of_gameControllerSM:
  6658                           	callstack 0
  6659                           
  6660 ;; *************** function _gameControllerController *****************
  6661 ;; Defined at:
  6662 ;;		line 67 in file "stateMachine/gameController.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  g               2   54[COMRAM] PTR struct GameParameter
  6665 ;;		 -> g1(239), 
  6666 ;;  ev              1   56[COMRAM] unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;		None
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  1    wreg      void 
  6671 ;; Registers used:
  6672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6678 ;;      Params:         3       0       0       0       0       0       0
  6679 ;;      Locals:         0       0       0       0       0       0       0
  6680 ;;      Temps:          2       0       0       0       0       0       0
  6681 ;;      Totals:         5       0       0       0       0       0       0
  6682 ;;Total ram usage:        5 bytes
  6683 ;; Hardware stack levels used: 1
  6684 ;; Hardware stack levels required when called: 8
  6685 ;; This function calls:
  6686 ;;		_GameParameters_init
  6687 ;;		_GameParameters_resetPos
  6688 ;;		_LCD_InButton
  6689 ;;		_LCD_InSlider
  6690 ;;		_LCD_SliderUpdate
  6691 ;;		_XF_pushEvent
  6692 ;;		_backlightController
  6693 ;;		_mooveBall
  6694 ;;		_moovePaddle
  6695 ;; This function is called by:
  6696 ;;		_gameControllerInit
  6697 ;;		_gameControllerSM
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           	psect	text23
  6702  0029DE                     __ptext23:
  6703                           	callstack 0
  6704  0029DE                     _gameControllerController:
  6705                           	callstack 19
  6706  0029DE                     
  6707                           ;stateMachine/gameController.c: 67: void gameControllerController(GameParameters* g,Even
      +                          t ev);stateMachine/gameController.c: 68: {;stateMachine/gameController.c: 69:     switch
      +                          (gameStateMachine)
  6708  0029DE  EF78  F016         	goto	l9965
  6709  0029E2                     l9923:
  6710                           
  6711                           ;stateMachine/gameController.c: 73:             if(LCD_InButton(&(g->btnParam),g->x,g->y
      +                          ))
  6712  0029E2  0E08               	movlw	8
  6713  0029E4  2437               	addwf	gameControllerController@g^0,w,c
  6714  0029E6  6E12               	movwf	LCD_InButton@button^0,c
  6715  0029E8  0E00               	movlw	0
  6716  0029EA  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6717  0029EC  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6718  0029EE  EE20 F004          	lfsr	2,4
  6719  0029F2  5037               	movf	gameControllerController@g^0,w,c
  6720  0029F4  26D9               	addwf	fsr2l,f,c
  6721  0029F6  5038               	movf	(gameControllerController@g+1)^0,w,c
  6722  0029F8  22DA               	addwfc	fsr2h,f,c
  6723  0029FA  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6724  0029FE  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6725  002A02  EE20 F006          	lfsr	2,6
  6726  002A06  5037               	movf	gameControllerController@g^0,w,c
  6727  002A08  26D9               	addwf	fsr2l,f,c
  6728  002A0A  5038               	movf	(gameControllerController@g+1)^0,w,c
  6729  002A0C  22DA               	addwfc	fsr2h,f,c
  6730  002A0E  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6731  002A12  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6732  002A16  EC68  F026         	call	_LCD_InButton	;wreg free
  6733  002A1A  0900               	iorlw	0
  6734  002A1C  B4D8               	btfsc	status,2,c
  6735  002A1E  EF13  F015         	goto	u7281
  6736  002A22  EF15  F015         	goto	u7280
  6737  002A26                     u7281:
  6738  002A26  EF20  F015         	goto	l627
  6739  002A2A                     u7280:
  6740  002A2A                     
  6741                           ;stateMachine/gameController.c: 74:             {;stateMachine/gameController.c: 75:    
      +                                       XF_pushEvent(evParameters,0);
  6742  002A2A  0E00               	movlw	0
  6743  002A2C  6E18               	movwf	XF_pushEvent@inISR^0,c
  6744  002A2E  0E07               	movlw	7
  6745  002A30  ECC5  F02E         	call	_XF_pushEvent
  6746                           
  6747                           ;stateMachine/gameController.c: 76:                 GameParameters_resetPos(g);
  6748  002A34  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6749  002A38  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6750  002A3C  EC40  F031         	call	_GameParameters_resetPos	;wreg free
  6751  002A40                     l627:
  6752                           
  6753                           ;stateMachine/gameController.c: 78:             if(LCD_InButton(&(g->btnOnePlayer),g->x,
      +                          g->y))
  6754  002A40  0E20               	movlw	32
  6755  002A42  2437               	addwf	gameControllerController@g^0,w,c
  6756  002A44  6E12               	movwf	LCD_InButton@button^0,c
  6757  002A46  0E00               	movlw	0
  6758  002A48  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6759  002A4A  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6760  002A4C  EE20 F004          	lfsr	2,4
  6761  002A50  5037               	movf	gameControllerController@g^0,w,c
  6762  002A52  26D9               	addwf	fsr2l,f,c
  6763  002A54  5038               	movf	(gameControllerController@g+1)^0,w,c
  6764  002A56  22DA               	addwfc	fsr2h,f,c
  6765  002A58  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6766  002A5C  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6767  002A60  EE20 F006          	lfsr	2,6
  6768  002A64  5037               	movf	gameControllerController@g^0,w,c
  6769  002A66  26D9               	addwf	fsr2l,f,c
  6770  002A68  5038               	movf	(gameControllerController@g+1)^0,w,c
  6771  002A6A  22DA               	addwfc	fsr2h,f,c
  6772  002A6C  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6773  002A70  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6774  002A74  EC68  F026         	call	_LCD_InButton	;wreg free
  6775  002A78  0900               	iorlw	0
  6776  002A7A  B4D8               	btfsc	status,2,c
  6777  002A7C  EF42  F015         	goto	u7291
  6778  002A80  EF44  F015         	goto	u7290
  6779  002A84                     u7291:
  6780  002A84  EF4F  F015         	goto	l628
  6781  002A88                     u7290:
  6782  002A88                     
  6783                           ;stateMachine/gameController.c: 79:             {;stateMachine/gameController.c: 80:    
      +                                       XF_pushEvent(evOnePlayer,0);
  6784  002A88  0E00               	movlw	0
  6785  002A8A  6E18               	movwf	XF_pushEvent@inISR^0,c
  6786  002A8C  0E05               	movlw	5
  6787  002A8E  ECC5  F02E         	call	_XF_pushEvent
  6788                           
  6789                           ;stateMachine/gameController.c: 81:                 GameParameters_resetPos(g);
  6790  002A92  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6791  002A96  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6792  002A9A  EC40  F031         	call	_GameParameters_resetPos	;wreg free
  6793  002A9E                     l628:
  6794                           
  6795                           ;stateMachine/gameController.c: 83:             if(LCD_InButton(&(g->btnTwoPlayer),g->x,
      +                          g->y))
  6796  002A9E  0E38               	movlw	56
  6797  002AA0  2437               	addwf	gameControllerController@g^0,w,c
  6798  002AA2  6E12               	movwf	LCD_InButton@button^0,c
  6799  002AA4  0E00               	movlw	0
  6800  002AA6  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6801  002AA8  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6802  002AAA  EE20 F004          	lfsr	2,4
  6803  002AAE  5037               	movf	gameControllerController@g^0,w,c
  6804  002AB0  26D9               	addwf	fsr2l,f,c
  6805  002AB2  5038               	movf	(gameControllerController@g+1)^0,w,c
  6806  002AB4  22DA               	addwfc	fsr2h,f,c
  6807  002AB6  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6808  002ABA  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6809  002ABE  EE20 F006          	lfsr	2,6
  6810  002AC2  5037               	movf	gameControllerController@g^0,w,c
  6811  002AC4  26D9               	addwf	fsr2l,f,c
  6812  002AC6  5038               	movf	(gameControllerController@g+1)^0,w,c
  6813  002AC8  22DA               	addwfc	fsr2h,f,c
  6814  002ACA  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6815  002ACE  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6816  002AD2  EC68  F026         	call	_LCD_InButton	;wreg free
  6817  002AD6  0900               	iorlw	0
  6818  002AD8  B4D8               	btfsc	status,2,c
  6819  002ADA  EF71  F015         	goto	u7301
  6820  002ADE  EF73  F015         	goto	u7300
  6821  002AE2                     u7301:
  6822  002AE2  EF99  F016         	goto	l644
  6823  002AE6                     u7300:
  6824  002AE6                     
  6825                           ;stateMachine/gameController.c: 84:             {;stateMachine/gameController.c: 85:    
      +                                       XF_pushEvent(evTwoPlayer,0);
  6826  002AE6  0E00               	movlw	0
  6827  002AE8  6E18               	movwf	XF_pushEvent@inISR^0,c
  6828  002AEA  0E06               	movlw	6
  6829  002AEC  ECC5  F02E         	call	_XF_pushEvent
  6830                           
  6831                           ;stateMachine/gameController.c: 86:                 GameParameters_resetPos(g);
  6832  002AF0  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6833  002AF4  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6834  002AF8  EC40  F031         	call	_GameParameters_resetPos	;wreg free
  6835  002AFC  EF99  F016         	goto	l644
  6836  002B00                     l9931:
  6837                           
  6838                           ;stateMachine/gameController.c: 91:             if(LCD_InSlider(&(g->sldParam),g->x,g->y
      +                          ))
  6839  002B00  0EB0               	movlw	176
  6840  002B02  2437               	addwf	gameControllerController@g^0,w,c
  6841  002B04  6E12               	movwf	LCD_InSlider@slider^0,c
  6842  002B06  0E00               	movlw	0
  6843  002B08  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6844  002B0A  6E13               	movwf	(LCD_InSlider@slider+1)^0,c
  6845  002B0C  EE20 F004          	lfsr	2,4
  6846  002B10  5037               	movf	gameControllerController@g^0,w,c
  6847  002B12  26D9               	addwf	fsr2l,f,c
  6848  002B14  5038               	movf	(gameControllerController@g+1)^0,w,c
  6849  002B16  22DA               	addwfc	fsr2h,f,c
  6850  002B18  CFDE F014          	movff	postinc2,LCD_InSlider@posX
  6851  002B1C  CFDD F015          	movff	postdec2,LCD_InSlider@posX+1
  6852  002B20  EE20 F006          	lfsr	2,6
  6853  002B24  5037               	movf	gameControllerController@g^0,w,c
  6854  002B26  26D9               	addwf	fsr2l,f,c
  6855  002B28  5038               	movf	(gameControllerController@g+1)^0,w,c
  6856  002B2A  22DA               	addwfc	fsr2h,f,c
  6857  002B2C  CFDE F016          	movff	postinc2,LCD_InSlider@posY
  6858  002B30  CFDD F017          	movff	postdec2,LCD_InSlider@posY+1
  6859  002B34  ECD7  F026         	call	_LCD_InSlider	;wreg free
  6860  002B38  0900               	iorlw	0
  6861  002B3A  B4D8               	btfsc	status,2,c
  6862  002B3C  EFA2  F015         	goto	u7311
  6863  002B40  EFA4  F015         	goto	u7310
  6864  002B44                     u7311:
  6865  002B44  EFB8  F015         	goto	l9937
  6866  002B48                     u7310:
  6867  002B48                     
  6868                           ;stateMachine/gameController.c: 92:             {;stateMachine/gameController.c: 93:    
      +                                       backlightController(g);
  6869  002B48  C037  F018         	movff	gameControllerController@g,backlightController@g
  6870  002B4C  C038  F019         	movff	gameControllerController@g+1,backlightController@g+1
  6871  002B50  ECBC  F00C         	call	_backlightController	;wreg free
  6872                           
  6873                           ;stateMachine/gameController.c: 94:                 LCD_SliderUpdate(&(g->sldParam));
  6874  002B54  0EB0               	movlw	176
  6875  002B56  2437               	addwf	gameControllerController@g^0,w,c
  6876  002B58  6E27               	movwf	LCD_SliderUpdate@slider^0,c
  6877  002B5A  0E00               	movlw	0
  6878  002B5C  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6879  002B5E  6E28               	movwf	(LCD_SliderUpdate@slider+1)^0,c
  6880  002B60  EC51  F00A         	call	_LCD_SliderUpdate	;wreg free
  6881  002B64                     
  6882                           ;stateMachine/gameController.c: 95:                 GameParameters_resetPos(g);
  6883  002B64  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6884  002B68  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6885  002B6C  EC40  F031         	call	_GameParameters_resetPos	;wreg free
  6886  002B70                     l9937:
  6887                           
  6888                           ;stateMachine/gameController.c: 98:             if(LCD_InButton(&(g->btnLeaveParam),g->x
      +                          ,g->y))
  6889  002B70  0E50               	movlw	80
  6890  002B72  2437               	addwf	gameControllerController@g^0,w,c
  6891  002B74  6E12               	movwf	LCD_InButton@button^0,c
  6892  002B76  0E00               	movlw	0
  6893  002B78  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  6894  002B7A  6E13               	movwf	(LCD_InButton@button+1)^0,c
  6895  002B7C  EE20 F004          	lfsr	2,4
  6896  002B80  5037               	movf	gameControllerController@g^0,w,c
  6897  002B82  26D9               	addwf	fsr2l,f,c
  6898  002B84  5038               	movf	(gameControllerController@g+1)^0,w,c
  6899  002B86  22DA               	addwfc	fsr2h,f,c
  6900  002B88  CFDE F014          	movff	postinc2,LCD_InButton@posX
  6901  002B8C  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  6902  002B90  EE20 F006          	lfsr	2,6
  6903  002B94  5037               	movf	gameControllerController@g^0,w,c
  6904  002B96  26D9               	addwf	fsr2l,f,c
  6905  002B98  5038               	movf	(gameControllerController@g+1)^0,w,c
  6906  002B9A  22DA               	addwfc	fsr2h,f,c
  6907  002B9C  CFDE F016          	movff	postinc2,LCD_InButton@posY
  6908  002BA0  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  6909  002BA4  EC68  F026         	call	_LCD_InButton	;wreg free
  6910  002BA8  0900               	iorlw	0
  6911  002BAA  B4D8               	btfsc	status,2,c
  6912  002BAC  EFDA  F015         	goto	u7321
  6913  002BB0  EFDC  F015         	goto	u7320
  6914  002BB4                     u7321:
  6915  002BB4  EF99  F016         	goto	l644
  6916  002BB8                     u7320:
  6917  002BB8                     
  6918                           ;stateMachine/gameController.c: 99:             {;stateMachine/gameController.c: 100:   
      +                                        XF_pushEvent(evLeaveParam,0);
  6919  002BB8  0E00               	movlw	0
  6920  002BBA  6E18               	movwf	XF_pushEvent@inISR^0,c
  6921  002BBC  0E08               	movlw	8
  6922  002BBE  ECC5  F02E         	call	_XF_pushEvent
  6923                           
  6924                           ;stateMachine/gameController.c: 101:                 GameParameters_resetPos(g);
  6925  002BC2  C037  F012         	movff	gameControllerController@g,GameParameters_resetPos@s
  6926  002BC6  C038  F013         	movff	gameControllerController@g+1,GameParameters_resetPos@s+1
  6927  002BCA  EC40  F031         	call	_GameParameters_resetPos	;wreg free
  6928  002BCE  EF99  F016         	goto	l644
  6929  002BD2                     l9941:
  6930                           
  6931                           ;stateMachine/gameController.c: 105:             if (ev==evTimerPos)
  6932  002BD2  0E04               	movlw	4
  6933  002BD4  1839               	xorwf	gameControllerController@ev^0,w,c
  6934  002BD6  A4D8               	btfss	status,2,c
  6935  002BD8  EFF0  F015         	goto	u7331
  6936  002BDC  EFF2  F015         	goto	u7330
  6937  002BE0                     u7331:
  6938  002BE0  EFFA  F015         	goto	l9945
  6939  002BE4                     u7330:
  6940  002BE4                     
  6941                           ;stateMachine/gameController.c: 106:             {;stateMachine/gameController.c: 108:  
      +                                         moovePaddle(g);
  6942  002BE4  C037  F01C         	movff	gameControllerController@g,moovePaddle@g
  6943  002BE8  C038  F01D         	movff	gameControllerController@g+1,moovePaddle@g+1
  6944  002BEC  EC77  F025         	call	_moovePaddle	;wreg free
  6945                           
  6946                           ;stateMachine/gameController.c: 110:             }
  6947  002BF0  EF99  F016         	goto	l644
  6948  002BF4                     l9945:
  6949  002BF4  0E0A               	movlw	10
  6950  002BF6  1839               	xorwf	gameControllerController@ev^0,w,c
  6951  002BF8  A4D8               	btfss	status,2,c
  6952  002BFA  EF01  F016         	goto	u7341
  6953  002BFE  EF03  F016         	goto	u7340
  6954  002C02                     u7341:
  6955  002C02  EF99  F016         	goto	l644
  6956  002C06                     u7340:
  6957  002C06                     
  6958                           ;stateMachine/gameController.c: 112:             {;stateMachine/gameController.c: 114:  
      +                                         mooveBall(g);
  6959  002C06  C037  F025         	movff	gameControllerController@g,mooveBall@g
  6960  002C0A  C038  F026         	movff	gameControllerController@g+1,mooveBall@g+1
  6961  002C0E  EC69  F031         	call	_mooveBall	;wreg free
  6962  002C12                     
  6963                           ;stateMachine/gameController.c: 117:                 if(g->b.x+50>=239)
  6964  002C12  EE20 F0C9          	lfsr	2,201
  6965  002C16  5037               	movf	gameControllerController@g^0,w,c
  6966  002C18  26D9               	addwf	fsr2l,f,c
  6967  002C1A  5038               	movf	(gameControllerController@g+1)^0,w,c
  6968  002C1C  22DA               	addwfc	fsr2h,f,c
  6969  002C1E  CFDE F03A          	movff	postinc2,??_gameControllerController
  6970  002C22  CFDD F03B          	movff	postdec2,??_gameControllerController+1
  6971  002C26  0E32               	movlw	50
  6972  002C28  263A               	addwf	??_gameControllerController^0,f,c
  6973  002C2A  0E00               	movlw	0
  6974  002C2C  223B               	addwfc	(??_gameControllerController+1)^0,f,c
  6975  002C2E  503B               	movf	(??_gameControllerController+1)^0,w,c
  6976  002C30  E109               	bnz	u7350
  6977  002C32  0EEF               	movlw	239
  6978  002C34  5C3A               	subwf	??_gameControllerController^0,w,c
  6979  002C36  A0D8               	btfss	status,0,c
  6980  002C38  EF20  F016         	goto	u7351
  6981  002C3C  EF22  F016         	goto	u7350
  6982  002C40                     u7351:
  6983  002C40  EF2E  F016         	goto	l9953
  6984  002C44                     u7350:
  6985  002C44                     
  6986                           ;stateMachine/gameController.c: 118:                 {;stateMachine/gameController.c: 11
      +                          9:                     g->p2.x=239-50;
  6987  002C44  EE20 F0DF          	lfsr	2,223
  6988  002C48  5037               	movf	gameControllerController@g^0,w,c
  6989  002C4A  26D9               	addwf	fsr2l,f,c
  6990  002C4C  5038               	movf	(gameControllerController@g+1)^0,w,c
  6991  002C4E  22DA               	addwfc	fsr2h,f,c
  6992  002C50  0EBD               	movlw	189
  6993  002C52  6EDE               	movwf	postinc2,c
  6994  002C54  0E00               	movlw	0
  6995  002C56  6EDD               	movwf	postdec2,c
  6996                           
  6997                           ;stateMachine/gameController.c: 120:                 }
  6998  002C58  EF3E  F016         	goto	l9955
  6999  002C5C                     l9953:
  7000                           
  7001                           ;stateMachine/gameController.c: 122:                 {;stateMachine/gameController.c: 12
      +                          3:                     g->p2.x=g->b.x;
  7002  002C5C  EE20 F0C9          	lfsr	2,201
  7003  002C60  5037               	movf	gameControllerController@g^0,w,c
  7004  002C62  26D9               	addwf	fsr2l,f,c
  7005  002C64  5038               	movf	(gameControllerController@g+1)^0,w,c
  7006  002C66  22DA               	addwfc	fsr2h,f,c
  7007  002C68  EE10 F0DF          	lfsr	1,223
  7008  002C6C  5037               	movf	gameControllerController@g^0,w,c
  7009  002C6E  26E1               	addwf	fsr1l,f,c
  7010  002C70  5038               	movf	(gameControllerController@g+1)^0,w,c
  7011  002C72  22E2               	addwfc	fsr1h,f,c
  7012  002C74  CFDE FFE6          	movff	postinc2,postinc1
  7013  002C78  CFDD FFE5          	movff	postdec2,postdec1
  7014  002C7C                     l9955:
  7015                           
  7016                           ;stateMachine/gameController.c: 125:                 XF_pushEvent(evRedrawPaddle2,0);
  7017  002C7C  0E00               	movlw	0
  7018  002C7E  6E18               	movwf	XF_pushEvent@inISR^0,c
  7019  002C80  0E0C               	movlw	12
  7020  002C82  ECC5  F02E         	call	_XF_pushEvent
  7021  002C86  EF99  F016         	goto	l644
  7022  002C8A                     l9957:
  7023                           
  7024                           ;stateMachine/gameController.c: 131:             if(LCD_InButton(&(g->btnNewGame),g->x,g
      +                          ->y))
  7025  002C8A  0E80               	movlw	128
  7026  002C8C  2437               	addwf	gameControllerController@g^0,w,c
  7027  002C8E  6E12               	movwf	LCD_InButton@button^0,c
  7028  002C90  0E00               	movlw	0
  7029  002C92  2038               	addwfc	(gameControllerController@g+1)^0,w,c
  7030  002C94  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7031  002C96  EE20 F004          	lfsr	2,4
  7032  002C9A  5037               	movf	gameControllerController@g^0,w,c
  7033  002C9C  26D9               	addwf	fsr2l,f,c
  7034  002C9E  5038               	movf	(gameControllerController@g+1)^0,w,c
  7035  002CA0  22DA               	addwfc	fsr2h,f,c
  7036  002CA2  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7037  002CA6  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7038  002CAA  EE20 F006          	lfsr	2,6
  7039  002CAE  5037               	movf	gameControllerController@g^0,w,c
  7040  002CB0  26D9               	addwf	fsr2l,f,c
  7041  002CB2  5038               	movf	(gameControllerController@g+1)^0,w,c
  7042  002CB4  22DA               	addwfc	fsr2h,f,c
  7043  002CB6  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7044  002CBA  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7045  002CBE  EC68  F026         	call	_LCD_InButton	;wreg free
  7046  002CC2  0900               	iorlw	0
  7047  002CC4  B4D8               	btfsc	status,2,c
  7048  002CC6  EF67  F016         	goto	u7361
  7049  002CCA  EF69  F016         	goto	u7360
  7050  002CCE                     u7361:
  7051  002CCE  EF99  F016         	goto	l644
  7052  002CD2                     u7360:
  7053  002CD2                     
  7054                           ;stateMachine/gameController.c: 132:             {;stateMachine/gameController.c: 134:  
      +                                         GameParameters_init(g);
  7055  002CD2  C037  F02B         	movff	gameControllerController@g,GameParameters_init@s
  7056  002CD6  C038  F02C         	movff	gameControllerController@g+1,GameParameters_init@s+1
  7057  002CDA  EC30  F011         	call	_GameParameters_init	;wreg free
  7058                           
  7059                           ;stateMachine/gameController.c: 135:                 XF_pushEvent(evNewGame,0);
  7060  002CDE  0E00               	movlw	0
  7061  002CE0  6E18               	movwf	XF_pushEvent@inISR^0,c
  7062  002CE2  0E0F               	movlw	15
  7063  002CE4  ECC5  F02E         	call	_XF_pushEvent
  7064  002CE8                     
  7065                           ;stateMachine/gameController.c: 136:                 gameStateMachine=NOGAME;
  7066  002CE8  0E00               	movlw	0
  7067  002CEA  6E4D               	movwf	_gameStateMachine^0,c
  7068  002CEC  EF99  F016         	goto	l644
  7069  002CF0                     l9965:
  7070  002CF0  504D               	movf	_gameStateMachine^0,w,c
  7071  002CF2  6E3A               	movwf	??_gameControllerController^0,c
  7072  002CF4  6A3B               	clrf	(??_gameControllerController+1)^0,c
  7073                           
  7074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7075                           ; Switch size 1, requested type "simple"
  7076                           ; Number of cases is 1, Range of values is 0 to 0
  7077                           ; switch strategies available:
  7078                           ; Name         Instructions Cycles
  7079                           ; simple_byte            4     3 (average)
  7080                           ;	Chosen strategy is simple_byte
  7081  002CF6  503B               	movf	(??_gameControllerController+1)^0,w,c
  7082  002CF8  0A00               	xorlw	0	; case 0
  7083  002CFA  B4D8               	btfsc	status,2,c
  7084  002CFC  EF82  F016         	goto	l10707
  7085  002D00  EF99  F016         	goto	l644
  7086  002D04                     l10707:
  7087                           
  7088                           ; Switch size 1, requested type "simple"
  7089                           ; Number of cases is 5, Range of values is 0 to 4
  7090                           ; switch strategies available:
  7091                           ; Name         Instructions Cycles
  7092                           ; simple_byte           16     9 (average)
  7093                           ;	Chosen strategy is simple_byte
  7094  002D04  503A               	movf	??_gameControllerController^0,w,c
  7095  002D06  0A00               	xorlw	0	; case 0
  7096  002D08  B4D8               	btfsc	status,2,c
  7097  002D0A  EFF1  F014         	goto	l9923
  7098  002D0E  0A01               	xorlw	1	; case 1
  7099  002D10  B4D8               	btfsc	status,2,c
  7100  002D12  EF80  F015         	goto	l9931
  7101  002D16  0A03               	xorlw	3	; case 2
  7102  002D18  B4D8               	btfsc	status,2,c
  7103  002D1A  EFE9  F015         	goto	l9941
  7104  002D1E  0A01               	xorlw	1	; case 3
  7105  002D20  B4D8               	btfsc	status,2,c
  7106  002D22  EF99  F016         	goto	l644
  7107  002D26  0A07               	xorlw	7	; case 4
  7108  002D28  B4D8               	btfsc	status,2,c
  7109  002D2A  EF45  F016         	goto	l9957
  7110  002D2E  EF99  F016         	goto	l644
  7111  002D32                     l644:
  7112  002D32  0012               	return		;funcret
  7113  002D34                     __end_of_gameControllerController:
  7114                           	callstack 0
  7115                           
  7116 ;; *************** function _moovePaddle *****************
  7117 ;; Defined at:
  7118 ;;		line 143 in file "stateMachine/gameController.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;  g               2   27[COMRAM] PTR struct GameParameter
  7121 ;;		 -> g1(239), 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7133 ;;      Params:         2       0       0       0       0       0       0
  7134 ;;      Locals:         0       0       0       0       0       0       0
  7135 ;;      Temps:          0       0       0       0       0       0       0
  7136 ;;      Totals:         2       0       0       0       0       0       0
  7137 ;;Total ram usage:        2 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; Hardware stack levels required when called: 6
  7140 ;; This function calls:
  7141 ;;		_GameParameters_resetPos
  7142 ;;		_LCD_InButton
  7143 ;;		_Paddle_addX
  7144 ;;		_XF_pushEvent
  7145 ;; This function is called by:
  7146 ;;		_gameControllerController
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text24
  7151  004AEE                     __ptext24:
  7152                           	callstack 0
  7153  004AEE                     _moovePaddle:
  7154                           	callstack 20
  7155  004AEE                     
  7156                           ;stateMachine/gameController.c: 143: void moovePaddle(GameParameters* g);stateMachine/ga
      +                          meController.c: 144: {;stateMachine/gameController.c: 146:     if(LCD_InButton(&(g->btnL
      +                          eft),g->x,g->y))
  7157  004AEE  0E68               	movlw	104
  7158  004AF0  241C               	addwf	moovePaddle@g^0,w,c
  7159  004AF2  6E12               	movwf	LCD_InButton@button^0,c
  7160  004AF4  0E00               	movlw	0
  7161  004AF6  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7162  004AF8  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7163  004AFA  EE20 F004          	lfsr	2,4
  7164  004AFE  501C               	movf	moovePaddle@g^0,w,c
  7165  004B00  26D9               	addwf	fsr2l,f,c
  7166  004B02  501D               	movf	(moovePaddle@g+1)^0,w,c
  7167  004B04  22DA               	addwfc	fsr2h,f,c
  7168  004B06  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7169  004B0A  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7170  004B0E  EE20 F006          	lfsr	2,6
  7171  004B12  501C               	movf	moovePaddle@g^0,w,c
  7172  004B14  26D9               	addwf	fsr2l,f,c
  7173  004B16  501D               	movf	(moovePaddle@g+1)^0,w,c
  7174  004B18  22DA               	addwfc	fsr2h,f,c
  7175  004B1A  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7176  004B1E  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7177  004B22  EC68  F026         	call	_LCD_InButton	;wreg free
  7178  004B26  0900               	iorlw	0
  7179  004B28  B4D8               	btfsc	status,2,c
  7180  004B2A  EF99  F025         	goto	u7181
  7181  004B2E  EF9B  F025         	goto	u7180
  7182  004B32                     u7181:
  7183  004B32  EFB1  F025         	goto	l647
  7184  004B36                     u7180:
  7185  004B36                     
  7186                           ;stateMachine/gameController.c: 147:     {;stateMachine/gameController.c: 148:         G
      +                          ameParameters_resetPos(g);
  7187  004B36  C01C  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  7188  004B3A  C01D  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  7189  004B3E  EC40  F031         	call	_GameParameters_resetPos	;wreg free
  7190                           
  7191                           ;stateMachine/gameController.c: 149:         Paddle_addX(&g->p1,20,0);
  7192  004B42  0ED5               	movlw	213
  7193  004B44  241C               	addwf	moovePaddle@g^0,w,c
  7194  004B46  6E12               	movwf	Paddle_addX@p^0,c
  7195  004B48  0E00               	movlw	0
  7196  004B4A  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7197  004B4C  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7198  004B4E  0E00               	movlw	0
  7199  004B50  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7200  004B52  0E14               	movlw	20
  7201  004B54  6E14               	movwf	Paddle_addX@value^0,c
  7202  004B56  0E00               	movlw	0
  7203  004B58  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7204  004B5A  0E00               	movlw	0
  7205  004B5C  6E16               	movwf	Paddle_addX@add^0,c
  7206  004B5E  EC46  F027         	call	_Paddle_addX	;wreg free
  7207  004B62                     l647:
  7208                           
  7209                           ;stateMachine/gameController.c: 152:     if(LCD_InButton(&(g->btnRight),g->x,g->y))
  7210  004B62  0E98               	movlw	152
  7211  004B64  241C               	addwf	moovePaddle@g^0,w,c
  7212  004B66  6E12               	movwf	LCD_InButton@button^0,c
  7213  004B68  0E00               	movlw	0
  7214  004B6A  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7215  004B6C  6E13               	movwf	(LCD_InButton@button+1)^0,c
  7216  004B6E  EE20 F004          	lfsr	2,4
  7217  004B72  501C               	movf	moovePaddle@g^0,w,c
  7218  004B74  26D9               	addwf	fsr2l,f,c
  7219  004B76  501D               	movf	(moovePaddle@g+1)^0,w,c
  7220  004B78  22DA               	addwfc	fsr2h,f,c
  7221  004B7A  CFDE F014          	movff	postinc2,LCD_InButton@posX
  7222  004B7E  CFDD F015          	movff	postdec2,LCD_InButton@posX+1
  7223  004B82  EE20 F006          	lfsr	2,6
  7224  004B86  501C               	movf	moovePaddle@g^0,w,c
  7225  004B88  26D9               	addwf	fsr2l,f,c
  7226  004B8A  501D               	movf	(moovePaddle@g+1)^0,w,c
  7227  004B8C  22DA               	addwfc	fsr2h,f,c
  7228  004B8E  CFDE F016          	movff	postinc2,LCD_InButton@posY
  7229  004B92  CFDD F017          	movff	postdec2,LCD_InButton@posY+1
  7230  004B96  EC68  F026         	call	_LCD_InButton	;wreg free
  7231  004B9A  0900               	iorlw	0
  7232  004B9C  B4D8               	btfsc	status,2,c
  7233  004B9E  EFD3  F025         	goto	u7191
  7234  004BA2  EFD5  F025         	goto	u7190
  7235  004BA6                     u7191:
  7236  004BA6  EFEB  F025         	goto	l648
  7237  004BAA                     u7190:
  7238  004BAA                     
  7239                           ;stateMachine/gameController.c: 153:     {;stateMachine/gameController.c: 154:         G
      +                          ameParameters_resetPos(g);
  7240  004BAA  C01C  F012         	movff	moovePaddle@g,GameParameters_resetPos@s
  7241  004BAE  C01D  F013         	movff	moovePaddle@g+1,GameParameters_resetPos@s+1
  7242  004BB2  EC40  F031         	call	_GameParameters_resetPos	;wreg free
  7243                           
  7244                           ;stateMachine/gameController.c: 155:         Paddle_addX(&g->p1,20,1);
  7245  004BB6  0ED5               	movlw	213
  7246  004BB8  241C               	addwf	moovePaddle@g^0,w,c
  7247  004BBA  6E12               	movwf	Paddle_addX@p^0,c
  7248  004BBC  0E00               	movlw	0
  7249  004BBE  201D               	addwfc	(moovePaddle@g+1)^0,w,c
  7250  004BC0  6E13               	movwf	(Paddle_addX@p+1)^0,c
  7251  004BC2  0E00               	movlw	0
  7252  004BC4  6E15               	movwf	(Paddle_addX@value+1)^0,c
  7253  004BC6  0E14               	movlw	20
  7254  004BC8  6E14               	movwf	Paddle_addX@value^0,c
  7255  004BCA  0E00               	movlw	0
  7256  004BCC  6E17               	movwf	(Paddle_addX@add+1)^0,c
  7257  004BCE  0E01               	movlw	1
  7258  004BD0  6E16               	movwf	Paddle_addX@add^0,c
  7259  004BD2  EC46  F027         	call	_Paddle_addX	;wreg free
  7260  004BD6                     l648:
  7261                           
  7262                           ;stateMachine/gameController.c: 157:     XF_pushEvent(evRedrawPaddle1,0);
  7263  004BD6  0E00               	movlw	0
  7264  004BD8  6E18               	movwf	XF_pushEvent@inISR^0,c
  7265  004BDA  0E0B               	movlw	11
  7266  004BDC  ECC5  F02E         	call	_XF_pushEvent
  7267  004BE0  0012               	return		;funcret
  7268  004BE2                     __end_of_moovePaddle:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function _Paddle_addX *****************
  7272 ;; Defined at:
  7273 ;;		line 28 in file "class/paddle.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  p               2   17[COMRAM] PTR struct Paddle
  7276 ;;		 -> g1(239), 
  7277 ;;  value           2   19[COMRAM] unsigned short 
  7278 ;;  add             2   21[COMRAM] unsigned short 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      void 
  7283 ;; Registers used:
  7284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7290 ;;      Params:         6       0       0       0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0
  7292 ;;      Temps:          2       0       0       0       0       0       0
  7293 ;;      Totals:         8       0       0       0       0       0       0
  7294 ;;Total ram usage:        8 bytes
  7295 ;; Hardware stack levels used: 1
  7296 ;; Hardware stack levels required when called: 4
  7297 ;; This function calls:
  7298 ;;		Nothing
  7299 ;; This function is called by:
  7300 ;;		_moovePaddle
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text25
  7305  004E8C                     __ptext25:
  7306                           	callstack 0
  7307  004E8C                     _Paddle_addX:
  7308                           	callstack 21
  7309  004E8C                     
  7310                           ;class/paddle.c: 28: void Paddle_addX(struct Paddle* p,uint16_t value,uint16_t add);clas
      +                          s/paddle.c: 29: {;class/paddle.c: 30:     if(add==1)
  7311  004E8C  0416               	decf	Paddle_addX@add^0,w,c
  7312  004E8E  1017               	iorwf	(Paddle_addX@add+1)^0,w,c
  7313  004E90  A4D8               	btfss	status,2,c
  7314  004E92  EF4D  F027         	goto	u6571
  7315  004E96  EF4F  F027         	goto	u6570
  7316  004E9A                     u6571:
  7317  004E9A  EF84  F027         	goto	l9333
  7318  004E9E                     u6570:
  7319  004E9E                     
  7320                           ;class/paddle.c: 31:     {;class/paddle.c: 32:         p->x=(p->x)+value;
  7321  004E9E  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7322  004EA2  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7323  004EA6  CFDE F018          	movff	postinc2,??_Paddle_addX
  7324  004EAA  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7325  004EAE  5014               	movf	Paddle_addX@value^0,w,c
  7326  004EB0  2618               	addwf	??_Paddle_addX^0,f,c
  7327  004EB2  5015               	movf	(Paddle_addX@value+1)^0,w,c
  7328  004EB4  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  7329  004EB6  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7330  004EBA  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7331  004EBE  C018  FFDE         	movff	??_Paddle_addX,postinc2
  7332  004EC2  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  7333                           
  7334                           ;class/paddle.c: 33:         if((p->x+50)>239)
  7335  004EC6  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7336  004ECA  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7337  004ECE  CFDE F018          	movff	postinc2,??_Paddle_addX
  7338  004ED2  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7339  004ED6  0E32               	movlw	50
  7340  004ED8  2618               	addwf	??_Paddle_addX^0,f,c
  7341  004EDA  0E00               	movlw	0
  7342  004EDC  2219               	addwfc	(??_Paddle_addX+1)^0,f,c
  7343  004EDE  5019               	movf	(??_Paddle_addX+1)^0,w,c
  7344  004EE0  E109               	bnz	u6580
  7345  004EE2  0EF0               	movlw	240
  7346  004EE4  5C18               	subwf	??_Paddle_addX^0,w,c
  7347  004EE6  A0D8               	btfss	status,0,c
  7348  004EE8  EF78  F027         	goto	u6581
  7349  004EEC  EF7A  F027         	goto	u6580
  7350  004EF0                     u6581:
  7351  004EF0  EFB2  F027         	goto	l26
  7352  004EF4                     u6580:
  7353  004EF4                     
  7354                           ;class/paddle.c: 34:         {;class/paddle.c: 35:             p->x=239-(50);
  7355  004EF4  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7356  004EF8  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7357  004EFC  0EBD               	movlw	189
  7358  004EFE  6EDE               	movwf	postinc2,c
  7359  004F00  0E00               	movlw	0
  7360  004F02  6EDD               	movwf	postdec2,c
  7361  004F04  EFB2  F027         	goto	l26
  7362  004F08                     l9333:
  7363                           
  7364                           ;class/paddle.c: 39:     {;class/paddle.c: 40:         if((p->x)<21)
  7365  004F08  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7366  004F0C  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7367  004F10  0E01               	movlw	1
  7368  004F12  50DB               	movf	plusw2,w,c
  7369  004F14  E107               	bnz	u6591
  7370  004F16  0E15               	movlw	21
  7371  004F18  5CDE               	subwf	postinc2,w,c
  7372  004F1A  B0D8               	btfsc	status,0,c
  7373  004F1C  EF92  F027         	goto	u6591
  7374  004F20  EF94  F027         	goto	u6590
  7375  004F24                     u6591:
  7376  004F24  EF9E  F027         	goto	l9337
  7377  004F28                     u6590:
  7378  004F28                     
  7379                           ;class/paddle.c: 41:         {;class/paddle.c: 42:             p->x=0;
  7380  004F28  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7381  004F2C  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7382  004F30  0E00               	movlw	0
  7383  004F32  6EDE               	movwf	postinc2,c
  7384  004F34  0E00               	movlw	0
  7385  004F36  6EDD               	movwf	postdec2,c
  7386                           
  7387                           ;class/paddle.c: 43:         }
  7388  004F38  EFB2  F027         	goto	l26
  7389  004F3C                     l9337:
  7390                           
  7391                           ;class/paddle.c: 45:         {;class/paddle.c: 46:             p->x=(p->x)-value;
  7392  004F3C  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7393  004F40  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7394  004F44  CFDE F018          	movff	postinc2,??_Paddle_addX
  7395  004F48  CFDD F019          	movff	postdec2,??_Paddle_addX+1
  7396  004F4C  5014               	movf	Paddle_addX@value^0,w,c
  7397  004F4E  5E18               	subwf	??_Paddle_addX^0,f,c
  7398  004F50  5015               	movf	(Paddle_addX@value+1)^0,w,c
  7399  004F52  5A19               	subwfb	(??_Paddle_addX+1)^0,f,c
  7400  004F54  C012  FFD9         	movff	Paddle_addX@p,fsr2l
  7401  004F58  C013  FFDA         	movff	Paddle_addX@p+1,fsr2h
  7402  004F5C  C018  FFDE         	movff	??_Paddle_addX,postinc2
  7403  004F60  C019  FFDD         	movff	??_Paddle_addX+1,postdec2
  7404  004F64                     l26:
  7405  004F64  0012               	return		;funcret
  7406  004F66                     __end_of_Paddle_addX:
  7407                           	callstack 0
  7408                           
  7409 ;; *************** function _LCD_InButton *****************
  7410 ;; Defined at:
  7411 ;;		line 514 in file "libraries/lcd_highlevel.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;  button          2   17[COMRAM] PTR struct .
  7414 ;;		 -> g1(239), 
  7415 ;;  posX            2   19[COMRAM] unsigned short 
  7416 ;;  posY            2   21[COMRAM] unsigned short 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      unsigned char 
  7421 ;; Registers used:
  7422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7428 ;;      Params:         6       0       0       0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0
  7430 ;;      Temps:          4       0       0       0       0       0       0
  7431 ;;      Totals:        10       0       0       0       0       0       0
  7432 ;;Total ram usage:       10 bytes
  7433 ;; Hardware stack levels used: 1
  7434 ;; Hardware stack levels required when called: 4
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_gameControllerController
  7439 ;;		_moovePaddle
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text26
  7444  004CD0                     __ptext26:
  7445                           	callstack 0
  7446  004CD0                     _LCD_InButton:
  7447                           	callstack 21
  7448  004CD0                     
  7449                           ;libraries/lcd_highlevel.c: 514: uint8_t LCD_InButton(btn_t * button, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 515: {;libraries/lcd_highlevel.c: 517:   if(posX 
      +                          < button->posX)
  7450  004CD0  C012  FFD9         	movff	LCD_InButton@button,fsr2l
  7451  004CD4  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
  7452  004CD8  50DE               	movf	postinc2,w,c
  7453  004CDA  5C14               	subwf	LCD_InButton@posX^0,w,c
  7454  004CDC  50DE               	movf	postinc2,w,c
  7455  004CDE  5815               	subwfb	(LCD_InButton@posX+1)^0,w,c
  7456  004CE0  B0D8               	btfsc	status,0,c
  7457  004CE2  EF75  F026         	goto	u6671
  7458  004CE6  EF77  F026         	goto	u6670
  7459  004CEA                     u6671:
  7460  004CEA  EF7A  F026         	goto	l9557
  7461  004CEE                     u6670:
  7462  004CEE                     l9553:
  7463                           
  7464                           ;libraries/lcd_highlevel.c: 518:   {;libraries/lcd_highlevel.c: 519:     return 0;
  7465  004CEE  0E00               	movlw	0
  7466  004CF0  EFD6  F026         	goto	l264
  7467  004CF4                     l9557:
  7468                           
  7469                           ;libraries/lcd_highlevel.c: 522:   if(posX > (button->posX + button->width))
  7470  004CF4  EE20 F004          	lfsr	2,4
  7471  004CF8  5012               	movf	LCD_InButton@button^0,w,c
  7472  004CFA  26D9               	addwf	fsr2l,f,c
  7473  004CFC  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7474  004CFE  22DA               	addwfc	fsr2h,f,c
  7475  004D00  CFDE F018          	movff	postinc2,??_LCD_InButton
  7476  004D04  CFDD F019          	movff	postdec2,??_LCD_InButton+1
  7477  004D08  C012  FFD9         	movff	LCD_InButton@button,fsr2l
  7478  004D0C  C013  FFDA         	movff	LCD_InButton@button+1,fsr2h
  7479  004D10  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
  7480  004D14  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
  7481  004D18  5018               	movf	??_LCD_InButton^0,w,c
  7482  004D1A  261A               	addwf	(??_LCD_InButton+2)^0,f,c
  7483  004D1C  5019               	movf	(??_LCD_InButton+1)^0,w,c
  7484  004D1E  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
  7485  004D20  5014               	movf	LCD_InButton@posX^0,w,c
  7486  004D22  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
  7487  004D24  5015               	movf	(LCD_InButton@posX+1)^0,w,c
  7488  004D26  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
  7489  004D28  B0D8               	btfsc	status,0,c
  7490  004D2A  EF99  F026         	goto	u6681
  7491  004D2E  EF9B  F026         	goto	u6680
  7492  004D32                     u6681:
  7493  004D32  EF9D  F026         	goto	l9563
  7494  004D36                     u6680:
  7495  004D36  EF77  F026         	goto	l9553
  7496  004D3A                     l9563:
  7497                           
  7498                           ;libraries/lcd_highlevel.c: 527:   if(posY < button->posY)
  7499  004D3A  EE20 F002          	lfsr	2,2
  7500  004D3E  5012               	movf	LCD_InButton@button^0,w,c
  7501  004D40  26D9               	addwf	fsr2l,f,c
  7502  004D42  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7503  004D44  22DA               	addwfc	fsr2h,f,c
  7504  004D46  50DE               	movf	postinc2,w,c
  7505  004D48  5C16               	subwf	LCD_InButton@posY^0,w,c
  7506  004D4A  50DE               	movf	postinc2,w,c
  7507  004D4C  5817               	subwfb	(LCD_InButton@posY+1)^0,w,c
  7508  004D4E  B0D8               	btfsc	status,0,c
  7509  004D50  EFAC  F026         	goto	u6691
  7510  004D54  EFAE  F026         	goto	u6690
  7511  004D58                     u6691:
  7512  004D58  EFB0  F026         	goto	l9569
  7513  004D5C                     u6690:
  7514  004D5C  EF77  F026         	goto	l9553
  7515  004D60                     l9569:
  7516                           
  7517                           ;libraries/lcd_highlevel.c: 532:   if(posY > (button->posY + button->height))
  7518  004D60  EE20 F006          	lfsr	2,6
  7519  004D64  5012               	movf	LCD_InButton@button^0,w,c
  7520  004D66  26D9               	addwf	fsr2l,f,c
  7521  004D68  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7522  004D6A  22DA               	addwfc	fsr2h,f,c
  7523  004D6C  CFDE F018          	movff	postinc2,??_LCD_InButton
  7524  004D70  CFDD F019          	movff	postdec2,??_LCD_InButton+1
  7525  004D74  EE20 F002          	lfsr	2,2
  7526  004D78  5012               	movf	LCD_InButton@button^0,w,c
  7527  004D7A  26D9               	addwf	fsr2l,f,c
  7528  004D7C  5013               	movf	(LCD_InButton@button+1)^0,w,c
  7529  004D7E  22DA               	addwfc	fsr2h,f,c
  7530  004D80  CFDE F01A          	movff	postinc2,??_LCD_InButton+2
  7531  004D84  CFDD F01B          	movff	postdec2,??_LCD_InButton+3
  7532  004D88  5018               	movf	??_LCD_InButton^0,w,c
  7533  004D8A  261A               	addwf	(??_LCD_InButton+2)^0,f,c
  7534  004D8C  5019               	movf	(??_LCD_InButton+1)^0,w,c
  7535  004D8E  221B               	addwfc	(??_LCD_InButton+3)^0,f,c
  7536  004D90  5016               	movf	LCD_InButton@posY^0,w,c
  7537  004D92  5C1A               	subwf	(??_LCD_InButton+2)^0,w,c
  7538  004D94  5017               	movf	(LCD_InButton@posY+1)^0,w,c
  7539  004D96  581B               	subwfb	(??_LCD_InButton+3)^0,w,c
  7540  004D98  B0D8               	btfsc	status,0,c
  7541  004D9A  EFD1  F026         	goto	u6701
  7542  004D9E  EFD3  F026         	goto	u6700
  7543  004DA2                     u6701:
  7544  004DA2  EFD5  F026         	goto	l9575
  7545  004DA6                     u6700:
  7546  004DA6  EF77  F026         	goto	l9553
  7547  004DAA                     l9575:
  7548                           
  7549                           ;libraries/lcd_highlevel.c: 536:   return 1;
  7550  004DAA  0E01               	movlw	1
  7551  004DAC                     l264:
  7552  004DAC  0012               	return		;funcret
  7553  004DAE                     __end_of_LCD_InButton:
  7554                           	callstack 0
  7555                           
  7556 ;; *************** function _GameParameters_resetPos *****************
  7557 ;; Defined at:
  7558 ;;		line 39 in file "class/gameParameters.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  s               2   17[COMRAM] PTR struct GameParameter
  7561 ;;		 -> g1(239), 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;		None
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  1    wreg      void 
  7566 ;; Registers used:
  7567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7573 ;;      Params:         2       0       0       0       0       0       0
  7574 ;;      Locals:         0       0       0       0       0       0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0
  7576 ;;      Totals:         2       0       0       0       0       0       0
  7577 ;;Total ram usage:        2 bytes
  7578 ;; Hardware stack levels used: 1
  7579 ;; Hardware stack levels required when called: 4
  7580 ;; This function calls:
  7581 ;;		Nothing
  7582 ;; This function is called by:
  7583 ;;		_gameControllerController
  7584 ;;		_moovePaddle
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	text27
  7589  006280                     __ptext27:
  7590                           	callstack 0
  7591  006280                     _GameParameters_resetPos:
  7592                           	callstack 21
  7593  006280                     
  7594                           ;class/gameParameters.c: 39: void GameParameters_resetPos(struct GameParameters* s);clas
      +                          s/gameParameters.c: 40: {;class/gameParameters.c: 41:     s->x=0;
  7595  006280  EE20 F004          	lfsr	2,4
  7596  006284  5012               	movf	GameParameters_resetPos@s^0,w,c
  7597  006286  26D9               	addwf	fsr2l,f,c
  7598  006288  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  7599  00628A  22DA               	addwfc	fsr2h,f,c
  7600  00628C  0E00               	movlw	0
  7601  00628E  6EDE               	movwf	postinc2,c
  7602  006290  0E00               	movlw	0
  7603  006292  6EDD               	movwf	postdec2,c
  7604                           
  7605                           ;class/gameParameters.c: 42:     s->y=0;
  7606  006294  EE20 F006          	lfsr	2,6
  7607  006298  5012               	movf	GameParameters_resetPos@s^0,w,c
  7608  00629A  26D9               	addwf	fsr2l,f,c
  7609  00629C  5013               	movf	(GameParameters_resetPos@s+1)^0,w,c
  7610  00629E  22DA               	addwfc	fsr2h,f,c
  7611  0062A0  0E00               	movlw	0
  7612  0062A2  6EDE               	movwf	postinc2,c
  7613  0062A4  0E00               	movlw	0
  7614  0062A6  6EDD               	movwf	postdec2,c
  7615  0062A8  0012               	return		;funcret
  7616  0062AA                     __end_of_GameParameters_resetPos:
  7617                           	callstack 0
  7618                           
  7619 ;; *************** function _mooveBall *****************
  7620 ;; Defined at:
  7621 ;;		line 159 in file "stateMachine/gameController.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  g               2   36[COMRAM] PTR struct GameParameter
  7624 ;;		 -> g1(239), 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;		None
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  1    wreg      void 
  7629 ;; Registers used:
  7630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7636 ;;      Params:         2       0       0       0       0       0       0
  7637 ;;      Locals:         0       0       0       0       0       0       0
  7638 ;;      Temps:          0       0       0       0       0       0       0
  7639 ;;      Totals:         2       0       0       0       0       0       0
  7640 ;;Total ram usage:        2 bytes
  7641 ;; Hardware stack levels used: 1
  7642 ;; Hardware stack levels required when called: 7
  7643 ;; This function calls:
  7644 ;;		_Ball_Update
  7645 ;;		_XF_pushEvent
  7646 ;;		_checkCollision
  7647 ;; This function is called by:
  7648 ;;		_gameControllerController
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text28
  7653  0062D2                     __ptext28:
  7654                           	callstack 0
  7655  0062D2                     _mooveBall:
  7656                           	callstack 19
  7657  0062D2                     
  7658                           ;stateMachine/gameController.c: 159: void mooveBall(GameParameters* g);stateMachine/game
      +                          Controller.c: 160: {;stateMachine/gameController.c: 161:     checkCollision(g);
  7659  0062D2  C025  F01B         	movff	mooveBall@g,checkCollision@g
  7660  0062D6  C026  F01C         	movff	mooveBall@g+1,checkCollision@g+1
  7661  0062DA  EC7A  F000         	call	_checkCollision	;wreg free
  7662                           
  7663                           ;stateMachine/gameController.c: 162:     Ball_Update(&g->b);
  7664  0062DE  0EC9               	movlw	201
  7665  0062E0  2425               	addwf	mooveBall@g^0,w,c
  7666  0062E2  6E12               	movwf	Ball_Update@b^0,c
  7667  0062E4  0E00               	movlw	0
  7668  0062E6  2026               	addwfc	(mooveBall@g+1)^0,w,c
  7669  0062E8  6E13               	movwf	(Ball_Update@b+1)^0,c
  7670  0062EA  EC1E  F02D         	call	_Ball_Update	;wreg free
  7671                           
  7672                           ;stateMachine/gameController.c: 163:     XF_pushEvent(evRedrawBall,0);
  7673  0062EE  0E00               	movlw	0
  7674  0062F0  6E18               	movwf	XF_pushEvent@inISR^0,c
  7675  0062F2  0E0D               	movlw	13
  7676  0062F4  ECC5  F02E         	call	_XF_pushEvent
  7677  0062F8  0012               	return		;funcret
  7678  0062FA                     __end_of_mooveBall:
  7679                           	callstack 0
  7680                           
  7681 ;; *************** function _checkCollision *****************
  7682 ;; Defined at:
  7683 ;;		line 165 in file "stateMachine/gameController.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;  g               2   26[COMRAM] PTR struct GameParameter
  7686 ;;		 -> g1(239), 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  s              20    0        unsigned char [20]
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      void 
  7691 ;; Registers used:
  7692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7698 ;;      Params:         2       0       0       0       0       0       0
  7699 ;;      Locals:         0       0       0       0       0       0       0
  7700 ;;      Temps:          8       0       0       0       0       0       0
  7701 ;;      Totals:        10       0       0       0       0       0       0
  7702 ;;Total ram usage:       10 bytes
  7703 ;; Hardware stack levels used: 1
  7704 ;; Hardware stack levels required when called: 6
  7705 ;; This function calls:
  7706 ;;		_XF_pushEvent
  7707 ;; This function is called by:
  7708 ;;		_mooveBall
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text29
  7713  0000F4                     __ptext29:
  7714                           	callstack 0
  7715  0000F4                     _checkCollision:
  7716                           	callstack 19
  7717  0000F4                     
  7718                           ;stateMachine/gameController.c: 165: void checkCollision(GameParameters* g);stateMachine
      +                          /gameController.c: 166: {;stateMachine/gameController.c: 167:     char s[20];;stateMachi
      +                          ne/gameController.c: 169:     if(g->b.x+g->b.dx+8>=239)
  7719  0000F4  EE20 F0D1          	lfsr	2,209
  7720  0000F8  501B               	movf	checkCollision@g^0,w,c
  7721  0000FA  26D9               	addwf	fsr2l,f,c
  7722  0000FC  501C               	movf	(checkCollision@g+1)^0,w,c
  7723  0000FE  22DA               	addwfc	fsr2h,f,c
  7724  000100  CFDE F01D          	movff	postinc2,??_checkCollision
  7725  000104  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7726  000108  EE20 F0C9          	lfsr	2,201
  7727  00010C  501B               	movf	checkCollision@g^0,w,c
  7728  00010E  26D9               	addwf	fsr2l,f,c
  7729  000110  501C               	movf	(checkCollision@g+1)^0,w,c
  7730  000112  22DA               	addwfc	fsr2h,f,c
  7731  000114  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7732  000118  CFDD F020          	movff	postdec2,??_checkCollision+3
  7733  00011C  501D               	movf	??_checkCollision^0,w,c
  7734  00011E  261F               	addwf	(??_checkCollision+2)^0,f,c
  7735  000120  501E               	movf	(??_checkCollision+1)^0,w,c
  7736  000122  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7737  000124  0E08               	movlw	8
  7738  000126  261F               	addwf	(??_checkCollision+2)^0,f,c
  7739  000128  0E00               	movlw	0
  7740  00012A  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7741  00012C  5020               	movf	(??_checkCollision+3)^0,w,c
  7742  00012E  E109               	bnz	u6710
  7743  000130  0EEF               	movlw	239
  7744  000132  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7745  000134  A0D8               	btfss	status,0,c
  7746  000136  EF9F  F000         	goto	u6711
  7747  00013A  EFA1  F000         	goto	u6710
  7748  00013E                     u6711:
  7749  00013E  EFB9  F000         	goto	l655
  7750  000142                     u6710:
  7751  000142                     
  7752                           ;stateMachine/gameController.c: 170:     {;stateMachine/gameController.c: 171:         g
      +                          ->b.dx=-g->b.dx;
  7753  000142  EE20 F0D1          	lfsr	2,209
  7754  000146  501B               	movf	checkCollision@g^0,w,c
  7755  000148  26D9               	addwf	fsr2l,f,c
  7756  00014A  501C               	movf	(checkCollision@g+1)^0,w,c
  7757  00014C  22DA               	addwfc	fsr2h,f,c
  7758  00014E  CFDE F01D          	movff	postinc2,??_checkCollision
  7759  000152  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7760  000156  1E1D               	comf	??_checkCollision^0,f,c
  7761  000158  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7762  00015A  4A1D               	infsnz	??_checkCollision^0,f,c
  7763  00015C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7764  00015E  EE20 F0D1          	lfsr	2,209
  7765  000162  501B               	movf	checkCollision@g^0,w,c
  7766  000164  26D9               	addwf	fsr2l,f,c
  7767  000166  501C               	movf	(checkCollision@g+1)^0,w,c
  7768  000168  22DA               	addwfc	fsr2h,f,c
  7769  00016A  C01D  FFDE         	movff	??_checkCollision,postinc2
  7770  00016E  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7771  000172                     l655:
  7772                           
  7773                           ;stateMachine/gameController.c: 173:     if(g->b.x+g->b.dx-8<=3)
  7774  000172  0EF8               	movlw	248
  7775  000174  6E1D               	movwf	??_checkCollision^0,c
  7776  000176  0EFF               	movlw	255
  7777  000178  6E1E               	movwf	(??_checkCollision+1)^0,c
  7778  00017A  EE20 F0D1          	lfsr	2,209
  7779  00017E  501B               	movf	checkCollision@g^0,w,c
  7780  000180  26D9               	addwf	fsr2l,f,c
  7781  000182  501C               	movf	(checkCollision@g+1)^0,w,c
  7782  000184  22DA               	addwfc	fsr2h,f,c
  7783  000186  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7784  00018A  CFDD F020          	movff	postdec2,??_checkCollision+3
  7785  00018E  EE20 F0C9          	lfsr	2,201
  7786  000192  501B               	movf	checkCollision@g^0,w,c
  7787  000194  26D9               	addwf	fsr2l,f,c
  7788  000196  501C               	movf	(checkCollision@g+1)^0,w,c
  7789  000198  22DA               	addwfc	fsr2h,f,c
  7790  00019A  CFDE F021          	movff	postinc2,??_checkCollision+4
  7791  00019E  CFDD F022          	movff	postdec2,??_checkCollision+5
  7792  0001A2  501F               	movf	(??_checkCollision+2)^0,w,c
  7793  0001A4  2621               	addwf	(??_checkCollision+4)^0,f,c
  7794  0001A6  5020               	movf	(??_checkCollision+3)^0,w,c
  7795  0001A8  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7796  0001AA  501D               	movf	??_checkCollision^0,w,c
  7797  0001AC  2621               	addwf	(??_checkCollision+4)^0,f,c
  7798  0001AE  501E               	movf	(??_checkCollision+1)^0,w,c
  7799  0001B0  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7800  0001B2  5022               	movf	(??_checkCollision+5)^0,w,c
  7801  0001B4  E107               	bnz	u6721
  7802  0001B6  0E04               	movlw	4
  7803  0001B8  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7804  0001BA  B0D8               	btfsc	status,0,c
  7805  0001BC  EFE2  F000         	goto	u6721
  7806  0001C0  EFE4  F000         	goto	u6720
  7807  0001C4                     u6721:
  7808  0001C4  EFFC  F000         	goto	l656
  7809  0001C8                     u6720:
  7810  0001C8                     
  7811                           ;stateMachine/gameController.c: 174:     {;stateMachine/gameController.c: 175:         g
      +                          ->b.dx=-g->b.dx;
  7812  0001C8  EE20 F0D1          	lfsr	2,209
  7813  0001CC  501B               	movf	checkCollision@g^0,w,c
  7814  0001CE  26D9               	addwf	fsr2l,f,c
  7815  0001D0  501C               	movf	(checkCollision@g+1)^0,w,c
  7816  0001D2  22DA               	addwfc	fsr2h,f,c
  7817  0001D4  CFDE F01D          	movff	postinc2,??_checkCollision
  7818  0001D8  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7819  0001DC  1E1D               	comf	??_checkCollision^0,f,c
  7820  0001DE  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7821  0001E0  4A1D               	infsnz	??_checkCollision^0,f,c
  7822  0001E2  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7823  0001E4  EE20 F0D1          	lfsr	2,209
  7824  0001E8  501B               	movf	checkCollision@g^0,w,c
  7825  0001EA  26D9               	addwf	fsr2l,f,c
  7826  0001EC  501C               	movf	(checkCollision@g+1)^0,w,c
  7827  0001EE  22DA               	addwfc	fsr2h,f,c
  7828  0001F0  C01D  FFDE         	movff	??_checkCollision,postinc2
  7829  0001F4  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7830  0001F8                     l656:
  7831                           
  7832                           ;stateMachine/gameController.c: 178:     if(g->b.y+8>=g->p1.y-1)
  7833  0001F8  0EFF               	movlw	255
  7834  0001FA  6E1D               	movwf	??_checkCollision^0,c
  7835  0001FC  0EFF               	movlw	255
  7836  0001FE  6E1E               	movwf	(??_checkCollision+1)^0,c
  7837  000200  EE20 F0D7          	lfsr	2,215
  7838  000204  501B               	movf	checkCollision@g^0,w,c
  7839  000206  26D9               	addwf	fsr2l,f,c
  7840  000208  501C               	movf	(checkCollision@g+1)^0,w,c
  7841  00020A  22DA               	addwfc	fsr2h,f,c
  7842  00020C  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7843  000210  CFDD F020          	movff	postdec2,??_checkCollision+3
  7844  000214  501D               	movf	??_checkCollision^0,w,c
  7845  000216  261F               	addwf	(??_checkCollision+2)^0,f,c
  7846  000218  501E               	movf	(??_checkCollision+1)^0,w,c
  7847  00021A  2220               	addwfc	(??_checkCollision+3)^0,f,c
  7848  00021C  EE20 F0CB          	lfsr	2,203
  7849  000220  501B               	movf	checkCollision@g^0,w,c
  7850  000222  26D9               	addwf	fsr2l,f,c
  7851  000224  501C               	movf	(checkCollision@g+1)^0,w,c
  7852  000226  22DA               	addwfc	fsr2h,f,c
  7853  000228  CFDE F021          	movff	postinc2,??_checkCollision+4
  7854  00022C  CFDD F022          	movff	postdec2,??_checkCollision+5
  7855  000230  0E08               	movlw	8
  7856  000232  2621               	addwf	(??_checkCollision+4)^0,f,c
  7857  000234  0E00               	movlw	0
  7858  000236  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7859  000238  501F               	movf	(??_checkCollision+2)^0,w,c
  7860  00023A  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7861  00023C  5020               	movf	(??_checkCollision+3)^0,w,c
  7862  00023E  5822               	subwfb	(??_checkCollision+5)^0,w,c
  7863  000240  A0D8               	btfss	status,0,c
  7864  000242  EF25  F001         	goto	u6731
  7865  000246  EF27  F001         	goto	u6730
  7866  00024A                     u6731:
  7867  00024A  EFB1  F002         	goto	l9609
  7868  00024E                     u6730:
  7869  00024E                     
  7870                           ;stateMachine/gameController.c: 179:     {;stateMachine/gameController.c: 180:         i
      +                          f(g->b.x+8>g->p1.x)
  7871  00024E  EE20 F0C9          	lfsr	2,201
  7872  000252  501B               	movf	checkCollision@g^0,w,c
  7873  000254  26D9               	addwf	fsr2l,f,c
  7874  000256  501C               	movf	(checkCollision@g+1)^0,w,c
  7875  000258  22DA               	addwfc	fsr2h,f,c
  7876  00025A  CFDE F01D          	movff	postinc2,??_checkCollision
  7877  00025E  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7878  000262  0E08               	movlw	8
  7879  000264  261D               	addwf	??_checkCollision^0,f,c
  7880  000266  0E00               	movlw	0
  7881  000268  221E               	addwfc	(??_checkCollision+1)^0,f,c
  7882  00026A  EE20 F0D5          	lfsr	2,213
  7883  00026E  501B               	movf	checkCollision@g^0,w,c
  7884  000270  26D9               	addwf	fsr2l,f,c
  7885  000272  501C               	movf	(checkCollision@g+1)^0,w,c
  7886  000274  22DA               	addwfc	fsr2h,f,c
  7887  000276  501D               	movf	??_checkCollision^0,w,c
  7888  000278  5CDE               	subwf	postinc2,w,c
  7889  00027A  501E               	movf	(??_checkCollision+1)^0,w,c
  7890  00027C  58DE               	subwfb	postinc2,w,c
  7891  00027E  B0D8               	btfsc	status,0,c
  7892  000280  EF44  F001         	goto	u6741
  7893  000284  EF46  F001         	goto	u6740
  7894  000288                     u6741:
  7895  000288  EFB1  F002         	goto	l9609
  7896  00028C                     u6740:
  7897  00028C                     
  7898                           ;stateMachine/gameController.c: 181:         {;stateMachine/gameController.c: 182:      
      +                                 if(g->b.x-8<g->p1.x+50)
  7899  00028C  EE20 F0D5          	lfsr	2,213
  7900  000290  501B               	movf	checkCollision@g^0,w,c
  7901  000292  26D9               	addwf	fsr2l,f,c
  7902  000294  501C               	movf	(checkCollision@g+1)^0,w,c
  7903  000296  22DA               	addwfc	fsr2h,f,c
  7904  000298  CFDE F01D          	movff	postinc2,??_checkCollision
  7905  00029C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7906  0002A0  0E32               	movlw	50
  7907  0002A2  261D               	addwf	??_checkCollision^0,f,c
  7908  0002A4  0E00               	movlw	0
  7909  0002A6  221E               	addwfc	(??_checkCollision+1)^0,f,c
  7910  0002A8  0EF8               	movlw	248
  7911  0002AA  6E1F               	movwf	(??_checkCollision+2)^0,c
  7912  0002AC  0EFF               	movlw	255
  7913  0002AE  6E20               	movwf	(??_checkCollision+3)^0,c
  7914  0002B0  EE20 F0C9          	lfsr	2,201
  7915  0002B4  501B               	movf	checkCollision@g^0,w,c
  7916  0002B6  26D9               	addwf	fsr2l,f,c
  7917  0002B8  501C               	movf	(checkCollision@g+1)^0,w,c
  7918  0002BA  22DA               	addwfc	fsr2h,f,c
  7919  0002BC  CFDE F021          	movff	postinc2,??_checkCollision+4
  7920  0002C0  CFDD F022          	movff	postdec2,??_checkCollision+5
  7921  0002C4  501F               	movf	(??_checkCollision+2)^0,w,c
  7922  0002C6  2621               	addwf	(??_checkCollision+4)^0,f,c
  7923  0002C8  5020               	movf	(??_checkCollision+3)^0,w,c
  7924  0002CA  2222               	addwfc	(??_checkCollision+5)^0,f,c
  7925  0002CC  501D               	movf	??_checkCollision^0,w,c
  7926  0002CE  5C21               	subwf	(??_checkCollision+4)^0,w,c
  7927  0002D0  501E               	movf	(??_checkCollision+1)^0,w,c
  7928  0002D2  5822               	subwfb	(??_checkCollision+5)^0,w,c
  7929  0002D4  B0D8               	btfsc	status,0,c
  7930  0002D6  EF6F  F001         	goto	u6751
  7931  0002DA  EF71  F001         	goto	u6750
  7932  0002DE                     u6751:
  7933  0002DE  EFB1  F002         	goto	l9609
  7934  0002E2                     u6750:
  7935  0002E2                     
  7936                           ;stateMachine/gameController.c: 183:             {;stateMachine/gameController.c: 184:  
      +                                         if(g->b.x-g->p1.x<10)
  7937  0002E2  EE20 F0D5          	lfsr	2,213
  7938  0002E6  501B               	movf	checkCollision@g^0,w,c
  7939  0002E8  26D9               	addwf	fsr2l,f,c
  7940  0002EA  501C               	movf	(checkCollision@g+1)^0,w,c
  7941  0002EC  22DA               	addwfc	fsr2h,f,c
  7942  0002EE  CFDE F01D          	movff	postinc2,??_checkCollision
  7943  0002F2  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7944  0002F6  EE20 F0C9          	lfsr	2,201
  7945  0002FA  501B               	movf	checkCollision@g^0,w,c
  7946  0002FC  26D9               	addwf	fsr2l,f,c
  7947  0002FE  501C               	movf	(checkCollision@g+1)^0,w,c
  7948  000300  22DA               	addwfc	fsr2h,f,c
  7949  000302  CFDE F01F          	movff	postinc2,??_checkCollision+2
  7950  000306  CFDD F020          	movff	postdec2,??_checkCollision+3
  7951  00030A  501D               	movf	??_checkCollision^0,w,c
  7952  00030C  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  7953  00030E  501E               	movf	(??_checkCollision+1)^0,w,c
  7954  000310  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  7955  000312  5020               	movf	(??_checkCollision+3)^0,w,c
  7956  000314  E107               	bnz	u6761
  7957  000316  0E0A               	movlw	10
  7958  000318  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  7959  00031A  B0D8               	btfsc	status,0,c
  7960  00031C  EF92  F001         	goto	u6761
  7961  000320  EF94  F001         	goto	u6760
  7962  000324                     u6761:
  7963  000324  EFB8  F001         	goto	l9593
  7964  000328                     u6760:
  7965  000328                     
  7966                           ;stateMachine/gameController.c: 185:                 {;stateMachine/gameController.c: 18
      +                          7:                     g->b.dy=-g->b.dy;
  7967  000328  EE20 F0D3          	lfsr	2,211
  7968  00032C  501B               	movf	checkCollision@g^0,w,c
  7969  00032E  26D9               	addwf	fsr2l,f,c
  7970  000330  501C               	movf	(checkCollision@g+1)^0,w,c
  7971  000332  22DA               	addwfc	fsr2h,f,c
  7972  000334  CFDE F01D          	movff	postinc2,??_checkCollision
  7973  000338  CFDD F01E          	movff	postdec2,??_checkCollision+1
  7974  00033C  1E1D               	comf	??_checkCollision^0,f,c
  7975  00033E  1E1E               	comf	(??_checkCollision+1)^0,f,c
  7976  000340  4A1D               	infsnz	??_checkCollision^0,f,c
  7977  000342  2A1E               	incf	(??_checkCollision+1)^0,f,c
  7978  000344  EE20 F0D3          	lfsr	2,211
  7979  000348  501B               	movf	checkCollision@g^0,w,c
  7980  00034A  26D9               	addwf	fsr2l,f,c
  7981  00034C  501C               	movf	(checkCollision@g+1)^0,w,c
  7982  00034E  22DA               	addwfc	fsr2h,f,c
  7983  000350  C01D  FFDE         	movff	??_checkCollision,postinc2
  7984  000354  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  7985                           
  7986                           ;stateMachine/gameController.c: 188:                     g->b.dx-=2;
  7987  000358  EE20 F0D1          	lfsr	2,209
  7988  00035C  501B               	movf	checkCollision@g^0,w,c
  7989  00035E  26D9               	addwf	fsr2l,f,c
  7990  000360  501C               	movf	(checkCollision@g+1)^0,w,c
  7991  000362  22DA               	addwfc	fsr2h,f,c
  7992  000364  0EFE               	movlw	254
  7993  000366  26DE               	addwf	postinc2,f,c
  7994  000368  0EFF               	movlw	255
  7995  00036A  22DD               	addwfc	postdec2,f,c
  7996                           
  7997                           ;stateMachine/gameController.c: 189:                 }
  7998  00036C  EFA3  F002         	goto	l661
  7999  000370                     l9593:
  8000  000370  EE20 F0D5          	lfsr	2,213
  8001  000374  501B               	movf	checkCollision@g^0,w,c
  8002  000376  26D9               	addwf	fsr2l,f,c
  8003  000378  501C               	movf	(checkCollision@g+1)^0,w,c
  8004  00037A  22DA               	addwfc	fsr2h,f,c
  8005  00037C  CFDE F01D          	movff	postinc2,??_checkCollision
  8006  000380  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8007  000384  EE20 F0C9          	lfsr	2,201
  8008  000388  501B               	movf	checkCollision@g^0,w,c
  8009  00038A  26D9               	addwf	fsr2l,f,c
  8010  00038C  501C               	movf	(checkCollision@g+1)^0,w,c
  8011  00038E  22DA               	addwfc	fsr2h,f,c
  8012  000390  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8013  000394  CFDD F020          	movff	postdec2,??_checkCollision+3
  8014  000398  501D               	movf	??_checkCollision^0,w,c
  8015  00039A  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8016  00039C  501E               	movf	(??_checkCollision+1)^0,w,c
  8017  00039E  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8018  0003A0  5020               	movf	(??_checkCollision+3)^0,w,c
  8019  0003A2  E107               	bnz	u6771
  8020  0003A4  0E14               	movlw	20
  8021  0003A6  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8022  0003A8  B0D8               	btfsc	status,0,c
  8023  0003AA  EFD9  F001         	goto	u6771
  8024  0003AE  EFDB  F001         	goto	u6770
  8025  0003B2                     u6771:
  8026  0003B2  EFFE  F001         	goto	l9597
  8027  0003B6                     u6770:
  8028  0003B6                     
  8029                           ;stateMachine/gameController.c: 191:                 {;stateMachine/gameController.c: 19
      +                          3:                     g->b.dy=-g->b.dy;
  8030  0003B6  EE20 F0D3          	lfsr	2,211
  8031  0003BA  501B               	movf	checkCollision@g^0,w,c
  8032  0003BC  26D9               	addwf	fsr2l,f,c
  8033  0003BE  501C               	movf	(checkCollision@g+1)^0,w,c
  8034  0003C0  22DA               	addwfc	fsr2h,f,c
  8035  0003C2  CFDE F01D          	movff	postinc2,??_checkCollision
  8036  0003C6  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8037  0003CA  1E1D               	comf	??_checkCollision^0,f,c
  8038  0003CC  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8039  0003CE  4A1D               	infsnz	??_checkCollision^0,f,c
  8040  0003D0  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8041  0003D2  EE20 F0D3          	lfsr	2,211
  8042  0003D6  501B               	movf	checkCollision@g^0,w,c
  8043  0003D8  26D9               	addwf	fsr2l,f,c
  8044  0003DA  501C               	movf	(checkCollision@g+1)^0,w,c
  8045  0003DC  22DA               	addwfc	fsr2h,f,c
  8046  0003DE  C01D  FFDE         	movff	??_checkCollision,postinc2
  8047  0003E2  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8048                           
  8049                           ;stateMachine/gameController.c: 194:                     g->b.dx-=1;
  8050  0003E6  EE20 F0D1          	lfsr	2,209
  8051  0003EA  501B               	movf	checkCollision@g^0,w,c
  8052  0003EC  26D9               	addwf	fsr2l,f,c
  8053  0003EE  501C               	movf	(checkCollision@g+1)^0,w,c
  8054  0003F0  22DA               	addwfc	fsr2h,f,c
  8055  0003F2  06DE               	decf	postinc2,f,c
  8056  0003F4  0E00               	movlw	0
  8057  0003F6  5ADD               	subwfb	postdec2,f,c
  8058                           
  8059                           ;stateMachine/gameController.c: 195:                 }
  8060  0003F8  EFA3  F002         	goto	l661
  8061  0003FC                     l9597:
  8062  0003FC  EE20 F0D5          	lfsr	2,213
  8063  000400  501B               	movf	checkCollision@g^0,w,c
  8064  000402  26D9               	addwf	fsr2l,f,c
  8065  000404  501C               	movf	(checkCollision@g+1)^0,w,c
  8066  000406  22DA               	addwfc	fsr2h,f,c
  8067  000408  CFDE F01D          	movff	postinc2,??_checkCollision
  8068  00040C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8069  000410  EE20 F0C9          	lfsr	2,201
  8070  000414  501B               	movf	checkCollision@g^0,w,c
  8071  000416  26D9               	addwf	fsr2l,f,c
  8072  000418  501C               	movf	(checkCollision@g+1)^0,w,c
  8073  00041A  22DA               	addwfc	fsr2h,f,c
  8074  00041C  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8075  000420  CFDD F020          	movff	postdec2,??_checkCollision+3
  8076  000424  501D               	movf	??_checkCollision^0,w,c
  8077  000426  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8078  000428  501E               	movf	(??_checkCollision+1)^0,w,c
  8079  00042A  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8080  00042C  5020               	movf	(??_checkCollision+3)^0,w,c
  8081  00042E  E107               	bnz	u6781
  8082  000430  0E1E               	movlw	30
  8083  000432  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8084  000434  B0D8               	btfsc	status,0,c
  8085  000436  EF1F  F002         	goto	u6781
  8086  00043A  EF21  F002         	goto	u6780
  8087  00043E                     u6781:
  8088  00043E  EF3B  F002         	goto	l9601
  8089  000442                     u6780:
  8090  000442                     
  8091                           ;stateMachine/gameController.c: 200:                     g->b.dy=-g->b.dy;
  8092  000442  EE20 F0D3          	lfsr	2,211
  8093  000446  501B               	movf	checkCollision@g^0,w,c
  8094  000448  26D9               	addwf	fsr2l,f,c
  8095  00044A  501C               	movf	(checkCollision@g+1)^0,w,c
  8096  00044C  22DA               	addwfc	fsr2h,f,c
  8097  00044E  CFDE F01D          	movff	postinc2,??_checkCollision
  8098  000452  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8099  000456  1E1D               	comf	??_checkCollision^0,f,c
  8100  000458  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8101  00045A  4A1D               	infsnz	??_checkCollision^0,f,c
  8102  00045C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8103  00045E  EE20 F0D3          	lfsr	2,211
  8104  000462  501B               	movf	checkCollision@g^0,w,c
  8105  000464  26D9               	addwf	fsr2l,f,c
  8106  000466  501C               	movf	(checkCollision@g+1)^0,w,c
  8107  000468  22DA               	addwfc	fsr2h,f,c
  8108  00046A  C01D  FFDE         	movff	??_checkCollision,postinc2
  8109  00046E  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8110                           
  8111                           ;stateMachine/gameController.c: 201:                 }
  8112  000472  EFA3  F002         	goto	l661
  8113  000476                     l9601:
  8114  000476  EE20 F0D5          	lfsr	2,213
  8115  00047A  501B               	movf	checkCollision@g^0,w,c
  8116  00047C  26D9               	addwf	fsr2l,f,c
  8117  00047E  501C               	movf	(checkCollision@g+1)^0,w,c
  8118  000480  22DA               	addwfc	fsr2h,f,c
  8119  000482  CFDE F01D          	movff	postinc2,??_checkCollision
  8120  000486  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8121  00048A  EE20 F0C9          	lfsr	2,201
  8122  00048E  501B               	movf	checkCollision@g^0,w,c
  8123  000490  26D9               	addwf	fsr2l,f,c
  8124  000492  501C               	movf	(checkCollision@g+1)^0,w,c
  8125  000494  22DA               	addwfc	fsr2h,f,c
  8126  000496  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8127  00049A  CFDD F020          	movff	postdec2,??_checkCollision+3
  8128  00049E  501D               	movf	??_checkCollision^0,w,c
  8129  0004A0  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8130  0004A2  501E               	movf	(??_checkCollision+1)^0,w,c
  8131  0004A4  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8132  0004A6  5020               	movf	(??_checkCollision+3)^0,w,c
  8133  0004A8  E107               	bnz	u6791
  8134  0004AA  0E28               	movlw	40
  8135  0004AC  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8136  0004AE  B0D8               	btfsc	status,0,c
  8137  0004B0  EF5C  F002         	goto	u6791
  8138  0004B4  EF5E  F002         	goto	u6790
  8139  0004B8                     u6791:
  8140  0004B8  EF81  F002         	goto	l9605
  8141  0004BC                     u6790:
  8142  0004BC                     
  8143                           ;stateMachine/gameController.c: 203:                 {;stateMachine/gameController.c: 20
      +                          5:                     g->b.dy=-g->b.dy;
  8144  0004BC  EE20 F0D3          	lfsr	2,211
  8145  0004C0  501B               	movf	checkCollision@g^0,w,c
  8146  0004C2  26D9               	addwf	fsr2l,f,c
  8147  0004C4  501C               	movf	(checkCollision@g+1)^0,w,c
  8148  0004C6  22DA               	addwfc	fsr2h,f,c
  8149  0004C8  CFDE F01D          	movff	postinc2,??_checkCollision
  8150  0004CC  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8151  0004D0  1E1D               	comf	??_checkCollision^0,f,c
  8152  0004D2  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8153  0004D4  4A1D               	infsnz	??_checkCollision^0,f,c
  8154  0004D6  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8155  0004D8  EE20 F0D3          	lfsr	2,211
  8156  0004DC  501B               	movf	checkCollision@g^0,w,c
  8157  0004DE  26D9               	addwf	fsr2l,f,c
  8158  0004E0  501C               	movf	(checkCollision@g+1)^0,w,c
  8159  0004E2  22DA               	addwfc	fsr2h,f,c
  8160  0004E4  C01D  FFDE         	movff	??_checkCollision,postinc2
  8161  0004E8  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8162                           
  8163                           ;stateMachine/gameController.c: 206:                     g->b.dx+=1;
  8164  0004EC  EE20 F0D1          	lfsr	2,209
  8165  0004F0  501B               	movf	checkCollision@g^0,w,c
  8166  0004F2  26D9               	addwf	fsr2l,f,c
  8167  0004F4  501C               	movf	(checkCollision@g+1)^0,w,c
  8168  0004F6  22DA               	addwfc	fsr2h,f,c
  8169  0004F8  2ADE               	incf	postinc2,f,c
  8170  0004FA  0E00               	movlw	0
  8171  0004FC  22DD               	addwfc	postdec2,f,c
  8172                           
  8173                           ;stateMachine/gameController.c: 207:                 }
  8174  0004FE  EFA3  F002         	goto	l661
  8175  000502                     l9605:
  8176                           
  8177                           ;stateMachine/gameController.c: 209:                 {;stateMachine/gameController.c: 21
      +                          1:                     g->b.dy=-g->b.dy;
  8178  000502  EE20 F0D3          	lfsr	2,211
  8179  000506  501B               	movf	checkCollision@g^0,w,c
  8180  000508  26D9               	addwf	fsr2l,f,c
  8181  00050A  501C               	movf	(checkCollision@g+1)^0,w,c
  8182  00050C  22DA               	addwfc	fsr2h,f,c
  8183  00050E  CFDE F01D          	movff	postinc2,??_checkCollision
  8184  000512  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8185  000516  1E1D               	comf	??_checkCollision^0,f,c
  8186  000518  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8187  00051A  4A1D               	infsnz	??_checkCollision^0,f,c
  8188  00051C  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8189  00051E  EE20 F0D3          	lfsr	2,211
  8190  000522  501B               	movf	checkCollision@g^0,w,c
  8191  000524  26D9               	addwf	fsr2l,f,c
  8192  000526  501C               	movf	(checkCollision@g+1)^0,w,c
  8193  000528  22DA               	addwfc	fsr2h,f,c
  8194  00052A  C01D  FFDE         	movff	??_checkCollision,postinc2
  8195  00052E  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8196                           
  8197                           ;stateMachine/gameController.c: 212:                     g->b.dx+=2;
  8198  000532  EE20 F0D1          	lfsr	2,209
  8199  000536  501B               	movf	checkCollision@g^0,w,c
  8200  000538  26D9               	addwf	fsr2l,f,c
  8201  00053A  501C               	movf	(checkCollision@g+1)^0,w,c
  8202  00053C  22DA               	addwfc	fsr2h,f,c
  8203  00053E  0E02               	movlw	2
  8204  000540  26DE               	addwf	postinc2,f,c
  8205  000542  0E00               	movlw	0
  8206  000544  22DD               	addwfc	postdec2,f,c
  8207  000546                     l661:
  8208                           
  8209                           ;stateMachine/gameController.c: 216:                 g->s1.homeScore++;
  8210  000546  EE20 F0E9          	lfsr	2,233
  8211  00054A  501B               	movf	checkCollision@g^0,w,c
  8212  00054C  26D9               	addwf	fsr2l,f,c
  8213  00054E  501C               	movf	(checkCollision@g+1)^0,w,c
  8214  000550  22DA               	addwfc	fsr2h,f,c
  8215  000552  2ADE               	incf	postinc2,f,c
  8216  000554  0E00               	movlw	0
  8217  000556  22DD               	addwfc	postdec2,f,c
  8218  000558                     
  8219                           ;stateMachine/gameController.c: 217:                 XF_pushEvent(evRedrawScore,0);
  8220  000558  0E00               	movlw	0
  8221  00055A  6E18               	movwf	XF_pushEvent@inISR^0,c
  8222  00055C  0E0E               	movlw	14
  8223  00055E  ECC5  F02E         	call	_XF_pushEvent
  8224  000562                     l9609:
  8225                           
  8226                           ;stateMachine/gameController.c: 223:     if(g->b.y-8<=g->p2.y+10 +1)
  8227  000562  0EF8               	movlw	248
  8228  000564  6E1D               	movwf	??_checkCollision^0,c
  8229  000566  0EFF               	movlw	255
  8230  000568  6E1E               	movwf	(??_checkCollision+1)^0,c
  8231  00056A  EE20 F0CB          	lfsr	2,203
  8232  00056E  501B               	movf	checkCollision@g^0,w,c
  8233  000570  26D9               	addwf	fsr2l,f,c
  8234  000572  501C               	movf	(checkCollision@g+1)^0,w,c
  8235  000574  22DA               	addwfc	fsr2h,f,c
  8236  000576  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8237  00057A  CFDD F020          	movff	postdec2,??_checkCollision+3
  8238  00057E  501D               	movf	??_checkCollision^0,w,c
  8239  000580  261F               	addwf	(??_checkCollision+2)^0,f,c
  8240  000582  501E               	movf	(??_checkCollision+1)^0,w,c
  8241  000584  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8242  000586  EE20 F0E1          	lfsr	2,225
  8243  00058A  501B               	movf	checkCollision@g^0,w,c
  8244  00058C  26D9               	addwf	fsr2l,f,c
  8245  00058E  501C               	movf	(checkCollision@g+1)^0,w,c
  8246  000590  22DA               	addwfc	fsr2h,f,c
  8247  000592  CFDE F021          	movff	postinc2,??_checkCollision+4
  8248  000596  CFDD F022          	movff	postdec2,??_checkCollision+5
  8249  00059A  0E0B               	movlw	11
  8250  00059C  2621               	addwf	(??_checkCollision+4)^0,f,c
  8251  00059E  0E00               	movlw	0
  8252  0005A0  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8253  0005A2  501F               	movf	(??_checkCollision+2)^0,w,c
  8254  0005A4  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8255  0005A6  5020               	movf	(??_checkCollision+3)^0,w,c
  8256  0005A8  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8257  0005AA  A0D8               	btfss	status,0,c
  8258  0005AC  EFDA  F002         	goto	u6801
  8259  0005B0  EFDC  F002         	goto	u6800
  8260  0005B4                     u6801:
  8261  0005B4  EF66  F004         	goto	l9635
  8262  0005B8                     u6800:
  8263  0005B8                     
  8264                           ;stateMachine/gameController.c: 224:     {;stateMachine/gameController.c: 225:         i
      +                          f(g->b.x+8>g->p2.x)
  8265  0005B8  EE20 F0C9          	lfsr	2,201
  8266  0005BC  501B               	movf	checkCollision@g^0,w,c
  8267  0005BE  26D9               	addwf	fsr2l,f,c
  8268  0005C0  501C               	movf	(checkCollision@g+1)^0,w,c
  8269  0005C2  22DA               	addwfc	fsr2h,f,c
  8270  0005C4  CFDE F01D          	movff	postinc2,??_checkCollision
  8271  0005C8  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8272  0005CC  0E08               	movlw	8
  8273  0005CE  261D               	addwf	??_checkCollision^0,f,c
  8274  0005D0  0E00               	movlw	0
  8275  0005D2  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8276  0005D4  EE20 F0DF          	lfsr	2,223
  8277  0005D8  501B               	movf	checkCollision@g^0,w,c
  8278  0005DA  26D9               	addwf	fsr2l,f,c
  8279  0005DC  501C               	movf	(checkCollision@g+1)^0,w,c
  8280  0005DE  22DA               	addwfc	fsr2h,f,c
  8281  0005E0  501D               	movf	??_checkCollision^0,w,c
  8282  0005E2  5CDE               	subwf	postinc2,w,c
  8283  0005E4  501E               	movf	(??_checkCollision+1)^0,w,c
  8284  0005E6  58DE               	subwfb	postinc2,w,c
  8285  0005E8  B0D8               	btfsc	status,0,c
  8286  0005EA  EFF9  F002         	goto	u6811
  8287  0005EE  EFFB  F002         	goto	u6810
  8288  0005F2                     u6811:
  8289  0005F2  EF66  F004         	goto	l9635
  8290  0005F6                     u6810:
  8291  0005F6                     
  8292                           ;stateMachine/gameController.c: 226:         {;stateMachine/gameController.c: 227:      
      +                                 if(g->b.x-8<g->p2.x+50)
  8293  0005F6  EE20 F0DF          	lfsr	2,223
  8294  0005FA  501B               	movf	checkCollision@g^0,w,c
  8295  0005FC  26D9               	addwf	fsr2l,f,c
  8296  0005FE  501C               	movf	(checkCollision@g+1)^0,w,c
  8297  000600  22DA               	addwfc	fsr2h,f,c
  8298  000602  CFDE F01D          	movff	postinc2,??_checkCollision
  8299  000606  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8300  00060A  0E32               	movlw	50
  8301  00060C  261D               	addwf	??_checkCollision^0,f,c
  8302  00060E  0E00               	movlw	0
  8303  000610  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8304  000612  0EF8               	movlw	248
  8305  000614  6E1F               	movwf	(??_checkCollision+2)^0,c
  8306  000616  0EFF               	movlw	255
  8307  000618  6E20               	movwf	(??_checkCollision+3)^0,c
  8308  00061A  EE20 F0C9          	lfsr	2,201
  8309  00061E  501B               	movf	checkCollision@g^0,w,c
  8310  000620  26D9               	addwf	fsr2l,f,c
  8311  000622  501C               	movf	(checkCollision@g+1)^0,w,c
  8312  000624  22DA               	addwfc	fsr2h,f,c
  8313  000626  CFDE F021          	movff	postinc2,??_checkCollision+4
  8314  00062A  CFDD F022          	movff	postdec2,??_checkCollision+5
  8315  00062E  501F               	movf	(??_checkCollision+2)^0,w,c
  8316  000630  2621               	addwf	(??_checkCollision+4)^0,f,c
  8317  000632  5020               	movf	(??_checkCollision+3)^0,w,c
  8318  000634  2222               	addwfc	(??_checkCollision+5)^0,f,c
  8319  000636  501D               	movf	??_checkCollision^0,w,c
  8320  000638  5C21               	subwf	(??_checkCollision+4)^0,w,c
  8321  00063A  501E               	movf	(??_checkCollision+1)^0,w,c
  8322  00063C  5822               	subwfb	(??_checkCollision+5)^0,w,c
  8323  00063E  B0D8               	btfsc	status,0,c
  8324  000640  EF24  F003         	goto	u6821
  8325  000644  EF26  F003         	goto	u6820
  8326  000648                     u6821:
  8327  000648  EF66  F004         	goto	l9635
  8328  00064C                     u6820:
  8329  00064C                     
  8330                           ;stateMachine/gameController.c: 228:             {;stateMachine/gameController.c: 229:  
      +                                         if(g->b.x-g->p2.x<10)
  8331  00064C  EE20 F0DF          	lfsr	2,223
  8332  000650  501B               	movf	checkCollision@g^0,w,c
  8333  000652  26D9               	addwf	fsr2l,f,c
  8334  000654  501C               	movf	(checkCollision@g+1)^0,w,c
  8335  000656  22DA               	addwfc	fsr2h,f,c
  8336  000658  CFDE F01D          	movff	postinc2,??_checkCollision
  8337  00065C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8338  000660  EE20 F0C9          	lfsr	2,201
  8339  000664  501B               	movf	checkCollision@g^0,w,c
  8340  000666  26D9               	addwf	fsr2l,f,c
  8341  000668  501C               	movf	(checkCollision@g+1)^0,w,c
  8342  00066A  22DA               	addwfc	fsr2h,f,c
  8343  00066C  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8344  000670  CFDD F020          	movff	postdec2,??_checkCollision+3
  8345  000674  501D               	movf	??_checkCollision^0,w,c
  8346  000676  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8347  000678  501E               	movf	(??_checkCollision+1)^0,w,c
  8348  00067A  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8349  00067C  5020               	movf	(??_checkCollision+3)^0,w,c
  8350  00067E  E107               	bnz	u6831
  8351  000680  0E0A               	movlw	10
  8352  000682  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8353  000684  B0D8               	btfsc	status,0,c
  8354  000686  EF47  F003         	goto	u6831
  8355  00068A  EF49  F003         	goto	u6830
  8356  00068E                     u6831:
  8357  00068E  EF6D  F003         	goto	l9619
  8358  000692                     u6830:
  8359  000692                     
  8360                           ;stateMachine/gameController.c: 230:                 {;stateMachine/gameController.c: 23
      +                          2:                     g->b.dy=-g->b.dy;
  8361  000692  EE20 F0D3          	lfsr	2,211
  8362  000696  501B               	movf	checkCollision@g^0,w,c
  8363  000698  26D9               	addwf	fsr2l,f,c
  8364  00069A  501C               	movf	(checkCollision@g+1)^0,w,c
  8365  00069C  22DA               	addwfc	fsr2h,f,c
  8366  00069E  CFDE F01D          	movff	postinc2,??_checkCollision
  8367  0006A2  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8368  0006A6  1E1D               	comf	??_checkCollision^0,f,c
  8369  0006A8  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8370  0006AA  4A1D               	infsnz	??_checkCollision^0,f,c
  8371  0006AC  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8372  0006AE  EE20 F0D3          	lfsr	2,211
  8373  0006B2  501B               	movf	checkCollision@g^0,w,c
  8374  0006B4  26D9               	addwf	fsr2l,f,c
  8375  0006B6  501C               	movf	(checkCollision@g+1)^0,w,c
  8376  0006B8  22DA               	addwfc	fsr2h,f,c
  8377  0006BA  C01D  FFDE         	movff	??_checkCollision,postinc2
  8378  0006BE  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8379                           
  8380                           ;stateMachine/gameController.c: 233:                     g->b.dx-=2;
  8381  0006C2  EE20 F0D1          	lfsr	2,209
  8382  0006C6  501B               	movf	checkCollision@g^0,w,c
  8383  0006C8  26D9               	addwf	fsr2l,f,c
  8384  0006CA  501C               	movf	(checkCollision@g+1)^0,w,c
  8385  0006CC  22DA               	addwfc	fsr2h,f,c
  8386  0006CE  0EFE               	movlw	254
  8387  0006D0  26DE               	addwf	postinc2,f,c
  8388  0006D2  0EFF               	movlw	255
  8389  0006D4  22DD               	addwfc	postdec2,f,c
  8390                           
  8391                           ;stateMachine/gameController.c: 234:                 }
  8392  0006D6  EF58  F004         	goto	l672
  8393  0006DA                     l9619:
  8394  0006DA  EE20 F0DF          	lfsr	2,223
  8395  0006DE  501B               	movf	checkCollision@g^0,w,c
  8396  0006E0  26D9               	addwf	fsr2l,f,c
  8397  0006E2  501C               	movf	(checkCollision@g+1)^0,w,c
  8398  0006E4  22DA               	addwfc	fsr2h,f,c
  8399  0006E6  CFDE F01D          	movff	postinc2,??_checkCollision
  8400  0006EA  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8401  0006EE  EE20 F0C9          	lfsr	2,201
  8402  0006F2  501B               	movf	checkCollision@g^0,w,c
  8403  0006F4  26D9               	addwf	fsr2l,f,c
  8404  0006F6  501C               	movf	(checkCollision@g+1)^0,w,c
  8405  0006F8  22DA               	addwfc	fsr2h,f,c
  8406  0006FA  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8407  0006FE  CFDD F020          	movff	postdec2,??_checkCollision+3
  8408  000702  501D               	movf	??_checkCollision^0,w,c
  8409  000704  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8410  000706  501E               	movf	(??_checkCollision+1)^0,w,c
  8411  000708  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8412  00070A  5020               	movf	(??_checkCollision+3)^0,w,c
  8413  00070C  E107               	bnz	u6841
  8414  00070E  0E14               	movlw	20
  8415  000710  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8416  000712  B0D8               	btfsc	status,0,c
  8417  000714  EF8E  F003         	goto	u6841
  8418  000718  EF90  F003         	goto	u6840
  8419  00071C                     u6841:
  8420  00071C  EFB3  F003         	goto	l9623
  8421  000720                     u6840:
  8422  000720                     
  8423                           ;stateMachine/gameController.c: 236:                 {;stateMachine/gameController.c: 23
      +                          8:                     g->b.dy=-g->b.dy;
  8424  000720  EE20 F0D3          	lfsr	2,211
  8425  000724  501B               	movf	checkCollision@g^0,w,c
  8426  000726  26D9               	addwf	fsr2l,f,c
  8427  000728  501C               	movf	(checkCollision@g+1)^0,w,c
  8428  00072A  22DA               	addwfc	fsr2h,f,c
  8429  00072C  CFDE F01D          	movff	postinc2,??_checkCollision
  8430  000730  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8431  000734  1E1D               	comf	??_checkCollision^0,f,c
  8432  000736  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8433  000738  4A1D               	infsnz	??_checkCollision^0,f,c
  8434  00073A  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8435  00073C  EE20 F0D3          	lfsr	2,211
  8436  000740  501B               	movf	checkCollision@g^0,w,c
  8437  000742  26D9               	addwf	fsr2l,f,c
  8438  000744  501C               	movf	(checkCollision@g+1)^0,w,c
  8439  000746  22DA               	addwfc	fsr2h,f,c
  8440  000748  C01D  FFDE         	movff	??_checkCollision,postinc2
  8441  00074C  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8442                           
  8443                           ;stateMachine/gameController.c: 239:                     g->b.dx-=1;
  8444  000750  EE20 F0D1          	lfsr	2,209
  8445  000754  501B               	movf	checkCollision@g^0,w,c
  8446  000756  26D9               	addwf	fsr2l,f,c
  8447  000758  501C               	movf	(checkCollision@g+1)^0,w,c
  8448  00075A  22DA               	addwfc	fsr2h,f,c
  8449  00075C  06DE               	decf	postinc2,f,c
  8450  00075E  0E00               	movlw	0
  8451  000760  5ADD               	subwfb	postdec2,f,c
  8452                           
  8453                           ;stateMachine/gameController.c: 240:                 }
  8454  000762  EF58  F004         	goto	l672
  8455  000766                     l9623:
  8456  000766  EE20 F0DF          	lfsr	2,223
  8457  00076A  501B               	movf	checkCollision@g^0,w,c
  8458  00076C  26D9               	addwf	fsr2l,f,c
  8459  00076E  501C               	movf	(checkCollision@g+1)^0,w,c
  8460  000770  22DA               	addwfc	fsr2h,f,c
  8461  000772  CFDE F01D          	movff	postinc2,??_checkCollision
  8462  000776  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8463  00077A  EE20 F0C9          	lfsr	2,201
  8464  00077E  501B               	movf	checkCollision@g^0,w,c
  8465  000780  26D9               	addwf	fsr2l,f,c
  8466  000782  501C               	movf	(checkCollision@g+1)^0,w,c
  8467  000784  22DA               	addwfc	fsr2h,f,c
  8468  000786  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8469  00078A  CFDD F020          	movff	postdec2,??_checkCollision+3
  8470  00078E  501D               	movf	??_checkCollision^0,w,c
  8471  000790  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8472  000792  501E               	movf	(??_checkCollision+1)^0,w,c
  8473  000794  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8474  000796  5020               	movf	(??_checkCollision+3)^0,w,c
  8475  000798  E107               	bnz	u6851
  8476  00079A  0E1E               	movlw	30
  8477  00079C  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8478  00079E  B0D8               	btfsc	status,0,c
  8479  0007A0  EFD4  F003         	goto	u6851
  8480  0007A4  EFD6  F003         	goto	u6850
  8481  0007A8                     u6851:
  8482  0007A8  EFF0  F003         	goto	l9627
  8483  0007AC                     u6850:
  8484  0007AC                     
  8485                           ;stateMachine/gameController.c: 245:                     g->b.dy=-g->b.dy;
  8486  0007AC  EE20 F0D3          	lfsr	2,211
  8487  0007B0  501B               	movf	checkCollision@g^0,w,c
  8488  0007B2  26D9               	addwf	fsr2l,f,c
  8489  0007B4  501C               	movf	(checkCollision@g+1)^0,w,c
  8490  0007B6  22DA               	addwfc	fsr2h,f,c
  8491  0007B8  CFDE F01D          	movff	postinc2,??_checkCollision
  8492  0007BC  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8493  0007C0  1E1D               	comf	??_checkCollision^0,f,c
  8494  0007C2  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8495  0007C4  4A1D               	infsnz	??_checkCollision^0,f,c
  8496  0007C6  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8497  0007C8  EE20 F0D3          	lfsr	2,211
  8498  0007CC  501B               	movf	checkCollision@g^0,w,c
  8499  0007CE  26D9               	addwf	fsr2l,f,c
  8500  0007D0  501C               	movf	(checkCollision@g+1)^0,w,c
  8501  0007D2  22DA               	addwfc	fsr2h,f,c
  8502  0007D4  C01D  FFDE         	movff	??_checkCollision,postinc2
  8503  0007D8  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8504                           
  8505                           ;stateMachine/gameController.c: 246:                 }
  8506  0007DC  EF58  F004         	goto	l672
  8507  0007E0                     l9627:
  8508  0007E0  EE20 F0DF          	lfsr	2,223
  8509  0007E4  501B               	movf	checkCollision@g^0,w,c
  8510  0007E6  26D9               	addwf	fsr2l,f,c
  8511  0007E8  501C               	movf	(checkCollision@g+1)^0,w,c
  8512  0007EA  22DA               	addwfc	fsr2h,f,c
  8513  0007EC  CFDE F01D          	movff	postinc2,??_checkCollision
  8514  0007F0  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8515  0007F4  EE20 F0C9          	lfsr	2,201
  8516  0007F8  501B               	movf	checkCollision@g^0,w,c
  8517  0007FA  26D9               	addwf	fsr2l,f,c
  8518  0007FC  501C               	movf	(checkCollision@g+1)^0,w,c
  8519  0007FE  22DA               	addwfc	fsr2h,f,c
  8520  000800  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8521  000804  CFDD F020          	movff	postdec2,??_checkCollision+3
  8522  000808  501D               	movf	??_checkCollision^0,w,c
  8523  00080A  5E1F               	subwf	(??_checkCollision+2)^0,f,c
  8524  00080C  501E               	movf	(??_checkCollision+1)^0,w,c
  8525  00080E  5A20               	subwfb	(??_checkCollision+3)^0,f,c
  8526  000810  5020               	movf	(??_checkCollision+3)^0,w,c
  8527  000812  E107               	bnz	u6861
  8528  000814  0E28               	movlw	40
  8529  000816  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8530  000818  B0D8               	btfsc	status,0,c
  8531  00081A  EF11  F004         	goto	u6861
  8532  00081E  EF13  F004         	goto	u6860
  8533  000822                     u6861:
  8534  000822  EF36  F004         	goto	l9631
  8535  000826                     u6860:
  8536  000826                     
  8537                           ;stateMachine/gameController.c: 248:                 {;stateMachine/gameController.c: 25
      +                          0:                     g->b.dy=-g->b.dy;
  8538  000826  EE20 F0D3          	lfsr	2,211
  8539  00082A  501B               	movf	checkCollision@g^0,w,c
  8540  00082C  26D9               	addwf	fsr2l,f,c
  8541  00082E  501C               	movf	(checkCollision@g+1)^0,w,c
  8542  000830  22DA               	addwfc	fsr2h,f,c
  8543  000832  CFDE F01D          	movff	postinc2,??_checkCollision
  8544  000836  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8545  00083A  1E1D               	comf	??_checkCollision^0,f,c
  8546  00083C  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8547  00083E  4A1D               	infsnz	??_checkCollision^0,f,c
  8548  000840  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8549  000842  EE20 F0D3          	lfsr	2,211
  8550  000846  501B               	movf	checkCollision@g^0,w,c
  8551  000848  26D9               	addwf	fsr2l,f,c
  8552  00084A  501C               	movf	(checkCollision@g+1)^0,w,c
  8553  00084C  22DA               	addwfc	fsr2h,f,c
  8554  00084E  C01D  FFDE         	movff	??_checkCollision,postinc2
  8555  000852  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8556                           
  8557                           ;stateMachine/gameController.c: 251:                     g->b.dx+=1;
  8558  000856  EE20 F0D1          	lfsr	2,209
  8559  00085A  501B               	movf	checkCollision@g^0,w,c
  8560  00085C  26D9               	addwf	fsr2l,f,c
  8561  00085E  501C               	movf	(checkCollision@g+1)^0,w,c
  8562  000860  22DA               	addwfc	fsr2h,f,c
  8563  000862  2ADE               	incf	postinc2,f,c
  8564  000864  0E00               	movlw	0
  8565  000866  22DD               	addwfc	postdec2,f,c
  8566                           
  8567                           ;stateMachine/gameController.c: 252:                 }
  8568  000868  EF58  F004         	goto	l672
  8569  00086C                     l9631:
  8570                           
  8571                           ;stateMachine/gameController.c: 254:                 {;stateMachine/gameController.c: 25
      +                          6:                     g->b.dy=-g->b.dy;
  8572  00086C  EE20 F0D3          	lfsr	2,211
  8573  000870  501B               	movf	checkCollision@g^0,w,c
  8574  000872  26D9               	addwf	fsr2l,f,c
  8575  000874  501C               	movf	(checkCollision@g+1)^0,w,c
  8576  000876  22DA               	addwfc	fsr2h,f,c
  8577  000878  CFDE F01D          	movff	postinc2,??_checkCollision
  8578  00087C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8579  000880  1E1D               	comf	??_checkCollision^0,f,c
  8580  000882  1E1E               	comf	(??_checkCollision+1)^0,f,c
  8581  000884  4A1D               	infsnz	??_checkCollision^0,f,c
  8582  000886  2A1E               	incf	(??_checkCollision+1)^0,f,c
  8583  000888  EE20 F0D3          	lfsr	2,211
  8584  00088C  501B               	movf	checkCollision@g^0,w,c
  8585  00088E  26D9               	addwf	fsr2l,f,c
  8586  000890  501C               	movf	(checkCollision@g+1)^0,w,c
  8587  000892  22DA               	addwfc	fsr2h,f,c
  8588  000894  C01D  FFDE         	movff	??_checkCollision,postinc2
  8589  000898  C01E  FFDD         	movff	??_checkCollision+1,postdec2
  8590                           
  8591                           ;stateMachine/gameController.c: 257:                     g->b.dx+=2;
  8592  00089C  EE20 F0D1          	lfsr	2,209
  8593  0008A0  501B               	movf	checkCollision@g^0,w,c
  8594  0008A2  26D9               	addwf	fsr2l,f,c
  8595  0008A4  501C               	movf	(checkCollision@g+1)^0,w,c
  8596  0008A6  22DA               	addwfc	fsr2h,f,c
  8597  0008A8  0E02               	movlw	2
  8598  0008AA  26DE               	addwf	postinc2,f,c
  8599  0008AC  0E00               	movlw	0
  8600  0008AE  22DD               	addwfc	postdec2,f,c
  8601  0008B0                     l672:
  8602                           
  8603                           ;stateMachine/gameController.c: 260:                 g->s1.awayScore++;
  8604  0008B0  EE20 F0EB          	lfsr	2,235
  8605  0008B4  501B               	movf	checkCollision@g^0,w,c
  8606  0008B6  26D9               	addwf	fsr2l,f,c
  8607  0008B8  501C               	movf	(checkCollision@g+1)^0,w,c
  8608  0008BA  22DA               	addwfc	fsr2h,f,c
  8609  0008BC  2ADE               	incf	postinc2,f,c
  8610  0008BE  0E00               	movlw	0
  8611  0008C0  22DD               	addwfc	postdec2,f,c
  8612  0008C2                     
  8613                           ;stateMachine/gameController.c: 261:                 XF_pushEvent(evRedrawScore,0);
  8614  0008C2  0E00               	movlw	0
  8615  0008C4  6E18               	movwf	XF_pushEvent@inISR^0,c
  8616  0008C6  0E0E               	movlw	14
  8617  0008C8  ECC5  F02E         	call	_XF_pushEvent
  8618  0008CC                     l9635:
  8619                           
  8620                           ;stateMachine/gameController.c: 267:     if(g->b.y-8<=g->p2.y-5)
  8621  0008CC  0EF8               	movlw	248
  8622  0008CE  6E1D               	movwf	??_checkCollision^0,c
  8623  0008D0  0EFF               	movlw	255
  8624  0008D2  6E1E               	movwf	(??_checkCollision+1)^0,c
  8625  0008D4  EE20 F0CB          	lfsr	2,203
  8626  0008D8  501B               	movf	checkCollision@g^0,w,c
  8627  0008DA  26D9               	addwf	fsr2l,f,c
  8628  0008DC  501C               	movf	(checkCollision@g+1)^0,w,c
  8629  0008DE  22DA               	addwfc	fsr2h,f,c
  8630  0008E0  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8631  0008E4  CFDD F020          	movff	postdec2,??_checkCollision+3
  8632  0008E8  501D               	movf	??_checkCollision^0,w,c
  8633  0008EA  261F               	addwf	(??_checkCollision+2)^0,f,c
  8634  0008EC  501E               	movf	(??_checkCollision+1)^0,w,c
  8635  0008EE  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8636  0008F0  0EFB               	movlw	251
  8637  0008F2  6E21               	movwf	(??_checkCollision+4)^0,c
  8638  0008F4  0EFF               	movlw	255
  8639  0008F6  6E22               	movwf	(??_checkCollision+5)^0,c
  8640  0008F8  EE20 F0E1          	lfsr	2,225
  8641  0008FC  501B               	movf	checkCollision@g^0,w,c
  8642  0008FE  26D9               	addwf	fsr2l,f,c
  8643  000900  501C               	movf	(checkCollision@g+1)^0,w,c
  8644  000902  22DA               	addwfc	fsr2h,f,c
  8645  000904  CFDE F023          	movff	postinc2,??_checkCollision+6
  8646  000908  CFDD F024          	movff	postdec2,??_checkCollision+7
  8647  00090C  5021               	movf	(??_checkCollision+4)^0,w,c
  8648  00090E  2623               	addwf	(??_checkCollision+6)^0,f,c
  8649  000910  5022               	movf	(??_checkCollision+5)^0,w,c
  8650  000912  2224               	addwfc	(??_checkCollision+7)^0,f,c
  8651  000914  501F               	movf	(??_checkCollision+2)^0,w,c
  8652  000916  5C23               	subwf	(??_checkCollision+6)^0,w,c
  8653  000918  5020               	movf	(??_checkCollision+3)^0,w,c
  8654  00091A  5824               	subwfb	(??_checkCollision+7)^0,w,c
  8655  00091C  A0D8               	btfss	status,0,c
  8656  00091E  EF93  F004         	goto	u6871
  8657  000922  EF95  F004         	goto	u6870
  8658  000926                     u6871:
  8659  000926  EFA6  F004         	goto	l9643
  8660  00092A                     u6870:
  8661  00092A                     
  8662                           ;stateMachine/gameController.c: 268:     {;stateMachine/gameController.c: 270:         X
      +                          F_pushEvent(evEndGame,0);
  8663  00092A  0E00               	movlw	0
  8664  00092C  6E18               	movwf	XF_pushEvent@inISR^0,c
  8665  00092E  0E09               	movlw	9
  8666  000930  ECC5  F02E         	call	_XF_pushEvent
  8667  000934                     
  8668                           ;stateMachine/gameController.c: 271:         g->s1.awayScore=0;
  8669  000934  EE20 F0EB          	lfsr	2,235
  8670  000938  501B               	movf	checkCollision@g^0,w,c
  8671  00093A  26D9               	addwf	fsr2l,f,c
  8672  00093C  501C               	movf	(checkCollision@g+1)^0,w,c
  8673  00093E  22DA               	addwfc	fsr2h,f,c
  8674  000940  0E00               	movlw	0
  8675  000942  6EDE               	movwf	postinc2,c
  8676  000944  0E00               	movlw	0
  8677  000946  6EDD               	movwf	postdec2,c
  8678  000948                     
  8679                           ;stateMachine/gameController.c: 272:         gameStateMachine=ENDGAME;
  8680  000948  0E04               	movlw	4
  8681  00094A  6E4D               	movwf	_gameStateMachine^0,c
  8682  00094C                     l9643:
  8683                           
  8684                           ;stateMachine/gameController.c: 274:     if(g->b.y+8>=g->p1.y+5)
  8685  00094C  EE20 F0D7          	lfsr	2,215
  8686  000950  501B               	movf	checkCollision@g^0,w,c
  8687  000952  26D9               	addwf	fsr2l,f,c
  8688  000954  501C               	movf	(checkCollision@g+1)^0,w,c
  8689  000956  22DA               	addwfc	fsr2h,f,c
  8690  000958  CFDE F01D          	movff	postinc2,??_checkCollision
  8691  00095C  CFDD F01E          	movff	postdec2,??_checkCollision+1
  8692  000960  0E05               	movlw	5
  8693  000962  261D               	addwf	??_checkCollision^0,f,c
  8694  000964  0E00               	movlw	0
  8695  000966  221E               	addwfc	(??_checkCollision+1)^0,f,c
  8696  000968  EE20 F0CB          	lfsr	2,203
  8697  00096C  501B               	movf	checkCollision@g^0,w,c
  8698  00096E  26D9               	addwf	fsr2l,f,c
  8699  000970  501C               	movf	(checkCollision@g+1)^0,w,c
  8700  000972  22DA               	addwfc	fsr2h,f,c
  8701  000974  CFDE F01F          	movff	postinc2,??_checkCollision+2
  8702  000978  CFDD F020          	movff	postdec2,??_checkCollision+3
  8703  00097C  0E08               	movlw	8
  8704  00097E  261F               	addwf	(??_checkCollision+2)^0,f,c
  8705  000980  0E00               	movlw	0
  8706  000982  2220               	addwfc	(??_checkCollision+3)^0,f,c
  8707  000984  501D               	movf	??_checkCollision^0,w,c
  8708  000986  5C1F               	subwf	(??_checkCollision+2)^0,w,c
  8709  000988  501E               	movf	(??_checkCollision+1)^0,w,c
  8710  00098A  5820               	subwfb	(??_checkCollision+3)^0,w,c
  8711  00098C  A0D8               	btfss	status,0,c
  8712  00098E  EFCB  F004         	goto	u6881
  8713  000992  EFCD  F004         	goto	u6880
  8714  000996                     u6881:
  8715  000996  EFDE  F004         	goto	l681
  8716  00099A                     u6880:
  8717  00099A                     
  8718                           ;stateMachine/gameController.c: 275:     {;stateMachine/gameController.c: 277:         X
      +                          F_pushEvent(evEndGame,0);
  8719  00099A  0E00               	movlw	0
  8720  00099C  6E18               	movwf	XF_pushEvent@inISR^0,c
  8721  00099E  0E09               	movlw	9
  8722  0009A0  ECC5  F02E         	call	_XF_pushEvent
  8723  0009A4                     
  8724                           ;stateMachine/gameController.c: 278:         g->s1.homeScore=0;
  8725  0009A4  EE20 F0E9          	lfsr	2,233
  8726  0009A8  501B               	movf	checkCollision@g^0,w,c
  8727  0009AA  26D9               	addwf	fsr2l,f,c
  8728  0009AC  501C               	movf	(checkCollision@g+1)^0,w,c
  8729  0009AE  22DA               	addwfc	fsr2h,f,c
  8730  0009B0  0E00               	movlw	0
  8731  0009B2  6EDE               	movwf	postinc2,c
  8732  0009B4  0E00               	movlw	0
  8733  0009B6  6EDD               	movwf	postdec2,c
  8734  0009B8                     
  8735                           ;stateMachine/gameController.c: 279:         gameStateMachine=ENDGAME;
  8736  0009B8  0E04               	movlw	4
  8737  0009BA  6E4D               	movwf	_gameStateMachine^0,c
  8738  0009BC                     l681:
  8739  0009BC  0012               	return		;funcret
  8740  0009BE                     __end_of_checkCollision:
  8741                           	callstack 0
  8742                           
  8743 ;; *************** function _XF_pushEvent *****************
  8744 ;; Defined at:
  8745 ;;		line 49 in file "xf/xf.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  ev              1    wreg     unsigned char 
  8748 ;;  inISR           1   23[COMRAM] _Bool 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;  ev              1   24[COMRAM] unsigned char 
  8751 ;;  temp            1   25[COMRAM] unsigned char 
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  1    wreg      _Bool 
  8754 ;; Registers used:
  8755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8761 ;;      Params:         1       0       0       0       0       0       0
  8762 ;;      Locals:         2       0       0       0       0       0       0
  8763 ;;      Temps:          0       0       0       0       0       0       0
  8764 ;;      Totals:         3       0       0       0       0       0       0
  8765 ;;Total ram usage:        3 bytes
  8766 ;; Hardware stack levels used: 1
  8767 ;; Hardware stack levels required when called: 5
  8768 ;; This function calls:
  8769 ;;		_ENTERCRITICAL
  8770 ;;		_LEAVECRITICAL
  8771 ;;		___awmod
  8772 ;; This function is called by:
  8773 ;;		_gameControllerController
  8774 ;;		_moovePaddle
  8775 ;;		_mooveBall
  8776 ;;		_checkCollision
  8777 ;; This function uses a non-reentrant model
  8778 ;;
  8779                           
  8780                           	psect	text30
  8781  005D8A                     __ptext30:
  8782                           	callstack 0
  8783  005D8A                     _XF_pushEvent:
  8784                           	callstack 20
  8785                           
  8786                           ;incstack = 0
  8787                           ;XF_pushEvent@ev stored from wreg
  8788  005D8A  6E19               	movwf	XF_pushEvent@ev^0,c
  8789  005D8C                     
  8790                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
  8791  005D8C  5018               	movf	XF_pushEvent@inISR^0,w,c
  8792  005D8E  ECFB  F031         	call	_ENTERCRITICAL
  8793  005D92                     
  8794                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
  8795  005D92  0E01               	movlw	1
  8796  005D94  0100               	movlb	0	; () banked
  8797  005D96  25D9               	addwf	(_theXF+36)& (0+255),w,b
  8798  005D98  6E12               	movwf	___awmod@dividend^0,c
  8799  005D9A  6A13               	clrf	(___awmod@dividend+1)^0,c
  8800  005D9C  0E00               	movlw	0
  8801  005D9E  2213               	addwfc	(___awmod@dividend+1)^0,f,c
  8802  005DA0  0E00               	movlw	0
  8803  005DA2  6E15               	movwf	(___awmod@divisor+1)^0,c
  8804  005DA4  0E0C               	movlw	12
  8805  005DA6  6E14               	movwf	___awmod@divisor^0,c
  8806  005DA8  ECD2  F02B         	call	___awmod	;wreg free
  8807  005DAC  5012               	movf	?___awmod^0,w,c
  8808  005DAE  6E1A               	movwf	XF_pushEvent@temp^0,c
  8809  005DB0                     
  8810                           ;xf/xf.c: 55:     if(temp == theXF.out)
  8811  005DB0  501A               	movf	XF_pushEvent@temp^0,w,c
  8812  005DB2  0100               	movlb	0	; () banked
  8813  005DB4  19DA               	xorwf	(_theXF+37)& (0+255),w,b
  8814  005DB6  A4D8               	btfss	status,2,c
  8815  005DB8  EFE0  F02E         	goto	u6541
  8816  005DBC  EFE2  F02E         	goto	u6540
  8817  005DC0                     u6541:
  8818  005DC0  EFE8  F02E         	goto	l9279
  8819  005DC4                     u6540:
  8820  005DC4                     
  8821                           ; BSR set to: 0
  8822                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
  8823  005DC4  5018               	movf	XF_pushEvent@inISR^0,w,c
  8824  005DC6  ECF0  F031         	call	_LEAVECRITICAL
  8825  005DCA                     
  8826                           ;xf/xf.c: 58:       return 0;
  8827  005DCA  0E00               	movlw	0
  8828  005DCC  EFF6  F02E         	goto	l726
  8829  005DD0                     l9279:
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
  8833  005DD0  0ECD               	movlw	low (_theXF+24)
  8834  005DD2  25D9               	addwf	(_theXF+36)& (0+255),w,b
  8835  005DD4  6ED9               	movwf	fsr2l,c
  8836  005DD6  6ADA               	clrf	fsr2h,c
  8837  005DD8  0E00               	movlw	high (_theXF+24)
  8838  005DDA  22DA               	addwfc	fsr2h,f,c
  8839  005DDC  C019  FFDF         	movff	XF_pushEvent@ev,indf2
  8840  005DE0                     
  8841                           ; BSR set to: 0
  8842                           ;xf/xf.c: 61:     theXF.in = temp;
  8843  005DE0  C01A  F0D9         	movff	XF_pushEvent@temp,_theXF+36
  8844  005DE4                     
  8845                           ; BSR set to: 0
  8846                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
  8847  005DE4  5018               	movf	XF_pushEvent@inISR^0,w,c
  8848  005DE6  ECF0  F031         	call	_LEAVECRITICAL
  8849  005DEA                     
  8850                           ;xf/xf.c: 63:     return 1;
  8851  005DEA  0E01               	movlw	1
  8852  005DEC                     l726:
  8853  005DEC  0012               	return		;funcret
  8854  005DEE                     __end_of_XF_pushEvent:
  8855                           	callstack 0
  8856                           
  8857 ;; *************** function _Ball_Update *****************
  8858 ;; Defined at:
  8859 ;;		line 12 in file "class/ball.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  b               2   17[COMRAM] PTR struct Ball
  8862 ;;		 -> g1(239), 
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      void 
  8867 ;; Registers used:
  8868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8874 ;;      Params:         2       0       0       0       0       0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0
  8876 ;;      Temps:          4       0       0       0       0       0       0
  8877 ;;      Totals:         6       0       0       0       0       0       0
  8878 ;;Total ram usage:        6 bytes
  8879 ;; Hardware stack levels used: 1
  8880 ;; Hardware stack levels required when called: 4
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		_mooveBall
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text31
  8889  005A3C                     __ptext31:
  8890                           	callstack 0
  8891  005A3C                     _Ball_Update:
  8892                           	callstack 21
  8893  005A3C                     
  8894                           ;class/ball.c: 12: void Ball_Update(struct Ball* b);class/ball.c: 13: {;class/ball.c: 14
      +                          :     b->x=b->x+b->dx;
  8895  005A3C  EE20 F008          	lfsr	2,8
  8896  005A40  5012               	movf	Ball_Update@b^0,w,c
  8897  005A42  26D9               	addwf	fsr2l,f,c
  8898  005A44  5013               	movf	(Ball_Update@b+1)^0,w,c
  8899  005A46  22DA               	addwfc	fsr2h,f,c
  8900  005A48  CFDE F014          	movff	postinc2,??_Ball_Update
  8901  005A4C  CFDD F015          	movff	postdec2,??_Ball_Update+1
  8902  005A50  C012  FFD9         	movff	Ball_Update@b,fsr2l
  8903  005A54  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
  8904  005A58  CFDE F016          	movff	postinc2,??_Ball_Update+2
  8905  005A5C  CFDD F017          	movff	postdec2,??_Ball_Update+3
  8906  005A60  5014               	movf	??_Ball_Update^0,w,c
  8907  005A62  2616               	addwf	(??_Ball_Update+2)^0,f,c
  8908  005A64  5015               	movf	(??_Ball_Update+1)^0,w,c
  8909  005A66  2217               	addwfc	(??_Ball_Update+3)^0,f,c
  8910  005A68  C012  FFD9         	movff	Ball_Update@b,fsr2l
  8911  005A6C  C013  FFDA         	movff	Ball_Update@b+1,fsr2h
  8912  005A70  C016  FFDE         	movff	??_Ball_Update+2,postinc2
  8913  005A74  C017  FFDD         	movff	??_Ball_Update+3,postdec2
  8914                           
  8915                           ;class/ball.c: 15:     b->y=b->y+b->dy;
  8916  005A78  EE20 F00A          	lfsr	2,10
  8917  005A7C  5012               	movf	Ball_Update@b^0,w,c
  8918  005A7E  26D9               	addwf	fsr2l,f,c
  8919  005A80  5013               	movf	(Ball_Update@b+1)^0,w,c
  8920  005A82  22DA               	addwfc	fsr2h,f,c
  8921  005A84  CFDE F014          	movff	postinc2,??_Ball_Update
  8922  005A88  CFDD F015          	movff	postdec2,??_Ball_Update+1
  8923  005A8C  EE20 F002          	lfsr	2,2
  8924  005A90  5012               	movf	Ball_Update@b^0,w,c
  8925  005A92  26D9               	addwf	fsr2l,f,c
  8926  005A94  5013               	movf	(Ball_Update@b+1)^0,w,c
  8927  005A96  22DA               	addwfc	fsr2h,f,c
  8928  005A98  CFDE F016          	movff	postinc2,??_Ball_Update+2
  8929  005A9C  CFDD F017          	movff	postdec2,??_Ball_Update+3
  8930  005AA0  5014               	movf	??_Ball_Update^0,w,c
  8931  005AA2  2616               	addwf	(??_Ball_Update+2)^0,f,c
  8932  005AA4  5015               	movf	(??_Ball_Update+1)^0,w,c
  8933  005AA6  2217               	addwfc	(??_Ball_Update+3)^0,f,c
  8934  005AA8  EE20 F002          	lfsr	2,2
  8935  005AAC  5012               	movf	Ball_Update@b^0,w,c
  8936  005AAE  26D9               	addwf	fsr2l,f,c
  8937  005AB0  5013               	movf	(Ball_Update@b+1)^0,w,c
  8938  005AB2  22DA               	addwfc	fsr2h,f,c
  8939  005AB4  C016  FFDE         	movff	??_Ball_Update+2,postinc2
  8940  005AB8  C017  FFDD         	movff	??_Ball_Update+3,postdec2
  8941  005ABC  0012               	return		;funcret
  8942  005ABE                     __end_of_Ball_Update:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function _backlightController *****************
  8946 ;; Defined at:
  8947 ;;		line 284 in file "stateMachine/gameController.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  g               2   23[COMRAM] PTR struct GameParameter
  8950 ;;		 -> g1(239), 
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;		None
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      void 
  8955 ;; Registers used:
  8956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8962 ;;      Params:         2       0       0       0       0       0       0
  8963 ;;      Locals:         0       0       0       0       0       0       0
  8964 ;;      Temps:          2       0       0       0       0       0       0
  8965 ;;      Totals:         4       0       0       0       0       0       0
  8966 ;;Total ram usage:        4 bytes
  8967 ;; Hardware stack levels used: 1
  8968 ;; Hardware stack levels required when called: 5
  8969 ;; This function calls:
  8970 ;;		_GameParameters_setBackLight
  8971 ;; This function is called by:
  8972 ;;		_gameControllerController
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text32
  8977  001978                     __ptext32:
  8978                           	callstack 0
  8979  001978                     _backlightController:
  8980                           	callstack 21
  8981  001978                     
  8982                           ;stateMachine/gameController.c: 284: void backlightController(GameParameters* g);stateMa
      +                          chine/gameController.c: 285: {;stateMachine/gameController.c: 286:     if(((g->x)>=50)&&
      +                          ((g->x)<64))
  8983  001978  EE20 F004          	lfsr	2,4
  8984  00197C  5018               	movf	backlightController@g^0,w,c
  8985  00197E  26D9               	addwf	fsr2l,f,c
  8986  001980  5019               	movf	(backlightController@g+1)^0,w,c
  8987  001982  22DA               	addwfc	fsr2h,f,c
  8988  001984  0E01               	movlw	1
  8989  001986  50DB               	movf	plusw2,w,c
  8990  001988  E109               	bnz	u6940
  8991  00198A  0E32               	movlw	50
  8992  00198C  5CDE               	subwf	postinc2,w,c
  8993  00198E  A0D8               	btfss	status,0,c
  8994  001990  EFCC  F00C         	goto	u6941
  8995  001994  EFCE  F00C         	goto	u6940
  8996  001998                     u6941:
  8997  001998  EFEC  F00C         	goto	l9767
  8998  00199C                     u6940:
  8999  00199C  EE20 F004          	lfsr	2,4
  9000  0019A0  5018               	movf	backlightController@g^0,w,c
  9001  0019A2  26D9               	addwf	fsr2l,f,c
  9002  0019A4  5019               	movf	(backlightController@g+1)^0,w,c
  9003  0019A6  22DA               	addwfc	fsr2h,f,c
  9004  0019A8  0E01               	movlw	1
  9005  0019AA  50DB               	movf	plusw2,w,c
  9006  0019AC  E107               	bnz	u6951
  9007  0019AE  0E40               	movlw	64
  9008  0019B0  5CDE               	subwf	postinc2,w,c
  9009  0019B2  B0D8               	btfsc	status,0,c
  9010  0019B4  EFDE  F00C         	goto	u6951
  9011  0019B8  EFE0  F00C         	goto	u6950
  9012  0019BC                     u6951:
  9013  0019BC  EFEC  F00C         	goto	l9767
  9014  0019C0                     u6950:
  9015  0019C0                     
  9016                           ;stateMachine/gameController.c: 287:     {;stateMachine/gameController.c: 288:         G
      +                          ameParameters_setBackLight(g,0);
  9017  0019C0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9018  0019C4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9019  0019C8  0E00               	movlw	0
  9020  0019CA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9021  0019CC  0E00               	movlw	0
  9022  0019CE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9023  0019D0  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9024                           
  9025                           ;stateMachine/gameController.c: 289:     }
  9026  0019D4  EFFC  F00E         	goto	l9833
  9027  0019D8                     l9767:
  9028  0019D8  EE20 F004          	lfsr	2,4
  9029  0019DC  5018               	movf	backlightController@g^0,w,c
  9030  0019DE  26D9               	addwf	fsr2l,f,c
  9031  0019E0  5019               	movf	(backlightController@g+1)^0,w,c
  9032  0019E2  22DA               	addwfc	fsr2h,f,c
  9033  0019E4  0E01               	movlw	1
  9034  0019E6  50DB               	movf	plusw2,w,c
  9035  0019E8  E109               	bnz	u6960
  9036  0019EA  0E40               	movlw	64
  9037  0019EC  5CDE               	subwf	postinc2,w,c
  9038  0019EE  A0D8               	btfss	status,0,c
  9039  0019F0  EFFC  F00C         	goto	u6961
  9040  0019F4  EFFE  F00C         	goto	u6960
  9041  0019F8                     u6961:
  9042  0019F8  EF1C  F00D         	goto	l9773
  9043  0019FC                     u6960:
  9044  0019FC  EE20 F004          	lfsr	2,4
  9045  001A00  5018               	movf	backlightController@g^0,w,c
  9046  001A02  26D9               	addwf	fsr2l,f,c
  9047  001A04  5019               	movf	(backlightController@g+1)^0,w,c
  9048  001A06  22DA               	addwfc	fsr2h,f,c
  9049  001A08  0E01               	movlw	1
  9050  001A0A  50DB               	movf	plusw2,w,c
  9051  001A0C  E107               	bnz	u6971
  9052  001A0E  0E4E               	movlw	78
  9053  001A10  5CDE               	subwf	postinc2,w,c
  9054  001A12  B0D8               	btfsc	status,0,c
  9055  001A14  EF0E  F00D         	goto	u6971
  9056  001A18  EF10  F00D         	goto	u6970
  9057  001A1C                     u6971:
  9058  001A1C  EF1C  F00D         	goto	l9773
  9059  001A20                     u6970:
  9060  001A20                     
  9061                           ;stateMachine/gameController.c: 291:     {;stateMachine/gameController.c: 292:         G
      +                          ameParameters_setBackLight(g,1);
  9062  001A20  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9063  001A24  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9064  001A28  0E00               	movlw	0
  9065  001A2A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9066  001A2C  0E01               	movlw	1
  9067  001A2E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9068  001A30  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9069                           
  9070                           ;stateMachine/gameController.c: 293:     }
  9071  001A34  EFFC  F00E         	goto	l9833
  9072  001A38                     l9773:
  9073  001A38  EE20 F004          	lfsr	2,4
  9074  001A3C  5018               	movf	backlightController@g^0,w,c
  9075  001A3E  26D9               	addwf	fsr2l,f,c
  9076  001A40  5019               	movf	(backlightController@g+1)^0,w,c
  9077  001A42  22DA               	addwfc	fsr2h,f,c
  9078  001A44  0E01               	movlw	1
  9079  001A46  50DB               	movf	plusw2,w,c
  9080  001A48  E109               	bnz	u6980
  9081  001A4A  0E4E               	movlw	78
  9082  001A4C  5CDE               	subwf	postinc2,w,c
  9083  001A4E  A0D8               	btfss	status,0,c
  9084  001A50  EF2C  F00D         	goto	u6981
  9085  001A54  EF2E  F00D         	goto	u6980
  9086  001A58                     u6981:
  9087  001A58  EF4C  F00D         	goto	l9779
  9088  001A5C                     u6980:
  9089  001A5C  EE20 F004          	lfsr	2,4
  9090  001A60  5018               	movf	backlightController@g^0,w,c
  9091  001A62  26D9               	addwf	fsr2l,f,c
  9092  001A64  5019               	movf	(backlightController@g+1)^0,w,c
  9093  001A66  22DA               	addwfc	fsr2h,f,c
  9094  001A68  0E01               	movlw	1
  9095  001A6A  50DB               	movf	plusw2,w,c
  9096  001A6C  E107               	bnz	u6991
  9097  001A6E  0E5C               	movlw	92
  9098  001A70  5CDE               	subwf	postinc2,w,c
  9099  001A72  B0D8               	btfsc	status,0,c
  9100  001A74  EF3E  F00D         	goto	u6991
  9101  001A78  EF40  F00D         	goto	u6990
  9102  001A7C                     u6991:
  9103  001A7C  EF4C  F00D         	goto	l9779
  9104  001A80                     u6990:
  9105  001A80                     
  9106                           ;stateMachine/gameController.c: 295:     {;stateMachine/gameController.c: 296:         G
      +                          ameParameters_setBackLight(g,2);
  9107  001A80  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9108  001A84  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9109  001A88  0E00               	movlw	0
  9110  001A8A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9111  001A8C  0E02               	movlw	2
  9112  001A8E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9113  001A90  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9114                           
  9115                           ;stateMachine/gameController.c: 297:     }
  9116  001A94  EFFC  F00E         	goto	l9833
  9117  001A98                     l9779:
  9118  001A98  EE20 F004          	lfsr	2,4
  9119  001A9C  5018               	movf	backlightController@g^0,w,c
  9120  001A9E  26D9               	addwf	fsr2l,f,c
  9121  001AA0  5019               	movf	(backlightController@g+1)^0,w,c
  9122  001AA2  22DA               	addwfc	fsr2h,f,c
  9123  001AA4  0E01               	movlw	1
  9124  001AA6  50DB               	movf	plusw2,w,c
  9125  001AA8  E109               	bnz	u7000
  9126  001AAA  0E5C               	movlw	92
  9127  001AAC  5CDE               	subwf	postinc2,w,c
  9128  001AAE  A0D8               	btfss	status,0,c
  9129  001AB0  EF5C  F00D         	goto	u7001
  9130  001AB4  EF5E  F00D         	goto	u7000
  9131  001AB8                     u7001:
  9132  001AB8  EF7C  F00D         	goto	l9785
  9133  001ABC                     u7000:
  9134  001ABC  EE20 F004          	lfsr	2,4
  9135  001AC0  5018               	movf	backlightController@g^0,w,c
  9136  001AC2  26D9               	addwf	fsr2l,f,c
  9137  001AC4  5019               	movf	(backlightController@g+1)^0,w,c
  9138  001AC6  22DA               	addwfc	fsr2h,f,c
  9139  001AC8  0E01               	movlw	1
  9140  001ACA  50DB               	movf	plusw2,w,c
  9141  001ACC  E107               	bnz	u7011
  9142  001ACE  0E6A               	movlw	106
  9143  001AD0  5CDE               	subwf	postinc2,w,c
  9144  001AD2  B0D8               	btfsc	status,0,c
  9145  001AD4  EF6E  F00D         	goto	u7011
  9146  001AD8  EF70  F00D         	goto	u7010
  9147  001ADC                     u7011:
  9148  001ADC  EF7C  F00D         	goto	l9785
  9149  001AE0                     u7010:
  9150  001AE0                     
  9151                           ;stateMachine/gameController.c: 299:     {;stateMachine/gameController.c: 300:         G
      +                          ameParameters_setBackLight(g,3);
  9152  001AE0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9153  001AE4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9154  001AE8  0E00               	movlw	0
  9155  001AEA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9156  001AEC  0E03               	movlw	3
  9157  001AEE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9158  001AF0  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9159                           
  9160                           ;stateMachine/gameController.c: 301:     }
  9161  001AF4  EFFC  F00E         	goto	l9833
  9162  001AF8                     l9785:
  9163  001AF8  EE20 F004          	lfsr	2,4
  9164  001AFC  5018               	movf	backlightController@g^0,w,c
  9165  001AFE  26D9               	addwf	fsr2l,f,c
  9166  001B00  5019               	movf	(backlightController@g+1)^0,w,c
  9167  001B02  22DA               	addwfc	fsr2h,f,c
  9168  001B04  0E01               	movlw	1
  9169  001B06  50DB               	movf	plusw2,w,c
  9170  001B08  E109               	bnz	u7020
  9171  001B0A  0E6A               	movlw	106
  9172  001B0C  5CDE               	subwf	postinc2,w,c
  9173  001B0E  A0D8               	btfss	status,0,c
  9174  001B10  EF8C  F00D         	goto	u7021
  9175  001B14  EF8E  F00D         	goto	u7020
  9176  001B18                     u7021:
  9177  001B18  EFAC  F00D         	goto	l9791
  9178  001B1C                     u7020:
  9179  001B1C  EE20 F004          	lfsr	2,4
  9180  001B20  5018               	movf	backlightController@g^0,w,c
  9181  001B22  26D9               	addwf	fsr2l,f,c
  9182  001B24  5019               	movf	(backlightController@g+1)^0,w,c
  9183  001B26  22DA               	addwfc	fsr2h,f,c
  9184  001B28  0E01               	movlw	1
  9185  001B2A  50DB               	movf	plusw2,w,c
  9186  001B2C  E107               	bnz	u7031
  9187  001B2E  0E78               	movlw	120
  9188  001B30  5CDE               	subwf	postinc2,w,c
  9189  001B32  B0D8               	btfsc	status,0,c
  9190  001B34  EF9E  F00D         	goto	u7031
  9191  001B38  EFA0  F00D         	goto	u7030
  9192  001B3C                     u7031:
  9193  001B3C  EFAC  F00D         	goto	l9791
  9194  001B40                     u7030:
  9195  001B40                     
  9196                           ;stateMachine/gameController.c: 303:     {;stateMachine/gameController.c: 304:         G
      +                          ameParameters_setBackLight(g,4);
  9197  001B40  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9198  001B44  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9199  001B48  0E00               	movlw	0
  9200  001B4A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9201  001B4C  0E04               	movlw	4
  9202  001B4E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9203  001B50  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9204                           
  9205                           ;stateMachine/gameController.c: 305:     }
  9206  001B54  EFFC  F00E         	goto	l9833
  9207  001B58                     l9791:
  9208  001B58  EE20 F004          	lfsr	2,4
  9209  001B5C  5018               	movf	backlightController@g^0,w,c
  9210  001B5E  26D9               	addwf	fsr2l,f,c
  9211  001B60  5019               	movf	(backlightController@g+1)^0,w,c
  9212  001B62  22DA               	addwfc	fsr2h,f,c
  9213  001B64  0E01               	movlw	1
  9214  001B66  50DB               	movf	plusw2,w,c
  9215  001B68  E109               	bnz	u7040
  9216  001B6A  0E78               	movlw	120
  9217  001B6C  5CDE               	subwf	postinc2,w,c
  9218  001B6E  A0D8               	btfss	status,0,c
  9219  001B70  EFBC  F00D         	goto	u7041
  9220  001B74  EFBE  F00D         	goto	u7040
  9221  001B78                     u7041:
  9222  001B78  EFDC  F00D         	goto	l9797
  9223  001B7C                     u7040:
  9224  001B7C  EE20 F004          	lfsr	2,4
  9225  001B80  5018               	movf	backlightController@g^0,w,c
  9226  001B82  26D9               	addwf	fsr2l,f,c
  9227  001B84  5019               	movf	(backlightController@g+1)^0,w,c
  9228  001B86  22DA               	addwfc	fsr2h,f,c
  9229  001B88  0E01               	movlw	1
  9230  001B8A  50DB               	movf	plusw2,w,c
  9231  001B8C  E107               	bnz	u7051
  9232  001B8E  0E86               	movlw	134
  9233  001B90  5CDE               	subwf	postinc2,w,c
  9234  001B92  B0D8               	btfsc	status,0,c
  9235  001B94  EFCE  F00D         	goto	u7051
  9236  001B98  EFD0  F00D         	goto	u7050
  9237  001B9C                     u7051:
  9238  001B9C  EFDC  F00D         	goto	l9797
  9239  001BA0                     u7050:
  9240  001BA0                     
  9241                           ;stateMachine/gameController.c: 307:     {;stateMachine/gameController.c: 308:         G
      +                          ameParameters_setBackLight(g,5);
  9242  001BA0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9243  001BA4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9244  001BA8  0E00               	movlw	0
  9245  001BAA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9246  001BAC  0E05               	movlw	5
  9247  001BAE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9248  001BB0  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9249                           
  9250                           ;stateMachine/gameController.c: 309:     }
  9251  001BB4  EFFC  F00E         	goto	l9833
  9252  001BB8                     l9797:
  9253  001BB8  EE20 F004          	lfsr	2,4
  9254  001BBC  5018               	movf	backlightController@g^0,w,c
  9255  001BBE  26D9               	addwf	fsr2l,f,c
  9256  001BC0  5019               	movf	(backlightController@g+1)^0,w,c
  9257  001BC2  22DA               	addwfc	fsr2h,f,c
  9258  001BC4  0E01               	movlw	1
  9259  001BC6  50DB               	movf	plusw2,w,c
  9260  001BC8  E109               	bnz	u7060
  9261  001BCA  0E86               	movlw	134
  9262  001BCC  5CDE               	subwf	postinc2,w,c
  9263  001BCE  A0D8               	btfss	status,0,c
  9264  001BD0  EFEC  F00D         	goto	u7061
  9265  001BD4  EFEE  F00D         	goto	u7060
  9266  001BD8                     u7061:
  9267  001BD8  EF0C  F00E         	goto	l9803
  9268  001BDC                     u7060:
  9269  001BDC  EE20 F004          	lfsr	2,4
  9270  001BE0  5018               	movf	backlightController@g^0,w,c
  9271  001BE2  26D9               	addwf	fsr2l,f,c
  9272  001BE4  5019               	movf	(backlightController@g+1)^0,w,c
  9273  001BE6  22DA               	addwfc	fsr2h,f,c
  9274  001BE8  0E01               	movlw	1
  9275  001BEA  50DB               	movf	plusw2,w,c
  9276  001BEC  E107               	bnz	u7071
  9277  001BEE  0E96               	movlw	150
  9278  001BF0  5CDE               	subwf	postinc2,w,c
  9279  001BF2  B0D8               	btfsc	status,0,c
  9280  001BF4  EFFE  F00D         	goto	u7071
  9281  001BF8  EF00  F00E         	goto	u7070
  9282  001BFC                     u7071:
  9283  001BFC  EF0C  F00E         	goto	l9803
  9284  001C00                     u7070:
  9285  001C00                     
  9286                           ;stateMachine/gameController.c: 311:     {;stateMachine/gameController.c: 312:         G
      +                          ameParameters_setBackLight(g,6);
  9287  001C00  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9288  001C04  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9289  001C08  0E00               	movlw	0
  9290  001C0A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9291  001C0C  0E06               	movlw	6
  9292  001C0E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9293  001C10  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9294                           
  9295                           ;stateMachine/gameController.c: 313:     }
  9296  001C14  EFFC  F00E         	goto	l9833
  9297  001C18                     l9803:
  9298  001C18  EE20 F004          	lfsr	2,4
  9299  001C1C  5018               	movf	backlightController@g^0,w,c
  9300  001C1E  26D9               	addwf	fsr2l,f,c
  9301  001C20  5019               	movf	(backlightController@g+1)^0,w,c
  9302  001C22  22DA               	addwfc	fsr2h,f,c
  9303  001C24  0E01               	movlw	1
  9304  001C26  50DB               	movf	plusw2,w,c
  9305  001C28  E109               	bnz	u7080
  9306  001C2A  0E96               	movlw	150
  9307  001C2C  5CDE               	subwf	postinc2,w,c
  9308  001C2E  A0D8               	btfss	status,0,c
  9309  001C30  EF1C  F00E         	goto	u7081
  9310  001C34  EF1E  F00E         	goto	u7080
  9311  001C38                     u7081:
  9312  001C38  EF3C  F00E         	goto	l9809
  9313  001C3C                     u7080:
  9314  001C3C  EE20 F004          	lfsr	2,4
  9315  001C40  5018               	movf	backlightController@g^0,w,c
  9316  001C42  26D9               	addwf	fsr2l,f,c
  9317  001C44  5019               	movf	(backlightController@g+1)^0,w,c
  9318  001C46  22DA               	addwfc	fsr2h,f,c
  9319  001C48  0E01               	movlw	1
  9320  001C4A  50DB               	movf	plusw2,w,c
  9321  001C4C  E107               	bnz	u7091
  9322  001C4E  0EA4               	movlw	164
  9323  001C50  5CDE               	subwf	postinc2,w,c
  9324  001C52  B0D8               	btfsc	status,0,c
  9325  001C54  EF2E  F00E         	goto	u7091
  9326  001C58  EF30  F00E         	goto	u7090
  9327  001C5C                     u7091:
  9328  001C5C  EF3C  F00E         	goto	l9809
  9329  001C60                     u7090:
  9330  001C60                     
  9331                           ;stateMachine/gameController.c: 315:     {;stateMachine/gameController.c: 316:         G
      +                          ameParameters_setBackLight(g,7);
  9332  001C60  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9333  001C64  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9334  001C68  0E00               	movlw	0
  9335  001C6A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9336  001C6C  0E07               	movlw	7
  9337  001C6E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9338  001C70  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9339                           
  9340                           ;stateMachine/gameController.c: 317:     }
  9341  001C74  EFFC  F00E         	goto	l9833
  9342  001C78                     l9809:
  9343  001C78  EE20 F004          	lfsr	2,4
  9344  001C7C  5018               	movf	backlightController@g^0,w,c
  9345  001C7E  26D9               	addwf	fsr2l,f,c
  9346  001C80  5019               	movf	(backlightController@g+1)^0,w,c
  9347  001C82  22DA               	addwfc	fsr2h,f,c
  9348  001C84  0E01               	movlw	1
  9349  001C86  50DB               	movf	plusw2,w,c
  9350  001C88  E109               	bnz	u7100
  9351  001C8A  0EA4               	movlw	164
  9352  001C8C  5CDE               	subwf	postinc2,w,c
  9353  001C8E  A0D8               	btfss	status,0,c
  9354  001C90  EF4C  F00E         	goto	u7101
  9355  001C94  EF4E  F00E         	goto	u7100
  9356  001C98                     u7101:
  9357  001C98  EF6C  F00E         	goto	l9815
  9358  001C9C                     u7100:
  9359  001C9C  EE20 F004          	lfsr	2,4
  9360  001CA0  5018               	movf	backlightController@g^0,w,c
  9361  001CA2  26D9               	addwf	fsr2l,f,c
  9362  001CA4  5019               	movf	(backlightController@g+1)^0,w,c
  9363  001CA6  22DA               	addwfc	fsr2h,f,c
  9364  001CA8  0E01               	movlw	1
  9365  001CAA  50DB               	movf	plusw2,w,c
  9366  001CAC  E107               	bnz	u7111
  9367  001CAE  0EB2               	movlw	178
  9368  001CB0  5CDE               	subwf	postinc2,w,c
  9369  001CB2  B0D8               	btfsc	status,0,c
  9370  001CB4  EF5E  F00E         	goto	u7111
  9371  001CB8  EF60  F00E         	goto	u7110
  9372  001CBC                     u7111:
  9373  001CBC  EF6C  F00E         	goto	l9815
  9374  001CC0                     u7110:
  9375  001CC0                     
  9376                           ;stateMachine/gameController.c: 319:     {;stateMachine/gameController.c: 320:         G
      +                          ameParameters_setBackLight(g,8);
  9377  001CC0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9378  001CC4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9379  001CC8  0E00               	movlw	0
  9380  001CCA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9381  001CCC  0E08               	movlw	8
  9382  001CCE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9383  001CD0  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9384                           
  9385                           ;stateMachine/gameController.c: 321:     }
  9386  001CD4  EFFC  F00E         	goto	l9833
  9387  001CD8                     l9815:
  9388  001CD8  EE20 F004          	lfsr	2,4
  9389  001CDC  5018               	movf	backlightController@g^0,w,c
  9390  001CDE  26D9               	addwf	fsr2l,f,c
  9391  001CE0  5019               	movf	(backlightController@g+1)^0,w,c
  9392  001CE2  22DA               	addwfc	fsr2h,f,c
  9393  001CE4  0E01               	movlw	1
  9394  001CE6  50DB               	movf	plusw2,w,c
  9395  001CE8  E109               	bnz	u7120
  9396  001CEA  0EB2               	movlw	178
  9397  001CEC  5CDE               	subwf	postinc2,w,c
  9398  001CEE  A0D8               	btfss	status,0,c
  9399  001CF0  EF7C  F00E         	goto	u7121
  9400  001CF4  EF7E  F00E         	goto	u7120
  9401  001CF8                     u7121:
  9402  001CF8  EF9C  F00E         	goto	l9821
  9403  001CFC                     u7120:
  9404  001CFC  EE20 F004          	lfsr	2,4
  9405  001D00  5018               	movf	backlightController@g^0,w,c
  9406  001D02  26D9               	addwf	fsr2l,f,c
  9407  001D04  5019               	movf	(backlightController@g+1)^0,w,c
  9408  001D06  22DA               	addwfc	fsr2h,f,c
  9409  001D08  0E01               	movlw	1
  9410  001D0A  50DB               	movf	plusw2,w,c
  9411  001D0C  E107               	bnz	u7131
  9412  001D0E  0EC0               	movlw	192
  9413  001D10  5CDE               	subwf	postinc2,w,c
  9414  001D12  B0D8               	btfsc	status,0,c
  9415  001D14  EF8E  F00E         	goto	u7131
  9416  001D18  EF90  F00E         	goto	u7130
  9417  001D1C                     u7131:
  9418  001D1C  EF9C  F00E         	goto	l9821
  9419  001D20                     u7130:
  9420  001D20                     
  9421                           ;stateMachine/gameController.c: 323:     {;stateMachine/gameController.c: 324:         G
      +                          ameParameters_setBackLight(g,9);
  9422  001D20  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9423  001D24  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9424  001D28  0E00               	movlw	0
  9425  001D2A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9426  001D2C  0E09               	movlw	9
  9427  001D2E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9428  001D30  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9429                           
  9430                           ;stateMachine/gameController.c: 325:     }
  9431  001D34  EFFC  F00E         	goto	l9833
  9432  001D38                     l9821:
  9433  001D38  EE20 F004          	lfsr	2,4
  9434  001D3C  5018               	movf	backlightController@g^0,w,c
  9435  001D3E  26D9               	addwf	fsr2l,f,c
  9436  001D40  5019               	movf	(backlightController@g+1)^0,w,c
  9437  001D42  22DA               	addwfc	fsr2h,f,c
  9438  001D44  0E01               	movlw	1
  9439  001D46  50DB               	movf	plusw2,w,c
  9440  001D48  E109               	bnz	u7140
  9441  001D4A  0EC0               	movlw	192
  9442  001D4C  5CDE               	subwf	postinc2,w,c
  9443  001D4E  A0D8               	btfss	status,0,c
  9444  001D50  EFAC  F00E         	goto	u7141
  9445  001D54  EFAE  F00E         	goto	u7140
  9446  001D58                     u7141:
  9447  001D58  EFCC  F00E         	goto	l9827
  9448  001D5C                     u7140:
  9449  001D5C  EE20 F004          	lfsr	2,4
  9450  001D60  5018               	movf	backlightController@g^0,w,c
  9451  001D62  26D9               	addwf	fsr2l,f,c
  9452  001D64  5019               	movf	(backlightController@g+1)^0,w,c
  9453  001D66  22DA               	addwfc	fsr2h,f,c
  9454  001D68  0E01               	movlw	1
  9455  001D6A  50DB               	movf	plusw2,w,c
  9456  001D6C  E107               	bnz	u7151
  9457  001D6E  0ECE               	movlw	206
  9458  001D70  5CDE               	subwf	postinc2,w,c
  9459  001D72  B0D8               	btfsc	status,0,c
  9460  001D74  EFBE  F00E         	goto	u7151
  9461  001D78  EFC0  F00E         	goto	u7150
  9462  001D7C                     u7151:
  9463  001D7C  EFCC  F00E         	goto	l9827
  9464  001D80                     u7150:
  9465  001D80                     
  9466                           ;stateMachine/gameController.c: 327:     {;stateMachine/gameController.c: 328:         G
      +                          ameParameters_setBackLight(g,10);
  9467  001D80  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9468  001D84  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9469  001D88  0E00               	movlw	0
  9470  001D8A  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9471  001D8C  0E0A               	movlw	10
  9472  001D8E  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9473  001D90  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9474                           
  9475                           ;stateMachine/gameController.c: 329:     }
  9476  001D94  EFFC  F00E         	goto	l9833
  9477  001D98                     l9827:
  9478  001D98  EE20 F004          	lfsr	2,4
  9479  001D9C  5018               	movf	backlightController@g^0,w,c
  9480  001D9E  26D9               	addwf	fsr2l,f,c
  9481  001DA0  5019               	movf	(backlightController@g+1)^0,w,c
  9482  001DA2  22DA               	addwfc	fsr2h,f,c
  9483  001DA4  0E01               	movlw	1
  9484  001DA6  50DB               	movf	plusw2,w,c
  9485  001DA8  E109               	bnz	u7160
  9486  001DAA  0ECE               	movlw	206
  9487  001DAC  5CDE               	subwf	postinc2,w,c
  9488  001DAE  A0D8               	btfss	status,0,c
  9489  001DB0  EFDC  F00E         	goto	u7161
  9490  001DB4  EFDE  F00E         	goto	u7160
  9491  001DB8                     u7161:
  9492  001DB8  EFFC  F00E         	goto	l701
  9493  001DBC                     u7160:
  9494  001DBC  EE20 F004          	lfsr	2,4
  9495  001DC0  5018               	movf	backlightController@g^0,w,c
  9496  001DC2  26D9               	addwf	fsr2l,f,c
  9497  001DC4  5019               	movf	(backlightController@g+1)^0,w,c
  9498  001DC6  22DA               	addwfc	fsr2h,f,c
  9499  001DC8  0E01               	movlw	1
  9500  001DCA  50DB               	movf	plusw2,w,c
  9501  001DCC  E107               	bnz	u7171
  9502  001DCE  0ED7               	movlw	215
  9503  001DD0  5CDE               	subwf	postinc2,w,c
  9504  001DD2  B0D8               	btfsc	status,0,c
  9505  001DD4  EFEE  F00E         	goto	u7171
  9506  001DD8  EFF0  F00E         	goto	u7170
  9507  001DDC                     u7171:
  9508  001DDC  EFFC  F00E         	goto	l701
  9509  001DE0                     u7170:
  9510  001DE0                     
  9511                           ;stateMachine/gameController.c: 331:     {;stateMachine/gameController.c: 332:         G
      +                          ameParameters_setBackLight(g,11);
  9512  001DE0  C018  F012         	movff	backlightController@g,GameParameters_setBackLight@s
  9513  001DE4  C019  F013         	movff	backlightController@g+1,GameParameters_setBackLight@s+1
  9514  001DE8  0E00               	movlw	0
  9515  001DEA  6E15               	movwf	(GameParameters_setBackLight@value+1)^0,c
  9516  001DEC  0E0B               	movlw	11
  9517  001DEE  6E14               	movwf	GameParameters_setBackLight@value^0,c
  9518  001DF0  EC8A  F030         	call	_GameParameters_setBackLight	;wreg free
  9519  001DF4  EFFC  F00E         	goto	l9833
  9520  001DF8                     l701:
  9521  001DF8                     l9833:
  9522                           
  9523                           ;stateMachine/gameController.c: 334:     g->sldParam.value=g->backlight;
  9524  001DF8  C018  FFD9         	movff	backlightController@g,fsr2l
  9525  001DFC  C019  FFDA         	movff	backlightController@g+1,fsr2h
  9526  001E00  EE10 F0C1          	lfsr	1,193
  9527  001E04  5018               	movf	backlightController@g^0,w,c
  9528  001E06  26E1               	addwf	fsr1l,f,c
  9529  001E08  5019               	movf	(backlightController@g+1)^0,w,c
  9530  001E0A  22E2               	addwfc	fsr1h,f,c
  9531  001E0C  CFDE FFE6          	movff	postinc2,postinc1
  9532  001E10  CFDD FFE5          	movff	postdec2,postdec1
  9533  001E14  0012               	return		;funcret
  9534  001E16                     __end_of_backlightController:
  9535                           	callstack 0
  9536                           
  9537 ;; *************** function _GameParameters_setBackLight *****************
  9538 ;; Defined at:
  9539 ;;		line 23 in file "class/gameParameters.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  s               2   17[COMRAM] PTR struct GameParameter
  9542 ;;		 -> g1(239), 
  9543 ;;  value           2   19[COMRAM] unsigned short 
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;		None
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  1    wreg      void 
  9548 ;; Registers used:
  9549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9550 ;; Tracked objects:
  9551 ;;		On entry : 0/0
  9552 ;;		On exit  : 0/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9555 ;;      Params:         4       0       0       0       0       0       0
  9556 ;;      Locals:         0       0       0       0       0       0       0
  9557 ;;      Temps:          2       0       0       0       0       0       0
  9558 ;;      Totals:         6       0       0       0       0       0       0
  9559 ;;Total ram usage:        6 bytes
  9560 ;; Hardware stack levels used: 1
  9561 ;; Hardware stack levels required when called: 4
  9562 ;; This function calls:
  9563 ;;		Nothing
  9564 ;; This function is called by:
  9565 ;;		_backlightController
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           	psect	text33
  9570  006114                     __ptext33:
  9571                           	callstack 0
  9572  006114                     _GameParameters_setBackLight:
  9573                           	callstack 21
  9574  006114                     
  9575                           ;class/gameParameters.c: 23: void GameParameters_setBackLight(struct GameParameters* s, 
      +                          uint16_t value);class/gameParameters.c: 24: {;class/gameParameters.c: 25:     s->backlig
      +                          ht = value;
  9576  006114  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9577  006118  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9578  00611C  C014  FFDE         	movff	GameParameters_setBackLight@value,postinc2
  9579  006120  C015  FFDD         	movff	GameParameters_setBackLight@value+1,postdec2
  9580  006124                     
  9581                           ;class/gameParameters.c: 26:     if(s->backlight==11)
  9582  006124  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9583  006128  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9584  00612C  0E0B               	movlw	11
  9585  00612E  18DE               	xorwf	postinc2,w,c
  9586  006130  10DE               	iorwf	postinc2,w,c
  9587  006132  A4D8               	btfss	status,2,c
  9588  006134  EF9E  F030         	goto	u6621
  9589  006138  EFA0  F030         	goto	u6620
  9590  00613C                     u6621:
  9591  00613C  EFA3  F030         	goto	l9489
  9592  006140                     u6620:
  9593  006140                     
  9594                           ;class/gameParameters.c: 27:     {;class/gameParameters.c: 28:         CCPR2L = 255;
  9595  006140  6867               	setf	103,c	;volatile
  9596                           
  9597                           ;class/gameParameters.c: 29:     }
  9598  006142  EFAB  F030         	goto	l146
  9599  006146                     l9489:
  9600                           
  9601                           ;class/gameParameters.c: 31:     {;class/gameParameters.c: 32:         CCPR2L=(s->backli
      +                          ght)*23;
  9602  006146  C012  FFD9         	movff	GameParameters_setBackLight@s,fsr2l
  9603  00614A  C013  FFDA         	movff	GameParameters_setBackLight@s+1,fsr2h
  9604  00614E  50DF               	movf	indf2,w,c
  9605  006150  0D17               	mullw	23
  9606  006152  CFF3 FF67          	movff	prodl,3943	;volatile
  9607  006156                     l146:
  9608  006156  0012               	return		;funcret
  9609  006158                     __end_of_GameParameters_setBackLight:
  9610                           	callstack 0
  9611                           
  9612 ;; *************** function _LCD_InSlider *****************
  9613 ;; Defined at:
  9614 ;;		line 546 in file "libraries/lcd_highlevel.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  slider          2   17[COMRAM] PTR struct .
  9617 ;;		 -> g1(239), 
  9618 ;;  posX            2   19[COMRAM] unsigned short 
  9619 ;;  posY            2   21[COMRAM] unsigned short 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;		None
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  1    wreg      unsigned char 
  9624 ;; Registers used:
  9625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9631 ;;      Params:         6       0       0       0       0       0       0
  9632 ;;      Locals:         0       0       0       0       0       0       0
  9633 ;;      Temps:          4       0       0       0       0       0       0
  9634 ;;      Totals:        10       0       0       0       0       0       0
  9635 ;;Total ram usage:       10 bytes
  9636 ;; Hardware stack levels used: 1
  9637 ;; Hardware stack levels required when called: 4
  9638 ;; This function calls:
  9639 ;;		Nothing
  9640 ;; This function is called by:
  9641 ;;		_gameControllerController
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text34
  9646  004DAE                     __ptext34:
  9647                           	callstack 0
  9648  004DAE                     _LCD_InSlider:
  9649                           	callstack 22
  9650  004DAE                     
  9651                           ;libraries/lcd_highlevel.c: 546: uint8_t LCD_InSlider(sld_t * slider, uint16_t posX, uin
      +                          t16_t posY);libraries/lcd_highlevel.c: 547: {;libraries/lcd_highlevel.c: 549:   if(posX 
      +                          < slider->posX)
  9652  004DAE  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
  9653  004DB2  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
  9654  004DB6  50DE               	movf	postinc2,w,c
  9655  004DB8  5C14               	subwf	LCD_InSlider@posX^0,w,c
  9656  004DBA  50DE               	movf	postinc2,w,c
  9657  004DBC  5815               	subwfb	(LCD_InSlider@posX+1)^0,w,c
  9658  004DBE  B0D8               	btfsc	status,0,c
  9659  004DC0  EFE4  F026         	goto	u6901
  9660  004DC4  EFE6  F026         	goto	u6900
  9661  004DC8                     u6901:
  9662  004DC8  EFE9  F026         	goto	l9739
  9663  004DCC                     u6900:
  9664  004DCC                     l9735:
  9665                           
  9666                           ;libraries/lcd_highlevel.c: 550:   {;libraries/lcd_highlevel.c: 551:     return 0;
  9667  004DCC  0E00               	movlw	0
  9668  004DCE  EF45  F027         	goto	l271
  9669  004DD2                     l9739:
  9670                           
  9671                           ;libraries/lcd_highlevel.c: 554:   if(posX > (slider->posX + slider->width))
  9672  004DD2  EE20 F004          	lfsr	2,4
  9673  004DD6  5012               	movf	LCD_InSlider@slider^0,w,c
  9674  004DD8  26D9               	addwf	fsr2l,f,c
  9675  004DDA  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9676  004DDC  22DA               	addwfc	fsr2h,f,c
  9677  004DDE  CFDE F018          	movff	postinc2,??_LCD_InSlider
  9678  004DE2  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
  9679  004DE6  C012  FFD9         	movff	LCD_InSlider@slider,fsr2l
  9680  004DEA  C013  FFDA         	movff	LCD_InSlider@slider+1,fsr2h
  9681  004DEE  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
  9682  004DF2  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
  9683  004DF6  5018               	movf	??_LCD_InSlider^0,w,c
  9684  004DF8  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
  9685  004DFA  5019               	movf	(??_LCD_InSlider+1)^0,w,c
  9686  004DFC  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
  9687  004DFE  5014               	movf	LCD_InSlider@posX^0,w,c
  9688  004E00  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
  9689  004E02  5015               	movf	(LCD_InSlider@posX+1)^0,w,c
  9690  004E04  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
  9691  004E06  B0D8               	btfsc	status,0,c
  9692  004E08  EF08  F027         	goto	u6911
  9693  004E0C  EF0A  F027         	goto	u6910
  9694  004E10                     u6911:
  9695  004E10  EF0C  F027         	goto	l9745
  9696  004E14                     u6910:
  9697  004E14  EFE6  F026         	goto	l9735
  9698  004E18                     l9745:
  9699                           
  9700                           ;libraries/lcd_highlevel.c: 559:   if(posY < slider->posY)
  9701  004E18  EE20 F002          	lfsr	2,2
  9702  004E1C  5012               	movf	LCD_InSlider@slider^0,w,c
  9703  004E1E  26D9               	addwf	fsr2l,f,c
  9704  004E20  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9705  004E22  22DA               	addwfc	fsr2h,f,c
  9706  004E24  50DE               	movf	postinc2,w,c
  9707  004E26  5C16               	subwf	LCD_InSlider@posY^0,w,c
  9708  004E28  50DE               	movf	postinc2,w,c
  9709  004E2A  5817               	subwfb	(LCD_InSlider@posY+1)^0,w,c
  9710  004E2C  B0D8               	btfsc	status,0,c
  9711  004E2E  EF1B  F027         	goto	u6921
  9712  004E32  EF1D  F027         	goto	u6920
  9713  004E36                     u6921:
  9714  004E36  EF1F  F027         	goto	l9751
  9715  004E3A                     u6920:
  9716  004E3A  EFE6  F026         	goto	l9735
  9717  004E3E                     l9751:
  9718                           
  9719                           ;libraries/lcd_highlevel.c: 564:   if(posY > (slider->posY + slider->height))
  9720  004E3E  EE20 F006          	lfsr	2,6
  9721  004E42  5012               	movf	LCD_InSlider@slider^0,w,c
  9722  004E44  26D9               	addwf	fsr2l,f,c
  9723  004E46  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9724  004E48  22DA               	addwfc	fsr2h,f,c
  9725  004E4A  CFDE F018          	movff	postinc2,??_LCD_InSlider
  9726  004E4E  CFDD F019          	movff	postdec2,??_LCD_InSlider+1
  9727  004E52  EE20 F002          	lfsr	2,2
  9728  004E56  5012               	movf	LCD_InSlider@slider^0,w,c
  9729  004E58  26D9               	addwf	fsr2l,f,c
  9730  004E5A  5013               	movf	(LCD_InSlider@slider+1)^0,w,c
  9731  004E5C  22DA               	addwfc	fsr2h,f,c
  9732  004E5E  CFDE F01A          	movff	postinc2,??_LCD_InSlider+2
  9733  004E62  CFDD F01B          	movff	postdec2,??_LCD_InSlider+3
  9734  004E66  5018               	movf	??_LCD_InSlider^0,w,c
  9735  004E68  261A               	addwf	(??_LCD_InSlider+2)^0,f,c
  9736  004E6A  5019               	movf	(??_LCD_InSlider+1)^0,w,c
  9737  004E6C  221B               	addwfc	(??_LCD_InSlider+3)^0,f,c
  9738  004E6E  5016               	movf	LCD_InSlider@posY^0,w,c
  9739  004E70  5C1A               	subwf	(??_LCD_InSlider+2)^0,w,c
  9740  004E72  5017               	movf	(LCD_InSlider@posY+1)^0,w,c
  9741  004E74  581B               	subwfb	(??_LCD_InSlider+3)^0,w,c
  9742  004E76  B0D8               	btfsc	status,0,c
  9743  004E78  EF40  F027         	goto	u6931
  9744  004E7C  EF42  F027         	goto	u6930
  9745  004E80                     u6931:
  9746  004E80  EF44  F027         	goto	l9757
  9747  004E84                     u6930:
  9748  004E84  EFE6  F026         	goto	l9735
  9749  004E88                     l9757:
  9750                           
  9751                           ;libraries/lcd_highlevel.c: 568:   return 1;
  9752  004E88  0E01               	movlw	1
  9753  004E8A                     l271:
  9754  004E8A  0012               	return		;funcret
  9755  004E8C                     __end_of_LCD_InSlider:
  9756                           	callstack 0
  9757                           
  9758 ;; *************** function _GameParameters_init *****************
  9759 ;; Defined at:
  9760 ;;		line 3 in file "class/gameParameters.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;  s               2   42[COMRAM] PTR struct GameParameter
  9763 ;;		 -> g1(239), 
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9775 ;;      Params:         2       0       0       0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0       0       0
  9777 ;;      Temps:          0       0       0       0       0       0       0
  9778 ;;      Totals:         2       0       0       0       0       0       0
  9779 ;;Total ram usage:        2 bytes
  9780 ;; Hardware stack levels used: 1
  9781 ;; Hardware stack levels required when called: 5
  9782 ;; This function calls:
  9783 ;;		_Ball_init
  9784 ;;		_LCD_ButtonCreate
  9785 ;;		_LCD_SliderCreate
  9786 ;;		_Paddle_init
  9787 ;;		_Score_init
  9788 ;; This function is called by:
  9789 ;;		_Factory_init
  9790 ;;		_gameControllerController
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text35
  9795  002260                     __ptext35:
  9796                           	callstack 0
  9797  002260                     _GameParameters_init:
  9798                           	callstack 21
  9799  002260                     
  9800                           ;class/gameParameters.c: 3: void GameParameters_init(struct GameParameters* s);class/gam
      +                          eParameters.c: 4: {;class/gameParameters.c: 5:     s->backlight = 11;
  9801  002260  C02B  FFD9         	movff	GameParameters_init@s,fsr2l
  9802  002264  C02C  FFDA         	movff	GameParameters_init@s+1,fsr2h
  9803  002268  0E0B               	movlw	11
  9804  00226A  6EDE               	movwf	postinc2,c
  9805  00226C  0E00               	movlw	0
  9806  00226E  6EDD               	movwf	postdec2,c
  9807  002270                     
  9808                           ;class/gameParameters.c: 6:     CCPR2L = 255;
  9809  002270  6867               	setf	103,c	;volatile
  9810  002272                     
  9811                           ;class/gameParameters.c: 7:     s->player = 0;
  9812  002272  EE20 F002          	lfsr	2,2
  9813  002276  502B               	movf	GameParameters_init@s^0,w,c
  9814  002278  26D9               	addwf	fsr2l,f,c
  9815  00227A  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9816  00227C  22DA               	addwfc	fsr2h,f,c
  9817  00227E  0E00               	movlw	0
  9818  002280  6EDE               	movwf	postinc2,c
  9819  002282  0E00               	movlw	0
  9820  002284  6EDD               	movwf	postdec2,c
  9821  002286                     
  9822                           ;class/gameParameters.c: 8:     s->x=0;
  9823  002286  EE20 F004          	lfsr	2,4
  9824  00228A  502B               	movf	GameParameters_init@s^0,w,c
  9825  00228C  26D9               	addwf	fsr2l,f,c
  9826  00228E  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9827  002290  22DA               	addwfc	fsr2h,f,c
  9828  002292  0E00               	movlw	0
  9829  002294  6EDE               	movwf	postinc2,c
  9830  002296  0E00               	movlw	0
  9831  002298  6EDD               	movwf	postdec2,c
  9832  00229A                     
  9833                           ;class/gameParameters.c: 9:     s->y=0;
  9834  00229A  EE20 F006          	lfsr	2,6
  9835  00229E  502B               	movf	GameParameters_init@s^0,w,c
  9836  0022A0  26D9               	addwf	fsr2l,f,c
  9837  0022A2  502C               	movf	(GameParameters_init@s+1)^0,w,c
  9838  0022A4  22DA               	addwfc	fsr2h,f,c
  9839  0022A6  0E00               	movlw	0
  9840  0022A8  6EDE               	movwf	postinc2,c
  9841  0022AA  0E00               	movlw	0
  9842  0022AC  6EDD               	movwf	postdec2,c
  9843  0022AE                     
  9844                           ;class/gameParameters.c: 10:     Score_init(&s->s1);
  9845  0022AE  0EE9               	movlw	233
  9846  0022B0  242B               	addwf	GameParameters_init@s^0,w,c
  9847  0022B2  6E12               	movwf	Score_init@s^0,c
  9848  0022B4  0E00               	movlw	0
  9849  0022B6  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9850  0022B8  6E13               	movwf	(Score_init@s+1)^0,c
  9851  0022BA  EC7D  F031         	call	_Score_init	;wreg free
  9852  0022BE                     
  9853                           ;class/gameParameters.c: 11:     Ball_init(&(s->b));
  9854  0022BE  0EC9               	movlw	201
  9855  0022C0  242B               	addwf	GameParameters_init@s^0,w,c
  9856  0022C2  6E12               	movwf	Ball_init@b^0,c
  9857  0022C4  0E00               	movlw	0
  9858  0022C6  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9859  0022C8  6E13               	movwf	(Ball_init@b+1)^0,c
  9860  0022CA  ECDC  F02D         	call	_Ball_init	;wreg free
  9861  0022CE                     
  9862                           ;class/gameParameters.c: 12:     Paddle_init(&(s->p1),0);
  9863  0022CE  0ED5               	movlw	213
  9864  0022D0  242B               	addwf	GameParameters_init@s^0,w,c
  9865  0022D2  6E12               	movwf	Paddle_init@p^0,c
  9866  0022D4  0E00               	movlw	0
  9867  0022D6  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9868  0022D8  6E13               	movwf	(Paddle_init@p+1)^0,c
  9869  0022DA  0E00               	movlw	0
  9870  0022DC  6E15               	movwf	(Paddle_init@team+1)^0,c
  9871  0022DE  0E00               	movlw	0
  9872  0022E0  6E14               	movwf	Paddle_init@team^0,c
  9873  0022E2  EC22  F02B         	call	_Paddle_init	;wreg free
  9874  0022E6                     
  9875                           ;class/gameParameters.c: 13:     Paddle_init(&(s->p2),1);
  9876  0022E6  0EDF               	movlw	223
  9877  0022E8  242B               	addwf	GameParameters_init@s^0,w,c
  9878  0022EA  6E12               	movwf	Paddle_init@p^0,c
  9879  0022EC  0E00               	movlw	0
  9880  0022EE  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9881  0022F0  6E13               	movwf	(Paddle_init@p+1)^0,c
  9882  0022F2  0E00               	movlw	0
  9883  0022F4  6E15               	movwf	(Paddle_init@team+1)^0,c
  9884  0022F6  0E01               	movlw	1
  9885  0022F8  6E14               	movwf	Paddle_init@team^0,c
  9886  0022FA  EC22  F02B         	call	_Paddle_init	;wreg free
  9887  0022FE                     
  9888                           ;class/gameParameters.c: 14:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"Parametres",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s
      +                          ->btnParam),1);
  9889  0022FE  0E00               	movlw	0
  9890  002300  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  9891  002302  0E82               	movlw	130
  9892  002304  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  9893  002306  0E00               	movlw	0
  9894  002308  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  9895  00230A  0E32               	movlw	50
  9896  00230C  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  9897  00230E  0E00               	movlw	0
  9898  002310  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  9899  002312  0E5A               	movlw	90
  9900  002314  6E16               	movwf	LCD_ButtonCreate@width^0,c
  9901  002316  0E00               	movlw	0
  9902  002318  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  9903  00231A  0E14               	movlw	20
  9904  00231C  6E18               	movwf	LCD_ButtonCreate@height^0,c
  9905  00231E  0EFF               	movlw	255
  9906  002320  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  9907  002322  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  9908  002324  0E00               	movlw	0
  9909  002326  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  9910  002328  0E00               	movlw	0
  9911  00232A  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  9912  00232C  0EAB               	movlw	low STR_4
  9913  00232E  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  9914  002330  0E7F               	movlw	high STR_4
  9915  002332  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  9916  002334  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  9917  002336  6E20               	movwf	LCD_ButtonCreate@font^0,c
  9918  002338  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  9919  00233A  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  9920  00233C  0E00               	movlw	0
  9921  00233E  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  9922  002340  0E00               	movlw	0
  9923  002342  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  9924  002344  0E00               	movlw	0
  9925  002346  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  9926  002348  0E00               	movlw	0
  9927  00234A  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  9928  00234C  0E00               	movlw	0
  9929  00234E  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  9930  002350  0E00               	movlw	0
  9931  002352  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  9932  002354  0E08               	movlw	8
  9933  002356  242B               	addwf	GameParameters_init@s^0,w,c
  9934  002358  6E28               	movwf	LCD_ButtonCreate@button^0,c
  9935  00235A  0E00               	movlw	0
  9936  00235C  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9937  00235E  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  9938  002360  0E01               	movlw	1
  9939  002362  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  9940  002364  ECFA  F024         	call	_LCD_ButtonCreate	;wreg free
  9941  002368                     
  9942                           ;class/gameParameters.c: 15:     LCD_ButtonCreate(10,250,70,20,0b1111111111111111,0b0000
      +                          000000000000,"1 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->
      +                          btnOnePlayer),2);
  9943  002368  0E00               	movlw	0
  9944  00236A  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  9945  00236C  0E0A               	movlw	10
  9946  00236E  6E12               	movwf	LCD_ButtonCreate@posX^0,c
  9947  002370  0E00               	movlw	0
  9948  002372  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
  9949  002374  0EFA               	movlw	250
  9950  002376  6E14               	movwf	LCD_ButtonCreate@posY^0,c
  9951  002378  0E00               	movlw	0
  9952  00237A  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
  9953  00237C  0E46               	movlw	70
  9954  00237E  6E16               	movwf	LCD_ButtonCreate@width^0,c
  9955  002380  0E00               	movlw	0
  9956  002382  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
  9957  002384  0E14               	movlw	20
  9958  002386  6E18               	movwf	LCD_ButtonCreate@height^0,c
  9959  002388  0EFF               	movlw	255
  9960  00238A  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
  9961  00238C  681A               	setf	LCD_ButtonCreate@txtColor^0,c
  9962  00238E  0E00               	movlw	0
  9963  002390  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
  9964  002392  0E00               	movlw	0
  9965  002394  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
  9966  002396  0EC9               	movlw	low STR_5
  9967  002398  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
  9968  00239A  0E7F               	movlw	high STR_5
  9969  00239C  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
  9970  00239E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
  9971  0023A0  6E20               	movwf	LCD_ButtonCreate@font^0,c
  9972  0023A2  0E7F               	movlw	high _arialNarrow_12ptFontInfo
  9973  0023A4  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
  9974  0023A6  0E00               	movlw	0
  9975  0023A8  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
  9976  0023AA  0E00               	movlw	0
  9977  0023AC  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
  9978  0023AE  0E00               	movlw	0
  9979  0023B0  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
  9980  0023B2  0E00               	movlw	0
  9981  0023B4  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
  9982  0023B6  0E00               	movlw	0
  9983  0023B8  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
  9984  0023BA  0E00               	movlw	0
  9985  0023BC  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
  9986  0023BE  0E20               	movlw	32
  9987  0023C0  242B               	addwf	GameParameters_init@s^0,w,c
  9988  0023C2  6E28               	movwf	LCD_ButtonCreate@button^0,c
  9989  0023C4  0E00               	movlw	0
  9990  0023C6  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
  9991  0023C8  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
  9992  0023CA  0E02               	movlw	2
  9993  0023CC  6E2A               	movwf	LCD_ButtonCreate@index^0,c
  9994  0023CE  ECFA  F024         	call	_LCD_ButtonCreate	;wreg free
  9995  0023D2                     
  9996                           ;class/gameParameters.c: 16:     LCD_ButtonCreate(150,250,70,20,0b1111111111111111,0b000
      +                          0000000000000,"2 Player",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnTwoPlayer),3);
  9997  0023D2  0E00               	movlw	0
  9998  0023D4  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
  9999  0023D6  0E96               	movlw	150
 10000  0023D8  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10001  0023DA  0E00               	movlw	0
 10002  0023DC  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10003  0023DE  0EFA               	movlw	250
 10004  0023E0  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10005  0023E2  0E00               	movlw	0
 10006  0023E4  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10007  0023E6  0E46               	movlw	70
 10008  0023E8  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10009  0023EA  0E00               	movlw	0
 10010  0023EC  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10011  0023EE  0E14               	movlw	20
 10012  0023F0  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10013  0023F2  0EFF               	movlw	255
 10014  0023F4  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10015  0023F6  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10016  0023F8  0E00               	movlw	0
 10017  0023FA  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10018  0023FC  0E00               	movlw	0
 10019  0023FE  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10020  002400  0ED2               	movlw	low STR_6
 10021  002402  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10022  002404  0E7F               	movlw	high STR_6
 10023  002406  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10024  002408  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10025  00240A  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10026  00240C  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10027  00240E  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10028  002410  0E00               	movlw	0
 10029  002412  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10030  002414  0E00               	movlw	0
 10031  002416  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10032  002418  0E00               	movlw	0
 10033  00241A  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10034  00241C  0E00               	movlw	0
 10035  00241E  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10036  002420  0E00               	movlw	0
 10037  002422  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10038  002424  0E00               	movlw	0
 10039  002426  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10040  002428  0E38               	movlw	56
 10041  00242A  242B               	addwf	GameParameters_init@s^0,w,c
 10042  00242C  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10043  00242E  0E00               	movlw	0
 10044  002430  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10045  002432  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10046  002434  0E03               	movlw	3
 10047  002436  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10048  002438  ECFA  F024         	call	_LCD_ButtonCreate	;wreg free
 10049  00243C                     
 10050                           ;class/gameParameters.c: 17:     LCD_ButtonCreate(130,50,90,20,0b1111111111111111,0b0000
      +                          000000000000,"QUITTER",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->b
      +                          tnLeaveParam),4);
 10051  00243C  0E00               	movlw	0
 10052  00243E  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10053  002440  0E82               	movlw	130
 10054  002442  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10055  002444  0E00               	movlw	0
 10056  002446  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10057  002448  0E32               	movlw	50
 10058  00244A  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10059  00244C  0E00               	movlw	0
 10060  00244E  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10061  002450  0E5A               	movlw	90
 10062  002452  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10063  002454  0E00               	movlw	0
 10064  002456  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10065  002458  0E14               	movlw	20
 10066  00245A  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10067  00245C  0EFF               	movlw	255
 10068  00245E  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10069  002460  681A               	setf	LCD_ButtonCreate@txtColor^0,c
 10070  002462  0E00               	movlw	0
 10071  002464  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10072  002466  0E00               	movlw	0
 10073  002468  6E1C               	movwf	LCD_ButtonCreate@bgColor^0,c
 10074  00246A  0EE3               	movlw	low STR_7
 10075  00246C  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10076  00246E  0E7F               	movlw	high STR_7
 10077  002470  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10078  002472  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10079  002474  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10080  002476  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10081  002478  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10082  00247A  0E00               	movlw	0
 10083  00247C  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10084  00247E  0E00               	movlw	0
 10085  002480  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10086  002482  0E00               	movlw	0
 10087  002484  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10088  002486  0E00               	movlw	0
 10089  002488  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10090  00248A  0E00               	movlw	0
 10091  00248C  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10092  00248E  0E00               	movlw	0
 10093  002490  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10094  002492  0E50               	movlw	80
 10095  002494  242B               	addwf	GameParameters_init@s^0,w,c
 10096  002496  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10097  002498  0E00               	movlw	0
 10098  00249A  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10099  00249C  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10100  00249E  0E04               	movlw	4
 10101  0024A0  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10102  0024A2  ECFA  F024         	call	_LCD_ButtonCreate	;wreg free
 10103  0024A6                     
 10104                           ;class/gameParameters.c: 18:     LCD_ButtonCreate(10,220,70,50,0b0000000000000000,0b1111
      +                          111111111111,"<--",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnLe
      +                          ft),5);
 10105  0024A6  0E00               	movlw	0
 10106  0024A8  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10107  0024AA  0E0A               	movlw	10
 10108  0024AC  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10109  0024AE  0E00               	movlw	0
 10110  0024B0  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10111  0024B2  0EDC               	movlw	220
 10112  0024B4  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10113  0024B6  0E00               	movlw	0
 10114  0024B8  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10115  0024BA  0E46               	movlw	70
 10116  0024BC  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10117  0024BE  0E00               	movlw	0
 10118  0024C0  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10119  0024C2  0E32               	movlw	50
 10120  0024C4  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10121  0024C6  0E00               	movlw	0
 10122  0024C8  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10123  0024CA  0E00               	movlw	0
 10124  0024CC  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10125  0024CE  0EFF               	movlw	255
 10126  0024D0  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10127  0024D2  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10128  0024D4  0EF7               	movlw	low STR_8
 10129  0024D6  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10130  0024D8  0E7F               	movlw	high STR_8
 10131  0024DA  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10132  0024DC  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10133  0024DE  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10134  0024E0  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10135  0024E2  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10136  0024E4  0E00               	movlw	0
 10137  0024E6  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10138  0024E8  0E00               	movlw	0
 10139  0024EA  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10140  0024EC  0E00               	movlw	0
 10141  0024EE  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10142  0024F0  0E00               	movlw	0
 10143  0024F2  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10144  0024F4  0E00               	movlw	0
 10145  0024F6  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10146  0024F8  0E00               	movlw	0
 10147  0024FA  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10148  0024FC  0E68               	movlw	104
 10149  0024FE  242B               	addwf	GameParameters_init@s^0,w,c
 10150  002500  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10151  002502  0E00               	movlw	0
 10152  002504  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10153  002506  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10154  002508  0E05               	movlw	5
 10155  00250A  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10156  00250C  ECFA  F024         	call	_LCD_ButtonCreate	;wreg free
 10157  002510                     
 10158                           ;class/gameParameters.c: 19:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"-->",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s->btnR
      +                          ight),6);
 10159  002510  0E00               	movlw	0
 10160  002512  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10161  002514  0E96               	movlw	150
 10162  002516  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10163  002518  0E00               	movlw	0
 10164  00251A  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10165  00251C  0EDC               	movlw	220
 10166  00251E  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10167  002520  0E00               	movlw	0
 10168  002522  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10169  002524  0E46               	movlw	70
 10170  002526  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10171  002528  0E00               	movlw	0
 10172  00252A  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10173  00252C  0E32               	movlw	50
 10174  00252E  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10175  002530  0E00               	movlw	0
 10176  002532  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10177  002534  0E00               	movlw	0
 10178  002536  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10179  002538  0EFF               	movlw	255
 10180  00253A  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10181  00253C  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10182  00253E  0EFB               	movlw	low STR_9
 10183  002540  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10184  002542  0E7F               	movlw	high STR_9
 10185  002544  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10186  002546  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10187  002548  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10188  00254A  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10189  00254C  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10190  00254E  0E00               	movlw	0
 10191  002550  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10192  002552  0E00               	movlw	0
 10193  002554  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10194  002556  0E00               	movlw	0
 10195  002558  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10196  00255A  0E00               	movlw	0
 10197  00255C  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10198  00255E  0E00               	movlw	0
 10199  002560  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10200  002562  0E00               	movlw	0
 10201  002564  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10202  002566  0E98               	movlw	152
 10203  002568  242B               	addwf	GameParameters_init@s^0,w,c
 10204  00256A  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10205  00256C  0E00               	movlw	0
 10206  00256E  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10207  002570  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10208  002572  0E06               	movlw	6
 10209  002574  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10210  002576  ECFA  F024         	call	_LCD_ButtonCreate	;wreg free
 10211  00257A                     
 10212                           ;class/gameParameters.c: 20:     LCD_ButtonCreate(150,220,70,50,0b0000000000000000,0b111
      +                          1111111111111,"New Game",&arialNarrow_12ptFontInfo,((void*)0),((void*)0),((void*)0),&(s-
      +                          >btnNewGame),6);
 10213  00257A  0E00               	movlw	0
 10214  00257C  6E13               	movwf	(LCD_ButtonCreate@posX+1)^0,c
 10215  00257E  0E96               	movlw	150
 10216  002580  6E12               	movwf	LCD_ButtonCreate@posX^0,c
 10217  002582  0E00               	movlw	0
 10218  002584  6E15               	movwf	(LCD_ButtonCreate@posY+1)^0,c
 10219  002586  0EDC               	movlw	220
 10220  002588  6E14               	movwf	LCD_ButtonCreate@posY^0,c
 10221  00258A  0E00               	movlw	0
 10222  00258C  6E17               	movwf	(LCD_ButtonCreate@width+1)^0,c
 10223  00258E  0E46               	movlw	70
 10224  002590  6E16               	movwf	LCD_ButtonCreate@width^0,c
 10225  002592  0E00               	movlw	0
 10226  002594  6E19               	movwf	(LCD_ButtonCreate@height+1)^0,c
 10227  002596  0E32               	movlw	50
 10228  002598  6E18               	movwf	LCD_ButtonCreate@height^0,c
 10229  00259A  0E00               	movlw	0
 10230  00259C  6E1B               	movwf	(LCD_ButtonCreate@txtColor+1)^0,c
 10231  00259E  0E00               	movlw	0
 10232  0025A0  6E1A               	movwf	LCD_ButtonCreate@txtColor^0,c
 10233  0025A2  0EFF               	movlw	255
 10234  0025A4  6E1D               	movwf	(LCD_ButtonCreate@bgColor+1)^0,c
 10235  0025A6  681C               	setf	LCD_ButtonCreate@bgColor^0,c
 10236  0025A8  0EC0               	movlw	low STR_10
 10237  0025AA  6E1E               	movwf	LCD_ButtonCreate@textOrBmp^0,c
 10238  0025AC  0E7F               	movlw	high STR_10
 10239  0025AE  6E1F               	movwf	(LCD_ButtonCreate@textOrBmp+1)^0,c
 10240  0025B0  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 10241  0025B2  6E20               	movwf	LCD_ButtonCreate@font^0,c
 10242  0025B4  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 10243  0025B6  6E21               	movwf	(LCD_ButtonCreate@font+1)^0,c
 10244  0025B8  0E00               	movlw	0
 10245  0025BA  6E22               	movwf	LCD_ButtonCreate@fpPress^0,c
 10246  0025BC  0E00               	movlw	0
 10247  0025BE  6E23               	movwf	(LCD_ButtonCreate@fpPress+1)^0,c
 10248  0025C0  0E00               	movlw	0
 10249  0025C2  6E24               	movwf	LCD_ButtonCreate@fpReleased^0,c
 10250  0025C4  0E00               	movlw	0
 10251  0025C6  6E25               	movwf	(LCD_ButtonCreate@fpReleased+1)^0,c
 10252  0025C8  0E00               	movlw	0
 10253  0025CA  6E26               	movwf	LCD_ButtonCreate@fpOut^0,c
 10254  0025CC  0E00               	movlw	0
 10255  0025CE  6E27               	movwf	(LCD_ButtonCreate@fpOut+1)^0,c
 10256  0025D0  0E80               	movlw	128
 10257  0025D2  242B               	addwf	GameParameters_init@s^0,w,c
 10258  0025D4  6E28               	movwf	LCD_ButtonCreate@button^0,c
 10259  0025D6  0E00               	movlw	0
 10260  0025D8  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10261  0025DA  6E29               	movwf	(LCD_ButtonCreate@button+1)^0,c
 10262  0025DC  0E06               	movlw	6
 10263  0025DE  6E2A               	movwf	LCD_ButtonCreate@index^0,c
 10264  0025E0  ECFA  F024         	call	_LCD_ButtonCreate	;wreg free
 10265  0025E4                     
 10266                           ;class/gameParameters.c: 21:     LCD_SliderCreate(50,100,165,20,0b0000000000000000,0b111
      +                          1111111111111,0b1111100000000000,0,11,((void*)0),&(s->sldParam));
 10267  0025E4  0E00               	movlw	0
 10268  0025E6  6E13               	movwf	(LCD_SliderCreate@posX+1)^0,c
 10269  0025E8  0E32               	movlw	50
 10270  0025EA  6E12               	movwf	LCD_SliderCreate@posX^0,c
 10271  0025EC  0E00               	movlw	0
 10272  0025EE  6E15               	movwf	(LCD_SliderCreate@posY+1)^0,c
 10273  0025F0  0E64               	movlw	100
 10274  0025F2  6E14               	movwf	LCD_SliderCreate@posY^0,c
 10275  0025F4  0E00               	movlw	0
 10276  0025F6  6E17               	movwf	(LCD_SliderCreate@width+1)^0,c
 10277  0025F8  0EA5               	movlw	165
 10278  0025FA  6E16               	movwf	LCD_SliderCreate@width^0,c
 10279  0025FC  0E00               	movlw	0
 10280  0025FE  6E19               	movwf	(LCD_SliderCreate@height+1)^0,c
 10281  002600  0E14               	movlw	20
 10282  002602  6E18               	movwf	LCD_SliderCreate@height^0,c
 10283  002604  0E00               	movlw	0
 10284  002606  6E1B               	movwf	(LCD_SliderCreate@sldColor+1)^0,c
 10285  002608  0E00               	movlw	0
 10286  00260A  6E1A               	movwf	LCD_SliderCreate@sldColor^0,c
 10287  00260C  0EFF               	movlw	255
 10288  00260E  6E1D               	movwf	(LCD_SliderCreate@bgColor+1)^0,c
 10289  002610  681C               	setf	LCD_SliderCreate@bgColor^0,c
 10290  002612  0EF8               	movlw	248
 10291  002614  6E1F               	movwf	(LCD_SliderCreate@borderColor+1)^0,c
 10292  002616  0E00               	movlw	0
 10293  002618  6E1E               	movwf	LCD_SliderCreate@borderColor^0,c
 10294  00261A  0E00               	movlw	0
 10295  00261C  6E21               	movwf	(LCD_SliderCreate@cursorWidth+1)^0,c
 10296  00261E  0E00               	movlw	0
 10297  002620  6E20               	movwf	LCD_SliderCreate@cursorWidth^0,c
 10298  002622  0E00               	movlw	0
 10299  002624  6E23               	movwf	(LCD_SliderCreate@steps+1)^0,c
 10300  002626  0E0B               	movlw	11
 10301  002628  6E22               	movwf	LCD_SliderCreate@steps^0,c
 10302  00262A  0E00               	movlw	0
 10303  00262C  6E24               	movwf	LCD_SliderCreate@fpPress^0,c
 10304  00262E  0E00               	movlw	0
 10305  002630  6E25               	movwf	(LCD_SliderCreate@fpPress+1)^0,c
 10306  002632  0EB0               	movlw	176
 10307  002634  242B               	addwf	GameParameters_init@s^0,w,c
 10308  002636  6E26               	movwf	LCD_SliderCreate@slider^0,c
 10309  002638  0E00               	movlw	0
 10310  00263A  202C               	addwfc	(GameParameters_init@s+1)^0,w,c
 10311  00263C  6E27               	movwf	(LCD_SliderCreate@slider+1)^0,c
 10312  00263E  ECF1  F025         	call	_LCD_SliderCreate	;wreg free
 10313  002642  0012               	return		;funcret
 10314  002644                     __end_of_GameParameters_init:
 10315                           	callstack 0
 10316                           
 10317 ;; *************** function _Score_init *****************
 10318 ;; Defined at:
 10319 ;;		line 3 in file "class/score.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  s               2   17[COMRAM] PTR struct Score
 10322 ;;		 -> g1(239), 
 10323 ;; Auto vars:     Size  Location     Type
 10324 ;;		None
 10325 ;; Return value:  Size  Location     Type
 10326 ;;                  1    wreg      void 
 10327 ;; Registers used:
 10328 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/0
 10331 ;;		On exit  : 0/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10334 ;;      Params:         2       0       0       0       0       0       0
 10335 ;;      Locals:         0       0       0       0       0       0       0
 10336 ;;      Temps:          0       0       0       0       0       0       0
 10337 ;;      Totals:         2       0       0       0       0       0       0
 10338 ;;Total ram usage:        2 bytes
 10339 ;; Hardware stack levels used: 1
 10340 ;; Hardware stack levels required when called: 4
 10341 ;; This function calls:
 10342 ;;		Nothing
 10343 ;; This function is called by:
 10344 ;;		_GameParameters_init
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           	psect	text36
 10349  0062FA                     __ptext36:
 10350                           	callstack 0
 10351  0062FA                     _Score_init:
 10352                           	callstack 21
 10353  0062FA                     
 10354                           ;class/score.c: 3: void Score_init(struct Score* s);class/score.c: 4: {;class/score.c: 5
      +                          :     s->homeScore = 0;
 10355  0062FA  C012  FFD9         	movff	Score_init@s,fsr2l
 10356  0062FE  C013  FFDA         	movff	Score_init@s+1,fsr2h
 10357  006302  0E00               	movlw	0
 10358  006304  6EDE               	movwf	postinc2,c
 10359  006306  0E00               	movlw	0
 10360  006308  6EDD               	movwf	postdec2,c
 10361  00630A                     
 10362                           ;class/score.c: 6:     s->awayScore = 0;
 10363  00630A  EE20 F002          	lfsr	2,2
 10364  00630E  5012               	movf	Score_init@s^0,w,c
 10365  006310  26D9               	addwf	fsr2l,f,c
 10366  006312  5013               	movf	(Score_init@s+1)^0,w,c
 10367  006314  22DA               	addwfc	fsr2h,f,c
 10368  006316  0E00               	movlw	0
 10369  006318  6EDE               	movwf	postinc2,c
 10370  00631A  0E00               	movlw	0
 10371  00631C  6EDD               	movwf	postdec2,c
 10372  00631E  0012               	return		;funcret
 10373  006320                     __end_of_Score_init:
 10374                           	callstack 0
 10375                           
 10376 ;; *************** function _Paddle_init *****************
 10377 ;; Defined at:
 10378 ;;		line 6 in file "class/paddle.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;  p               2   17[COMRAM] PTR struct Paddle
 10381 ;;		 -> g1(239), 
 10382 ;;  team            2   19[COMRAM] unsigned short 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;		None
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  1    wreg      void 
 10387 ;; Registers used:
 10388 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10389 ;; Tracked objects:
 10390 ;;		On entry : 0/0
 10391 ;;		On exit  : 0/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10394 ;;      Params:         4       0       0       0       0       0       0
 10395 ;;      Locals:         0       0       0       0       0       0       0
 10396 ;;      Temps:          0       0       0       0       0       0       0
 10397 ;;      Totals:         4       0       0       0       0       0       0
 10398 ;;Total ram usage:        4 bytes
 10399 ;; Hardware stack levels used: 1
 10400 ;; Hardware stack levels required when called: 4
 10401 ;; This function calls:
 10402 ;;		Nothing
 10403 ;; This function is called by:
 10404 ;;		_GameParameters_init
 10405 ;; This function uses a non-reentrant model
 10406 ;;
 10407                           
 10408                           	psect	text37
 10409  005644                     __ptext37:
 10410                           	callstack 0
 10411  005644                     _Paddle_init:
 10412                           	callstack 21
 10413  005644                     
 10414                           ;class/paddle.c: 6: void Paddle_init(struct Paddle* p,uint16_t team);class/paddle.c: 7: 
      +                          {;class/paddle.c: 8:     p->oldx=0;
 10415  005644  EE20 F004          	lfsr	2,4
 10416  005648  5012               	movf	Paddle_init@p^0,w,c
 10417  00564A  26D9               	addwf	fsr2l,f,c
 10418  00564C  5013               	movf	(Paddle_init@p+1)^0,w,c
 10419  00564E  22DA               	addwfc	fsr2h,f,c
 10420  005650  0E00               	movlw	0
 10421  005652  6EDE               	movwf	postinc2,c
 10422  005654  0E00               	movlw	0
 10423  005656  6EDD               	movwf	postdec2,c
 10424                           
 10425                           ;class/paddle.c: 9:     p->oldy=0;
 10426  005658  EE20 F006          	lfsr	2,6
 10427  00565C  5012               	movf	Paddle_init@p^0,w,c
 10428  00565E  26D9               	addwf	fsr2l,f,c
 10429  005660  5013               	movf	(Paddle_init@p+1)^0,w,c
 10430  005662  22DA               	addwfc	fsr2h,f,c
 10431  005664  0E00               	movlw	0
 10432  005666  6EDE               	movwf	postinc2,c
 10433  005668  0E00               	movlw	0
 10434  00566A  6EDD               	movwf	postdec2,c
 10435  00566C                     
 10436                           ;class/paddle.c: 10:     if(team)
 10437  00566C  5014               	movf	Paddle_init@team^0,w,c
 10438  00566E  1015               	iorwf	(Paddle_init@team+1)^0,w,c
 10439  005670  B4D8               	btfsc	status,2,c
 10440  005672  EF3D  F02B         	goto	u6561
 10441  005676  EF3F  F02B         	goto	u6560
 10442  00567A                     u6561:
 10443  00567A  EF5D  F02B         	goto	l9321
 10444  00567E                     u6560:
 10445  00567E                     
 10446                           ;class/paddle.c: 11:     {;class/paddle.c: 12:         p->x = 90;
 10447  00567E  C012  FFD9         	movff	Paddle_init@p,fsr2l
 10448  005682  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
 10449  005686  0E5A               	movlw	90
 10450  005688  6EDE               	movwf	postinc2,c
 10451  00568A  0E00               	movlw	0
 10452  00568C  6EDD               	movwf	postdec2,c
 10453  00568E                     
 10454                           ;class/paddle.c: 13:         p->y = 20;
 10455  00568E  EE20 F002          	lfsr	2,2
 10456  005692  5012               	movf	Paddle_init@p^0,w,c
 10457  005694  26D9               	addwf	fsr2l,f,c
 10458  005696  5013               	movf	(Paddle_init@p+1)^0,w,c
 10459  005698  22DA               	addwfc	fsr2h,f,c
 10460  00569A  0E14               	movlw	20
 10461  00569C  6EDE               	movwf	postinc2,c
 10462  00569E  0E00               	movlw	0
 10463  0056A0  6EDD               	movwf	postdec2,c
 10464  0056A2                     
 10465                           ;class/paddle.c: 14:         p->color = 0b1111111111111111;
 10466  0056A2  EE20 F008          	lfsr	2,8
 10467  0056A6  5012               	movf	Paddle_init@p^0,w,c
 10468  0056A8  26D9               	addwf	fsr2l,f,c
 10469  0056AA  5013               	movf	(Paddle_init@p+1)^0,w,c
 10470  0056AC  22DA               	addwfc	fsr2h,f,c
 10471  0056AE  0EFF               	movlw	255
 10472  0056B0  6EDE               	movwf	postinc2,c
 10473  0056B2  0EFF               	movlw	255
 10474  0056B4  6EDD               	movwf	postdec2,c
 10475                           
 10476                           ;class/paddle.c: 15:     }
 10477  0056B6  EF79  F02B         	goto	l18
 10478  0056BA                     l9321:
 10479                           
 10480                           ;class/paddle.c: 17:     {;class/paddle.c: 18:         p->x = 90;
 10481  0056BA  C012  FFD9         	movff	Paddle_init@p,fsr2l
 10482  0056BE  C013  FFDA         	movff	Paddle_init@p+1,fsr2h
 10483  0056C2  0E5A               	movlw	90
 10484  0056C4  6EDE               	movwf	postinc2,c
 10485  0056C6  0E00               	movlw	0
 10486  0056C8  6EDD               	movwf	postdec2,c
 10487  0056CA                     
 10488                           ;class/paddle.c: 19:         p->y = 280;
 10489  0056CA  EE20 F002          	lfsr	2,2
 10490  0056CE  5012               	movf	Paddle_init@p^0,w,c
 10491  0056D0  26D9               	addwf	fsr2l,f,c
 10492  0056D2  5013               	movf	(Paddle_init@p+1)^0,w,c
 10493  0056D4  22DA               	addwfc	fsr2h,f,c
 10494  0056D6  0E18               	movlw	24
 10495  0056D8  6EDE               	movwf	postinc2,c
 10496  0056DA  0E01               	movlw	1
 10497  0056DC  6EDD               	movwf	postdec2,c
 10498  0056DE                     
 10499                           ;class/paddle.c: 20:         p->color = 0b1111111111111111;
 10500  0056DE  EE20 F008          	lfsr	2,8
 10501  0056E2  5012               	movf	Paddle_init@p^0,w,c
 10502  0056E4  26D9               	addwf	fsr2l,f,c
 10503  0056E6  5013               	movf	(Paddle_init@p+1)^0,w,c
 10504  0056E8  22DA               	addwfc	fsr2h,f,c
 10505  0056EA  0EFF               	movlw	255
 10506  0056EC  6EDE               	movwf	postinc2,c
 10507  0056EE  0EFF               	movlw	255
 10508  0056F0  6EDD               	movwf	postdec2,c
 10509  0056F2                     l18:
 10510  0056F2  0012               	return		;funcret
 10511  0056F4                     __end_of_Paddle_init:
 10512                           	callstack 0
 10513                           
 10514 ;; *************** function _LCD_SliderCreate *****************
 10515 ;; Defined at:
 10516 ;;		line 291 in file "libraries/lcd_highlevel.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;  posX            2   17[COMRAM] unsigned short 
 10519 ;;  posY            2   19[COMRAM] unsigned short 
 10520 ;;  width           2   21[COMRAM] unsigned short 
 10521 ;;  height          2   23[COMRAM] unsigned short 
 10522 ;;  sldColor        2   25[COMRAM] unsigned short 
 10523 ;;  bgColor         2   27[COMRAM] unsigned short 
 10524 ;;  borderColor     2   29[COMRAM] unsigned short 
 10525 ;;  cursorWidth     2   31[COMRAM] unsigned short 
 10526 ;;  steps           2   33[COMRAM] unsigned short 
 10527 ;;  fpPress         2   35[COMRAM] PTR FTN()void 
 10528 ;;		 -> Absolute function(1), 
 10529 ;;  slider          2   37[COMRAM] PTR struct .
 10530 ;;		 -> g1(239), 
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;		None
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  1    wreg      void 
 10535 ;; Registers used:
 10536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10542 ;;      Params:        22       0       0       0       0       0       0
 10543 ;;      Locals:         0       0       0       0       0       0       0
 10544 ;;      Temps:          0       0       0       0       0       0       0
 10545 ;;      Totals:        22       0       0       0       0       0       0
 10546 ;;Total ram usage:       22 bytes
 10547 ;; Hardware stack levels used: 1
 10548 ;; Hardware stack levels required when called: 4
 10549 ;; This function calls:
 10550 ;;		Nothing
 10551 ;; This function is called by:
 10552 ;;		_GameParameters_init
 10553 ;; This function uses a non-reentrant model
 10554 ;;
 10555                           
 10556                           	psect	text38
 10557  004BE2                     __ptext38:
 10558                           	callstack 0
 10559  004BE2                     _LCD_SliderCreate:
 10560                           	callstack 21
 10561  004BE2                     
 10562                           ;libraries/lcd_highlevel.c: 291: void LCD_SliderCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 292:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 293:                       uint16_t sldColor, uint16_t bgColor, u
      +                          int16_t borderColor,;libraries/lcd_highlevel.c: 294:                       uint16_t curs
      +                          orWidth,;libraries/lcd_highlevel.c: 295:                       uint16_t steps,;libraries
      +                          /lcd_highlevel.c: 296:                       void (* fpPress)(),;libraries/lcd_highlevel
      +                          .c: 297:                       sld_t * slider)
 10563  004BE2  C026  FFD9         	movff	LCD_SliderCreate@slider,fsr2l
 10564  004BE6  C027  FFDA         	movff	LCD_SliderCreate@slider+1,fsr2h
 10565  004BEA  C012  FFDE         	movff	LCD_SliderCreate@posX,postinc2
 10566  004BEE  C013  FFDD         	movff	LCD_SliderCreate@posX+1,postdec2
 10567  004BF2                     
 10568                           ;libraries/lcd_highlevel.c: 300:   slider->posY = posY;
 10569  004BF2  EE20 F002          	lfsr	2,2
 10570  004BF6  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10571  004BF8  26D9               	addwf	fsr2l,f,c
 10572  004BFA  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10573  004BFC  22DA               	addwfc	fsr2h,f,c
 10574  004BFE  C014  FFDE         	movff	LCD_SliderCreate@posY,postinc2
 10575  004C02  C015  FFDD         	movff	LCD_SliderCreate@posY+1,postdec2
 10576  004C06                     
 10577                           ;libraries/lcd_highlevel.c: 301:   slider->height = height;
 10578  004C06  EE20 F006          	lfsr	2,6
 10579  004C0A  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10580  004C0C  26D9               	addwf	fsr2l,f,c
 10581  004C0E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10582  004C10  22DA               	addwfc	fsr2h,f,c
 10583  004C12  C018  FFDE         	movff	LCD_SliderCreate@height,postinc2
 10584  004C16  C019  FFDD         	movff	LCD_SliderCreate@height+1,postdec2
 10585  004C1A                     
 10586                           ;libraries/lcd_highlevel.c: 302:   slider->width = width;
 10587  004C1A  EE20 F004          	lfsr	2,4
 10588  004C1E  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10589  004C20  26D9               	addwf	fsr2l,f,c
 10590  004C22  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10591  004C24  22DA               	addwfc	fsr2h,f,c
 10592  004C26  C016  FFDE         	movff	LCD_SliderCreate@width,postinc2
 10593  004C2A  C017  FFDD         	movff	LCD_SliderCreate@width+1,postdec2
 10594  004C2E                     
 10595                           ;libraries/lcd_highlevel.c: 303:   slider->sldColor = sldColor;
 10596  004C2E  EE20 F008          	lfsr	2,8
 10597  004C32  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10598  004C34  26D9               	addwf	fsr2l,f,c
 10599  004C36  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10600  004C38  22DA               	addwfc	fsr2h,f,c
 10601  004C3A  C01A  FFDE         	movff	LCD_SliderCreate@sldColor,postinc2
 10602  004C3E  C01B  FFDD         	movff	LCD_SliderCreate@sldColor+1,postdec2
 10603  004C42                     
 10604                           ;libraries/lcd_highlevel.c: 304:   slider->bgColor = bgColor;
 10605  004C42  EE20 F00A          	lfsr	2,10
 10606  004C46  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10607  004C48  26D9               	addwf	fsr2l,f,c
 10608  004C4A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10609  004C4C  22DA               	addwfc	fsr2h,f,c
 10610  004C4E  C01C  FFDE         	movff	LCD_SliderCreate@bgColor,postinc2
 10611  004C52  C01D  FFDD         	movff	LCD_SliderCreate@bgColor+1,postdec2
 10612  004C56                     
 10613                           ;libraries/lcd_highlevel.c: 305:   slider->borderColor = borderColor;
 10614  004C56  EE20 F00C          	lfsr	2,12
 10615  004C5A  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10616  004C5C  26D9               	addwf	fsr2l,f,c
 10617  004C5E  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10618  004C60  22DA               	addwfc	fsr2h,f,c
 10619  004C62  C01E  FFDE         	movff	LCD_SliderCreate@borderColor,postinc2
 10620  004C66  C01F  FFDD         	movff	LCD_SliderCreate@borderColor+1,postdec2
 10621  004C6A                     
 10622                           ;libraries/lcd_highlevel.c: 306:   slider->cursorWidth = cursorWidth;
 10623  004C6A  EE20 F00E          	lfsr	2,14
 10624  004C6E  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10625  004C70  26D9               	addwf	fsr2l,f,c
 10626  004C72  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10627  004C74  22DA               	addwfc	fsr2h,f,c
 10628  004C76  C020  FFDE         	movff	LCD_SliderCreate@cursorWidth,postinc2
 10629  004C7A  C021  FFDD         	movff	LCD_SliderCreate@cursorWidth+1,postdec2
 10630  004C7E                     
 10631                           ;libraries/lcd_highlevel.c: 307:   slider->fpPress = fpPress;
 10632  004C7E  EE20 F017          	lfsr	2,23
 10633  004C82  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10634  004C84  26D9               	addwf	fsr2l,f,c
 10635  004C86  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10636  004C88  22DA               	addwfc	fsr2h,f,c
 10637  004C8A  C024  FFDE         	movff	LCD_SliderCreate@fpPress,postinc2
 10638  004C8E  C025  FFDD         	movff	LCD_SliderCreate@fpPress+1,postdec2
 10639  004C92                     
 10640                           ;libraries/lcd_highlevel.c: 308:   slider->steps = steps;
 10641  004C92  EE20 F015          	lfsr	2,21
 10642  004C96  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10643  004C98  26D9               	addwf	fsr2l,f,c
 10644  004C9A  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10645  004C9C  22DA               	addwfc	fsr2h,f,c
 10646  004C9E  C022  FFDE         	movff	LCD_SliderCreate@steps,postinc2
 10647  004CA2  C023  FFDD         	movff	LCD_SliderCreate@steps+1,postdec2
 10648  004CA6                     
 10649                           ;libraries/lcd_highlevel.c: 309:   slider->value = 0;
 10650  004CA6  EE20 F011          	lfsr	2,17
 10651  004CAA  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10652  004CAC  26D9               	addwf	fsr2l,f,c
 10653  004CAE  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10654  004CB0  22DA               	addwfc	fsr2h,f,c
 10655  004CB2  0E00               	movlw	0
 10656  004CB4  6EDE               	movwf	postinc2,c
 10657  004CB6  0E00               	movlw	0
 10658  004CB8  6EDD               	movwf	postdec2,c
 10659  004CBA                     
 10660                           ;libraries/lcd_highlevel.c: 310:   slider->oldValue = 0;
 10661  004CBA  EE20 F013          	lfsr	2,19
 10662  004CBE  5026               	movf	LCD_SliderCreate@slider^0,w,c
 10663  004CC0  26D9               	addwf	fsr2l,f,c
 10664  004CC2  5027               	movf	(LCD_SliderCreate@slider+1)^0,w,c
 10665  004CC4  22DA               	addwfc	fsr2h,f,c
 10666  004CC6  0E00               	movlw	0
 10667  004CC8  6EDE               	movwf	postinc2,c
 10668  004CCA  0E00               	movlw	0
 10669  004CCC  6EDD               	movwf	postdec2,c
 10670  004CCE  0012               	return		;funcret
 10671  004CD0                     __end_of_LCD_SliderCreate:
 10672                           	callstack 0
 10673                           
 10674 ;; *************** function _LCD_ButtonCreate *****************
 10675 ;; Defined at:
 10676 ;;		line 396 in file "libraries/lcd_highlevel.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;  posX            2   17[COMRAM] unsigned short 
 10679 ;;  posY            2   19[COMRAM] unsigned short 
 10680 ;;  width           2   21[COMRAM] unsigned short 
 10681 ;;  height          2   23[COMRAM] unsigned short 
 10682 ;;  txtColor        2   25[COMRAM] unsigned short 
 10683 ;;  bgColor         2   27[COMRAM] unsigned short 
 10684 ;;  textOrBmp       2   29[COMRAM] PTR const unsigned char 
 10685 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 10686 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 10687 ;;  font            2   31[COMRAM] PTR struct .
 10688 ;;		 -> arialNarrow_12ptFontInfo(7), 
 10689 ;;  fpPress         2   33[COMRAM] PTR FTN(unsigned char ,)
 10690 ;;		 -> Absolute function(1), 
 10691 ;;  fpReleased      2   35[COMRAM] PTR FTN(unsigned char ,)
 10692 ;;		 -> Absolute function(1), 
 10693 ;;  fpOut           2   37[COMRAM] PTR FTN(unsigned char ,)
 10694 ;;		 -> Absolute function(1), 
 10695 ;;  button          2   39[COMRAM] PTR struct .
 10696 ;;		 -> g1(239), 
 10697 ;;  index           1   41[COMRAM] unsigned char 
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;		None
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  1    wreg      void 
 10702 ;; Registers used:
 10703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10709 ;;      Params:        25       0       0       0       0       0       0
 10710 ;;      Locals:         0       0       0       0       0       0       0
 10711 ;;      Temps:          0       0       0       0       0       0       0
 10712 ;;      Totals:        25       0       0       0       0       0       0
 10713 ;;Total ram usage:       25 bytes
 10714 ;; Hardware stack levels used: 1
 10715 ;; Hardware stack levels required when called: 4
 10716 ;; This function calls:
 10717 ;;		Nothing
 10718 ;; This function is called by:
 10719 ;;		_GameParameters_init
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723                           	psect	text39
 10724  0049F4                     __ptext39:
 10725                           	callstack 0
 10726  0049F4                     _LCD_ButtonCreate:
 10727                           	callstack 21
 10728  0049F4                     
 10729                           ;libraries/lcd_highlevel.c: 396: void LCD_ButtonCreate(uint16_t posX, uint16_t posY,;lib
      +                          raries/lcd_highlevel.c: 397:                       uint16_t width, uint16_t height,;libr
      +                          aries/lcd_highlevel.c: 398:                       uint16_t txtColor, uint16_t bgColor,;l
      +                          ibraries/lcd_highlevel.c: 399:                       const uint8_t * textOrBmp, FONT_INF
      +                          O * font,;libraries/lcd_highlevel.c: 400:                       void (*fpPress)(uint8_t)
      +                          , void (* fpReleased)(uint8_t), void (* fpOut)(uint8_t),;libraries/lcd_highlevel.c: 401:
      +                                                 btn_t * button,
 10730  0049F4  C028  FFD9         	movff	LCD_ButtonCreate@button,fsr2l
 10731  0049F8  C029  FFDA         	movff	LCD_ButtonCreate@button+1,fsr2h
 10732  0049FC  C012  FFDE         	movff	LCD_ButtonCreate@posX,postinc2
 10733  004A00  C013  FFDD         	movff	LCD_ButtonCreate@posX+1,postdec2
 10734  004A04                     
 10735                           ;libraries/lcd_highlevel.c: 405:   button->posY = posY;
 10736  004A04  EE20 F002          	lfsr	2,2
 10737  004A08  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10738  004A0A  26D9               	addwf	fsr2l,f,c
 10739  004A0C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10740  004A0E  22DA               	addwfc	fsr2h,f,c
 10741  004A10  C014  FFDE         	movff	LCD_ButtonCreate@posY,postinc2
 10742  004A14  C015  FFDD         	movff	LCD_ButtonCreate@posY+1,postdec2
 10743  004A18                     
 10744                           ;libraries/lcd_highlevel.c: 406:   button->height = height;
 10745  004A18  EE20 F006          	lfsr	2,6
 10746  004A1C  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10747  004A1E  26D9               	addwf	fsr2l,f,c
 10748  004A20  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10749  004A22  22DA               	addwfc	fsr2h,f,c
 10750  004A24  C018  FFDE         	movff	LCD_ButtonCreate@height,postinc2
 10751  004A28  C019  FFDD         	movff	LCD_ButtonCreate@height+1,postdec2
 10752  004A2C                     
 10753                           ;libraries/lcd_highlevel.c: 407:   button->width = width;
 10754  004A2C  EE20 F004          	lfsr	2,4
 10755  004A30  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10756  004A32  26D9               	addwf	fsr2l,f,c
 10757  004A34  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10758  004A36  22DA               	addwfc	fsr2h,f,c
 10759  004A38  C016  FFDE         	movff	LCD_ButtonCreate@width,postinc2
 10760  004A3C  C017  FFDD         	movff	LCD_ButtonCreate@width+1,postdec2
 10761  004A40                     
 10762                           ;libraries/lcd_highlevel.c: 408:   button->txtColor = txtColor;
 10763  004A40  EE20 F008          	lfsr	2,8
 10764  004A44  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10765  004A46  26D9               	addwf	fsr2l,f,c
 10766  004A48  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10767  004A4A  22DA               	addwfc	fsr2h,f,c
 10768  004A4C  C01A  FFDE         	movff	LCD_ButtonCreate@txtColor,postinc2
 10769  004A50  C01B  FFDD         	movff	LCD_ButtonCreate@txtColor+1,postdec2
 10770  004A54                     
 10771                           ;libraries/lcd_highlevel.c: 409:   button->bgColor = bgColor;
 10772  004A54  EE20 F00A          	lfsr	2,10
 10773  004A58  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10774  004A5A  26D9               	addwf	fsr2l,f,c
 10775  004A5C  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10776  004A5E  22DA               	addwfc	fsr2h,f,c
 10777  004A60  C01C  FFDE         	movff	LCD_ButtonCreate@bgColor,postinc2
 10778  004A64  C01D  FFDD         	movff	LCD_ButtonCreate@bgColor+1,postdec2
 10779  004A68                     
 10780                           ;libraries/lcd_highlevel.c: 410:   button->text = textOrBmp;
 10781  004A68  EE20 F00C          	lfsr	2,12
 10782  004A6C  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10783  004A6E  26D9               	addwf	fsr2l,f,c
 10784  004A70  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10785  004A72  22DA               	addwfc	fsr2h,f,c
 10786  004A74  C01E  FFDE         	movff	LCD_ButtonCreate@textOrBmp,postinc2
 10787  004A78  C01F  FFDD         	movff	LCD_ButtonCreate@textOrBmp+1,postdec2
 10788  004A7C                     
 10789                           ;libraries/lcd_highlevel.c: 411:   button->font = font;
 10790  004A7C  EE20 F00E          	lfsr	2,14
 10791  004A80  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10792  004A82  26D9               	addwf	fsr2l,f,c
 10793  004A84  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10794  004A86  22DA               	addwfc	fsr2h,f,c
 10795  004A88  C020  FFDE         	movff	LCD_ButtonCreate@font,postinc2
 10796  004A8C  C021  FFDD         	movff	LCD_ButtonCreate@font+1,postdec2
 10797  004A90                     
 10798                           ;libraries/lcd_highlevel.c: 412:   button->fpPress = fpPress;
 10799  004A90  EE20 F011          	lfsr	2,17
 10800  004A94  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10801  004A96  26D9               	addwf	fsr2l,f,c
 10802  004A98  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10803  004A9A  22DA               	addwfc	fsr2h,f,c
 10804  004A9C  C022  FFDE         	movff	LCD_ButtonCreate@fpPress,postinc2
 10805  004AA0  C023  FFDD         	movff	LCD_ButtonCreate@fpPress+1,postdec2
 10806  004AA4                     
 10807                           ;libraries/lcd_highlevel.c: 413:   button->fpReleased = fpReleased;
 10808  004AA4  EE20 F013          	lfsr	2,19
 10809  004AA8  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10810  004AAA  26D9               	addwf	fsr2l,f,c
 10811  004AAC  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10812  004AAE  22DA               	addwfc	fsr2h,f,c
 10813  004AB0  C024  FFDE         	movff	LCD_ButtonCreate@fpReleased,postinc2
 10814  004AB4  C025  FFDD         	movff	LCD_ButtonCreate@fpReleased+1,postdec2
 10815  004AB8                     
 10816                           ;libraries/lcd_highlevel.c: 414:   button->fpOut = fpOut;
 10817  004AB8  EE20 F015          	lfsr	2,21
 10818  004ABC  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10819  004ABE  26D9               	addwf	fsr2l,f,c
 10820  004AC0  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10821  004AC2  22DA               	addwfc	fsr2h,f,c
 10822  004AC4  C026  FFDE         	movff	LCD_ButtonCreate@fpOut,postinc2
 10823  004AC8  C027  FFDD         	movff	LCD_ButtonCreate@fpOut+1,postdec2
 10824  004ACC                     
 10825                           ;libraries/lcd_highlevel.c: 415:   button->index = index;
 10826  004ACC  EE20 F017          	lfsr	2,23
 10827  004AD0  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10828  004AD2  26D9               	addwf	fsr2l,f,c
 10829  004AD4  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10830  004AD6  22DA               	addwfc	fsr2h,f,c
 10831  004AD8  C02A  FFDF         	movff	LCD_ButtonCreate@index,indf2
 10832  004ADC                     
 10833                           ;libraries/lcd_highlevel.c: 416:   button->pressed = 0;
 10834  004ADC  EE20 F010          	lfsr	2,16
 10835  004AE0  5028               	movf	LCD_ButtonCreate@button^0,w,c
 10836  004AE2  26D9               	addwf	fsr2l,f,c
 10837  004AE4  5029               	movf	(LCD_ButtonCreate@button+1)^0,w,c
 10838  004AE6  22DA               	addwfc	fsr2h,f,c
 10839  004AE8  0E00               	movlw	0
 10840  004AEA  6EDF               	movwf	indf2,c
 10841  004AEC  0012               	return		;funcret
 10842  004AEE                     __end_of_LCD_ButtonCreate:
 10843                           	callstack 0
 10844                           
 10845 ;; *************** function _Ball_init *****************
 10846 ;; Defined at:
 10847 ;;		line 3 in file "class/ball.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;  b               2   17[COMRAM] PTR struct Ball
 10850 ;;		 -> g1(239), 
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      void 
 10855 ;; Registers used:
 10856 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10862 ;;      Params:         2       0       0       0       0       0       0
 10863 ;;      Locals:         0       0       0       0       0       0       0
 10864 ;;      Temps:          0       0       0       0       0       0       0
 10865 ;;      Totals:         2       0       0       0       0       0       0
 10866 ;;Total ram usage:        2 bytes
 10867 ;; Hardware stack levels used: 1
 10868 ;; Hardware stack levels required when called: 4
 10869 ;; This function calls:
 10870 ;;		Nothing
 10871 ;; This function is called by:
 10872 ;;		_GameParameters_init
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text40
 10877  005BB8                     __ptext40:
 10878                           	callstack 0
 10879  005BB8                     _Ball_init:
 10880                           	callstack 21
 10881  005BB8                     
 10882                           ;class/ball.c: 3: void Ball_init(struct Ball* b);class/ball.c: 4: {;class/ball.c: 5:    
      +                           b->x = 90;
 10883  005BB8  C012  FFD9         	movff	Ball_init@b,fsr2l
 10884  005BBC  C013  FFDA         	movff	Ball_init@b+1,fsr2h
 10885  005BC0  0E5A               	movlw	90
 10886  005BC2  6EDE               	movwf	postinc2,c
 10887  005BC4  0E00               	movlw	0
 10888  005BC6  6EDD               	movwf	postdec2,c
 10889  005BC8                     
 10890                           ;class/ball.c: 6:     b->y = 150;
 10891  005BC8  EE20 F002          	lfsr	2,2
 10892  005BCC  5012               	movf	Ball_init@b^0,w,c
 10893  005BCE  26D9               	addwf	fsr2l,f,c
 10894  005BD0  5013               	movf	(Ball_init@b+1)^0,w,c
 10895  005BD2  22DA               	addwfc	fsr2h,f,c
 10896  005BD4  0E96               	movlw	150
 10897  005BD6  6EDE               	movwf	postinc2,c
 10898  005BD8  0E00               	movlw	0
 10899  005BDA  6EDD               	movwf	postdec2,c
 10900  005BDC                     
 10901                           ;class/ball.c: 7:     b->oldx=20;
 10902  005BDC  EE20 F004          	lfsr	2,4
 10903  005BE0  5012               	movf	Ball_init@b^0,w,c
 10904  005BE2  26D9               	addwf	fsr2l,f,c
 10905  005BE4  5013               	movf	(Ball_init@b+1)^0,w,c
 10906  005BE6  22DA               	addwfc	fsr2h,f,c
 10907  005BE8  0E14               	movlw	20
 10908  005BEA  6EDE               	movwf	postinc2,c
 10909  005BEC  0E00               	movlw	0
 10910  005BEE  6EDD               	movwf	postdec2,c
 10911  005BF0                     
 10912                           ;class/ball.c: 8:     b->oldy=20;
 10913  005BF0  EE20 F006          	lfsr	2,6
 10914  005BF4  5012               	movf	Ball_init@b^0,w,c
 10915  005BF6  26D9               	addwf	fsr2l,f,c
 10916  005BF8  5013               	movf	(Ball_init@b+1)^0,w,c
 10917  005BFA  22DA               	addwfc	fsr2h,f,c
 10918  005BFC  0E14               	movlw	20
 10919  005BFE  6EDE               	movwf	postinc2,c
 10920  005C00  0E00               	movlw	0
 10921  005C02  6EDD               	movwf	postdec2,c
 10922  005C04                     
 10923                           ;class/ball.c: 9:     b->dx = 0;
 10924  005C04  EE20 F008          	lfsr	2,8
 10925  005C08  5012               	movf	Ball_init@b^0,w,c
 10926  005C0A  26D9               	addwf	fsr2l,f,c
 10927  005C0C  5013               	movf	(Ball_init@b+1)^0,w,c
 10928  005C0E  22DA               	addwfc	fsr2h,f,c
 10929  005C10  0E00               	movlw	0
 10930  005C12  6EDE               	movwf	postinc2,c
 10931  005C14  0E00               	movlw	0
 10932  005C16  6EDD               	movwf	postdec2,c
 10933  005C18                     
 10934                           ;class/ball.c: 10:     b->dy = 1;
 10935  005C18  EE20 F00A          	lfsr	2,10
 10936  005C1C  5012               	movf	Ball_init@b^0,w,c
 10937  005C1E  26D9               	addwf	fsr2l,f,c
 10938  005C20  5013               	movf	(Ball_init@b+1)^0,w,c
 10939  005C22  22DA               	addwfc	fsr2h,f,c
 10940  005C24  0E01               	movlw	1
 10941  005C26  6EDE               	movwf	postinc2,c
 10942  005C28  0E00               	movlw	0
 10943  005C2A  6EDD               	movwf	postdec2,c
 10944  005C2C  0012               	return		;funcret
 10945  005C2E                     __end_of_Ball_init:
 10946                           	callstack 0
 10947                           
 10948 ;; *************** function _displaySM *****************
 10949 ;; Defined at:
 10950 ;;		line 26 in file "stateMachine/display.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;  ev              1    wreg     unsigned char 
 10953 ;;  g               2   67[BANK0 ] PTR struct GameParameter
 10954 ;;		 -> g1(239), 
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;  ev              1   71[BANK0 ] unsigned char 
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  1    wreg      void 
 10959 ;; Registers used:
 10960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10966 ;;      Params:         0       2       0       0       0       0       0
 10967 ;;      Locals:         0       1       0       0       0       0       0
 10968 ;;      Temps:          0       2       0       0       0       0       0
 10969 ;;      Totals:         0       5       0       0       0       0       0
 10970 ;;Total ram usage:        5 bytes
 10971 ;; Hardware stack levels used: 1
 10972 ;; Hardware stack levels required when called: 14
 10973 ;; This function calls:
 10974 ;;		_Menu_inGameDraw
 10975 ;;		_displayController
 10976 ;; This function is called by:
 10977 ;;		_Factory_exec
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text41
 10982  0048F4                     __ptext41:
 10983                           	callstack 0
 10984  0048F4                     _displaySM:
 10985                           	callstack 15
 10986                           
 10987                           ;incstack = 0
 10988                           ;displaySM@ev stored from wreg
 10989  0048F4  0100               	movlb	0	; () banked
 10990  0048F6  6FA7               	movwf	displaySM@ev& (0+255),b
 10991  0048F8                     
 10992                           ;stateMachine/display.c: 26: void displaySM(Event ev, GameParameters* g);stateMachine/di
      +                          splay.c: 27: {;stateMachine/display.c: 28:    switch(displayState)
 10993  0048F8  EFDB  F024         	goto	l10399
 10994  0048FC                     l10361:
 10995                           
 10996                           ; BSR set to: 0
 10997                           ;stateMachine/display.c: 31:             if((ev==evOnePlayer)||(ev==evTwoPlayer))
 10998  0048FC  0E05               	movlw	5
 10999  0048FE  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11000  004900  B4D8               	btfsc	status,2,c
 11001  004902  EF85  F024         	goto	u7881
 11002  004906  EF87  F024         	goto	u7880
 11003  00490A                     u7881:
 11004  00490A  EF90  F024         	goto	l10365
 11005  00490E                     u7880:
 11006  00490E                     
 11007                           ; BSR set to: 0
 11008  00490E  0E06               	movlw	6
 11009  004910  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11010  004912  A4D8               	btfss	status,2,c
 11011  004914  EF8E  F024         	goto	u7891
 11012  004918  EF90  F024         	goto	u7890
 11013  00491C                     u7891:
 11014  00491C  EFA0  F024         	goto	l10371
 11015  004920                     u7890:
 11016  004920                     l10365:
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;stateMachine/display.c: 32:             {;stateMachine/display.c: 33:                 d
      +                          isplayState=INGAME;
 11020  004920  0E02               	movlw	2
 11021  004922  6FDD               	movwf	_displayState& (0+255),b
 11022  004924                     
 11023                           ; BSR set to: 0
 11024                           ;stateMachine/display.c: 34:                 Menu_inGameDraw(g);
 11025  004924  C0A3  F094         	movff	displaySM@g,Menu_inGameDraw@g
 11026  004928  C0A4  F095         	movff	displaySM@g+1,Menu_inGameDraw@g+1
 11027  00492C  ECE7  F02F         	call	_Menu_inGameDraw	;wreg free
 11028  004930                     
 11029                           ;stateMachine/display.c: 35:                 displayController(g,ev);
 11030  004930  C0A3  F09E         	movff	displaySM@g,displayController@g
 11031  004934  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11032  004938  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11033  00493C  ECF8  F023         	call	_displayController	;wreg free
 11034  004940                     l10371:
 11035                           
 11036                           ;stateMachine/display.c: 37:             if(ev==evParameters)
 11037  004940  0E07               	movlw	7
 11038  004942  0100               	movlb	0	; () banked
 11039  004944  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11040  004946  A4D8               	btfss	status,2,c
 11041  004948  EFA8  F024         	goto	u7901
 11042  00494C  EFAA  F024         	goto	u7900
 11043  004950                     u7901:
 11044  004950  EFF9  F024         	goto	l560
 11045  004954                     u7900:
 11046  004954                     
 11047                           ; BSR set to: 0
 11048                           ;stateMachine/display.c: 38:             {;stateMachine/display.c: 39:                 d
      +                          isplayState=PARAMETERS;
 11049  004954  0E01               	movlw	1
 11050  004956  6FDD               	movwf	_displayState& (0+255),b
 11051  004958                     l10375:
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;stateMachine/display.c: 40:                 displayController(g,ev);
 11055  004958  C0A3  F09E         	movff	displaySM@g,displayController@g
 11056  00495C  C0A4  F09F         	movff	displaySM@g+1,displayController@g+1
 11057  004960  C0A7  F0A0         	movff	displaySM@ev,displayController@ev
 11058  004964  ECF8  F023         	call	_displayController	;wreg free
 11059  004968  EFF9  F024         	goto	l560
 11060  00496C                     l10377:
 11061                           
 11062                           ; BSR set to: 0
 11063                           ;stateMachine/display.c: 44:             if(ev==evLeaveParam)
 11064  00496C  0E08               	movlw	8
 11065  00496E  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11066  004970  A4D8               	btfss	status,2,c
 11067  004972  EFBD  F024         	goto	u7911
 11068  004976  EFBF  F024         	goto	u7910
 11069  00497A                     u7911:
 11070  00497A  EFF9  F024         	goto	l560
 11071  00497E                     u7910:
 11072  00497E                     l10379:
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;stateMachine/display.c: 45:             {;stateMachine/display.c: 46:                 d
      +                          isplayState=WELCOME;
 11076  00497E  0E00               	movlw	0
 11077  004980  6FDD               	movwf	_displayState& (0+255),b
 11078  004982  EFAC  F024         	goto	l10375
 11079  004986                     l10383:
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;stateMachine/display.c: 51:             if(ev==evEndGame)
 11083  004986  0E09               	movlw	9
 11084  004988  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11085  00498A  A4D8               	btfss	status,2,c
 11086  00498C  EFCA  F024         	goto	u7921
 11087  004990  EFCC  F024         	goto	u7920
 11088  004994                     u7921:
 11089  004994  EFAC  F024         	goto	l10375
 11090  004998                     u7920:
 11091  004998                     
 11092                           ; BSR set to: 0
 11093                           ;stateMachine/display.c: 52:             {;stateMachine/display.c: 53:                 d
      +                          isplayState=ENDGAME;
 11094  004998  0E03               	movlw	3
 11095  00499A  6FDD               	movwf	_displayState& (0+255),b
 11096  00499C  EFAC  F024         	goto	l10375
 11097  0049A0                     l10391:
 11098                           
 11099                           ; BSR set to: 0
 11100                           ;stateMachine/display.c: 62:            if(ev==evNewGame)
 11101  0049A0  0E0F               	movlw	15
 11102  0049A2  19A7               	xorwf	displaySM@ev& (0+255),w,b
 11103  0049A4  A4D8               	btfss	status,2,c
 11104  0049A6  EFD7  F024         	goto	u7931
 11105  0049AA  EFD9  F024         	goto	u7930
 11106  0049AE                     u7931:
 11107  0049AE  EFF9  F024         	goto	l560
 11108  0049B2                     u7930:
 11109  0049B2  EFBF  F024         	goto	l10379
 11110  0049B6                     l10399:
 11111  0049B6  0100               	movlb	0	; () banked
 11112  0049B8  51DD               	movf	_displayState& (0+255),w,b
 11113  0049BA  6FA5               	movwf	??_displaySM& (0+255),b
 11114  0049BC  6BA6               	clrf	(??_displaySM+1)& (0+255),b
 11115                           
 11116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11117                           ; Switch size 1, requested type "simple"
 11118                           ; Number of cases is 1, Range of values is 0 to 0
 11119                           ; switch strategies available:
 11120                           ; Name         Instructions Cycles
 11121                           ; simple_byte            4     3 (average)
 11122                           ;	Chosen strategy is simple_byte
 11123  0049BE  51A6               	movf	(??_displaySM+1)& (0+255),w,b
 11124  0049C0  0A00               	xorlw	0	; case 0
 11125  0049C2  B4D8               	btfsc	status,2,c
 11126  0049C4  EFE6  F024         	goto	l10709
 11127  0049C8  EFF9  F024         	goto	l560
 11128  0049CC                     l10709:
 11129                           
 11130                           ; BSR set to: 0
 11131                           ; Switch size 1, requested type "simple"
 11132                           ; Number of cases is 4, Range of values is 0 to 3
 11133                           ; switch strategies available:
 11134                           ; Name         Instructions Cycles
 11135                           ; simple_byte           13     7 (average)
 11136                           ;	Chosen strategy is simple_byte
 11137  0049CC  51A5               	movf	??_displaySM& (0+255),w,b
 11138  0049CE  0A00               	xorlw	0	; case 0
 11139  0049D0  B4D8               	btfsc	status,2,c
 11140  0049D2  EF7E  F024         	goto	l10361
 11141  0049D6  0A01               	xorlw	1	; case 1
 11142  0049D8  B4D8               	btfsc	status,2,c
 11143  0049DA  EFB6  F024         	goto	l10377
 11144  0049DE  0A03               	xorlw	3	; case 2
 11145  0049E0  B4D8               	btfsc	status,2,c
 11146  0049E2  EFC3  F024         	goto	l10383
 11147  0049E6  0A01               	xorlw	1	; case 3
 11148  0049E8  B4D8               	btfsc	status,2,c
 11149  0049EA  EFD0  F024         	goto	l10391
 11150  0049EE  EFF9  F024         	goto	l560
 11151  0049F2                     l560:
 11152  0049F2  0012               	return		;funcret
 11153  0049F4                     __end_of_displaySM:
 11154                           	callstack 0
 11155                           
 11156 ;; *************** function _displayController *****************
 11157 ;; Defined at:
 11158 ;;		line 72 in file "stateMachine/display.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  g               2   62[BANK0 ] PTR struct GameParameter
 11161 ;;		 -> g1(239), 
 11162 ;;  ev              1   64[BANK0 ] unsigned char 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;		None
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  1    wreg      void 
 11167 ;; Registers used:
 11168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11174 ;;      Params:         0       3       0       0       0       0       0
 11175 ;;      Locals:         0       0       0       0       0       0       0
 11176 ;;      Temps:          0       2       0       0       0       0       0
 11177 ;;      Totals:         0       5       0       0       0       0       0
 11178 ;;Total ram usage:        5 bytes
 11179 ;; Hardware stack levels used: 1
 11180 ;; Hardware stack levels required when called: 13
 11181 ;; This function calls:
 11182 ;;		_Ball_draw
 11183 ;;		_Menu_endGame
 11184 ;;		_Menu_parametersDraw
 11185 ;;		_Menu_welcomeDraw
 11186 ;;		_Paddle_draw
 11187 ;;		_Score_draw
 11188 ;; This function is called by:
 11189 ;;		_displayInit
 11190 ;;		_displaySM
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text42
 11195  0047F0                     __ptext42:
 11196                           	callstack 0
 11197  0047F0                     _displayController:
 11198                           	callstack 14
 11199  0047F0                     
 11200                           ;stateMachine/display.c: 72: void displayController(GameParameters* g,Event ev);stateMac
      +                          hine/display.c: 73: {;stateMachine/display.c: 74:     switch(displayState)
 11201  0047F0  EF5B  F024         	goto	l9915
 11202  0047F4                     l9891:
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;stateMachine/display.c: 78:             Menu_welcomeDraw(g);
 11206  0047F4  C09E  F09C         	movff	displayController@g,Menu_welcomeDraw@g
 11207  0047F8  C09F  F09D         	movff	displayController@g+1,Menu_welcomeDraw@g+1
 11208  0047FC  ECA0  F02D         	call	_Menu_welcomeDraw	;wreg free
 11209                           
 11210                           ;stateMachine/display.c: 79:             break;
 11211  004800  EF79  F024         	goto	l574
 11212  004804                     l9893:
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;stateMachine/display.c: 82:             Menu_parametersDraw(g);
 11216  004804  C09E  F09C         	movff	displayController@g,Menu_parametersDraw@g
 11217  004808  C09F  F09D         	movff	displayController@g+1,Menu_parametersDraw@g+1
 11218  00480C  EC5F  F02D         	call	_Menu_parametersDraw	;wreg free
 11219                           
 11220                           ;stateMachine/display.c: 83:             break;
 11221  004810  EF79  F024         	goto	l574
 11222  004814                     l9895:
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;stateMachine/display.c: 86:             if(ev==evRedrawPaddle1)
 11226  004814  0E0B               	movlw	11
 11227  004816  19A0               	xorwf	displayController@ev& (0+255),w,b
 11228  004818  A4D8               	btfss	status,2,c
 11229  00481A  EF11  F024         	goto	u7241
 11230  00481E  EF13  F024         	goto	u7240
 11231  004822                     u7241:
 11232  004822  EF1B  F024         	goto	l9899
 11233  004826                     u7240:
 11234  004826                     
 11235                           ; BSR set to: 0
 11236                           ;stateMachine/display.c: 87:             {;stateMachine/display.c: 88:                 P
      +                          addle_draw(&g->p1);
 11237  004826  0ED5               	movlw	213
 11238  004828  259E               	addwf	displayController@g& (0+255),w,b
 11239  00482A  6E25               	movwf	Paddle_draw@p^0,c
 11240  00482C  0E00               	movlw	0
 11241  00482E  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11242  004830  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11243  004832  ECC4  F021         	call	_Paddle_draw	;wreg free
 11244  004836                     l9899:
 11245                           
 11246                           ;stateMachine/display.c: 90:             if(ev==evRedrawPaddle2)
 11247  004836  0E0C               	movlw	12
 11248  004838  0100               	movlb	0	; () banked
 11249  00483A  19A0               	xorwf	displayController@ev& (0+255),w,b
 11250  00483C  A4D8               	btfss	status,2,c
 11251  00483E  EF23  F024         	goto	u7251
 11252  004842  EF25  F024         	goto	u7250
 11253  004846                     u7251:
 11254  004846  EF2D  F024         	goto	l9903
 11255  00484A                     u7250:
 11256  00484A                     
 11257                           ; BSR set to: 0
 11258                           ;stateMachine/display.c: 91:             {;stateMachine/display.c: 92:                 P
      +                          addle_draw(&g->p2);
 11259  00484A  0EDF               	movlw	223
 11260  00484C  259E               	addwf	displayController@g& (0+255),w,b
 11261  00484E  6E25               	movwf	Paddle_draw@p^0,c
 11262  004850  0E00               	movlw	0
 11263  004852  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11264  004854  6E26               	movwf	(Paddle_draw@p+1)^0,c
 11265  004856  ECC4  F021         	call	_Paddle_draw	;wreg free
 11266  00485A                     l9903:
 11267                           
 11268                           ;stateMachine/display.c: 94:             if(ev==evRedrawBall)
 11269  00485A  0E0D               	movlw	13
 11270  00485C  0100               	movlb	0	; () banked
 11271  00485E  19A0               	xorwf	displayController@ev& (0+255),w,b
 11272  004860  A4D8               	btfss	status,2,c
 11273  004862  EF35  F024         	goto	u7261
 11274  004866  EF37  F024         	goto	u7260
 11275  00486A                     u7261:
 11276  00486A  EF3F  F024         	goto	l9907
 11277  00486E                     u7260:
 11278  00486E                     
 11279                           ; BSR set to: 0
 11280                           ;stateMachine/display.c: 95:             {;stateMachine/display.c: 96:                 B
      +                          all_draw(&g->b);
 11281  00486E  0EC9               	movlw	201
 11282  004870  259E               	addwf	displayController@g& (0+255),w,b
 11283  004872  6E25               	movwf	Ball_draw@b^0,c
 11284  004874  0E00               	movlw	0
 11285  004876  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11286  004878  6E26               	movwf	(Ball_draw@b+1)^0,c
 11287  00487A  EC78  F020         	call	_Ball_draw	;wreg free
 11288  00487E                     l9907:
 11289                           
 11290                           ;stateMachine/display.c: 98:             if(ev==evRedrawScore)
 11291  00487E  0E0E               	movlw	14
 11292  004880  0100               	movlb	0	; () banked
 11293  004882  19A0               	xorwf	displayController@ev& (0+255),w,b
 11294  004884  A4D8               	btfss	status,2,c
 11295  004886  EF47  F024         	goto	u7271
 11296  00488A  EF49  F024         	goto	u7270
 11297  00488E                     u7271:
 11298  00488E  EF79  F024         	goto	l574
 11299  004892                     u7270:
 11300  004892                     
 11301                           ; BSR set to: 0
 11302                           ;stateMachine/display.c: 99:             {;stateMachine/display.c: 100:                 
      +                          Score_draw(&g->s1);
 11303  004892  0EE9               	movlw	233
 11304  004894  259E               	addwf	displayController@g& (0+255),w,b
 11305  004896  6F92               	movwf	Score_draw@s& (0+255),b
 11306  004898  0E00               	movlw	0
 11307  00489A  219F               	addwfc	(displayController@g+1)& (0+255),w,b
 11308  00489C  6F93               	movwf	(Score_draw@s+1)& (0+255),b
 11309  00489E  ECB3  F027         	call	_Score_draw	;wreg free
 11310  0048A2  EF79  F024         	goto	l574
 11311  0048A6                     l9911:
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;stateMachine/display.c: 104:             Menu_endGame(g);
 11315  0048A6  C09E  F09C         	movff	displayController@g,Menu_endGame@g
 11316  0048AA  C09F  F09D         	movff	displayController@g+1,Menu_endGame@g+1
 11317  0048AE  EC7A  F02B         	call	_Menu_endGame	;wreg free
 11318                           
 11319                           ;stateMachine/display.c: 105:             break;
 11320  0048B2  EF79  F024         	goto	l574
 11321  0048B6                     l9915:
 11322  0048B6  0100               	movlb	0	; () banked
 11323  0048B8  51DD               	movf	_displayState& (0+255),w,b
 11324  0048BA  6FA1               	movwf	??_displayController& (0+255),b
 11325  0048BC  6BA2               	clrf	(??_displayController+1)& (0+255),b
 11326                           
 11327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11328                           ; Switch size 1, requested type "simple"
 11329                           ; Number of cases is 1, Range of values is 0 to 0
 11330                           ; switch strategies available:
 11331                           ; Name         Instructions Cycles
 11332                           ; simple_byte            4     3 (average)
 11333                           ;	Chosen strategy is simple_byte
 11334  0048BE  51A2               	movf	(??_displayController+1)& (0+255),w,b
 11335  0048C0  0A00               	xorlw	0	; case 0
 11336  0048C2  B4D8               	btfsc	status,2,c
 11337  0048C4  EF66  F024         	goto	l10711
 11338  0048C8  EF79  F024         	goto	l574
 11339  0048CC                     l10711:
 11340                           
 11341                           ; BSR set to: 0
 11342                           ; Switch size 1, requested type "simple"
 11343                           ; Number of cases is 4, Range of values is 0 to 3
 11344                           ; switch strategies available:
 11345                           ; Name         Instructions Cycles
 11346                           ; simple_byte           13     7 (average)
 11347                           ;	Chosen strategy is simple_byte
 11348  0048CC  51A1               	movf	??_displayController& (0+255),w,b
 11349  0048CE  0A00               	xorlw	0	; case 0
 11350  0048D0  B4D8               	btfsc	status,2,c
 11351  0048D2  EFFA  F023         	goto	l9891
 11352  0048D6  0A01               	xorlw	1	; case 1
 11353  0048D8  B4D8               	btfsc	status,2,c
 11354  0048DA  EF02  F024         	goto	l9893
 11355  0048DE  0A03               	xorlw	3	; case 2
 11356  0048E0  B4D8               	btfsc	status,2,c
 11357  0048E2  EF0A  F024         	goto	l9895
 11358  0048E6  0A01               	xorlw	1	; case 3
 11359  0048E8  B4D8               	btfsc	status,2,c
 11360  0048EA  EF53  F024         	goto	l9911
 11361  0048EE  EF79  F024         	goto	l574
 11362  0048F2                     l574:
 11363  0048F2  0012               	return		;funcret
 11364  0048F4                     __end_of_displayController:
 11365                           	callstack 0
 11366                           
 11367 ;; *************** function _Menu_welcomeDraw *****************
 11368 ;; Defined at:
 11369 ;;		line 7 in file "class/menu.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11372 ;;		 -> g1(239), 
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;		None
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      void 
 11377 ;; Registers used:
 11378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11384 ;;      Params:         0       2       0       0       0       0       0
 11385 ;;      Locals:         0       0       0       0       0       0       0
 11386 ;;      Temps:          0       0       0       0       0       0       0
 11387 ;;      Totals:         0       2       0       0       0       0       0
 11388 ;;Total ram usage:        2 bytes
 11389 ;; Hardware stack levels used: 1
 11390 ;; Hardware stack levels required when called: 7
 11391 ;; This function calls:
 11392 ;;		_LCD_ButtonDraw
 11393 ;;		_LCD_DrawText
 11394 ;;		_LCD_Fill
 11395 ;; This function is called by:
 11396 ;;		_displayController
 11397 ;; This function uses a non-reentrant model
 11398 ;;
 11399                           
 11400                           	psect	text43
 11401  005B40                     __ptext43:
 11402                           	callstack 0
 11403  005B40                     _Menu_welcomeDraw:
 11404                           	callstack 19
 11405  005B40                     
 11406                           ;class/menu.c: 7: void Menu_welcomeDraw(GameParameters* g);class/menu.c: 8: {;class/menu
      +                          .c: 9:     LCD_Fill(0b1111111111111111);
 11407  005B40  0EFF               	movlw	255
 11408  005B42  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11409  005B44  6812               	setf	LCD_Fill@color^0,c
 11410  005B46  ECA8  F029         	call	_LCD_Fill	;wreg free
 11411  005B4A                     
 11412                           ;class/menu.c: 10:     LCD_DrawText("WELCOME",&arialNarrow_12ptFontInfo,A_CENTER,50,50,0
      +                          b0000000000000000,0b1111111111111111);
 11413  005B4A  0EDB               	movlw	low STR_11
 11414  005B4C  6E20               	movwf	LCD_DrawText@msg^0,c
 11415  005B4E  0E7F               	movlw	high STR_11
 11416  005B50  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11417  005B52  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 11418  005B54  6E22               	movwf	LCD_DrawText@font^0,c
 11419  005B56  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11420  005B58  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11421  005B5A  0E02               	movlw	2
 11422  005B5C  6E24               	movwf	LCD_DrawText@align^0,c
 11423  005B5E  0E00               	movlw	0
 11424  005B60  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11425  005B62  0E32               	movlw	50
 11426  005B64  6E25               	movwf	LCD_DrawText@posX^0,c
 11427  005B66  0E00               	movlw	0
 11428  005B68  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11429  005B6A  0E32               	movlw	50
 11430  005B6C  6E27               	movwf	LCD_DrawText@posY^0,c
 11431  005B6E  0E00               	movlw	0
 11432  005B70  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11433  005B72  0E00               	movlw	0
 11434  005B74  6E29               	movwf	LCD_DrawText@color^0,c
 11435  005B76  0EFF               	movlw	255
 11436  005B78  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11437  005B7A  682B               	setf	LCD_DrawText@bg_color^0,c
 11438  005B7C  EC0B  F00F         	call	_LCD_DrawText	;wreg free
 11439  005B80                     
 11440                           ;class/menu.c: 11:     LCD_ButtonDraw(&(g->btnParam));
 11441  005B80  0E08               	movlw	8
 11442  005B82  0100               	movlb	0	; () banked
 11443  005B84  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11444  005B86  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11445  005B88  0E00               	movlw	0
 11446  005B8A  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11447  005B8C  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11448  005B8E  ECDA  F007         	call	_LCD_ButtonDraw	;wreg free
 11449  005B92                     
 11450                           ;class/menu.c: 12:     LCD_ButtonDraw(&(g->btnOnePlayer));
 11451  005B92  0E20               	movlw	32
 11452  005B94  0100               	movlb	0	; () banked
 11453  005B96  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11454  005B98  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11455  005B9A  0E00               	movlw	0
 11456  005B9C  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11457  005B9E  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11458  005BA0  ECDA  F007         	call	_LCD_ButtonDraw	;wreg free
 11459  005BA4                     
 11460                           ;class/menu.c: 13:     LCD_ButtonDraw(&(g->btnTwoPlayer));
 11461  005BA4  0E38               	movlw	56
 11462  005BA6  0100               	movlb	0	; () banked
 11463  005BA8  259C               	addwf	Menu_welcomeDraw@g& (0+255),w,b
 11464  005BAA  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11465  005BAC  0E00               	movlw	0
 11466  005BAE  219D               	addwfc	(Menu_welcomeDraw@g+1)& (0+255),w,b
 11467  005BB0  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11468  005BB2  ECDA  F007         	call	_LCD_ButtonDraw	;wreg free
 11469  005BB6  0012               	return		;funcret
 11470  005BB8                     __end_of_Menu_welcomeDraw:
 11471                           	callstack 0
 11472                           
 11473 ;; *************** function _Menu_parametersDraw *****************
 11474 ;; Defined at:
 11475 ;;		line 19 in file "class/menu.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 11478 ;;		 -> g1(239), 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;		None
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  1    wreg      void 
 11483 ;; Registers used:
 11484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11490 ;;      Params:         0       2       0       0       0       0       0
 11491 ;;      Locals:         0       0       0       0       0       0       0
 11492 ;;      Temps:          0       0       0       0       0       0       0
 11493 ;;      Totals:         0       2       0       0       0       0       0
 11494 ;;Total ram usage:        2 bytes
 11495 ;; Hardware stack levels used: 1
 11496 ;; Hardware stack levels required when called: 7
 11497 ;; This function calls:
 11498 ;;		_LCD_ButtonDraw
 11499 ;;		_LCD_DrawText
 11500 ;;		_LCD_Fill
 11501 ;;		_LCD_SliderDraw
 11502 ;; This function is called by:
 11503 ;;		_displayController
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text44
 11508  005ABE                     __ptext44:
 11509                           	callstack 0
 11510  005ABE                     _Menu_parametersDraw:
 11511                           	callstack 19
 11512  005ABE                     
 11513                           ;class/menu.c: 19: void Menu_parametersDraw(GameParameters* g);class/menu.c: 20: {;class
      +                          /menu.c: 21:     LCD_Fill(0b1111111111111111);
 11514  005ABE  0EFF               	movlw	255
 11515  005AC0  6E13               	movwf	(LCD_Fill@color+1)^0,c
 11516  005AC2  6812               	setf	LCD_Fill@color^0,c
 11517  005AC4  ECA8  F029         	call	_LCD_Fill	;wreg free
 11518  005AC8                     
 11519                           ;class/menu.c: 22:     LCD_DrawText("PARAMETERS",&arialNarrow_12ptFontInfo,A_CENTER,50,5
      +                          0,0b0000000000000000,0b1111111111111111);
 11520  005AC8  0EA0               	movlw	low STR_12
 11521  005ACA  6E20               	movwf	LCD_DrawText@msg^0,c
 11522  005ACC  0E7F               	movlw	high STR_12
 11523  005ACE  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 11524  005AD0  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 11525  005AD2  6E22               	movwf	LCD_DrawText@font^0,c
 11526  005AD4  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 11527  005AD6  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 11528  005AD8  0E02               	movlw	2
 11529  005ADA  6E24               	movwf	LCD_DrawText@align^0,c
 11530  005ADC  0E00               	movlw	0
 11531  005ADE  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 11532  005AE0  0E32               	movlw	50
 11533  005AE2  6E25               	movwf	LCD_DrawText@posX^0,c
 11534  005AE4  0E00               	movlw	0
 11535  005AE6  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 11536  005AE8  0E32               	movlw	50
 11537  005AEA  6E27               	movwf	LCD_DrawText@posY^0,c
 11538  005AEC  0E00               	movlw	0
 11539  005AEE  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 11540  005AF0  0E00               	movlw	0
 11541  005AF2  6E29               	movwf	LCD_DrawText@color^0,c
 11542  005AF4  0EFF               	movlw	255
 11543  005AF6  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 11544  005AF8  682B               	setf	LCD_DrawText@bg_color^0,c
 11545  005AFA  EC0B  F00F         	call	_LCD_DrawText	;wreg free
 11546  005AFE                     
 11547                           ;class/menu.c: 23:     LCD_ButtonDraw(&(g->btnLeaveParam));
 11548  005AFE  0E50               	movlw	80
 11549  005B00  0100               	movlb	0	; () banked
 11550  005B02  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 11551  005B04  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 11552  005B06  0E00               	movlw	0
 11553  005B08  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 11554  005B0A  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 11555  005B0C  ECDA  F007         	call	_LCD_ButtonDraw	;wreg free
 11556  005B10                     
 11557                           ;class/menu.c: 24:     g->sldParam.value=g->backlight;
 11558  005B10  C09C  FFD9         	movff	Menu_parametersDraw@g,fsr2l
 11559  005B14  C09D  FFDA         	movff	Menu_parametersDraw@g+1,fsr2h
 11560  005B18  0100               	movlb	0	; () banked
 11561  005B1A  EE10 F0C1          	lfsr	1,193
 11562  005B1E  519C               	movf	Menu_parametersDraw@g& (0+255),w,b
 11563  005B20  26E1               	addwf	fsr1l,f,c
 11564  005B22  519D               	movf	(Menu_parametersDraw@g+1)& (0+255),w,b
 11565  005B24  22E2               	addwfc	fsr1h,f,c
 11566  005B26  CFDE FFE6          	movff	postinc2,postinc1
 11567  005B2A  CFDD FFE5          	movff	postdec2,postdec1
 11568  005B2E                     
 11569                           ; BSR set to: 0
 11570                           ;class/menu.c: 25:     LCD_SliderDraw(&(g->sldParam));
 11571  005B2E  0EB0               	movlw	176
 11572  005B30  259C               	addwf	Menu_parametersDraw@g& (0+255),w,b
 11573  005B32  6E37               	movwf	LCD_SliderDraw@slider^0,c
 11574  005B34  0E00               	movlw	0
 11575  005B36  219D               	addwfc	(Menu_parametersDraw@g+1)& (0+255),w,b
 11576  005B38  6E38               	movwf	(LCD_SliderDraw@slider+1)^0,c
 11577  005B3A  ECEE  F022         	call	_LCD_SliderDraw	;wreg free
 11578  005B3E  0012               	return		;funcret
 11579  005B40                     __end_of_Menu_parametersDraw:
 11580                           	callstack 0
 11581                           
 11582 ;; *************** function _LCD_SliderDraw *****************
 11583 ;; Defined at:
 11584 ;;		line 371 in file "libraries/lcd_highlevel.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;  slider          2   54[COMRAM] PTR struct .
 11587 ;;		 -> g1(239), 
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;  y2              2   66[COMRAM] unsigned short 
 11590 ;;  y1              2   64[COMRAM] unsigned short 
 11591 ;;  x2              2   62[COMRAM] unsigned short 
 11592 ;;  x1              2   60[COMRAM] unsigned short 
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1    wreg      void 
 11595 ;; Registers used:
 11596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11602 ;;      Params:         2       0       0       0       0       0       0
 11603 ;;      Locals:         8       0       0       0       0       0       0
 11604 ;;      Temps:          4       0       0       0       0       0       0
 11605 ;;      Totals:        14       0       0       0       0       0       0
 11606 ;;Total ram usage:       14 bytes
 11607 ;; Hardware stack levels used: 1
 11608 ;; Hardware stack levels required when called: 6
 11609 ;; This function calls:
 11610 ;;		_LCD_DrawRect
 11611 ;;		_LCD_SliderUpdate
 11612 ;; This function is called by:
 11613 ;;		_Menu_parametersDraw
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           
 11617                           	psect	text45
 11618  0045DC                     __ptext45:
 11619                           	callstack 0
 11620  0045DC                     _LCD_SliderDraw:
 11621                           	callstack 19
 11622  0045DC                     
 11623                           ;libraries/lcd_highlevel.c: 371: void LCD_SliderDraw(sld_t * slider);libraries/lcd_highl
      +                          evel.c: 372: {;libraries/lcd_highlevel.c: 373:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 375:   x1 = slider->posX;
 11624  0045DC  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 11625  0045E0  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 11626  0045E4  CFDE F03D          	movff	postinc2,LCD_SliderDraw@x1
 11627  0045E8  CFDD F03E          	movff	postdec2,LCD_SliderDraw@x1+1
 11628  0045EC                     
 11629                           ;libraries/lcd_highlevel.c: 376:   x2 = slider->posX + slider->width;
 11630  0045EC  EE20 F004          	lfsr	2,4
 11631  0045F0  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11632  0045F2  26D9               	addwf	fsr2l,f,c
 11633  0045F4  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11634  0045F6  22DA               	addwfc	fsr2h,f,c
 11635  0045F8  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11636  0045FC  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11637  004600  C037  FFD9         	movff	LCD_SliderDraw@slider,fsr2l
 11638  004604  C038  FFDA         	movff	LCD_SliderDraw@slider+1,fsr2h
 11639  004608  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11640  00460C  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11641  004610  5039               	movf	??_LCD_SliderDraw^0,w,c
 11642  004612  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11643  004614  6E3F               	movwf	LCD_SliderDraw@x2^0,c
 11644  004616  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11645  004618  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11646  00461A  6E40               	movwf	(LCD_SliderDraw@x2+1)^0,c
 11647  00461C                     
 11648                           ;libraries/lcd_highlevel.c: 377:   y1 = slider->posY;
 11649  00461C  EE20 F002          	lfsr	2,2
 11650  004620  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11651  004622  26D9               	addwf	fsr2l,f,c
 11652  004624  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11653  004626  22DA               	addwfc	fsr2h,f,c
 11654  004628  CFDE F041          	movff	postinc2,LCD_SliderDraw@y1
 11655  00462C  CFDD F042          	movff	postdec2,LCD_SliderDraw@y1+1
 11656  004630                     
 11657                           ;libraries/lcd_highlevel.c: 378:   y2 = slider->posY + slider->height;
 11658  004630  EE20 F006          	lfsr	2,6
 11659  004634  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11660  004636  26D9               	addwf	fsr2l,f,c
 11661  004638  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11662  00463A  22DA               	addwfc	fsr2h,f,c
 11663  00463C  CFDE F039          	movff	postinc2,??_LCD_SliderDraw
 11664  004640  CFDD F03A          	movff	postdec2,??_LCD_SliderDraw+1
 11665  004644  EE20 F002          	lfsr	2,2
 11666  004648  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11667  00464A  26D9               	addwf	fsr2l,f,c
 11668  00464C  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11669  00464E  22DA               	addwfc	fsr2h,f,c
 11670  004650  CFDE F03B          	movff	postinc2,??_LCD_SliderDraw+2
 11671  004654  CFDD F03C          	movff	postdec2,??_LCD_SliderDraw+3
 11672  004658  5039               	movf	??_LCD_SliderDraw^0,w,c
 11673  00465A  243B               	addwf	(??_LCD_SliderDraw+2)^0,w,c
 11674  00465C  6E43               	movwf	LCD_SliderDraw@y2^0,c
 11675  00465E  503A               	movf	(??_LCD_SliderDraw+1)^0,w,c
 11676  004660  203C               	addwfc	(??_LCD_SliderDraw+3)^0,w,c
 11677  004662  6E44               	movwf	(LCD_SliderDraw@y2+1)^0,c
 11678  004664                     
 11679                           ;libraries/lcd_highlevel.c: 379:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->bgColor);
 11680  004664  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11681  004668  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11682  00466C  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11683  004670  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11684  004674  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11685  004678  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11686  00467C  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11687  004680  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11688  004684  0E01               	movlw	1
 11689  004686  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11690  004688  EE20 F00A          	lfsr	2,10
 11691  00468C  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11692  00468E  26D9               	addwf	fsr2l,f,c
 11693  004690  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11694  004692  22DA               	addwfc	fsr2h,f,c
 11695  004694  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11696  004698  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11697  00469C  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 11698  0046A0                     
 11699                           ;libraries/lcd_highlevel.c: 380:   LCD_DrawRect(x1, y1, x2, y2, 0, slider->borderColor);
 11700  0046A0  C03D  F012         	movff	LCD_SliderDraw@x1,LCD_DrawRect@posX1
 11701  0046A4  C03E  F013         	movff	LCD_SliderDraw@x1+1,LCD_DrawRect@posX1+1
 11702  0046A8  C041  F014         	movff	LCD_SliderDraw@y1,LCD_DrawRect@posY1
 11703  0046AC  C042  F015         	movff	LCD_SliderDraw@y1+1,LCD_DrawRect@posY1+1
 11704  0046B0  C03F  F016         	movff	LCD_SliderDraw@x2,LCD_DrawRect@posX2
 11705  0046B4  C040  F017         	movff	LCD_SliderDraw@x2+1,LCD_DrawRect@posX2+1
 11706  0046B8  C043  F018         	movff	LCD_SliderDraw@y2,LCD_DrawRect@posY2
 11707  0046BC  C044  F019         	movff	LCD_SliderDraw@y2+1,LCD_DrawRect@posY2+1
 11708  0046C0  0E00               	movlw	0
 11709  0046C2  6E1A               	movwf	LCD_DrawRect@fill^0,c
 11710  0046C4  EE20 F00C          	lfsr	2,12
 11711  0046C8  5037               	movf	LCD_SliderDraw@slider^0,w,c
 11712  0046CA  26D9               	addwf	fsr2l,f,c
 11713  0046CC  5038               	movf	(LCD_SliderDraw@slider+1)^0,w,c
 11714  0046CE  22DA               	addwfc	fsr2h,f,c
 11715  0046D0  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 11716  0046D4  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 11717  0046D8  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 11718  0046DC                     
 11719                           ;libraries/lcd_highlevel.c: 381:   LCD_SliderUpdate(slider);
 11720  0046DC  C037  F027         	movff	LCD_SliderDraw@slider,LCD_SliderUpdate@slider
 11721  0046E0  C038  F028         	movff	LCD_SliderDraw@slider+1,LCD_SliderUpdate@slider+1
 11722  0046E4  EC51  F00A         	call	_LCD_SliderUpdate	;wreg free
 11723  0046E8  0012               	return		;funcret
 11724  0046EA                     __end_of_LCD_SliderDraw:
 11725                           	callstack 0
 11726                           
 11727 ;; *************** function _LCD_SliderUpdate *****************
 11728 ;; Defined at:
 11729 ;;		line 319 in file "libraries/lcd_highlevel.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;  slider          2   38[COMRAM] PTR struct .
 11732 ;;		 -> g1(239), 
 11733 ;; Auto vars:     Size  Location     Type
 11734 ;;  x1              2   52[COMRAM] unsigned short 
 11735 ;;  y2              2   50[COMRAM] unsigned short 
 11736 ;;  y1              2   48[COMRAM] unsigned short 
 11737 ;;  x2              2   46[COMRAM] unsigned short 
 11738 ;; Return value:  Size  Location     Type
 11739 ;;                  1    wreg      void 
 11740 ;; Registers used:
 11741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11742 ;; Tracked objects:
 11743 ;;		On entry : 0/0
 11744 ;;		On exit  : 0/0
 11745 ;;		Unchanged: 0/0
 11746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11747 ;;      Params:         2       0       0       0       0       0       0
 11748 ;;      Locals:         8       0       0       0       0       0       0
 11749 ;;      Temps:          6       0       0       0       0       0       0
 11750 ;;      Totals:        16       0       0       0       0       0       0
 11751 ;;Total ram usage:       16 bytes
 11752 ;; Hardware stack levels used: 1
 11753 ;; Hardware stack levels required when called: 5
 11754 ;; This function calls:
 11755 ;;		_LCD_DrawRect
 11756 ;;		___lwdiv
 11757 ;;		___wmul
 11758 ;; This function is called by:
 11759 ;;		_LCD_SliderDraw
 11760 ;;		_gameControllerController
 11761 ;; This function uses a non-reentrant model
 11762 ;;
 11763                           
 11764                           	psect	text46
 11765  0014A2                     __ptext46:
 11766                           	callstack 0
 11767  0014A2                     _LCD_SliderUpdate:
 11768                           	callstack 21
 11769  0014A2                     
 11770                           ;libraries/lcd_highlevel.c: 319: void LCD_SliderUpdate(sld_t * slider);libraries/lcd_hig
      +                          hlevel.c: 320: {;libraries/lcd_highlevel.c: 321:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 325:   if(slider->cursorWidth != 0)
 11771  0014A2  EE20 F00E          	lfsr	2,14
 11772  0014A6  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11773  0014A8  26D9               	addwf	fsr2l,f,c
 11774  0014AA  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11775  0014AC  22DA               	addwfc	fsr2h,f,c
 11776  0014AE  50DE               	movf	postinc2,w,c
 11777  0014B0  10DE               	iorwf	postinc2,w,c
 11778  0014B2  B4D8               	btfsc	status,2,c
 11779  0014B4  EF5E  F00A         	goto	u6371
 11780  0014B8  EF60  F00A         	goto	u6370
 11781  0014BC                     u6371:
 11782  0014BC  EFEC  F00A         	goto	l8913
 11783  0014C0                     u6370:
 11784  0014C0                     
 11785                           ;libraries/lcd_highlevel.c: 326:   {;libraries/lcd_highlevel.c: 327:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->oldValue)/ slider->steps);
 11786  0014C0  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11787  0014C4  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11788  0014C8  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11789  0014CC  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11790  0014D0  EE20 F00E          	lfsr	2,14
 11791  0014D4  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11792  0014D6  26D9               	addwf	fsr2l,f,c
 11793  0014D8  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11794  0014DA  22DA               	addwfc	fsr2h,f,c
 11795  0014DC  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11796  0014E0  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11797  0014E4  EE20 F004          	lfsr	2,4
 11798  0014E8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11799  0014EA  26D9               	addwf	fsr2l,f,c
 11800  0014EC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11801  0014EE  22DA               	addwfc	fsr2h,f,c
 11802  0014F0  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 11803  0014F4  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 11804  0014F8  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 11805  0014FA  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 11806  0014FC  6E1A               	movwf	___wmul@multiplier^0,c
 11807  0014FE  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 11808  001500  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 11809  001502  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 11810  001504  EE20 F013          	lfsr	2,19
 11811  001508  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11812  00150A  26D9               	addwf	fsr2l,f,c
 11813  00150C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11814  00150E  22DA               	addwfc	fsr2h,f,c
 11815  001510  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11816  001514  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11817  001518  EC90  F031         	call	___wmul	;wreg free
 11818  00151C  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11819  001520  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11820  001524  EE20 F015          	lfsr	2,21
 11821  001528  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11822  00152A  26D9               	addwf	fsr2l,f,c
 11823  00152C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11824  00152E  22DA               	addwfc	fsr2h,f,c
 11825  001530  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11826  001534  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11827  001538  EC51  F02E         	call	___lwdiv	;wreg free
 11828  00153C  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11829  00153E  2620               	addwf	?___lwdiv^0,f,c
 11830  001540  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11831  001542  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11832  001544  0E01               	movlw	1
 11833  001546  2420               	addwf	?___lwdiv^0,w,c
 11834  001548  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11835  00154A  0E00               	movlw	0
 11836  00154C  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11837  00154E  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11838  001550                     
 11839                           ;libraries/lcd_highlevel.c: 328:     x2 = x1 + slider->cursorWidth-2;
 11840  001550  EE20 F00E          	lfsr	2,14
 11841  001554  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11842  001556  26D9               	addwf	fsr2l,f,c
 11843  001558  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11844  00155A  22DA               	addwfc	fsr2h,f,c
 11845  00155C  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11846  001560  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11847  001564  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 11848  001566  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 11849  001568  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 11850  00156A  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 11851  00156C  0EFE               	movlw	254
 11852  00156E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11853  001570  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11854  001572  0EFF               	movlw	255
 11855  001574  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11856  001576  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11857  001578                     
 11858                           ;libraries/lcd_highlevel.c: 329:     y1 = slider->posY + 2;
 11859  001578  EE20 F002          	lfsr	2,2
 11860  00157C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11861  00157E  26D9               	addwf	fsr2l,f,c
 11862  001580  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11863  001582  22DA               	addwfc	fsr2h,f,c
 11864  001584  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11865  001588  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11866  00158C  0E02               	movlw	2
 11867  00158E  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11868  001590  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11869  001592  0E00               	movlw	0
 11870  001594  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11871  001596  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11872  001598                     
 11873                           ;libraries/lcd_highlevel.c: 330:     y2 = slider->posY + slider->height - 2;
 11874  001598  EE20 F006          	lfsr	2,6
 11875  00159C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11876  00159E  26D9               	addwf	fsr2l,f,c
 11877  0015A0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11878  0015A2  22DA               	addwfc	fsr2h,f,c
 11879  0015A4  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11880  0015A8  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11881  0015AC  EE20 F002          	lfsr	2,2
 11882  0015B0  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11883  0015B2  26D9               	addwf	fsr2l,f,c
 11884  0015B4  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11885  0015B6  22DA               	addwfc	fsr2h,f,c
 11886  0015B8  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11887  0015BC  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11888  0015C0  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11889  0015C2  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11890  0015C4  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11891  0015C6  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11892  0015C8  0EFE               	movlw	254
 11893  0015CA  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 11894  0015CC  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 11895  0015CE  0EFF               	movlw	255
 11896  0015D0  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 11897  0015D2  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 11898                           
 11899                           ;libraries/lcd_highlevel.c: 331:   }
 11900  0015D4  EF60  F00B         	goto	l8921
 11901  0015D8                     l8913:
 11902                           
 11903                           ;libraries/lcd_highlevel.c: 333:   {;libraries/lcd_highlevel.c: 334:     x1 = slider->po
      +                          sX + 1;
 11904  0015D8  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11905  0015DC  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11906  0015E0  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11907  0015E4  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11908  0015E8  0E01               	movlw	1
 11909  0015EA  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11910  0015EC  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 11911  0015EE  0E00               	movlw	0
 11912  0015F0  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11913  0015F2  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 11914  0015F4                     
 11915                           ;libraries/lcd_highlevel.c: 335:     x2 = slider->posX - 1 + ((slider->width * slider->o
      +                          ldValue)/ slider->steps);
 11916  0015F4  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 11917  0015F8  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 11918  0015FC  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11919  001600  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11920  001604  EE20 F004          	lfsr	2,4
 11921  001608  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11922  00160A  26D9               	addwf	fsr2l,f,c
 11923  00160C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11924  00160E  22DA               	addwfc	fsr2h,f,c
 11925  001610  CFDE F01A          	movff	postinc2,___wmul@multiplier
 11926  001614  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 11927  001618  EE20 F013          	lfsr	2,19
 11928  00161C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11929  00161E  26D9               	addwf	fsr2l,f,c
 11930  001620  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11931  001622  22DA               	addwfc	fsr2h,f,c
 11932  001624  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 11933  001628  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 11934  00162C  EC90  F031         	call	___wmul	;wreg free
 11935  001630  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 11936  001634  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 11937  001638  EE20 F015          	lfsr	2,21
 11938  00163C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11939  00163E  26D9               	addwf	fsr2l,f,c
 11940  001640  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11941  001642  22DA               	addwfc	fsr2h,f,c
 11942  001644  CFDE F022          	movff	postinc2,___lwdiv@divisor
 11943  001648  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 11944  00164C  EC51  F02E         	call	___lwdiv	;wreg free
 11945  001650  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11946  001652  2620               	addwf	?___lwdiv^0,f,c
 11947  001654  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11948  001656  2221               	addwfc	(?___lwdiv+1)^0,f,c
 11949  001658  0EFF               	movlw	255
 11950  00165A  2420               	addwf	?___lwdiv^0,w,c
 11951  00165C  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 11952  00165E  0EFF               	movlw	255
 11953  001660  2021               	addwfc	(?___lwdiv+1)^0,w,c
 11954  001662  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 11955  001664                     
 11956                           ;libraries/lcd_highlevel.c: 336:     y1 = slider->posY + 2;
 11957  001664  EE20 F002          	lfsr	2,2
 11958  001668  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11959  00166A  26D9               	addwf	fsr2l,f,c
 11960  00166C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11961  00166E  22DA               	addwfc	fsr2h,f,c
 11962  001670  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11963  001674  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11964  001678  0E02               	movlw	2
 11965  00167A  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 11966  00167C  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 11967  00167E  0E00               	movlw	0
 11968  001680  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 11969  001682  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 11970  001684                     
 11971                           ;libraries/lcd_highlevel.c: 337:     y2 = slider->posY + slider->height - 2;
 11972  001684  EE20 F006          	lfsr	2,6
 11973  001688  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11974  00168A  26D9               	addwf	fsr2l,f,c
 11975  00168C  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11976  00168E  22DA               	addwfc	fsr2h,f,c
 11977  001690  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 11978  001694  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 11979  001698  EE20 F002          	lfsr	2,2
 11980  00169C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 11981  00169E  26D9               	addwf	fsr2l,f,c
 11982  0016A0  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 11983  0016A2  22DA               	addwfc	fsr2h,f,c
 11984  0016A4  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 11985  0016A8  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 11986  0016AC  5029               	movf	??_LCD_SliderUpdate^0,w,c
 11987  0016AE  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 11988  0016B0  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 11989  0016B2  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 11990  0016B4  0EFE               	movlw	254
 11991  0016B6  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 11992  0016B8  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 11993  0016BA  0EFF               	movlw	255
 11994  0016BC  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 11995  0016BE  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 11996  0016C0                     l8921:
 11997                           
 11998                           ;libraries/lcd_highlevel.c: 339:   LCD_DrawRect(x1,
 11999  0016C0  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12000  0016C4  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12001  0016C8  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12002  0016CC  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12003  0016D0  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12004  0016D4  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12005  0016D8  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12006  0016DC  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12007  0016E0  0E01               	movlw	1
 12008  0016E2  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12009  0016E4  EE20 F00A          	lfsr	2,10
 12010  0016E8  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12011  0016EA  26D9               	addwf	fsr2l,f,c
 12012  0016EC  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12013  0016EE  22DA               	addwfc	fsr2h,f,c
 12014  0016F0  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12015  0016F4  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12016  0016F8  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 12017  0016FC                     
 12018                           ;libraries/lcd_highlevel.c: 344:   slider->oldValue = slider->value;
 12019  0016FC  EE20 F011          	lfsr	2,17
 12020  001700  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12021  001702  26D9               	addwf	fsr2l,f,c
 12022  001704  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12023  001706  22DA               	addwfc	fsr2h,f,c
 12024  001708  EE10 F013          	lfsr	1,19
 12025  00170C  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12026  00170E  26E1               	addwf	fsr1l,f,c
 12027  001710  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12028  001712  22E2               	addwfc	fsr1h,f,c
 12029  001714  CFDE FFE6          	movff	postinc2,postinc1
 12030  001718  CFDD FFE5          	movff	postdec2,postdec1
 12031  00171C                     
 12032                           ;libraries/lcd_highlevel.c: 347:   if(slider->cursorWidth == 0)
 12033  00171C  EE20 F00E          	lfsr	2,14
 12034  001720  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12035  001722  26D9               	addwf	fsr2l,f,c
 12036  001724  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12037  001726  22DA               	addwfc	fsr2h,f,c
 12038  001728  50DE               	movf	postinc2,w,c
 12039  00172A  10DE               	iorwf	postinc2,w,c
 12040  00172C  A4D8               	btfss	status,2,c
 12041  00172E  EF9B  F00B         	goto	u6381
 12042  001732  EF9D  F00B         	goto	u6380
 12043  001736                     u6381:
 12044  001736  EF13  F00C         	goto	l8935
 12045  00173A                     u6380:
 12046  00173A                     
 12047                           ;libraries/lcd_highlevel.c: 348:   {;libraries/lcd_highlevel.c: 349:     x1 = slider->po
      +                          sX + 1;
 12048  00173A  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12049  00173E  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12050  001742  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12051  001746  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12052  00174A  0E01               	movlw	1
 12053  00174C  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12054  00174E  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12055  001750  0E00               	movlw	0
 12056  001752  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12057  001754  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12058  001756                     
 12059                           ;libraries/lcd_highlevel.c: 350:     x2 = slider->posX - 1 + ((slider->width * slider->v
      +                          alue)/ slider->steps);
 12060  001756  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12061  00175A  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12062  00175E  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12063  001762  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12064  001766  EE20 F004          	lfsr	2,4
 12065  00176A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12066  00176C  26D9               	addwf	fsr2l,f,c
 12067  00176E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12068  001770  22DA               	addwfc	fsr2h,f,c
 12069  001772  CFDE F01A          	movff	postinc2,___wmul@multiplier
 12070  001776  CFDD F01B          	movff	postdec2,___wmul@multiplier+1
 12071  00177A  EE20 F011          	lfsr	2,17
 12072  00177E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12073  001780  26D9               	addwf	fsr2l,f,c
 12074  001782  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12075  001784  22DA               	addwfc	fsr2h,f,c
 12076  001786  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12077  00178A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12078  00178E  EC90  F031         	call	___wmul	;wreg free
 12079  001792  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12080  001796  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12081  00179A  EE20 F015          	lfsr	2,21
 12082  00179E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12083  0017A0  26D9               	addwf	fsr2l,f,c
 12084  0017A2  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12085  0017A4  22DA               	addwfc	fsr2h,f,c
 12086  0017A6  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12087  0017AA  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12088  0017AE  EC51  F02E         	call	___lwdiv	;wreg free
 12089  0017B2  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12090  0017B4  2620               	addwf	?___lwdiv^0,f,c
 12091  0017B6  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12092  0017B8  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12093  0017BA  0EFF               	movlw	255
 12094  0017BC  2420               	addwf	?___lwdiv^0,w,c
 12095  0017BE  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12096  0017C0  0EFF               	movlw	255
 12097  0017C2  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12098  0017C4  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12099  0017C6                     
 12100                           ;libraries/lcd_highlevel.c: 351:     y1 = slider->posY + 2;
 12101  0017C6  EE20 F002          	lfsr	2,2
 12102  0017CA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12103  0017CC  26D9               	addwf	fsr2l,f,c
 12104  0017CE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12105  0017D0  22DA               	addwfc	fsr2h,f,c
 12106  0017D2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12107  0017D6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12108  0017DA  0E02               	movlw	2
 12109  0017DC  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12110  0017DE  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12111  0017E0  0E00               	movlw	0
 12112  0017E2  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12113  0017E4  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12114  0017E6                     
 12115                           ;libraries/lcd_highlevel.c: 352:     y2 = slider->posY + slider->height - 2;
 12116  0017E6  EE20 F006          	lfsr	2,6
 12117  0017EA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12118  0017EC  26D9               	addwf	fsr2l,f,c
 12119  0017EE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12120  0017F0  22DA               	addwfc	fsr2h,f,c
 12121  0017F2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12122  0017F6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12123  0017FA  EE20 F002          	lfsr	2,2
 12124  0017FE  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12125  001800  26D9               	addwf	fsr2l,f,c
 12126  001802  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12127  001804  22DA               	addwfc	fsr2h,f,c
 12128  001806  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12129  00180A  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12130  00180E  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12131  001810  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12132  001812  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12133  001814  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12134  001816  0EFE               	movlw	254
 12135  001818  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12136  00181A  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12137  00181C  0EFF               	movlw	255
 12138  00181E  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12139  001820  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12140                           
 12141                           ;libraries/lcd_highlevel.c: 353:   }
 12142  001822  EF9D  F00C         	goto	l8943
 12143  001826                     l8935:
 12144                           
 12145                           ;libraries/lcd_highlevel.c: 357:   {;libraries/lcd_highlevel.c: 358:     x1 = slider->po
      +                          sX + 1 + (((slider->width-slider->cursorWidth) * slider->value)/ slider->steps);
 12146  001826  C027  FFD9         	movff	LCD_SliderUpdate@slider,fsr2l
 12147  00182A  C028  FFDA         	movff	LCD_SliderUpdate@slider+1,fsr2h
 12148  00182E  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12149  001832  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12150  001836  EE20 F00E          	lfsr	2,14
 12151  00183A  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12152  00183C  26D9               	addwf	fsr2l,f,c
 12153  00183E  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12154  001840  22DA               	addwfc	fsr2h,f,c
 12155  001842  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12156  001846  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12157  00184A  EE20 F004          	lfsr	2,4
 12158  00184E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12159  001850  26D9               	addwf	fsr2l,f,c
 12160  001852  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12161  001854  22DA               	addwfc	fsr2h,f,c
 12162  001856  CFDE F02D          	movff	postinc2,??_LCD_SliderUpdate+4
 12163  00185A  CFDD F02E          	movff	postdec2,??_LCD_SliderUpdate+5
 12164  00185E  502B               	movf	(??_LCD_SliderUpdate+2)^0,w,c
 12165  001860  5C2D               	subwf	(??_LCD_SliderUpdate+4)^0,w,c
 12166  001862  6E1A               	movwf	___wmul@multiplier^0,c
 12167  001864  502C               	movf	(??_LCD_SliderUpdate+3)^0,w,c
 12168  001866  582E               	subwfb	(??_LCD_SliderUpdate+5)^0,w,c
 12169  001868  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 12170  00186A  EE20 F011          	lfsr	2,17
 12171  00186E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12172  001870  26D9               	addwf	fsr2l,f,c
 12173  001872  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12174  001874  22DA               	addwfc	fsr2h,f,c
 12175  001876  CFDE F01C          	movff	postinc2,___wmul@multiplicand
 12176  00187A  CFDD F01D          	movff	postdec2,___wmul@multiplicand+1
 12177  00187E  EC90  F031         	call	___wmul	;wreg free
 12178  001882  C01A  F020         	movff	?___wmul,___lwdiv@dividend
 12179  001886  C01B  F021         	movff	?___wmul+1,___lwdiv@dividend+1
 12180  00188A  EE20 F015          	lfsr	2,21
 12181  00188E  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12182  001890  26D9               	addwf	fsr2l,f,c
 12183  001892  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12184  001894  22DA               	addwfc	fsr2h,f,c
 12185  001896  CFDE F022          	movff	postinc2,___lwdiv@divisor
 12186  00189A  CFDD F023          	movff	postdec2,___lwdiv@divisor+1
 12187  00189E  EC51  F02E         	call	___lwdiv	;wreg free
 12188  0018A2  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12189  0018A4  2620               	addwf	?___lwdiv^0,f,c
 12190  0018A6  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12191  0018A8  2221               	addwfc	(?___lwdiv+1)^0,f,c
 12192  0018AA  0E01               	movlw	1
 12193  0018AC  2420               	addwf	?___lwdiv^0,w,c
 12194  0018AE  6E35               	movwf	LCD_SliderUpdate@x1^0,c
 12195  0018B0  0E00               	movlw	0
 12196  0018B2  2021               	addwfc	(?___lwdiv+1)^0,w,c
 12197  0018B4  6E36               	movwf	(LCD_SliderUpdate@x1+1)^0,c
 12198  0018B6                     
 12199                           ;libraries/lcd_highlevel.c: 359:     x2 = x1 + slider->cursorWidth-2;
 12200  0018B6  EE20 F00E          	lfsr	2,14
 12201  0018BA  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12202  0018BC  26D9               	addwf	fsr2l,f,c
 12203  0018BE  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12204  0018C0  22DA               	addwfc	fsr2h,f,c
 12205  0018C2  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12206  0018C6  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12207  0018CA  5035               	movf	LCD_SliderUpdate@x1^0,w,c
 12208  0018CC  2629               	addwf	??_LCD_SliderUpdate^0,f,c
 12209  0018CE  5036               	movf	(LCD_SliderUpdate@x1+1)^0,w,c
 12210  0018D0  222A               	addwfc	(??_LCD_SliderUpdate+1)^0,f,c
 12211  0018D2  0EFE               	movlw	254
 12212  0018D4  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12213  0018D6  6E2F               	movwf	LCD_SliderUpdate@x2^0,c
 12214  0018D8  0EFF               	movlw	255
 12215  0018DA  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12216  0018DC  6E30               	movwf	(LCD_SliderUpdate@x2+1)^0,c
 12217  0018DE                     
 12218                           ;libraries/lcd_highlevel.c: 360:     y1 = slider->posY + 2;
 12219  0018DE  EE20 F002          	lfsr	2,2
 12220  0018E2  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12221  0018E4  26D9               	addwf	fsr2l,f,c
 12222  0018E6  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12223  0018E8  22DA               	addwfc	fsr2h,f,c
 12224  0018EA  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12225  0018EE  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12226  0018F2  0E02               	movlw	2
 12227  0018F4  2429               	addwf	??_LCD_SliderUpdate^0,w,c
 12228  0018F6  6E31               	movwf	LCD_SliderUpdate@y1^0,c
 12229  0018F8  0E00               	movlw	0
 12230  0018FA  202A               	addwfc	(??_LCD_SliderUpdate+1)^0,w,c
 12231  0018FC  6E32               	movwf	(LCD_SliderUpdate@y1+1)^0,c
 12232  0018FE                     
 12233                           ;libraries/lcd_highlevel.c: 361:     y2 = slider->posY + slider->height - 2;
 12234  0018FE  EE20 F006          	lfsr	2,6
 12235  001902  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12236  001904  26D9               	addwf	fsr2l,f,c
 12237  001906  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12238  001908  22DA               	addwfc	fsr2h,f,c
 12239  00190A  CFDE F029          	movff	postinc2,??_LCD_SliderUpdate
 12240  00190E  CFDD F02A          	movff	postdec2,??_LCD_SliderUpdate+1
 12241  001912  EE20 F002          	lfsr	2,2
 12242  001916  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12243  001918  26D9               	addwf	fsr2l,f,c
 12244  00191A  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12245  00191C  22DA               	addwfc	fsr2h,f,c
 12246  00191E  CFDE F02B          	movff	postinc2,??_LCD_SliderUpdate+2
 12247  001922  CFDD F02C          	movff	postdec2,??_LCD_SliderUpdate+3
 12248  001926  5029               	movf	??_LCD_SliderUpdate^0,w,c
 12249  001928  262B               	addwf	(??_LCD_SliderUpdate+2)^0,f,c
 12250  00192A  502A               	movf	(??_LCD_SliderUpdate+1)^0,w,c
 12251  00192C  222C               	addwfc	(??_LCD_SliderUpdate+3)^0,f,c
 12252  00192E  0EFE               	movlw	254
 12253  001930  242B               	addwf	(??_LCD_SliderUpdate+2)^0,w,c
 12254  001932  6E33               	movwf	LCD_SliderUpdate@y2^0,c
 12255  001934  0EFF               	movlw	255
 12256  001936  202C               	addwfc	(??_LCD_SliderUpdate+3)^0,w,c
 12257  001938  6E34               	movwf	(LCD_SliderUpdate@y2+1)^0,c
 12258  00193A                     l8943:
 12259                           
 12260                           ;libraries/lcd_highlevel.c: 363:   LCD_DrawRect(x1, y1, x2, y2, 1, slider->sldColor);
 12261  00193A  C035  F012         	movff	LCD_SliderUpdate@x1,LCD_DrawRect@posX1
 12262  00193E  C036  F013         	movff	LCD_SliderUpdate@x1+1,LCD_DrawRect@posX1+1
 12263  001942  C031  F014         	movff	LCD_SliderUpdate@y1,LCD_DrawRect@posY1
 12264  001946  C032  F015         	movff	LCD_SliderUpdate@y1+1,LCD_DrawRect@posY1+1
 12265  00194A  C02F  F016         	movff	LCD_SliderUpdate@x2,LCD_DrawRect@posX2
 12266  00194E  C030  F017         	movff	LCD_SliderUpdate@x2+1,LCD_DrawRect@posX2+1
 12267  001952  C033  F018         	movff	LCD_SliderUpdate@y2,LCD_DrawRect@posY2
 12268  001956  C034  F019         	movff	LCD_SliderUpdate@y2+1,LCD_DrawRect@posY2+1
 12269  00195A  0E01               	movlw	1
 12270  00195C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12271  00195E  EE20 F008          	lfsr	2,8
 12272  001962  5027               	movf	LCD_SliderUpdate@slider^0,w,c
 12273  001964  26D9               	addwf	fsr2l,f,c
 12274  001966  5028               	movf	(LCD_SliderUpdate@slider+1)^0,w,c
 12275  001968  22DA               	addwfc	fsr2h,f,c
 12276  00196A  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12277  00196E  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12278  001972  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 12279  001976  0012               	return		;funcret
 12280  001978                     __end_of_LCD_SliderUpdate:
 12281                           	callstack 0
 12282                           
 12283 ;; *************** function _Menu_endGame *****************
 12284 ;; Defined at:
 12285 ;;		line 43 in file "class/menu.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;  g               2   60[BANK0 ] PTR struct GameParameter
 12288 ;;		 -> g1(239), 
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      void 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12300 ;;      Params:         0       2       0       0       0       0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0
 12302 ;;      Temps:          2       0       0       0       0       0       0
 12303 ;;      Totals:         2       2       0       0       0       0       0
 12304 ;;Total ram usage:        4 bytes
 12305 ;; Hardware stack levels used: 1
 12306 ;; Hardware stack levels required when called: 7
 12307 ;; This function calls:
 12308 ;;		_LCD_ButtonDraw
 12309 ;;		_LCD_DrawText
 12310 ;;		_LCD_Fill
 12311 ;; This function is called by:
 12312 ;;		_displayController
 12313 ;; This function uses a non-reentrant model
 12314 ;;
 12315                           
 12316                           	psect	text47
 12317  0056F4                     __ptext47:
 12318                           	callstack 0
 12319  0056F4                     _Menu_endGame:
 12320                           	callstack 19
 12321  0056F4                     
 12322                           ;class/menu.c: 43: void Menu_endGame(GameParameters* g);class/menu.c: 44: {;class/menu.c
      +                          : 45:     LCD_Fill(0b0000000000000000);
 12323  0056F4  0E00               	movlw	0
 12324  0056F6  6E13               	movwf	(LCD_Fill@color+1)^0,c
 12325  0056F8  0E00               	movlw	0
 12326  0056FA  6E12               	movwf	LCD_Fill@color^0,c
 12327  0056FC  ECA8  F029         	call	_LCD_Fill	;wreg free
 12328  005700                     
 12329                           ;class/menu.c: 46:     LCD_ButtonDraw(&(g->btnNewGame));
 12330  005700  0E80               	movlw	128
 12331  005702  0100               	movlb	0	; () banked
 12332  005704  259C               	addwf	Menu_endGame@g& (0+255),w,b
 12333  005706  6F7C               	movwf	LCD_ButtonDraw@button& (0+255),b
 12334  005708  0E00               	movlw	0
 12335  00570A  219D               	addwfc	(Menu_endGame@g+1)& (0+255),w,b
 12336  00570C  6F7D               	movwf	(LCD_ButtonDraw@button+1)& (0+255),b
 12337  00570E  ECDA  F007         	call	_LCD_ButtonDraw	;wreg free
 12338  005712                     
 12339                           ;class/menu.c: 48:     if(g->s1.homeScore==0)
 12340  005712  0100               	movlb	0	; () banked
 12341  005714  EE20 F0E9          	lfsr	2,233
 12342  005718  519C               	movf	Menu_endGame@g& (0+255),w,b
 12343  00571A  26D9               	addwf	fsr2l,f,c
 12344  00571C  519D               	movf	(Menu_endGame@g+1)& (0+255),w,b
 12345  00571E  22DA               	addwfc	fsr2h,f,c
 12346  005720  50DE               	movf	postinc2,w,c
 12347  005722  10DE               	iorwf	postinc2,w,c
 12348  005724  A4D8               	btfss	status,2,c
 12349  005726  EF97  F02B         	goto	u6891
 12350  00572A  EF99  F02B         	goto	u6890
 12351  00572E                     u6891:
 12352  00572E  EFB6  F02B         	goto	l9731
 12353  005732                     u6890:
 12354  005732                     
 12355                           ; BSR set to: 0
 12356                           ;class/menu.c: 49:     {;class/menu.c: 50:         LCD_DrawText("PLAYER 2 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,100,50,0b1111111111111111,0b0000000000000000);
 12357  005732  0E93               	movlw	low STR_13
 12358  005734  6E20               	movwf	LCD_DrawText@msg^0,c
 12359  005736  0E7F               	movlw	high STR_13
 12360  005738  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12361  00573A  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 12362  00573C  6E22               	movwf	LCD_DrawText@font^0,c
 12363  00573E  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12364  005740  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12365  005742  0E02               	movlw	2
 12366  005744  6E24               	movwf	LCD_DrawText@align^0,c
 12367  005746  0E00               	movlw	0
 12368  005748  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12369  00574A  0E64               	movlw	100
 12370  00574C  6E25               	movwf	LCD_DrawText@posX^0,c
 12371  00574E  0E00               	movlw	0
 12372  005750  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12373  005752  0E32               	movlw	50
 12374  005754  6E27               	movwf	LCD_DrawText@posY^0,c
 12375  005756  0EFF               	movlw	255
 12376  005758  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12377  00575A  6829               	setf	LCD_DrawText@color^0,c
 12378  00575C  0E00               	movlw	0
 12379  00575E  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12380  005760  0E00               	movlw	0
 12381  005762  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12382  005764  EC0B  F00F         	call	_LCD_DrawText	;wreg free
 12383                           
 12384                           ;class/menu.c: 51:     }
 12385  005768  EFD1  F02B         	goto	l188
 12386  00576C                     l9731:
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;class/menu.c: 53:     {;class/menu.c: 54:         LCD_DrawText("PLAYER 1 WIN",&arialNar
      +                          row_12ptFontInfo,A_CENTER,100,50,0b1111111111111111,0b0000000000000000);
 12390  00576C  0E86               	movlw	low STR_14
 12391  00576E  6E20               	movwf	LCD_DrawText@msg^0,c
 12392  005770  0E7F               	movlw	high STR_14
 12393  005772  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 12394  005774  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 12395  005776  6E22               	movwf	LCD_DrawText@font^0,c
 12396  005778  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 12397  00577A  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 12398  00577C  0E02               	movlw	2
 12399  00577E  6E24               	movwf	LCD_DrawText@align^0,c
 12400  005780  0E00               	movlw	0
 12401  005782  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 12402  005784  0E64               	movlw	100
 12403  005786  6E25               	movwf	LCD_DrawText@posX^0,c
 12404  005788  0E00               	movlw	0
 12405  00578A  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 12406  00578C  0E32               	movlw	50
 12407  00578E  6E27               	movwf	LCD_DrawText@posY^0,c
 12408  005790  0EFF               	movlw	255
 12409  005792  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 12410  005794  6829               	setf	LCD_DrawText@color^0,c
 12411  005796  0E00               	movlw	0
 12412  005798  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 12413  00579A  0E00               	movlw	0
 12414  00579C  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 12415  00579E  EC0B  F00F         	call	_LCD_DrawText	;wreg free
 12416  0057A2                     l188:
 12417  0057A2  0012               	return		;funcret
 12418  0057A4                     __end_of_Menu_endGame:
 12419                           	callstack 0
 12420                           
 12421 ;; *************** function _LCD_ButtonDraw *****************
 12422 ;; Defined at:
 12423 ;;		line 462 in file "libraries/lcd_highlevel.c"
 12424 ;; Parameters:    Size  Location     Type
 12425 ;;  button          2   28[BANK0 ] PTR struct .
 12426 ;;		 -> g1(239), 
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;  bmpPtr          2   58[BANK0 ] PTR struct .
 12429 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 12430 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 12431 ;;  yText           2   55[BANK0 ] unsigned short 
 12432 ;;  xText           2   53[BANK0 ] unsigned short 
 12433 ;;  y2              2   51[BANK0 ] unsigned short 
 12434 ;;  y1              2   49[BANK0 ] unsigned short 
 12435 ;;  x2              2   47[BANK0 ] unsigned short 
 12436 ;;  x1              2   45[BANK0 ] unsigned short 
 12437 ;;  width           2   43[BANK0 ] unsigned short 
 12438 ;;  i               1   57[BANK0 ] unsigned char 
 12439 ;;  tempChar        1   42[BANK0 ] unsigned char 
 12440 ;; Return value:  Size  Location     Type
 12441 ;;                  1    wreg      void 
 12442 ;; Registers used:
 12443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12444 ;; Tracked objects:
 12445 ;;		On entry : 0/0
 12446 ;;		On exit  : 0/0
 12447 ;;		Unchanged: 0/0
 12448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12449 ;;      Params:         0       2       0       0       0       0       0
 12450 ;;      Locals:         0      18       0       0       0       0       0
 12451 ;;      Temps:          0      12       0       0       0       0       0
 12452 ;;      Totals:         0      32       0       0       0       0       0
 12453 ;;Total ram usage:       32 bytes
 12454 ;; Hardware stack levels used: 1
 12455 ;; Hardware stack levels required when called: 6
 12456 ;; This function calls:
 12457 ;;		_LCD_Bitmap
 12458 ;;		_LCD_ButtonUpdate
 12459 ;;		_LCD_DrawRect
 12460 ;;		_LCD_DrawText
 12461 ;;		___awdiv
 12462 ;;		_strlen
 12463 ;; This function is called by:
 12464 ;;		_Menu_welcomeDraw
 12465 ;;		_Menu_parametersDraw
 12466 ;;		_Menu_endGame
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           	psect	text48
 12471  000FB4                     __ptext48:
 12472                           	callstack 0
 12473  000FB4                     _LCD_ButtonDraw:
 12474                           	callstack 19
 12475  000FB4                     
 12476                           ;libraries/lcd_highlevel.c: 462: void LCD_ButtonDraw(btn_t * button);libraries/lcd_highl
      +                          evel.c: 463: {;libraries/lcd_highlevel.c: 464:   uint16_t x1,x2,y1,y2;;libraries/lcd_hig
      +                          hlevel.c: 465:   uint16_t xText,yText;;libraries/lcd_highlevel.c: 466:   uint8_t i, temp
      +                          Char;;libraries/lcd_highlevel.c: 467:   uint16_t width=0;
 12477  000FB4  0E00               	movlw	0
 12478  000FB6  0100               	movlb	0	; () banked
 12479  000FB8  6F8C               	movwf	(LCD_ButtonDraw@width+1)& (0+255),b
 12480  000FBA  0E00               	movlw	0
 12481  000FBC  6F8B               	movwf	LCD_ButtonDraw@width& (0+255),b
 12482  000FBE                     
 12483                           ; BSR set to: 0
 12484                           ;libraries/lcd_highlevel.c: 468:   BMP_STRUCT *bmpPtr;;libraries/lcd_highlevel.c: 470:  
      +                           x1 = button->posX;
 12485  000FBE  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12486  000FC2  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12487  000FC6  CFDE F08D          	movff	postinc2,LCD_ButtonDraw@x1
 12488  000FCA  CFDD F08E          	movff	postdec2,LCD_ButtonDraw@x1+1
 12489  000FCE                     
 12490                           ; BSR set to: 0
 12491                           ;libraries/lcd_highlevel.c: 471:   x2 = button->posX + button->width;
 12492  000FCE  EE20 F004          	lfsr	2,4
 12493  000FD2  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12494  000FD4  26D9               	addwf	fsr2l,f,c
 12495  000FD6  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12496  000FD8  22DA               	addwfc	fsr2h,f,c
 12497  000FDA  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12498  000FDE  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12499  000FE2  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12500  000FE6  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12501  000FEA  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12502  000FEE  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12503  000FF2  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12504  000FF4  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12505  000FF6  6F8F               	movwf	LCD_ButtonDraw@x2& (0+255),b
 12506  000FF8  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12507  000FFA  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12508  000FFC  6F90               	movwf	(LCD_ButtonDraw@x2+1)& (0+255),b
 12509  000FFE                     
 12510                           ; BSR set to: 0
 12511                           ;libraries/lcd_highlevel.c: 472:   y1 = button->posY;
 12512  000FFE  EE20 F002          	lfsr	2,2
 12513  001002  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12514  001004  26D9               	addwf	fsr2l,f,c
 12515  001006  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12516  001008  22DA               	addwfc	fsr2h,f,c
 12517  00100A  CFDE F091          	movff	postinc2,LCD_ButtonDraw@y1
 12518  00100E  CFDD F092          	movff	postdec2,LCD_ButtonDraw@y1+1
 12519  001012                     
 12520                           ; BSR set to: 0
 12521                           ;libraries/lcd_highlevel.c: 473:   y2 = button->posY + button->height;
 12522  001012  EE20 F006          	lfsr	2,6
 12523  001016  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12524  001018  26D9               	addwf	fsr2l,f,c
 12525  00101A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12526  00101C  22DA               	addwfc	fsr2h,f,c
 12527  00101E  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12528  001022  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12529  001026  EE20 F002          	lfsr	2,2
 12530  00102A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12531  00102C  26D9               	addwf	fsr2l,f,c
 12532  00102E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12533  001030  22DA               	addwfc	fsr2h,f,c
 12534  001032  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12535  001036  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12536  00103A  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12537  00103C  2580               	addwf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12538  00103E  6F93               	movwf	LCD_ButtonDraw@y2& (0+255),b
 12539  001040  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12540  001042  2181               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12541  001044  6F94               	movwf	(LCD_ButtonDraw@y2+1)& (0+255),b
 12542  001046                     
 12543                           ; BSR set to: 0
 12544                           ;libraries/lcd_highlevel.c: 474:   if(button->bgColor != button->txtColor)
 12545  001046  EE20 F008          	lfsr	2,8
 12546  00104A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12547  00104C  26D9               	addwf	fsr2l,f,c
 12548  00104E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12549  001050  22DA               	addwfc	fsr2h,f,c
 12550  001052  EE10 F00A          	lfsr	1,10
 12551  001056  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12552  001058  26E1               	addwf	fsr1l,f,c
 12553  00105A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12554  00105C  22E2               	addwfc	fsr1h,f,c
 12555  00105E  50DE               	movf	postinc2,w,c
 12556  001060  18E6               	xorwf	postinc1,w,c
 12557  001062  E109               	bnz	u6630
 12558  001064  50DE               	movf	postinc2,w,c
 12559  001066  18E6               	xorwf	postinc1,w,c
 12560  001068  B4D8               	btfsc	status,2,c
 12561  00106A  EF39  F008         	goto	u6631
 12562  00106E  EF3B  F008         	goto	u6630
 12563  001072                     u6631:
 12564  001072  EF78  F008         	goto	l9507
 12565  001076                     u6630:
 12566  001076                     
 12567                           ; BSR set to: 0
 12568                           ;libraries/lcd_highlevel.c: 475:   {;libraries/lcd_highlevel.c: 476:     LCD_DrawRect(x1
      +                          , y1, x2, y2, 1, button->bgColor);
 12569  001076  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12570  00107A  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12571  00107E  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12572  001082  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12573  001086  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12574  00108A  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12575  00108E  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12576  001092  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12577  001096  0E01               	movlw	1
 12578  001098  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12579  00109A  EE20 F00A          	lfsr	2,10
 12580  00109E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12581  0010A0  26D9               	addwf	fsr2l,f,c
 12582  0010A2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12583  0010A4  22DA               	addwfc	fsr2h,f,c
 12584  0010A6  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12585  0010AA  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12586  0010AE  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 12587                           
 12588                           ;libraries/lcd_highlevel.c: 477:     LCD_DrawRect(x1, y1, x2, y2, 0, button->txtColor);
 12589  0010B2  C08D  F012         	movff	LCD_ButtonDraw@x1,LCD_DrawRect@posX1
 12590  0010B6  C08E  F013         	movff	LCD_ButtonDraw@x1+1,LCD_DrawRect@posX1+1
 12591  0010BA  C091  F014         	movff	LCD_ButtonDraw@y1,LCD_DrawRect@posY1
 12592  0010BE  C092  F015         	movff	LCD_ButtonDraw@y1+1,LCD_DrawRect@posY1+1
 12593  0010C2  C08F  F016         	movff	LCD_ButtonDraw@x2,LCD_DrawRect@posX2
 12594  0010C6  C090  F017         	movff	LCD_ButtonDraw@x2+1,LCD_DrawRect@posX2+1
 12595  0010CA  C093  F018         	movff	LCD_ButtonDraw@y2,LCD_DrawRect@posY2
 12596  0010CE  C094  F019         	movff	LCD_ButtonDraw@y2+1,LCD_DrawRect@posY2+1
 12597  0010D2  0E00               	movlw	0
 12598  0010D4  6E1A               	movwf	LCD_DrawRect@fill^0,c
 12599  0010D6  0100               	movlb	0	; () banked
 12600  0010D8  EE20 F008          	lfsr	2,8
 12601  0010DC  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12602  0010DE  26D9               	addwf	fsr2l,f,c
 12603  0010E0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12604  0010E2  22DA               	addwfc	fsr2h,f,c
 12605  0010E4  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 12606  0010E8  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 12607  0010EC  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 12608  0010F0                     l9507:
 12609                           
 12610                           ;libraries/lcd_highlevel.c: 482:   if((button->text[0] == 'B')&&(button->text[1] == 'M')
      +                          )
 12611  0010F0  0100               	movlb	0	; () banked
 12612  0010F2  EE20 F00C          	lfsr	2,12
 12613  0010F6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12614  0010F8  26D9               	addwf	fsr2l,f,c
 12615  0010FA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12616  0010FC  22DA               	addwfc	fsr2h,f,c
 12617  0010FE  CFDE FFF6          	movff	postinc2,tblptrl
 12618  001102  CFDD FFF7          	movff	postdec2,tblptrh
 12619  001106                     	if	0	;tblptru may be non-zero
 12620  001106                     	endif
 12621  001106                     	if	0	;tblptru may be non-zero
 12622  001106                     	endif
 12623  001106  0008               	tblrd		*
 12624  001108  50F5               	movf	tablat,w,c
 12625  00110A  0A42               	xorlw	66
 12626  00110C  A4D8               	btfss	status,2,c
 12627  00110E  EF8B  F008         	goto	u6641
 12628  001112  EF8D  F008         	goto	u6640
 12629  001116                     u6641:
 12630  001116  EF3D  F009         	goto	l9519
 12631  00111A                     u6640:
 12632  00111A                     
 12633                           ; BSR set to: 0
 12634  00111A  EE20 F00C          	lfsr	2,12
 12635  00111E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12636  001120  26D9               	addwf	fsr2l,f,c
 12637  001122  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12638  001124  22DA               	addwfc	fsr2h,f,c
 12639  001126  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12640  00112A  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12641  00112E  0E01               	movlw	1
 12642  001130  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12643  001132  0E00               	movlw	0
 12644  001134  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12645  001136  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12646  00113A  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12647  00113E                     	if	0	;tblptru may be non-zero
 12648  00113E                     	endif
 12649  00113E                     	if	0	;tblptru may be non-zero
 12650  00113E                     	endif
 12651  00113E  0008               	tblrd		*
 12652  001140  50F5               	movf	tablat,w,c
 12653  001142  0A4D               	xorlw	77
 12654  001144  A4D8               	btfss	status,2,c
 12655  001146  EFA7  F008         	goto	u6651
 12656  00114A  EFA9  F008         	goto	u6650
 12657  00114E                     u6651:
 12658  00114E  EF3D  F009         	goto	l9519
 12659  001152                     u6650:
 12660  001152                     
 12661                           ; BSR set to: 0
 12662                           ;libraries/lcd_highlevel.c: 483:   {;libraries/lcd_highlevel.c: 484:     bmpPtr = (BMP_S
      +                          TRUCT *)button->text;
 12663  001152  EE20 F00C          	lfsr	2,12
 12664  001156  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12665  001158  26D9               	addwf	fsr2l,f,c
 12666  00115A  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12667  00115C  22DA               	addwfc	fsr2h,f,c
 12668  00115E  CFDE F09A          	movff	postinc2,LCD_ButtonDraw@bmpPtr
 12669  001162  CFDD F09B          	movff	postdec2,LCD_ButtonDraw@bmpPtr+1
 12670  001166                     
 12671                           ; BSR set to: 0
 12672                           ;libraries/lcd_highlevel.c: 485:     yText = button->height / 2 + button->posY - (bmpPtr
      +                          ->biHeight / 2);
 12673  001166  EE20 F002          	lfsr	2,2
 12674  00116A  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12675  00116C  26D9               	addwf	fsr2l,f,c
 12676  00116E  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12677  001170  22DA               	addwfc	fsr2h,f,c
 12678  001172  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12679  001176  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12680  00117A  0E16               	movlw	22
 12681  00117C  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12682  00117E  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12683  001180  0E00               	movlw	0
 12684  001182  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12685  001184  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12686  001186  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12687  00118A  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12688  00118E                     	if	0	;tblptru may be non-zero
 12689  00118E                     	endif
 12690  00118E                     	if	0	;tblptru may be non-zero
 12691  00118E                     	endif
 12692  00118E  0009               	tblrd		*+
 12693  001190  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12694  001194  0009               	tblrd		*+
 12695  001196  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12696  00119A  0009               	tblrd		*+
 12697  00119C  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12698  0011A0  0009               	tblrd		*+
 12699  0011A2  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12700  0011A6  90D8               	bcf	status,0,c
 12701  0011A8  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12702  0011AA  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12703  0011AC  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12704  0011AE  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12705  0011B0  EE20 F006          	lfsr	2,6
 12706  0011B4  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12707  0011B6  26D9               	addwf	fsr2l,f,c
 12708  0011B8  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12709  0011BA  22DA               	addwfc	fsr2h,f,c
 12710  0011BC  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12711  0011C0  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12712  0011C4  90D8               	bcf	status,0,c
 12713  0011C6  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12714  0011C8  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12715  0011CA  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12716  0011CC  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12717  0011CE  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12718  0011D0  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12719  0011D2  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12720  0011D4  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12721  0011D6  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12722  0011D8  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12723  0011DA  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12724  0011DC  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12725  0011DE  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12726  0011E0  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12727  0011E2                     
 12728                           ; BSR set to: 0
 12729                           ;libraries/lcd_highlevel.c: 486:     xText = button->width / 2 + button->posX - (bmpPtr-
      +                          >biWidth / 2);
 12730  0011E2  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12731  0011E6  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12732  0011EA  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12733  0011EE  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12734  0011F2  0E12               	movlw	18
 12735  0011F4  259A               	addwf	LCD_ButtonDraw@bmpPtr& (0+255),w,b
 12736  0011F6  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12737  0011F8  0E00               	movlw	0
 12738  0011FA  219B               	addwfc	(LCD_ButtonDraw@bmpPtr+1)& (0+255),w,b
 12739  0011FC  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12740  0011FE  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12741  001202  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12742  001206                     	if	0	;tblptru may be non-zero
 12743  001206                     	endif
 12744  001206                     	if	0	;tblptru may be non-zero
 12745  001206                     	endif
 12746  001206  0009               	tblrd		*+
 12747  001208  CFF5 F082          	movff	tablat,??_LCD_ButtonDraw+4
 12748  00120C  0009               	tblrd		*+
 12749  00120E  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12750  001212  0009               	tblrd		*+
 12751  001214  CFF5 F084          	movff	tablat,??_LCD_ButtonDraw+6
 12752  001218  0009               	tblrd		*+
 12753  00121A  CFF5 F085          	movff	tablat,??_LCD_ButtonDraw+7
 12754  00121E  90D8               	bcf	status,0,c
 12755  001220  3385               	rrcf	(??_LCD_ButtonDraw+7)& (0+255),f,b
 12756  001222  3384               	rrcf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 12757  001224  3383               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12758  001226  3382               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12759  001228  EE20 F004          	lfsr	2,4
 12760  00122C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12761  00122E  26D9               	addwf	fsr2l,f,c
 12762  001230  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12763  001232  22DA               	addwfc	fsr2h,f,c
 12764  001234  CFDE F086          	movff	postinc2,??_LCD_ButtonDraw+8
 12765  001238  CFDD F087          	movff	postdec2,??_LCD_ButtonDraw+9
 12766  00123C  90D8               	bcf	status,0,c
 12767  00123E  3187               	rrcf	(??_LCD_ButtonDraw+9)& (0+255),w,b
 12768  001240  6F89               	movwf	(??_LCD_ButtonDraw+11)& (0+255),b
 12769  001242  3186               	rrcf	(??_LCD_ButtonDraw+8)& (0+255),w,b
 12770  001244  6F88               	movwf	(??_LCD_ButtonDraw+10)& (0+255),b
 12771  001246  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12772  001248  5F88               	subwf	(??_LCD_ButtonDraw+10)& (0+255),f,b
 12773  00124A  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12774  00124C  5B89               	subwfb	(??_LCD_ButtonDraw+11)& (0+255),f,b
 12775  00124E  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12776  001250  2588               	addwf	(??_LCD_ButtonDraw+10)& (0+255),w,b
 12777  001252  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 12778  001254  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12779  001256  2189               	addwfc	(??_LCD_ButtonDraw+11)& (0+255),w,b
 12780  001258  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 12781  00125A                     
 12782                           ; BSR set to: 0
 12783                           ;libraries/lcd_highlevel.c: 487:     LCD_Bitmap((const uint8_t *)bmpPtr,xText,yText);
 12784  00125A  C09A  F027         	movff	LCD_ButtonDraw@bmpPtr,LCD_Bitmap@bmpPtr
 12785  00125E  C09B  F028         	movff	LCD_ButtonDraw@bmpPtr+1,LCD_Bitmap@bmpPtr+1
 12786  001262  C095  F029         	movff	LCD_ButtonDraw@xText,LCD_Bitmap@posX
 12787  001266  C096  F02A         	movff	LCD_ButtonDraw@xText+1,LCD_Bitmap@posX+1
 12788  00126A  C097  F02B         	movff	LCD_ButtonDraw@yText,LCD_Bitmap@posY
 12789  00126E  C098  F02C         	movff	LCD_ButtonDraw@yText+1,LCD_Bitmap@posY+1
 12790  001272  ECDF  F004         	call	_LCD_Bitmap	;wreg free
 12791                           
 12792                           ;libraries/lcd_highlevel.c: 488:   }
 12793  001276  EF4A  F00A         	goto	l9535
 12794  00127A                     l9519:
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;libraries/lcd_highlevel.c: 493:   {;libraries/lcd_highlevel.c: 494:     yText = button-
      +                          >height / 2 + button->posY - (button->font->height / 2);
 12798  00127A  EE20 F002          	lfsr	2,2
 12799  00127E  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12800  001280  26D9               	addwf	fsr2l,f,c
 12801  001282  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12802  001284  22DA               	addwfc	fsr2h,f,c
 12803  001286  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12804  00128A  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12805  00128E  EE20 F00E          	lfsr	2,14
 12806  001292  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12807  001294  26D9               	addwf	fsr2l,f,c
 12808  001296  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12809  001298  22DA               	addwfc	fsr2h,f,c
 12810  00129A  CFDE FFF6          	movff	postinc2,tblptrl
 12811  00129E  CFDD FFF7          	movff	postdec2,tblptrh
 12812  0012A2                     	if	0	;tblptru may be non-zero
 12813  0012A2                     	endif
 12814  0012A2                     	if	0	;tblptru may be non-zero
 12815  0012A2                     	endif
 12816  0012A2  0008               	tblrd		*
 12817  0012A4  50F5               	movf	tablat,w,c
 12818  0012A6  6E12               	movwf	___awdiv@dividend^0,c
 12819  0012A8  6A13               	clrf	(___awdiv@dividend+1)^0,c
 12820  0012AA  0E00               	movlw	0
 12821  0012AC  6E15               	movwf	(___awdiv@divisor+1)^0,c
 12822  0012AE  0E02               	movlw	2
 12823  0012B0  6E14               	movwf	___awdiv@divisor^0,c
 12824  0012B2  ECE5  F028         	call	___awdiv	;wreg free
 12825  0012B6  0100               	movlb	0	; () banked
 12826  0012B8  EE20 F006          	lfsr	2,6
 12827  0012BC  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12828  0012BE  26D9               	addwf	fsr2l,f,c
 12829  0012C0  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12830  0012C2  22DA               	addwfc	fsr2h,f,c
 12831  0012C4  CFDE F080          	movff	postinc2,??_LCD_ButtonDraw+2
 12832  0012C8  CFDD F081          	movff	postdec2,??_LCD_ButtonDraw+3
 12833  0012CC  90D8               	bcf	status,0,c
 12834  0012CE  3181               	rrcf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 12835  0012D0  6F83               	movwf	(??_LCD_ButtonDraw+5)& (0+255),b
 12836  0012D2  3180               	rrcf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12837  0012D4  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12838  0012D6  5012               	movf	?___awdiv^0,w,c
 12839  0012D8  5F82               	subwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12840  0012DA  5013               	movf	(?___awdiv+1)^0,w,c
 12841  0012DC  5B83               	subwfb	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12842  0012DE  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 12843  0012E0  2582               	addwf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12844  0012E2  6F97               	movwf	LCD_ButtonDraw@yText& (0+255),b
 12845  0012E4  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12846  0012E6  2183               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12847  0012E8  6F98               	movwf	(LCD_ButtonDraw@yText+1)& (0+255),b
 12848  0012EA                     
 12849                           ; BSR set to: 0
 12850                           ;libraries/lcd_highlevel.c: 495:     for(i=0;i<strlen(button->text);i++)
 12851  0012EA  0E00               	movlw	0
 12852  0012EC  6F99               	movwf	LCD_ButtonDraw@i& (0+255),b
 12853  0012EE  EFD5  F009         	goto	l9529
 12854  0012F2                     l9523:
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;libraries/lcd_highlevel.c: 496:     {;libraries/lcd_highlevel.c: 497:       tempChar = 
      +                          (button->text[i]) - button->font->start_char;
 12858  0012F2  EE20 F00E          	lfsr	2,14
 12859  0012F6  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12860  0012F8  26D9               	addwf	fsr2l,f,c
 12861  0012FA  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12862  0012FC  22DA               	addwfc	fsr2h,f,c
 12863  0012FE  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12864  001302  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12865  001306  0E01               	movlw	1
 12866  001308  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12867  00130A  0E00               	movlw	0
 12868  00130C  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12869  00130E  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12870  001312  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12871  001316                     	if	0	;tblptru may be non-zero
 12872  001316                     	endif
 12873  001316                     	if	0	;tblptru may be non-zero
 12874  001316                     	endif
 12875  001316  0008               	tblrd		*
 12876  001318  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12877  00131C  EE20 F00C          	lfsr	2,12
 12878  001320  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12879  001322  26D9               	addwf	fsr2l,f,c
 12880  001324  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12881  001326  22DA               	addwfc	fsr2h,f,c
 12882  001328  CFDE F081          	movff	postinc2,??_LCD_ButtonDraw+3
 12883  00132C  CFDD F082          	movff	postdec2,??_LCD_ButtonDraw+4
 12884  001330  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12885  001332  2781               	addwf	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12886  001334  0E00               	movlw	0
 12887  001336  2382               	addwfc	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12888  001338  C081  FFF6         	movff	??_LCD_ButtonDraw+3,tblptrl
 12889  00133C  C082  FFF7         	movff	??_LCD_ButtonDraw+4,tblptrh
 12890  001340                     	if	0	;tblptru may be non-zero
 12891  001340                     	endif
 12892  001340                     	if	0	;tblptru may be non-zero
 12893  001340                     	endif
 12894  001340  0008               	tblrd		*
 12895  001342  CFF5 F083          	movff	tablat,??_LCD_ButtonDraw+5
 12896  001346  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 12897  001348  5D83               	subwf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12898  00134A  6F8A               	movwf	LCD_ButtonDraw@tempChar& (0+255),b
 12899  00134C                     
 12900                           ; BSR set to: 0
 12901                           ;libraries/lcd_highlevel.c: 498:       width += button->font->descriptor[tempChar].width
      +                          +2;
 12902  00134C  518A               	movf	LCD_ButtonDraw@tempChar& (0+255),w,b
 12903  00134E  0D03               	mullw	3
 12904  001350  EE20 F00E          	lfsr	2,14
 12905  001354  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12906  001356  26D9               	addwf	fsr2l,f,c
 12907  001358  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12908  00135A  22DA               	addwfc	fsr2h,f,c
 12909  00135C  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12910  001360  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12911  001364  0E03               	movlw	3
 12912  001366  277E               	addwf	??_LCD_ButtonDraw& (0+255),f,b
 12913  001368  0E00               	movlw	0
 12914  00136A  237F               	addwfc	(??_LCD_ButtonDraw+1)& (0+255),f,b
 12915  00136C  C07E  FFF6         	movff	??_LCD_ButtonDraw,tblptrl
 12916  001370  C07F  FFF7         	movff	??_LCD_ButtonDraw+1,tblptrh
 12917  001374                     	if	0	;tblptru may be non-zero
 12918  001374                     	endif
 12919  001374                     	if	0	;tblptru may be non-zero
 12920  001374                     	endif
 12921  001374  0009               	tblrd		*+
 12922  001376  CFF5 F080          	movff	tablat,??_LCD_ButtonDraw+2
 12923  00137A  0009               	tblrd		*+
 12924  00137C  CFF5 F081          	movff	tablat,??_LCD_ButtonDraw+3
 12925  001380  50F3               	movf	243,w,c
 12926  001382  2780               	addwf	(??_LCD_ButtonDraw+2)& (0+255),f,b
 12927  001384  50F4               	movf	244,w,c
 12928  001386  2381               	addwfc	(??_LCD_ButtonDraw+3)& (0+255),f,b
 12929  001388  C080  FFF6         	movff	??_LCD_ButtonDraw+2,tblptrl
 12930  00138C  C081  FFF7         	movff	??_LCD_ButtonDraw+3,tblptrh
 12931  001390                     	if	0	;tblptru may be non-zero
 12932  001390                     	endif
 12933  001390                     	if	0	;tblptru may be non-zero
 12934  001390                     	endif
 12935  001390  0008               	tblrd		*
 12936  001392  50F5               	movf	tablat,w,c
 12937  001394  6F82               	movwf	(??_LCD_ButtonDraw+4)& (0+255),b
 12938  001396  6B83               	clrf	(??_LCD_ButtonDraw+5)& (0+255),b
 12939  001398  0E02               	movlw	2
 12940  00139A  2782               	addwf	(??_LCD_ButtonDraw+4)& (0+255),f,b
 12941  00139C  0E00               	movlw	0
 12942  00139E  2383               	addwfc	(??_LCD_ButtonDraw+5)& (0+255),f,b
 12943  0013A0  5182               	movf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12944  0013A2  278B               	addwf	LCD_ButtonDraw@width& (0+255),f,b
 12945  0013A4  5183               	movf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12946  0013A6  238C               	addwfc	(LCD_ButtonDraw@width+1)& (0+255),f,b
 12947  0013A8                     
 12948                           ; BSR set to: 0
 12949                           ;libraries/lcd_highlevel.c: 499:     }
 12950  0013A8  2B99               	incf	LCD_ButtonDraw@i& (0+255),f,b
 12951  0013AA                     l9529:
 12952                           
 12953                           ; BSR set to: 0
 12954  0013AA  EE20 F00C          	lfsr	2,12
 12955  0013AE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12956  0013B0  26D9               	addwf	fsr2l,f,c
 12957  0013B2  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12958  0013B4  22DA               	addwfc	fsr2h,f,c
 12959  0013B6  CFDE F012          	movff	postinc2,strlen@s
 12960  0013BA  CFDD F013          	movff	postdec2,strlen@s+1
 12961  0013BE  EC63  F030         	call	_strlen	;wreg free
 12962  0013C2  0100               	movlb	0	; () banked
 12963  0013C4  5199               	movf	LCD_ButtonDraw@i& (0+255),w,b
 12964  0013C6  6F7E               	movwf	??_LCD_ButtonDraw& (0+255),b
 12965  0013C8  6B7F               	clrf	(??_LCD_ButtonDraw+1)& (0+255),b
 12966  0013CA  5012               	movf	?_strlen^0,w,c
 12967  0013CC  5D7E               	subwf	??_LCD_ButtonDraw& (0+255),w,b
 12968  0013CE  5013               	movf	(?_strlen+1)^0,w,c
 12969  0013D0  597F               	subwfb	(??_LCD_ButtonDraw+1)& (0+255),w,b
 12970  0013D2  A0D8               	btfss	status,0,c
 12971  0013D4  EFEE  F009         	goto	u6661
 12972  0013D8  EFF0  F009         	goto	u6660
 12973  0013DC                     u6661:
 12974  0013DC  EF79  F009         	goto	l9523
 12975  0013E0                     u6660:
 12976  0013E0                     
 12977                           ; BSR set to: 0
 12978                           ;libraries/lcd_highlevel.c: 500:     xText = button->width / 2 + button->posX - (width /
      +                           2);
 12979  0013E0  C07C  FFD9         	movff	LCD_ButtonDraw@button,fsr2l
 12980  0013E4  C07D  FFDA         	movff	LCD_ButtonDraw@button+1,fsr2h
 12981  0013E8  CFDE F07E          	movff	postinc2,??_LCD_ButtonDraw
 12982  0013EC  CFDD F07F          	movff	postdec2,??_LCD_ButtonDraw+1
 12983  0013F0  90D8               	bcf	status,0,c
 12984  0013F2  318C               	rrcf	(LCD_ButtonDraw@width+1)& (0+255),w,b
 12985  0013F4  6F81               	movwf	(??_LCD_ButtonDraw+3)& (0+255),b
 12986  0013F6  318B               	rrcf	LCD_ButtonDraw@width& (0+255),w,b
 12987  0013F8  6F80               	movwf	(??_LCD_ButtonDraw+2)& (0+255),b
 12988  0013FA  EE20 F004          	lfsr	2,4
 12989  0013FE  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 12990  001400  26D9               	addwf	fsr2l,f,c
 12991  001402  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 12992  001404  22DA               	addwfc	fsr2h,f,c
 12993  001406  CFDE F082          	movff	postinc2,??_LCD_ButtonDraw+4
 12994  00140A  CFDD F083          	movff	postdec2,??_LCD_ButtonDraw+5
 12995  00140E  90D8               	bcf	status,0,c
 12996  001410  3183               	rrcf	(??_LCD_ButtonDraw+5)& (0+255),w,b
 12997  001412  6F85               	movwf	(??_LCD_ButtonDraw+7)& (0+255),b
 12998  001414  3182               	rrcf	(??_LCD_ButtonDraw+4)& (0+255),w,b
 12999  001416  6F84               	movwf	(??_LCD_ButtonDraw+6)& (0+255),b
 13000  001418  5180               	movf	(??_LCD_ButtonDraw+2)& (0+255),w,b
 13001  00141A  5F84               	subwf	(??_LCD_ButtonDraw+6)& (0+255),f,b
 13002  00141C  5181               	movf	(??_LCD_ButtonDraw+3)& (0+255),w,b
 13003  00141E  5B85               	subwfb	(??_LCD_ButtonDraw+7)& (0+255),f,b
 13004  001420  517E               	movf	??_LCD_ButtonDraw& (0+255),w,b
 13005  001422  2584               	addwf	(??_LCD_ButtonDraw+6)& (0+255),w,b
 13006  001424  6F95               	movwf	LCD_ButtonDraw@xText& (0+255),b
 13007  001426  517F               	movf	(??_LCD_ButtonDraw+1)& (0+255),w,b
 13008  001428  2185               	addwfc	(??_LCD_ButtonDraw+7)& (0+255),w,b
 13009  00142A  6F96               	movwf	(LCD_ButtonDraw@xText+1)& (0+255),b
 13010  00142C                     
 13011                           ; BSR set to: 0
 13012                           ;libraries/lcd_highlevel.c: 501:     LCD_DrawText(button->text, button->font,A_LEFT,
 13013  00142C  EE20 F00C          	lfsr	2,12
 13014  001430  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13015  001432  26D9               	addwf	fsr2l,f,c
 13016  001434  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13017  001436  22DA               	addwfc	fsr2h,f,c
 13018  001438  CFDE F020          	movff	postinc2,LCD_DrawText@msg
 13019  00143C  CFDD F021          	movff	postdec2,LCD_DrawText@msg+1
 13020  001440  EE20 F00E          	lfsr	2,14
 13021  001444  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13022  001446  26D9               	addwf	fsr2l,f,c
 13023  001448  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13024  00144A  22DA               	addwfc	fsr2h,f,c
 13025  00144C  CFDE F022          	movff	postinc2,LCD_DrawText@font
 13026  001450  CFDD F023          	movff	postdec2,LCD_DrawText@font+1
 13027  001454  0E00               	movlw	0
 13028  001456  6E24               	movwf	LCD_DrawText@align^0,c
 13029  001458  C095  F025         	movff	LCD_ButtonDraw@xText,LCD_DrawText@posX
 13030  00145C  C096  F026         	movff	LCD_ButtonDraw@xText+1,LCD_DrawText@posX+1
 13031  001460  C097  F027         	movff	LCD_ButtonDraw@yText,LCD_DrawText@posY
 13032  001464  C098  F028         	movff	LCD_ButtonDraw@yText+1,LCD_DrawText@posY+1
 13033  001468  EE20 F008          	lfsr	2,8
 13034  00146C  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13035  00146E  26D9               	addwf	fsr2l,f,c
 13036  001470  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13037  001472  22DA               	addwfc	fsr2h,f,c
 13038  001474  CFDE F029          	movff	postinc2,LCD_DrawText@color
 13039  001478  CFDD F02A          	movff	postdec2,LCD_DrawText@color+1
 13040  00147C  EE20 F00A          	lfsr	2,10
 13041  001480  517C               	movf	LCD_ButtonDraw@button& (0+255),w,b
 13042  001482  26D9               	addwf	fsr2l,f,c
 13043  001484  517D               	movf	(LCD_ButtonDraw@button+1)& (0+255),w,b
 13044  001486  22DA               	addwfc	fsr2h,f,c
 13045  001488  CFDE F02B          	movff	postinc2,LCD_DrawText@bg_color
 13046  00148C  CFDD F02C          	movff	postdec2,LCD_DrawText@bg_color+1
 13047  001490  EC0B  F00F         	call	_LCD_DrawText	;wreg free
 13048  001494                     l9535:
 13049                           
 13050                           ;libraries/lcd_highlevel.c: 504:   LCD_ButtonUpdate(button);
 13051  001494  C07C  F025         	movff	LCD_ButtonDraw@button,LCD_ButtonUpdate@button
 13052  001498  C07D  F026         	movff	LCD_ButtonDraw@button+1,LCD_ButtonUpdate@button+1
 13053  00149C  EC33  F01C         	call	_LCD_ButtonUpdate	;wreg free
 13054  0014A0  0012               	return		;funcret
 13055  0014A2                     __end_of_LCD_ButtonDraw:
 13056                           	callstack 0
 13057                           
 13058 ;; *************** function _LCD_ButtonUpdate *****************
 13059 ;; Defined at:
 13060 ;;		line 425 in file "libraries/lcd_highlevel.c"
 13061 ;; Parameters:    Size  Location     Type
 13062 ;;  button          2   36[COMRAM] PTR struct .
 13063 ;;		 -> g1(239), 
 13064 ;; Auto vars:     Size  Location     Type
 13065 ;;  y2              2   52[COMRAM] unsigned short 
 13066 ;;  x1              2   50[COMRAM] unsigned short 
 13067 ;;  y1              2   48[COMRAM] unsigned short 
 13068 ;;  x2              2   46[COMRAM] unsigned short 
 13069 ;;  colorIn         2   44[COMRAM] unsigned short 
 13070 ;;  colorOut        2   42[COMRAM] unsigned short 
 13071 ;; Return value:  Size  Location     Type
 13072 ;;                  1    wreg      void 
 13073 ;; Registers used:
 13074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13075 ;; Tracked objects:
 13076 ;;		On entry : 0/0
 13077 ;;		On exit  : 0/0
 13078 ;;		Unchanged: 0/0
 13079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13080 ;;      Params:         2       0       0       0       0       0       0
 13081 ;;      Locals:        12       0       0       0       0       0       0
 13082 ;;      Temps:          4       0       0       0       0       0       0
 13083 ;;      Totals:        18       0       0       0       0       0       0
 13084 ;;Total ram usage:       18 bytes
 13085 ;; Hardware stack levels used: 1
 13086 ;; Hardware stack levels required when called: 5
 13087 ;; This function calls:
 13088 ;;		_LCD_DrawRect
 13089 ;;		_LCD_Read
 13090 ;; This function is called by:
 13091 ;;		_LCD_ButtonDraw
 13092 ;; This function uses a non-reentrant model
 13093 ;;
 13094                           
 13095                           	psect	text49
 13096  003866                     __ptext49:
 13097                           	callstack 0
 13098  003866                     _LCD_ButtonUpdate:
 13099                           	callstack 19
 13100  003866                     
 13101                           ;libraries/lcd_highlevel.c: 425: void LCD_ButtonUpdate(btn_t * button);libraries/lcd_hig
      +                          hlevel.c: 426: {;libraries/lcd_highlevel.c: 427:   uint16_t x1,x2,y1,y2;;libraries/lcd_h
      +                          ighlevel.c: 428:   uint16_t colorOut, colorIn;;libraries/lcd_highlevel.c: 430:   x1 = bu
      +                          tton->posX;
 13102  003866  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13103  00386A  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13104  00386E  CFDE F033          	movff	postinc2,LCD_ButtonUpdate@x1
 13105  003872  CFDD F034          	movff	postdec2,LCD_ButtonUpdate@x1+1
 13106  003876                     
 13107                           ;libraries/lcd_highlevel.c: 431:   x2 = button->posX + button->width;
 13108  003876  EE20 F004          	lfsr	2,4
 13109  00387A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13110  00387C  26D9               	addwf	fsr2l,f,c
 13111  00387E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13112  003880  22DA               	addwfc	fsr2h,f,c
 13113  003882  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13114  003886  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13115  00388A  C025  FFD9         	movff	LCD_ButtonUpdate@button,fsr2l
 13116  00388E  C026  FFDA         	movff	LCD_ButtonUpdate@button+1,fsr2h
 13117  003892  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13118  003896  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13119  00389A  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13120  00389C  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13121  00389E  6E2F               	movwf	LCD_ButtonUpdate@x2^0,c
 13122  0038A0  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13123  0038A2  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13124  0038A4  6E30               	movwf	(LCD_ButtonUpdate@x2+1)^0,c
 13125  0038A6                     
 13126                           ;libraries/lcd_highlevel.c: 432:   y1 = button->posY;
 13127  0038A6  EE20 F002          	lfsr	2,2
 13128  0038AA  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13129  0038AC  26D9               	addwf	fsr2l,f,c
 13130  0038AE  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13131  0038B0  22DA               	addwfc	fsr2h,f,c
 13132  0038B2  CFDE F031          	movff	postinc2,LCD_ButtonUpdate@y1
 13133  0038B6  CFDD F032          	movff	postdec2,LCD_ButtonUpdate@y1+1
 13134  0038BA                     
 13135                           ;libraries/lcd_highlevel.c: 433:   y2 = button->posY + button->height;
 13136  0038BA  EE20 F006          	lfsr	2,6
 13137  0038BE  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13138  0038C0  26D9               	addwf	fsr2l,f,c
 13139  0038C2  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13140  0038C4  22DA               	addwfc	fsr2h,f,c
 13141  0038C6  CFDE F027          	movff	postinc2,??_LCD_ButtonUpdate
 13142  0038CA  CFDD F028          	movff	postdec2,??_LCD_ButtonUpdate+1
 13143  0038CE  EE20 F002          	lfsr	2,2
 13144  0038D2  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13145  0038D4  26D9               	addwf	fsr2l,f,c
 13146  0038D6  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13147  0038D8  22DA               	addwfc	fsr2h,f,c
 13148  0038DA  CFDE F029          	movff	postinc2,??_LCD_ButtonUpdate+2
 13149  0038DE  CFDD F02A          	movff	postdec2,??_LCD_ButtonUpdate+3
 13150  0038E2  5027               	movf	??_LCD_ButtonUpdate^0,w,c
 13151  0038E4  2429               	addwf	(??_LCD_ButtonUpdate+2)^0,w,c
 13152  0038E6  6E35               	movwf	LCD_ButtonUpdate@y2^0,c
 13153  0038E8  5028               	movf	(??_LCD_ButtonUpdate+1)^0,w,c
 13154  0038EA  202A               	addwfc	(??_LCD_ButtonUpdate+3)^0,w,c
 13155  0038EC  6E36               	movwf	(LCD_ButtonUpdate@y2+1)^0,c
 13156  0038EE                     
 13157                           ;libraries/lcd_highlevel.c: 435:   if(button->pressed == 0)
 13158  0038EE  EE20 F010          	lfsr	2,16
 13159  0038F2  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13160  0038F4  26D9               	addwf	fsr2l,f,c
 13161  0038F6  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13162  0038F8  22DA               	addwfc	fsr2h,f,c
 13163  0038FA  50DF               	movf	indf2,w,c
 13164  0038FC  A4D8               	btfss	status,2,c
 13165  0038FE  EF83  F01C         	goto	u6391
 13166  003902  EF85  F01C         	goto	u6390
 13167  003906                     u6391:
 13168  003906  EF9B  F01C         	goto	l8957
 13169  00390A                     u6390:
 13170  00390A                     
 13171                           ;libraries/lcd_highlevel.c: 436:   {;libraries/lcd_highlevel.c: 437:     colorOut = butt
      +                          on->txtColor;
 13172  00390A  EE20 F008          	lfsr	2,8
 13173  00390E  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13174  003910  26D9               	addwf	fsr2l,f,c
 13175  003912  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13176  003914  22DA               	addwfc	fsr2h,f,c
 13177  003916  CFDE F02B          	movff	postinc2,LCD_ButtonUpdate@colorOut
 13178  00391A  CFDD F02C          	movff	postdec2,LCD_ButtonUpdate@colorOut+1
 13179                           
 13180                           ;libraries/lcd_highlevel.c: 438:     colorIn = button->bgColor;
 13181  00391E  EE20 F00A          	lfsr	2,10
 13182  003922  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13183  003924  26D9               	addwf	fsr2l,f,c
 13184  003926  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13185  003928  22DA               	addwfc	fsr2h,f,c
 13186  00392A  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13187  00392E  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13188                           
 13189                           ;libraries/lcd_highlevel.c: 439:   }
 13190  003932  EFB5  F01C         	goto	l8961
 13191  003936                     l8957:
 13192                           
 13193                           ;libraries/lcd_highlevel.c: 441:   {;libraries/lcd_highlevel.c: 443:     colorOut = LCD_
      +                          Read(x1,y2+1);
 13194  003936  C033  F012         	movff	LCD_ButtonUpdate@x1,LCD_Read@posX
 13195  00393A  C034  F013         	movff	LCD_ButtonUpdate@x1+1,LCD_Read@posX+1
 13196  00393E  0E01               	movlw	1
 13197  003940  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13198  003942  6E14               	movwf	LCD_Read@posY^0,c
 13199  003944  0E00               	movlw	0
 13200  003946  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13201  003948  6E15               	movwf	(LCD_Read@posY+1)^0,c
 13202  00394A  EC23  F021         	call	_LCD_Read	;wreg free
 13203  00394E  C012  F02B         	movff	?_LCD_Read,LCD_ButtonUpdate@colorOut
 13204  003952  C013  F02C         	movff	?_LCD_Read+1,LCD_ButtonUpdate@colorOut+1
 13205  003956                     
 13206                           ;libraries/lcd_highlevel.c: 444:     colorIn = button->txtColor;
 13207  003956  EE20 F008          	lfsr	2,8
 13208  00395A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13209  00395C  26D9               	addwf	fsr2l,f,c
 13210  00395E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13211  003960  22DA               	addwfc	fsr2h,f,c
 13212  003962  CFDE F02D          	movff	postinc2,LCD_ButtonUpdate@colorIn
 13213  003966  CFDD F02E          	movff	postdec2,LCD_ButtonUpdate@colorIn+1
 13214  00396A                     l8961:
 13215                           
 13216                           ;libraries/lcd_highlevel.c: 446:   if(button->bgColor != button->txtColor)
 13217  00396A  EE20 F008          	lfsr	2,8
 13218  00396E  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13219  003970  26D9               	addwf	fsr2l,f,c
 13220  003972  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13221  003974  22DA               	addwfc	fsr2h,f,c
 13222  003976  EE10 F00A          	lfsr	1,10
 13223  00397A  5025               	movf	LCD_ButtonUpdate@button^0,w,c
 13224  00397C  26E1               	addwf	fsr1l,f,c
 13225  00397E  5026               	movf	(LCD_ButtonUpdate@button+1)^0,w,c
 13226  003980  22E2               	addwfc	fsr1h,f,c
 13227  003982  50DE               	movf	postinc2,w,c
 13228  003984  18E6               	xorwf	postinc1,w,c
 13229  003986  E109               	bnz	u6400
 13230  003988  50DE               	movf	postinc2,w,c
 13231  00398A  18E6               	xorwf	postinc1,w,c
 13232  00398C  B4D8               	btfsc	status,2,c
 13233  00398E  EFCB  F01C         	goto	u6401
 13234  003992  EFCD  F01C         	goto	u6400
 13235  003996                     u6401:
 13236  003996  EF4D  F01D         	goto	l251
 13237  00399A                     u6400:
 13238  00399A                     
 13239                           ;libraries/lcd_highlevel.c: 447:   {;libraries/lcd_highlevel.c: 449:     LCD_DrawRect(x1
      +                          +3, y2+1, x2+3, y2+3, 1, colorOut);
 13240  00399A  0E03               	movlw	3
 13241  00399C  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13242  00399E  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13243  0039A0  0E00               	movlw	0
 13244  0039A2  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13245  0039A4  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13246  0039A6  0E01               	movlw	1
 13247  0039A8  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13248  0039AA  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13249  0039AC  0E00               	movlw	0
 13250  0039AE  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13251  0039B0  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13252  0039B2  0E03               	movlw	3
 13253  0039B4  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13254  0039B6  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13255  0039B8  0E00               	movlw	0
 13256  0039BA  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13257  0039BC  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13258  0039BE  0E03               	movlw	3
 13259  0039C0  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13260  0039C2  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13261  0039C4  0E00               	movlw	0
 13262  0039C6  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13263  0039C8  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13264  0039CA  0E01               	movlw	1
 13265  0039CC  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13266  0039CE  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13267  0039D2  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13268  0039D6  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 13269                           
 13270                           ;libraries/lcd_highlevel.c: 450:     LCD_DrawRect(x2+1, y1+3, x2+3, y2+3, 1, colorOut);
 13271  0039DA  0E01               	movlw	1
 13272  0039DC  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13273  0039DE  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13274  0039E0  0E00               	movlw	0
 13275  0039E2  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13276  0039E4  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13277  0039E6  0E03               	movlw	3
 13278  0039E8  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13279  0039EA  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13280  0039EC  0E00               	movlw	0
 13281  0039EE  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13282  0039F0  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13283  0039F2  0E03               	movlw	3
 13284  0039F4  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13285  0039F6  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13286  0039F8  0E00               	movlw	0
 13287  0039FA  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13288  0039FC  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13289  0039FE  0E03               	movlw	3
 13290  003A00  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13291  003A02  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13292  003A04  0E00               	movlw	0
 13293  003A06  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13294  003A08  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13295  003A0A  0E01               	movlw	1
 13296  003A0C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13297  003A0E  C02B  F01B         	movff	LCD_ButtonUpdate@colorOut,LCD_DrawRect@color
 13298  003A12  C02C  F01C         	movff	LCD_ButtonUpdate@colorOut+1,LCD_DrawRect@color+1
 13299  003A16  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 13300                           
 13301                           ;libraries/lcd_highlevel.c: 451:     LCD_DrawRect(x1+1, y1+1, x2-1, y1+2, 1, colorIn);
 13302  003A1A  0E01               	movlw	1
 13303  003A1C  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13304  003A1E  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13305  003A20  0E00               	movlw	0
 13306  003A22  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13307  003A24  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13308  003A26  0E01               	movlw	1
 13309  003A28  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13310  003A2A  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13311  003A2C  0E00               	movlw	0
 13312  003A2E  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13313  003A30  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13314  003A32  0EFF               	movlw	255
 13315  003A34  242F               	addwf	LCD_ButtonUpdate@x2^0,w,c
 13316  003A36  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13317  003A38  0EFF               	movlw	255
 13318  003A3A  2030               	addwfc	(LCD_ButtonUpdate@x2+1)^0,w,c
 13319  003A3C  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13320  003A3E  0E02               	movlw	2
 13321  003A40  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13322  003A42  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13323  003A44  0E00               	movlw	0
 13324  003A46  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13325  003A48  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13326  003A4A  0E01               	movlw	1
 13327  003A4C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13328  003A4E  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13329  003A52  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13330  003A56  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 13331                           
 13332                           ;libraries/lcd_highlevel.c: 452:     LCD_DrawRect(x1+1, y1+1, x1+2, y2-1, 1, colorIn);
 13333  003A5A  0E01               	movlw	1
 13334  003A5C  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13335  003A5E  6E12               	movwf	LCD_DrawRect@posX1^0,c
 13336  003A60  0E00               	movlw	0
 13337  003A62  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13338  003A64  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 13339  003A66  0E01               	movlw	1
 13340  003A68  2431               	addwf	LCD_ButtonUpdate@y1^0,w,c
 13341  003A6A  6E14               	movwf	LCD_DrawRect@posY1^0,c
 13342  003A6C  0E00               	movlw	0
 13343  003A6E  2032               	addwfc	(LCD_ButtonUpdate@y1+1)^0,w,c
 13344  003A70  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 13345  003A72  0E02               	movlw	2
 13346  003A74  2433               	addwf	LCD_ButtonUpdate@x1^0,w,c
 13347  003A76  6E16               	movwf	LCD_DrawRect@posX2^0,c
 13348  003A78  0E00               	movlw	0
 13349  003A7A  2034               	addwfc	(LCD_ButtonUpdate@x1+1)^0,w,c
 13350  003A7C  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 13351  003A7E  0EFF               	movlw	255
 13352  003A80  2435               	addwf	LCD_ButtonUpdate@y2^0,w,c
 13353  003A82  6E18               	movwf	LCD_DrawRect@posY2^0,c
 13354  003A84  0EFF               	movlw	255
 13355  003A86  2036               	addwfc	(LCD_ButtonUpdate@y2+1)^0,w,c
 13356  003A88  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 13357  003A8A  0E01               	movlw	1
 13358  003A8C  6E1A               	movwf	LCD_DrawRect@fill^0,c
 13359  003A8E  C02D  F01B         	movff	LCD_ButtonUpdate@colorIn,LCD_DrawRect@color
 13360  003A92  C02E  F01C         	movff	LCD_ButtonUpdate@colorIn+1,LCD_DrawRect@color+1
 13361  003A96  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 13362  003A9A                     l251:
 13363  003A9A  0012               	return		;funcret
 13364  003A9C                     __end_of_LCD_ButtonUpdate:
 13365                           	callstack 0
 13366                           
 13367 ;; *************** function _LCD_Read *****************
 13368 ;; Defined at:
 13369 ;;		line 64 in file "libraries/lcd_lowlevel.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;  posX            2   17[COMRAM] unsigned short 
 13372 ;;  posY            2   19[COMRAM] unsigned short 
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;  temp16          2   25[COMRAM] unsigned short 
 13375 ;;  color           2   23[COMRAM] unsigned short 
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  2   17[COMRAM] unsigned short 
 13378 ;; Registers used:
 13379 ;;		wreg, status,2, status,0
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13385 ;;      Params:         4       0       0       0       0       0       0
 13386 ;;      Locals:         4       0       0       0       0       0       0
 13387 ;;      Temps:          2       0       0       0       0       0       0
 13388 ;;      Totals:        10       0       0       0       0       0       0
 13389 ;;Total ram usage:       10 bytes
 13390 ;; Hardware stack levels used: 1
 13391 ;; Hardware stack levels required when called: 4
 13392 ;; This function calls:
 13393 ;;		Nothing
 13394 ;; This function is called by:
 13395 ;;		_LCD_ButtonUpdate
 13396 ;; This function uses a non-reentrant model
 13397 ;;
 13398                           
 13399                           	psect	text50
 13400  004246                     __ptext50:
 13401                           	callstack 0
 13402  004246                     _LCD_Read:
 13403                           	callstack 19
 13404  004246                     
 13405                           ;libraries/lcd_lowlevel.c: 64: uint16_t LCD_Read(uint16_t posX, uint16_t posY);libraries
      +                          /lcd_lowlevel.c: 65: {;libraries/lcd_lowlevel.c: 66:  uint16_t temp16;;libraries/lcd_low
      +                          level.c: 67:   uint16_t color;;libraries/lcd_lowlevel.c: 70:   PORTA = 0x2A; LATC4 = 0; 
      +                          LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 13406  004246  0E2A               	movlw	42
 13407  004248  6E80               	movwf	128,c	;volatile
 13408  00424A  988B               	bcf	3979,4,c	;volatile
 13409  00424C  968B               	bcf	3979,3,c	;volatile
 13410  00424E  868B               	bsf	3979,3,c	;volatile
 13411  004250  888B               	bsf	3979,4,c	;volatile
 13412                           
 13413                           ;libraries/lcd_lowlevel.c: 71:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13414  004252  5013               	movf	(LCD_Read@posX+1)^0,w,c
 13415  004254  6E80               	movwf	128,c	;volatile
 13416  004256  968B               	bcf	3979,3,c	;volatile
 13417  004258  868B               	bsf	3979,3,c	;volatile
 13418  00425A                     
 13419                           ;libraries/lcd_lowlevel.c: 72:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13420  00425A  C012  FF80         	movff	LCD_Read@posX,3968	;volatile
 13421  00425E  968B               	bcf	3979,3,c	;volatile
 13422  004260  868B               	bsf	3979,3,c	;volatile
 13423                           
 13424                           ;libraries/lcd_lowlevel.c: 73:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13425  004262  0E00               	movlw	0
 13426  004264  6E80               	movwf	128,c	;volatile
 13427  004266  968B               	bcf	3979,3,c	;volatile
 13428  004268  868B               	bsf	3979,3,c	;volatile
 13429                           
 13430                           ;libraries/lcd_lowlevel.c: 74:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 13431  00426A  0EEF               	movlw	239
 13432  00426C  6E80               	movwf	128,c	;volatile
 13433  00426E  968B               	bcf	3979,3,c	;volatile
 13434  004270  868B               	bsf	3979,3,c	;volatile
 13435                           
 13436                           ;libraries/lcd_lowlevel.c: 76:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13437  004272  0E2B               	movlw	43
 13438  004274  6E80               	movwf	128,c	;volatile
 13439  004276  988B               	bcf	3979,4,c	;volatile
 13440  004278  968B               	bcf	3979,3,c	;volatile
 13441  00427A  868B               	bsf	3979,3,c	;volatile
 13442  00427C  888B               	bsf	3979,4,c	;volatile
 13443                           
 13444                           ;libraries/lcd_lowlevel.c: 77:   PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 13445  00427E  5015               	movf	(LCD_Read@posY+1)^0,w,c
 13446  004280  6E80               	movwf	128,c	;volatile
 13447  004282  968B               	bcf	3979,3,c	;volatile
 13448  004284  868B               	bsf	3979,3,c	;volatile
 13449  004286                     
 13450                           ;libraries/lcd_lowlevel.c: 78:   PORTA = posY; LATC3 = 0; LATC3 = 1;;
 13451  004286  C014  FF80         	movff	LCD_Read@posY,3968	;volatile
 13452  00428A  968B               	bcf	3979,3,c	;volatile
 13453  00428C  868B               	bsf	3979,3,c	;volatile
 13454                           
 13455                           ;libraries/lcd_lowlevel.c: 79:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 13456  00428E  0E01               	movlw	1
 13457  004290  6E80               	movwf	128,c	;volatile
 13458  004292  968B               	bcf	3979,3,c	;volatile
 13459  004294  868B               	bsf	3979,3,c	;volatile
 13460                           
 13461                           ;libraries/lcd_lowlevel.c: 80:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 13462  004296  0E3F               	movlw	63
 13463  004298  6E80               	movwf	128,c	;volatile
 13464  00429A  968B               	bcf	3979,3,c	;volatile
 13465  00429C  868B               	bsf	3979,3,c	;volatile
 13466                           
 13467                           ;libraries/lcd_lowlevel.c: 82:   PORTA = 0x2E; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 
      +                          1;;
 13468  00429E  0E2E               	movlw	46
 13469  0042A0  6E80               	movwf	128,c	;volatile
 13470  0042A2  988B               	bcf	3979,4,c	;volatile
 13471  0042A4  968B               	bcf	3979,3,c	;volatile
 13472  0042A6  868B               	bsf	3979,3,c	;volatile
 13473  0042A8  888B               	bsf	3979,4,c	;volatile
 13474  0042AA                     
 13475                           ;libraries/lcd_lowlevel.c: 83:  TRISA = 0xFF;
 13476  0042AA  6892               	setf	146,c	;volatile
 13477  0042AC                     
 13478                           ;libraries/lcd_lowlevel.c: 84:  LATC2 = 0;
 13479  0042AC  948B               	bcf	3979,2,c	;volatile
 13480  0042AE                     
 13481                           ;libraries/lcd_lowlevel.c: 85:   __nop();
 13482  0042AE  F000               	nop	
 13483  0042B0                     
 13484                           ;libraries/lcd_lowlevel.c: 86:  LATC2 = 1;
 13485  0042B0  848B               	bsf	3979,2,c	;volatile
 13486  0042B2                     
 13487                           ;libraries/lcd_lowlevel.c: 87:  TRISA = 0xFF;
 13488  0042B2  6892               	setf	146,c	;volatile
 13489  0042B4                     
 13490                           ;libraries/lcd_lowlevel.c: 88:  LATC2 = 0;
 13491  0042B4  948B               	bcf	3979,2,c	;volatile
 13492  0042B6                     
 13493                           ;libraries/lcd_lowlevel.c: 89:   __nop();
 13494  0042B6  F000               	nop	
 13495  0042B8                     
 13496                           ;libraries/lcd_lowlevel.c: 90:  temp16 = PORTA;
 13497  0042B8  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13498  0042BC  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13499  0042BE                     
 13500                           ;libraries/lcd_lowlevel.c: 91:  LATC2 = 1;
 13501  0042BE  848B               	bsf	3979,2,c	;volatile
 13502  0042C0                     
 13503                           ;libraries/lcd_lowlevel.c: 92:   temp16 = temp16 >> 3;
 13504  0042C0  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13505  0042C4  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13506  0042C8  90D8               	bcf	status,0,c
 13507  0042CA  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13508  0042CC  3216               	rrcf	??_LCD_Read^0,f,c
 13509  0042CE  90D8               	bcf	status,0,c
 13510  0042D0  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13511  0042D2  3216               	rrcf	??_LCD_Read^0,f,c
 13512  0042D4  90D8               	bcf	status,0,c
 13513  0042D6  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13514  0042D8  3216               	rrcf	??_LCD_Read^0,f,c
 13515  0042DA  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13516  0042DE  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13517  0042E2                     
 13518                           ;libraries/lcd_lowlevel.c: 93:   color = temp16 << 11;
 13519  0042E2  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13520  0042E6  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13521  0042EA  0E0B               	movlw	11
 13522  0042EC                     u5975:
 13523  0042EC  90D8               	bcf	status,0,c
 13524  0042EE  3616               	rlcf	??_LCD_Read^0,f,c
 13525  0042F0  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13526  0042F2  2EE8               	decfsz	wreg,f,c
 13527  0042F4  EF76  F021         	goto	u5975
 13528  0042F8  C016  F018         	movff	??_LCD_Read,LCD_Read@color
 13529  0042FC  C017  F019         	movff	??_LCD_Read+1,LCD_Read@color+1
 13530  004300                     
 13531                           ;libraries/lcd_lowlevel.c: 94:  LATC2 = 0;
 13532  004300  948B               	bcf	3979,2,c	;volatile
 13533  004302                     
 13534                           ;libraries/lcd_lowlevel.c: 95:   __nop();
 13535  004302  F000               	nop	
 13536  004304                     
 13537                           ;libraries/lcd_lowlevel.c: 96:  temp16 = PORTA;
 13538  004304  CF80 F01A          	movff	3968,LCD_Read@temp16	;volatile
 13539  004308  6A1B               	clrf	(LCD_Read@temp16+1)^0,c
 13540  00430A                     
 13541                           ;libraries/lcd_lowlevel.c: 97:  LATC2 = 1;
 13542  00430A  848B               	bsf	3979,2,c	;volatile
 13543  00430C                     
 13544                           ;libraries/lcd_lowlevel.c: 98:   temp16 = temp16 >> 2;
 13545  00430C  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13546  004310  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13547  004314  90D8               	bcf	status,0,c
 13548  004316  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13549  004318  3216               	rrcf	??_LCD_Read^0,f,c
 13550  00431A  90D8               	bcf	status,0,c
 13551  00431C  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13552  00431E  3216               	rrcf	??_LCD_Read^0,f,c
 13553  004320  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13554  004324  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13555  004328                     
 13556                           ;libraries/lcd_lowlevel.c: 99:   color |= temp16 << 5;
 13557  004328  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13558  00432C  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13559  004330  0E05               	movlw	5
 13560  004332                     u5985:
 13561  004332  90D8               	bcf	status,0,c
 13562  004334  3616               	rlcf	??_LCD_Read^0,f,c
 13563  004336  3617               	rlcf	(??_LCD_Read+1)^0,f,c
 13564  004338  2EE8               	decfsz	wreg,f,c
 13565  00433A  EF99  F021         	goto	u5985
 13566  00433E  5016               	movf	??_LCD_Read^0,w,c
 13567  004340  1218               	iorwf	LCD_Read@color^0,f,c
 13568  004342  5017               	movf	(??_LCD_Read+1)^0,w,c
 13569  004344  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13570  004346                     
 13571                           ;libraries/lcd_lowlevel.c: 100:  LATC2 = 0;
 13572  004346  948B               	bcf	3979,2,c	;volatile
 13573  004348                     
 13574                           ;libraries/lcd_lowlevel.c: 101:   __nop();
 13575  004348  F000               	nop	
 13576  00434A                     
 13577                           ;libraries/lcd_lowlevel.c: 102:  temp16 |= PORTA;
 13578  00434A  5080               	movf	128,w,c	;volatile
 13579  00434C  121A               	iorwf	LCD_Read@temp16^0,f,c
 13580  00434E                     
 13581                           ;libraries/lcd_lowlevel.c: 103:  LATC2 = 1;
 13582  00434E  848B               	bsf	3979,2,c	;volatile
 13583  004350                     
 13584                           ;libraries/lcd_lowlevel.c: 104:   temp16 = temp16 >> 3;
 13585  004350  C01A  F016         	movff	LCD_Read@temp16,??_LCD_Read
 13586  004354  C01B  F017         	movff	LCD_Read@temp16+1,??_LCD_Read+1
 13587  004358  90D8               	bcf	status,0,c
 13588  00435A  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13589  00435C  3216               	rrcf	??_LCD_Read^0,f,c
 13590  00435E  90D8               	bcf	status,0,c
 13591  004360  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13592  004362  3216               	rrcf	??_LCD_Read^0,f,c
 13593  004364  90D8               	bcf	status,0,c
 13594  004366  3217               	rrcf	(??_LCD_Read+1)^0,f,c
 13595  004368  3216               	rrcf	??_LCD_Read^0,f,c
 13596  00436A  C016  F01A         	movff	??_LCD_Read,LCD_Read@temp16
 13597  00436E  C017  F01B         	movff	??_LCD_Read+1,LCD_Read@temp16+1
 13598  004372                     
 13599                           ;libraries/lcd_lowlevel.c: 105:   color |= temp16;
 13600  004372  501A               	movf	LCD_Read@temp16^0,w,c
 13601  004374  1218               	iorwf	LCD_Read@color^0,f,c
 13602  004376  501B               	movf	(LCD_Read@temp16+1)^0,w,c
 13603  004378  1219               	iorwf	(LCD_Read@color+1)^0,f,c
 13604  00437A                     
 13605                           ;libraries/lcd_lowlevel.c: 106:  TRISA = 0x00;
 13606  00437A  0E00               	movlw	0
 13607  00437C  6E92               	movwf	146,c	;volatile
 13608  00437E                     
 13609                           ;libraries/lcd_lowlevel.c: 107:  return color;
 13610  00437E  C018  F012         	movff	LCD_Read@color,?_LCD_Read
 13611  004382  C019  F013         	movff	LCD_Read@color+1,?_LCD_Read+1
 13612  004386  0012               	return		;funcret
 13613  004388                     __end_of_LCD_Read:
 13614                           	callstack 0
 13615                           
 13616 ;; *************** function _LCD_Bitmap *****************
 13617 ;; Defined at:
 13618 ;;		line 823 in file "libraries/lcd_highlevel.c"
 13619 ;; Parameters:    Size  Location     Type
 13620 ;;  bmpPtr          2   38[COMRAM] PTR const unsigned char 
 13621 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13622 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13623 ;;  posX            2   40[COMRAM] unsigned short 
 13624 ;;  posY            2   42[COMRAM] unsigned short 
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;  bfOffBits       4    0[BANK0 ] unsigned long 
 13627 ;;  i               2   26[BANK0 ] unsigned short 
 13628 ;;  jumpColor       2   24[BANK0 ] unsigned short 
 13629 ;;  biWidth         2   22[BANK0 ] unsigned short 
 13630 ;;  newY            2   19[BANK0 ] unsigned short 
 13631 ;;  strPtr          2   17[BANK0 ] PTR struct .
 13632 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13633 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13634 ;;  curXPos         2   15[BANK0 ] unsigned short 
 13635 ;;  color           2   13[BANK0 ] unsigned short 
 13636 ;;  biHeight        2   11[BANK0 ] unsigned short 
 13637 ;;  colorTablePt    2    9[BANK0 ] PTR unsigned char 
 13638 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 13639 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 13640 ;;  curYPos         2    7[BANK0 ] unsigned short 
 13641 ;;  jumpCount       2    5[BANK0 ] unsigned short 
 13642 ;;  pixelCount      1   21[BANK0 ] unsigned char 
 13643 ;;  endOfImage      1    4[BANK0 ] unsigned char 
 13644 ;; Return value:  Size  Location     Type
 13645 ;;                  1    wreg      unsigned char 
 13646 ;; Registers used:
 13647 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13648 ;; Tracked objects:
 13649 ;;		On entry : 0/0
 13650 ;;		On exit  : 0/0
 13651 ;;		Unchanged: 0/0
 13652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13653 ;;      Params:         6       0       0       0       0       0       0
 13654 ;;      Locals:         0      28       0       0       0       0       0
 13655 ;;      Temps:          4       0       0       0       0       0       0
 13656 ;;      Totals:        10      28       0       0       0       0       0
 13657 ;;Total ram usage:       38 bytes
 13658 ;; Hardware stack levels used: 1
 13659 ;; Hardware stack levels required when called: 5
 13660 ;; This function calls:
 13661 ;;		_RGB2LCD
 13662 ;;		___lwdiv
 13663 ;;		___lwmod
 13664 ;;		___wmul
 13665 ;; This function is called by:
 13666 ;;		_LCD_ButtonDraw
 13667 ;; This function uses a non-reentrant model
 13668 ;;
 13669                           
 13670                           	psect	text51
 13671  0009BE                     __ptext51:
 13672                           	callstack 0
 13673  0009BE                     _LCD_Bitmap:
 13674                           	callstack 19
 13675  0009BE                     
 13676                           ;libraries/lcd_highlevel.c: 823: uint8_t LCD_Bitmap(const uint8_t * bmpPtr, uint16_t pos
      +                          X, uint16_t posY);libraries/lcd_highlevel.c: 824: {;libraries/lcd_highlevel.c: 825:   ui
      +                          nt32_t bfOffBits;;libraries/lcd_highlevel.c: 826:   uint16_t biWidth, biHeight;;librarie
      +                          s/lcd_highlevel.c: 827:   uint8_t * colorTablePtr;;libraries/lcd_highlevel.c: 828:   uin
      +                          t8_t endOfImage;;libraries/lcd_highlevel.c: 829:   uint16_t i,curXPos,curYPos;;libraries
      +                          /lcd_highlevel.c: 830:   uint8_t pixelCount;;libraries/lcd_highlevel.c: 831:   uint16_t 
      +                          color;
 13677  0009BE  C027  F071         	movff	LCD_Bitmap@bmpPtr,LCD_Bitmap@strPtr
 13678  0009C2  C028  F072         	movff	LCD_Bitmap@bmpPtr+1,LCD_Bitmap@strPtr+1
 13679  0009C6                     
 13680                           ;libraries/lcd_highlevel.c: 839:   bfOffBits = strPtr->bfOffBits;
 13681  0009C6  0E0A               	movlw	10
 13682  0009C8  0100               	movlb	0	; () banked
 13683  0009CA  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13684  0009CC  6E2D               	movwf	??_LCD_Bitmap^0,c
 13685  0009CE  0E00               	movlw	0
 13686  0009D0  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13687  0009D2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13688  0009D4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13689  0009D8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13690  0009DC                     	if	0	;tblptru may be non-zero
 13691  0009DC                     	endif
 13692  0009DC                     	if	0	;tblptru may be non-zero
 13693  0009DC                     	endif
 13694  0009DC  0009               	tblrd		*+
 13695  0009DE  CFF5 F060          	movff	tablat,LCD_Bitmap@bfOffBits
 13696  0009E2  0009               	tblrd		*+
 13697  0009E4  CFF5 F061          	movff	tablat,LCD_Bitmap@bfOffBits+1
 13698  0009E8  0009               	tblrd		*+
 13699  0009EA  CFF5 F062          	movff	tablat,LCD_Bitmap@bfOffBits+2
 13700  0009EE  000A               	tblrd		*-
 13701  0009F0  CFF5 F063          	movff	tablat,LCD_Bitmap@bfOffBits+3
 13702  0009F4                     
 13703                           ; BSR set to: 0
 13704                           ;libraries/lcd_highlevel.c: 840:   biWidth = strPtr->biWidth;
 13705  0009F4  0E12               	movlw	18
 13706  0009F6  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13707  0009F8  6E2D               	movwf	??_LCD_Bitmap^0,c
 13708  0009FA  0E00               	movlw	0
 13709  0009FC  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13710  0009FE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13711  000A00  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13712  000A04  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13713  000A08                     	if	0	;tblptru may be non-zero
 13714  000A08                     	endif
 13715  000A08                     	if	0	;tblptru may be non-zero
 13716  000A08                     	endif
 13717  000A08  0009               	tblrd		*+
 13718  000A0A  CFF5 F076          	movff	tablat,LCD_Bitmap@biWidth
 13719  000A0E  000A               	tblrd		*-
 13720  000A10  CFF5 F077          	movff	tablat,LCD_Bitmap@biWidth+1
 13721  000A14                     
 13722                           ; BSR set to: 0
 13723                           ;libraries/lcd_highlevel.c: 841:   biHeight = strPtr->biHeight;
 13724  000A14  0E16               	movlw	22
 13725  000A16  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13726  000A18  6E2D               	movwf	??_LCD_Bitmap^0,c
 13727  000A1A  0E00               	movlw	0
 13728  000A1C  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13729  000A1E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13730  000A20  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13731  000A24  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13732  000A28                     	if	0	;tblptru may be non-zero
 13733  000A28                     	endif
 13734  000A28                     	if	0	;tblptru may be non-zero
 13735  000A28                     	endif
 13736  000A28  0009               	tblrd		*+
 13737  000A2A  CFF5 F06B          	movff	tablat,LCD_Bitmap@biHeight
 13738  000A2E  000A               	tblrd		*-
 13739  000A30  CFF5 F06C          	movff	tablat,LCD_Bitmap@biHeight+1
 13740  000A34                     
 13741                           ; BSR set to: 0
 13742                           ;libraries/lcd_highlevel.c: 842:   if((strPtr->biBitCount != 8) ||
 13743  000A34  0E1C               	movlw	28
 13744  000A36  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13745  000A38  6E2D               	movwf	??_LCD_Bitmap^0,c
 13746  000A3A  0E00               	movlw	0
 13747  000A3C  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13748  000A3E  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13749  000A40  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13750  000A44  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13751  000A48                     	if	0	;tblptru may be non-zero
 13752  000A48                     	endif
 13753  000A48                     	if	0	;tblptru may be non-zero
 13754  000A48                     	endif
 13755  000A48  0009               	tblrd		*+
 13756  000A4A  0E08               	movlw	8
 13757  000A4C  18F5               	xorwf	tablat,w,c
 13758  000A4E  0009               	tblrd		*+
 13759  000A50  10F5               	iorwf	tablat,w,c
 13760  000A52  A4D8               	btfss	status,2,c
 13761  000A54  EF2E  F005         	goto	u6411
 13762  000A58  EF30  F005         	goto	u6410
 13763  000A5C                     u6411:
 13764  000A5C  EFD9  F007         	goto	l329
 13765  000A60                     u6410:
 13766  000A60                     
 13767                           ; BSR set to: 0
 13768  000A60  0E1E               	movlw	30
 13769  000A62  2571               	addwf	LCD_Bitmap@strPtr& (0+255),w,b
 13770  000A64  6E2D               	movwf	??_LCD_Bitmap^0,c
 13771  000A66  0E00               	movlw	0
 13772  000A68  2172               	addwfc	(LCD_Bitmap@strPtr+1)& (0+255),w,b
 13773  000A6A  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13774  000A6C  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 13775  000A70  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 13776  000A74                     	if	0	;tblptru may be non-zero
 13777  000A74                     	endif
 13778  000A74                     	if	0	;tblptru may be non-zero
 13779  000A74                     	endif
 13780  000A74  0009               	tblrd		*+
 13781  000A76  04F5               	decf	tablat,w,c
 13782  000A78  0009               	tblrd		*+
 13783  000A7A  10F5               	iorwf	tablat,w,c
 13784  000A7C  0009               	tblrd		*+
 13785  000A7E  10F5               	iorwf	tablat,w,c
 13786  000A80  0009               	tblrd		*+
 13787  000A82  10F5               	iorwf	tablat,w,c
 13788  000A84  B4D8               	btfsc	status,2,c
 13789  000A86  EF47  F005         	goto	u6421
 13790  000A8A  EF49  F005         	goto	u6420
 13791  000A8E                     u6421:
 13792  000A8E  EF4B  F005         	goto	l8977
 13793  000A92                     u6420:
 13794  000A92  EFD9  F007         	goto	l329
 13795  000A96                     l8977:
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;libraries/lcd_highlevel.c: 847:   if(((posX + biWidth) > (240)) ||
 13799  000A96  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 13800  000A98  2429               	addwf	LCD_Bitmap@posX^0,w,c
 13801  000A9A  6E2D               	movwf	??_LCD_Bitmap^0,c
 13802  000A9C  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 13803  000A9E  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 13804  000AA0  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13805  000AA2  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 13806  000AA4  E107               	bnz	u6431
 13807  000AA6  0EF1               	movlw	241
 13808  000AA8  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 13809  000AAA  B0D8               	btfsc	status,0,c
 13810  000AAC  EF5A  F005         	goto	u6431
 13811  000AB0  EF5C  F005         	goto	u6430
 13812  000AB4                     u6431:
 13813  000AB4  EFD9  F007         	goto	l329
 13814  000AB8                     u6430:
 13815  000AB8                     
 13816                           ; BSR set to: 0
 13817  000AB8  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 13818  000ABA  242B               	addwf	LCD_Bitmap@posY^0,w,c
 13819  000ABC  6E2D               	movwf	??_LCD_Bitmap^0,c
 13820  000ABE  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 13821  000AC0  202C               	addwfc	(LCD_Bitmap@posY+1)^0,w,c
 13822  000AC2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13823  000AC4  0E41               	movlw	65
 13824  000AC6  5C2D               	subwf	??_LCD_Bitmap^0,w,c
 13825  000AC8  0E01               	movlw	1
 13826  000ACA  582E               	subwfb	(??_LCD_Bitmap+1)^0,w,c
 13827  000ACC  A0D8               	btfss	status,0,c
 13828  000ACE  EF6B  F005         	goto	u6441
 13829  000AD2  EF6D  F005         	goto	u6440
 13830  000AD6                     u6441:
 13831  000AD6  EF6F  F005         	goto	l8981
 13832  000ADA                     u6440:
 13833  000ADA  EFD9  F007         	goto	l329
 13834  000ADE                     l8981:
 13835                           
 13836                           ; BSR set to: 0
 13837                           ;libraries/lcd_highlevel.c: 853:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13838  000ADE  0E36               	movlw	54
 13839  000AE0  6E80               	movwf	128,c	;volatile
 13840  000AE2                     
 13841                           ; BSR set to: 0
 13842  000AE2  988B               	bcf	3979,4,c	;volatile
 13843  000AE4                     
 13844                           ; BSR set to: 0
 13845  000AE4  968B               	bcf	3979,3,c	;volatile
 13846  000AE6                     
 13847                           ; BSR set to: 0
 13848  000AE6  868B               	bsf	3979,3,c	;volatile
 13849  000AE8                     
 13850                           ; BSR set to: 0
 13851  000AE8  888B               	bsf	3979,4,c	;volatile
 13852                           
 13853                           ;libraries/lcd_highlevel.c: 855:   PORTA = 0b10000000; LATC3 = 0; LATC3 = 1;;
 13854  000AEA  0E80               	movlw	128
 13855  000AEC  6E80               	movwf	128,c	;volatile
 13856  000AEE                     
 13857                           ; BSR set to: 0
 13858  000AEE  968B               	bcf	3979,3,c	;volatile
 13859  000AF0                     
 13860                           ; BSR set to: 0
 13861  000AF0  868B               	bsf	3979,3,c	;volatile
 13862  000AF2                     
 13863                           ; BSR set to: 0
 13864                           ;libraries/lcd_highlevel.c: 857:   colorTablePtr = (uint8_t *)bmpPtr + 54;
 13865  000AF2  0E36               	movlw	54
 13866  000AF4  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 13867  000AF6  6F69               	movwf	LCD_Bitmap@colorTablePtr& (0+255),b
 13868  000AF8  0E00               	movlw	0
 13869  000AFA  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 13870  000AFC  6F6A               	movwf	(LCD_Bitmap@colorTablePtr+1)& (0+255),b
 13871  000AFE                     
 13872                           ; BSR set to: 0
 13873                           ;libraries/lcd_highlevel.c: 858:   bmpPtr += bfOffBits;
 13874  000AFE  5160               	movf	LCD_Bitmap@bfOffBits& (0+255),w,b
 13875  000B00  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 13876  000B02  5161               	movf	(LCD_Bitmap@bfOffBits+1)& (0+255),w,b
 13877  000B04  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 13878                           
 13879                           ;libraries/lcd_highlevel.c: 859:   endOfImage = 0;
 13880  000B06  0E00               	movlw	0
 13881  000B08  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 13882  000B0A                     
 13883                           ; BSR set to: 0
 13884                           ;libraries/lcd_highlevel.c: 860:   jumpColor = RGB2LCD(colorTablePtr);
 13885  000B0A  C069  F012         	movff	LCD_Bitmap@colorTablePtr,RGB2LCD@colorTableEntry
 13886  000B0E  C06A  F013         	movff	LCD_Bitmap@colorTablePtr+1,RGB2LCD@colorTableEntry+1
 13887  000B12  EC09  F02A         	call	_RGB2LCD	;wreg free
 13888  000B16  C012  F078         	movff	?_RGB2LCD,LCD_Bitmap@jumpColor
 13889  000B1A  C013  F079         	movff	?_RGB2LCD+1,LCD_Bitmap@jumpColor+1
 13890  000B1E                     
 13891                           ;libraries/lcd_highlevel.c: 862:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13892  000B1E  0E2A               	movlw	42
 13893  000B20  6E80               	movwf	128,c	;volatile
 13894  000B22  988B               	bcf	3979,4,c	;volatile
 13895  000B24  968B               	bcf	3979,3,c	;volatile
 13896  000B26  868B               	bsf	3979,3,c	;volatile
 13897  000B28  888B               	bsf	3979,4,c	;volatile
 13898  000B2A                     
 13899                           ;libraries/lcd_highlevel.c: 863:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13900  000B2A  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 13901  000B2C  6E80               	movwf	128,c	;volatile
 13902  000B2E  968B               	bcf	3979,3,c	;volatile
 13903  000B30  868B               	bsf	3979,3,c	;volatile
 13904  000B32                     
 13905                           ;libraries/lcd_highlevel.c: 864:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13906  000B32  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 13907  000B36  968B               	bcf	3979,3,c	;volatile
 13908  000B38  868B               	bsf	3979,3,c	;volatile
 13909  000B3A                     
 13910                           ;libraries/lcd_highlevel.c: 865:   posX = posX + biWidth-1;
 13911  000B3A  0100               	movlb	0	; () banked
 13912  000B3C  5176               	movf	LCD_Bitmap@biWidth& (0+255),w,b
 13913  000B3E  2429               	addwf	LCD_Bitmap@posX^0,w,c
 13914  000B40  6E2D               	movwf	??_LCD_Bitmap^0,c
 13915  000B42  5177               	movf	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 13916  000B44  202A               	addwfc	(LCD_Bitmap@posX+1)^0,w,c
 13917  000B46  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 13918  000B48  0EFF               	movlw	255
 13919  000B4A  242D               	addwf	??_LCD_Bitmap^0,w,c
 13920  000B4C  6E29               	movwf	LCD_Bitmap@posX^0,c
 13921  000B4E  0EFF               	movlw	255
 13922  000B50  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 13923  000B52  6E2A               	movwf	(LCD_Bitmap@posX+1)^0,c
 13924  000B54                     
 13925                           ; BSR set to: 0
 13926                           ;libraries/lcd_highlevel.c: 866:   PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 13927  000B54  502A               	movf	(LCD_Bitmap@posX+1)^0,w,c
 13928  000B56  6E80               	movwf	128,c	;volatile
 13929  000B58                     
 13930                           ; BSR set to: 0
 13931  000B58  968B               	bcf	3979,3,c	;volatile
 13932  000B5A                     
 13933                           ; BSR set to: 0
 13934  000B5A  868B               	bsf	3979,3,c	;volatile
 13935  000B5C                     
 13936                           ; BSR set to: 0
 13937                           ;libraries/lcd_highlevel.c: 867:   PORTA = posX; LATC3 = 0; LATC3 = 1;;
 13938  000B5C  C029  FF80         	movff	LCD_Bitmap@posX,3968	;volatile
 13939  000B60                     
 13940                           ; BSR set to: 0
 13941  000B60  968B               	bcf	3979,3,c	;volatile
 13942  000B62                     
 13943                           ; BSR set to: 0
 13944  000B62  868B               	bsf	3979,3,c	;volatile
 13945  000B64                     
 13946                           ; BSR set to: 0
 13947                           ;libraries/lcd_highlevel.c: 869:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 13948  000B64  0E2B               	movlw	43
 13949  000B66  6E80               	movwf	128,c	;volatile
 13950  000B68                     
 13951                           ; BSR set to: 0
 13952  000B68  988B               	bcf	3979,4,c	;volatile
 13953  000B6A                     
 13954                           ; BSR set to: 0
 13955  000B6A  968B               	bcf	3979,3,c	;volatile
 13956  000B6C                     
 13957                           ; BSR set to: 0
 13958  000B6C  868B               	bsf	3979,3,c	;volatile
 13959  000B6E                     
 13960                           ; BSR set to: 0
 13961  000B6E  888B               	bsf	3979,4,c	;volatile
 13962  000B70                     
 13963                           ; BSR set to: 0
 13964                           ;libraries/lcd_highlevel.c: 870:   newY = 320 - posY - biHeight;
 13965  000B70  C02B  F02D         	movff	LCD_Bitmap@posY,??_LCD_Bitmap
 13966  000B74  C02C  F02E         	movff	LCD_Bitmap@posY+1,??_LCD_Bitmap+1
 13967  000B78  1E2D               	comf	??_LCD_Bitmap^0,f,c
 13968  000B7A  1E2E               	comf	(??_LCD_Bitmap+1)^0,f,c
 13969  000B7C  4A2D               	infsnz	??_LCD_Bitmap^0,f,c
 13970  000B7E  2A2E               	incf	(??_LCD_Bitmap+1)^0,f,c
 13971  000B80  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 13972  000B82  5E2D               	subwf	??_LCD_Bitmap^0,f,c
 13973  000B84  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 13974  000B86  5A2E               	subwfb	(??_LCD_Bitmap+1)^0,f,c
 13975  000B88  0E40               	movlw	64
 13976  000B8A  242D               	addwf	??_LCD_Bitmap^0,w,c
 13977  000B8C  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 13978  000B8E  0E01               	movlw	1
 13979  000B90  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 13980  000B92  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 13981  000B94                     
 13982                           ; BSR set to: 0
 13983                           ;libraries/lcd_highlevel.c: 871:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 13984  000B94  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 13985  000B96  6E80               	movwf	128,c	;volatile
 13986  000B98                     
 13987                           ; BSR set to: 0
 13988  000B98  968B               	bcf	3979,3,c	;volatile
 13989  000B9A                     
 13990                           ; BSR set to: 0
 13991  000B9A  868B               	bsf	3979,3,c	;volatile
 13992  000B9C                     
 13993                           ; BSR set to: 0
 13994                           ;libraries/lcd_highlevel.c: 872:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 13995  000B9C  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 13996  000BA0                     
 13997                           ; BSR set to: 0
 13998  000BA0  968B               	bcf	3979,3,c	;volatile
 13999  000BA2                     
 14000                           ; BSR set to: 0
 14001  000BA2  868B               	bsf	3979,3,c	;volatile
 14002  000BA4                     
 14003                           ; BSR set to: 0
 14004                           ;libraries/lcd_highlevel.c: 873:   newY = newY + biHeight-1;
 14005  000BA4  516B               	movf	LCD_Bitmap@biHeight& (0+255),w,b
 14006  000BA6  2573               	addwf	LCD_Bitmap@newY& (0+255),w,b
 14007  000BA8  6E2D               	movwf	??_LCD_Bitmap^0,c
 14008  000BAA  516C               	movf	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14009  000BAC  2174               	addwfc	(LCD_Bitmap@newY+1)& (0+255),w,b
 14010  000BAE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14011  000BB0  0EFF               	movlw	255
 14012  000BB2  242D               	addwf	??_LCD_Bitmap^0,w,c
 14013  000BB4  6F73               	movwf	LCD_Bitmap@newY& (0+255),b
 14014  000BB6  0EFF               	movlw	255
 14015  000BB8  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14016  000BBA  6F74               	movwf	(LCD_Bitmap@newY+1)& (0+255),b
 14017  000BBC                     
 14018                           ; BSR set to: 0
 14019                           ;libraries/lcd_highlevel.c: 874:   PORTA = newY>>8; LATC3 = 0; LATC3 = 1;;
 14020  000BBC  5174               	movf	(LCD_Bitmap@newY+1)& (0+255),w,b
 14021  000BBE  6E80               	movwf	128,c	;volatile
 14022  000BC0                     
 14023                           ; BSR set to: 0
 14024  000BC0  968B               	bcf	3979,3,c	;volatile
 14025  000BC2                     
 14026                           ; BSR set to: 0
 14027  000BC2  868B               	bsf	3979,3,c	;volatile
 14028  000BC4                     
 14029                           ; BSR set to: 0
 14030                           ;libraries/lcd_highlevel.c: 875:   PORTA = newY; LATC3 = 0; LATC3 = 1;;
 14031  000BC4  C073  FF80         	movff	LCD_Bitmap@newY,3968	;volatile
 14032  000BC8                     
 14033                           ; BSR set to: 0
 14034  000BC8  968B               	bcf	3979,3,c	;volatile
 14035  000BCA                     
 14036                           ; BSR set to: 0
 14037  000BCA  868B               	bsf	3979,3,c	;volatile
 14038  000BCC                     
 14039                           ; BSR set to: 0
 14040                           ;libraries/lcd_highlevel.c: 877:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14041  000BCC  0E2C               	movlw	44
 14042  000BCE  6E80               	movwf	128,c	;volatile
 14043  000BD0                     
 14044                           ; BSR set to: 0
 14045  000BD0  988B               	bcf	3979,4,c	;volatile
 14046  000BD2                     
 14047                           ; BSR set to: 0
 14048  000BD2  968B               	bcf	3979,3,c	;volatile
 14049  000BD4                     
 14050                           ; BSR set to: 0
 14051  000BD4  868B               	bsf	3979,3,c	;volatile
 14052  000BD6                     
 14053                           ; BSR set to: 0
 14054  000BD6  888B               	bsf	3979,4,c	;volatile
 14055  000BD8                     
 14056                           ; BSR set to: 0
 14057                           ;libraries/lcd_highlevel.c: 878:   curXPos = 0;
 14058  000BD8  0E00               	movlw	0
 14059  000BDA  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14060  000BDC  0E00               	movlw	0
 14061  000BDE  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14062  000BE0                     
 14063                           ; BSR set to: 0
 14064                           ;libraries/lcd_highlevel.c: 879:   curYPos = 0;
 14065  000BE0  0E00               	movlw	0
 14066  000BE2  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14067  000BE4  0E00               	movlw	0
 14068  000BE6  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14069  000BE8                     l9089:
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;libraries/lcd_highlevel.c: 881:   {;libraries/lcd_highlevel.c: 882:     if(bmpPtr[0] ==
      +                           0)
 14073  000BE8  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14074  000BEC  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14075  000BF0                     	if	0	;tblptru may be non-zero
 14076  000BF0                     	endif
 14077  000BF0                     	if	0	;tblptru may be non-zero
 14078  000BF0                     	endif
 14079  000BF0  0008               	tblrd		*
 14080  000BF2  50F5               	movf	tablat,w,c
 14081  000BF4  0900               	iorlw	0
 14082  000BF6  A4D8               	btfss	status,2,c
 14083  000BF8  EF00  F006         	goto	u6451
 14084  000BFC  EF02  F006         	goto	u6450
 14085  000C00                     u6451:
 14086  000C00  EF7D  F007         	goto	l9215
 14087  000C04                     u6450:
 14088  000C04  EF59  F007         	goto	l9213
 14089  000C08                     l9093:
 14090                           
 14091                           ; BSR set to: 0
 14092                           ;libraries/lcd_highlevel.c: 887:           bmpPtr += 2;
 14093  000C08  0E02               	movlw	2
 14094  000C0A  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14095  000C0C  0E00               	movlw	0
 14096  000C0E  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14097  000C10                     
 14098                           ; BSR set to: 0
 14099                           ;libraries/lcd_highlevel.c: 888:           for(i=0;i<biWidth - curXPos;i++)
 14100  000C10  0E00               	movlw	0
 14101  000C12  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14102  000C14  0E00               	movlw	0
 14103  000C16  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14104  000C18  EF18  F006         	goto	l9111
 14105  000C1C                     l9097:
 14106                           
 14107                           ; BSR set to: 0
 14108                           ;libraries/lcd_highlevel.c: 889:           {;libraries/lcd_highlevel.c: 890:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14109  000C1C  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14110  000C1E  6E80               	movwf	128,c	;volatile
 14111  000C20                     
 14112                           ; BSR set to: 0
 14113  000C20  968B               	bcf	3979,3,c	;volatile
 14114  000C22                     
 14115                           ; BSR set to: 0
 14116  000C22  868B               	bsf	3979,3,c	;volatile
 14117  000C24                     
 14118                           ; BSR set to: 0
 14119                           ;libraries/lcd_highlevel.c: 891:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14120  000C24  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14121  000C28                     
 14122                           ; BSR set to: 0
 14123  000C28  968B               	bcf	3979,3,c	;volatile
 14124  000C2A                     
 14125                           ; BSR set to: 0
 14126  000C2A  868B               	bsf	3979,3,c	;volatile
 14127  000C2C                     
 14128                           ; BSR set to: 0
 14129                           ;libraries/lcd_highlevel.c: 892:           }
 14130  000C2C  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14131  000C2E  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14132  000C30                     l9111:
 14133                           
 14134                           ; BSR set to: 0
 14135  000C30  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14136  000C32  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14137  000C34  6E2D               	movwf	??_LCD_Bitmap^0,c
 14138  000C36  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14139  000C38  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14140  000C3A  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14141  000C3C  502D               	movf	??_LCD_Bitmap^0,w,c
 14142  000C3E  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14143  000C40  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14144  000C42  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14145  000C44  A0D8               	btfss	status,0,c
 14146  000C46  EF27  F006         	goto	u6461
 14147  000C4A  EF29  F006         	goto	u6460
 14148  000C4E                     u6461:
 14149  000C4E  EF0E  F006         	goto	l9097
 14150  000C52                     u6460:
 14151  000C52                     
 14152                           ; BSR set to: 0
 14153                           ;libraries/lcd_highlevel.c: 893:           curXPos = 0;
 14154  000C52  0E00               	movlw	0
 14155  000C54  6F70               	movwf	(LCD_Bitmap@curXPos+1)& (0+255),b
 14156  000C56  0E00               	movlw	0
 14157  000C58  6F6F               	movwf	LCD_Bitmap@curXPos& (0+255),b
 14158  000C5A                     
 14159                           ; BSR set to: 0
 14160                           ;libraries/lcd_highlevel.c: 894:           curYPos++;
 14161  000C5A  4B67               	infsnz	LCD_Bitmap@curYPos& (0+255),f,b
 14162  000C5C  2B68               	incf	(LCD_Bitmap@curYPos+1)& (0+255),f,b
 14163                           
 14164                           ;libraries/lcd_highlevel.c: 895:         break;
 14165  000C5E  EFC6  F007         	goto	l9241
 14166  000C62                     l9117:
 14167                           
 14168                           ; BSR set to: 0
 14169                           ;libraries/lcd_highlevel.c: 897:           for(i=0;i<biWidth - curXPos;i++)
 14170  000C62  0E00               	movlw	0
 14171  000C64  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14172  000C66  0E00               	movlw	0
 14173  000C68  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14174  000C6A  EF41  F006         	goto	l9133
 14175  000C6E                     l9119:
 14176                           
 14177                           ; BSR set to: 0
 14178                           ;libraries/lcd_highlevel.c: 898:           {;libraries/lcd_highlevel.c: 899:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14179  000C6E  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14180  000C70  6E80               	movwf	128,c	;volatile
 14181  000C72                     
 14182                           ; BSR set to: 0
 14183  000C72  968B               	bcf	3979,3,c	;volatile
 14184  000C74                     
 14185                           ; BSR set to: 0
 14186  000C74  868B               	bsf	3979,3,c	;volatile
 14187  000C76                     
 14188                           ; BSR set to: 0
 14189                           ;libraries/lcd_highlevel.c: 900:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14190  000C76  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14191  000C7A                     
 14192                           ; BSR set to: 0
 14193  000C7A  968B               	bcf	3979,3,c	;volatile
 14194  000C7C                     
 14195                           ; BSR set to: 0
 14196  000C7C  868B               	bsf	3979,3,c	;volatile
 14197  000C7E                     
 14198                           ; BSR set to: 0
 14199                           ;libraries/lcd_highlevel.c: 901:           }
 14200  000C7E  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14201  000C80  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14202  000C82                     l9133:
 14203                           
 14204                           ; BSR set to: 0
 14205  000C82  516F               	movf	LCD_Bitmap@curXPos& (0+255),w,b
 14206  000C84  5D76               	subwf	LCD_Bitmap@biWidth& (0+255),w,b
 14207  000C86  6E2D               	movwf	??_LCD_Bitmap^0,c
 14208  000C88  5170               	movf	(LCD_Bitmap@curXPos+1)& (0+255),w,b
 14209  000C8A  5977               	subwfb	(LCD_Bitmap@biWidth+1)& (0+255),w,b
 14210  000C8C  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14211  000C8E  502D               	movf	??_LCD_Bitmap^0,w,c
 14212  000C90  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14213  000C92  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14214  000C94  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14215  000C96  A0D8               	btfss	status,0,c
 14216  000C98  EF50  F006         	goto	u6471
 14217  000C9C  EF52  F006         	goto	u6470
 14218  000CA0                     u6471:
 14219  000CA0  EF37  F006         	goto	l9119
 14220  000CA4                     u6470:
 14221  000CA4                     
 14222                           ; BSR set to: 0
 14223                           ;libraries/lcd_highlevel.c: 902:           for(i=0;i<(biHeight - curYPos -1)*biWidth;i++
      +                          )
 14224  000CA4  0E00               	movlw	0
 14225  000CA6  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14226  000CA8  0E00               	movlw	0
 14227  000CAA  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14228  000CAC  EF62  F006         	goto	l9151
 14229  000CB0                     l9137:
 14230                           
 14231                           ; BSR set to: 0
 14232                           ;libraries/lcd_highlevel.c: 903:           {;libraries/lcd_highlevel.c: 904:            
      +                           PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 1;;
 14233  000CB0  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14234  000CB2  6E80               	movwf	128,c	;volatile
 14235  000CB4                     
 14236                           ; BSR set to: 0
 14237  000CB4  968B               	bcf	3979,3,c	;volatile
 14238  000CB6                     
 14239                           ; BSR set to: 0
 14240  000CB6  868B               	bsf	3979,3,c	;volatile
 14241  000CB8                     
 14242                           ; BSR set to: 0
 14243                           ;libraries/lcd_highlevel.c: 905:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14244  000CB8  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14245  000CBC                     
 14246                           ; BSR set to: 0
 14247  000CBC  968B               	bcf	3979,3,c	;volatile
 14248  000CBE                     
 14249                           ; BSR set to: 0
 14250  000CBE  868B               	bsf	3979,3,c	;volatile
 14251  000CC0                     
 14252                           ; BSR set to: 0
 14253                           ;libraries/lcd_highlevel.c: 906:           }
 14254  000CC0  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14255  000CC2  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14256  000CC4                     l9151:
 14257                           
 14258                           ; BSR set to: 0
 14259  000CC4  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14260  000CC6  5D6B               	subwf	LCD_Bitmap@biHeight& (0+255),w,b
 14261  000CC8  6E2D               	movwf	??_LCD_Bitmap^0,c
 14262  000CCA  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14263  000CCC  596C               	subwfb	(LCD_Bitmap@biHeight+1)& (0+255),w,b
 14264  000CCE  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14265  000CD0  0EFF               	movlw	255
 14266  000CD2  242D               	addwf	??_LCD_Bitmap^0,w,c
 14267  000CD4  6E1A               	movwf	___wmul@multiplier^0,c
 14268  000CD6  0EFF               	movlw	255
 14269  000CD8  202E               	addwfc	(??_LCD_Bitmap+1)^0,w,c
 14270  000CDA  6E1B               	movwf	(___wmul@multiplier+1)^0,c
 14271  000CDC  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14272  000CE0  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14273  000CE4  EC90  F031         	call	___wmul	;wreg free
 14274  000CE8  501A               	movf	?___wmul^0,w,c
 14275  000CEA  0100               	movlb	0	; () banked
 14276  000CEC  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14277  000CEE  501B               	movf	(?___wmul+1)^0,w,c
 14278  000CF0  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14279  000CF2  A0D8               	btfss	status,0,c
 14280  000CF4  EF7E  F006         	goto	u6481
 14281  000CF8  EF80  F006         	goto	u6480
 14282  000CFC                     u6481:
 14283  000CFC  EF58  F006         	goto	l9137
 14284  000D00                     u6480:
 14285  000D00                     
 14286                           ; BSR set to: 0
 14287                           ;libraries/lcd_highlevel.c: 907:           endOfImage = 1;
 14288  000D00  0E01               	movlw	1
 14289  000D02  6F64               	movwf	LCD_Bitmap@endOfImage& (0+255),b
 14290                           
 14291                           ;libraries/lcd_highlevel.c: 908:         break;
 14292  000D04  EFC6  F007         	goto	l9241
 14293  000D08                     l9155:
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;libraries/lcd_highlevel.c: 910:           jumpCount = bmpPtr[2] + (bmpPtr[3]*biWidth);
 14297  000D08  0E03               	movlw	3
 14298  000D0A  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14299  000D0C  6E2D               	movwf	??_LCD_Bitmap^0,c
 14300  000D0E  0E00               	movlw	0
 14301  000D10  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14302  000D12  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14303  000D14  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14304  000D18  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14305  000D1C                     	if	0	;tblptru may be non-zero
 14306  000D1C                     	endif
 14307  000D1C                     	if	0	;tblptru may be non-zero
 14308  000D1C                     	endif
 14309  000D1C  0008               	tblrd		*
 14310  000D1E  50F5               	movf	tablat,w,c
 14311  000D20  6E1A               	movwf	___wmul@multiplier^0,c
 14312  000D22  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 14313  000D24  C076  F01C         	movff	LCD_Bitmap@biWidth,___wmul@multiplicand
 14314  000D28  C077  F01D         	movff	LCD_Bitmap@biWidth+1,___wmul@multiplicand+1
 14315  000D2C  EC90  F031         	call	___wmul	;wreg free
 14316  000D30  0E02               	movlw	2
 14317  000D32  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14318  000D34  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14319  000D36  0E00               	movlw	0
 14320  000D38  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14321  000D3A  6E30               	movwf	(??_LCD_Bitmap+3)^0,c
 14322  000D3C  C02F  FFF6         	movff	??_LCD_Bitmap+2,tblptrl
 14323  000D40  C030  FFF7         	movff	??_LCD_Bitmap+3,tblptrh
 14324  000D44                     	if	0	;tblptru may be non-zero
 14325  000D44                     	endif
 14326  000D44                     	if	0	;tblptru may be non-zero
 14327  000D44                     	endif
 14328  000D44  0008               	tblrd		*
 14329  000D46  50F5               	movf	tablat,w,c
 14330  000D48  241A               	addwf	?___wmul^0,w,c
 14331  000D4A  0100               	movlb	0	; () banked
 14332  000D4C  6F65               	movwf	LCD_Bitmap@jumpCount& (0+255),b
 14333  000D4E  0E00               	movlw	0
 14334  000D50  201B               	addwfc	(?___wmul+1)^0,w,c
 14335  000D52  6F66               	movwf	(LCD_Bitmap@jumpCount+1)& (0+255),b
 14336  000D54                     
 14337                           ; BSR set to: 0
 14338                           ;libraries/lcd_highlevel.c: 911:           for(i=0;i<jumpCount;i++)
 14339  000D54  0E00               	movlw	0
 14340  000D56  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14341  000D58  0E00               	movlw	0
 14342  000D5A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14343  000D5C  EFBC  F006         	goto	l9175
 14344  000D60                     l9159:
 14345                           
 14346                           ; BSR set to: 0
 14347                           ;libraries/lcd_highlevel.c: 912:           {;libraries/lcd_highlevel.c: 913:            
      +                           curXPos++;
 14348  000D60  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14349  000D62  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14350  000D64                     
 14351                           ; BSR set to: 0
 14352                           ;libraries/lcd_highlevel.c: 914:             PORTA = jumpColor >> 8; LATC3 = 0; LATC3 = 
      +                          1;;
 14353  000D64  5179               	movf	(LCD_Bitmap@jumpColor+1)& (0+255),w,b
 14354  000D66  6E80               	movwf	128,c	;volatile
 14355  000D68                     
 14356                           ; BSR set to: 0
 14357  000D68  968B               	bcf	3979,3,c	;volatile
 14358  000D6A                     
 14359                           ; BSR set to: 0
 14360  000D6A  868B               	bsf	3979,3,c	;volatile
 14361  000D6C                     
 14362                           ; BSR set to: 0
 14363                           ;libraries/lcd_highlevel.c: 915:             PORTA = jumpColor; LATC3 = 0; LATC3 = 1;;
 14364  000D6C  C078  FF80         	movff	LCD_Bitmap@jumpColor,3968	;volatile
 14365  000D70                     
 14366                           ; BSR set to: 0
 14367  000D70  968B               	bcf	3979,3,c	;volatile
 14368  000D72                     
 14369                           ; BSR set to: 0
 14370  000D72  868B               	bsf	3979,3,c	;volatile
 14371  000D74                     
 14372                           ; BSR set to: 0
 14373                           ;libraries/lcd_highlevel.c: 916:           }
 14374  000D74  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14375  000D76  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14376  000D78                     l9175:
 14377                           
 14378                           ; BSR set to: 0
 14379  000D78  5165               	movf	LCD_Bitmap@jumpCount& (0+255),w,b
 14380  000D7A  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14381  000D7C  5166               	movf	(LCD_Bitmap@jumpCount+1)& (0+255),w,b
 14382  000D7E  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14383  000D80  A0D8               	btfss	status,0,c
 14384  000D82  EFC5  F006         	goto	u6491
 14385  000D86  EFC7  F006         	goto	u6490
 14386  000D8A                     u6491:
 14387  000D8A  EFB0  F006         	goto	l9159
 14388  000D8E                     u6490:
 14389  000D8E                     
 14390                           ; BSR set to: 0
 14391                           ;libraries/lcd_highlevel.c: 917:           curYPos = curYPos + (jumpCount / biWidth);
 14392  000D8E  C065  F020         	movff	LCD_Bitmap@jumpCount,___lwdiv@dividend
 14393  000D92  C066  F021         	movff	LCD_Bitmap@jumpCount+1,___lwdiv@dividend+1
 14394  000D96  C076  F022         	movff	LCD_Bitmap@biWidth,___lwdiv@divisor
 14395  000D9A  C077  F023         	movff	LCD_Bitmap@biWidth+1,___lwdiv@divisor+1
 14396  000D9E  EC51  F02E         	call	___lwdiv	;wreg free
 14397  000DA2  0100               	movlb	0	; () banked
 14398  000DA4  5167               	movf	LCD_Bitmap@curYPos& (0+255),w,b
 14399  000DA6  2420               	addwf	?___lwdiv^0,w,c
 14400  000DA8  6F67               	movwf	LCD_Bitmap@curYPos& (0+255),b
 14401  000DAA  5168               	movf	(LCD_Bitmap@curYPos+1)& (0+255),w,b
 14402  000DAC  2021               	addwfc	(?___lwdiv+1)^0,w,c
 14403  000DAE  6F68               	movwf	(LCD_Bitmap@curYPos+1)& (0+255),b
 14404                           
 14405                           ;libraries/lcd_highlevel.c: 918:           curXPos = curXPos % biWidth;
 14406  000DB0  C06F  F012         	movff	LCD_Bitmap@curXPos,___lwmod@dividend
 14407  000DB4  C070  F013         	movff	LCD_Bitmap@curXPos+1,___lwmod@dividend+1
 14408  000DB8  C076  F014         	movff	LCD_Bitmap@biWidth,___lwmod@divisor
 14409  000DBC  C077  F015         	movff	LCD_Bitmap@biWidth+1,___lwmod@divisor+1
 14410  000DC0  ECF7  F02E         	call	___lwmod	;wreg free
 14411  000DC4  C012  F06F         	movff	?___lwmod,LCD_Bitmap@curXPos
 14412  000DC8  C013  F070         	movff	?___lwmod+1,LCD_Bitmap@curXPos+1
 14413  000DCC                     
 14414                           ;libraries/lcd_highlevel.c: 919:           bmpPtr += 4;
 14415  000DCC  0E04               	movlw	4
 14416  000DCE  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14417  000DD0  0E00               	movlw	0
 14418  000DD2  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14419                           
 14420                           ;libraries/lcd_highlevel.c: 920:         break;
 14421  000DD4  EFC6  F007         	goto	l9241
 14422  000DD8                     l9181:
 14423                           
 14424                           ; BSR set to: 0
 14425                           ;libraries/lcd_highlevel.c: 922:           pixelCount = bmpPtr[1];
 14426  000DD8  0E01               	movlw	1
 14427  000DDA  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14428  000DDC  6E2D               	movwf	??_LCD_Bitmap^0,c
 14429  000DDE  0E00               	movlw	0
 14430  000DE0  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14431  000DE2  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14432  000DE4  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14433  000DE8  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14434  000DEC                     	if	0	;tblptru may be non-zero
 14435  000DEC                     	endif
 14436  000DEC                     	if	0	;tblptru may be non-zero
 14437  000DEC                     	endif
 14438  000DEC  0008               	tblrd		*
 14439  000DEE  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14440  000DF2                     
 14441                           ; BSR set to: 0
 14442                           ;libraries/lcd_highlevel.c: 923:           for(i=0;i < pixelCount;i++)
 14443  000DF2  0E00               	movlw	0
 14444  000DF4  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14445  000DF6  0E00               	movlw	0
 14446  000DF8  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14447  000DFA  EF2D  F007         	goto	l9203
 14448  000DFE                     l9185:
 14449                           
 14450                           ; BSR set to: 0
 14451                           ;libraries/lcd_highlevel.c: 924:           {;libraries/lcd_highlevel.c: 925:            
      +                           color = RGB2LCD(colorTablePtr+(bmpPtr[2+i]*4));
 14452  000DFE  517A               	movf	LCD_Bitmap@i& (0+255),w,b
 14453  000E00  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14454  000E02  6E2D               	movwf	??_LCD_Bitmap^0,c
 14455  000E04  517B               	movf	(LCD_Bitmap@i+1)& (0+255),w,b
 14456  000E06  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14457  000E08  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14458  000E0A  0E02               	movlw	2
 14459  000E0C  262D               	addwf	??_LCD_Bitmap^0,f,c
 14460  000E0E  0E00               	movlw	0
 14461  000E10  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14462  000E12  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14463  000E16  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14464  000E1A                     	if	0	;tblptru may be non-zero
 14465  000E1A                     	endif
 14466  000E1A                     	if	0	;tblptru may be non-zero
 14467  000E1A                     	endif
 14468  000E1A  0008               	tblrd		*
 14469  000E1C  50F5               	movf	tablat,w,c
 14470  000E1E  0D04               	mullw	4
 14471  000E20  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14472  000E24  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14473  000E28  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14474  000E2A  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14475  000E2C  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14476  000E2E  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14477  000E30  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14478  000E32  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14479  000E34  EC09  F02A         	call	_RGB2LCD	;wreg free
 14480  000E38  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14481  000E3C  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14482  000E40                     
 14483                           ;libraries/lcd_highlevel.c: 926:             curXPos++;
 14484  000E40  0100               	movlb	0	; () banked
 14485  000E42  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14486  000E44  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14487  000E46                     
 14488                           ; BSR set to: 0
 14489                           ;libraries/lcd_highlevel.c: 927:             PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14490  000E46  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14491  000E48  6E80               	movwf	128,c	;volatile
 14492  000E4A                     
 14493                           ; BSR set to: 0
 14494  000E4A  968B               	bcf	3979,3,c	;volatile
 14495  000E4C                     
 14496                           ; BSR set to: 0
 14497  000E4C  868B               	bsf	3979,3,c	;volatile
 14498  000E4E                     
 14499                           ; BSR set to: 0
 14500                           ;libraries/lcd_highlevel.c: 928:             PORTA = color; LATC3 = 0; LATC3 = 1;;
 14501  000E4E  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14502  000E52                     
 14503                           ; BSR set to: 0
 14504  000E52  968B               	bcf	3979,3,c	;volatile
 14505  000E54                     
 14506                           ; BSR set to: 0
 14507  000E54  868B               	bsf	3979,3,c	;volatile
 14508  000E56                     
 14509                           ; BSR set to: 0
 14510                           ;libraries/lcd_highlevel.c: 929:           }
 14511  000E56  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14512  000E58  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14513  000E5A                     l9203:
 14514                           
 14515                           ; BSR set to: 0
 14516  000E5A  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14517  000E5C  6E2D               	movwf	??_LCD_Bitmap^0,c
 14518  000E5E  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14519  000E60  502D               	movf	??_LCD_Bitmap^0,w,c
 14520  000E62  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14521  000E64  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14522  000E66  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14523  000E68  A0D8               	btfss	status,0,c
 14524  000E6A  EF39  F007         	goto	u6501
 14525  000E6E  EF3B  F007         	goto	u6500
 14526  000E72                     u6501:
 14527  000E72  EFFF  F006         	goto	l9185
 14528  000E76                     u6500:
 14529  000E76                     
 14530                           ; BSR set to: 0
 14531                           ;libraries/lcd_highlevel.c: 930:           if(pixelCount < 255)
 14532  000E76  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14533  000E78  B4D8               	btfsc	status,2,c
 14534  000E7A  EF41  F007         	goto	u6511
 14535  000E7E  EF43  F007         	goto	u6510
 14536  000E82                     u6511:
 14537  000E82  EF53  F007         	goto	l9209
 14538  000E86                     u6510:
 14539  000E86                     
 14540                           ; BSR set to: 0
 14541                           ;libraries/lcd_highlevel.c: 931:           {;libraries/lcd_highlevel.c: 932:            
      +                           pixelCount = (pixelCount+1) & 0xFE;
 14542  000E86  2975               	incf	LCD_Bitmap@pixelCount& (0+255),w,b
 14543  000E88  0BFE               	andlw	254
 14544  000E8A  6F75               	movwf	LCD_Bitmap@pixelCount& (0+255),b
 14545                           
 14546                           ;libraries/lcd_highlevel.c: 933:             bmpPtr+=pixelCount+2;
 14547  000E8C  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14548  000E8E  6E2D               	movwf	??_LCD_Bitmap^0,c
 14549  000E90  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14550  000E92  0E02               	movlw	2
 14551  000E94  262D               	addwf	??_LCD_Bitmap^0,f,c
 14552  000E96  0E00               	movlw	0
 14553  000E98  222E               	addwfc	(??_LCD_Bitmap+1)^0,f,c
 14554  000E9A  502D               	movf	??_LCD_Bitmap^0,w,c
 14555  000E9C  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14556  000E9E  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14557  000EA0  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14558                           
 14559                           ;libraries/lcd_highlevel.c: 934:           }
 14560  000EA2  EFC6  F007         	goto	l9241
 14561  000EA6                     l9209:
 14562                           
 14563                           ; BSR set to: 0
 14564                           ;libraries/lcd_highlevel.c: 936:           {;libraries/lcd_highlevel.c: 937:            
      +                             bmpPtr += 258;
 14565  000EA6  0E02               	movlw	2
 14566  000EA8  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14567  000EAA  0E01               	movlw	1
 14568  000EAC  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14569  000EAE  EFC6  F007         	goto	l9241
 14570  000EB2                     l9213:
 14571                           
 14572                           ; BSR set to: 0
 14573  000EB2  0E01               	movlw	1
 14574  000EB4  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14575  000EB6  6E2D               	movwf	??_LCD_Bitmap^0,c
 14576  000EB8  0E00               	movlw	0
 14577  000EBA  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14578  000EBC  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14579  000EBE  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14580  000EC2  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14581  000EC6                     	if	0	;tblptru may be non-zero
 14582  000EC6                     	endif
 14583  000EC6                     	if	0	;tblptru may be non-zero
 14584  000EC6                     	endif
 14585  000EC6  0008               	tblrd		*
 14586  000EC8  50F5               	movf	tablat,w,c
 14587  000ECA  6E2F               	movwf	(??_LCD_Bitmap+2)^0,c
 14588  000ECC  6A30               	clrf	(??_LCD_Bitmap+3)^0,c
 14589                           
 14590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14591                           ; Switch size 1, requested type "simple"
 14592                           ; Number of cases is 1, Range of values is 0 to 0
 14593                           ; switch strategies available:
 14594                           ; Name         Instructions Cycles
 14595                           ; simple_byte            4     3 (average)
 14596                           ;	Chosen strategy is simple_byte
 14597  000ECE  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14598  000ED0  0A00               	xorlw	0	; case 0
 14599  000ED2  B4D8               	btfsc	status,2,c
 14600  000ED4  EF6E  F007         	goto	l10713
 14601  000ED8  EFEC  F006         	goto	l9181
 14602  000EDC                     l10713:
 14603                           
 14604                           ; BSR set to: 0
 14605                           ; Switch size 1, requested type "simple"
 14606                           ; Number of cases is 3, Range of values is 0 to 2
 14607                           ; switch strategies available:
 14608                           ; Name         Instructions Cycles
 14609                           ; simple_byte           10     6 (average)
 14610                           ;	Chosen strategy is simple_byte
 14611  000EDC  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14612  000EDE  0A00               	xorlw	0	; case 0
 14613  000EE0  B4D8               	btfsc	status,2,c
 14614  000EE2  EF04  F006         	goto	l9093
 14615  000EE6  0A01               	xorlw	1	; case 1
 14616  000EE8  B4D8               	btfsc	status,2,c
 14617  000EEA  EF31  F006         	goto	l9117
 14618  000EEE  0A03               	xorlw	3	; case 2
 14619  000EF0  B4D8               	btfsc	status,2,c
 14620  000EF2  EF84  F006         	goto	l9155
 14621  000EF6  EFEC  F006         	goto	l9181
 14622  000EFA                     l9215:
 14623                           
 14624                           ; BSR set to: 0
 14625                           ;libraries/lcd_highlevel.c: 943:     {;libraries/lcd_highlevel.c: 944:       pixelCount 
      +                          = bmpPtr[0];
 14626  000EFA  C027  FFF6         	movff	LCD_Bitmap@bmpPtr,tblptrl
 14627  000EFE  C028  FFF7         	movff	LCD_Bitmap@bmpPtr+1,tblptrh
 14628  000F02                     	if	0	;tblptru may be non-zero
 14629  000F02                     	endif
 14630  000F02                     	if	0	;tblptru may be non-zero
 14631  000F02                     	endif
 14632  000F02  0008               	tblrd		*
 14633  000F04  CFF5 F075          	movff	tablat,LCD_Bitmap@pixelCount
 14634  000F08                     
 14635                           ; BSR set to: 0
 14636                           ;libraries/lcd_highlevel.c: 945:       color = RGB2LCD(colorTablePtr+(bmpPtr[1]*4));
 14637  000F08  0E01               	movlw	1
 14638  000F0A  2427               	addwf	LCD_Bitmap@bmpPtr^0,w,c
 14639  000F0C  6E2D               	movwf	??_LCD_Bitmap^0,c
 14640  000F0E  0E00               	movlw	0
 14641  000F10  2028               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,w,c
 14642  000F12  6E2E               	movwf	(??_LCD_Bitmap+1)^0,c
 14643  000F14  C02D  FFF6         	movff	??_LCD_Bitmap,tblptrl
 14644  000F18  C02E  FFF7         	movff	??_LCD_Bitmap+1,tblptrh
 14645  000F1C                     	if	0	;tblptru may be non-zero
 14646  000F1C                     	endif
 14647  000F1C                     	if	0	;tblptru may be non-zero
 14648  000F1C                     	endif
 14649  000F1C  0008               	tblrd		*
 14650  000F1E  50F5               	movf	tablat,w,c
 14651  000F20  0D04               	mullw	4
 14652  000F22  CFF3 F02F          	movff	prodl,??_LCD_Bitmap+2
 14653  000F26  CFF4 F030          	movff	prodh,??_LCD_Bitmap+3
 14654  000F2A  502F               	movf	(??_LCD_Bitmap+2)^0,w,c
 14655  000F2C  2569               	addwf	LCD_Bitmap@colorTablePtr& (0+255),w,b
 14656  000F2E  6E12               	movwf	RGB2LCD@colorTableEntry^0,c
 14657  000F30  5030               	movf	(??_LCD_Bitmap+3)^0,w,c
 14658  000F32  216A               	addwfc	(LCD_Bitmap@colorTablePtr+1)& (0+255),w,b
 14659  000F34  6E13               	movwf	(RGB2LCD@colorTableEntry+1)^0,c
 14660  000F36  EC09  F02A         	call	_RGB2LCD	;wreg free
 14661  000F3A  C012  F06D         	movff	?_RGB2LCD,LCD_Bitmap@color
 14662  000F3E  C013  F06E         	movff	?_RGB2LCD+1,LCD_Bitmap@color+1
 14663  000F42                     
 14664                           ;libraries/lcd_highlevel.c: 946:       for(i=0;i < pixelCount;i++)
 14665  000F42  0E00               	movlw	0
 14666  000F44  0100               	movlb	0	; () banked
 14667  000F46  6F7B               	movwf	(LCD_Bitmap@i+1)& (0+255),b
 14668  000F48  0E00               	movlw	0
 14669  000F4A  6F7A               	movwf	LCD_Bitmap@i& (0+255),b
 14670  000F4C  EFB4  F007         	goto	l9237
 14671  000F50                     l9221:
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;libraries/lcd_highlevel.c: 947:       {;libraries/lcd_highlevel.c: 948:         curXPos
      +                          ++;
 14675  000F50  4B6F               	infsnz	LCD_Bitmap@curXPos& (0+255),f,b
 14676  000F52  2B70               	incf	(LCD_Bitmap@curXPos+1)& (0+255),f,b
 14677  000F54                     
 14678                           ; BSR set to: 0
 14679                           ;libraries/lcd_highlevel.c: 949:         PORTA = color >> 8; LATC3 = 0; LATC3 = 1;;
 14680  000F54  516E               	movf	(LCD_Bitmap@color+1)& (0+255),w,b
 14681  000F56  6E80               	movwf	128,c	;volatile
 14682  000F58                     
 14683                           ; BSR set to: 0
 14684  000F58  968B               	bcf	3979,3,c	;volatile
 14685  000F5A                     
 14686                           ; BSR set to: 0
 14687  000F5A  868B               	bsf	3979,3,c	;volatile
 14688  000F5C                     
 14689                           ; BSR set to: 0
 14690                           ;libraries/lcd_highlevel.c: 950:         PORTA = color; LATC3 = 0; LATC3 = 1;;
 14691  000F5C  C06D  FF80         	movff	LCD_Bitmap@color,3968	;volatile
 14692  000F60                     
 14693                           ; BSR set to: 0
 14694  000F60  968B               	bcf	3979,3,c	;volatile
 14695  000F62                     
 14696                           ; BSR set to: 0
 14697  000F62  868B               	bsf	3979,3,c	;volatile
 14698  000F64                     
 14699                           ; BSR set to: 0
 14700                           ;libraries/lcd_highlevel.c: 951:       }
 14701  000F64  4B7A               	infsnz	LCD_Bitmap@i& (0+255),f,b
 14702  000F66  2B7B               	incf	(LCD_Bitmap@i+1)& (0+255),f,b
 14703  000F68                     l9237:
 14704                           
 14705                           ; BSR set to: 0
 14706  000F68  5175               	movf	LCD_Bitmap@pixelCount& (0+255),w,b
 14707  000F6A  6E2D               	movwf	??_LCD_Bitmap^0,c
 14708  000F6C  6A2E               	clrf	(??_LCD_Bitmap+1)^0,c
 14709  000F6E  502D               	movf	??_LCD_Bitmap^0,w,c
 14710  000F70  5D7A               	subwf	LCD_Bitmap@i& (0+255),w,b
 14711  000F72  502E               	movf	(??_LCD_Bitmap+1)^0,w,c
 14712  000F74  597B               	subwfb	(LCD_Bitmap@i+1)& (0+255),w,b
 14713  000F76  A0D8               	btfss	status,0,c
 14714  000F78  EFC0  F007         	goto	u6521
 14715  000F7C  EFC2  F007         	goto	u6520
 14716  000F80                     u6521:
 14717  000F80  EFA8  F007         	goto	l9221
 14718  000F84                     u6520:
 14719  000F84                     
 14720                           ; BSR set to: 0
 14721                           ;libraries/lcd_highlevel.c: 952:       bmpPtr+=2;
 14722  000F84  0E02               	movlw	2
 14723  000F86  2627               	addwf	LCD_Bitmap@bmpPtr^0,f,c
 14724  000F88  0E00               	movlw	0
 14725  000F8A  2228               	addwfc	(LCD_Bitmap@bmpPtr+1)^0,f,c
 14726  000F8C                     l9241:
 14727                           
 14728                           ;libraries/lcd_highlevel.c: 954:   }while(endOfImage == 0);
 14729  000F8C  0100               	movlb	0	; () banked
 14730  000F8E  5164               	movf	LCD_Bitmap@endOfImage& (0+255),w,b
 14731  000F90  B4D8               	btfsc	status,2,c
 14732  000F92  EFCD  F007         	goto	u6531
 14733  000F96  EFCF  F007         	goto	u6530
 14734  000F9A                     u6531:
 14735  000F9A  EFF4  F005         	goto	l9089
 14736  000F9E                     u6530:
 14737  000F9E                     
 14738                           ; BSR set to: 0
 14739                           ;libraries/lcd_highlevel.c: 955:   PORTA = 0x36; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 14740  000F9E  0E36               	movlw	54
 14741  000FA0  6E80               	movwf	128,c	;volatile
 14742  000FA2                     
 14743                           ; BSR set to: 0
 14744  000FA2  988B               	bcf	3979,4,c	;volatile
 14745  000FA4                     
 14746                           ; BSR set to: 0
 14747  000FA4  968B               	bcf	3979,3,c	;volatile
 14748  000FA6                     
 14749                           ; BSR set to: 0
 14750  000FA6  868B               	bsf	3979,3,c	;volatile
 14751  000FA8                     
 14752                           ; BSR set to: 0
 14753  000FA8  888B               	bsf	3979,4,c	;volatile
 14754                           
 14755                           ;libraries/lcd_highlevel.c: 957:   PORTA = 0b00000000; LATC3 = 0; LATC3 = 1;;
 14756  000FAA  0E00               	movlw	0
 14757  000FAC  6E80               	movwf	128,c	;volatile
 14758  000FAE                     
 14759                           ; BSR set to: 0
 14760  000FAE  968B               	bcf	3979,3,c	;volatile
 14761  000FB0                     
 14762                           ; BSR set to: 0
 14763  000FB0  868B               	bsf	3979,3,c	;volatile
 14764  000FB2                     l329:
 14765                           
 14766                           ; BSR set to: 0
 14767  000FB2  0012               	return		;funcret
 14768  000FB4                     __end_of_LCD_Bitmap:
 14769                           	callstack 0
 14770                           
 14771 ;; *************** function ___lwmod *****************
 14772 ;; Defined at:
 14773 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 14774 ;; Parameters:    Size  Location     Type
 14775 ;;  dividend        2   17[COMRAM] unsigned int 
 14776 ;;  divisor         2   19[COMRAM] unsigned int 
 14777 ;; Auto vars:     Size  Location     Type
 14778 ;;  counter         1   21[COMRAM] unsigned char 
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  2   17[COMRAM] unsigned int 
 14781 ;; Registers used:
 14782 ;;		wreg, status,2, status,0
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14788 ;;      Params:         4       0       0       0       0       0       0
 14789 ;;      Locals:         1       0       0       0       0       0       0
 14790 ;;      Temps:          0       0       0       0       0       0       0
 14791 ;;      Totals:         5       0       0       0       0       0       0
 14792 ;;Total ram usage:        5 bytes
 14793 ;; Hardware stack levels used: 1
 14794 ;; Hardware stack levels required when called: 4
 14795 ;; This function calls:
 14796 ;;		Nothing
 14797 ;; This function is called by:
 14798 ;;		_LCD_Bitmap
 14799 ;; This function uses a non-reentrant model
 14800 ;;
 14801                           
 14802                           	psect	text52
 14803  005DEE                     __ptext52:
 14804                           	callstack 0
 14805  005DEE                     ___lwmod:
 14806                           	callstack 19
 14807  005DEE  5014               	movf	___lwmod@divisor^0,w,c
 14808  005DF0  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
 14809  005DF2  B4D8               	btfsc	status,2,c
 14810  005DF4  EFFE  F02E         	goto	u6181
 14811  005DF8  EF00  F02F         	goto	u6180
 14812  005DFC                     u6181:
 14813  005DFC  EF24  F02F         	goto	l1312
 14814  005E00                     u6180:
 14815  005E00  0E01               	movlw	1
 14816  005E02  6E16               	movwf	___lwmod@counter^0,c
 14817  005E04  EF08  F02F         	goto	l8673
 14818  005E08                     l8671:
 14819  005E08  90D8               	bcf	status,0,c
 14820  005E0A  3614               	rlcf	___lwmod@divisor^0,f,c
 14821  005E0C  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
 14822  005E0E  2A16               	incf	___lwmod@counter^0,f,c
 14823  005E10                     l8673:
 14824  005E10  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
 14825  005E12  EF0D  F02F         	goto	u6191
 14826  005E16  EF0F  F02F         	goto	u6190
 14827  005E1A                     u6191:
 14828  005E1A  EF04  F02F         	goto	l8671
 14829  005E1E                     u6190:
 14830  005E1E                     l8675:
 14831  005E1E  5014               	movf	___lwmod@divisor^0,w,c
 14832  005E20  5C12               	subwf	___lwmod@dividend^0,w,c
 14833  005E22  5015               	movf	(___lwmod@divisor+1)^0,w,c
 14834  005E24  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
 14835  005E26  A0D8               	btfss	status,0,c
 14836  005E28  EF18  F02F         	goto	u6201
 14837  005E2C  EF1A  F02F         	goto	u6200
 14838  005E30                     u6201:
 14839  005E30  EF1E  F02F         	goto	l8679
 14840  005E34                     u6200:
 14841  005E34  5014               	movf	___lwmod@divisor^0,w,c
 14842  005E36  5E12               	subwf	___lwmod@dividend^0,f,c
 14843  005E38  5015               	movf	(___lwmod@divisor+1)^0,w,c
 14844  005E3A  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
 14845  005E3C                     l8679:
 14846  005E3C  90D8               	bcf	status,0,c
 14847  005E3E  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
 14848  005E40  3214               	rrcf	___lwmod@divisor^0,f,c
 14849  005E42  2E16               	decfsz	___lwmod@counter^0,f,c
 14850  005E44  EF0F  F02F         	goto	l8675
 14851  005E48                     l1312:
 14852  005E48  C012  F012         	movff	___lwmod@dividend,?___lwmod
 14853  005E4C  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
 14854  005E50  0012               	return		;funcret
 14855  005E52                     __end_of___lwmod:
 14856                           	callstack 0
 14857                           
 14858 ;; *************** function ___lwdiv *****************
 14859 ;; Defined at:
 14860 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;  dividend        2   31[COMRAM] unsigned int 
 14863 ;;  divisor         2   33[COMRAM] unsigned int 
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;  quotient        2   36[COMRAM] unsigned int 
 14866 ;;  counter         1   35[COMRAM] unsigned char 
 14867 ;; Return value:  Size  Location     Type
 14868 ;;                  2   31[COMRAM] unsigned int 
 14869 ;; Registers used:
 14870 ;;		wreg, status,2, status,0
 14871 ;; Tracked objects:
 14872 ;;		On entry : 0/0
 14873 ;;		On exit  : 0/0
 14874 ;;		Unchanged: 0/0
 14875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14876 ;;      Params:         4       0       0       0       0       0       0
 14877 ;;      Locals:         3       0       0       0       0       0       0
 14878 ;;      Temps:          0       0       0       0       0       0       0
 14879 ;;      Totals:         7       0       0       0       0       0       0
 14880 ;;Total ram usage:        7 bytes
 14881 ;; Hardware stack levels used: 1
 14882 ;; Hardware stack levels required when called: 4
 14883 ;; This function calls:
 14884 ;;		Nothing
 14885 ;; This function is called by:
 14886 ;;		_LCD_SliderUpdate
 14887 ;;		_LCD_Bitmap
 14888 ;; This function uses a non-reentrant model
 14889 ;;
 14890                           
 14891                           	psect	text53
 14892  005CA2                     __ptext53:
 14893                           	callstack 0
 14894  005CA2                     ___lwdiv:
 14895                           	callstack 21
 14896  005CA2  0E00               	movlw	0
 14897  005CA4  6E26               	movwf	(___lwdiv@quotient+1)^0,c
 14898  005CA6  0E00               	movlw	0
 14899  005CA8  6E25               	movwf	___lwdiv@quotient^0,c
 14900  005CAA  5022               	movf	___lwdiv@divisor^0,w,c
 14901  005CAC  1023               	iorwf	(___lwdiv@divisor+1)^0,w,c
 14902  005CAE  B4D8               	btfsc	status,2,c
 14903  005CB0  EF5C  F02E         	goto	u6151
 14904  005CB4  EF5E  F02E         	goto	u6150
 14905  005CB8                     u6151:
 14906  005CB8  EF86  F02E         	goto	l1302
 14907  005CBC                     u6150:
 14908  005CBC  0E01               	movlw	1
 14909  005CBE  6E24               	movwf	___lwdiv@counter^0,c
 14910  005CC0  EF66  F02E         	goto	l8653
 14911  005CC4                     l8651:
 14912  005CC4  90D8               	bcf	status,0,c
 14913  005CC6  3622               	rlcf	___lwdiv@divisor^0,f,c
 14914  005CC8  3623               	rlcf	(___lwdiv@divisor+1)^0,f,c
 14915  005CCA  2A24               	incf	___lwdiv@counter^0,f,c
 14916  005CCC                     l8653:
 14917  005CCC  AE23               	btfss	(___lwdiv@divisor+1)^0,7,c
 14918  005CCE  EF6B  F02E         	goto	u6161
 14919  005CD2  EF6D  F02E         	goto	u6160
 14920  005CD6                     u6161:
 14921  005CD6  EF62  F02E         	goto	l8651
 14922  005CDA                     u6160:
 14923  005CDA                     l8655:
 14924  005CDA  90D8               	bcf	status,0,c
 14925  005CDC  3625               	rlcf	___lwdiv@quotient^0,f,c
 14926  005CDE  3626               	rlcf	(___lwdiv@quotient+1)^0,f,c
 14927  005CE0  5022               	movf	___lwdiv@divisor^0,w,c
 14928  005CE2  5C20               	subwf	___lwdiv@dividend^0,w,c
 14929  005CE4  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 14930  005CE6  5821               	subwfb	(___lwdiv@dividend+1)^0,w,c
 14931  005CE8  A0D8               	btfss	status,0,c
 14932  005CEA  EF79  F02E         	goto	u6171
 14933  005CEE  EF7B  F02E         	goto	u6170
 14934  005CF2                     u6171:
 14935  005CF2  EF80  F02E         	goto	l8663
 14936  005CF6                     u6170:
 14937  005CF6  5022               	movf	___lwdiv@divisor^0,w,c
 14938  005CF8  5E20               	subwf	___lwdiv@dividend^0,f,c
 14939  005CFA  5023               	movf	(___lwdiv@divisor+1)^0,w,c
 14940  005CFC  5A21               	subwfb	(___lwdiv@dividend+1)^0,f,c
 14941  005CFE  8025               	bsf	___lwdiv@quotient^0,0,c
 14942  005D00                     l8663:
 14943  005D00  90D8               	bcf	status,0,c
 14944  005D02  3223               	rrcf	(___lwdiv@divisor+1)^0,f,c
 14945  005D04  3222               	rrcf	___lwdiv@divisor^0,f,c
 14946  005D06  2E24               	decfsz	___lwdiv@counter^0,f,c
 14947  005D08  EF6D  F02E         	goto	l8655
 14948  005D0C                     l1302:
 14949  005D0C  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 14950  005D10  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14951  005D14  0012               	return		;funcret
 14952  005D16                     __end_of___lwdiv:
 14953                           	callstack 0
 14954                           
 14955 ;; *************** function _RGB2LCD *****************
 14956 ;; Defined at:
 14957 ;;		line 799 in file "libraries/lcd_highlevel.c"
 14958 ;; Parameters:    Size  Location     Type
 14959 ;;  colorTableEn    2   17[COMRAM] PTR unsigned char 
 14960 ;;		 -> STR_10(9), STR_9(4), STR_8(4), STR_7(8), 
 14961 ;;		 -> STR_6(9), STR_5(9), STR_4(11), 
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;  color           2   29[COMRAM] unsigned short 
 14964 ;;  blue            2   27[COMRAM] unsigned short 
 14965 ;;  green           2   25[COMRAM] unsigned short 
 14966 ;;  red             2   23[COMRAM] unsigned short 
 14967 ;; Return value:  Size  Location     Type
 14968 ;;                  2   17[COMRAM] unsigned short 
 14969 ;; Registers used:
 14970 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 14971 ;; Tracked objects:
 14972 ;;		On entry : 0/0
 14973 ;;		On exit  : 0/0
 14974 ;;		Unchanged: 0/0
 14975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14976 ;;      Params:         2       0       0       0       0       0       0
 14977 ;;      Locals:         8       0       0       0       0       0       0
 14978 ;;      Temps:          4       0       0       0       0       0       0
 14979 ;;      Totals:        14       0       0       0       0       0       0
 14980 ;;Total ram usage:       14 bytes
 14981 ;; Hardware stack levels used: 1
 14982 ;; Hardware stack levels required when called: 4
 14983 ;; This function calls:
 14984 ;;		Nothing
 14985 ;; This function is called by:
 14986 ;;		_LCD_Bitmap
 14987 ;; This function uses a non-reentrant model
 14988 ;;
 14989                           
 14990                           	psect	text54
 14991  005412                     __ptext54:
 14992                           	callstack 0
 14993  005412                     _RGB2LCD:
 14994                           	callstack 19
 14995  005412                     
 14996                           ;libraries/lcd_highlevel.c: 799: uint16_t RGB2LCD(uint8_t * colorTableEntry);libraries/l
      +                          cd_highlevel.c: 800: {;libraries/lcd_highlevel.c: 801:     uint16_t red,green,blue;;libr
      +                          aries/lcd_highlevel.c: 802:     uint16_t color;;libraries/lcd_highlevel.c: 804:     red 
      +                          = colorTableEntry[2] >> 3;
 14997  005412  0E02               	movlw	2
 14998  005414  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 14999  005416  6E14               	movwf	??_RGB2LCD^0,c
 15000  005418  0E00               	movlw	0
 15001  00541A  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15002  00541C  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15003  00541E  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15004  005422  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15005  005426                     	if	0	;tblptru may be non-zero
 15006  005426                     	endif
 15007  005426                     	if	0	;tblptru may be non-zero
 15008  005426                     	endif
 15009  005426  0008               	tblrd		*
 15010  005428  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15011  00542C  90D8               	bcf	status,0,c
 15012  00542E  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15013  005430  90D8               	bcf	status,0,c
 15014  005432  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15015  005434  90D8               	bcf	status,0,c
 15016  005436  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15017  005438  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15018  00543A  6E18               	movwf	RGB2LCD@red^0,c
 15019  00543C  6A19               	clrf	(RGB2LCD@red+1)^0,c
 15020                           
 15021                           ;libraries/lcd_highlevel.c: 805:     green = colorTableEntry[1] >> 2;
 15022  00543E  0E01               	movlw	1
 15023  005440  2412               	addwf	RGB2LCD@colorTableEntry^0,w,c
 15024  005442  6E14               	movwf	??_RGB2LCD^0,c
 15025  005444  0E00               	movlw	0
 15026  005446  2013               	addwfc	(RGB2LCD@colorTableEntry+1)^0,w,c
 15027  005448  6E15               	movwf	(??_RGB2LCD+1)^0,c
 15028  00544A  C014  FFF6         	movff	??_RGB2LCD,tblptrl
 15029  00544E  C015  FFF7         	movff	??_RGB2LCD+1,tblptrh
 15030  005452                     	if	0	;tblptru may be non-zero
 15031  005452                     	endif
 15032  005452                     	if	0	;tblptru may be non-zero
 15033  005452                     	endif
 15034  005452  0008               	tblrd		*
 15035  005454  CFF5 F016          	movff	tablat,??_RGB2LCD+2
 15036  005458  90D8               	bcf	status,0,c
 15037  00545A  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15038  00545C  90D8               	bcf	status,0,c
 15039  00545E  3216               	rrcf	(??_RGB2LCD+2)^0,f,c
 15040  005460  5016               	movf	(??_RGB2LCD+2)^0,w,c
 15041  005462  6E1A               	movwf	RGB2LCD@green^0,c
 15042  005464  6A1B               	clrf	(RGB2LCD@green+1)^0,c
 15043                           
 15044                           ;libraries/lcd_highlevel.c: 806:     blue = colorTableEntry[0] >> 3;
 15045  005466  C012  FFF6         	movff	RGB2LCD@colorTableEntry,tblptrl
 15046  00546A  C013  FFF7         	movff	RGB2LCD@colorTableEntry+1,tblptrh
 15047  00546E                     	if	0	;tblptru may be non-zero
 15048  00546E                     	endif
 15049  00546E                     	if	0	;tblptru may be non-zero
 15050  00546E                     	endif
 15051  00546E  0008               	tblrd		*
 15052  005470  CFF5 F014          	movff	tablat,??_RGB2LCD
 15053  005474  90D8               	bcf	status,0,c
 15054  005476  3214               	rrcf	??_RGB2LCD^0,f,c
 15055  005478  90D8               	bcf	status,0,c
 15056  00547A  3214               	rrcf	??_RGB2LCD^0,f,c
 15057  00547C  90D8               	bcf	status,0,c
 15058  00547E  3214               	rrcf	??_RGB2LCD^0,f,c
 15059  005480  5014               	movf	??_RGB2LCD^0,w,c
 15060  005482  6E1C               	movwf	RGB2LCD@blue^0,c
 15061  005484  6A1D               	clrf	(RGB2LCD@blue+1)^0,c
 15062  005486                     
 15063                           ;libraries/lcd_highlevel.c: 807:     color = (red << 11) | (green << 5) | (blue << 0);
 15064  005486  C01A  F014         	movff	RGB2LCD@green,??_RGB2LCD
 15065  00548A  C01B  F015         	movff	RGB2LCD@green+1,??_RGB2LCD+1
 15066  00548E  0E05               	movlw	5
 15067  005490                     u5995:
 15068  005490  90D8               	bcf	status,0,c
 15069  005492  3614               	rlcf	??_RGB2LCD^0,f,c
 15070  005494  3615               	rlcf	(??_RGB2LCD+1)^0,f,c
 15071  005496  2EE8               	decfsz	wreg,f,c
 15072  005498  EF48  F02A         	goto	u5995
 15073  00549C  C018  F016         	movff	RGB2LCD@red,??_RGB2LCD+2
 15074  0054A0  C019  F017         	movff	RGB2LCD@red+1,??_RGB2LCD+3
 15075  0054A4  0E0B               	movlw	11
 15076  0054A6                     u6005:
 15077  0054A6  90D8               	bcf	status,0,c
 15078  0054A8  3616               	rlcf	(??_RGB2LCD+2)^0,f,c
 15079  0054AA  3617               	rlcf	(??_RGB2LCD+3)^0,f,c
 15080  0054AC  2EE8               	decfsz	wreg,f,c
 15081  0054AE  EF53  F02A         	goto	u6005
 15082  0054B2  5014               	movf	??_RGB2LCD^0,w,c
 15083  0054B4  1216               	iorwf	(??_RGB2LCD+2)^0,f,c
 15084  0054B6  5015               	movf	(??_RGB2LCD+1)^0,w,c
 15085  0054B8  1217               	iorwf	(??_RGB2LCD+3)^0,f,c
 15086  0054BA  501C               	movf	RGB2LCD@blue^0,w,c
 15087  0054BC  1016               	iorwf	(??_RGB2LCD+2)^0,w,c
 15088  0054BE  6E1E               	movwf	RGB2LCD@color^0,c
 15089  0054C0  501D               	movf	(RGB2LCD@blue+1)^0,w,c
 15090  0054C2  1017               	iorwf	(??_RGB2LCD+3)^0,w,c
 15091  0054C4  6E1F               	movwf	(RGB2LCD@color+1)^0,c
 15092  0054C6                     
 15093                           ;libraries/lcd_highlevel.c: 808:     return color;
 15094  0054C6  C01E  F012         	movff	RGB2LCD@color,?_RGB2LCD
 15095  0054CA  C01F  F013         	movff	RGB2LCD@color+1,?_RGB2LCD+1
 15096  0054CE  0012               	return		;funcret
 15097  0054D0                     __end_of_RGB2LCD:
 15098                           	callstack 0
 15099                           
 15100 ;; *************** function _Menu_inGameDraw *****************
 15101 ;; Defined at:
 15102 ;;		line 31 in file "class/menu.c"
 15103 ;; Parameters:    Size  Location     Type
 15104 ;;  g               2   52[BANK0 ] PTR struct GameParameter
 15105 ;;		 -> g1(239), 
 15106 ;; Auto vars:     Size  Location     Type
 15107 ;;		None
 15108 ;; Return value:  Size  Location     Type
 15109 ;;                  1    wreg      void 
 15110 ;; Registers used:
 15111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15112 ;; Tracked objects:
 15113 ;;		On entry : 0/0
 15114 ;;		On exit  : 0/0
 15115 ;;		Unchanged: 0/0
 15116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15117 ;;      Params:         0       2       0       0       0       0       0
 15118 ;;      Locals:         0       0       0       0       0       0       0
 15119 ;;      Temps:          0       0       0       0       0       0       0
 15120 ;;      Totals:         0       2       0       0       0       0       0
 15121 ;;Total ram usage:        2 bytes
 15122 ;; Hardware stack levels used: 1
 15123 ;; Hardware stack levels required when called: 13
 15124 ;; This function calls:
 15125 ;;		_Ball_draw
 15126 ;;		_LCD_Fill
 15127 ;;		_Paddle_draw
 15128 ;;		_Score_draw
 15129 ;; This function is called by:
 15130 ;;		_displaySM
 15131 ;; This function uses a non-reentrant model
 15132 ;;
 15133                           
 15134                           	psect	text55
 15135  005FCE                     __ptext55:
 15136                           	callstack 0
 15137  005FCE                     _Menu_inGameDraw:
 15138                           	callstack 15
 15139  005FCE                     
 15140                           ;class/menu.c: 31: void Menu_inGameDraw(GameParameters* g);class/menu.c: 32: {;class/men
      +                          u.c: 33:     LCD_Fill(0b0000000000000000);
 15141  005FCE  0E00               	movlw	0
 15142  005FD0  6E13               	movwf	(LCD_Fill@color+1)^0,c
 15143  005FD2  0E00               	movlw	0
 15144  005FD4  6E12               	movwf	LCD_Fill@color^0,c
 15145  005FD6  ECA8  F029         	call	_LCD_Fill	;wreg free
 15146  005FDA                     
 15147                           ;class/menu.c: 34:     Score_draw(&g->s1);
 15148  005FDA  0EE9               	movlw	233
 15149  005FDC  0100               	movlb	0	; () banked
 15150  005FDE  2594               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15151  005FE0  6F92               	movwf	Score_draw@s& (0+255),b
 15152  005FE2  0E00               	movlw	0
 15153  005FE4  2195               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15154  005FE6  6F93               	movwf	(Score_draw@s+1)& (0+255),b
 15155  005FE8  ECB3  F027         	call	_Score_draw	;wreg free
 15156  005FEC                     
 15157                           ;class/menu.c: 35:     Paddle_draw(&g->p1);
 15158  005FEC  0ED5               	movlw	213
 15159  005FEE  0100               	movlb	0	; () banked
 15160  005FF0  2594               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15161  005FF2  6E25               	movwf	Paddle_draw@p^0,c
 15162  005FF4  0E00               	movlw	0
 15163  005FF6  2195               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15164  005FF8  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15165  005FFA  ECC4  F021         	call	_Paddle_draw	;wreg free
 15166  005FFE                     
 15167                           ;class/menu.c: 36:     Paddle_draw(&g->p2);
 15168  005FFE  0EDF               	movlw	223
 15169  006000  0100               	movlb	0	; () banked
 15170  006002  2594               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15171  006004  6E25               	movwf	Paddle_draw@p^0,c
 15172  006006  0E00               	movlw	0
 15173  006008  2195               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15174  00600A  6E26               	movwf	(Paddle_draw@p+1)^0,c
 15175  00600C  ECC4  F021         	call	_Paddle_draw	;wreg free
 15176  006010                     
 15177                           ;class/menu.c: 37:     Ball_draw(&g->b);
 15178  006010  0EC9               	movlw	201
 15179  006012  0100               	movlb	0	; () banked
 15180  006014  2594               	addwf	Menu_inGameDraw@g& (0+255),w,b
 15181  006016  6E25               	movwf	Ball_draw@b^0,c
 15182  006018  0E00               	movlw	0
 15183  00601A  2195               	addwfc	(Menu_inGameDraw@g+1)& (0+255),w,b
 15184  00601C  6E26               	movwf	(Ball_draw@b+1)^0,c
 15185  00601E  EC78  F020         	call	_Ball_draw	;wreg free
 15186  006022  0012               	return		;funcret
 15187  006024                     __end_of_Menu_inGameDraw:
 15188                           	callstack 0
 15189                           
 15190 ;; *************** function _Score_draw *****************
 15191 ;; Defined at:
 15192 ;;		line 16 in file "class/score.c"
 15193 ;; Parameters:    Size  Location     Type
 15194 ;;  s               2   50[BANK0 ] PTR struct Score
 15195 ;;		 -> g1(239), 
 15196 ;; Auto vars:     Size  Location     Type
 15197 ;;		None
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  1    wreg      void 
 15200 ;; Registers used:
 15201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15202 ;; Tracked objects:
 15203 ;;		On entry : 0/0
 15204 ;;		On exit  : 0/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15207 ;;      Params:         0       2       0       0       0       0       0
 15208 ;;      Locals:         0       0       0       0       0       0       0
 15209 ;;      Temps:          0       0       0       0       0       0       0
 15210 ;;      Totals:         0       2       0       0       0       0       0
 15211 ;;Total ram usage:        2 bytes
 15212 ;; Hardware stack levels used: 1
 15213 ;; Hardware stack levels required when called: 12
 15214 ;; This function calls:
 15215 ;;		_LCD_DrawText
 15216 ;;		_sprintf
 15217 ;; This function is called by:
 15218 ;;		_Menu_inGameDraw
 15219 ;;		_displayController
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text56
 15224  004F66                     __ptext56:
 15225                           	callstack 0
 15226  004F66                     _Score_draw:
 15227                           	callstack 14
 15228  004F66                     
 15229                           ;class/score.c: 16: void Score_draw(struct Score* s);class/score.c: 17: {;class/score.c:
      +                           18:     sprintf(s->str,"%d",s->homeScore);
 15230  004F66  0E04               	movlw	4
 15231  004F68  0100               	movlb	0	; () banked
 15232  004F6A  2592               	addwf	Score_draw@s& (0+255),w,b
 15233  004F6C  6F84               	movwf	sprintf@s& (0+255),b
 15234  004F6E  0E00               	movlw	0
 15235  004F70  2193               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15236  004F72  6F85               	movwf	(sprintf@s+1)& (0+255),b
 15237  004F74  0EEE               	movlw	low (STR_15+3)
 15238  004F76  6F86               	movwf	sprintf@fmt& (0+255),b
 15239  004F78  0E7F               	movlw	high (STR_15+3)
 15240  004F7A  6F87               	movwf	(sprintf@fmt+1)& (0+255),b
 15241  004F7C  C092  FFD9         	movff	Score_draw@s,fsr2l
 15242  004F80  C093  FFDA         	movff	Score_draw@s+1,fsr2h
 15243  004F84  CFDE F088          	movff	postinc2,?_sprintf+4
 15244  004F88  CFDD F089          	movff	postdec2,?_sprintf+5
 15245  004F8C  EC12  F030         	call	_sprintf	;wreg free
 15246  004F90                     
 15247                           ;class/score.c: 19:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_LEFT,0,0,0b11111
      +                          11111111111,0b0000000000000000);
 15248  004F90  0E04               	movlw	4
 15249  004F92  0100               	movlb	0	; () banked
 15250  004F94  2592               	addwf	Score_draw@s& (0+255),w,b
 15251  004F96  6E20               	movwf	LCD_DrawText@msg^0,c
 15252  004F98  0E00               	movlw	0
 15253  004F9A  2193               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15254  004F9C  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15255  004F9E  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 15256  004FA0  6E22               	movwf	LCD_DrawText@font^0,c
 15257  004FA2  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15258  004FA4  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15259  004FA6  0E00               	movlw	0
 15260  004FA8  6E24               	movwf	LCD_DrawText@align^0,c
 15261  004FAA  0E00               	movlw	0
 15262  004FAC  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15263  004FAE  0E00               	movlw	0
 15264  004FB0  6E25               	movwf	LCD_DrawText@posX^0,c
 15265  004FB2  0E00               	movlw	0
 15266  004FB4  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15267  004FB6  0E00               	movlw	0
 15268  004FB8  6E27               	movwf	LCD_DrawText@posY^0,c
 15269  004FBA  0EFF               	movlw	255
 15270  004FBC  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15271  004FBE  6829               	setf	LCD_DrawText@color^0,c
 15272  004FC0  0E00               	movlw	0
 15273  004FC2  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15274  004FC4  0E00               	movlw	0
 15275  004FC6  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15276  004FC8  EC0B  F00F         	call	_LCD_DrawText	;wreg free
 15277  004FCC                     
 15278                           ;class/score.c: 20:     sprintf(s->str,"%d",s->awayScore);
 15279  004FCC  0E04               	movlw	4
 15280  004FCE  0100               	movlb	0	; () banked
 15281  004FD0  2592               	addwf	Score_draw@s& (0+255),w,b
 15282  004FD2  6F84               	movwf	sprintf@s& (0+255),b
 15283  004FD4  0E00               	movlw	0
 15284  004FD6  2193               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15285  004FD8  6F85               	movwf	(sprintf@s+1)& (0+255),b
 15286  004FDA  0EEE               	movlw	low (STR_15+3)
 15287  004FDC  6F86               	movwf	sprintf@fmt& (0+255),b
 15288  004FDE  0E7F               	movlw	high (STR_15+3)
 15289  004FE0  6F87               	movwf	(sprintf@fmt+1)& (0+255),b
 15290  004FE2  EE20 F002          	lfsr	2,2
 15291  004FE6  5192               	movf	Score_draw@s& (0+255),w,b
 15292  004FE8  26D9               	addwf	fsr2l,f,c
 15293  004FEA  5193               	movf	(Score_draw@s+1)& (0+255),w,b
 15294  004FEC  22DA               	addwfc	fsr2h,f,c
 15295  004FEE  CFDE F088          	movff	postinc2,?_sprintf+4
 15296  004FF2  CFDD F089          	movff	postdec2,?_sprintf+5
 15297  004FF6  EC12  F030         	call	_sprintf	;wreg free
 15298                           
 15299                           ;class/score.c: 21:     LCD_DrawText(s->str,&arialNarrow_12ptFontInfo,A_RIGHT,239,0,0b11
      +                          11111111111111,0b0000000000000000);
 15300  004FFA  0E04               	movlw	4
 15301  004FFC  0100               	movlb	0	; () banked
 15302  004FFE  2592               	addwf	Score_draw@s& (0+255),w,b
 15303  005000  6E20               	movwf	LCD_DrawText@msg^0,c
 15304  005002  0E00               	movlw	0
 15305  005004  2193               	addwfc	(Score_draw@s+1)& (0+255),w,b
 15306  005006  6E21               	movwf	(LCD_DrawText@msg+1)^0,c
 15307  005008  0E7F               	movlw	low _arialNarrow_12ptFontInfo
 15308  00500A  6E22               	movwf	LCD_DrawText@font^0,c
 15309  00500C  0E7F               	movlw	high _arialNarrow_12ptFontInfo
 15310  00500E  6E23               	movwf	(LCD_DrawText@font+1)^0,c
 15311  005010  0E01               	movlw	1
 15312  005012  6E24               	movwf	LCD_DrawText@align^0,c
 15313  005014  0E00               	movlw	0
 15314  005016  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 15315  005018  0EEF               	movlw	239
 15316  00501A  6E25               	movwf	LCD_DrawText@posX^0,c
 15317  00501C  0E00               	movlw	0
 15318  00501E  6E28               	movwf	(LCD_DrawText@posY+1)^0,c
 15319  005020  0E00               	movlw	0
 15320  005022  6E27               	movwf	LCD_DrawText@posY^0,c
 15321  005024  0EFF               	movlw	255
 15322  005026  6E2A               	movwf	(LCD_DrawText@color+1)^0,c
 15323  005028  6829               	setf	LCD_DrawText@color^0,c
 15324  00502A  0E00               	movlw	0
 15325  00502C  6E2C               	movwf	(LCD_DrawText@bg_color+1)^0,c
 15326  00502E  0E00               	movlw	0
 15327  005030  6E2B               	movwf	LCD_DrawText@bg_color^0,c
 15328  005032  EC0B  F00F         	call	_LCD_DrawText	;wreg free
 15329  005036  0012               	return		;funcret
 15330  005038                     __end_of_Score_draw:
 15331                           	callstack 0
 15332                           
 15333 ;; *************** function _sprintf *****************
 15334 ;; Defined at:
 15335 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;  s               2   36[BANK0 ] PTR unsigned char 
 15338 ;;		 -> touchScreenController@s(20), g1(239), 
 15339 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
 15340 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15341 ;; Auto vars:     Size  Location     Type
 15342 ;;  f               6   44[BANK0 ] struct _IO_FILE
 15343 ;;  ap              2   42[BANK0 ] PTR void [1]
 15344 ;;		 -> ?_sprintf(2), 
 15345 ;;  ret             2    0        int 
 15346 ;; Return value:  Size  Location     Type
 15347 ;;                  2   36[BANK0 ] int 
 15348 ;; Registers used:
 15349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15350 ;; Tracked objects:
 15351 ;;		On entry : 0/0
 15352 ;;		On exit  : 0/0
 15353 ;;		Unchanged: 0/0
 15354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15355 ;;      Params:         0       6       0       0       0       0       0
 15356 ;;      Locals:         0       8       0       0       0       0       0
 15357 ;;      Temps:          0       0       0       0       0       0       0
 15358 ;;      Totals:         0      14       0       0       0       0       0
 15359 ;;Total ram usage:       14 bytes
 15360 ;; Hardware stack levels used: 1
 15361 ;; Hardware stack levels required when called: 11
 15362 ;; This function calls:
 15363 ;;		_vfprintf
 15364 ;; This function is called by:
 15365 ;;		_Score_draw
 15366 ;;		_touchScreenController
 15367 ;; This function uses a non-reentrant model
 15368 ;;
 15369                           
 15370                           	psect	text57
 15371  006024                     __ptext57:
 15372                           	callstack 0
 15373  006024                     _sprintf:
 15374                           	callstack 14
 15375  006024  0E88               	movlw	low (?_sprintf+4)
 15376  006026  0100               	movlb	0	; () banked
 15377  006028  6F8A               	movwf	sprintf@ap& (0+255),b
 15378  00602A  0E00               	movlw	high (?_sprintf+4)
 15379  00602C  6F8B               	movwf	(sprintf@ap+1)& (0+255),b
 15380  00602E  C084  F08C         	movff	sprintf@s,sprintf@f
 15381  006032  C085  F08D         	movff	sprintf@s+1,sprintf@f+1
 15382  006036                     
 15383                           ; BSR set to: 0
 15384  006036  0E00               	movlw	0
 15385  006038  6F8F               	movwf	(sprintf@f+3)& (0+255),b
 15386  00603A  0E00               	movlw	0
 15387  00603C  6F8E               	movwf	(sprintf@f+2)& (0+255),b
 15388  00603E                     
 15389                           ; BSR set to: 0
 15390  00603E  0E00               	movlw	0
 15391  006040  6F91               	movwf	(sprintf@f+5)& (0+255),b
 15392  006042  0E00               	movlw	0
 15393  006044  6F90               	movwf	(sprintf@f+4)& (0+255),b
 15394  006046                     
 15395                           ; BSR set to: 0
 15396  006046  0E8C               	movlw	low sprintf@f
 15397  006048  6F7C               	movwf	vfprintf@fp& (0+255),b
 15398  00604A  0E00               	movlw	high sprintf@f
 15399  00604C  6F7D               	movwf	(vfprintf@fp+1)& (0+255),b
 15400  00604E  C086  F07E         	movff	sprintf@fmt,vfprintf@fmt
 15401  006052  C087  F07F         	movff	sprintf@fmt+1,vfprintf@fmt+1
 15402  006056  0E8A               	movlw	low sprintf@ap
 15403  006058  6F80               	movwf	vfprintf@ap& (0+255),b
 15404  00605A  0E00               	movlw	high sprintf@ap
 15405  00605C  6F81               	movwf	(vfprintf@ap+1)& (0+255),b
 15406  00605E  EC5B  F02F         	call	_vfprintf	;wreg free
 15407  006062  0100               	movlb	0	; () banked
 15408  006064  518E               	movf	(sprintf@f+2)& (0+255),w,b
 15409  006066  2584               	addwf	sprintf@s& (0+255),w,b
 15410  006068  6ED9               	movwf	fsr2l,c
 15411  00606A  518F               	movf	(sprintf@f+3)& (0+255),w,b
 15412  00606C  2185               	addwfc	(sprintf@s+1)& (0+255),w,b
 15413  00606E  6EDA               	movwf	fsr2h,c
 15414  006070  0E00               	movlw	0
 15415  006072  6EDF               	movwf	indf2,c
 15416  006074                     
 15417                           ; BSR set to: 0
 15418  006074  0012               	return		;funcret
 15419  006076                     __end_of_sprintf:
 15420                           	callstack 0
 15421                           
 15422 ;; *************** function _vfprintf *****************
 15423 ;; Defined at:
 15424 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15425 ;; Parameters:    Size  Location     Type
 15426 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
 15427 ;;		 -> sprintf@f(6), 
 15428 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
 15429 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15430 ;;  ap              2   32[BANK0 ] PTR PTR void 
 15431 ;;		 -> sprintf@ap(2), 
 15432 ;; Auto vars:     Size  Location     Type
 15433 ;;  cfmt            2   34[BANK0 ] PTR unsigned char 
 15434 ;;		 -> STR_16(6), STR_15(6), STR_3(3), STR_2(3), 
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  2   28[BANK0 ] int 
 15437 ;; Registers used:
 15438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15444 ;;      Params:         0       6       0       0       0       0       0
 15445 ;;      Locals:         0       2       0       0       0       0       0
 15446 ;;      Temps:          0       0       0       0       0       0       0
 15447 ;;      Totals:         0       8       0       0       0       0       0
 15448 ;;Total ram usage:        8 bytes
 15449 ;; Hardware stack levels used: 1
 15450 ;; Hardware stack levels required when called: 10
 15451 ;; This function calls:
 15452 ;;		_vfpfcnvrt
 15453 ;; This function is called by:
 15454 ;;		_sprintf
 15455 ;; This function uses a non-reentrant model
 15456 ;;
 15457                           
 15458                           	psect	text58
 15459  005EB6                     __ptext58:
 15460                           	callstack 0
 15461  005EB6                     _vfprintf:
 15462                           	callstack 14
 15463  005EB6                     
 15464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 15465  005EB6  C07E  F082         	movff	vfprintf@fmt,vfprintf@cfmt
 15466  005EBA  C07F  F083         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 15467  005EBE                     
 15468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 15469  005EBE  0E00               	movlw	0
 15470  005EC0  0100               	movlb	0	; () banked
 15471  005EC2  6FDC               	movwf	(_nout+1)& (0+255),b
 15472  005EC4  0E00               	movlw	0
 15473  005EC6  6FDB               	movwf	_nout& (0+255),b
 15474                           
 15475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 15476  005EC8  EF79  F02F         	goto	l9295
 15477  005ECC                     l9293:
 15478                           
 15479                           ; BSR set to: 0
 15480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 15481  005ECC  C07C  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
 15482  005ED0  C07D  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 15483  005ED4  0E82               	movlw	low vfprintf@cfmt
 15484  005ED6  6E41               	movwf	vfpfcnvrt@fmt^0,c
 15485  005ED8  0E00               	movlw	high vfprintf@cfmt
 15486  005EDA  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
 15487  005EDC  C080  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
 15488  005EE0  C081  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 15489  005EE4  EC28  F01E         	call	_vfpfcnvrt	;wreg free
 15490  005EE8  503F               	movf	?_vfpfcnvrt^0,w,c
 15491  005EEA  0100               	movlb	0	; () banked
 15492  005EEC  27DB               	addwf	_nout& (0+255),f,b
 15493  005EEE  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
 15494  005EF0  23DC               	addwfc	(_nout+1)& (0+255),f,b
 15495  005EF2                     l9295:
 15496                           
 15497                           ; BSR set to: 0
 15498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 15499  005EF2  C082  FFF6         	movff	vfprintf@cfmt,tblptrl
 15500  005EF6  C083  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 15501  005EFA                     	if	0	;tblptru may be non-zero
 15502  005EFA                     	endif
 15503  005EFA                     	if	0	;tblptru may be non-zero
 15504  005EFA                     	endif
 15505  005EFA  0008               	tblrd		*
 15506  005EFC  50F5               	movf	tablat,w,c
 15507  005EFE  0900               	iorlw	0
 15508  005F00  A4D8               	btfss	status,2,c
 15509  005F02  EF85  F02F         	goto	u6551
 15510  005F06  EF87  F02F         	goto	u6550
 15511  005F0A                     u6551:
 15512  005F0A  EF66  F02F         	goto	l9293
 15513  005F0E                     u6550:
 15514  005F0E                     
 15515                           ; BSR set to: 0
 15516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 15517  005F0E  C0DB  F07C         	movff	_nout,?_vfprintf
 15518  005F12  C0DC  F07D         	movff	_nout+1,?_vfprintf+1
 15519  005F16                     
 15520                           ; BSR set to: 0
 15521  005F16  0012               	return		;funcret
 15522  005F18                     __end_of_vfprintf:
 15523                           	callstack 0
 15524                           
 15525 ;; *************** function _vfpfcnvrt *****************
 15526 ;; Defined at:
 15527 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15528 ;; Parameters:    Size  Location     Type
 15529 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
 15530 ;;		 -> sprintf@f(6), 
 15531 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
 15532 ;;		 -> vfprintf@cfmt(2), 
 15533 ;;  ap              2   66[COMRAM] PTR PTR void 
 15534 ;;		 -> sprintf@ap(2), 
 15535 ;; Auto vars:     Size  Location     Type
 15536 ;;  ll              8   20[BANK0 ] long long 
 15537 ;;  llu             8    0        unsigned long long 
 15538 ;;  f               4    0        unsigned long long 
 15539 ;;  vp              3    0        PTR void 
 15540 ;;  ct              3    0        unsigned char [3]
 15541 ;;  cp              3    0        PTR unsigned char 
 15542 ;;  i               2    0        int 
 15543 ;;  done            2    0        int 
 15544 ;;  c               1    0        unsigned char 
 15545 ;; Return value:  Size  Location     Type
 15546 ;;                  2   62[COMRAM] int 
 15547 ;; Registers used:
 15548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15549 ;; Tracked objects:
 15550 ;;		On entry : 0/0
 15551 ;;		On exit  : 0/0
 15552 ;;		Unchanged: 0/0
 15553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15554 ;;      Params:         6       0       0       0       0       0       0
 15555 ;;      Locals:         0       8       0       0       0       0       0
 15556 ;;      Temps:          0       2       0       0       0       0       0
 15557 ;;      Totals:         6      10       0       0       0       0       0
 15558 ;;Total ram usage:       16 bytes
 15559 ;; Hardware stack levels used: 1
 15560 ;; Hardware stack levels required when called: 9
 15561 ;; This function calls:
 15562 ;;		_dtoa
 15563 ;;		_fputc
 15564 ;; This function is called by:
 15565 ;;		_vfprintf
 15566 ;; This function uses a non-reentrant model
 15567 ;;
 15568                           
 15569                           	psect	text59
 15570  003C50                     __ptext59:
 15571                           	callstack 0
 15572  003C50                     _vfpfcnvrt:
 15573                           	callstack 14
 15574  003C50                     
 15575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 15576  003C50  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15577  003C54  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15578  003C58  CFDE FFF6          	movff	postinc2,tblptrl
 15579  003C5C  CFDD FFF7          	movff	postdec2,tblptrh
 15580  003C60                     	if	0	;tblptru may be non-zero
 15581  003C60                     	endif
 15582  003C60                     	if	0	;tblptru may be non-zero
 15583  003C60                     	endif
 15584  003C60  0008               	tblrd		*
 15585  003C62  50F5               	movf	tablat,w,c
 15586  003C64  0A25               	xorlw	37
 15587  003C66  A4D8               	btfss	status,2,c
 15588  003C68  EF38  F01E         	goto	u6211
 15589  003C6C  EF3A  F01E         	goto	u6210
 15590  003C70                     u6211:
 15591  003C70  EFE6  F01E         	goto	l8717
 15592  003C74                     u6210:
 15593  003C74                     
 15594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 15595  003C74  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15596  003C78  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15597  003C7C  2ADE               	incf	postinc2,f,c
 15598  003C7E  0E00               	movlw	0
 15599  003C80  22DD               	addwfc	postdec2,f,c
 15600  003C82                     
 15601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 15602  003C82  0E00               	movlw	0
 15603  003C84  6E46               	movwf	(_width+1)^0,c
 15604  003C86  0E00               	movlw	0
 15605  003C88  6E45               	movwf	_width^0,c
 15606  003C8A  C045  F049         	movff	_width,_flags
 15607  003C8E  C046  F04A         	movff	_width+1,_flags+1
 15608  003C92                     
 15609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 15610  003C92  6847               	setf	_prec^0,c
 15611  003C94  6848               	setf	(_prec+1)^0,c
 15612  003C96                     
 15613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 15614  003C96  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15615  003C9A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15616  003C9E  CFDE FFF6          	movff	postinc2,tblptrl
 15617  003CA2  CFDD FFF7          	movff	postdec2,tblptrh
 15618  003CA6                     	if	0	;tblptru may be non-zero
 15619  003CA6                     	endif
 15620  003CA6                     	if	0	;tblptru may be non-zero
 15621  003CA6                     	endif
 15622  003CA6  0008               	tblrd		*
 15623  003CA8  50F5               	movf	tablat,w,c
 15624  003CAA  0A64               	xorlw	100
 15625  003CAC  B4D8               	btfsc	status,2,c
 15626  003CAE  EF5B  F01E         	goto	u6221
 15627  003CB2  EF5D  F01E         	goto	u6220
 15628  003CB6                     u6221:
 15629  003CB6  EF6F  F01E         	goto	l8695
 15630  003CBA                     u6220:
 15631  003CBA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15632  003CBE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15633  003CC2  CFDE FFF6          	movff	postinc2,tblptrl
 15634  003CC6  CFDD FFF7          	movff	postdec2,tblptrh
 15635  003CCA                     	if	0	;tblptru may be non-zero
 15636  003CCA                     	endif
 15637  003CCA                     	if	0	;tblptru may be non-zero
 15638  003CCA                     	endif
 15639  003CCA  0008               	tblrd		*
 15640  003CCC  50F5               	movf	tablat,w,c
 15641  003CCE  0A69               	xorlw	105
 15642  003CD0  A4D8               	btfss	status,2,c
 15643  003CD2  EF6D  F01E         	goto	u6231
 15644  003CD6  EF6F  F01E         	goto	u6230
 15645  003CDA                     u6231:
 15646  003CDA  EFB0  F01E         	goto	l8701
 15647  003CDE                     u6230:
 15648  003CDE                     l8695:
 15649                           
 15650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 15651  003CDE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15652  003CE2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15653  003CE6  2ADE               	incf	postinc2,f,c
 15654  003CE8  0E00               	movlw	0
 15655  003CEA  22DD               	addwfc	postdec2,f,c
 15656                           
 15657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 15658  003CEC  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15659  003CF0  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15660  003CF4  CFDF F072          	movff	indf2,??_vfpfcnvrt
 15661  003CF8  0E02               	movlw	2
 15662  003CFA  26DE               	addwf	postinc2,f,c
 15663  003CFC  CFDF F073          	movff	indf2,??_vfpfcnvrt+1
 15664  003D00  0E00               	movlw	0
 15665  003D02  22DD               	addwfc	postdec2,f,c
 15666  003D04  C072  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15667  003D08  C073  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15668  003D0C  CFDE F074          	movff	postinc2,vfpfcnvrt@ll
 15669  003D10  CFDD F075          	movff	postdec2,vfpfcnvrt@ll+1
 15670  003D14  0100               	movlb	0	; () banked
 15671  003D16  0E00               	movlw	0
 15672  003D18  BF75               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 15673  003D1A  0EFF               	movlw	-1
 15674  003D1C  6F76               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 15675  003D1E  6F77               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 15676  003D20  6F78               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 15677  003D22  6F79               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 15678  003D24  6F7A               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 15679  003D26  6F7B               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 15680  003D28                     
 15681                           ; BSR set to: 0
 15682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 15683  003D28  C03F  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
 15684  003D2C  C040  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 15685  003D30  C074  F02F         	movff	vfpfcnvrt@ll,dtoa@d
 15686  003D34  C075  F030         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 15687  003D38  C076  F031         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 15688  003D3C  C077  F032         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 15689  003D40  C078  F033         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 15690  003D44  C079  F034         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 15691  003D48  C07A  F035         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 15692  003D4C  C07B  F036         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 15693  003D50  EC37  F018         	call	_dtoa	;wreg free
 15694  003D54  C02D  F03F         	movff	?_dtoa,?_vfpfcnvrt
 15695  003D58  C02E  F040         	movff	?_dtoa+1,?_vfpfcnvrt+1
 15696  003D5C  EF01  F01F         	goto	l1554
 15697  003D60                     l8701:
 15698                           
 15699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 15700  003D60  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15701  003D64  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15702  003D68  CFDE FFF6          	movff	postinc2,tblptrl
 15703  003D6C  CFDD FFF7          	movff	postdec2,tblptrh
 15704  003D70                     	if	0	;tblptru may be non-zero
 15705  003D70                     	endif
 15706  003D70                     	if	0	;tblptru may be non-zero
 15707  003D70                     	endif
 15708  003D70  0008               	tblrd		*
 15709  003D72  50F5               	movf	tablat,w,c
 15710  003D74  0A25               	xorlw	37
 15711  003D76  A4D8               	btfss	status,2,c
 15712  003D78  EFC0  F01E         	goto	u6241
 15713  003D7C  EFC2  F01E         	goto	u6240
 15714  003D80                     u6241:
 15715  003D80  EFD9  F01E         	goto	l8711
 15716  003D84                     u6240:
 15717  003D84                     
 15718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 15719  003D84  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15720  003D88  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15721  003D8C  2ADE               	incf	postinc2,f,c
 15722  003D8E  0E00               	movlw	0
 15723  003D90  22DD               	addwfc	postdec2,f,c
 15724  003D92                     
 15725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 15726  003D92  0E00               	movlw	0
 15727  003D94  6E13               	movwf	(fputc@c+1)^0,c
 15728  003D96  0E25               	movlw	37
 15729  003D98  6E12               	movwf	fputc@c^0,c
 15730  003D9A  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 15731  003D9E  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15732  003DA2  EC1C  F028         	call	_fputc	;wreg free
 15733  003DA6                     l8707:
 15734                           
 15735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 15736  003DA6  0E00               	movlw	0
 15737  003DA8  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 15738  003DAA  0E01               	movlw	1
 15739  003DAC  6E3F               	movwf	?_vfpfcnvrt^0,c
 15740  003DAE  EF01  F01F         	goto	l1554
 15741  003DB2                     l8711:
 15742                           
 15743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 15744  003DB2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15745  003DB6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15746  003DBA  2ADE               	incf	postinc2,f,c
 15747  003DBC  0E00               	movlw	0
 15748  003DBE  22DD               	addwfc	postdec2,f,c
 15749  003DC0                     
 15750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 15751  003DC0  0E00               	movlw	0
 15752  003DC2  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
 15753  003DC4  0E00               	movlw	0
 15754  003DC6  6E3F               	movwf	?_vfpfcnvrt^0,c
 15755  003DC8  EF01  F01F         	goto	l1554
 15756  003DCC                     l8717:
 15757                           
 15758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 15759  003DCC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15760  003DD0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15761  003DD4  CFDE FFF6          	movff	postinc2,tblptrl
 15762  003DD8  CFDD FFF7          	movff	postdec2,tblptrh
 15763  003DDC                     	if	0	;tblptru may be non-zero
 15764  003DDC                     	endif
 15765  003DDC                     	if	0	;tblptru may be non-zero
 15766  003DDC                     	endif
 15767  003DDC  0008               	tblrd		*
 15768  003DDE  50F5               	movf	tablat,w,c
 15769  003DE0  6E12               	movwf	fputc@c^0,c
 15770  003DE2  6A13               	clrf	(fputc@c+1)^0,c
 15771  003DE4  C03F  F014         	movff	vfpfcnvrt@fp,fputc@fp
 15772  003DE8  C040  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15773  003DEC  EC1C  F028         	call	_fputc	;wreg free
 15774  003DF0                     
 15775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 15776  003DF0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15777  003DF4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15778  003DF8  2ADE               	incf	postinc2,f,c
 15779  003DFA  0E00               	movlw	0
 15780  003DFC  22DD               	addwfc	postdec2,f,c
 15781  003DFE  EFD3  F01E         	goto	l8707
 15782  003E02                     l1554:
 15783  003E02  0012               	return		;funcret
 15784  003E04                     __end_of_vfpfcnvrt:
 15785                           	callstack 0
 15786                           
 15787 ;; *************** function _dtoa *****************
 15788 ;; Defined at:
 15789 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 15790 ;; Parameters:    Size  Location     Type
 15791 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
 15792 ;;		 -> sprintf@f(6), 
 15793 ;;  d               8   46[COMRAM] long long 
 15794 ;; Auto vars:     Size  Location     Type
 15795 ;;  n               8    8[BANK0 ] long long 
 15796 ;;  i               2   16[BANK0 ] int 
 15797 ;;  s               2    6[BANK0 ] int 
 15798 ;;  w               2    4[BANK0 ] int 
 15799 ;;  p               2    2[BANK0 ] int 
 15800 ;; Return value:  Size  Location     Type
 15801 ;;                  2   44[COMRAM] int 
 15802 ;; Registers used:
 15803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15804 ;; Tracked objects:
 15805 ;;		On entry : 0/0
 15806 ;;		On exit  : 0/0
 15807 ;;		Unchanged: 0/0
 15808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15809 ;;      Params:        10       0       0       0       0       0       0
 15810 ;;      Locals:         0      18       0       0       0       0       0
 15811 ;;      Temps:          8       0       0       0       0       0       0
 15812 ;;      Totals:        18      18       0       0       0       0       0
 15813 ;;Total ram usage:       36 bytes
 15814 ;; Hardware stack levels used: 1
 15815 ;; Hardware stack levels required when called: 8
 15816 ;; This function calls:
 15817 ;;		___aodiv
 15818 ;;		___aomod
 15819 ;;		_abs
 15820 ;;		_pad
 15821 ;; This function is called by:
 15822 ;;		_vfpfcnvrt
 15823 ;; This function uses a non-reentrant model
 15824 ;;
 15825                           
 15826                           	psect	text60
 15827  00306E                     __ptext60:
 15828                           	callstack 0
 15829  00306E                     _dtoa:
 15830                           	callstack 14
 15831  00306E                     
 15832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 15833  00306E  C02F  F068         	movff	dtoa@d,dtoa@n
 15834  003072  C030  F069         	movff	dtoa@d+1,dtoa@n+1
 15835  003076  C031  F06A         	movff	dtoa@d+2,dtoa@n+2
 15836  00307A  C032  F06B         	movff	dtoa@d+3,dtoa@n+3
 15837  00307E  C033  F06C         	movff	dtoa@d+4,dtoa@n+4
 15838  003082  C034  F06D         	movff	dtoa@d+5,dtoa@n+5
 15839  003086  C035  F06E         	movff	dtoa@d+6,dtoa@n+6
 15840  00308A  C036  F06F         	movff	dtoa@d+7,dtoa@n+7
 15841  00308E                     
 15842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 15843  00308E  0100               	movlb	0	; () banked
 15844  003090  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
 15845  003092  EF4D  F018         	goto	u5731
 15846  003096  EF50  F018         	goto	u5730
 15847  00309A                     u5731:
 15848  00309A  0E01               	movlw	1
 15849  00309C  EF51  F018         	goto	u5740
 15850  0030A0                     u5730:
 15851  0030A0  0E00               	movlw	0
 15852  0030A2                     u5740:
 15853  0030A2  6F66               	movwf	dtoa@s& (0+255),b
 15854  0030A4  6B67               	clrf	(dtoa@s+1)& (0+255),b
 15855                           
 15856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 15857  0030A6  5166               	movf	dtoa@s& (0+255),w,b
 15858  0030A8  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 15859  0030AA  B4D8               	btfsc	status,2,c
 15860  0030AC  EF5A  F018         	goto	u5751
 15861  0030B0  EF5C  F018         	goto	u5750
 15862  0030B4                     u5751:
 15863  0030B4  EF6C  F018         	goto	l8067
 15864  0030B8                     u5750:
 15865  0030B8                     
 15866                           ; BSR set to: 0
 15867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 15868  0030B8  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
 15869  0030BA  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
 15870  0030BC  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
 15871  0030BE  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
 15872  0030C0  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
 15873  0030C2  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
 15874  0030C4  1F69               	comf	(dtoa@n+1)& (0+255),f,b
 15875  0030C6  6D68               	negf	dtoa@n& (0+255),b
 15876  0030C8  0E00               	movlw	0
 15877  0030CA  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
 15878  0030CC  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
 15879  0030CE  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
 15880  0030D0  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
 15881  0030D2  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
 15882  0030D4  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
 15883  0030D6  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
 15884  0030D8                     l8067:
 15885                           
 15886                           ; BSR set to: 0
 15887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 15888  0030D8  BE48               	btfsc	(_prec+1)^0,7,c
 15889  0030DA  EF71  F018         	goto	u5761
 15890  0030DE  EF73  F018         	goto	u5760
 15891  0030E2                     u5761:
 15892  0030E2  EF74  F018         	goto	l8071
 15893  0030E6                     u5760:
 15894  0030E6                     
 15895                           ; BSR set to: 0
 15896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 15897  0030E6  9249               	bcf	_flags^0,1,c
 15898  0030E8                     l8071:
 15899                           
 15900                           ; BSR set to: 0
 15901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 15902  0030E8  BE48               	btfsc	(_prec+1)^0,7,c
 15903  0030EA  EF81  F018         	goto	u5770
 15904  0030EE  5048               	movf	(_prec+1)^0,w,c
 15905  0030F0  E106               	bnz	u5771
 15906  0030F2  0447               	decf	_prec^0,w,c
 15907  0030F4  B0D8               	btfsc	status,0,c
 15908  0030F6  EF7F  F018         	goto	u5771
 15909  0030FA  EF81  F018         	goto	u5770
 15910  0030FE                     u5771:
 15911  0030FE  EF87  F018         	goto	l1527
 15912  003102                     u5770:
 15913  003102                     
 15914                           ; BSR set to: 0
 15915  003102  0E00               	movlw	0
 15916  003104  6F63               	movwf	(dtoa@p+1)& (0+255),b
 15917  003106  0E01               	movlw	1
 15918  003108  6F62               	movwf	dtoa@p& (0+255),b
 15919  00310A  EF8B  F018         	goto	l1529
 15920  00310E                     l1527:
 15921                           
 15922                           ; BSR set to: 0
 15923  00310E  C047  F062         	movff	_prec,dtoa@p
 15924  003112  C048  F063         	movff	_prec+1,dtoa@p+1
 15925  003116                     l1529:
 15926                           
 15927                           ; BSR set to: 0
 15928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 15929  003116  C045  F064         	movff	_width,dtoa@w
 15930  00311A  C046  F065         	movff	_width+1,dtoa@w+1
 15931  00311E                     
 15932                           ; BSR set to: 0
 15933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 15934  00311E  5166               	movf	dtoa@s& (0+255),w,b
 15935  003120  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 15936  003122  A4D8               	btfss	status,2,c
 15937  003124  EF96  F018         	goto	u5781
 15938  003128  EF98  F018         	goto	u5780
 15939  00312C                     u5781:
 15940  00312C  EF9F  F018         	goto	l8079
 15941  003130                     u5780:
 15942  003130                     
 15943                           ; BSR set to: 0
 15944  003130  A449               	btfss	_flags^0,2,c
 15945  003132  EF9D  F018         	goto	u5791
 15946  003136  EF9F  F018         	goto	u5790
 15947  00313A                     u5791:
 15948  00313A  EFA2  F018         	goto	l8081
 15949  00313E                     u5790:
 15950  00313E                     l8079:
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 15954  00313E  0764               	decf	dtoa@w& (0+255),f,b
 15955  003140  A0D8               	btfss	status,0,c
 15956  003142  0765               	decf	(dtoa@w+1)& (0+255),f,b
 15957  003144                     l8081:
 15958                           
 15959                           ; BSR set to: 0
 15960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 15961  003144  0E00               	movlw	0
 15962  003146  6F71               	movwf	(dtoa@i+1)& (0+255),b
 15963  003148  0E1F               	movlw	31
 15964  00314A  6F70               	movwf	dtoa@i& (0+255),b
 15965  00314C                     
 15966                           ; BSR set to: 0
 15967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 15968  00314C  0E00               	movlw	0
 15969  00314E  6FFF               	movwf	(_dbuf+31)& (0+255),b
 15970                           
 15971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15972  003150  EF27  F019         	goto	l8095
 15973  003154                     l8085:
 15974                           
 15975                           ; BSR set to: 0
 15976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 15977  003154  0770               	decf	dtoa@i& (0+255),f,b
 15978  003156  A0D8               	btfss	status,0,c
 15979  003158  0771               	decf	(dtoa@i+1)& (0+255),f,b
 15980  00315A                     
 15981                           ; BSR set to: 0
 15982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 15983  00315A  0EE0               	movlw	low _dbuf
 15984  00315C  2570               	addwf	dtoa@i& (0+255),w,b
 15985  00315E  6ED9               	movwf	fsr2l,c
 15986  003160  0E00               	movlw	high _dbuf
 15987  003162  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 15988  003164  6EDA               	movwf	fsr2h,c
 15989  003166  C068  F012         	movff	dtoa@n,___aomod@dividend
 15990  00316A  C069  F013         	movff	dtoa@n+1,___aomod@dividend+1
 15991  00316E  C06A  F014         	movff	dtoa@n+2,___aomod@dividend+2
 15992  003172  C06B  F015         	movff	dtoa@n+3,___aomod@dividend+3
 15993  003176  C06C  F016         	movff	dtoa@n+4,___aomod@dividend+4
 15994  00317A  C06D  F017         	movff	dtoa@n+5,___aomod@dividend+5
 15995  00317E  C06E  F018         	movff	dtoa@n+6,___aomod@dividend+6
 15996  003182  C06F  F019         	movff	dtoa@n+7,___aomod@dividend+7
 15997  003186  0E0A               	movlw	10
 15998  003188  6E1A               	movwf	___aomod@divisor^0,c
 15999  00318A  0E00               	movlw	0
 16000  00318C  6E1B               	movwf	(___aomod@divisor+1)^0,c
 16001  00318E  0E00               	movlw	0
 16002  003190  6E1C               	movwf	(___aomod@divisor+2)^0,c
 16003  003192  0E00               	movlw	0
 16004  003194  6E1D               	movwf	(___aomod@divisor+3)^0,c
 16005  003196  0E00               	movlw	0
 16006  003198  6E1E               	movwf	(___aomod@divisor+4)^0,c
 16007  00319A  0E00               	movlw	0
 16008  00319C  6E1F               	movwf	(___aomod@divisor+5)^0,c
 16009  00319E  0E00               	movlw	0
 16010  0031A0  6E20               	movwf	(___aomod@divisor+6)^0,c
 16011  0031A2  0E00               	movlw	0
 16012  0031A4  6E21               	movwf	(___aomod@divisor+7)^0,c
 16013  0031A6  ECC6  F01F         	call	___aomod	;wreg free
 16014  0031AA  C012  F037         	movff	?___aomod,??_dtoa
 16015  0031AE  C013  F038         	movff	?___aomod+1,??_dtoa+1
 16016  0031B2  C014  F039         	movff	?___aomod+2,??_dtoa+2
 16017  0031B6  C015  F03A         	movff	?___aomod+3,??_dtoa+3
 16018  0031BA  C016  F03B         	movff	?___aomod+4,??_dtoa+4
 16019  0031BE  C017  F03C         	movff	?___aomod+5,??_dtoa+5
 16020  0031C2  C018  F03D         	movff	?___aomod+6,??_dtoa+6
 16021  0031C6  C019  F03E         	movff	?___aomod+7,??_dtoa+7
 16022  0031CA  C037  F024         	movff	??_dtoa,abs@a
 16023  0031CE  C039  F025         	movff	??_dtoa+2,abs@a+1
 16024  0031D2  ECCE  F030         	call	_abs	;wreg free
 16025  0031D6  5024               	movf	?_abs^0,w,c
 16026  0031D8  0F30               	addlw	48
 16027  0031DA  6EDF               	movwf	indf2,c
 16028  0031DC                     
 16029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 16030  0031DC  0100               	movlb	0	; () banked
 16031  0031DE  0762               	decf	dtoa@p& (0+255),f,b
 16032  0031E0  A0D8               	btfss	status,0,c
 16033  0031E2  0763               	decf	(dtoa@p+1)& (0+255),f,b
 16034  0031E4                     
 16035                           ; BSR set to: 0
 16036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 16037  0031E4  0764               	decf	dtoa@w& (0+255),f,b
 16038  0031E6  A0D8               	btfss	status,0,c
 16039  0031E8  0765               	decf	(dtoa@w+1)& (0+255),f,b
 16040  0031EA                     
 16041                           ; BSR set to: 0
 16042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 16043  0031EA  C068  F012         	movff	dtoa@n,___aodiv@dividend
 16044  0031EE  C069  F013         	movff	dtoa@n+1,___aodiv@dividend+1
 16045  0031F2  C06A  F014         	movff	dtoa@n+2,___aodiv@dividend+2
 16046  0031F6  C06B  F015         	movff	dtoa@n+3,___aodiv@dividend+3
 16047  0031FA  C06C  F016         	movff	dtoa@n+4,___aodiv@dividend+4
 16048  0031FE  C06D  F017         	movff	dtoa@n+5,___aodiv@dividend+5
 16049  003202  C06E  F018         	movff	dtoa@n+6,___aodiv@dividend+6
 16050  003206  C06F  F019         	movff	dtoa@n+7,___aodiv@dividend+7
 16051  00320A  0E0A               	movlw	10
 16052  00320C  6E1A               	movwf	___aodiv@divisor^0,c
 16053  00320E  0E00               	movlw	0
 16054  003210  6E1B               	movwf	(___aodiv@divisor+1)^0,c
 16055  003212  0E00               	movlw	0
 16056  003214  6E1C               	movwf	(___aodiv@divisor+2)^0,c
 16057  003216  0E00               	movlw	0
 16058  003218  6E1D               	movwf	(___aodiv@divisor+3)^0,c
 16059  00321A  0E00               	movlw	0
 16060  00321C  6E1E               	movwf	(___aodiv@divisor+4)^0,c
 16061  00321E  0E00               	movlw	0
 16062  003220  6E1F               	movwf	(___aodiv@divisor+5)^0,c
 16063  003222  0E00               	movlw	0
 16064  003224  6E20               	movwf	(___aodiv@divisor+6)^0,c
 16065  003226  0E00               	movlw	0
 16066  003228  6E21               	movwf	(___aodiv@divisor+7)^0,c
 16067  00322A  EC02  F01F         	call	___aodiv	;wreg free
 16068  00322E  C012  F068         	movff	?___aodiv,dtoa@n
 16069  003232  C013  F069         	movff	?___aodiv+1,dtoa@n+1
 16070  003236  C014  F06A         	movff	?___aodiv+2,dtoa@n+2
 16071  00323A  C015  F06B         	movff	?___aodiv+3,dtoa@n+3
 16072  00323E  C016  F06C         	movff	?___aodiv+4,dtoa@n+4
 16073  003242  C017  F06D         	movff	?___aodiv+5,dtoa@n+5
 16074  003246  C018  F06E         	movff	?___aodiv+6,dtoa@n+6
 16075  00324A  C019  F06F         	movff	?___aodiv+7,dtoa@n+7
 16076  00324E                     l8095:
 16077                           
 16078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16079  00324E  0100               	movlb	0	; () banked
 16080  003250  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
 16081  003252  EF33  F019         	goto	u5801
 16082  003256  5171               	movf	(dtoa@i+1)& (0+255),w,b
 16083  003258  E108               	bnz	u5800
 16084  00325A  0570               	decf	dtoa@i& (0+255),w,b
 16085  00325C  A0D8               	btfss	status,0,c
 16086  00325E  EF33  F019         	goto	u5801
 16087  003262  EF35  F019         	goto	u5800
 16088  003266                     u5801:
 16089  003266  EF65  F019         	goto	l8105
 16090  00326A                     u5800:
 16091  00326A                     
 16092                           ; BSR set to: 0
 16093  00326A  5168               	movf	dtoa@n& (0+255),w,b
 16094  00326C  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
 16095  00326E  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
 16096  003270  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
 16097  003272  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
 16098  003274  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
 16099  003276  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
 16100  003278  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
 16101  00327A  A4D8               	btfss	status,2,c
 16102  00327C  EF42  F019         	goto	u5811
 16103  003280  EF44  F019         	goto	u5810
 16104  003284                     u5811:
 16105  003284  EFAA  F018         	goto	l8085
 16106  003288                     u5810:
 16107  003288                     
 16108                           ; BSR set to: 0
 16109  003288  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
 16110  00328A  EF51  F019         	goto	u5820
 16111  00328E  5163               	movf	(dtoa@p+1)& (0+255),w,b
 16112  003290  E106               	bnz	u5821
 16113  003292  0562               	decf	dtoa@p& (0+255),w,b
 16114  003294  B0D8               	btfsc	status,0,c
 16115  003296  EF4F  F019         	goto	u5821
 16116  00329A  EF51  F019         	goto	u5820
 16117  00329E                     u5821:
 16118  00329E  EFAA  F018         	goto	l8085
 16119  0032A2                     u5820:
 16120  0032A2                     
 16121                           ; BSR set to: 0
 16122  0032A2  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
 16123  0032A4  EF5C  F019         	goto	u5831
 16124  0032A8  5165               	movf	(dtoa@w+1)& (0+255),w,b
 16125  0032AA  E108               	bnz	u5830
 16126  0032AC  0564               	decf	dtoa@w& (0+255),w,b
 16127  0032AE  A0D8               	btfss	status,0,c
 16128  0032B0  EF5C  F019         	goto	u5831
 16129  0032B4  EF5E  F019         	goto	u5830
 16130  0032B8                     u5831:
 16131  0032B8  EF65  F019         	goto	l8105
 16132  0032BC                     u5830:
 16133  0032BC                     
 16134                           ; BSR set to: 0
 16135  0032BC  B249               	btfsc	_flags^0,1,c
 16136  0032BE  EF63  F019         	goto	u5841
 16137  0032C2  EF65  F019         	goto	u5840
 16138  0032C6                     u5841:
 16139  0032C6  EFAA  F018         	goto	l8085
 16140  0032CA                     u5840:
 16141  0032CA                     l8105:
 16142                           
 16143                           ; BSR set to: 0
 16144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 16145  0032CA  5166               	movf	dtoa@s& (0+255),w,b
 16146  0032CC  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16147  0032CE  A4D8               	btfss	status,2,c
 16148  0032D0  EF6C  F019         	goto	u5851
 16149  0032D4  EF6E  F019         	goto	u5850
 16150  0032D8                     u5851:
 16151  0032D8  EF75  F019         	goto	l8109
 16152  0032DC                     u5850:
 16153  0032DC                     
 16154                           ; BSR set to: 0
 16155  0032DC  A449               	btfss	_flags^0,2,c
 16156  0032DE  EF73  F019         	goto	u5861
 16157  0032E2  EF75  F019         	goto	u5860
 16158  0032E6                     u5861:
 16159  0032E6  EF93  F019         	goto	l8119
 16160  0032EA                     u5860:
 16161  0032EA                     l8109:
 16162                           
 16163                           ; BSR set to: 0
 16164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 16165  0032EA  0770               	decf	dtoa@i& (0+255),f,b
 16166  0032EC  A0D8               	btfss	status,0,c
 16167  0032EE  0771               	decf	(dtoa@i+1)& (0+255),f,b
 16168  0032F0                     
 16169                           ; BSR set to: 0
 16170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 16171  0032F0  5166               	movf	dtoa@s& (0+255),w,b
 16172  0032F2  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 16173  0032F4  A4D8               	btfss	status,2,c
 16174  0032F6  EF7F  F019         	goto	u5871
 16175  0032FA  EF81  F019         	goto	u5870
 16176  0032FE                     u5871:
 16177  0032FE  EF87  F019         	goto	l8115
 16178  003302                     u5870:
 16179  003302                     
 16180                           ; BSR set to: 0
 16181  003302  0E00               	movlw	0
 16182  003304  6F61               	movwf	(_dtoa$4924+1)& (0+255),b
 16183  003306  0E2B               	movlw	43
 16184  003308  6F60               	movwf	_dtoa$4924& (0+255),b
 16185  00330A  EF8B  F019         	goto	l8117
 16186  00330E                     l8115:
 16187                           
 16188                           ; BSR set to: 0
 16189  00330E  0E00               	movlw	0
 16190  003310  6F61               	movwf	(_dtoa$4924+1)& (0+255),b
 16191  003312  0E2D               	movlw	45
 16192  003314  6F60               	movwf	_dtoa$4924& (0+255),b
 16193  003316                     l8117:
 16194                           
 16195                           ; BSR set to: 0
 16196  003316  0EE0               	movlw	low _dbuf
 16197  003318  2570               	addwf	dtoa@i& (0+255),w,b
 16198  00331A  6ED9               	movwf	fsr2l,c
 16199  00331C  0E00               	movlw	high _dbuf
 16200  00331E  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16201  003320  6EDA               	movwf	fsr2h,c
 16202  003322  C060  FFDF         	movff	_dtoa$4924,indf2
 16203  003326                     l8119:
 16204                           
 16205                           ; BSR set to: 0
 16206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 16207  003326  C02D  F022         	movff	dtoa@fp,pad@fp
 16208  00332A  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
 16209  00332E  0EE0               	movlw	low _dbuf
 16210  003330  2570               	addwf	dtoa@i& (0+255),w,b
 16211  003332  6E24               	movwf	pad@buf^0,c
 16212  003334  0E00               	movlw	high _dbuf
 16213  003336  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 16214  003338  6E25               	movwf	(pad@buf+1)^0,c
 16215  00333A  C064  F026         	movff	dtoa@w,pad@p
 16216  00333E  C065  F027         	movff	dtoa@w+1,pad@p+1
 16217  003342  EC47  F029         	call	_pad	;wreg free
 16218  003346  C022  F02D         	movff	?_pad,?_dtoa
 16219  00334A  C023  F02E         	movff	?_pad+1,?_dtoa+1
 16220  00334E  0012               	return		;funcret
 16221  003350                     __end_of_dtoa:
 16222                           	callstack 0
 16223                           
 16224 ;; *************** function _pad *****************
 16225 ;; Defined at:
 16226 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16227 ;; Parameters:    Size  Location     Type
 16228 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 16229 ;;		 -> sprintf@f(6), 
 16230 ;;  buf             2   35[COMRAM] PTR unsigned char 
 16231 ;;		 -> dbuf(32), 
 16232 ;;  p               2   37[COMRAM] int 
 16233 ;; Auto vars:     Size  Location     Type
 16234 ;;  w               2   42[COMRAM] int 
 16235 ;;  i               2   40[COMRAM] int 
 16236 ;; Return value:  Size  Location     Type
 16237 ;;                  2   33[COMRAM] int 
 16238 ;; Registers used:
 16239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16240 ;; Tracked objects:
 16241 ;;		On entry : 0/0
 16242 ;;		On exit  : 0/0
 16243 ;;		Unchanged: 0/0
 16244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16245 ;;      Params:         6       0       0       0       0       0       0
 16246 ;;      Locals:         4       0       0       0       0       0       0
 16247 ;;      Temps:          1       0       0       0       0       0       0
 16248 ;;      Totals:        11       0       0       0       0       0       0
 16249 ;;Total ram usage:       11 bytes
 16250 ;; Hardware stack levels used: 1
 16251 ;; Hardware stack levels required when called: 7
 16252 ;; This function calls:
 16253 ;;		_fputc
 16254 ;;		_fputs
 16255 ;;		_strlen
 16256 ;; This function is called by:
 16257 ;;		_dtoa
 16258 ;; This function uses a non-reentrant model
 16259 ;;
 16260                           
 16261                           	psect	text61
 16262  00528E                     __ptext61:
 16263                           	callstack 0
 16264  00528E                     _pad:
 16265                           	callstack 14
 16266  00528E                     
 16267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 16268  00528E  A049               	btfss	_flags^0,0,c
 16269  005290  EF4C  F029         	goto	u5681
 16270  005294  EF4E  F029         	goto	u5680
 16271  005298                     u5681:
 16272  005298  EF58  F029         	goto	l8039
 16273  00529C                     u5680:
 16274  00529C                     
 16275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 16276  00529C  C024  F01B         	movff	pad@buf,fputs@s
 16277  0052A0  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16278  0052A4  C022  F01D         	movff	pad@fp,fputs@fp
 16279  0052A8  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16280  0052AC  ECAC  F030         	call	_fputs	;wreg free
 16281  0052B0                     l8039:
 16282                           
 16283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 16284  0052B0  BE27               	btfsc	(pad@p+1)^0,7,c
 16285  0052B2  EF5D  F029         	goto	u5691
 16286  0052B6  EF5F  F029         	goto	u5690
 16287  0052BA                     u5691:
 16288  0052BA  EF65  F029         	goto	l8043
 16289  0052BE                     u5690:
 16290  0052BE  C026  F02B         	movff	pad@p,pad@w
 16291  0052C2  C027  F02C         	movff	pad@p+1,pad@w+1
 16292  0052C6  EF69  F029         	goto	l1516
 16293  0052CA                     l8043:
 16294  0052CA  0E00               	movlw	0
 16295  0052CC  6E2C               	movwf	(pad@w+1)^0,c
 16296  0052CE  0E00               	movlw	0
 16297  0052D0  6E2B               	movwf	pad@w^0,c
 16298  0052D2                     l1516:
 16299                           
 16300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 16301  0052D2  0E00               	movlw	0
 16302  0052D4  6E2A               	movwf	(pad@i+1)^0,c
 16303  0052D6  0E00               	movlw	0
 16304  0052D8  6E29               	movwf	pad@i^0,c
 16305                           
 16306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16307  0052DA  EF7B  F029         	goto	l8049
 16308  0052DE                     l8045:
 16309                           
 16310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 16311  0052DE  0E00               	movlw	0
 16312  0052E0  6E13               	movwf	(fputc@c+1)^0,c
 16313  0052E2  0E20               	movlw	32
 16314  0052E4  6E12               	movwf	fputc@c^0,c
 16315  0052E6  C022  F014         	movff	pad@fp,fputc@fp
 16316  0052EA  C023  F015         	movff	pad@fp+1,fputc@fp+1
 16317  0052EE  EC1C  F028         	call	_fputc	;wreg free
 16318  0052F2                     
 16319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 16320  0052F2  4A29               	infsnz	pad@i^0,f,c
 16321  0052F4  2A2A               	incf	(pad@i+1)^0,f,c
 16322  0052F6                     l8049:
 16323                           
 16324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 16325  0052F6  502B               	movf	pad@w^0,w,c
 16326  0052F8  5C29               	subwf	pad@i^0,w,c
 16327  0052FA  502A               	movf	(pad@i+1)^0,w,c
 16328  0052FC  0A80               	xorlw	128
 16329  0052FE  6E28               	movwf	??_pad^0,c
 16330  005300  502C               	movf	(pad@w+1)^0,w,c
 16331  005302  0A80               	xorlw	128
 16332  005304  5828               	subwfb	??_pad^0,w,c
 16333  005306  A0D8               	btfss	status,0,c
 16334  005308  EF88  F029         	goto	u5701
 16335  00530C  EF8A  F029         	goto	u5700
 16336  005310                     u5701:
 16337  005310  EF6F  F029         	goto	l8045
 16338  005314                     u5700:
 16339  005314                     
 16340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 16341  005314  B049               	btfsc	_flags^0,0,c
 16342  005316  EF8F  F029         	goto	u5711
 16343  00531A  EF91  F029         	goto	u5710
 16344  00531E                     u5711:
 16345  00531E  EF9B  F029         	goto	l8053
 16346  005322                     u5710:
 16347  005322                     
 16348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 16349  005322  C024  F01B         	movff	pad@buf,fputs@s
 16350  005326  C025  F01C         	movff	pad@buf+1,fputs@s+1
 16351  00532A  C022  F01D         	movff	pad@fp,fputs@fp
 16352  00532E  C023  F01E         	movff	pad@fp+1,fputs@fp+1
 16353  005332  ECAC  F030         	call	_fputs	;wreg free
 16354  005336                     l8053:
 16355                           
 16356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 16357  005336  C024  F012         	movff	pad@buf,strlen@s
 16358  00533A  C025  F013         	movff	pad@buf+1,strlen@s+1
 16359  00533E  EC63  F030         	call	_strlen	;wreg free
 16360  005342  502B               	movf	pad@w^0,w,c
 16361  005344  2412               	addwf	?_strlen^0,w,c
 16362  005346  6E22               	movwf	?_pad^0,c
 16363  005348  502C               	movf	(pad@w+1)^0,w,c
 16364  00534A  2013               	addwfc	(?_strlen+1)^0,w,c
 16365  00534C  6E23               	movwf	(?_pad+1)^0,c
 16366  00534E  0012               	return		;funcret
 16367  005350                     __end_of_pad:
 16368                           	callstack 0
 16369                           
 16370 ;; *************** function _fputs *****************
 16371 ;; Defined at:
 16372 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 16373 ;; Parameters:    Size  Location     Type
 16374 ;;  s               2   26[COMRAM] PTR const unsigned char 
 16375 ;;		 -> dbuf(32), 
 16376 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 16377 ;;		 -> sprintf@f(6), 
 16378 ;; Auto vars:     Size  Location     Type
 16379 ;;  i               2   31[COMRAM] int 
 16380 ;;  c               1   30[COMRAM] unsigned char 
 16381 ;; Return value:  Size  Location     Type
 16382 ;;                  2   26[COMRAM] int 
 16383 ;; Registers used:
 16384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16385 ;; Tracked objects:
 16386 ;;		On entry : 0/0
 16387 ;;		On exit  : 0/0
 16388 ;;		Unchanged: 0/0
 16389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16390 ;;      Params:         4       0       0       0       0       0       0
 16391 ;;      Locals:         3       0       0       0       0       0       0
 16392 ;;      Temps:          0       0       0       0       0       0       0
 16393 ;;      Totals:         7       0       0       0       0       0       0
 16394 ;;Total ram usage:        7 bytes
 16395 ;; Hardware stack levels used: 1
 16396 ;; Hardware stack levels required when called: 6
 16397 ;; This function calls:
 16398 ;;		_fputc
 16399 ;; This function is called by:
 16400 ;;		_pad
 16401 ;; This function uses a non-reentrant model
 16402 ;;
 16403                           
 16404                           	psect	text62
 16405  006158                     __ptext62:
 16406                           	callstack 0
 16407  006158                     _fputs:
 16408                           	callstack 14
 16409  006158  0E00               	movlw	0
 16410  00615A  6E21               	movwf	(fputs@i+1)^0,c
 16411  00615C  0E00               	movlw	0
 16412  00615E  6E20               	movwf	fputs@i^0,c
 16413  006160  EFBD  F030         	goto	l7953
 16414  006164                     l7949:
 16415  006164  C01F  F012         	movff	fputs@c,fputc@c
 16416  006168  6A13               	clrf	(fputc@c+1)^0,c
 16417  00616A  C01D  F014         	movff	fputs@fp,fputc@fp
 16418  00616E  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
 16419  006172  EC1C  F028         	call	_fputc	;wreg free
 16420  006176  4A20               	infsnz	fputs@i^0,f,c
 16421  006178  2A21               	incf	(fputs@i+1)^0,f,c
 16422  00617A                     l7953:
 16423  00617A  5020               	movf	fputs@i^0,w,c
 16424  00617C  241B               	addwf	fputs@s^0,w,c
 16425  00617E  6ED9               	movwf	fsr2l,c
 16426  006180  5021               	movf	(fputs@i+1)^0,w,c
 16427  006182  201C               	addwfc	(fputs@s+1)^0,w,c
 16428  006184  6EDA               	movwf	fsr2h,c
 16429  006186  50DF               	movf	indf2,w,c
 16430  006188  6E1F               	movwf	fputs@c^0,c
 16431  00618A  501F               	movf	fputs@c^0,w,c
 16432  00618C  A4D8               	btfss	status,2,c
 16433  00618E  EFCB  F030         	goto	u5541
 16434  006192  EFCD  F030         	goto	u5540
 16435  006196                     u5541:
 16436  006196  EFB2  F030         	goto	l7949
 16437  00619A                     u5540:
 16438  00619A  0012               	return		;funcret
 16439  00619C                     __end_of_fputs:
 16440                           	callstack 0
 16441                           
 16442 ;; *************** function _fputc *****************
 16443 ;; Defined at:
 16444 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;  c               2   17[COMRAM] int 
 16447 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 16448 ;;		 -> sprintf@f(6), 
 16449 ;; Auto vars:     Size  Location     Type
 16450 ;;		None
 16451 ;; Return value:  Size  Location     Type
 16452 ;;                  2   17[COMRAM] int 
 16453 ;; Registers used:
 16454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16455 ;; Tracked objects:
 16456 ;;		On entry : 0/0
 16457 ;;		On exit  : 0/0
 16458 ;;		Unchanged: 0/0
 16459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16460 ;;      Params:         4       0       0       0       0       0       0
 16461 ;;      Locals:         0       0       0       0       0       0       0
 16462 ;;      Temps:          5       0       0       0       0       0       0
 16463 ;;      Totals:         9       0       0       0       0       0       0
 16464 ;;Total ram usage:        9 bytes
 16465 ;; Hardware stack levels used: 1
 16466 ;; Hardware stack levels required when called: 5
 16467 ;; This function calls:
 16468 ;;		_putch
 16469 ;; This function is called by:
 16470 ;;		_pad
 16471 ;;		_vfpfcnvrt
 16472 ;;		_fputs
 16473 ;; This function uses a non-reentrant model
 16474 ;;
 16475                           
 16476                           	psect	text63
 16477  005038                     __ptext63:
 16478                           	callstack 0
 16479  005038                     _fputc:
 16480                           	callstack 17
 16481  005038  5014               	movf	fputc@fp^0,w,c
 16482  00503A  1015               	iorwf	(fputc@fp+1)^0,w,c
 16483  00503C  B4D8               	btfsc	status,2,c
 16484  00503E  EF23  F028         	goto	u5481
 16485  005042  EF25  F028         	goto	u5480
 16486  005046                     u5481:
 16487  005046  EF2E  F028         	goto	l7927
 16488  00504A                     u5480:
 16489  00504A  5014               	movf	fputc@fp^0,w,c
 16490  00504C  1015               	iorwf	(fputc@fp+1)^0,w,c
 16491  00504E  A4D8               	btfss	status,2,c
 16492  005050  EF2C  F028         	goto	u5491
 16493  005054  EF2E  F028         	goto	u5490
 16494  005058                     u5491:
 16495  005058  EF33  F028         	goto	l7929
 16496  00505C                     u5490:
 16497  00505C                     l7927:
 16498  00505C  5012               	movf	fputc@c^0,w,c
 16499  00505E  EC2B  F032         	call	_putch
 16500  005062  EF80  F028         	goto	l1580
 16501  005066                     l7929:
 16502  005066  EE20 F004          	lfsr	2,4
 16503  00506A  5014               	movf	fputc@fp^0,w,c
 16504  00506C  26D9               	addwf	fsr2l,f,c
 16505  00506E  5015               	movf	(fputc@fp+1)^0,w,c
 16506  005070  22DA               	addwfc	fsr2h,f,c
 16507  005072  50DE               	movf	postinc2,w,c
 16508  005074  10DE               	iorwf	postinc2,w,c
 16509  005076  B4D8               	btfsc	status,2,c
 16510  005078  EF40  F028         	goto	u5501
 16511  00507C  EF42  F028         	goto	u5500
 16512  005080                     u5501:
 16513  005080  EF5D  F028         	goto	l7933
 16514  005084                     u5500:
 16515  005084  EE20 F004          	lfsr	2,4
 16516  005088  5014               	movf	fputc@fp^0,w,c
 16517  00508A  26D9               	addwf	fsr2l,f,c
 16518  00508C  5015               	movf	(fputc@fp+1)^0,w,c
 16519  00508E  22DA               	addwfc	fsr2h,f,c
 16520  005090  EE10 F002          	lfsr	1,2
 16521  005094  5014               	movf	fputc@fp^0,w,c
 16522  005096  26E1               	addwf	fsr1l,f,c
 16523  005098  5015               	movf	(fputc@fp+1)^0,w,c
 16524  00509A  22E2               	addwfc	fsr1h,f,c
 16525  00509C  50DE               	movf	postinc2,w,c
 16526  00509E  5CE6               	subwf	postinc1,w,c
 16527  0050A0  50E6               	movf	postinc1,w,c
 16528  0050A2  0A80               	xorlw	128
 16529  0050A4  6E1A               	movwf	(??_fputc+4)^0,c
 16530  0050A6  50DE               	movf	postinc2,w,c
 16531  0050A8  0A80               	xorlw	128
 16532  0050AA  581A               	subwfb	(??_fputc+4)^0,w,c
 16533  0050AC  B0D8               	btfsc	status,0,c
 16534  0050AE  EF5B  F028         	goto	u5511
 16535  0050B2  EF5D  F028         	goto	u5510
 16536  0050B6                     u5511:
 16537  0050B6  EF80  F028         	goto	l1580
 16538  0050BA                     u5510:
 16539  0050BA                     l7933:
 16540  0050BA  EE20 F002          	lfsr	2,2
 16541  0050BE  5014               	movf	fputc@fp^0,w,c
 16542  0050C0  26D9               	addwf	fsr2l,f,c
 16543  0050C2  5015               	movf	(fputc@fp+1)^0,w,c
 16544  0050C4  22DA               	addwfc	fsr2h,f,c
 16545  0050C6  CFDE F016          	movff	postinc2,??_fputc
 16546  0050CA  CFDD F017          	movff	postdec2,??_fputc+1
 16547  0050CE  C014  FFD9         	movff	fputc@fp,fsr2l
 16548  0050D2  C015  FFDA         	movff	fputc@fp+1,fsr2h
 16549  0050D6  CFDE F018          	movff	postinc2,??_fputc+2
 16550  0050DA  CFDD F019          	movff	postdec2,??_fputc+3
 16551  0050DE  5016               	movf	??_fputc^0,w,c
 16552  0050E0  2418               	addwf	(??_fputc+2)^0,w,c
 16553  0050E2  6ED9               	movwf	fsr2l,c
 16554  0050E4  5017               	movf	(??_fputc+1)^0,w,c
 16555  0050E6  2019               	addwfc	(??_fputc+3)^0,w,c
 16556  0050E8  6EDA               	movwf	fsr2h,c
 16557  0050EA  C012  FFDF         	movff	fputc@c,indf2
 16558  0050EE  EE20 F002          	lfsr	2,2
 16559  0050F2  5014               	movf	fputc@fp^0,w,c
 16560  0050F4  26D9               	addwf	fsr2l,f,c
 16561  0050F6  5015               	movf	(fputc@fp+1)^0,w,c
 16562  0050F8  22DA               	addwfc	fsr2h,f,c
 16563  0050FA  2ADE               	incf	postinc2,f,c
 16564  0050FC  0E00               	movlw	0
 16565  0050FE  22DD               	addwfc	postdec2,f,c
 16566  005100                     l1580:
 16567  005100  0012               	return		;funcret
 16568  005102                     __end_of_fputc:
 16569                           	callstack 0
 16570                           
 16571 ;; *************** function _putch *****************
 16572 ;; Defined at:
 16573 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 16574 ;; Parameters:    Size  Location     Type
 16575 ;;  c               1    wreg     unsigned char 
 16576 ;; Auto vars:     Size  Location     Type
 16577 ;;  c               1    0[COMRAM] unsigned char 
 16578 ;; Return value:  Size  Location     Type
 16579 ;;                  1    wreg      void 
 16580 ;; Registers used:
 16581 ;;		wreg
 16582 ;; Tracked objects:
 16583 ;;		On entry : 0/0
 16584 ;;		On exit  : 0/0
 16585 ;;		Unchanged: 0/0
 16586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16587 ;;      Params:         0       0       0       0       0       0       0
 16588 ;;      Locals:         0       0       0       0       0       0       0
 16589 ;;      Temps:          0       0       0       0       0       0       0
 16590 ;;      Totals:         0       0       0       0       0       0       0
 16591 ;;Total ram usage:        0 bytes
 16592 ;; Hardware stack levels used: 1
 16593 ;; Hardware stack levels required when called: 4
 16594 ;; This function calls:
 16595 ;;		Nothing
 16596 ;; This function is called by:
 16597 ;;		_fputc
 16598 ;; This function uses a non-reentrant model
 16599 ;;
 16600                           
 16601                           	psect	text64
 16602  006456                     __ptext64:
 16603                           	callstack 0
 16604  006456                     _putch:
 16605                           	callstack 17
 16606  006456  0012               	return		;funcret
 16607  006458                     __end_of_putch:
 16608                           	callstack 0
 16609                           
 16610 ;; *************** function _abs *****************
 16611 ;; Defined at:
 16612 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 16613 ;; Parameters:    Size  Location     Type
 16614 ;;  a               2   35[COMRAM] int 
 16615 ;; Auto vars:     Size  Location     Type
 16616 ;;		None
 16617 ;; Return value:  Size  Location     Type
 16618 ;;                  2   35[COMRAM] int 
 16619 ;; Registers used:
 16620 ;;		wreg, status,2, status,0
 16621 ;; Tracked objects:
 16622 ;;		On entry : 0/0
 16623 ;;		On exit  : 0/0
 16624 ;;		Unchanged: 0/0
 16625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16626 ;;      Params:         2       0       0       0       0       0       0
 16627 ;;      Locals:         0       0       0       0       0       0       0
 16628 ;;      Temps:          2       0       0       0       0       0       0
 16629 ;;      Totals:         4       0       0       0       0       0       0
 16630 ;;Total ram usage:        4 bytes
 16631 ;; Hardware stack levels used: 1
 16632 ;; Hardware stack levels required when called: 4
 16633 ;; This function calls:
 16634 ;;		Nothing
 16635 ;; This function is called by:
 16636 ;;		_dtoa
 16637 ;; This function uses a non-reentrant model
 16638 ;;
 16639                           
 16640                           	psect	text65
 16641  00619C                     __ptext65:
 16642                           	callstack 0
 16643  00619C                     _abs:
 16644                           	callstack 17
 16645  00619C  BE25               	btfsc	(abs@a+1)^0,7,c
 16646  00619E  EFDB  F030         	goto	u5720
 16647  0061A2  5025               	movf	(abs@a+1)^0,w,c
 16648  0061A4  E106               	bnz	u5721
 16649  0061A6  0424               	decf	abs@a^0,w,c
 16650  0061A8  B0D8               	btfsc	status,0,c
 16651  0061AA  EFD9  F030         	goto	u5721
 16652  0061AE  EFDB  F030         	goto	u5720
 16653  0061B2                     u5721:
 16654  0061B2  EFE9  F030         	goto	l1565
 16655  0061B6                     u5720:
 16656  0061B6  C024  F026         	movff	abs@a,??_abs
 16657  0061BA  C025  F027         	movff	abs@a+1,??_abs+1
 16658  0061BE  1E26               	comf	??_abs^0,f,c
 16659  0061C0  1E27               	comf	(??_abs+1)^0,f,c
 16660  0061C2  4A26               	infsnz	??_abs^0,f,c
 16661  0061C4  2A27               	incf	(??_abs+1)^0,f,c
 16662  0061C6  C026  F024         	movff	??_abs,?_abs
 16663  0061CA  C027  F025         	movff	??_abs+1,?_abs+1
 16664  0061CE  EFED  F030         	goto	l1568
 16665  0061D2                     l1565:
 16666  0061D2  C024  F024         	movff	abs@a,?_abs
 16667  0061D6  C025  F025         	movff	abs@a+1,?_abs+1
 16668  0061DA                     l1568:
 16669  0061DA  0012               	return		;funcret
 16670  0061DC                     __end_of_abs:
 16671                           	callstack 0
 16672                           
 16673 ;; *************** function ___aomod *****************
 16674 ;; Defined at:
 16675 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 16676 ;; Parameters:    Size  Location     Type
 16677 ;;  dividend        8   17[COMRAM] long long 
 16678 ;;  divisor         8   25[COMRAM] long long 
 16679 ;; Auto vars:     Size  Location     Type
 16680 ;;  sign            1   34[COMRAM] unsigned char 
 16681 ;;  counter         1   33[COMRAM] unsigned char 
 16682 ;; Return value:  Size  Location     Type
 16683 ;;                  8   17[COMRAM] long long 
 16684 ;; Registers used:
 16685 ;;		wreg, status,2, status,0
 16686 ;; Tracked objects:
 16687 ;;		On entry : 0/0
 16688 ;;		On exit  : 0/0
 16689 ;;		Unchanged: 0/0
 16690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16691 ;;      Params:        16       0       0       0       0       0       0
 16692 ;;      Locals:         2       0       0       0       0       0       0
 16693 ;;      Temps:          0       0       0       0       0       0       0
 16694 ;;      Totals:        18       0       0       0       0       0       0
 16695 ;;Total ram usage:       18 bytes
 16696 ;; Hardware stack levels used: 1
 16697 ;; Hardware stack levels required when called: 4
 16698 ;; This function calls:
 16699 ;;		Nothing
 16700 ;; This function is called by:
 16701 ;;		_dtoa
 16702 ;; This function uses a non-reentrant model
 16703 ;;
 16704                           
 16705                           	psect	text66
 16706  003F8C                     __ptext66:
 16707                           	callstack 0
 16708  003F8C                     ___aomod:
 16709                           	callstack 17
 16710  003F8C  0E00               	movlw	0
 16711  003F8E  6E23               	movwf	___aomod@sign^0,c
 16712  003F90  BE19               	btfsc	(___aomod@dividend+7)^0,7,c
 16713  003F92  EFCF  F01F         	goto	u5620
 16714  003F96  EFCD  F01F         	goto	u5621
 16715  003F9A                     u5621:
 16716  003F9A  EFE1  F01F         	goto	l8007
 16717  003F9E                     u5620:
 16718  003F9E  1E19               	comf	(___aomod@dividend+7)^0,f,c
 16719  003FA0  1E18               	comf	(___aomod@dividend+6)^0,f,c
 16720  003FA2  1E17               	comf	(___aomod@dividend+5)^0,f,c
 16721  003FA4  1E16               	comf	(___aomod@dividend+4)^0,f,c
 16722  003FA6  1E15               	comf	(___aomod@dividend+3)^0,f,c
 16723  003FA8  1E14               	comf	(___aomod@dividend+2)^0,f,c
 16724  003FAA  1E13               	comf	(___aomod@dividend+1)^0,f,c
 16725  003FAC  6C12               	negf	___aomod@dividend^0,c
 16726  003FAE  0E00               	movlw	0
 16727  003FB0  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 16728  003FB2  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 16729  003FB4  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 16730  003FB6  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 16731  003FB8  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 16732  003FBA  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 16733  003FBC  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 16734  003FBE  0E01               	movlw	1
 16735  003FC0  6E23               	movwf	___aomod@sign^0,c
 16736  003FC2                     l8007:
 16737  003FC2  BE21               	btfsc	(___aomod@divisor+7)^0,7,c
 16738  003FC4  EFE8  F01F         	goto	u5630
 16739  003FC8  EFE6  F01F         	goto	u5631
 16740  003FCC                     u5631:
 16741  003FCC  EFF8  F01F         	goto	l8011
 16742  003FD0                     u5630:
 16743  003FD0  1E21               	comf	(___aomod@divisor+7)^0,f,c
 16744  003FD2  1E20               	comf	(___aomod@divisor+6)^0,f,c
 16745  003FD4  1E1F               	comf	(___aomod@divisor+5)^0,f,c
 16746  003FD6  1E1E               	comf	(___aomod@divisor+4)^0,f,c
 16747  003FD8  1E1D               	comf	(___aomod@divisor+3)^0,f,c
 16748  003FDA  1E1C               	comf	(___aomod@divisor+2)^0,f,c
 16749  003FDC  1E1B               	comf	(___aomod@divisor+1)^0,f,c
 16750  003FDE  6C1A               	negf	___aomod@divisor^0,c
 16751  003FE0  0E00               	movlw	0
 16752  003FE2  221B               	addwfc	(___aomod@divisor+1)^0,f,c
 16753  003FE4  221C               	addwfc	(___aomod@divisor+2)^0,f,c
 16754  003FE6  221D               	addwfc	(___aomod@divisor+3)^0,f,c
 16755  003FE8  221E               	addwfc	(___aomod@divisor+4)^0,f,c
 16756  003FEA  221F               	addwfc	(___aomod@divisor+5)^0,f,c
 16757  003FEC  2220               	addwfc	(___aomod@divisor+6)^0,f,c
 16758  003FEE  2221               	addwfc	(___aomod@divisor+7)^0,f,c
 16759  003FF0                     l8011:
 16760  003FF0  501A               	movf	___aomod@divisor^0,w,c
 16761  003FF2  101B               	iorwf	(___aomod@divisor+1)^0,w,c
 16762  003FF4  101C               	iorwf	(___aomod@divisor+2)^0,w,c
 16763  003FF6  101D               	iorwf	(___aomod@divisor+3)^0,w,c
 16764  003FF8  101E               	iorwf	(___aomod@divisor+4)^0,w,c
 16765  003FFA  101F               	iorwf	(___aomod@divisor+5)^0,w,c
 16766  003FFC  1020               	iorwf	(___aomod@divisor+6)^0,w,c
 16767  003FFE  1021               	iorwf	(___aomod@divisor+7)^0,w,c
 16768  004000  B4D8               	btfsc	status,2,c
 16769  004002  EF05  F020         	goto	u5641
 16770  004006  EF07  F020         	goto	u5640
 16771  00400A                     u5641:
 16772  00400A  EF4F  F020         	goto	l8027
 16773  00400E                     u5640:
 16774  00400E  0E01               	movlw	1
 16775  004010  6E22               	movwf	___aomod@counter^0,c
 16776  004012  EF15  F020         	goto	l8017
 16777  004016                     l8015:
 16778  004016  90D8               	bcf	status,0,c
 16779  004018  361A               	rlcf	___aomod@divisor^0,f,c
 16780  00401A  361B               	rlcf	(___aomod@divisor+1)^0,f,c
 16781  00401C  361C               	rlcf	(___aomod@divisor+2)^0,f,c
 16782  00401E  361D               	rlcf	(___aomod@divisor+3)^0,f,c
 16783  004020  361E               	rlcf	(___aomod@divisor+4)^0,f,c
 16784  004022  361F               	rlcf	(___aomod@divisor+5)^0,f,c
 16785  004024  3620               	rlcf	(___aomod@divisor+6)^0,f,c
 16786  004026  3621               	rlcf	(___aomod@divisor+7)^0,f,c
 16787  004028  2A22               	incf	___aomod@counter^0,f,c
 16788  00402A                     l8017:
 16789  00402A  AE21               	btfss	(___aomod@divisor+7)^0,7,c
 16790  00402C  EF1A  F020         	goto	u5651
 16791  004030  EF1C  F020         	goto	u5650
 16792  004034                     u5651:
 16793  004034  EF0B  F020         	goto	l8015
 16794  004038                     u5650:
 16795  004038                     l8019:
 16796  004038  501A               	movf	___aomod@divisor^0,w,c
 16797  00403A  5C12               	subwf	___aomod@dividend^0,w,c
 16798  00403C  501B               	movf	(___aomod@divisor+1)^0,w,c
 16799  00403E  5813               	subwfb	(___aomod@dividend+1)^0,w,c
 16800  004040  501C               	movf	(___aomod@divisor+2)^0,w,c
 16801  004042  5814               	subwfb	(___aomod@dividend+2)^0,w,c
 16802  004044  501D               	movf	(___aomod@divisor+3)^0,w,c
 16803  004046  5815               	subwfb	(___aomod@dividend+3)^0,w,c
 16804  004048  501E               	movf	(___aomod@divisor+4)^0,w,c
 16805  00404A  5816               	subwfb	(___aomod@dividend+4)^0,w,c
 16806  00404C  501F               	movf	(___aomod@divisor+5)^0,w,c
 16807  00404E  5817               	subwfb	(___aomod@dividend+5)^0,w,c
 16808  004050  5020               	movf	(___aomod@divisor+6)^0,w,c
 16809  004052  5818               	subwfb	(___aomod@dividend+6)^0,w,c
 16810  004054  5021               	movf	(___aomod@divisor+7)^0,w,c
 16811  004056  5819               	subwfb	(___aomod@dividend+7)^0,w,c
 16812  004058  A0D8               	btfss	status,0,c
 16813  00405A  EF31  F020         	goto	u5661
 16814  00405E  EF33  F020         	goto	u5660
 16815  004062                     u5661:
 16816  004062  EF43  F020         	goto	l8023
 16817  004066                     u5660:
 16818  004066  501A               	movf	___aomod@divisor^0,w,c
 16819  004068  5E12               	subwf	___aomod@dividend^0,f,c
 16820  00406A  501B               	movf	(___aomod@divisor+1)^0,w,c
 16821  00406C  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
 16822  00406E  501C               	movf	(___aomod@divisor+2)^0,w,c
 16823  004070  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
 16824  004072  501D               	movf	(___aomod@divisor+3)^0,w,c
 16825  004074  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
 16826  004076  501E               	movf	(___aomod@divisor+4)^0,w,c
 16827  004078  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
 16828  00407A  501F               	movf	(___aomod@divisor+5)^0,w,c
 16829  00407C  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
 16830  00407E  5020               	movf	(___aomod@divisor+6)^0,w,c
 16831  004080  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
 16832  004082  5021               	movf	(___aomod@divisor+7)^0,w,c
 16833  004084  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
 16834  004086                     l8023:
 16835  004086  90D8               	bcf	status,0,c
 16836  004088  3221               	rrcf	(___aomod@divisor+7)^0,f,c
 16837  00408A  3220               	rrcf	(___aomod@divisor+6)^0,f,c
 16838  00408C  321F               	rrcf	(___aomod@divisor+5)^0,f,c
 16839  00408E  321E               	rrcf	(___aomod@divisor+4)^0,f,c
 16840  004090  321D               	rrcf	(___aomod@divisor+3)^0,f,c
 16841  004092  321C               	rrcf	(___aomod@divisor+2)^0,f,c
 16842  004094  321B               	rrcf	(___aomod@divisor+1)^0,f,c
 16843  004096  321A               	rrcf	___aomod@divisor^0,f,c
 16844  004098  2E22               	decfsz	___aomod@counter^0,f,c
 16845  00409A  EF1C  F020         	goto	l8019
 16846  00409E                     l8027:
 16847  00409E  5023               	movf	___aomod@sign^0,w,c
 16848  0040A0  B4D8               	btfsc	status,2,c
 16849  0040A2  EF55  F020         	goto	u5671
 16850  0040A6  EF57  F020         	goto	u5670
 16851  0040AA                     u5671:
 16852  0040AA  EF67  F020         	goto	l8031
 16853  0040AE                     u5670:
 16854  0040AE  1E19               	comf	(___aomod@dividend+7)^0,f,c
 16855  0040B0  1E18               	comf	(___aomod@dividend+6)^0,f,c
 16856  0040B2  1E17               	comf	(___aomod@dividend+5)^0,f,c
 16857  0040B4  1E16               	comf	(___aomod@dividend+4)^0,f,c
 16858  0040B6  1E15               	comf	(___aomod@dividend+3)^0,f,c
 16859  0040B8  1E14               	comf	(___aomod@dividend+2)^0,f,c
 16860  0040BA  1E13               	comf	(___aomod@dividend+1)^0,f,c
 16861  0040BC  6C12               	negf	___aomod@dividend^0,c
 16862  0040BE  0E00               	movlw	0
 16863  0040C0  2213               	addwfc	(___aomod@dividend+1)^0,f,c
 16864  0040C2  2214               	addwfc	(___aomod@dividend+2)^0,f,c
 16865  0040C4  2215               	addwfc	(___aomod@dividend+3)^0,f,c
 16866  0040C6  2216               	addwfc	(___aomod@dividend+4)^0,f,c
 16867  0040C8  2217               	addwfc	(___aomod@dividend+5)^0,f,c
 16868  0040CA  2218               	addwfc	(___aomod@dividend+6)^0,f,c
 16869  0040CC  2219               	addwfc	(___aomod@dividend+7)^0,f,c
 16870  0040CE                     l8031:
 16871  0040CE  C012  F012         	movff	___aomod@dividend,?___aomod
 16872  0040D2  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
 16873  0040D6  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
 16874  0040DA  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
 16875  0040DE  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
 16876  0040E2  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
 16877  0040E6  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
 16878  0040EA  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
 16879  0040EE  0012               	return		;funcret
 16880  0040F0                     __end_of___aomod:
 16881                           	callstack 0
 16882                           
 16883 ;; *************** function ___aodiv *****************
 16884 ;; Defined at:
 16885 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 16886 ;; Parameters:    Size  Location     Type
 16887 ;;  dividend        8   17[COMRAM] long long 
 16888 ;;  divisor         8   25[COMRAM] long long 
 16889 ;; Auto vars:     Size  Location     Type
 16890 ;;  quotient        8   35[COMRAM] long long 
 16891 ;;  sign            1   34[COMRAM] unsigned char 
 16892 ;;  counter         1   33[COMRAM] unsigned char 
 16893 ;; Return value:  Size  Location     Type
 16894 ;;                  8   17[COMRAM] long long 
 16895 ;; Registers used:
 16896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16897 ;; Tracked objects:
 16898 ;;		On entry : 0/0
 16899 ;;		On exit  : 0/0
 16900 ;;		Unchanged: 0/0
 16901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16902 ;;      Params:        16       0       0       0       0       0       0
 16903 ;;      Locals:        10       0       0       0       0       0       0
 16904 ;;      Temps:          0       0       0       0       0       0       0
 16905 ;;      Totals:        26       0       0       0       0       0       0
 16906 ;;Total ram usage:       26 bytes
 16907 ;; Hardware stack levels used: 1
 16908 ;; Hardware stack levels required when called: 4
 16909 ;; This function calls:
 16910 ;;		Nothing
 16911 ;; This function is called by:
 16912 ;;		_dtoa
 16913 ;; This function uses a non-reentrant model
 16914 ;;
 16915                           
 16916                           	psect	text67
 16917  003E04                     __ptext67:
 16918                           	callstack 0
 16919  003E04                     ___aodiv:
 16920                           	callstack 17
 16921  003E04  0E00               	movlw	0
 16922  003E06  6E23               	movwf	___aodiv@sign^0,c
 16923  003E08  BE21               	btfsc	(___aodiv@divisor+7)^0,7,c
 16924  003E0A  EF0B  F01F         	goto	u5550
 16925  003E0E  EF09  F01F         	goto	u5551
 16926  003E12                     u5551:
 16927  003E12  EF1D  F01F         	goto	l7963
 16928  003E16                     u5550:
 16929  003E16  1E21               	comf	(___aodiv@divisor+7)^0,f,c
 16930  003E18  1E20               	comf	(___aodiv@divisor+6)^0,f,c
 16931  003E1A  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
 16932  003E1C  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
 16933  003E1E  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
 16934  003E20  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
 16935  003E22  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
 16936  003E24  6C1A               	negf	___aodiv@divisor^0,c
 16937  003E26  0E00               	movlw	0
 16938  003E28  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
 16939  003E2A  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
 16940  003E2C  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
 16941  003E2E  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
 16942  003E30  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
 16943  003E32  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
 16944  003E34  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
 16945  003E36  0E01               	movlw	1
 16946  003E38  6E23               	movwf	___aodiv@sign^0,c
 16947  003E3A                     l7963:
 16948  003E3A  BE19               	btfsc	(___aodiv@dividend+7)^0,7,c
 16949  003E3C  EF24  F01F         	goto	u5560
 16950  003E40  EF22  F01F         	goto	u5561
 16951  003E44                     u5561:
 16952  003E44  EF36  F01F         	goto	l7969
 16953  003E48                     u5560:
 16954  003E48  1E19               	comf	(___aodiv@dividend+7)^0,f,c
 16955  003E4A  1E18               	comf	(___aodiv@dividend+6)^0,f,c
 16956  003E4C  1E17               	comf	(___aodiv@dividend+5)^0,f,c
 16957  003E4E  1E16               	comf	(___aodiv@dividend+4)^0,f,c
 16958  003E50  1E15               	comf	(___aodiv@dividend+3)^0,f,c
 16959  003E52  1E14               	comf	(___aodiv@dividend+2)^0,f,c
 16960  003E54  1E13               	comf	(___aodiv@dividend+1)^0,f,c
 16961  003E56  6C12               	negf	___aodiv@dividend^0,c
 16962  003E58  0E00               	movlw	0
 16963  003E5A  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
 16964  003E5C  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
 16965  003E5E  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
 16966  003E60  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
 16967  003E62  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
 16968  003E64  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
 16969  003E66  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
 16970  003E68  0E01               	movlw	1
 16971  003E6A  1A23               	xorwf	___aodiv@sign^0,f,c
 16972  003E6C                     l7969:
 16973  003E6C  EE20  F024         	lfsr	2,___aodiv@quotient
 16974  003E70  0E07               	movlw	7
 16975  003E72                     u5571:
 16976  003E72  6ADE               	clrf	postinc2,c
 16977  003E74  06E8               	decf	wreg,f,c
 16978  003E76  E2FD               	bc	u5571
 16979  003E78  501A               	movf	___aodiv@divisor^0,w,c
 16980  003E7A  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
 16981  003E7C  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
 16982  003E7E  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
 16983  003E80  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
 16984  003E82  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
 16985  003E84  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
 16986  003E86  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
 16987  003E88  B4D8               	btfsc	status,2,c
 16988  003E8A  EF49  F01F         	goto	u5581
 16989  003E8E  EF4B  F01F         	goto	u5580
 16990  003E92                     u5581:
 16991  003E92  EF9D  F01F         	goto	l7991
 16992  003E96                     u5580:
 16993  003E96  0E01               	movlw	1
 16994  003E98  6E22               	movwf	___aodiv@counter^0,c
 16995  003E9A  EF59  F01F         	goto	l7977
 16996  003E9E                     l7975:
 16997  003E9E  90D8               	bcf	status,0,c
 16998  003EA0  361A               	rlcf	___aodiv@divisor^0,f,c
 16999  003EA2  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
 17000  003EA4  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
 17001  003EA6  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
 17002  003EA8  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
 17003  003EAA  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
 17004  003EAC  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
 17005  003EAE  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
 17006  003EB0  2A22               	incf	___aodiv@counter^0,f,c
 17007  003EB2                     l7977:
 17008  003EB2  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
 17009  003EB4  EF5E  F01F         	goto	u5591
 17010  003EB8  EF60  F01F         	goto	u5590
 17011  003EBC                     u5591:
 17012  003EBC  EF4F  F01F         	goto	l7975
 17013  003EC0                     u5590:
 17014  003EC0                     l7979:
 17015  003EC0  90D8               	bcf	status,0,c
 17016  003EC2  3624               	rlcf	___aodiv@quotient^0,f,c
 17017  003EC4  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
 17018  003EC6  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
 17019  003EC8  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
 17020  003ECA  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
 17021  003ECC  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
 17022  003ECE  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
 17023  003ED0  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
 17024  003ED2  501A               	movf	___aodiv@divisor^0,w,c
 17025  003ED4  5C12               	subwf	___aodiv@dividend^0,w,c
 17026  003ED6  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17027  003ED8  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
 17028  003EDA  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17029  003EDC  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
 17030  003EDE  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17031  003EE0  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
 17032  003EE2  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17033  003EE4  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
 17034  003EE6  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17035  003EE8  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
 17036  003EEA  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17037  003EEC  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
 17038  003EEE  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17039  003EF0  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
 17040  003EF2  A0D8               	btfss	status,0,c
 17041  003EF4  EF7E  F01F         	goto	u5601
 17042  003EF8  EF80  F01F         	goto	u5600
 17043  003EFC                     u5601:
 17044  003EFC  EF91  F01F         	goto	l7987
 17045  003F00                     u5600:
 17046  003F00  501A               	movf	___aodiv@divisor^0,w,c
 17047  003F02  5E12               	subwf	___aodiv@dividend^0,f,c
 17048  003F04  501B               	movf	(___aodiv@divisor+1)^0,w,c
 17049  003F06  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
 17050  003F08  501C               	movf	(___aodiv@divisor+2)^0,w,c
 17051  003F0A  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
 17052  003F0C  501D               	movf	(___aodiv@divisor+3)^0,w,c
 17053  003F0E  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
 17054  003F10  501E               	movf	(___aodiv@divisor+4)^0,w,c
 17055  003F12  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
 17056  003F14  501F               	movf	(___aodiv@divisor+5)^0,w,c
 17057  003F16  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
 17058  003F18  5020               	movf	(___aodiv@divisor+6)^0,w,c
 17059  003F1A  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
 17060  003F1C  5021               	movf	(___aodiv@divisor+7)^0,w,c
 17061  003F1E  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
 17062  003F20  8024               	bsf	___aodiv@quotient^0,0,c
 17063  003F22                     l7987:
 17064  003F22  90D8               	bcf	status,0,c
 17065  003F24  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
 17066  003F26  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
 17067  003F28  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
 17068  003F2A  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
 17069  003F2C  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
 17070  003F2E  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
 17071  003F30  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
 17072  003F32  321A               	rrcf	___aodiv@divisor^0,f,c
 17073  003F34  2E22               	decfsz	___aodiv@counter^0,f,c
 17074  003F36  EF60  F01F         	goto	l7979
 17075  003F3A                     l7991:
 17076  003F3A  5023               	movf	___aodiv@sign^0,w,c
 17077  003F3C  B4D8               	btfsc	status,2,c
 17078  003F3E  EFA3  F01F         	goto	u5611
 17079  003F42  EFA5  F01F         	goto	u5610
 17080  003F46                     u5611:
 17081  003F46  EFB5  F01F         	goto	l7995
 17082  003F4A                     u5610:
 17083  003F4A  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
 17084  003F4C  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
 17085  003F4E  1E29               	comf	(___aodiv@quotient+5)^0,f,c
 17086  003F50  1E28               	comf	(___aodiv@quotient+4)^0,f,c
 17087  003F52  1E27               	comf	(___aodiv@quotient+3)^0,f,c
 17088  003F54  1E26               	comf	(___aodiv@quotient+2)^0,f,c
 17089  003F56  1E25               	comf	(___aodiv@quotient+1)^0,f,c
 17090  003F58  6C24               	negf	___aodiv@quotient^0,c
 17091  003F5A  0E00               	movlw	0
 17092  003F5C  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
 17093  003F5E  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
 17094  003F60  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
 17095  003F62  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
 17096  003F64  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
 17097  003F66  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
 17098  003F68  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
 17099  003F6A                     l7995:
 17100  003F6A  C024  F012         	movff	___aodiv@quotient,?___aodiv
 17101  003F6E  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
 17102  003F72  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
 17103  003F76  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
 17104  003F7A  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
 17105  003F7E  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
 17106  003F82  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
 17107  003F86  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
 17108  003F8A  0012               	return		;funcret
 17109  003F8C                     __end_of___aodiv:
 17110                           	callstack 0
 17111                           
 17112 ;; *************** function _LCD_DrawText *****************
 17113 ;; Defined at:
 17114 ;;		line 713 in file "libraries/lcd_highlevel.c"
 17115 ;; Parameters:    Size  Location     Type
 17116 ;;  msg             2   31[COMRAM] PTR const unsigned char 
 17117 ;;		 -> g1.str(2), touchScreenController@s(20), STR_14(13), STR_13(13), 
 17118 ;;		 -> STR_12(11), STR_11(8), STR_10(9), STR_9(4), 
 17119 ;;		 -> STR_8(4), STR_7(8), STR_6(9), STR_5(9), 
 17120 ;;		 -> STR_4(11), g1(239), STR_1(10), 
 17121 ;;  font            2   33[COMRAM] PTR const struct .
 17122 ;;		 -> arialNarrow_12ptFontInfo(7), 
 17123 ;;  align           1   35[COMRAM] enum E355
 17124 ;;  posX            2   36[COMRAM] unsigned short 
 17125 ;;  posY            2   38[COMRAM] unsigned short 
 17126 ;;  color           2   40[COMRAM] unsigned short 
 17127 ;;  bg_color        2   42[COMRAM] unsigned short 
 17128 ;; Auto vars:     Size  Location     Type
 17129 ;;  posXEnd         2   58[COMRAM] unsigned short 
 17130 ;;  posYEnd         2   56[COMRAM] unsigned short 
 17131 ;;  yOffset         2   52[COMRAM] unsigned short 
 17132 ;;  offset          2   50[COMRAM] unsigned short 
 17133 ;;  width           1   64[COMRAM] unsigned char 
 17134 ;;  x               1   63[COMRAM] unsigned char 
 17135 ;;  tempChar        1   62[COMRAM] char 
 17136 ;;  i               1   61[COMRAM] unsigned char 
 17137 ;;  y               1   60[COMRAM] unsigned char 
 17138 ;;  fontPixel       1   55[COMRAM] unsigned char 
 17139 ;;  fontByte        1   54[COMRAM] unsigned char 
 17140 ;; Return value:  Size  Location     Type
 17141 ;;                  1    wreg      void 
 17142 ;; Registers used:
 17143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17144 ;; Tracked objects:
 17145 ;;		On entry : 0/0
 17146 ;;		On exit  : 0/0
 17147 ;;		Unchanged: 0/0
 17148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17149 ;;      Params:        13       0       0       0       0       0       0
 17150 ;;      Locals:        15       0       0       0       0       0       0
 17151 ;;      Temps:          6       0       0       0       0       0       0
 17152 ;;      Totals:        34       0       0       0       0       0       0
 17153 ;;Total ram usage:       34 bytes
 17154 ;; Hardware stack levels used: 1
 17155 ;; Hardware stack levels required when called: 5
 17156 ;; This function calls:
 17157 ;;		___awdiv
 17158 ;;		___wmul
 17159 ;;		_strlen
 17160 ;; This function is called by:
 17161 ;;		_Factory_init
 17162 ;;		_Score_draw
 17163 ;;		_Menu_welcomeDraw
 17164 ;;		_Menu_parametersDraw
 17165 ;;		_Menu_endGame
 17166 ;;		_LCD_ButtonDraw
 17167 ;;		_touchScreenController
 17168 ;; This function uses a non-reentrant model
 17169 ;;
 17170                           
 17171                           	psect	text68
 17172  001E16                     __ptext68:
 17173                           	callstack 0
 17174  001E16                     _LCD_DrawText:
 17175                           	callstack 20
 17176  001E16                     
 17177                           ;libraries/lcd_highlevel.c: 713: void LCD_DrawText(const uint8_t * msg,const FONT_INFO *
      +                           font, ALIGN align,;libraries/lcd_highlevel.c: 714:         uint16_t posX, uint16_t posY
      +                          , uint16_t color, uint16_t bg_color);libraries/lcd_highlevel.c: 715: {;libraries/lcd_hig
      +                          hlevel.c: 716:   uint8_t x,y,i;;libraries/lcd_highlevel.c: 717:   int8_t tempChar;;libra
      +                          ries/lcd_highlevel.c: 718:   uint16_t offset;;libraries/lcd_highlevel.c: 719:   uint8_t 
      +                          width=0;
 17178  001E16  0E00               	movlw	0
 17179  001E18  6E41               	movwf	LCD_DrawText@width^0,c
 17180                           
 17181                           ;libraries/lcd_highlevel.c: 720:   uint8_t fontByte,fontPixel;;libraries/lcd_highlevel.c
      +                          : 721:   uint16_t posYEnd, posXEnd, yOffset;;libraries/lcd_highlevel.c: 725:   for(i=0;i
      +                          <strlen(msg);i++)
 17182  001E1A  0E00               	movlw	0
 17183  001E1C  6E3E               	movwf	LCD_DrawText@i^0,c
 17184  001E1E  EF60  F00F         	goto	l8733
 17185  001E22                     l8727:
 17186                           
 17187                           ;libraries/lcd_highlevel.c: 726:   {;libraries/lcd_highlevel.c: 727:     tempChar = (msg
      +                          [i]) - font->start_char;
 17188  001E22  0E01               	movlw	1
 17189  001E24  2422               	addwf	LCD_DrawText@font^0,w,c
 17190  001E26  6E2D               	movwf	??_LCD_DrawText^0,c
 17191  001E28  0E00               	movlw	0
 17192  001E2A  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17193  001E2C  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17194  001E2E  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17195  001E32  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17196  001E36                     	if	0	;tblptru may be non-zero
 17197  001E36                     	endif
 17198  001E36                     	if	0	;tblptru may be non-zero
 17199  001E36                     	endif
 17200  001E36  0008               	tblrd		*
 17201  001E38  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17202  001E3C  503E               	movf	LCD_DrawText@i^0,w,c
 17203  001E3E  2420               	addwf	LCD_DrawText@msg^0,w,c
 17204  001E40  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17205  001E42  0E00               	movlw	0
 17206  001E44  2021               	addwfc	(LCD_DrawText@msg+1)^0,w,c
 17207  001E46  6E31               	movwf	(??_LCD_DrawText+4)^0,c
 17208  001E48  C030  FFF6         	movff	??_LCD_DrawText+3,tblptrl
 17209  001E4C  C031  FFF7         	movff	??_LCD_DrawText+4,tblptrh
 17210  001E50  6AF8               	clrf	tblptru,c
 17211  001E52  0E05               	movlw	(high __ramtop+-1)
 17212  001E54  64F7               	cpfsgt	tblptrh,c
 17213  001E56  D003               	bra	u6257
 17214  001E58  0008               	tblrd		*
 17215  001E5A  50F5               	movf	tablat,w,c
 17216  001E5C  D005               	bra	u6250
 17217  001E5E                     u6257:
 17218  001E5E  CFF6 FFE1          	movff	tblptrl,fsr1l
 17219  001E62  CFF7 FFE2          	movff	tblptrh,fsr1h
 17220  001E66  50E7               	movf	indf1,w,c
 17221  001E68                     u6250:
 17222  001E68  6E32               	movwf	(??_LCD_DrawText+5)^0,c
 17223  001E6A  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17224  001E6C  5C32               	subwf	(??_LCD_DrawText+5)^0,w,c
 17225  001E6E  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17226  001E70                     
 17227                           ;libraries/lcd_highlevel.c: 728:     width += font->descriptor[tempChar].width+2;
 17228  001E70  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17229  001E72  6E1A               	movwf	___wmul@multiplier^0,c
 17230  001E74  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17231  001E76  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17232  001E78  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17233  001E7A  0E00               	movlw	0
 17234  001E7C  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17235  001E7E  0E03               	movlw	3
 17236  001E80  6E1C               	movwf	___wmul@multiplicand^0,c
 17237  001E82  EC90  F031         	call	___wmul	;wreg free
 17238  001E86  0E03               	movlw	3
 17239  001E88  2422               	addwf	LCD_DrawText@font^0,w,c
 17240  001E8A  6E2D               	movwf	??_LCD_DrawText^0,c
 17241  001E8C  0E00               	movlw	0
 17242  001E8E  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17243  001E90  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17244  001E92  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17245  001E96  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17246  001E9A                     	if	0	;tblptru may be non-zero
 17247  001E9A                     	endif
 17248  001E9A                     	if	0	;tblptru may be non-zero
 17249  001E9A                     	endif
 17250  001E9A  0009               	tblrd		*+
 17251  001E9C  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17252  001EA0  0009               	tblrd		*+
 17253  001EA2  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17254  001EA6  501A               	movf	?___wmul^0,w,c
 17255  001EA8  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17256  001EAA  501B               	movf	(?___wmul+1)^0,w,c
 17257  001EAC  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17258  001EAE  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17259  001EB2  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17260  001EB6                     	if	0	;tblptru may be non-zero
 17261  001EB6                     	endif
 17262  001EB6                     	if	0	;tblptru may be non-zero
 17263  001EB6                     	endif
 17264  001EB6  0008               	tblrd		*
 17265  001EB8  50F5               	movf	tablat,w,c
 17266  001EBA  0F02               	addlw	2
 17267  001EBC  2641               	addwf	LCD_DrawText@width^0,f,c
 17268  001EBE                     
 17269                           ;libraries/lcd_highlevel.c: 729:   }
 17270  001EBE  2A3E               	incf	LCD_DrawText@i^0,f,c
 17271  001EC0                     l8733:
 17272  001EC0  C020  F012         	movff	LCD_DrawText@msg,strlen@s
 17273  001EC4  C021  F013         	movff	LCD_DrawText@msg+1,strlen@s+1
 17274  001EC8  EC63  F030         	call	_strlen	;wreg free
 17275  001ECC  503E               	movf	LCD_DrawText@i^0,w,c
 17276  001ECE  6E2D               	movwf	??_LCD_DrawText^0,c
 17277  001ED0  6A2E               	clrf	(??_LCD_DrawText+1)^0,c
 17278  001ED2  5012               	movf	?_strlen^0,w,c
 17279  001ED4  5C2D               	subwf	??_LCD_DrawText^0,w,c
 17280  001ED6  5013               	movf	(?_strlen+1)^0,w,c
 17281  001ED8  582E               	subwfb	(??_LCD_DrawText+1)^0,w,c
 17282  001EDA  A0D8               	btfss	status,0,c
 17283  001EDC  EF72  F00F         	goto	u6261
 17284  001EE0  EF74  F00F         	goto	u6260
 17285  001EE4                     u6261:
 17286  001EE4  EF11  F00F         	goto	l8727
 17287  001EE8                     u6260:
 17288  001EE8                     
 17289                           ;libraries/lcd_highlevel.c: 730:   if(align == A_RIGHT)
 17290  001EE8  0424               	decf	LCD_DrawText@align^0,w,c
 17291  001EEA  A4D8               	btfss	status,2,c
 17292  001EEC  EF7A  F00F         	goto	u6271
 17293  001EF0  EF7C  F00F         	goto	u6270
 17294  001EF4                     u6271:
 17295  001EF4  EF85  F00F         	goto	l8739
 17296  001EF8                     u6270:
 17297  001EF8                     
 17298                           ;libraries/lcd_highlevel.c: 731:   {;libraries/lcd_highlevel.c: 732:     posX = posX - w
      +                          idth;
 17299  001EF8  5041               	movf	LCD_DrawText@width^0,w,c
 17300  001EFA  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17301  001EFC  6E25               	movwf	LCD_DrawText@posX^0,c
 17302  001EFE  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17303  001F00  A0D8               	btfss	status,0,c
 17304  001F02  0426               	decf	(LCD_DrawText@posX+1)^0,w,c
 17305  001F04  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17306                           
 17307                           ;libraries/lcd_highlevel.c: 733:   }
 17308  001F06  EF9D  F00F         	goto	l8743
 17309  001F0A                     l8739:
 17310  001F0A  0E02               	movlw	2
 17311  001F0C  1824               	xorwf	LCD_DrawText@align^0,w,c
 17312  001F0E  A4D8               	btfss	status,2,c
 17313  001F10  EF8C  F00F         	goto	u6281
 17314  001F14  EF8E  F00F         	goto	u6280
 17315  001F18                     u6281:
 17316  001F18  EF9D  F00F         	goto	l8743
 17317  001F1C                     u6280:
 17318  001F1C                     
 17319                           ;libraries/lcd_highlevel.c: 735:   {;libraries/lcd_highlevel.c: 736:     posX = posX - w
      +                          idth / 2;
 17320  001F1C  C041  F012         	movff	LCD_DrawText@width,___awdiv@dividend
 17321  001F20  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17322  001F22  0E00               	movlw	0
 17323  001F24  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17324  001F26  0E02               	movlw	2
 17325  001F28  6E14               	movwf	___awdiv@divisor^0,c
 17326  001F2A  ECE5  F028         	call	___awdiv	;wreg free
 17327  001F2E  5012               	movf	?___awdiv^0,w,c
 17328  001F30  5C25               	subwf	LCD_DrawText@posX^0,w,c
 17329  001F32  6E25               	movwf	LCD_DrawText@posX^0,c
 17330  001F34  5013               	movf	(?___awdiv+1)^0,w,c
 17331  001F36  5826               	subwfb	(LCD_DrawText@posX+1)^0,w,c
 17332  001F38  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17333  001F3A                     l8743:
 17334                           
 17335                           ;libraries/lcd_highlevel.c: 740:   {;libraries/lcd_highlevel.c: 741:     tempChar = (*ms
      +                          g) - font->start_char;
 17336  001F3A  0E01               	movlw	1
 17337  001F3C  2422               	addwf	LCD_DrawText@font^0,w,c
 17338  001F3E  6E2D               	movwf	??_LCD_DrawText^0,c
 17339  001F40  0E00               	movlw	0
 17340  001F42  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17341  001F44  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17342  001F46  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17343  001F4A  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17344  001F4E                     	if	0	;tblptru may be non-zero
 17345  001F4E                     	endif
 17346  001F4E                     	if	0	;tblptru may be non-zero
 17347  001F4E                     	endif
 17348  001F4E  0008               	tblrd		*
 17349  001F50  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17350  001F54  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17351  001F58  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17352  001F5C  6AF8               	clrf	tblptru,c
 17353  001F5E  0E05               	movlw	(high __ramtop+-1)
 17354  001F60  64F7               	cpfsgt	tblptrh,c
 17355  001F62  D003               	bra	u6297
 17356  001F64  0008               	tblrd		*
 17357  001F66  50F5               	movf	tablat,w,c
 17358  001F68  D005               	bra	u6290
 17359  001F6A                     u6297:
 17360  001F6A  CFF6 FFE1          	movff	tblptrl,fsr1l
 17361  001F6E  CFF7 FFE2          	movff	tblptrh,fsr1h
 17362  001F72  50E7               	movf	indf1,w,c
 17363  001F74                     u6290:
 17364  001F74  6E30               	movwf	(??_LCD_DrawText+3)^0,c
 17365  001F76  502F               	movf	(??_LCD_DrawText+2)^0,w,c
 17366  001F78  5C30               	subwf	(??_LCD_DrawText+3)^0,w,c
 17367  001F7A  6E3F               	movwf	LCD_DrawText@tempChar^0,c
 17368  001F7C                     
 17369                           ;libraries/lcd_highlevel.c: 742:     offset = font->descriptor[tempChar].offset;
 17370  001F7C  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17371  001F7E  6E1A               	movwf	___wmul@multiplier^0,c
 17372  001F80  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17373  001F82  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17374  001F84  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17375  001F86  0E00               	movlw	0
 17376  001F88  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17377  001F8A  0E03               	movlw	3
 17378  001F8C  6E1C               	movwf	___wmul@multiplicand^0,c
 17379  001F8E  EC90  F031         	call	___wmul	;wreg free
 17380  001F92  0E03               	movlw	3
 17381  001F94  2422               	addwf	LCD_DrawText@font^0,w,c
 17382  001F96  6E2D               	movwf	??_LCD_DrawText^0,c
 17383  001F98  0E00               	movlw	0
 17384  001F9A  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17385  001F9C  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17386  001F9E  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17387  001FA2  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17388  001FA6                     	if	0	;tblptru may be non-zero
 17389  001FA6                     	endif
 17390  001FA6                     	if	0	;tblptru may be non-zero
 17391  001FA6                     	endif
 17392  001FA6  0009               	tblrd		*+
 17393  001FA8  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17394  001FAC  0009               	tblrd		*+
 17395  001FAE  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17396  001FB2  501A               	movf	?___wmul^0,w,c
 17397  001FB4  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17398  001FB6  501B               	movf	(?___wmul+1)^0,w,c
 17399  001FB8  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17400  001FBA  0E01               	movlw	1
 17401  001FBC  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17402  001FBE  0E00               	movlw	0
 17403  001FC0  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17404  001FC2  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17405  001FC6  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17406  001FCA                     	if	0	;tblptru may be non-zero
 17407  001FCA                     	endif
 17408  001FCA                     	if	0	;tblptru may be non-zero
 17409  001FCA                     	endif
 17410  001FCA  0009               	tblrd		*+
 17411  001FCC  CFF5 F033          	movff	tablat,LCD_DrawText@offset
 17412  001FD0  000A               	tblrd		*-
 17413  001FD2  CFF5 F034          	movff	tablat,LCD_DrawText@offset+1
 17414  001FD6                     
 17415                           ;libraries/lcd_highlevel.c: 743:     width = font->descriptor[tempChar].width;
 17416  001FD6  503F               	movf	LCD_DrawText@tempChar^0,w,c
 17417  001FD8  6E1A               	movwf	___wmul@multiplier^0,c
 17418  001FDA  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17419  001FDC  BE1A               	btfsc	___wmul@multiplier^0,7,c
 17420  001FDE  061B               	decf	(___wmul@multiplier+1)^0,f,c
 17421  001FE0  0E00               	movlw	0
 17422  001FE2  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
 17423  001FE4  0E03               	movlw	3
 17424  001FE6  6E1C               	movwf	___wmul@multiplicand^0,c
 17425  001FE8  EC90  F031         	call	___wmul	;wreg free
 17426  001FEC  0E03               	movlw	3
 17427  001FEE  2422               	addwf	LCD_DrawText@font^0,w,c
 17428  001FF0  6E2D               	movwf	??_LCD_DrawText^0,c
 17429  001FF2  0E00               	movlw	0
 17430  001FF4  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17431  001FF6  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17432  001FF8  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17433  001FFC  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17434  002000                     	if	0	;tblptru may be non-zero
 17435  002000                     	endif
 17436  002000                     	if	0	;tblptru may be non-zero
 17437  002000                     	endif
 17438  002000  0009               	tblrd		*+
 17439  002002  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17440  002006  0009               	tblrd		*+
 17441  002008  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17442  00200C  501A               	movf	?___wmul^0,w,c
 17443  00200E  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17444  002010  501B               	movf	(?___wmul+1)^0,w,c
 17445  002012  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17446  002014  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17447  002018  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17448  00201C                     	if	0	;tblptru may be non-zero
 17449  00201C                     	endif
 17450  00201C                     	if	0	;tblptru may be non-zero
 17451  00201C                     	endif
 17452  00201C  0008               	tblrd		*
 17453  00201E  CFF5 F041          	movff	tablat,LCD_DrawText@width
 17454  002022                     
 17455                           ;libraries/lcd_highlevel.c: 748:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17456  002022  0E2A               	movlw	42
 17457  002024  6E80               	movwf	128,c	;volatile
 17458  002026  988B               	bcf	3979,4,c	;volatile
 17459  002028  968B               	bcf	3979,3,c	;volatile
 17460  00202A  868B               	bsf	3979,3,c	;volatile
 17461  00202C  888B               	bsf	3979,4,c	;volatile
 17462  00202E                     
 17463                           ;libraries/lcd_highlevel.c: 749:     PORTA = posX>>8; LATC3 = 0; LATC3 = 1;;
 17464  00202E  5026               	movf	(LCD_DrawText@posX+1)^0,w,c
 17465  002030  6E80               	movwf	128,c	;volatile
 17466  002032  968B               	bcf	3979,3,c	;volatile
 17467  002034  868B               	bsf	3979,3,c	;volatile
 17468  002036                     
 17469                           ;libraries/lcd_highlevel.c: 750:     PORTA = posX; LATC3 = 0; LATC3 = 1;;
 17470  002036  C025  FF80         	movff	LCD_DrawText@posX,3968	;volatile
 17471  00203A  968B               	bcf	3979,3,c	;volatile
 17472  00203C  868B               	bsf	3979,3,c	;volatile
 17473  00203E                     
 17474                           ;libraries/lcd_highlevel.c: 751:     posXEnd = posX+width-1+2;
 17475  00203E  5041               	movf	LCD_DrawText@width^0,w,c
 17476  002040  2425               	addwf	LCD_DrawText@posX^0,w,c
 17477  002042  6E2D               	movwf	??_LCD_DrawText^0,c
 17478  002044  0E00               	movlw	0
 17479  002046  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 17480  002048  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17481  00204A  0E01               	movlw	1
 17482  00204C  242D               	addwf	??_LCD_DrawText^0,w,c
 17483  00204E  6E3B               	movwf	LCD_DrawText@posXEnd^0,c
 17484  002050  0E00               	movlw	0
 17485  002052  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17486  002054  6E3C               	movwf	(LCD_DrawText@posXEnd+1)^0,c
 17487  002056                     
 17488                           ;libraries/lcd_highlevel.c: 752:     PORTA = posXEnd>>8; LATC3 = 0; LATC3 = 1;;
 17489  002056  503C               	movf	(LCD_DrawText@posXEnd+1)^0,w,c
 17490  002058  6E80               	movwf	128,c	;volatile
 17491  00205A  968B               	bcf	3979,3,c	;volatile
 17492  00205C  868B               	bsf	3979,3,c	;volatile
 17493  00205E                     
 17494                           ;libraries/lcd_highlevel.c: 753:     PORTA = posXEnd; LATC3 = 0; LATC3 = 1;;
 17495  00205E  C03B  FF80         	movff	LCD_DrawText@posXEnd,3968	;volatile
 17496  002062  968B               	bcf	3979,3,c	;volatile
 17497  002064  868B               	bsf	3979,3,c	;volatile
 17498  002066                     
 17499                           ;libraries/lcd_highlevel.c: 755:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17500  002066  0E2B               	movlw	43
 17501  002068  6E80               	movwf	128,c	;volatile
 17502  00206A  988B               	bcf	3979,4,c	;volatile
 17503  00206C  968B               	bcf	3979,3,c	;volatile
 17504  00206E  868B               	bsf	3979,3,c	;volatile
 17505  002070  888B               	bsf	3979,4,c	;volatile
 17506  002072                     
 17507                           ;libraries/lcd_highlevel.c: 756:     PORTA = posY>>8; LATC3 = 0; LATC3 = 1;;
 17508  002072  5028               	movf	(LCD_DrawText@posY+1)^0,w,c
 17509  002074  6E80               	movwf	128,c	;volatile
 17510  002076  968B               	bcf	3979,3,c	;volatile
 17511  002078  868B               	bsf	3979,3,c	;volatile
 17512  00207A                     
 17513                           ;libraries/lcd_highlevel.c: 757:     PORTA = posY; LATC3 = 0; LATC3 = 1;;
 17514  00207A  C027  FF80         	movff	LCD_DrawText@posY,3968	;volatile
 17515  00207E  968B               	bcf	3979,3,c	;volatile
 17516  002080  868B               	bsf	3979,3,c	;volatile
 17517  002082                     
 17518                           ;libraries/lcd_highlevel.c: 758:     posYEnd = posY + font->height-1;
 17519  002082  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 17520  002086  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 17521  00208A                     	if	0	;tblptru may be non-zero
 17522  00208A                     	endif
 17523  00208A                     	if	0	;tblptru may be non-zero
 17524  00208A                     	endif
 17525  00208A  0008               	tblrd		*
 17526  00208C  50F5               	movf	tablat,w,c
 17527  00208E  2427               	addwf	LCD_DrawText@posY^0,w,c
 17528  002090  6E2D               	movwf	??_LCD_DrawText^0,c
 17529  002092  0E00               	movlw	0
 17530  002094  2028               	addwfc	(LCD_DrawText@posY+1)^0,w,c
 17531  002096  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17532  002098  0EFF               	movlw	255
 17533  00209A  242D               	addwf	??_LCD_DrawText^0,w,c
 17534  00209C  6E39               	movwf	LCD_DrawText@posYEnd^0,c
 17535  00209E  0EFF               	movlw	255
 17536  0020A0  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17537  0020A2  6E3A               	movwf	(LCD_DrawText@posYEnd+1)^0,c
 17538  0020A4                     
 17539                           ;libraries/lcd_highlevel.c: 759:     PORTA = posYEnd>>8; LATC3 = 0; LATC3 = 1;;
 17540  0020A4  503A               	movf	(LCD_DrawText@posYEnd+1)^0,w,c
 17541  0020A6  6E80               	movwf	128,c	;volatile
 17542  0020A8  968B               	bcf	3979,3,c	;volatile
 17543  0020AA  868B               	bsf	3979,3,c	;volatile
 17544  0020AC                     
 17545                           ;libraries/lcd_highlevel.c: 760:     PORTA = posYEnd; LATC3 = 0; LATC3 = 1;;
 17546  0020AC  C039  FF80         	movff	LCD_DrawText@posYEnd,3968	;volatile
 17547  0020B0  968B               	bcf	3979,3,c	;volatile
 17548  0020B2  868B               	bsf	3979,3,c	;volatile
 17549  0020B4                     
 17550                           ;libraries/lcd_highlevel.c: 761:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 17551  0020B4  0E2C               	movlw	44
 17552  0020B6  6E80               	movwf	128,c	;volatile
 17553  0020B8  988B               	bcf	3979,4,c	;volatile
 17554  0020BA  968B               	bcf	3979,3,c	;volatile
 17555  0020BC  868B               	bsf	3979,3,c	;volatile
 17556  0020BE  888B               	bsf	3979,4,c	;volatile
 17557  0020C0                     
 17558                           ;libraries/lcd_highlevel.c: 763:     for(y=0;y<font->height;y++)
 17559  0020C0  0E00               	movlw	0
 17560  0020C2  6E3D               	movwf	LCD_DrawText@y^0,c
 17561  0020C4  EFFB  F010         	goto	l8895
 17562  0020C8                     l8833:
 17563                           
 17564                           ;libraries/lcd_highlevel.c: 764:     {;libraries/lcd_highlevel.c: 765:       yOffset = o
      +                          ffset + (y * ((width+7)/8));
 17565  0020C8  C03D  F01A         	movff	LCD_DrawText@y,___wmul@multiplier
 17566  0020CC  6A1B               	clrf	(___wmul@multiplier+1)^0,c
 17567  0020CE  0E00               	movlw	0
 17568  0020D0  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17569  0020D2  0E08               	movlw	8
 17570  0020D4  6E14               	movwf	___awdiv@divisor^0,c
 17571  0020D6  0E07               	movlw	7
 17572  0020D8  2441               	addwf	LCD_DrawText@width^0,w,c
 17573  0020DA  6E12               	movwf	___awdiv@dividend^0,c
 17574  0020DC  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17575  0020DE  0E00               	movlw	0
 17576  0020E0  2213               	addwfc	(___awdiv@dividend+1)^0,f,c
 17577  0020E2  ECE5  F028         	call	___awdiv	;wreg free
 17578  0020E6  C012  F01C         	movff	?___awdiv,___wmul@multiplicand
 17579  0020EA  C013  F01D         	movff	?___awdiv+1,___wmul@multiplicand+1
 17580  0020EE  EC90  F031         	call	___wmul	;wreg free
 17581  0020F2  5033               	movf	LCD_DrawText@offset^0,w,c
 17582  0020F4  241A               	addwf	?___wmul^0,w,c
 17583  0020F6  6E35               	movwf	LCD_DrawText@yOffset^0,c
 17584  0020F8  5034               	movf	(LCD_DrawText@offset+1)^0,w,c
 17585  0020FA  201B               	addwfc	(?___wmul+1)^0,w,c
 17586  0020FC  6E36               	movwf	(LCD_DrawText@yOffset+1)^0,c
 17587  0020FE                     
 17588                           ;libraries/lcd_highlevel.c: 766:       for(x=0;x<width;x++)
 17589  0020FE  0E00               	movlw	0
 17590  002100  6E40               	movwf	LCD_DrawText@x^0,c
 17591  002102  EFDA  F010         	goto	l8869
 17592  002106                     l8837:
 17593                           
 17594                           ;libraries/lcd_highlevel.c: 767:       {;libraries/lcd_highlevel.c: 768:         fontByt
      +                          e = font->bitmap[yOffset + (x/8)];
 17595  002106  C040  F012         	movff	LCD_DrawText@x,___awdiv@dividend
 17596  00210A  6A13               	clrf	(___awdiv@dividend+1)^0,c
 17597  00210C  0E00               	movlw	0
 17598  00210E  6E15               	movwf	(___awdiv@divisor+1)^0,c
 17599  002110  0E08               	movlw	8
 17600  002112  6E14               	movwf	___awdiv@divisor^0,c
 17601  002114  ECE5  F028         	call	___awdiv	;wreg free
 17602  002118  0E05               	movlw	5
 17603  00211A  2422               	addwf	LCD_DrawText@font^0,w,c
 17604  00211C  6E2D               	movwf	??_LCD_DrawText^0,c
 17605  00211E  0E00               	movlw	0
 17606  002120  2023               	addwfc	(LCD_DrawText@font+1)^0,w,c
 17607  002122  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17608  002124  C02D  FFF6         	movff	??_LCD_DrawText,tblptrl
 17609  002128  C02E  FFF7         	movff	??_LCD_DrawText+1,tblptrh
 17610  00212C                     	if	0	;tblptru may be non-zero
 17611  00212C                     	endif
 17612  00212C                     	if	0	;tblptru may be non-zero
 17613  00212C                     	endif
 17614  00212C  0009               	tblrd		*+
 17615  00212E  CFF5 F02F          	movff	tablat,??_LCD_DrawText+2
 17616  002132  0009               	tblrd		*+
 17617  002134  CFF5 F030          	movff	tablat,??_LCD_DrawText+3
 17618  002138  5012               	movf	?___awdiv^0,w,c
 17619  00213A  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17620  00213C  5013               	movf	(?___awdiv+1)^0,w,c
 17621  00213E  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17622  002140  5035               	movf	LCD_DrawText@yOffset^0,w,c
 17623  002142  262F               	addwf	(??_LCD_DrawText+2)^0,f,c
 17624  002144  5036               	movf	(LCD_DrawText@yOffset+1)^0,w,c
 17625  002146  2230               	addwfc	(??_LCD_DrawText+3)^0,f,c
 17626  002148  C02F  FFF6         	movff	??_LCD_DrawText+2,tblptrl
 17627  00214C  C030  FFF7         	movff	??_LCD_DrawText+3,tblptrh
 17628  002150                     	if	0	;tblptru may be non-zero
 17629  002150                     	endif
 17630  002150                     	if	0	;tblptru may be non-zero
 17631  002150                     	endif
 17632  002150  0008               	tblrd		*
 17633  002152  CFF5 F037          	movff	tablat,LCD_DrawText@fontByte
 17634  002156                     
 17635                           ;libraries/lcd_highlevel.c: 769:         fontPixel = fontByte & (0x80 >> (x%8));
 17636  002156  C040  F02D         	movff	LCD_DrawText@x,??_LCD_DrawText
 17637  00215A  0E07               	movlw	7
 17638  00215C  162D               	andwf	??_LCD_DrawText^0,f,c
 17639  00215E  0E80               	movlw	128
 17640  002160  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17641  002162  0E00               	movlw	0
 17642  002164  6E2F               	movwf	(??_LCD_DrawText+2)^0,c
 17643  002166  2A2D               	incf	??_LCD_DrawText^0,f,c
 17644  002168  EFB9  F010         	goto	u6304
 17645  00216C                     u6305:
 17646  00216C  342F               	rlcf	(??_LCD_DrawText+2)^0,w,c
 17647  00216E  322F               	rrcf	(??_LCD_DrawText+2)^0,f,c
 17648  002170  322E               	rrcf	(??_LCD_DrawText+1)^0,f,c
 17649  002172                     u6304:
 17650  002172  2E2D               	decfsz	??_LCD_DrawText^0,f,c
 17651  002174  EFB6  F010         	goto	u6305
 17652  002178  502E               	movf	(??_LCD_DrawText+1)^0,w,c
 17653  00217A  1437               	andwf	LCD_DrawText@fontByte^0,w,c
 17654  00217C  6E38               	movwf	LCD_DrawText@fontPixel^0,c
 17655  00217E                     
 17656                           ;libraries/lcd_highlevel.c: 770:         if(fontPixel != 0)
 17657  00217E  5038               	movf	LCD_DrawText@fontPixel^0,w,c
 17658  002180  B4D8               	btfsc	status,2,c
 17659  002182  EFC5  F010         	goto	u6311
 17660  002186  EFC7  F010         	goto	u6310
 17661  00218A                     u6311:
 17662  00218A  EFD1  F010         	goto	l8855
 17663  00218E                     u6310:
 17664  00218E                     
 17665                           ;libraries/lcd_highlevel.c: 771:         {;libraries/lcd_highlevel.c: 772:           POR
      +                          TA = color>>8; LATC3 = 0; LATC3 = 1;;
 17666  00218E  502A               	movf	(LCD_DrawText@color+1)^0,w,c
 17667  002190  6E80               	movwf	128,c	;volatile
 17668  002192  968B               	bcf	3979,3,c	;volatile
 17669  002194  868B               	bsf	3979,3,c	;volatile
 17670  002196                     
 17671                           ;libraries/lcd_highlevel.c: 773:           PORTA = color; LATC3 = 0; LATC3 = 1;;
 17672  002196  C029  FF80         	movff	LCD_DrawText@color,3968	;volatile
 17673  00219A                     l8851:
 17674  00219A  968B               	bcf	3979,3,c	;volatile
 17675  00219C  868B               	bsf	3979,3,c	;volatile
 17676                           
 17677                           ;libraries/lcd_highlevel.c: 774:         }
 17678  00219E  EFD9  F010         	goto	l8867
 17679  0021A2                     l8855:
 17680                           
 17681                           ;libraries/lcd_highlevel.c: 776:         {;libraries/lcd_highlevel.c: 777:           POR
      +                          TA = bg_color>>8; LATC3 = 0; LATC3 = 1;;
 17682  0021A2  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 17683  0021A4  6E80               	movwf	128,c	;volatile
 17684  0021A6  968B               	bcf	3979,3,c	;volatile
 17685  0021A8  868B               	bsf	3979,3,c	;volatile
 17686  0021AA                     
 17687                           ;libraries/lcd_highlevel.c: 778:           PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 17688  0021AA  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 17689  0021AE  EFCD  F010         	goto	l8851
 17690  0021B2                     l8867:
 17691                           
 17692                           ;libraries/lcd_highlevel.c: 780:       }
 17693  0021B2  2A40               	incf	LCD_DrawText@x^0,f,c
 17694  0021B4                     l8869:
 17695  0021B4  5041               	movf	LCD_DrawText@width^0,w,c
 17696  0021B6  5C40               	subwf	LCD_DrawText@x^0,w,c
 17697  0021B8  A0D8               	btfss	status,0,c
 17698  0021BA  EFE1  F010         	goto	u6321
 17699  0021BE  EFE3  F010         	goto	u6320
 17700  0021C2                     u6321:
 17701  0021C2  EF83  F010         	goto	l8837
 17702  0021C6                     u6320:
 17703  0021C6                     
 17704                           ;libraries/lcd_highlevel.c: 781:       for(x=0;x<2;x++)
 17705  0021C6  0E00               	movlw	0
 17706  0021C8  6E40               	movwf	LCD_DrawText@x^0,c
 17707  0021CA                     l8873:
 17708  0021CA  0E01               	movlw	1
 17709  0021CC  6440               	cpfsgt	LCD_DrawText@x^0,c
 17710  0021CE  EFEB  F010         	goto	u6331
 17711  0021D2  EFED  F010         	goto	u6330
 17712  0021D6                     u6331:
 17713  0021D6  EFEF  F010         	goto	l8877
 17714  0021DA                     u6330:
 17715  0021DA  EFFA  F010         	goto	l8893
 17716  0021DE                     l8877:
 17717                           
 17718                           ;libraries/lcd_highlevel.c: 782:       {;libraries/lcd_highlevel.c: 783:         PORTA =
      +                           bg_color>>8; LATC3 = 0; LATC3 = 1;;
 17719  0021DE  502C               	movf	(LCD_DrawText@bg_color+1)^0,w,c
 17720  0021E0  6E80               	movwf	128,c	;volatile
 17721  0021E2  968B               	bcf	3979,3,c	;volatile
 17722  0021E4  868B               	bsf	3979,3,c	;volatile
 17723  0021E6                     
 17724                           ;libraries/lcd_highlevel.c: 784:         PORTA = bg_color; LATC3 = 0; LATC3 = 1;;
 17725  0021E6  C02B  FF80         	movff	LCD_DrawText@bg_color,3968	;volatile
 17726  0021EA  968B               	bcf	3979,3,c	;volatile
 17727  0021EC  868B               	bsf	3979,3,c	;volatile
 17728  0021EE                     
 17729                           ;libraries/lcd_highlevel.c: 785:       }
 17730  0021EE  2A40               	incf	LCD_DrawText@x^0,f,c
 17731  0021F0  EFE5  F010         	goto	l8873
 17732  0021F4                     l8893:
 17733                           
 17734                           ;libraries/lcd_highlevel.c: 786:     }
 17735  0021F4  2A3D               	incf	LCD_DrawText@y^0,f,c
 17736  0021F6                     l8895:
 17737  0021F6  C022  FFF6         	movff	LCD_DrawText@font,tblptrl
 17738  0021FA  C023  FFF7         	movff	LCD_DrawText@font+1,tblptrh
 17739  0021FE                     	if	0	;tblptru may be non-zero
 17740  0021FE                     	endif
 17741  0021FE                     	if	0	;tblptru may be non-zero
 17742  0021FE                     	endif
 17743  0021FE  0009               	tblrd		*+
 17744  002200  50F5               	movf	tablat,w,c
 17745  002202  5C3D               	subwf	LCD_DrawText@y^0,w,c
 17746  002204  A0D8               	btfss	status,0,c
 17747  002206  EF07  F011         	goto	u6341
 17748  00220A  EF09  F011         	goto	u6340
 17749  00220E                     u6341:
 17750  00220E  EF64  F010         	goto	l8833
 17751  002212                     u6340:
 17752  002212                     
 17753                           ;libraries/lcd_highlevel.c: 787:     posX = posX + 2 + width;
 17754  002212  5041               	movf	LCD_DrawText@width^0,w,c
 17755  002214  2425               	addwf	LCD_DrawText@posX^0,w,c
 17756  002216  6E2D               	movwf	??_LCD_DrawText^0,c
 17757  002218  0E00               	movlw	0
 17758  00221A  2026               	addwfc	(LCD_DrawText@posX+1)^0,w,c
 17759  00221C  6E2E               	movwf	(??_LCD_DrawText+1)^0,c
 17760  00221E  0E02               	movlw	2
 17761  002220  242D               	addwf	??_LCD_DrawText^0,w,c
 17762  002222  6E25               	movwf	LCD_DrawText@posX^0,c
 17763  002224  0E00               	movlw	0
 17764  002226  202E               	addwfc	(??_LCD_DrawText+1)^0,w,c
 17765  002228  6E26               	movwf	(LCD_DrawText@posX+1)^0,c
 17766  00222A                     
 17767                           ;libraries/lcd_highlevel.c: 788:     msg++;
 17768  00222A  4A20               	infsnz	LCD_DrawText@msg^0,f,c
 17769  00222C  2A21               	incf	(LCD_DrawText@msg+1)^0,f,c
 17770  00222E                     
 17771                           ;libraries/lcd_highlevel.c: 789:  }while(*msg != 0);
 17772  00222E  C020  FFF6         	movff	LCD_DrawText@msg,tblptrl
 17773  002232  C021  FFF7         	movff	LCD_DrawText@msg+1,tblptrh
 17774  002236  6AF8               	clrf	tblptru,c
 17775  002238  0E05               	movlw	(high __ramtop+-1)
 17776  00223A  64F7               	cpfsgt	tblptrh,c
 17777  00223C  D003               	bra	u6357
 17778  00223E  0008               	tblrd		*
 17779  002240  50F5               	movf	tablat,w,c
 17780  002242  D005               	bra	u6350
 17781  002244                     u6357:
 17782  002244  CFF6 FFE1          	movff	tblptrl,fsr1l
 17783  002248  CFF7 FFE2          	movff	tblptrh,fsr1h
 17784  00224C  50E7               	movf	indf1,w,c
 17785  00224E                     u6350:
 17786  00224E  0900               	iorlw	0
 17787  002250  A4D8               	btfss	status,2,c
 17788  002252  EF2D  F011         	goto	u6361
 17789  002256  EF2F  F011         	goto	u6360
 17790  00225A                     u6361:
 17791  00225A  EF9D  F00F         	goto	l8743
 17792  00225E                     u6360:
 17793  00225E  0012               	return		;funcret
 17794  002260                     __end_of_LCD_DrawText:
 17795                           	callstack 0
 17796                           
 17797 ;; *************** function _strlen *****************
 17798 ;; Defined at:
 17799 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 17800 ;; Parameters:    Size  Location     Type
 17801 ;;  s               2   17[COMRAM] PTR const unsigned char 
 17802 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 17803 ;;		 -> STR_13(13), STR_12(11), STR_11(8), STR_10(9), 
 17804 ;;		 -> STR_9(4), STR_8(4), STR_7(8), STR_6(9), 
 17805 ;;		 -> STR_5(9), STR_4(11), g1(239), STR_1(10), 
 17806 ;; Auto vars:     Size  Location     Type
 17807 ;;  a               2   19[COMRAM] PTR const unsigned char 
 17808 ;;		 -> g1.str(2), dbuf(32), touchScreenController@s(20), STR_14(13), 
 17809 ;;		 -> STR_13(13), STR_12(11), STR_11(8), STR_10(9), 
 17810 ;;		 -> STR_9(4), STR_8(4), STR_7(8), STR_6(9), 
 17811 ;;		 -> STR_5(9), STR_4(11), g1(239), STR_1(10), 
 17812 ;; Return value:  Size  Location     Type
 17813 ;;                  2   17[COMRAM] unsigned int 
 17814 ;; Registers used:
 17815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 17816 ;; Tracked objects:
 17817 ;;		On entry : 0/0
 17818 ;;		On exit  : 0/0
 17819 ;;		Unchanged: 0/0
 17820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17821 ;;      Params:         2       0       0       0       0       0       0
 17822 ;;      Locals:         2       0       0       0       0       0       0
 17823 ;;      Temps:          0       0       0       0       0       0       0
 17824 ;;      Totals:         4       0       0       0       0       0       0
 17825 ;;Total ram usage:        4 bytes
 17826 ;; Hardware stack levels used: 1
 17827 ;; Hardware stack levels required when called: 4
 17828 ;; This function calls:
 17829 ;;		Nothing
 17830 ;; This function is called by:
 17831 ;;		_LCD_ButtonDraw
 17832 ;;		_LCD_DrawText
 17833 ;;		_pad
 17834 ;; This function uses a non-reentrant model
 17835 ;;
 17836                           
 17837                           	psect	text69
 17838  0060C6                     __ptext69:
 17839                           	callstack 0
 17840  0060C6                     _strlen:
 17841                           	callstack 16
 17842  0060C6  C012  F014         	movff	strlen@s,strlen@a
 17843  0060CA  C013  F015         	movff	strlen@s+1,strlen@a+1
 17844  0060CE  EF6B  F030         	goto	l7941
 17845  0060D2                     l7939:
 17846  0060D2  4A12               	infsnz	strlen@s^0,f,c
 17847  0060D4  2A13               	incf	(strlen@s+1)^0,f,c
 17848  0060D6                     l7941:
 17849  0060D6  C012  FFF6         	movff	strlen@s,tblptrl
 17850  0060DA  C013  FFF7         	movff	strlen@s+1,tblptrh
 17851  0060DE  6AF8               	clrf	tblptru,c
 17852  0060E0  0E05               	movlw	(high __ramtop+-1)
 17853  0060E2  64F7               	cpfsgt	tblptrh,c
 17854  0060E4  D003               	bra	u5527
 17855  0060E6  0008               	tblrd		*
 17856  0060E8  50F5               	movf	tablat,w,c
 17857  0060EA  D005               	bra	u5520
 17858  0060EC                     u5527:
 17859  0060EC  CFF6 FFE1          	movff	tblptrl,fsr1l
 17860  0060F0  CFF7 FFE2          	movff	tblptrh,fsr1h
 17861  0060F4  50E7               	movf	indf1,w,c
 17862  0060F6                     u5520:
 17863  0060F6  0900               	iorlw	0
 17864  0060F8  A4D8               	btfss	status,2,c
 17865  0060FA  EF81  F030         	goto	u5531
 17866  0060FE  EF83  F030         	goto	u5530
 17867  006102                     u5531:
 17868  006102  EF69  F030         	goto	l7939
 17869  006106                     u5530:
 17870  006106  5014               	movf	strlen@a^0,w,c
 17871  006108  5C12               	subwf	strlen@s^0,w,c
 17872  00610A  6E12               	movwf	?_strlen^0,c
 17873  00610C  5015               	movf	(strlen@a+1)^0,w,c
 17874  00610E  5813               	subwfb	(strlen@s+1)^0,w,c
 17875  006110  6E13               	movwf	(?_strlen+1)^0,c
 17876  006112  0012               	return		;funcret
 17877  006114                     __end_of_strlen:
 17878                           	callstack 0
 17879                           
 17880 ;; *************** function ___wmul *****************
 17881 ;; Defined at:
 17882 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 17883 ;; Parameters:    Size  Location     Type
 17884 ;;  multiplier      2   25[COMRAM] unsigned int 
 17885 ;;  multiplicand    2   27[COMRAM] unsigned int 
 17886 ;; Auto vars:     Size  Location     Type
 17887 ;;  product         2   29[COMRAM] unsigned int 
 17888 ;; Return value:  Size  Location     Type
 17889 ;;                  2   25[COMRAM] unsigned int 
 17890 ;; Registers used:
 17891 ;;		wreg, status,2, status,0, prodl, prodh
 17892 ;; Tracked objects:
 17893 ;;		On entry : 0/0
 17894 ;;		On exit  : 0/0
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17897 ;;      Params:         4       0       0       0       0       0       0
 17898 ;;      Locals:         2       0       0       0       0       0       0
 17899 ;;      Temps:          0       0       0       0       0       0       0
 17900 ;;      Totals:         6       0       0       0       0       0       0
 17901 ;;Total ram usage:        6 bytes
 17902 ;; Hardware stack levels used: 1
 17903 ;; Hardware stack levels required when called: 4
 17904 ;; This function calls:
 17905 ;;		Nothing
 17906 ;; This function is called by:
 17907 ;;		_LCD_SliderUpdate
 17908 ;;		_LCD_DrawText
 17909 ;;		_LCD_Bitmap
 17910 ;;		_XF_init
 17911 ;; This function uses a non-reentrant model
 17912 ;;
 17913                           
 17914                           	psect	text70
 17915  006320                     __ptext70:
 17916                           	callstack 0
 17917  006320                     ___wmul:
 17918                           	callstack 21
 17919  006320  501A               	movf	___wmul@multiplier^0,w,c
 17920  006322  021C               	mulwf	___wmul@multiplicand^0,c
 17921  006324  CFF3 F01E          	movff	prodl,___wmul@product
 17922  006328  CFF4 F01F          	movff	prodh,___wmul@product+1
 17923  00632C  501A               	movf	___wmul@multiplier^0,w,c
 17924  00632E  021D               	mulwf	(___wmul@multiplicand+1)^0,c
 17925  006330  50F3               	movf	243,w,c
 17926  006332  261F               	addwf	(___wmul@product+1)^0,f,c
 17927  006334  501B               	movf	(___wmul@multiplier+1)^0,w,c
 17928  006336  021C               	mulwf	___wmul@multiplicand^0,c
 17929  006338  50F3               	movf	243,w,c
 17930  00633A  261F               	addwf	(___wmul@product+1)^0,f,c
 17931  00633C  C01E  F01A         	movff	___wmul@product,?___wmul
 17932  006340  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
 17933  006344  0012               	return		;funcret
 17934  006346                     __end_of___wmul:
 17935                           	callstack 0
 17936                           
 17937 ;; *************** function ___awdiv *****************
 17938 ;; Defined at:
 17939 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 17940 ;; Parameters:    Size  Location     Type
 17941 ;;  dividend        2   17[COMRAM] int 
 17942 ;;  divisor         2   19[COMRAM] int 
 17943 ;; Auto vars:     Size  Location     Type
 17944 ;;  quotient        2   23[COMRAM] int 
 17945 ;;  sign            1   22[COMRAM] unsigned char 
 17946 ;;  counter         1   21[COMRAM] unsigned char 
 17947 ;; Return value:  Size  Location     Type
 17948 ;;                  2   17[COMRAM] int 
 17949 ;; Registers used:
 17950 ;;		wreg, status,2, status,0
 17951 ;; Tracked objects:
 17952 ;;		On entry : 0/0
 17953 ;;		On exit  : 0/0
 17954 ;;		Unchanged: 0/0
 17955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17956 ;;      Params:         4       0       0       0       0       0       0
 17957 ;;      Locals:         4       0       0       0       0       0       0
 17958 ;;      Temps:          0       0       0       0       0       0       0
 17959 ;;      Totals:         8       0       0       0       0       0       0
 17960 ;;Total ram usage:        8 bytes
 17961 ;; Hardware stack levels used: 1
 17962 ;; Hardware stack levels required when called: 4
 17963 ;; This function calls:
 17964 ;;		Nothing
 17965 ;; This function is called by:
 17966 ;;		_LCD_ButtonDraw
 17967 ;;		_LCD_DrawText
 17968 ;; This function uses a non-reentrant model
 17969 ;;
 17970                           
 17971                           	psect	text71
 17972  0051CA                     __ptext71:
 17973                           	callstack 0
 17974  0051CA                     ___awdiv:
 17975                           	callstack 20
 17976  0051CA  0E00               	movlw	0
 17977  0051CC  6E17               	movwf	___awdiv@sign^0,c
 17978  0051CE  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
 17979  0051D0  EFEE  F028         	goto	u6030
 17980  0051D4  EFEC  F028         	goto	u6031
 17981  0051D8                     u6031:
 17982  0051D8  EFF4  F028         	goto	l8573
 17983  0051DC                     u6030:
 17984  0051DC  6C14               	negf	___awdiv@divisor^0,c
 17985  0051DE  1E15               	comf	(___awdiv@divisor+1)^0,f,c
 17986  0051E0  B0D8               	btfsc	status,0,c
 17987  0051E2  2A15               	incf	(___awdiv@divisor+1)^0,f,c
 17988  0051E4  0E01               	movlw	1
 17989  0051E6  6E17               	movwf	___awdiv@sign^0,c
 17990  0051E8                     l8573:
 17991  0051E8  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
 17992  0051EA  EFFB  F028         	goto	u6040
 17993  0051EE  EFF9  F028         	goto	u6041
 17994  0051F2                     u6041:
 17995  0051F2  EF01  F029         	goto	l8579
 17996  0051F6                     u6040:
 17997  0051F6  6C12               	negf	___awdiv@dividend^0,c
 17998  0051F8  1E13               	comf	(___awdiv@dividend+1)^0,f,c
 17999  0051FA  B0D8               	btfsc	status,0,c
 18000  0051FC  2A13               	incf	(___awdiv@dividend+1)^0,f,c
 18001  0051FE  0E01               	movlw	1
 18002  005200  1A17               	xorwf	___awdiv@sign^0,f,c
 18003  005202                     l8579:
 18004  005202  0E00               	movlw	0
 18005  005204  6E19               	movwf	(___awdiv@quotient+1)^0,c
 18006  005206  0E00               	movlw	0
 18007  005208  6E18               	movwf	___awdiv@quotient^0,c
 18008  00520A  5014               	movf	___awdiv@divisor^0,w,c
 18009  00520C  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
 18010  00520E  B4D8               	btfsc	status,2,c
 18011  005210  EF0C  F029         	goto	u6051
 18012  005214  EF0E  F029         	goto	u6050
 18013  005218                     u6051:
 18014  005218  EF36  F029         	goto	l8601
 18015  00521C                     u6050:
 18016  00521C  0E01               	movlw	1
 18017  00521E  6E16               	movwf	___awdiv@counter^0,c
 18018  005220  EF16  F029         	goto	l8587
 18019  005224                     l8585:
 18020  005224  90D8               	bcf	status,0,c
 18021  005226  3614               	rlcf	___awdiv@divisor^0,f,c
 18022  005228  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
 18023  00522A  2A16               	incf	___awdiv@counter^0,f,c
 18024  00522C                     l8587:
 18025  00522C  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
 18026  00522E  EF1B  F029         	goto	u6061
 18027  005232  EF1D  F029         	goto	u6060
 18028  005236                     u6061:
 18029  005236  EF12  F029         	goto	l8585
 18030  00523A                     u6060:
 18031  00523A                     l8589:
 18032  00523A  90D8               	bcf	status,0,c
 18033  00523C  3618               	rlcf	___awdiv@quotient^0,f,c
 18034  00523E  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
 18035  005240  5014               	movf	___awdiv@divisor^0,w,c
 18036  005242  5C12               	subwf	___awdiv@dividend^0,w,c
 18037  005244  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18038  005246  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
 18039  005248  A0D8               	btfss	status,0,c
 18040  00524A  EF29  F029         	goto	u6071
 18041  00524E  EF2B  F029         	goto	u6070
 18042  005252                     u6071:
 18043  005252  EF30  F029         	goto	l8597
 18044  005256                     u6070:
 18045  005256  5014               	movf	___awdiv@divisor^0,w,c
 18046  005258  5E12               	subwf	___awdiv@dividend^0,f,c
 18047  00525A  5015               	movf	(___awdiv@divisor+1)^0,w,c
 18048  00525C  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
 18049  00525E  8018               	bsf	___awdiv@quotient^0,0,c
 18050  005260                     l8597:
 18051  005260  90D8               	bcf	status,0,c
 18052  005262  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
 18053  005264  3214               	rrcf	___awdiv@divisor^0,f,c
 18054  005266  2E16               	decfsz	___awdiv@counter^0,f,c
 18055  005268  EF1D  F029         	goto	l8589
 18056  00526C                     l8601:
 18057  00526C  5017               	movf	___awdiv@sign^0,w,c
 18058  00526E  B4D8               	btfsc	status,2,c
 18059  005270  EF3C  F029         	goto	u6081
 18060  005274  EF3E  F029         	goto	u6080
 18061  005278                     u6081:
 18062  005278  EF42  F029         	goto	l8605
 18063  00527C                     u6080:
 18064  00527C  6C18               	negf	___awdiv@quotient^0,c
 18065  00527E  1E19               	comf	(___awdiv@quotient+1)^0,f,c
 18066  005280  B0D8               	btfsc	status,0,c
 18067  005282  2A19               	incf	(___awdiv@quotient+1)^0,f,c
 18068  005284                     l8605:
 18069  005284  C018  F012         	movff	___awdiv@quotient,?___awdiv
 18070  005288  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
 18071  00528C  0012               	return		;funcret
 18072  00528E                     __end_of___awdiv:
 18073                           	callstack 0
 18074                           
 18075 ;; *************** function _Paddle_draw *****************
 18076 ;; Defined at:
 18077 ;;		line 55 in file "class/paddle.c"
 18078 ;; Parameters:    Size  Location     Type
 18079 ;;  p               2   36[COMRAM] PTR struct Paddle
 18080 ;;		 -> g1(239), 
 18081 ;; Auto vars:     Size  Location     Type
 18082 ;;		None
 18083 ;; Return value:  Size  Location     Type
 18084 ;;                  1    wreg      void 
 18085 ;; Registers used:
 18086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18087 ;; Tracked objects:
 18088 ;;		On entry : 0/0
 18089 ;;		On exit  : 0/0
 18090 ;;		Unchanged: 0/0
 18091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18092 ;;      Params:         2       0       0       0       0       0       0
 18093 ;;      Locals:         0       0       0       0       0       0       0
 18094 ;;      Temps:          4       0       0       0       0       0       0
 18095 ;;      Totals:         6       0       0       0       0       0       0
 18096 ;;Total ram usage:        6 bytes
 18097 ;; Hardware stack levels used: 1
 18098 ;; Hardware stack levels required when called: 5
 18099 ;; This function calls:
 18100 ;;		_LCD_DrawRect
 18101 ;; This function is called by:
 18102 ;;		_Menu_inGameDraw
 18103 ;;		_displayController
 18104 ;; This function uses a non-reentrant model
 18105 ;;
 18106                           
 18107                           	psect	text72
 18108  004388                     __ptext72:
 18109                           	callstack 0
 18110  004388                     _Paddle_draw:
 18111                           	callstack 21
 18112  004388                     
 18113                           ;class/paddle.c: 55: void Paddle_draw(struct Paddle* p);class/paddle.c: 56: {;class/padd
      +                          le.c: 58:     LCD_DrawRect(p->oldx,p->oldy,p->oldx+50,p->oldy+10,1,0b0000000000000000);
 18114  004388  EE20 F004          	lfsr	2,4
 18115  00438C  5025               	movf	Paddle_draw@p^0,w,c
 18116  00438E  26D9               	addwf	fsr2l,f,c
 18117  004390  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18118  004392  22DA               	addwfc	fsr2h,f,c
 18119  004394  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18120  004398  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18121  00439C  EE20 F006          	lfsr	2,6
 18122  0043A0  5025               	movf	Paddle_draw@p^0,w,c
 18123  0043A2  26D9               	addwf	fsr2l,f,c
 18124  0043A4  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18125  0043A6  22DA               	addwfc	fsr2h,f,c
 18126  0043A8  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18127  0043AC  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18128  0043B0  EE20 F004          	lfsr	2,4
 18129  0043B4  5025               	movf	Paddle_draw@p^0,w,c
 18130  0043B6  26D9               	addwf	fsr2l,f,c
 18131  0043B8  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18132  0043BA  22DA               	addwfc	fsr2h,f,c
 18133  0043BC  CFDE F027          	movff	postinc2,??_Paddle_draw
 18134  0043C0  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18135  0043C4  0E32               	movlw	50
 18136  0043C6  2427               	addwf	??_Paddle_draw^0,w,c
 18137  0043C8  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18138  0043CA  0E00               	movlw	0
 18139  0043CC  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18140  0043CE  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18141  0043D0  EE20 F006          	lfsr	2,6
 18142  0043D4  5025               	movf	Paddle_draw@p^0,w,c
 18143  0043D6  26D9               	addwf	fsr2l,f,c
 18144  0043D8  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18145  0043DA  22DA               	addwfc	fsr2h,f,c
 18146  0043DC  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18147  0043E0  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18148  0043E4  0E0A               	movlw	10
 18149  0043E6  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18150  0043E8  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18151  0043EA  0E00               	movlw	0
 18152  0043EC  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18153  0043EE  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18154  0043F0  0E01               	movlw	1
 18155  0043F2  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18156  0043F4  0E00               	movlw	0
 18157  0043F6  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18158  0043F8  0E00               	movlw	0
 18159  0043FA  6E1B               	movwf	LCD_DrawRect@color^0,c
 18160  0043FC  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 18161  004400                     
 18162                           ;class/paddle.c: 60:     p->oldx=p->x;
 18163  004400  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18164  004404  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18165  004408  EE10 F004          	lfsr	1,4
 18166  00440C  5025               	movf	Paddle_draw@p^0,w,c
 18167  00440E  26E1               	addwf	fsr1l,f,c
 18168  004410  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18169  004412  22E2               	addwfc	fsr1h,f,c
 18170  004414  CFDE FFE6          	movff	postinc2,postinc1
 18171  004418  CFDD FFE5          	movff	postdec2,postdec1
 18172  00441C                     
 18173                           ;class/paddle.c: 61:     p->oldy=p->y;
 18174  00441C  EE20 F002          	lfsr	2,2
 18175  004420  5025               	movf	Paddle_draw@p^0,w,c
 18176  004422  26D9               	addwf	fsr2l,f,c
 18177  004424  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18178  004426  22DA               	addwfc	fsr2h,f,c
 18179  004428  EE10 F006          	lfsr	1,6
 18180  00442C  5025               	movf	Paddle_draw@p^0,w,c
 18181  00442E  26E1               	addwf	fsr1l,f,c
 18182  004430  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18183  004432  22E2               	addwfc	fsr1h,f,c
 18184  004434  CFDE FFE6          	movff	postinc2,postinc1
 18185  004438  CFDD FFE5          	movff	postdec2,postdec1
 18186                           
 18187                           ;class/paddle.c: 63:     LCD_DrawRect(p->x,p->y,p->x+50,p->y+10,1,p->color);
 18188  00443C  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18189  004440  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18190  004444  CFDE F012          	movff	postinc2,LCD_DrawRect@posX1
 18191  004448  CFDD F013          	movff	postdec2,LCD_DrawRect@posX1+1
 18192  00444C  EE20 F002          	lfsr	2,2
 18193  004450  5025               	movf	Paddle_draw@p^0,w,c
 18194  004452  26D9               	addwf	fsr2l,f,c
 18195  004454  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18196  004456  22DA               	addwfc	fsr2h,f,c
 18197  004458  CFDE F014          	movff	postinc2,LCD_DrawRect@posY1
 18198  00445C  CFDD F015          	movff	postdec2,LCD_DrawRect@posY1+1
 18199  004460  C025  FFD9         	movff	Paddle_draw@p,fsr2l
 18200  004464  C026  FFDA         	movff	Paddle_draw@p+1,fsr2h
 18201  004468  CFDE F027          	movff	postinc2,??_Paddle_draw
 18202  00446C  CFDD F028          	movff	postdec2,??_Paddle_draw+1
 18203  004470  0E32               	movlw	50
 18204  004472  2427               	addwf	??_Paddle_draw^0,w,c
 18205  004474  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18206  004476  0E00               	movlw	0
 18207  004478  2028               	addwfc	(??_Paddle_draw+1)^0,w,c
 18208  00447A  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18209  00447C  EE20 F002          	lfsr	2,2
 18210  004480  5025               	movf	Paddle_draw@p^0,w,c
 18211  004482  26D9               	addwf	fsr2l,f,c
 18212  004484  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18213  004486  22DA               	addwfc	fsr2h,f,c
 18214  004488  CFDE F029          	movff	postinc2,??_Paddle_draw+2
 18215  00448C  CFDD F02A          	movff	postdec2,??_Paddle_draw+3
 18216  004490  0E0A               	movlw	10
 18217  004492  2429               	addwf	(??_Paddle_draw+2)^0,w,c
 18218  004494  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18219  004496  0E00               	movlw	0
 18220  004498  202A               	addwfc	(??_Paddle_draw+3)^0,w,c
 18221  00449A  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18222  00449C  0E01               	movlw	1
 18223  00449E  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18224  0044A0  EE20 F008          	lfsr	2,8
 18225  0044A4  5025               	movf	Paddle_draw@p^0,w,c
 18226  0044A6  26D9               	addwf	fsr2l,f,c
 18227  0044A8  5026               	movf	(Paddle_draw@p+1)^0,w,c
 18228  0044AA  22DA               	addwfc	fsr2h,f,c
 18229  0044AC  CFDE F01B          	movff	postinc2,LCD_DrawRect@color
 18230  0044B0  CFDD F01C          	movff	postdec2,LCD_DrawRect@color+1
 18231  0044B4  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 18232  0044B8  0012               	return		;funcret
 18233  0044BA                     __end_of_Paddle_draw:
 18234                           	callstack 0
 18235                           
 18236 ;; *************** function _LCD_Fill *****************
 18237 ;; Defined at:
 18238 ;;		line 218 in file "libraries/lcd_highlevel.c"
 18239 ;; Parameters:    Size  Location     Type
 18240 ;;  color           2   17[COMRAM] unsigned short 
 18241 ;; Auto vars:     Size  Location     Type
 18242 ;;  page            2   23[COMRAM] unsigned short 
 18243 ;;  column          2   21[COMRAM] unsigned short 
 18244 ;;  colorL          1   20[COMRAM] unsigned char 
 18245 ;;  colorH          1   19[COMRAM] unsigned char 
 18246 ;; Return value:  Size  Location     Type
 18247 ;;                  1    wreg      void 
 18248 ;; Registers used:
 18249 ;;		wreg, status,2, status,0
 18250 ;; Tracked objects:
 18251 ;;		On entry : 0/0
 18252 ;;		On exit  : 0/0
 18253 ;;		Unchanged: 0/0
 18254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18255 ;;      Params:         2       0       0       0       0       0       0
 18256 ;;      Locals:         6       0       0       0       0       0       0
 18257 ;;      Temps:          0       0       0       0       0       0       0
 18258 ;;      Totals:         8       0       0       0       0       0       0
 18259 ;;Total ram usage:        8 bytes
 18260 ;; Hardware stack levels used: 1
 18261 ;; Hardware stack levels required when called: 4
 18262 ;; This function calls:
 18263 ;;		Nothing
 18264 ;; This function is called by:
 18265 ;;		_Factory_init
 18266 ;;		_Menu_welcomeDraw
 18267 ;;		_Menu_parametersDraw
 18268 ;;		_Menu_inGameDraw
 18269 ;;		_Menu_endGame
 18270 ;; This function uses a non-reentrant model
 18271 ;;
 18272                           
 18273                           	psect	text73
 18274  005350                     __ptext73:
 18275                           	callstack 0
 18276  005350                     _LCD_Fill:
 18277                           	callstack 21
 18278  005350                     
 18279                           ;libraries/lcd_highlevel.c: 218: void LCD_Fill(uint16_t color);libraries/lcd_highlevel.c
      +                          : 219: {;libraries/lcd_highlevel.c: 220:   uint16_t column;;libraries/lcd_highlevel.c: 2
      +                          21:   uint16_t page;;libraries/lcd_highlevel.c: 222:   uint8_t colorH, colorL;;libraries
      +                          /lcd_highlevel.c: 223:   colorH = color >> 8;
 18280  005350  5013               	movf	(LCD_Fill@color+1)^0,w,c
 18281  005352  6E14               	movwf	LCD_Fill@colorH^0,c
 18282  005354                     
 18283                           ;libraries/lcd_highlevel.c: 224:   colorL = color;
 18284  005354  C012  F015         	movff	LCD_Fill@color,LCD_Fill@colorL
 18285                           
 18286                           ;libraries/lcd_highlevel.c: 226:   PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18287  005358  0E2A               	movlw	42
 18288  00535A  6E80               	movwf	128,c	;volatile
 18289  00535C  988B               	bcf	3979,4,c	;volatile
 18290  00535E  968B               	bcf	3979,3,c	;volatile
 18291  005360  868B               	bsf	3979,3,c	;volatile
 18292  005362  888B               	bsf	3979,4,c	;volatile
 18293                           
 18294                           ;libraries/lcd_highlevel.c: 227:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18295  005364  0E00               	movlw	0
 18296  005366  6E80               	movwf	128,c	;volatile
 18297  005368  968B               	bcf	3979,3,c	;volatile
 18298  00536A  868B               	bsf	3979,3,c	;volatile
 18299                           
 18300                           ;libraries/lcd_highlevel.c: 228:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18301  00536C  0E00               	movlw	0
 18302  00536E  6E80               	movwf	128,c	;volatile
 18303  005370  968B               	bcf	3979,3,c	;volatile
 18304  005372  868B               	bsf	3979,3,c	;volatile
 18305                           
 18306                           ;libraries/lcd_highlevel.c: 229:   PORTA = (240 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18307  005374  0E00               	movlw	0
 18308  005376  6E80               	movwf	128,c	;volatile
 18309  005378  968B               	bcf	3979,3,c	;volatile
 18310  00537A  868B               	bsf	3979,3,c	;volatile
 18311                           
 18312                           ;libraries/lcd_highlevel.c: 230:   PORTA = (240 -1); LATC3 = 0; LATC3 = 1;;
 18313  00537C  0EEF               	movlw	239
 18314  00537E  6E80               	movwf	128,c	;volatile
 18315  005380  968B               	bcf	3979,3,c	;volatile
 18316  005382  868B               	bsf	3979,3,c	;volatile
 18317                           
 18318                           ;libraries/lcd_highlevel.c: 232:   PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18319  005384  0E2B               	movlw	43
 18320  005386  6E80               	movwf	128,c	;volatile
 18321  005388  988B               	bcf	3979,4,c	;volatile
 18322  00538A  968B               	bcf	3979,3,c	;volatile
 18323  00538C  868B               	bsf	3979,3,c	;volatile
 18324  00538E  888B               	bsf	3979,4,c	;volatile
 18325                           
 18326                           ;libraries/lcd_highlevel.c: 233:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18327  005390  0E00               	movlw	0
 18328  005392  6E80               	movwf	128,c	;volatile
 18329  005394  968B               	bcf	3979,3,c	;volatile
 18330  005396  868B               	bsf	3979,3,c	;volatile
 18331                           
 18332                           ;libraries/lcd_highlevel.c: 234:   PORTA = 0x00; LATC3 = 0; LATC3 = 1;;
 18333  005398  0E00               	movlw	0
 18334  00539A  6E80               	movwf	128,c	;volatile
 18335  00539C  968B               	bcf	3979,3,c	;volatile
 18336  00539E  868B               	bsf	3979,3,c	;volatile
 18337                           
 18338                           ;libraries/lcd_highlevel.c: 235:   PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18339  0053A0  0E01               	movlw	1
 18340  0053A2  6E80               	movwf	128,c	;volatile
 18341  0053A4  968B               	bcf	3979,3,c	;volatile
 18342  0053A6  868B               	bsf	3979,3,c	;volatile
 18343                           
 18344                           ;libraries/lcd_highlevel.c: 236:   PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18345  0053A8  0E3F               	movlw	63
 18346  0053AA  6E80               	movwf	128,c	;volatile
 18347  0053AC  968B               	bcf	3979,3,c	;volatile
 18348  0053AE  868B               	bsf	3979,3,c	;volatile
 18349                           
 18350                           ;libraries/lcd_highlevel.c: 238:   PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 
      +                          = 1;;
 18351  0053B0  0E2C               	movlw	44
 18352  0053B2  6E80               	movwf	128,c	;volatile
 18353  0053B4  988B               	bcf	3979,4,c	;volatile
 18354  0053B6  968B               	bcf	3979,3,c	;volatile
 18355  0053B8  868B               	bsf	3979,3,c	;volatile
 18356  0053BA  888B               	bsf	3979,4,c	;volatile
 18357                           
 18358                           ;libraries/lcd_highlevel.c: 239:   for(column=0; column<320; column++)
 18359  0053BC  0E00               	movlw	0
 18360  0053BE  6E17               	movwf	(LCD_Fill@column+1)^0,c
 18361  0053C0  0E00               	movlw	0
 18362  0053C2  6E16               	movwf	LCD_Fill@column^0,c
 18363  0053C4                     l9403:
 18364                           
 18365                           ;libraries/lcd_highlevel.c: 240:   {;libraries/lcd_highlevel.c: 241:     for(page=0; pag
      +                          e<240; page++)
 18366  0053C4  0E00               	movlw	0
 18367  0053C6  6E19               	movwf	(LCD_Fill@page+1)^0,c
 18368  0053C8  0E00               	movlw	0
 18369  0053CA  6E18               	movwf	LCD_Fill@page^0,c
 18370  0053CC                     l224:
 18371                           
 18372                           ;libraries/lcd_highlevel.c: 242:     {;libraries/lcd_highlevel.c: 243:       PORTA = col
      +                          orH;
 18373  0053CC  C014  FF80         	movff	LCD_Fill@colorH,3968	;volatile
 18374                           
 18375                           ;libraries/lcd_highlevel.c: 244:       LATC3 = 0;
 18376  0053D0  968B               	bcf	3979,3,c	;volatile
 18377                           
 18378                           ;libraries/lcd_highlevel.c: 245:       LATC3 = 1;
 18379  0053D2  868B               	bsf	3979,3,c	;volatile
 18380                           
 18381                           ;libraries/lcd_highlevel.c: 246:       PORTA = colorL;
 18382  0053D4  C015  FF80         	movff	LCD_Fill@colorL,3968	;volatile
 18383                           
 18384                           ;libraries/lcd_highlevel.c: 247:       LATC3 = 0;
 18385  0053D8  968B               	bcf	3979,3,c	;volatile
 18386                           
 18387                           ;libraries/lcd_highlevel.c: 248:       LATC3 = 1;
 18388  0053DA  868B               	bsf	3979,3,c	;volatile
 18389  0053DC                     
 18390                           ;libraries/lcd_highlevel.c: 249:     }
 18391  0053DC  4A18               	infsnz	LCD_Fill@page^0,f,c
 18392  0053DE  2A19               	incf	(LCD_Fill@page+1)^0,f,c
 18393  0053E0  5019               	movf	(LCD_Fill@page+1)^0,w,c
 18394  0053E2  E109               	bnz	u6600
 18395  0053E4  0EF0               	movlw	240
 18396  0053E6  5C18               	subwf	LCD_Fill@page^0,w,c
 18397  0053E8  A0D8               	btfss	status,0,c
 18398  0053EA  EFF9  F029         	goto	u6601
 18399  0053EE  EFFB  F029         	goto	u6600
 18400  0053F2                     u6601:
 18401  0053F2  EFE6  F029         	goto	l224
 18402  0053F6                     u6600:
 18403  0053F6                     
 18404                           ;libraries/lcd_highlevel.c: 250:   }
 18405  0053F6  4A16               	infsnz	LCD_Fill@column^0,f,c
 18406  0053F8  2A17               	incf	(LCD_Fill@column+1)^0,f,c
 18407  0053FA  0E40               	movlw	64
 18408  0053FC  5C16               	subwf	LCD_Fill@column^0,w,c
 18409  0053FE  0E01               	movlw	1
 18410  005400  5817               	subwfb	(LCD_Fill@column+1)^0,w,c
 18411  005402  A0D8               	btfss	status,0,c
 18412  005404  EF06  F02A         	goto	u6611
 18413  005408  EF08  F02A         	goto	u6610
 18414  00540C                     u6611:
 18415  00540C  EFE2  F029         	goto	l9403
 18416  005410                     u6610:
 18417  005410  0012               	return		;funcret
 18418  005412                     __end_of_LCD_Fill:
 18419                           	callstack 0
 18420                           
 18421 ;; *************** function _Ball_draw *****************
 18422 ;; Defined at:
 18423 ;;		line 17 in file "class/ball.c"
 18424 ;; Parameters:    Size  Location     Type
 18425 ;;  b               2   36[COMRAM] PTR struct Ball
 18426 ;;		 -> g1(239), 
 18427 ;; Auto vars:     Size  Location     Type
 18428 ;;		None
 18429 ;; Return value:  Size  Location     Type
 18430 ;;                  1    wreg      void 
 18431 ;; Registers used:
 18432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18433 ;; Tracked objects:
 18434 ;;		On entry : 0/0
 18435 ;;		On exit  : 0/0
 18436 ;;		Unchanged: 0/0
 18437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18438 ;;      Params:         2       0       0       0       0       0       0
 18439 ;;      Locals:         0       0       0       0       0       0       0
 18440 ;;      Temps:          8       0       0       0       0       0       0
 18441 ;;      Totals:        10       0       0       0       0       0       0
 18442 ;;Total ram usage:       10 bytes
 18443 ;; Hardware stack levels used: 1
 18444 ;; Hardware stack levels required when called: 5
 18445 ;; This function calls:
 18446 ;;		_LCD_DrawRect
 18447 ;; This function is called by:
 18448 ;;		_Menu_inGameDraw
 18449 ;;		_displayController
 18450 ;; This function uses a non-reentrant model
 18451 ;;
 18452                           
 18453                           	psect	text74
 18454  0040F0                     __ptext74:
 18455                           	callstack 0
 18456  0040F0                     _Ball_draw:
 18457                           	callstack 21
 18458  0040F0                     
 18459                           ;class/ball.c: 17: void Ball_draw(struct Ball* b);class/ball.c: 18: {;class/ball.c: 19: 
      +                              LCD_DrawRect(b->oldx-8,b->oldy-8,b->oldx+8,b->oldy+8,1,0b0000000000000000);
 18460  0040F0  EE20 F004          	lfsr	2,4
 18461  0040F4  5025               	movf	Ball_draw@b^0,w,c
 18462  0040F6  26D9               	addwf	fsr2l,f,c
 18463  0040F8  5026               	movf	(Ball_draw@b+1)^0,w,c
 18464  0040FA  22DA               	addwfc	fsr2h,f,c
 18465  0040FC  CFDE F027          	movff	postinc2,??_Ball_draw
 18466  004100  CFDD F028          	movff	postdec2,??_Ball_draw+1
 18467  004104  0EF8               	movlw	248
 18468  004106  2427               	addwf	??_Ball_draw^0,w,c
 18469  004108  6E12               	movwf	LCD_DrawRect@posX1^0,c
 18470  00410A  0EFF               	movlw	255
 18471  00410C  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 18472  00410E  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 18473  004110  EE20 F006          	lfsr	2,6
 18474  004114  5025               	movf	Ball_draw@b^0,w,c
 18475  004116  26D9               	addwf	fsr2l,f,c
 18476  004118  5026               	movf	(Ball_draw@b+1)^0,w,c
 18477  00411A  22DA               	addwfc	fsr2h,f,c
 18478  00411C  CFDE F029          	movff	postinc2,??_Ball_draw+2
 18479  004120  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 18480  004124  0EF8               	movlw	248
 18481  004126  2429               	addwf	(??_Ball_draw+2)^0,w,c
 18482  004128  6E14               	movwf	LCD_DrawRect@posY1^0,c
 18483  00412A  0EFF               	movlw	255
 18484  00412C  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 18485  00412E  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 18486  004130  EE20 F004          	lfsr	2,4
 18487  004134  5025               	movf	Ball_draw@b^0,w,c
 18488  004136  26D9               	addwf	fsr2l,f,c
 18489  004138  5026               	movf	(Ball_draw@b+1)^0,w,c
 18490  00413A  22DA               	addwfc	fsr2h,f,c
 18491  00413C  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 18492  004140  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 18493  004144  0E08               	movlw	8
 18494  004146  242B               	addwf	(??_Ball_draw+4)^0,w,c
 18495  004148  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18496  00414A  0E00               	movlw	0
 18497  00414C  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 18498  00414E  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18499  004150  EE20 F006          	lfsr	2,6
 18500  004154  5025               	movf	Ball_draw@b^0,w,c
 18501  004156  26D9               	addwf	fsr2l,f,c
 18502  004158  5026               	movf	(Ball_draw@b+1)^0,w,c
 18503  00415A  22DA               	addwfc	fsr2h,f,c
 18504  00415C  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 18505  004160  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 18506  004164  0E08               	movlw	8
 18507  004166  242D               	addwf	(??_Ball_draw+6)^0,w,c
 18508  004168  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18509  00416A  0E00               	movlw	0
 18510  00416C  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 18511  00416E  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18512  004170  0E01               	movlw	1
 18513  004172  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18514  004174  0E00               	movlw	0
 18515  004176  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18516  004178  0E00               	movlw	0
 18517  00417A  6E1B               	movwf	LCD_DrawRect@color^0,c
 18518  00417C  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 18519  004180                     
 18520                           ;class/ball.c: 20:     b->oldx=b->x;
 18521  004180  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18522  004184  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18523  004188  EE10 F004          	lfsr	1,4
 18524  00418C  5025               	movf	Ball_draw@b^0,w,c
 18525  00418E  26E1               	addwf	fsr1l,f,c
 18526  004190  5026               	movf	(Ball_draw@b+1)^0,w,c
 18527  004192  22E2               	addwfc	fsr1h,f,c
 18528  004194  CFDE FFE6          	movff	postinc2,postinc1
 18529  004198  CFDD FFE5          	movff	postdec2,postdec1
 18530  00419C                     
 18531                           ;class/ball.c: 21:     b->oldy=b->y;
 18532  00419C  EE20 F002          	lfsr	2,2
 18533  0041A0  5025               	movf	Ball_draw@b^0,w,c
 18534  0041A2  26D9               	addwf	fsr2l,f,c
 18535  0041A4  5026               	movf	(Ball_draw@b+1)^0,w,c
 18536  0041A6  22DA               	addwfc	fsr2h,f,c
 18537  0041A8  EE10 F006          	lfsr	1,6
 18538  0041AC  5025               	movf	Ball_draw@b^0,w,c
 18539  0041AE  26E1               	addwf	fsr1l,f,c
 18540  0041B0  5026               	movf	(Ball_draw@b+1)^0,w,c
 18541  0041B2  22E2               	addwfc	fsr1h,f,c
 18542  0041B4  CFDE FFE6          	movff	postinc2,postinc1
 18543  0041B8  CFDD FFE5          	movff	postdec2,postdec1
 18544                           
 18545                           ;class/ball.c: 22:     LCD_DrawRect(b->x-8,b->y-8,b->x+8,b->y+8,1,0b1111100000000000);
 18546  0041BC  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18547  0041C0  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18548  0041C4  CFDE F027          	movff	postinc2,??_Ball_draw
 18549  0041C8  CFDD F028          	movff	postdec2,??_Ball_draw+1
 18550  0041CC  0EF8               	movlw	248
 18551  0041CE  2427               	addwf	??_Ball_draw^0,w,c
 18552  0041D0  6E12               	movwf	LCD_DrawRect@posX1^0,c
 18553  0041D2  0EFF               	movlw	255
 18554  0041D4  2028               	addwfc	(??_Ball_draw+1)^0,w,c
 18555  0041D6  6E13               	movwf	(LCD_DrawRect@posX1+1)^0,c
 18556  0041D8  EE20 F002          	lfsr	2,2
 18557  0041DC  5025               	movf	Ball_draw@b^0,w,c
 18558  0041DE  26D9               	addwf	fsr2l,f,c
 18559  0041E0  5026               	movf	(Ball_draw@b+1)^0,w,c
 18560  0041E2  22DA               	addwfc	fsr2h,f,c
 18561  0041E4  CFDE F029          	movff	postinc2,??_Ball_draw+2
 18562  0041E8  CFDD F02A          	movff	postdec2,??_Ball_draw+3
 18563  0041EC  0EF8               	movlw	248
 18564  0041EE  2429               	addwf	(??_Ball_draw+2)^0,w,c
 18565  0041F0  6E14               	movwf	LCD_DrawRect@posY1^0,c
 18566  0041F2  0EFF               	movlw	255
 18567  0041F4  202A               	addwfc	(??_Ball_draw+3)^0,w,c
 18568  0041F6  6E15               	movwf	(LCD_DrawRect@posY1+1)^0,c
 18569  0041F8  C025  FFD9         	movff	Ball_draw@b,fsr2l
 18570  0041FC  C026  FFDA         	movff	Ball_draw@b+1,fsr2h
 18571  004200  CFDE F02B          	movff	postinc2,??_Ball_draw+4
 18572  004204  CFDD F02C          	movff	postdec2,??_Ball_draw+5
 18573  004208  0E08               	movlw	8
 18574  00420A  242B               	addwf	(??_Ball_draw+4)^0,w,c
 18575  00420C  6E16               	movwf	LCD_DrawRect@posX2^0,c
 18576  00420E  0E00               	movlw	0
 18577  004210  202C               	addwfc	(??_Ball_draw+5)^0,w,c
 18578  004212  6E17               	movwf	(LCD_DrawRect@posX2+1)^0,c
 18579  004214  EE20 F002          	lfsr	2,2
 18580  004218  5025               	movf	Ball_draw@b^0,w,c
 18581  00421A  26D9               	addwf	fsr2l,f,c
 18582  00421C  5026               	movf	(Ball_draw@b+1)^0,w,c
 18583  00421E  22DA               	addwfc	fsr2h,f,c
 18584  004220  CFDE F02D          	movff	postinc2,??_Ball_draw+6
 18585  004224  CFDD F02E          	movff	postdec2,??_Ball_draw+7
 18586  004228  0E08               	movlw	8
 18587  00422A  242D               	addwf	(??_Ball_draw+6)^0,w,c
 18588  00422C  6E18               	movwf	LCD_DrawRect@posY2^0,c
 18589  00422E  0E00               	movlw	0
 18590  004230  202E               	addwfc	(??_Ball_draw+7)^0,w,c
 18591  004232  6E19               	movwf	(LCD_DrawRect@posY2+1)^0,c
 18592  004234  0E01               	movlw	1
 18593  004236  6E1A               	movwf	LCD_DrawRect@fill^0,c
 18594  004238  0EF8               	movlw	248
 18595  00423A  6E1C               	movwf	(LCD_DrawRect@color+1)^0,c
 18596  00423C  0E00               	movlw	0
 18597  00423E  6E1B               	movwf	LCD_DrawRect@color^0,c
 18598  004240  EC9A  F016         	call	_LCD_DrawRect	;wreg free
 18599  004244  0012               	return		;funcret
 18600  004246                     __end_of_Ball_draw:
 18601                           	callstack 0
 18602                           
 18603 ;; *************** function _LCD_DrawRect *****************
 18604 ;; Defined at:
 18605 ;;		line 584 in file "libraries/lcd_highlevel.c"
 18606 ;; Parameters:    Size  Location     Type
 18607 ;;  posX1           2   17[COMRAM] unsigned short 
 18608 ;;  posY1           2   19[COMRAM] unsigned short 
 18609 ;;  posX2           2   21[COMRAM] unsigned short 
 18610 ;;  posY2           2   23[COMRAM] unsigned short 
 18611 ;;  fill            1   25[COMRAM] unsigned char 
 18612 ;;  color           2   26[COMRAM] unsigned short 
 18613 ;; Auto vars:     Size  Location     Type
 18614 ;;  i               2   34[COMRAM] unsigned short 
 18615 ;;  temp            2   30[COMRAM] unsigned short 
 18616 ;;  j               2   28[COMRAM] unsigned short 
 18617 ;;  colorL          1   33[COMRAM] unsigned char 
 18618 ;;  colorH          1   32[COMRAM] unsigned char 
 18619 ;; Return value:  Size  Location     Type
 18620 ;;                  1    wreg      void 
 18621 ;; Registers used:
 18622 ;;		wreg, status,2, status,0
 18623 ;; Tracked objects:
 18624 ;;		On entry : 0/0
 18625 ;;		On exit  : 0/0
 18626 ;;		Unchanged: 0/0
 18627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18628 ;;      Params:        11       0       0       0       0       0       0
 18629 ;;      Locals:         8       0       0       0       0       0       0
 18630 ;;      Temps:          0       0       0       0       0       0       0
 18631 ;;      Totals:        19       0       0       0       0       0       0
 18632 ;;Total ram usage:       19 bytes
 18633 ;; Hardware stack levels used: 1
 18634 ;; Hardware stack levels required when called: 4
 18635 ;; This function calls:
 18636 ;;		Nothing
 18637 ;; This function is called by:
 18638 ;;		_Ball_draw
 18639 ;;		_Paddle_draw
 18640 ;;		_LCD_SliderUpdate
 18641 ;;		_LCD_SliderDraw
 18642 ;;		_LCD_ButtonUpdate
 18643 ;;		_LCD_ButtonDraw
 18644 ;; This function uses a non-reentrant model
 18645 ;;
 18646                           
 18647                           	psect	text75
 18648  002D34                     __ptext75:
 18649                           	callstack 0
 18650  002D34                     _LCD_DrawRect:
 18651                           	callstack 21
 18652  002D34                     
 18653                           ;libraries/lcd_highlevel.c: 584: void LCD_DrawRect(uint16_t posX1,uint16_t posY1, uint16
      +                          _t posX2,;libraries/lcd_highlevel.c: 585:   uint16_t posY2,uint8_t fill,uint16_t color);
      +                          libraries/lcd_highlevel.c: 586: {;libraries/lcd_highlevel.c: 587:   uint16_t i;;librarie
      +                          s/lcd_highlevel.c: 588:   uint16_t j;;libraries/lcd_highlevel.c: 589:   uint16_t temp;;l
      +                          ibraries/lcd_highlevel.c: 590:   uint8_t colorH,colorL;;libraries/lcd_highlevel.c: 592: 
      +                            colorH = color>>8;
 18654  002D34  501C               	movf	(LCD_DrawRect@color+1)^0,w,c
 18655  002D36  6E21               	movwf	LCD_DrawRect@colorH^0,c
 18656  002D38                     
 18657                           ;libraries/lcd_highlevel.c: 593:   colorL = color;
 18658  002D38  C01B  F022         	movff	LCD_DrawRect@color,LCD_DrawRect@colorL
 18659  002D3C                     
 18660                           ;libraries/lcd_highlevel.c: 597:   if(posX1 > posX2)
 18661  002D3C  5012               	movf	LCD_DrawRect@posX1^0,w,c
 18662  002D3E  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18663  002D40  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18664  002D42  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18665  002D44  B0D8               	btfsc	status,0,c
 18666  002D46  EFA7  F016         	goto	u5881
 18667  002D4A  EFA9  F016         	goto	u5880
 18668  002D4E                     u5881:
 18669  002D4E  EFB5  F016         	goto	l8131
 18670  002D52                     u5880:
 18671  002D52                     
 18672                           ;libraries/lcd_highlevel.c: 598:   {;libraries/lcd_highlevel.c: 599:     temp = posX1;
 18673  002D52  C012  F01F         	movff	LCD_DrawRect@posX1,LCD_DrawRect@temp
 18674  002D56  C013  F020         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@temp+1
 18675                           
 18676                           ;libraries/lcd_highlevel.c: 600:     posX1 = posX2;
 18677  002D5A  C016  F012         	movff	LCD_DrawRect@posX2,LCD_DrawRect@posX1
 18678  002D5E  C017  F013         	movff	LCD_DrawRect@posX2+1,LCD_DrawRect@posX1+1
 18679                           
 18680                           ;libraries/lcd_highlevel.c: 601:     posX2 = temp;
 18681  002D62  C01F  F016         	movff	LCD_DrawRect@temp,LCD_DrawRect@posX2
 18682  002D66  C020  F017         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posX2+1
 18683  002D6A                     l8131:
 18684                           
 18685                           ;libraries/lcd_highlevel.c: 603:   if(posY1 > posY2)
 18686  002D6A  5014               	movf	LCD_DrawRect@posY1^0,w,c
 18687  002D6C  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18688  002D6E  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18689  002D70  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18690  002D72  B0D8               	btfsc	status,0,c
 18691  002D74  EFBE  F016         	goto	u5891
 18692  002D78  EFC0  F016         	goto	u5890
 18693  002D7C                     u5891:
 18694  002D7C  EFCC  F016         	goto	l8135
 18695  002D80                     u5890:
 18696  002D80                     
 18697                           ;libraries/lcd_highlevel.c: 604:   {;libraries/lcd_highlevel.c: 605:     temp = posY1;
 18698  002D80  C014  F01F         	movff	LCD_DrawRect@posY1,LCD_DrawRect@temp
 18699  002D84  C015  F020         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@temp+1
 18700                           
 18701                           ;libraries/lcd_highlevel.c: 606:     posY1 = posY2;
 18702  002D88  C018  F014         	movff	LCD_DrawRect@posY2,LCD_DrawRect@posY1
 18703  002D8C  C019  F015         	movff	LCD_DrawRect@posY2+1,LCD_DrawRect@posY1+1
 18704                           
 18705                           ;libraries/lcd_highlevel.c: 607:     posY2 = temp;
 18706  002D90  C01F  F018         	movff	LCD_DrawRect@temp,LCD_DrawRect@posY2
 18707  002D94  C020  F019         	movff	LCD_DrawRect@temp+1,LCD_DrawRect@posY2+1
 18708  002D98                     l8135:
 18709                           
 18710                           ;libraries/lcd_highlevel.c: 610:   if(fill==1)
 18711  002D98  041A               	decf	LCD_DrawRect@fill^0,w,c
 18712  002D9A  A4D8               	btfss	status,2,c
 18713  002D9C  EFD2  F016         	goto	u5901
 18714  002DA0  EFD4  F016         	goto	u5900
 18715  002DA4                     u5901:
 18716  002DA4  EF36  F017         	goto	l8211
 18717  002DA8                     u5900:
 18718  002DA8                     
 18719                           ;libraries/lcd_highlevel.c: 611:   {;libraries/lcd_highlevel.c: 613:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18720  002DA8  0E2A               	movlw	42
 18721  002DAA  6E80               	movwf	128,c	;volatile
 18722  002DAC  988B               	bcf	3979,4,c	;volatile
 18723  002DAE  968B               	bcf	3979,3,c	;volatile
 18724  002DB0  868B               	bsf	3979,3,c	;volatile
 18725  002DB2  888B               	bsf	3979,4,c	;volatile
 18726                           
 18727                           ;libraries/lcd_highlevel.c: 614:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18728  002DB4  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18729  002DB6  6E80               	movwf	128,c	;volatile
 18730  002DB8  968B               	bcf	3979,3,c	;volatile
 18731  002DBA  868B               	bsf	3979,3,c	;volatile
 18732  002DBC                     
 18733                           ;libraries/lcd_highlevel.c: 615:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18734  002DBC  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18735  002DC0  968B               	bcf	3979,3,c	;volatile
 18736  002DC2  868B               	bsf	3979,3,c	;volatile
 18737                           
 18738                           ;libraries/lcd_highlevel.c: 616:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18739  002DC4  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18740  002DC6  6E80               	movwf	128,c	;volatile
 18741  002DC8  968B               	bcf	3979,3,c	;volatile
 18742  002DCA  868B               	bsf	3979,3,c	;volatile
 18743  002DCC                     
 18744                           ;libraries/lcd_highlevel.c: 617:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18745  002DCC  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18746  002DD0  968B               	bcf	3979,3,c	;volatile
 18747  002DD2  868B               	bsf	3979,3,c	;volatile
 18748                           
 18749                           ;libraries/lcd_highlevel.c: 619:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18750  002DD4  0E2B               	movlw	43
 18751  002DD6  6E80               	movwf	128,c	;volatile
 18752  002DD8  988B               	bcf	3979,4,c	;volatile
 18753  002DDA  968B               	bcf	3979,3,c	;volatile
 18754  002DDC  868B               	bsf	3979,3,c	;volatile
 18755  002DDE  888B               	bsf	3979,4,c	;volatile
 18756                           
 18757                           ;libraries/lcd_highlevel.c: 620:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18758  002DE0  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18759  002DE2  6E80               	movwf	128,c	;volatile
 18760  002DE4  968B               	bcf	3979,3,c	;volatile
 18761  002DE6  868B               	bsf	3979,3,c	;volatile
 18762  002DE8                     
 18763                           ;libraries/lcd_highlevel.c: 621:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18764  002DE8  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18765  002DEC  968B               	bcf	3979,3,c	;volatile
 18766  002DEE  868B               	bsf	3979,3,c	;volatile
 18767                           
 18768                           ;libraries/lcd_highlevel.c: 622:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18769  002DF0  0E01               	movlw	1
 18770  002DF2  6E80               	movwf	128,c	;volatile
 18771  002DF4  968B               	bcf	3979,3,c	;volatile
 18772  002DF6  868B               	bsf	3979,3,c	;volatile
 18773                           
 18774                           ;libraries/lcd_highlevel.c: 623:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18775  002DF8  0E3F               	movlw	63
 18776  002DFA  6E80               	movwf	128,c	;volatile
 18777  002DFC  968B               	bcf	3979,3,c	;volatile
 18778  002DFE  868B               	bsf	3979,3,c	;volatile
 18779                           
 18780                           ;libraries/lcd_highlevel.c: 625:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18781  002E00  0E2C               	movlw	44
 18782  002E02  6E80               	movwf	128,c	;volatile
 18783  002E04  988B               	bcf	3979,4,c	;volatile
 18784  002E06  968B               	bcf	3979,3,c	;volatile
 18785  002E08  868B               	bsf	3979,3,c	;volatile
 18786  002E0A  888B               	bsf	3979,4,c	;volatile
 18787  002E0C                     
 18788                           ;libraries/lcd_highlevel.c: 626:     for(i=posX1;i<=posX2;i++)
 18789  002E0C  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18790  002E10  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18791  002E14  EF29  F017         	goto	l8209
 18792  002E18                     l281:
 18793                           
 18794                           ;libraries/lcd_highlevel.c: 627:     {;libraries/lcd_highlevel.c: 628:       for(j=posY1
      +                          ;j<=posY2;j++)
 18795  002E18  C014  F01D         	movff	LCD_DrawRect@posY1,LCD_DrawRect@j
 18796  002E1C  C015  F01E         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@j+1
 18797  002E20  EF1C  F017         	goto	l8205
 18798  002E24                     l283:
 18799                           
 18800                           ;libraries/lcd_highlevel.c: 629:       {;libraries/lcd_highlevel.c: 630:         PORTA =
      +                           colorH; LATC3 = 0; LATC3 = 1;;
 18801  002E24  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18802  002E28  968B               	bcf	3979,3,c	;volatile
 18803  002E2A  868B               	bsf	3979,3,c	;volatile
 18804                           
 18805                           ;libraries/lcd_highlevel.c: 631:         PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18806  002E2C  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18807  002E30  968B               	bcf	3979,3,c	;volatile
 18808  002E32  868B               	bsf	3979,3,c	;volatile
 18809  002E34                     
 18810                           ;libraries/lcd_highlevel.c: 632:       }
 18811  002E34  4A1D               	infsnz	LCD_DrawRect@j^0,f,c
 18812  002E36  2A1E               	incf	(LCD_DrawRect@j+1)^0,f,c
 18813  002E38                     l8205:
 18814  002E38  501D               	movf	LCD_DrawRect@j^0,w,c
 18815  002E3A  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 18816  002E3C  501E               	movf	(LCD_DrawRect@j+1)^0,w,c
 18817  002E3E  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 18818  002E40  B0D8               	btfsc	status,0,c
 18819  002E42  EF25  F017         	goto	u5911
 18820  002E46  EF27  F017         	goto	u5910
 18821  002E4A                     u5911:
 18822  002E4A  EF12  F017         	goto	l283
 18823  002E4E                     u5910:
 18824  002E4E                     
 18825                           ;libraries/lcd_highlevel.c: 633:     }
 18826  002E4E  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18827  002E50  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18828  002E52                     l8209:
 18829  002E52  5023               	movf	LCD_DrawRect@i^0,w,c
 18830  002E54  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18831  002E56  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18832  002E58  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18833  002E5A  B0D8               	btfsc	status,0,c
 18834  002E5C  EF32  F017         	goto	u5921
 18835  002E60  EF34  F017         	goto	u5920
 18836  002E64                     u5921:
 18837  002E64  EF0C  F017         	goto	l281
 18838  002E68                     u5920:
 18839  002E68  EF36  F018         	goto	l299
 18840  002E6C                     l8211:
 18841                           
 18842                           ;libraries/lcd_highlevel.c: 637:   {;libraries/lcd_highlevel.c: 639:     PORTA = 0x2A; L
      +                          ATC4 = 0; LATC3 = 0; LATC3 = 1; LATC4 = 1;;
 18843  002E6C  0E2A               	movlw	42
 18844  002E6E  6E80               	movwf	128,c	;volatile
 18845  002E70  988B               	bcf	3979,4,c	;volatile
 18846  002E72  968B               	bcf	3979,3,c	;volatile
 18847  002E74  868B               	bsf	3979,3,c	;volatile
 18848  002E76  888B               	bsf	3979,4,c	;volatile
 18849                           
 18850                           ;libraries/lcd_highlevel.c: 640:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 18851  002E78  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 18852  002E7A  6E80               	movwf	128,c	;volatile
 18853  002E7C  968B               	bcf	3979,3,c	;volatile
 18854  002E7E  868B               	bsf	3979,3,c	;volatile
 18855  002E80                     
 18856                           ;libraries/lcd_highlevel.c: 641:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 18857  002E80  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 18858  002E84  968B               	bcf	3979,3,c	;volatile
 18859  002E86  868B               	bsf	3979,3,c	;volatile
 18860                           
 18861                           ;libraries/lcd_highlevel.c: 642:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 18862  002E88  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 18863  002E8A  6E80               	movwf	128,c	;volatile
 18864  002E8C  968B               	bcf	3979,3,c	;volatile
 18865  002E8E  868B               	bsf	3979,3,c	;volatile
 18866  002E90                     
 18867                           ;libraries/lcd_highlevel.c: 643:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 18868  002E90  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 18869  002E94  968B               	bcf	3979,3,c	;volatile
 18870  002E96  868B               	bsf	3979,3,c	;volatile
 18871                           
 18872                           ;libraries/lcd_highlevel.c: 645:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18873  002E98  0E2B               	movlw	43
 18874  002E9A  6E80               	movwf	128,c	;volatile
 18875  002E9C  988B               	bcf	3979,4,c	;volatile
 18876  002E9E  968B               	bcf	3979,3,c	;volatile
 18877  002EA0  868B               	bsf	3979,3,c	;volatile
 18878  002EA2  888B               	bsf	3979,4,c	;volatile
 18879                           
 18880                           ;libraries/lcd_highlevel.c: 646:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 18881  002EA4  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 18882  002EA6  6E80               	movwf	128,c	;volatile
 18883  002EA8  968B               	bcf	3979,3,c	;volatile
 18884  002EAA  868B               	bsf	3979,3,c	;volatile
 18885  002EAC                     
 18886                           ;libraries/lcd_highlevel.c: 647:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 18887  002EAC  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 18888  002EB0  968B               	bcf	3979,3,c	;volatile
 18889  002EB2  868B               	bsf	3979,3,c	;volatile
 18890                           
 18891                           ;libraries/lcd_highlevel.c: 648:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 18892  002EB4  0E01               	movlw	1
 18893  002EB6  6E80               	movwf	128,c	;volatile
 18894  002EB8  968B               	bcf	3979,3,c	;volatile
 18895  002EBA  868B               	bsf	3979,3,c	;volatile
 18896                           
 18897                           ;libraries/lcd_highlevel.c: 649:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 18898  002EBC  0E3F               	movlw	63
 18899  002EBE  6E80               	movwf	128,c	;volatile
 18900  002EC0  968B               	bcf	3979,3,c	;volatile
 18901  002EC2  868B               	bsf	3979,3,c	;volatile
 18902                           
 18903                           ;libraries/lcd_highlevel.c: 651:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18904  002EC4  0E2C               	movlw	44
 18905  002EC6  6E80               	movwf	128,c	;volatile
 18906  002EC8  988B               	bcf	3979,4,c	;volatile
 18907  002ECA  968B               	bcf	3979,3,c	;volatile
 18908  002ECC  868B               	bsf	3979,3,c	;volatile
 18909  002ECE  888B               	bsf	3979,4,c	;volatile
 18910  002ED0                     
 18911                           ;libraries/lcd_highlevel.c: 653:     for(i=posX1;i<=posX2;i++)
 18912  002ED0  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18913  002ED4  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18914  002ED8  EF78  F017         	goto	l8279
 18915  002EDC                     l288:
 18916                           
 18917                           ;libraries/lcd_highlevel.c: 654:     {;libraries/lcd_highlevel.c: 655:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18918  002EDC  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18919  002EE0  968B               	bcf	3979,3,c	;volatile
 18920  002EE2  868B               	bsf	3979,3,c	;volatile
 18921                           
 18922                           ;libraries/lcd_highlevel.c: 656:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18923  002EE4  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18924  002EE8  968B               	bcf	3979,3,c	;volatile
 18925  002EEA  868B               	bsf	3979,3,c	;volatile
 18926  002EEC                     
 18927                           ;libraries/lcd_highlevel.c: 657:     }
 18928  002EEC  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18929  002EEE  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18930  002EF0                     l8279:
 18931  002EF0  5023               	movf	LCD_DrawRect@i^0,w,c
 18932  002EF2  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18933  002EF4  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18934  002EF6  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18935  002EF8  B0D8               	btfsc	status,0,c
 18936  002EFA  EF81  F017         	goto	u5931
 18937  002EFE  EF83  F017         	goto	u5930
 18938  002F02                     u5931:
 18939  002F02  EF6E  F017         	goto	l288
 18940  002F06                     u5930:
 18941  002F06                     
 18942                           ;libraries/lcd_highlevel.c: 659:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18943  002F06  0E2B               	movlw	43
 18944  002F08  6E80               	movwf	128,c	;volatile
 18945  002F0A  988B               	bcf	3979,4,c	;volatile
 18946  002F0C  968B               	bcf	3979,3,c	;volatile
 18947  002F0E  868B               	bsf	3979,3,c	;volatile
 18948  002F10  888B               	bsf	3979,4,c	;volatile
 18949                           
 18950                           ;libraries/lcd_highlevel.c: 660:     PORTA = posY2>>8; LATC3 = 0; LATC3 = 1;;
 18951  002F12  5019               	movf	(LCD_DrawRect@posY2+1)^0,w,c
 18952  002F14  6E80               	movwf	128,c	;volatile
 18953  002F16  968B               	bcf	3979,3,c	;volatile
 18954  002F18  868B               	bsf	3979,3,c	;volatile
 18955  002F1A                     
 18956                           ;libraries/lcd_highlevel.c: 661:     PORTA = posY2; LATC3 = 0; LATC3 = 1;;
 18957  002F1A  C018  FF80         	movff	LCD_DrawRect@posY2,3968	;volatile
 18958  002F1E  968B               	bcf	3979,3,c	;volatile
 18959  002F20  868B               	bsf	3979,3,c	;volatile
 18960                           
 18961                           ;libraries/lcd_highlevel.c: 662:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 18962  002F22  0E2C               	movlw	44
 18963  002F24  6E80               	movwf	128,c	;volatile
 18964  002F26  988B               	bcf	3979,4,c	;volatile
 18965  002F28  968B               	bcf	3979,3,c	;volatile
 18966  002F2A  868B               	bsf	3979,3,c	;volatile
 18967  002F2C  888B               	bsf	3979,4,c	;volatile
 18968  002F2E                     
 18969                           ;libraries/lcd_highlevel.c: 663:     for(i=posX1;i<=posX2;i++)
 18970  002F2E  C012  F023         	movff	LCD_DrawRect@posX1,LCD_DrawRect@i
 18971  002F32  C013  F024         	movff	LCD_DrawRect@posX1+1,LCD_DrawRect@i+1
 18972  002F36  EFA7  F017         	goto	l8313
 18973  002F3A                     l291:
 18974                           
 18975                           ;libraries/lcd_highlevel.c: 664:     {;libraries/lcd_highlevel.c: 665:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 18976  002F3A  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 18977  002F3E  968B               	bcf	3979,3,c	;volatile
 18978  002F40  868B               	bsf	3979,3,c	;volatile
 18979                           
 18980                           ;libraries/lcd_highlevel.c: 666:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 18981  002F42  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 18982  002F46  968B               	bcf	3979,3,c	;volatile
 18983  002F48  868B               	bsf	3979,3,c	;volatile
 18984  002F4A                     
 18985                           ;libraries/lcd_highlevel.c: 667:     }
 18986  002F4A  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 18987  002F4C  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 18988  002F4E                     l8313:
 18989  002F4E  5023               	movf	LCD_DrawRect@i^0,w,c
 18990  002F50  5C16               	subwf	LCD_DrawRect@posX2^0,w,c
 18991  002F52  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 18992  002F54  5817               	subwfb	(LCD_DrawRect@posX2+1)^0,w,c
 18993  002F56  B0D8               	btfsc	status,0,c
 18994  002F58  EFB0  F017         	goto	u5941
 18995  002F5C  EFB2  F017         	goto	u5940
 18996  002F60                     u5941:
 18997  002F60  EF9D  F017         	goto	l291
 18998  002F64                     u5940:
 18999  002F64                     
 19000                           ;libraries/lcd_highlevel.c: 669:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19001  002F64  0E2A               	movlw	42
 19002  002F66  6E80               	movwf	128,c	;volatile
 19003  002F68  988B               	bcf	3979,4,c	;volatile
 19004  002F6A  968B               	bcf	3979,3,c	;volatile
 19005  002F6C  868B               	bsf	3979,3,c	;volatile
 19006  002F6E  888B               	bsf	3979,4,c	;volatile
 19007                           
 19008                           ;libraries/lcd_highlevel.c: 670:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19009  002F70  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19010  002F72  6E80               	movwf	128,c	;volatile
 19011  002F74  968B               	bcf	3979,3,c	;volatile
 19012  002F76  868B               	bsf	3979,3,c	;volatile
 19013  002F78                     
 19014                           ;libraries/lcd_highlevel.c: 671:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19015  002F78  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19016  002F7C  968B               	bcf	3979,3,c	;volatile
 19017  002F7E  868B               	bsf	3979,3,c	;volatile
 19018                           
 19019                           ;libraries/lcd_highlevel.c: 672:     PORTA = posX1>>8; LATC3 = 0; LATC3 = 1;;
 19020  002F80  5013               	movf	(LCD_DrawRect@posX1+1)^0,w,c
 19021  002F82  6E80               	movwf	128,c	;volatile
 19022  002F84  968B               	bcf	3979,3,c	;volatile
 19023  002F86  868B               	bsf	3979,3,c	;volatile
 19024  002F88                     
 19025                           ;libraries/lcd_highlevel.c: 673:     PORTA = posX1; LATC3 = 0; LATC3 = 1;;
 19026  002F88  C012  FF80         	movff	LCD_DrawRect@posX1,3968	;volatile
 19027  002F8C  968B               	bcf	3979,3,c	;volatile
 19028  002F8E  868B               	bsf	3979,3,c	;volatile
 19029                           
 19030                           ;libraries/lcd_highlevel.c: 675:     PORTA = 0x2B; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19031  002F90  0E2B               	movlw	43
 19032  002F92  6E80               	movwf	128,c	;volatile
 19033  002F94  988B               	bcf	3979,4,c	;volatile
 19034  002F96  968B               	bcf	3979,3,c	;volatile
 19035  002F98  868B               	bsf	3979,3,c	;volatile
 19036  002F9A  888B               	bsf	3979,4,c	;volatile
 19037                           
 19038                           ;libraries/lcd_highlevel.c: 676:     PORTA = posY1>>8; LATC3 = 0; LATC3 = 1;;
 19039  002F9C  5015               	movf	(LCD_DrawRect@posY1+1)^0,w,c
 19040  002F9E  6E80               	movwf	128,c	;volatile
 19041  002FA0  968B               	bcf	3979,3,c	;volatile
 19042  002FA2  868B               	bsf	3979,3,c	;volatile
 19043  002FA4                     
 19044                           ;libraries/lcd_highlevel.c: 677:     PORTA = posY1; LATC3 = 0; LATC3 = 1;;
 19045  002FA4  C014  FF80         	movff	LCD_DrawRect@posY1,3968	;volatile
 19046  002FA8  968B               	bcf	3979,3,c	;volatile
 19047  002FAA  868B               	bsf	3979,3,c	;volatile
 19048                           
 19049                           ;libraries/lcd_highlevel.c: 678:     PORTA = (320 -1) >> 8; LATC3 = 0; LATC3 = 1;;
 19050  002FAC  0E01               	movlw	1
 19051  002FAE  6E80               	movwf	128,c	;volatile
 19052  002FB0  968B               	bcf	3979,3,c	;volatile
 19053  002FB2  868B               	bsf	3979,3,c	;volatile
 19054                           
 19055                           ;libraries/lcd_highlevel.c: 679:     PORTA = (320 -1); LATC3 = 0; LATC3 = 1;;
 19056  002FB4  0E3F               	movlw	63
 19057  002FB6  6E80               	movwf	128,c	;volatile
 19058  002FB8  968B               	bcf	3979,3,c	;volatile
 19059  002FBA  868B               	bsf	3979,3,c	;volatile
 19060                           
 19061                           ;libraries/lcd_highlevel.c: 680:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19062  002FBC  0E2C               	movlw	44
 19063  002FBE  6E80               	movwf	128,c	;volatile
 19064  002FC0  988B               	bcf	3979,4,c	;volatile
 19065  002FC2  968B               	bcf	3979,3,c	;volatile
 19066  002FC4  868B               	bsf	3979,3,c	;volatile
 19067  002FC6  888B               	bsf	3979,4,c	;volatile
 19068  002FC8                     
 19069                           ;libraries/lcd_highlevel.c: 681:     for(i=posY1;i<=posY2;i++)
 19070  002FC8  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19071  002FCC  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19072  002FD0  EFF4  F017         	goto	l8383
 19073  002FD4                     l294:
 19074                           
 19075                           ;libraries/lcd_highlevel.c: 682:     {;libraries/lcd_highlevel.c: 683:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19076  002FD4  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19077  002FD8  968B               	bcf	3979,3,c	;volatile
 19078  002FDA  868B               	bsf	3979,3,c	;volatile
 19079                           
 19080                           ;libraries/lcd_highlevel.c: 684:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19081  002FDC  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19082  002FE0  968B               	bcf	3979,3,c	;volatile
 19083  002FE2  868B               	bsf	3979,3,c	;volatile
 19084  002FE4                     
 19085                           ;libraries/lcd_highlevel.c: 685:     }
 19086  002FE4  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19087  002FE6  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19088  002FE8                     l8383:
 19089  002FE8  5023               	movf	LCD_DrawRect@i^0,w,c
 19090  002FEA  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19091  002FEC  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19092  002FEE  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19093  002FF0  B0D8               	btfsc	status,0,c
 19094  002FF2  EFFD  F017         	goto	u5951
 19095  002FF6  EFFF  F017         	goto	u5950
 19096  002FFA                     u5951:
 19097  002FFA  EFEA  F017         	goto	l294
 19098  002FFE                     u5950:
 19099  002FFE                     
 19100                           ;libraries/lcd_highlevel.c: 687:     PORTA = 0x2A; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19101  002FFE  0E2A               	movlw	42
 19102  003000  6E80               	movwf	128,c	;volatile
 19103  003002  988B               	bcf	3979,4,c	;volatile
 19104  003004  968B               	bcf	3979,3,c	;volatile
 19105  003006  868B               	bsf	3979,3,c	;volatile
 19106  003008  888B               	bsf	3979,4,c	;volatile
 19107                           
 19108                           ;libraries/lcd_highlevel.c: 688:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19109  00300A  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19110  00300C  6E80               	movwf	128,c	;volatile
 19111  00300E  968B               	bcf	3979,3,c	;volatile
 19112  003010  868B               	bsf	3979,3,c	;volatile
 19113  003012                     
 19114                           ;libraries/lcd_highlevel.c: 689:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19115  003012  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19116  003016  968B               	bcf	3979,3,c	;volatile
 19117  003018  868B               	bsf	3979,3,c	;volatile
 19118                           
 19119                           ;libraries/lcd_highlevel.c: 690:     PORTA = posX2>>8; LATC3 = 0; LATC3 = 1;;
 19120  00301A  5017               	movf	(LCD_DrawRect@posX2+1)^0,w,c
 19121  00301C  6E80               	movwf	128,c	;volatile
 19122  00301E  968B               	bcf	3979,3,c	;volatile
 19123  003020  868B               	bsf	3979,3,c	;volatile
 19124  003022                     
 19125                           ;libraries/lcd_highlevel.c: 691:     PORTA = posX2; LATC3 = 0; LATC3 = 1;;
 19126  003022  C016  FF80         	movff	LCD_DrawRect@posX2,3968	;volatile
 19127  003026  968B               	bcf	3979,3,c	;volatile
 19128  003028  868B               	bsf	3979,3,c	;volatile
 19129                           
 19130                           ;libraries/lcd_highlevel.c: 692:     PORTA = 0x2C; LATC4 = 0; LATC3 = 0; LATC3 = 1; LATC
      +                          4 = 1;;
 19131  00302A  0E2C               	movlw	44
 19132  00302C  6E80               	movwf	128,c	;volatile
 19133  00302E  988B               	bcf	3979,4,c	;volatile
 19134  003030  968B               	bcf	3979,3,c	;volatile
 19135  003032  868B               	bsf	3979,3,c	;volatile
 19136  003034  888B               	bsf	3979,4,c	;volatile
 19137  003036                     
 19138                           ;libraries/lcd_highlevel.c: 693:     for(i=posY1;i<=posY2;i++)
 19139  003036  C014  F023         	movff	LCD_DrawRect@posY1,LCD_DrawRect@i
 19140  00303A  C015  F024         	movff	LCD_DrawRect@posY1+1,LCD_DrawRect@i+1
 19141  00303E  EF2B  F018         	goto	l8427
 19142  003042                     l297:
 19143                           
 19144                           ;libraries/lcd_highlevel.c: 694:     {;libraries/lcd_highlevel.c: 695:       PORTA = col
      +                          orH; LATC3 = 0; LATC3 = 1;;
 19145  003042  C021  FF80         	movff	LCD_DrawRect@colorH,3968	;volatile
 19146  003046  968B               	bcf	3979,3,c	;volatile
 19147  003048  868B               	bsf	3979,3,c	;volatile
 19148                           
 19149                           ;libraries/lcd_highlevel.c: 696:       PORTA = colorL; LATC3 = 0; LATC3 = 1;;
 19150  00304A  C022  FF80         	movff	LCD_DrawRect@colorL,3968	;volatile
 19151  00304E  968B               	bcf	3979,3,c	;volatile
 19152  003050  868B               	bsf	3979,3,c	;volatile
 19153  003052                     
 19154                           ;libraries/lcd_highlevel.c: 697:     }
 19155  003052  4A23               	infsnz	LCD_DrawRect@i^0,f,c
 19156  003054  2A24               	incf	(LCD_DrawRect@i+1)^0,f,c
 19157  003056                     l8427:
 19158  003056  5023               	movf	LCD_DrawRect@i^0,w,c
 19159  003058  5C18               	subwf	LCD_DrawRect@posY2^0,w,c
 19160  00305A  5024               	movf	(LCD_DrawRect@i+1)^0,w,c
 19161  00305C  5819               	subwfb	(LCD_DrawRect@posY2+1)^0,w,c
 19162  00305E  B0D8               	btfsc	status,0,c
 19163  003060  EF34  F018         	goto	u5961
 19164  003064  EF36  F018         	goto	u5960
 19165  003068                     u5961:
 19166  003068  EF21  F018         	goto	l297
 19167  00306C                     u5960:
 19168  00306C                     l299:
 19169  00306C  0012               	return		;funcret
 19170  00306E                     __end_of_LCD_DrawRect:
 19171                           	callstack 0
 19172                           
 19173 ;; *************** function _XF_popEvent *****************
 19174 ;; Defined at:
 19175 ;;		line 72 in file "xf/xf.c"
 19176 ;; Parameters:    Size  Location     Type
 19177 ;;  inISR           1    wreg     _Bool 
 19178 ;; Auto vars:     Size  Location     Type
 19179 ;;  inISR           1   24[COMRAM] _Bool 
 19180 ;;  ev              1   23[COMRAM] unsigned char 
 19181 ;; Return value:  Size  Location     Type
 19182 ;;                  1    wreg      unsigned char 
 19183 ;; Registers used:
 19184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19185 ;; Tracked objects:
 19186 ;;		On entry : 0/0
 19187 ;;		On exit  : 0/0
 19188 ;;		Unchanged: 0/0
 19189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19190 ;;      Params:         0       0       0       0       0       0       0
 19191 ;;      Locals:         2       0       0       0       0       0       0
 19192 ;;      Temps:          0       0       0       0       0       0       0
 19193 ;;      Totals:         2       0       0       0       0       0       0
 19194 ;;Total ram usage:        2 bytes
 19195 ;; Hardware stack levels used: 1
 19196 ;; Hardware stack levels required when called: 5
 19197 ;; This function calls:
 19198 ;;		_ENTERCRITICAL
 19199 ;;		_LEAVECRITICAL
 19200 ;;		___awmod
 19201 ;; This function is called by:
 19202 ;;		_Factory_exec
 19203 ;; This function uses a non-reentrant model
 19204 ;;
 19205                           
 19206                           	psect	text76
 19207  005F18                     __ptext76:
 19208                           	callstack 0
 19209  005F18                     _XF_popEvent:
 19210                           	callstack 24
 19211                           
 19212                           ;incstack = 0
 19213                           ;XF_popEvent@inISR stored from wreg
 19214  005F18  6E19               	movwf	XF_popEvent@inISR^0,c
 19215  005F1A                     
 19216                           ;xf/xf.c: 76:     ENTERCRITICAL(inISR);
 19217  005F1A  5019               	movf	XF_popEvent@inISR^0,w,c
 19218  005F1C  ECFB  F031         	call	_ENTERCRITICAL
 19219  005F20                     
 19220                           ;xf/xf.c: 77:     if(theXF.in == theXF.out)
 19221  005F20  0100               	movlb	0	; () banked
 19222  005F22  51DA               	movf	(_theXF+37)& (0+255),w,b
 19223  005F24  19D9               	xorwf	(_theXF+36)& (0+255),w,b
 19224  005F26  A4D8               	btfss	status,2,c
 19225  005F28  EF98  F02F         	goto	u7841
 19226  005F2C  EF9A  F02F         	goto	u7840
 19227  005F30                     u7841:
 19228  005F30  EFA0  F02F         	goto	l10323
 19229  005F34                     u7840:
 19230  005F34                     
 19231                           ; BSR set to: 0
 19232                           ;xf/xf.c: 78:     {;xf/xf.c: 79:       LEAVECRITICAL(inISR);
 19233  005F34  5019               	movf	XF_popEvent@inISR^0,w,c
 19234  005F36  ECF0  F031         	call	_LEAVECRITICAL
 19235  005F3A                     
 19236                           ;xf/xf.c: 80:       return ev;
 19237  005F3A  0E00               	movlw	0
 19238  005F3C  EFBB  F02F         	goto	l730
 19239  005F40                     l10323:
 19240                           
 19241                           ; BSR set to: 0
 19242                           ;xf/xf.c: 82:     ev = theXF.eventQueue[theXF.out];
 19243  005F40  0ECD               	movlw	low (_theXF+24)
 19244  005F42  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19245  005F44  6ED9               	movwf	fsr2l,c
 19246  005F46  6ADA               	clrf	fsr2h,c
 19247  005F48  0E00               	movlw	high (_theXF+24)
 19248  005F4A  22DA               	addwfc	fsr2h,f,c
 19249  005F4C  50DF               	movf	indf2,w,c
 19250  005F4E  6E18               	movwf	XF_popEvent@ev^0,c
 19251  005F50                     
 19252                           ; BSR set to: 0
 19253                           ;xf/xf.c: 83:     theXF.out = (theXF.out + 1)%(uint8_t)sizeof(theXF.eventQueue);
 19254  005F50  0E01               	movlw	1
 19255  005F52  25DA               	addwf	(_theXF+37)& (0+255),w,b
 19256  005F54  6E12               	movwf	___awmod@dividend^0,c
 19257  005F56  6A13               	clrf	(___awmod@dividend+1)^0,c
 19258  005F58  0E00               	movlw	0
 19259  005F5A  2213               	addwfc	(___awmod@dividend+1)^0,f,c
 19260  005F5C  0E00               	movlw	0
 19261  005F5E  6E15               	movwf	(___awmod@divisor+1)^0,c
 19262  005F60  0E0C               	movlw	12
 19263  005F62  6E14               	movwf	___awmod@divisor^0,c
 19264  005F64  ECD2  F02B         	call	___awmod	;wreg free
 19265  005F68  5012               	movf	?___awmod^0,w,c
 19266  005F6A  0100               	movlb	0	; () banked
 19267  005F6C  6FDA               	movwf	(_theXF+37)& (0+255),b
 19268  005F6E                     
 19269                           ; BSR set to: 0
 19270                           ;xf/xf.c: 84:     LEAVECRITICAL(inISR);
 19271  005F6E  5019               	movf	XF_popEvent@inISR^0,w,c
 19272  005F70  ECF0  F031         	call	_LEAVECRITICAL
 19273  005F74                     
 19274                           ;xf/xf.c: 85:     return ev;
 19275  005F74  5018               	movf	XF_popEvent@ev^0,w,c
 19276  005F76                     l730:
 19277  005F76  0012               	return		;funcret
 19278  005F78                     __end_of_XF_popEvent:
 19279                           	callstack 0
 19280                           
 19281 ;; *************** function ___awmod *****************
 19282 ;; Defined at:
 19283 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 19284 ;; Parameters:    Size  Location     Type
 19285 ;;  dividend        2   17[COMRAM] int 
 19286 ;;  divisor         2   19[COMRAM] int 
 19287 ;; Auto vars:     Size  Location     Type
 19288 ;;  sign            1   22[COMRAM] unsigned char 
 19289 ;;  counter         1   21[COMRAM] unsigned char 
 19290 ;; Return value:  Size  Location     Type
 19291 ;;                  2   17[COMRAM] int 
 19292 ;; Registers used:
 19293 ;;		wreg, status,2, status,0
 19294 ;; Tracked objects:
 19295 ;;		On entry : 0/0
 19296 ;;		On exit  : 0/0
 19297 ;;		Unchanged: 0/0
 19298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19299 ;;      Params:         4       0       0       0       0       0       0
 19300 ;;      Locals:         2       0       0       0       0       0       0
 19301 ;;      Temps:          0       0       0       0       0       0       0
 19302 ;;      Totals:         6       0       0       0       0       0       0
 19303 ;;Total ram usage:        6 bytes
 19304 ;; Hardware stack levels used: 1
 19305 ;; Hardware stack levels required when called: 4
 19306 ;; This function calls:
 19307 ;;		Nothing
 19308 ;; This function is called by:
 19309 ;;		_XF_pushEvent
 19310 ;;		_XF_popEvent
 19311 ;; This function uses a non-reentrant model
 19312 ;;
 19313                           
 19314                           	psect	text77
 19315  0057A4                     __ptext77:
 19316                           	callstack 0
 19317  0057A4                     ___awmod:
 19318                           	callstack 20
 19319  0057A4  0E00               	movlw	0
 19320  0057A6  6E17               	movwf	___awmod@sign^0,c
 19321  0057A8  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
 19322  0057AA  EFDB  F02B         	goto	u6090
 19323  0057AE  EFD9  F02B         	goto	u6091
 19324  0057B2                     u6091:
 19325  0057B2  EFE1  F02B         	goto	l8617
 19326  0057B6                     u6090:
 19327  0057B6  6C12               	negf	___awmod@dividend^0,c
 19328  0057B8  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19329  0057BA  B0D8               	btfsc	status,0,c
 19330  0057BC  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19331  0057BE  0E01               	movlw	1
 19332  0057C0  6E17               	movwf	___awmod@sign^0,c
 19333  0057C2                     l8617:
 19334  0057C2  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
 19335  0057C4  EFE8  F02B         	goto	u6100
 19336  0057C8  EFE6  F02B         	goto	u6101
 19337  0057CC                     u6101:
 19338  0057CC  EFEC  F02B         	goto	l8621
 19339  0057D0                     u6100:
 19340  0057D0  6C14               	negf	___awmod@divisor^0,c
 19341  0057D2  1E15               	comf	(___awmod@divisor+1)^0,f,c
 19342  0057D4  B0D8               	btfsc	status,0,c
 19343  0057D6  2A15               	incf	(___awmod@divisor+1)^0,f,c
 19344  0057D8                     l8621:
 19345  0057D8  5014               	movf	___awmod@divisor^0,w,c
 19346  0057DA  1015               	iorwf	(___awmod@divisor+1)^0,w,c
 19347  0057DC  B4D8               	btfsc	status,2,c
 19348  0057DE  EFF3  F02B         	goto	u6111
 19349  0057E2  EFF5  F02B         	goto	u6110
 19350  0057E6                     u6111:
 19351  0057E6  EF19  F02C         	goto	l8637
 19352  0057EA                     u6110:
 19353  0057EA  0E01               	movlw	1
 19354  0057EC  6E16               	movwf	___awmod@counter^0,c
 19355  0057EE  EFFD  F02B         	goto	l8627
 19356  0057F2                     l8625:
 19357  0057F2  90D8               	bcf	status,0,c
 19358  0057F4  3614               	rlcf	___awmod@divisor^0,f,c
 19359  0057F6  3615               	rlcf	(___awmod@divisor+1)^0,f,c
 19360  0057F8  2A16               	incf	___awmod@counter^0,f,c
 19361  0057FA                     l8627:
 19362  0057FA  AE15               	btfss	(___awmod@divisor+1)^0,7,c
 19363  0057FC  EF02  F02C         	goto	u6121
 19364  005800  EF04  F02C         	goto	u6120
 19365  005804                     u6121:
 19366  005804  EFF9  F02B         	goto	l8625
 19367  005808                     u6120:
 19368  005808                     l8629:
 19369  005808  5014               	movf	___awmod@divisor^0,w,c
 19370  00580A  5C12               	subwf	___awmod@dividend^0,w,c
 19371  00580C  5015               	movf	(___awmod@divisor+1)^0,w,c
 19372  00580E  5813               	subwfb	(___awmod@dividend+1)^0,w,c
 19373  005810  A0D8               	btfss	status,0,c
 19374  005812  EF0D  F02C         	goto	u6131
 19375  005816  EF0F  F02C         	goto	u6130
 19376  00581A                     u6131:
 19377  00581A  EF13  F02C         	goto	l8633
 19378  00581E                     u6130:
 19379  00581E  5014               	movf	___awmod@divisor^0,w,c
 19380  005820  5E12               	subwf	___awmod@dividend^0,f,c
 19381  005822  5015               	movf	(___awmod@divisor+1)^0,w,c
 19382  005824  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
 19383  005826                     l8633:
 19384  005826  90D8               	bcf	status,0,c
 19385  005828  3215               	rrcf	(___awmod@divisor+1)^0,f,c
 19386  00582A  3214               	rrcf	___awmod@divisor^0,f,c
 19387  00582C  2E16               	decfsz	___awmod@counter^0,f,c
 19388  00582E  EF04  F02C         	goto	l8629
 19389  005832                     l8637:
 19390  005832  5017               	movf	___awmod@sign^0,w,c
 19391  005834  B4D8               	btfsc	status,2,c
 19392  005836  EF1F  F02C         	goto	u6141
 19393  00583A  EF21  F02C         	goto	u6140
 19394  00583E                     u6141:
 19395  00583E  EF25  F02C         	goto	l8641
 19396  005842                     u6140:
 19397  005842  6C12               	negf	___awmod@dividend^0,c
 19398  005844  1E13               	comf	(___awmod@dividend+1)^0,f,c
 19399  005846  B0D8               	btfsc	status,0,c
 19400  005848  2A13               	incf	(___awmod@dividend+1)^0,f,c
 19401  00584A                     l8641:
 19402  00584A  C012  F012         	movff	___awmod@dividend,?___awmod
 19403  00584E  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
 19404  005852  0012               	return		;funcret
 19405  005854                     __end_of___awmod:
 19406                           	callstack 0
 19407                           
 19408 ;; *************** function _LEAVECRITICAL *****************
 19409 ;; Defined at:
 19410 ;;		line 186 in file "xf/xf.c"
 19411 ;; Parameters:    Size  Location     Type
 19412 ;;  inISR           1    wreg     _Bool 
 19413 ;; Auto vars:     Size  Location     Type
 19414 ;;  inISR           1   17[COMRAM] _Bool 
 19415 ;; Return value:  Size  Location     Type
 19416 ;;                  1    wreg      void 
 19417 ;; Registers used:
 19418 ;;		wreg, status,2
 19419 ;; Tracked objects:
 19420 ;;		On entry : 0/0
 19421 ;;		On exit  : 0/0
 19422 ;;		Unchanged: 0/0
 19423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19424 ;;      Params:         0       0       0       0       0       0       0
 19425 ;;      Locals:         1       0       0       0       0       0       0
 19426 ;;      Temps:          0       0       0       0       0       0       0
 19427 ;;      Totals:         1       0       0       0       0       0       0
 19428 ;;Total ram usage:        1 bytes
 19429 ;; Hardware stack levels used: 1
 19430 ;; Hardware stack levels required when called: 4
 19431 ;; This function calls:
 19432 ;;		Nothing
 19433 ;; This function is called by:
 19434 ;;		_XF_pushEvent
 19435 ;;		_XF_popEvent
 19436 ;;		_XF_scheduleTimer
 19437 ;; This function uses a non-reentrant model
 19438 ;;
 19439                           
 19440                           	psect	text78
 19441  0063E0                     __ptext78:
 19442                           	callstack 0
 19443  0063E0                     _LEAVECRITICAL:
 19444                           	callstack 20
 19445                           
 19446                           ;incstack = 0
 19447                           ;LEAVECRITICAL@inISR stored from wreg
 19448  0063E0  6E12               	movwf	LEAVECRITICAL@inISR^0,c
 19449  0063E2                     
 19450                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 19451  0063E2  5012               	movf	LEAVECRITICAL@inISR^0,w,c
 19452  0063E4  A4D8               	btfss	status,2,c
 19453  0063E6  EFF7  F031         	goto	u6021
 19454  0063EA  EFF9  F031         	goto	u6020
 19455  0063EE                     u6021:
 19456  0063EE  EFFA  F031         	goto	l756
 19457  0063F2                     u6020:
 19458  0063F2                     
 19459                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 19460  0063F2  8EF2               	bsf	4082,7,c	;volatile
 19461  0063F4                     l756:
 19462  0063F4  0012               	return		;funcret
 19463  0063F6                     __end_of_LEAVECRITICAL:
 19464                           	callstack 0
 19465                           
 19466 ;; *************** function _ENTERCRITICAL *****************
 19467 ;; Defined at:
 19468 ;;		line 172 in file "xf/xf.c"
 19469 ;; Parameters:    Size  Location     Type
 19470 ;;  inISR           1    wreg     _Bool 
 19471 ;; Auto vars:     Size  Location     Type
 19472 ;;  inISR           1   17[COMRAM] _Bool 
 19473 ;; Return value:  Size  Location     Type
 19474 ;;                  1    wreg      void 
 19475 ;; Registers used:
 19476 ;;		wreg, status,2
 19477 ;; Tracked objects:
 19478 ;;		On entry : 0/0
 19479 ;;		On exit  : 0/0
 19480 ;;		Unchanged: 0/0
 19481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19482 ;;      Params:         0       0       0       0       0       0       0
 19483 ;;      Locals:         1       0       0       0       0       0       0
 19484 ;;      Temps:          0       0       0       0       0       0       0
 19485 ;;      Totals:         1       0       0       0       0       0       0
 19486 ;;Total ram usage:        1 bytes
 19487 ;; Hardware stack levels used: 1
 19488 ;; Hardware stack levels required when called: 4
 19489 ;; This function calls:
 19490 ;;		Nothing
 19491 ;; This function is called by:
 19492 ;;		_XF_pushEvent
 19493 ;;		_XF_popEvent
 19494 ;;		_XF_scheduleTimer
 19495 ;; This function uses a non-reentrant model
 19496 ;;
 19497                           
 19498                           	psect	text79
 19499  0063F6                     __ptext79:
 19500                           	callstack 0
 19501  0063F6                     _ENTERCRITICAL:
 19502                           	callstack 20
 19503                           
 19504                           ;incstack = 0
 19505                           ;ENTERCRITICAL@inISR stored from wreg
 19506  0063F6  6E12               	movwf	ENTERCRITICAL@inISR^0,c
 19507  0063F8                     
 19508                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 19509  0063F8  5012               	movf	ENTERCRITICAL@inISR^0,w,c
 19510  0063FA  A4D8               	btfss	status,2,c
 19511  0063FC  EF02  F032         	goto	u6011
 19512  006400  EF04  F032         	goto	u6010
 19513  006404                     u6011:
 19514  006404  EF05  F032         	goto	l752
 19515  006408                     u6010:
 19516  006408                     
 19517                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 19518  006408  9EF2               	bcf	4082,7,c	;volatile
 19519  00640A                     l752:
 19520  00640A  0012               	return		;funcret
 19521  00640C                     __end_of_ENTERCRITICAL:
 19522                           	callstack 0
 19523                           
 19524 ;; *************** function _isr *****************
 19525 ;; Defined at:
 19526 ;;		line 19 in file "main.c"
 19527 ;; Parameters:    Size  Location     Type
 19528 ;;		None
 19529 ;; Auto vars:     Size  Location     Type
 19530 ;;		None
 19531 ;; Return value:  Size  Location     Type
 19532 ;;                  1    wreg      void 
 19533 ;; Registers used:
 19534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19535 ;; Tracked objects:
 19536 ;;		On entry : 0/0
 19537 ;;		On exit  : 0/0
 19538 ;;		Unchanged: 0/0
 19539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19540 ;;      Params:         0       0       0       0       0       0       0
 19541 ;;      Locals:         0       0       0       0       0       0       0
 19542 ;;      Temps:          4       0       0       0       0       0       0
 19543 ;;      Totals:         4       0       0       0       0       0       0
 19544 ;;Total ram usage:        4 bytes
 19545 ;; Hardware stack levels used: 1
 19546 ;; Hardware stack levels required when called: 3
 19547 ;; This function calls:
 19548 ;;		_XF_decrementAndQueueTimers
 19549 ;;		i2_XF_pushEvent
 19550 ;;		i2_XF_scheduleTimer
 19551 ;; This function is called by:
 19552 ;;		Interrupt level 2
 19553 ;; This function uses a non-reentrant model
 19554 ;;
 19555                           
 19556                           	psect	intcode
 19557  000008                     __pintcode:
 19558                           	callstack 0
 19559  000008                     _isr:
 19560                           	callstack 14
 19561                           
 19562                           ;incstack = 0
 19563  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 19564  00000A  CFD9 F00E          	movff	fsr2l,??_isr
 19565  00000E  CFDA F00F          	movff	fsr2h,??_isr+1
 19566  000012  CFF3 F010          	movff	prodl,??_isr+2
 19567  000016  CFF4 F011          	movff	prodh,??_isr+3
 19568  00001A                     
 19569                           ;main.c: 21:     if((INT1IF==1)&&(INT1IE==1))
 19570  00001A  A0F0               	btfss	4080,0,c	;volatile
 19571  00001C  EF12  F000         	goto	i2u541_41
 19572  000020  EF14  F000         	goto	i2u541_40
 19573  000024                     i2u541_41:
 19574  000024  EF39  F000         	goto	i2l7715
 19575  000028                     i2u541_40:
 19576  000028  A6F0               	btfss	4080,3,c	;volatile
 19577  00002A  EF19  F000         	goto	i2u542_41
 19578  00002E  EF1B  F000         	goto	i2u542_40
 19579  000032                     i2u542_41:
 19580  000032  EF39  F000         	goto	i2l7715
 19581  000036                     i2u542_40:
 19582  000036                     
 19583                           ;main.c: 22:     {;main.c: 23:         if(INTEDG1==0)
 19584  000036  BAF1               	btfsc	4081,5,c	;volatile
 19585  000038  EF20  F000         	goto	i2u543_41
 19586  00003C  EF22  F000         	goto	i2u543_40
 19587  000040                     i2u543_41:
 19588  000040  EF2B  F000         	goto	i2l794
 19589  000044                     i2u543_40:
 19590  000044                     
 19591                           ;main.c: 24:         {;main.c: 25:             INTEDG1=1;
 19592  000044  8AF1               	bsf	4081,5,c	;volatile
 19593                           
 19594                           ;main.c: 26:             INT1IF=0;
 19595  000046  90F0               	bcf	4080,0,c	;volatile
 19596  000048                     
 19597                           ;main.c: 27:             XF_pushEvent(evPress,1);
 19598  000048  0E01               	movlw	1
 19599  00004A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19600  00004C  0E01               	movlw	1
 19601  00004E  EC29  F02F         	call	i2_XF_pushEvent
 19602                           
 19603                           ;main.c: 29:         }
 19604  000052  EF39  F000         	goto	i2l7715
 19605  000056                     i2l794:
 19606  000056  AAF1               	btfss	4081,5,c	;volatile
 19607  000058  EF30  F000         	goto	i2u544_41
 19608  00005C  EF32  F000         	goto	i2u544_40
 19609  000060                     i2u544_41:
 19610  000060  EF39  F000         	goto	i2l7715
 19611  000064                     i2u544_40:
 19612  000064                     
 19613                           ;main.c: 31:         {;main.c: 32:             INTEDG1=0;
 19614  000064  9AF1               	bcf	4081,5,c	;volatile
 19615                           
 19616                           ;main.c: 33:             INT1IF=0;
 19617  000066  90F0               	bcf	4080,0,c	;volatile
 19618  000068                     
 19619                           ;main.c: 34:             XF_pushEvent(evRelease,1);
 19620  000068  0E01               	movlw	1
 19621  00006A  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19622  00006C  0E02               	movlw	2
 19623  00006E  EC29  F02F         	call	i2_XF_pushEvent
 19624  000072                     i2l7715:
 19625                           
 19626                           ;main.c: 40:     if((TMR0IF==1)&&(TMR0IE==1))
 19627  000072  A4F2               	btfss	4082,2,c	;volatile
 19628  000074  EF3E  F000         	goto	i2u545_41
 19629  000078  EF40  F000         	goto	i2u545_40
 19630  00007C                     i2u545_41:
 19631  00007C  EF6E  F000         	goto	i2l800
 19632  000080                     i2u545_40:
 19633  000080  AAF2               	btfss	4082,5,c	;volatile
 19634  000082  EF45  F000         	goto	i2u546_41
 19635  000086  EF47  F000         	goto	i2u546_40
 19636  00008A                     i2u546_41:
 19637  00008A  EF6E  F000         	goto	i2l800
 19638  00008E                     i2u546_40:
 19639  00008E                     
 19640                           ;main.c: 41:     {;main.c: 42:         if(i<=5)
 19641  00008E  BE4C               	btfsc	(_i+1)^0,7,c
 19642  000090  EF55  F000         	goto	i2u547_40
 19643  000094  504C               	movf	(_i+1)^0,w,c
 19644  000096  E107               	bnz	i2u547_41
 19645  000098  0E06               	movlw	6
 19646  00009A  5C4B               	subwf	_i^0,w,c
 19647  00009C  B0D8               	btfsc	status,0,c
 19648  00009E  EF53  F000         	goto	i2u547_41
 19649  0000A2  EF55  F000         	goto	i2u547_40
 19650  0000A6                     i2u547_41:
 19651  0000A6  EF59  F000         	goto	i2l7723
 19652  0000AA                     i2u547_40:
 19653  0000AA                     
 19654                           ;main.c: 43:         {;main.c: 44:             i++;
 19655  0000AA  4A4B               	infsnz	_i^0,f,c
 19656  0000AC  2A4C               	incf	(_i+1)^0,f,c
 19657                           
 19658                           ;main.c: 45:         }
 19659  0000AE  EF67  F000         	goto	i2l7727
 19660  0000B2                     i2l7723:
 19661                           
 19662                           ;main.c: 47:         {;main.c: 48:             XF_scheduleTimer(5,evGameUpdate,1);
 19663  0000B2  0E00               	movlw	0
 19664  0000B4  6E03               	movwf	(i2XF_scheduleTimer@tm+1)^0,c
 19665  0000B6  0E05               	movlw	5
 19666  0000B8  6E02               	movwf	i2XF_scheduleTimer@tm^0,c
 19667  0000BA  0E0A               	movlw	10
 19668  0000BC  6E04               	movwf	i2XF_scheduleTimer@ev^0,c
 19669  0000BE  0E01               	movlw	1
 19670  0000C0  6E05               	movwf	i2XF_scheduleTimer@inISR^0,c
 19671  0000C2  EC8B  F02E         	call	i2_XF_scheduleTimer	;wreg free
 19672  0000C6                     
 19673                           ;main.c: 49:             i=0;
 19674  0000C6  0E00               	movlw	0
 19675  0000C8  6E4C               	movwf	(_i+1)^0,c
 19676  0000CA  0E00               	movlw	0
 19677  0000CC  6E4B               	movwf	_i^0,c
 19678  0000CE                     i2l7727:
 19679                           
 19680                           ;main.c: 51:         XF_decrementAndQueueTimers();
 19681  0000CE  EC5D  F022         	call	_XF_decrementAndQueueTimers	;wreg free
 19682                           
 19683                           ;main.c: 52:         TMR0H=0xFB;
 19684  0000D2  0EFB               	movlw	251
 19685  0000D4  6ED7               	movwf	215,c	;volatile
 19686                           
 19687                           ;main.c: 53:         TMR0L=0x1D;
 19688  0000D6  0E1D               	movlw	29
 19689  0000D8  6ED6               	movwf	214,c	;volatile
 19690  0000DA                     
 19691                           ;main.c: 54:         TMR0IF=0;
 19692  0000DA  94F2               	bcf	4082,2,c	;volatile
 19693  0000DC                     i2l800:
 19694  0000DC  C011  FFF4         	movff	??_isr+3,prodh
 19695  0000E0  C010  FFF3         	movff	??_isr+2,prodl
 19696  0000E4  C00F  FFDA         	movff	??_isr+1,fsr2h
 19697  0000E8  C00E  FFD9         	movff	??_isr,fsr2l
 19698  0000EC  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 19699  0000EE  0011               	retfie		f
 19700  0000F0                     __end_of_isr:
 19701                           	callstack 0
 19702                           
 19703 ;; *************** function i2_XF_scheduleTimer *****************
 19704 ;; Defined at:
 19705 ;;		line 96 in file "xf/xf.c"
 19706 ;; Parameters:    Size  Location     Type
 19707 ;;  tm              2    1[COMRAM] unsigned short 
 19708 ;;  ev              1    3[COMRAM] unsigned char 
 19709 ;;  inISR           1    4[COMRAM] _Bool 
 19710 ;; Auto vars:     Size  Location     Type
 19711 ;;  i               1    5[COMRAM] unsigned char 
 19712 ;; Return value:  Size  Location     Type
 19713 ;;                  1    wreg      unsigned char 
 19714 ;; Registers used:
 19715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19716 ;; Tracked objects:
 19717 ;;		On entry : 0/0
 19718 ;;		On exit  : 0/0
 19719 ;;		Unchanged: 0/0
 19720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19721 ;;      Params:         4       0       0       0       0       0       0
 19722 ;;      Locals:         1       0       0       0       0       0       0
 19723 ;;      Temps:          0       0       0       0       0       0       0
 19724 ;;      Totals:         5       0       0       0       0       0       0
 19725 ;;Total ram usage:        5 bytes
 19726 ;; Hardware stack levels used: 1
 19727 ;; Hardware stack levels required when called: 1
 19728 ;; This function calls:
 19729 ;;		i2_ENTERCRITICAL
 19730 ;;		i2_LEAVECRITICAL
 19731 ;; This function is called by:
 19732 ;;		_isr
 19733 ;; This function uses a non-reentrant model
 19734 ;;
 19735                           
 19736                           	psect	text81
 19737  005D16                     __ptext81:
 19738                           	callstack 0
 19739  005D16                     i2_XF_scheduleTimer:
 19740                           	callstack 15
 19741  005D16                     
 19742                           ;xf/xf.c: 96: TimerID XF_scheduleTimer(Time tm, Event ev, _Bool inISR);xf/xf.c: 97: {;xf
      +                          /xf.c: 98:     uint8_t i;;xf/xf.c: 100:     ENTERCRITICAL(inISR);
 19743  005D16  5005               	movf	i2XF_scheduleTimer@inISR^0,w,c
 19744  005D18  EC11  F032         	call	i2_ENTERCRITICAL
 19745  005D1C                     
 19746                           ;xf/xf.c: 101:     for (i=0; i<8; i++)
 19747  005D1C  0E00               	movlw	0
 19748  005D1E  6E06               	movwf	i2XF_scheduleTimer@i^0,c
 19749  005D20                     i2l7689:
 19750                           
 19751                           ;xf/xf.c: 102:     {;xf/xf.c: 103:         if (theXF.timerList[i].ev == NULLEVENT)
 19752  005D20  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 19753  005D22  0D03               	mullw	3
 19754  005D24  0EB7               	movlw	low (_theXF+2)
 19755  005D26  24F3               	addwf	243,w,c
 19756  005D28  6ED9               	movwf	fsr2l,c
 19757  005D2A  0E00               	movlw	high (_theXF+2)
 19758  005D2C  20F4               	addwfc	prodh,w,c
 19759  005D2E  6EDA               	movwf	fsr2h,c
 19760  005D30  50DF               	movf	indf2,w,c
 19761  005D32  A4D8               	btfss	status,2,c
 19762  005D34  EF9E  F02E         	goto	i2u539_41
 19763  005D38  EFA0  F02E         	goto	i2u539_40
 19764  005D3C                     i2u539_41:
 19765  005D3C  EFB8  F02E         	goto	i2l7693
 19766  005D40                     i2u539_40:
 19767  005D40                     
 19768                           ;xf/xf.c: 104:         {;xf/xf.c: 105:             theXF.timerList[i].tm = tm;
 19769  005D40  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 19770  005D42  0D03               	mullw	3
 19771  005D44  0EB5               	movlw	low _theXF
 19772  005D46  24F3               	addwf	243,w,c
 19773  005D48  6ED9               	movwf	fsr2l,c
 19774  005D4A  0E00               	movlw	high _theXF
 19775  005D4C  20F4               	addwfc	prodh,w,c
 19776  005D4E  6EDA               	movwf	fsr2h,c
 19777  005D50  C002  FFDE         	movff	i2XF_scheduleTimer@tm,postinc2
 19778  005D54  C003  FFDD         	movff	i2XF_scheduleTimer@tm+1,postdec2
 19779                           
 19780                           ;xf/xf.c: 106:             theXF.timerList[i].ev = ev;
 19781  005D58  5006               	movf	i2XF_scheduleTimer@i^0,w,c
 19782  005D5A  0D03               	mullw	3
 19783  005D5C  0EB7               	movlw	low (_theXF+2)
 19784  005D5E  24F3               	addwf	243,w,c
 19785  005D60  6ED9               	movwf	fsr2l,c
 19786  005D62  0E00               	movlw	high (_theXF+2)
 19787  005D64  20F4               	addwfc	prodh,w,c
 19788  005D66  6EDA               	movwf	fsr2h,c
 19789  005D68  C004  FFDF         	movff	i2XF_scheduleTimer@ev,indf2
 19790                           
 19791                           ;xf/xf.c: 107:             break;
 19792  005D6C  EFC1  F02E         	goto	i2l7697
 19793  005D70                     i2l7693:
 19794                           
 19795                           ;xf/xf.c: 109:     }
 19796  005D70  2A06               	incf	i2XF_scheduleTimer@i^0,f,c
 19797  005D72  0E07               	movlw	7
 19798  005D74  6406               	cpfsgt	i2XF_scheduleTimer@i^0,c
 19799  005D76  EFBF  F02E         	goto	i2u540_41
 19800  005D7A  EFC1  F02E         	goto	i2u540_40
 19801  005D7E                     i2u540_41:
 19802  005D7E  EF90  F02E         	goto	i2l7689
 19803  005D82                     i2u540_40:
 19804  005D82                     i2l7697:
 19805                           
 19806                           ;xf/xf.c: 114:     LEAVECRITICAL(inISR);
 19807  005D82  5005               	movf	i2XF_scheduleTimer@inISR^0,w,c
 19808  005D84  EC06  F032         	call	i2_LEAVECRITICAL
 19809  005D88  0012               	return		;funcret
 19810  005D8A                     __end_ofi2_XF_scheduleTimer:
 19811                           	callstack 0
 19812                           
 19813 ;; *************** function _XF_decrementAndQueueTimers *****************
 19814 ;; Defined at:
 19815 ;;		line 139 in file "xf/xf.c"
 19816 ;; Parameters:    Size  Location     Type
 19817 ;;		None
 19818 ;; Auto vars:     Size  Location     Type
 19819 ;;  i               2   11[COMRAM] int 
 19820 ;; Return value:  Size  Location     Type
 19821 ;;                  1    wreg      void 
 19822 ;; Registers used:
 19823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19824 ;; Tracked objects:
 19825 ;;		On entry : 0/0
 19826 ;;		On exit  : 0/0
 19827 ;;		Unchanged: 0/0
 19828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19829 ;;      Params:         0       0       0       0       0       0       0
 19830 ;;      Locals:         2       0       0       0       0       0       0
 19831 ;;      Temps:          2       0       0       0       0       0       0
 19832 ;;      Totals:         4       0       0       0       0       0       0
 19833 ;;Total ram usage:        4 bytes
 19834 ;; Hardware stack levels used: 1
 19835 ;; Hardware stack levels required when called: 2
 19836 ;; This function calls:
 19837 ;;		_XF_unscheduleTimer
 19838 ;;		i2_XF_pushEvent
 19839 ;;		i2___wmul
 19840 ;; This function is called by:
 19841 ;;		_isr
 19842 ;; This function uses a non-reentrant model
 19843 ;;
 19844                           
 19845                           	psect	text82
 19846  0044BA                     __ptext82:
 19847                           	callstack 0
 19848  0044BA                     _XF_decrementAndQueueTimers:
 19849                           	callstack 14
 19850  0044BA                     
 19851                           ;xf/xf.c: 141:     int i;;xf/xf.c: 142:     for (i=0; i<8; i++)
 19852  0044BA  0E00               	movlw	0
 19853  0044BC  6E0D               	movwf	(XF_decrementAndQueueTimers@i+1)^0,c
 19854  0044BE  0E00               	movlw	0
 19855  0044C0  6E0C               	movwf	XF_decrementAndQueueTimers@i^0,c
 19856  0044C2                     i2l7667:
 19857                           
 19858                           ;xf/xf.c: 143:     {;xf/xf.c: 144:         if (theXF.timerList[i].ev != NULLEVENT)
 19859  0044C2  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19860  0044C6  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19861  0044CA  0E00               	movlw	0
 19862  0044CC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19863  0044CE  0E03               	movlw	3
 19864  0044D0  6E03               	movwf	i2___wmul@multiplicand^0,c
 19865  0044D2  ECA3  F031         	call	i2___wmul	;wreg free
 19866  0044D6  0EB7               	movlw	low (_theXF+2)
 19867  0044D8  2401               	addwf	?i2___wmul^0,w,c
 19868  0044DA  6ED9               	movwf	fsr2l,c
 19869  0044DC  0E00               	movlw	high (_theXF+2)
 19870  0044DE  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19871  0044E0  6EDA               	movwf	fsr2h,c
 19872  0044E2  50DF               	movf	indf2,w,c
 19873  0044E4  B4D8               	btfsc	status,2,c
 19874  0044E6  EF77  F022         	goto	i2u535_41
 19875  0044EA  EF79  F022         	goto	i2u535_40
 19876  0044EE                     i2u535_41:
 19877  0044EE  EFDD  F022         	goto	i2l7677
 19878  0044F2                     i2u535_40:
 19879  0044F2                     
 19880                           ;xf/xf.c: 145:         {;xf/xf.c: 147:             theXF.timerList[i].tm-=1;
 19881  0044F2  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19882  0044F6  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19883  0044FA  0E00               	movlw	0
 19884  0044FC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19885  0044FE  0E03               	movlw	3
 19886  004500  6E03               	movwf	i2___wmul@multiplicand^0,c
 19887  004502  ECA3  F031         	call	i2___wmul	;wreg free
 19888  004506  0EB5               	movlw	low _theXF
 19889  004508  2401               	addwf	?i2___wmul^0,w,c
 19890  00450A  6ED9               	movwf	fsr2l,c
 19891  00450C  0E00               	movlw	high _theXF
 19892  00450E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19893  004510  6EDA               	movwf	fsr2h,c
 19894  004512  06DE               	decf	postinc2,f,c
 19895  004514  0E00               	movlw	0
 19896  004516  5ADD               	subwfb	postdec2,f,c
 19897                           
 19898                           ;xf/xf.c: 148:             if (theXF.timerList[i].tm ==0)
 19899  004518  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19900  00451C  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19901  004520  0E00               	movlw	0
 19902  004522  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19903  004524  0E03               	movlw	3
 19904  004526  6E03               	movwf	i2___wmul@multiplicand^0,c
 19905  004528  ECA3  F031         	call	i2___wmul	;wreg free
 19906  00452C  0EB5               	movlw	low _theXF
 19907  00452E  2401               	addwf	?i2___wmul^0,w,c
 19908  004530  6ED9               	movwf	fsr2l,c
 19909  004532  0E00               	movlw	high _theXF
 19910  004534  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19911  004536  6EDA               	movwf	fsr2h,c
 19912  004538  50DE               	movf	postinc2,w,c
 19913  00453A  10DE               	iorwf	postinc2,w,c
 19914  00453C  A4D8               	btfss	status,2,c
 19915  00453E  EFA3  F022         	goto	i2u536_41
 19916  004542  EFA5  F022         	goto	i2u536_40
 19917  004546                     i2u536_41:
 19918  004546  EFDD  F022         	goto	i2l7677
 19919  00454A                     i2u536_40:
 19920  00454A                     
 19921                           ;xf/xf.c: 149:             {;xf/xf.c: 150:                 if(XF_pushEvent(theXF.timerLi
      +                          st[i].ev, 1) == 1)
 19922  00454A  0E01               	movlw	1
 19923  00454C  6E07               	movwf	i2XF_pushEvent@inISR^0,c
 19924  00454E  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19925  004552  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19926  004556  0E00               	movlw	0
 19927  004558  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19928  00455A  0E03               	movlw	3
 19929  00455C  6E03               	movwf	i2___wmul@multiplicand^0,c
 19930  00455E  ECA3  F031         	call	i2___wmul	;wreg free
 19931  004562  0EB7               	movlw	low (_theXF+2)
 19932  004564  2401               	addwf	?i2___wmul^0,w,c
 19933  004566  6ED9               	movwf	fsr2l,c
 19934  004568  0E00               	movlw	high (_theXF+2)
 19935  00456A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19936  00456C  6EDA               	movwf	fsr2h,c
 19937  00456E  50DF               	movf	indf2,w,c
 19938  004570  EC29  F02F         	call	i2_XF_pushEvent
 19939  004574  06E8               	decf	wreg,f,c
 19940  004576  A4D8               	btfss	status,2,c
 19941  004578  EFC0  F022         	goto	i2u537_41
 19942  00457C  EFC2  F022         	goto	i2u537_40
 19943  004580                     i2u537_41:
 19944  004580  EFC9  F022         	goto	i2l7675
 19945  004584                     i2u537_40:
 19946  004584                     
 19947                           ;xf/xf.c: 151:                 {;xf/xf.c: 152:                   XF_unscheduleTimer(i, 1
      +                          );
 19948  004584  0E01               	movlw	1
 19949  004586  6E02               	movwf	XF_unscheduleTimer@inISR^0,c
 19950  004588  500C               	movf	XF_decrementAndQueueTimers@i^0,w,c
 19951  00458A  ECEE  F030         	call	_XF_unscheduleTimer
 19952                           
 19953                           ;xf/xf.c: 153:                 }
 19954  00458E  EFDD  F022         	goto	i2l7677
 19955  004592                     i2l7675:
 19956                           
 19957                           ;xf/xf.c: 155:                 {;xf/xf.c: 156:                   theXF.timerList[i].tm=1
      +                          ;
 19958  004592  C00C  F001         	movff	XF_decrementAndQueueTimers@i,i2___wmul@multiplier
 19959  004596  C00D  F002         	movff	XF_decrementAndQueueTimers@i+1,i2___wmul@multiplier+1
 19960  00459A  0E00               	movlw	0
 19961  00459C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 19962  00459E  0E03               	movlw	3
 19963  0045A0  6E03               	movwf	i2___wmul@multiplicand^0,c
 19964  0045A2  ECA3  F031         	call	i2___wmul	;wreg free
 19965  0045A6  0EB5               	movlw	low _theXF
 19966  0045A8  2401               	addwf	?i2___wmul^0,w,c
 19967  0045AA  6ED9               	movwf	fsr2l,c
 19968  0045AC  0E00               	movlw	high _theXF
 19969  0045AE  2002               	addwfc	(?i2___wmul+1)^0,w,c
 19970  0045B0  6EDA               	movwf	fsr2h,c
 19971  0045B2  0E01               	movlw	1
 19972  0045B4  6EDE               	movwf	postinc2,c
 19973  0045B6  0E00               	movlw	0
 19974  0045B8  6EDD               	movwf	postdec2,c
 19975  0045BA                     i2l7677:
 19976                           
 19977                           ;xf/xf.c: 160:     }
 19978  0045BA  4A0C               	infsnz	XF_decrementAndQueueTimers@i^0,f,c
 19979  0045BC  2A0D               	incf	(XF_decrementAndQueueTimers@i+1)^0,f,c
 19980  0045BE  BE0D               	btfsc	(XF_decrementAndQueueTimers@i+1)^0,7,c
 19981  0045C0  EFEB  F022         	goto	i2u538_41
 19982  0045C4  500D               	movf	(XF_decrementAndQueueTimers@i+1)^0,w,c
 19983  0045C6  E109               	bnz	i2u538_40
 19984  0045C8  0E08               	movlw	8
 19985  0045CA  5C0C               	subwf	XF_decrementAndQueueTimers@i^0,w,c
 19986  0045CC  A0D8               	btfss	status,0,c
 19987  0045CE  EFEB  F022         	goto	i2u538_41
 19988  0045D2  EFED  F022         	goto	i2u538_40
 19989  0045D6                     i2u538_41:
 19990  0045D6  EF61  F022         	goto	i2l7667
 19991  0045DA                     i2u538_40:
 19992  0045DA  0012               	return		;funcret
 19993  0045DC                     __end_of_XF_decrementAndQueueTimers:
 19994                           	callstack 0
 19995                           
 19996 ;; *************** function i2___wmul *****************
 19997 ;; Defined at:
 19998 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 19999 ;; Parameters:    Size  Location     Type
 20000 ;;  multiplier      2    0[COMRAM] unsigned int 
 20001 ;;  multiplicand    2    2[COMRAM] unsigned int 
 20002 ;; Auto vars:     Size  Location     Type
 20003 ;;  product         2    4[COMRAM] unsigned int 
 20004 ;; Return value:  Size  Location     Type
 20005 ;;                  2    0[COMRAM] unsigned int 
 20006 ;; Registers used:
 20007 ;;		wreg, status,2, status,0, prodl, prodh
 20008 ;; Tracked objects:
 20009 ;;		On entry : 0/0
 20010 ;;		On exit  : 0/0
 20011 ;;		Unchanged: 0/0
 20012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20013 ;;      Params:         4       0       0       0       0       0       0
 20014 ;;      Locals:         2       0       0       0       0       0       0
 20015 ;;      Temps:          0       0       0       0       0       0       0
 20016 ;;      Totals:         6       0       0       0       0       0       0
 20017 ;;Total ram usage:        6 bytes
 20018 ;; Hardware stack levels used: 1
 20019 ;; This function calls:
 20020 ;;		Nothing
 20021 ;; This function is called by:
 20022 ;;		_XF_decrementAndQueueTimers
 20023 ;; This function uses a non-reentrant model
 20024 ;;
 20025                           
 20026                           	psect	text83
 20027  006346                     __ptext83:
 20028                           	callstack 0
 20029  006346                     i2___wmul:
 20030                           	callstack 15
 20031  006346  5001               	movf	i2___wmul@multiplier^0,w,c
 20032  006348  0203               	mulwf	i2___wmul@multiplicand^0,c
 20033  00634A  CFF3 F005          	movff	prodl,i2___wmul@product
 20034  00634E  CFF4 F006          	movff	prodh,i2___wmul@product+1
 20035  006352  5001               	movf	i2___wmul@multiplier^0,w,c
 20036  006354  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 20037  006356  50F3               	movf	243,w,c
 20038  006358  2606               	addwf	(i2___wmul@product+1)^0,f,c
 20039  00635A  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 20040  00635C  0203               	mulwf	i2___wmul@multiplicand^0,c
 20041  00635E  50F3               	movf	243,w,c
 20042  006360  2606               	addwf	(i2___wmul@product+1)^0,f,c
 20043  006362  C005  F001         	movff	i2___wmul@product,?i2___wmul
 20044  006366  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 20045  00636A  0012               	return		;funcret
 20046  00636C                     __end_ofi2___wmul:
 20047                           	callstack 0
 20048                           
 20049 ;; *************** function i2_XF_pushEvent *****************
 20050 ;; Defined at:
 20051 ;;		line 49 in file "xf/xf.c"
 20052 ;; Parameters:    Size  Location     Type
 20053 ;;  ev              1    wreg     unsigned char 
 20054 ;;  inISR           1    6[COMRAM] _Bool 
 20055 ;; Auto vars:     Size  Location     Type
 20056 ;;  ev              1    7[COMRAM] unsigned char 
 20057 ;;  temp            1    8[COMRAM] unsigned char 
 20058 ;; Return value:  Size  Location     Type
 20059 ;;                  1    wreg      _Bool 
 20060 ;; Registers used:
 20061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20062 ;; Tracked objects:
 20063 ;;		On entry : 0/0
 20064 ;;		On exit  : 0/0
 20065 ;;		Unchanged: 0/0
 20066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20067 ;;      Params:         1       0       0       0       0       0       0
 20068 ;;      Locals:         2       0       0       0       0       0       0
 20069 ;;      Temps:          0       0       0       0       0       0       0
 20070 ;;      Totals:         3       0       0       0       0       0       0
 20071 ;;Total ram usage:        3 bytes
 20072 ;; Hardware stack levels used: 1
 20073 ;; Hardware stack levels required when called: 1
 20074 ;; This function calls:
 20075 ;;		i2_ENTERCRITICAL
 20076 ;;		i2_LEAVECRITICAL
 20077 ;;		i2___awmod
 20078 ;; This function is called by:
 20079 ;;		_XF_decrementAndQueueTimers
 20080 ;;		_isr
 20081 ;; This function uses a non-reentrant model
 20082 ;;
 20083                           
 20084                           	psect	text84
 20085  005E52                     __ptext84:
 20086                           	callstack 0
 20087  005E52                     i2_XF_pushEvent:
 20088                           	callstack 15
 20089                           
 20090                           ;incstack = 0
 20091                           ;i2XF_pushEvent@ev stored from wreg
 20092  005E52  6E08               	movwf	i2XF_pushEvent@ev^0,c
 20093  005E54                     
 20094                           ;xf/xf.c: 49: _Bool XF_pushEvent(Event ev, _Bool inISR);xf/xf.c: 50: {;xf/xf.c: 51:   ui
      +                          nt8_t temp;;xf/xf.c: 52:     ENTERCRITICAL(inISR);
 20095  005E54  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20096  005E56  EC11  F032         	call	i2_ENTERCRITICAL
 20097  005E5A                     
 20098                           ;xf/xf.c: 54:     temp = (theXF.in+1) % (uint8_t)sizeof(theXF.eventQueue);
 20099  005E5A  0E01               	movlw	1
 20100  005E5C  0100               	movlb	0	; () banked
 20101  005E5E  25D9               	addwf	(_theXF+36)& (0+255),w,b
 20102  005E60  6E01               	movwf	i2___awmod@dividend^0,c
 20103  005E62  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 20104  005E64  0E00               	movlw	0
 20105  005E66  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
 20106  005E68  0E00               	movlw	0
 20107  005E6A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 20108  005E6C  0E0C               	movlw	12
 20109  005E6E  6E03               	movwf	i2___awmod@divisor^0,c
 20110  005E70  EC2A  F02C         	call	i2___awmod	;wreg free
 20111  005E74  5001               	movf	?i2___awmod^0,w,c
 20112  005E76  6E09               	movwf	i2XF_pushEvent@temp^0,c
 20113  005E78                     
 20114                           ;xf/xf.c: 55:     if(temp == theXF.out)
 20115  005E78  5009               	movf	i2XF_pushEvent@temp^0,w,c
 20116  005E7A  0100               	movlb	0	; () banked
 20117  005E7C  19DA               	xorwf	(_theXF+37)& (0+255),w,b
 20118  005E7E  A4D8               	btfss	status,2,c
 20119  005E80  EF44  F02F         	goto	i2u533_41
 20120  005E84  EF46  F02F         	goto	i2u533_40
 20121  005E88                     i2u533_41:
 20122  005E88  EF4C  F02F         	goto	i2l7577
 20123  005E8C                     i2u533_40:
 20124  005E8C                     
 20125                           ; BSR set to: 0
 20126                           ;xf/xf.c: 56:     {;xf/xf.c: 57:       LEAVECRITICAL(inISR);
 20127  005E8C  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20128  005E8E  EC06  F032         	call	i2_LEAVECRITICAL
 20129  005E92                     
 20130                           ;xf/xf.c: 58:       return 0;
 20131  005E92  0E00               	movlw	0
 20132  005E94  EF5A  F02F         	goto	i2l726
 20133  005E98                     i2l7577:
 20134                           
 20135                           ; BSR set to: 0
 20136                           ;xf/xf.c: 60:     theXF.eventQueue[theXF.in] = ev;
 20137  005E98  0ECD               	movlw	low (_theXF+24)
 20138  005E9A  25D9               	addwf	(_theXF+36)& (0+255),w,b
 20139  005E9C  6ED9               	movwf	fsr2l,c
 20140  005E9E  6ADA               	clrf	fsr2h,c
 20141  005EA0  0E00               	movlw	high (_theXF+24)
 20142  005EA2  22DA               	addwfc	fsr2h,f,c
 20143  005EA4  C008  FFDF         	movff	i2XF_pushEvent@ev,indf2
 20144  005EA8                     
 20145                           ; BSR set to: 0
 20146                           ;xf/xf.c: 61:     theXF.in = temp;
 20147  005EA8  C009  F0D9         	movff	i2XF_pushEvent@temp,_theXF+36
 20148  005EAC                     
 20149                           ; BSR set to: 0
 20150                           ;xf/xf.c: 62:     LEAVECRITICAL(inISR);
 20151  005EAC  5007               	movf	i2XF_pushEvent@inISR^0,w,c
 20152  005EAE  EC06  F032         	call	i2_LEAVECRITICAL
 20153  005EB2                     
 20154                           ;xf/xf.c: 63:     return 1;
 20155  005EB2  0E01               	movlw	1
 20156  005EB4                     i2l726:
 20157  005EB4  0012               	return		;funcret
 20158  005EB6                     __end_ofi2_XF_pushEvent:
 20159                           	callstack 0
 20160                           
 20161 ;; *************** function i2___awmod *****************
 20162 ;; Defined at:
 20163 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 20164 ;; Parameters:    Size  Location     Type
 20165 ;;  dividend        2    0[COMRAM] int 
 20166 ;;  divisor         2    2[COMRAM] int 
 20167 ;; Auto vars:     Size  Location     Type
 20168 ;;  sign            1    5[COMRAM] unsigned char 
 20169 ;;  counter         1    4[COMRAM] unsigned char 
 20170 ;; Return value:  Size  Location     Type
 20171 ;;                  2    0[COMRAM] int 
 20172 ;; Registers used:
 20173 ;;		wreg, status,2, status,0
 20174 ;; Tracked objects:
 20175 ;;		On entry : 0/0
 20176 ;;		On exit  : 0/0
 20177 ;;		Unchanged: 0/0
 20178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20179 ;;      Params:         4       0       0       0       0       0       0
 20180 ;;      Locals:         2       0       0       0       0       0       0
 20181 ;;      Temps:          0       0       0       0       0       0       0
 20182 ;;      Totals:         6       0       0       0       0       0       0
 20183 ;;Total ram usage:        6 bytes
 20184 ;; Hardware stack levels used: 1
 20185 ;; This function calls:
 20186 ;;		Nothing
 20187 ;; This function is called by:
 20188 ;;		i2_XF_pushEvent
 20189 ;; This function uses a non-reentrant model
 20190 ;;
 20191                           
 20192                           	psect	text85
 20193  005854                     __ptext85:
 20194                           	callstack 0
 20195  005854                     i2___awmod:
 20196                           	callstack 15
 20197  005854  0E00               	movlw	0
 20198  005856  6E06               	movwf	i2___awmod@sign^0,c
 20199  005858  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 20200  00585A  EF33  F02C         	goto	i2u512_40
 20201  00585E  EF31  F02C         	goto	i2u512_41
 20202  005862                     i2u512_41:
 20203  005862  EF39  F02C         	goto	i2l7363
 20204  005866                     i2u512_40:
 20205  005866  6C01               	negf	i2___awmod@dividend^0,c
 20206  005868  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20207  00586A  B0D8               	btfsc	status,0,c
 20208  00586C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20209  00586E  0E01               	movlw	1
 20210  005870  6E06               	movwf	i2___awmod@sign^0,c
 20211  005872                     i2l7363:
 20212  005872  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 20213  005874  EF40  F02C         	goto	i2u513_40
 20214  005878  EF3E  F02C         	goto	i2u513_41
 20215  00587C                     i2u513_41:
 20216  00587C  EF44  F02C         	goto	i2l7367
 20217  005880                     i2u513_40:
 20218  005880  6C03               	negf	i2___awmod@divisor^0,c
 20219  005882  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 20220  005884  B0D8               	btfsc	status,0,c
 20221  005886  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 20222  005888                     i2l7367:
 20223  005888  5003               	movf	i2___awmod@divisor^0,w,c
 20224  00588A  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 20225  00588C  B4D8               	btfsc	status,2,c
 20226  00588E  EF4B  F02C         	goto	i2u514_41
 20227  005892  EF4D  F02C         	goto	i2u514_40
 20228  005896                     i2u514_41:
 20229  005896  EF71  F02C         	goto	i2l7383
 20230  00589A                     i2u514_40:
 20231  00589A  0E01               	movlw	1
 20232  00589C  6E05               	movwf	i2___awmod@counter^0,c
 20233  00589E  EF55  F02C         	goto	i2l7373
 20234  0058A2                     i2l7371:
 20235  0058A2  90D8               	bcf	status,0,c
 20236  0058A4  3603               	rlcf	i2___awmod@divisor^0,f,c
 20237  0058A6  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 20238  0058A8  2A05               	incf	i2___awmod@counter^0,f,c
 20239  0058AA                     i2l7373:
 20240  0058AA  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 20241  0058AC  EF5A  F02C         	goto	i2u515_41
 20242  0058B0  EF5C  F02C         	goto	i2u515_40
 20243  0058B4                     i2u515_41:
 20244  0058B4  EF51  F02C         	goto	i2l7371
 20245  0058B8                     i2u515_40:
 20246  0058B8                     i2l7375:
 20247  0058B8  5003               	movf	i2___awmod@divisor^0,w,c
 20248  0058BA  5C01               	subwf	i2___awmod@dividend^0,w,c
 20249  0058BC  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20250  0058BE  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 20251  0058C0  A0D8               	btfss	status,0,c
 20252  0058C2  EF65  F02C         	goto	i2u516_41
 20253  0058C6  EF67  F02C         	goto	i2u516_40
 20254  0058CA                     i2u516_41:
 20255  0058CA  EF6B  F02C         	goto	i2l7379
 20256  0058CE                     i2u516_40:
 20257  0058CE  5003               	movf	i2___awmod@divisor^0,w,c
 20258  0058D0  5E01               	subwf	i2___awmod@dividend^0,f,c
 20259  0058D2  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 20260  0058D4  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 20261  0058D6                     i2l7379:
 20262  0058D6  90D8               	bcf	status,0,c
 20263  0058D8  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 20264  0058DA  3203               	rrcf	i2___awmod@divisor^0,f,c
 20265  0058DC  2E05               	decfsz	i2___awmod@counter^0,f,c
 20266  0058DE  EF5C  F02C         	goto	i2l7375
 20267  0058E2                     i2l7383:
 20268  0058E2  5006               	movf	i2___awmod@sign^0,w,c
 20269  0058E4  B4D8               	btfsc	status,2,c
 20270  0058E6  EF77  F02C         	goto	i2u517_41
 20271  0058EA  EF79  F02C         	goto	i2u517_40
 20272  0058EE                     i2u517_41:
 20273  0058EE  EF7D  F02C         	goto	i2l7387
 20274  0058F2                     i2u517_40:
 20275  0058F2  6C01               	negf	i2___awmod@dividend^0,c
 20276  0058F4  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 20277  0058F6  B0D8               	btfsc	status,0,c
 20278  0058F8  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 20279  0058FA                     i2l7387:
 20280  0058FA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 20281  0058FE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 20282  005902  0012               	return		;funcret
 20283  005904                     __end_ofi2___awmod:
 20284                           	callstack 0
 20285                           
 20286 ;; *************** function _XF_unscheduleTimer *****************
 20287 ;; Defined at:
 20288 ;;		line 125 in file "xf/xf.c"
 20289 ;; Parameters:    Size  Location     Type
 20290 ;;  id              1    wreg     unsigned char 
 20291 ;;  inISR           1    1[COMRAM] _Bool 
 20292 ;; Auto vars:     Size  Location     Type
 20293 ;;  id              1    2[COMRAM] unsigned char 
 20294 ;; Return value:  Size  Location     Type
 20295 ;;                  1    wreg      void 
 20296 ;; Registers used:
 20297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20298 ;; Tracked objects:
 20299 ;;		On entry : 0/0
 20300 ;;		On exit  : 0/0
 20301 ;;		Unchanged: 0/0
 20302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20303 ;;      Params:         1       0       0       0       0       0       0
 20304 ;;      Locals:         1       0       0       0       0       0       0
 20305 ;;      Temps:          0       0       0       0       0       0       0
 20306 ;;      Totals:         2       0       0       0       0       0       0
 20307 ;;Total ram usage:        2 bytes
 20308 ;; Hardware stack levels used: 1
 20309 ;; Hardware stack levels required when called: 1
 20310 ;; This function calls:
 20311 ;;		i2_ENTERCRITICAL
 20312 ;;		i2_LEAVECRITICAL
 20313 ;; This function is called by:
 20314 ;;		_XF_decrementAndQueueTimers
 20315 ;; This function uses a non-reentrant model
 20316 ;;
 20317                           
 20318                           	psect	text86
 20319  0061DC                     __ptext86:
 20320                           	callstack 0
 20321  0061DC                     _XF_unscheduleTimer:
 20322                           	callstack 14
 20323                           
 20324                           ;incstack = 0
 20325                           ;XF_unscheduleTimer@id stored from wreg
 20326  0061DC  6E03               	movwf	XF_unscheduleTimer@id^0,c
 20327  0061DE                     
 20328                           ;xf/xf.c: 125: void XF_unscheduleTimer(TimerID id, _Bool inISR);xf/xf.c: 126: {;xf/xf.c:
      +                           127:     ENTERCRITICAL(inISR);
 20329  0061DE  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20330  0061E0  EC11  F032         	call	i2_ENTERCRITICAL
 20331  0061E4                     
 20332                           ;xf/xf.c: 128:     theXF.timerList[id].tm = 0;
 20333  0061E4  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20334  0061E6  0D03               	mullw	3
 20335  0061E8  0EB5               	movlw	low _theXF
 20336  0061EA  24F3               	addwf	243,w,c
 20337  0061EC  6ED9               	movwf	fsr2l,c
 20338  0061EE  0E00               	movlw	high _theXF
 20339  0061F0  20F4               	addwfc	prodh,w,c
 20340  0061F2  6EDA               	movwf	fsr2h,c
 20341  0061F4  0E00               	movlw	0
 20342  0061F6  6EDE               	movwf	postinc2,c
 20343  0061F8  0E00               	movlw	0
 20344  0061FA  6EDD               	movwf	postdec2,c
 20345  0061FC                     
 20346                           ;xf/xf.c: 129:     theXF.timerList[id].ev = NULLEVENT;
 20347  0061FC  5003               	movf	XF_unscheduleTimer@id^0,w,c
 20348  0061FE  0D03               	mullw	3
 20349  006200  0EB7               	movlw	low (_theXF+2)
 20350  006202  24F3               	addwf	243,w,c
 20351  006204  6ED9               	movwf	fsr2l,c
 20352  006206  0E00               	movlw	high (_theXF+2)
 20353  006208  20F4               	addwfc	prodh,w,c
 20354  00620A  6EDA               	movwf	fsr2h,c
 20355  00620C  0E00               	movlw	0
 20356  00620E  6EDF               	movwf	indf2,c
 20357                           
 20358                           ;xf/xf.c: 130:     LEAVECRITICAL(inISR);
 20359  006210  5002               	movf	XF_unscheduleTimer@inISR^0,w,c
 20360  006212  EC06  F032         	call	i2_LEAVECRITICAL
 20361  006216  0012               	return		;funcret
 20362  006218                     __end_of_XF_unscheduleTimer:
 20363                           	callstack 0
 20364                           
 20365 ;; *************** function i2_LEAVECRITICAL *****************
 20366 ;; Defined at:
 20367 ;;		line 186 in file "xf/xf.c"
 20368 ;; Parameters:    Size  Location     Type
 20369 ;;  inISR           1    wreg     _Bool 
 20370 ;; Auto vars:     Size  Location     Type
 20371 ;;  inISR           1    0[COMRAM] _Bool 
 20372 ;; Return value:  Size  Location     Type
 20373 ;;                  1    wreg      void 
 20374 ;; Registers used:
 20375 ;;		wreg, status,2
 20376 ;; Tracked objects:
 20377 ;;		On entry : 0/0
 20378 ;;		On exit  : 0/0
 20379 ;;		Unchanged: 0/0
 20380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20381 ;;      Params:         0       0       0       0       0       0       0
 20382 ;;      Locals:         1       0       0       0       0       0       0
 20383 ;;      Temps:          0       0       0       0       0       0       0
 20384 ;;      Totals:         1       0       0       0       0       0       0
 20385 ;;Total ram usage:        1 bytes
 20386 ;; Hardware stack levels used: 1
 20387 ;; This function calls:
 20388 ;;		Nothing
 20389 ;; This function is called by:
 20390 ;;		_XF_unscheduleTimer
 20391 ;;		i2_XF_pushEvent
 20392 ;;		i2_XF_scheduleTimer
 20393 ;; This function uses a non-reentrant model
 20394 ;;
 20395                           
 20396                           	psect	text87
 20397  00640C                     __ptext87:
 20398                           	callstack 0
 20399  00640C                     i2_LEAVECRITICAL:
 20400                           	callstack 15
 20401                           
 20402                           ;incstack = 0
 20403                           ;i2LEAVECRITICAL@inISR stored from wreg
 20404  00640C  6E01               	movwf	i2LEAVECRITICAL@inISR^0,c
 20405  00640E                     
 20406                           ;xf/xf.c: 186: static void LEAVECRITICAL(_Bool inISR);xf/xf.c: 187: {;xf/xf.c: 188:     
      +                          if (inISR == 0)
 20407  00640E  5001               	movf	i2LEAVECRITICAL@inISR^0,w,c
 20408  006410  A4D8               	btfss	status,2,c
 20409  006412  EF0D  F032         	goto	i2u511_41
 20410  006416  EF0F  F032         	goto	i2u511_40
 20411  00641A                     i2u511_41:
 20412  00641A  EF10  F032         	goto	i2l756
 20413  00641E                     i2u511_40:
 20414  00641E                     
 20415                           ;xf/xf.c: 189:     {;xf/xf.c: 190:       GIE = 1;
 20416  00641E  8EF2               	bsf	4082,7,c	;volatile
 20417  006420                     i2l756:
 20418  006420  0012               	return		;funcret
 20419  006422                     __end_ofi2_LEAVECRITICAL:
 20420                           	callstack 0
 20421                           
 20422 ;; *************** function i2_ENTERCRITICAL *****************
 20423 ;; Defined at:
 20424 ;;		line 172 in file "xf/xf.c"
 20425 ;; Parameters:    Size  Location     Type
 20426 ;;  inISR           1    wreg     _Bool 
 20427 ;; Auto vars:     Size  Location     Type
 20428 ;;  inISR           1    0[COMRAM] _Bool 
 20429 ;; Return value:  Size  Location     Type
 20430 ;;                  1    wreg      void 
 20431 ;; Registers used:
 20432 ;;		wreg, status,2
 20433 ;; Tracked objects:
 20434 ;;		On entry : 0/0
 20435 ;;		On exit  : 0/0
 20436 ;;		Unchanged: 0/0
 20437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20438 ;;      Params:         0       0       0       0       0       0       0
 20439 ;;      Locals:         1       0       0       0       0       0       0
 20440 ;;      Temps:          0       0       0       0       0       0       0
 20441 ;;      Totals:         1       0       0       0       0       0       0
 20442 ;;Total ram usage:        1 bytes
 20443 ;; Hardware stack levels used: 1
 20444 ;; This function calls:
 20445 ;;		Nothing
 20446 ;; This function is called by:
 20447 ;;		_XF_unscheduleTimer
 20448 ;;		i2_XF_pushEvent
 20449 ;;		i2_XF_scheduleTimer
 20450 ;; This function uses a non-reentrant model
 20451 ;;
 20452                           
 20453                           	psect	text88
 20454  006422                     __ptext88:
 20455                           	callstack 0
 20456  006422                     i2_ENTERCRITICAL:
 20457                           	callstack 15
 20458                           
 20459                           ;incstack = 0
 20460                           ;i2ENTERCRITICAL@inISR stored from wreg
 20461  006422  6E01               	movwf	i2ENTERCRITICAL@inISR^0,c
 20462  006424                     
 20463                           ;xf/xf.c: 172: static void ENTERCRITICAL(_Bool inISR);xf/xf.c: 173: {;xf/xf.c: 174:     
      +                          if (inISR == 0)
 20464  006424  5001               	movf	i2ENTERCRITICAL@inISR^0,w,c
 20465  006426  A4D8               	btfss	status,2,c
 20466  006428  EF18  F032         	goto	i2u510_41
 20467  00642C  EF1A  F032         	goto	i2u510_40
 20468  006430                     i2u510_41:
 20469  006430  EF1B  F032         	goto	i2l752
 20470  006434                     i2u510_40:
 20471  006434                     
 20472                           ;xf/xf.c: 175:     {;xf/xf.c: 176:       GIE = 0;
 20473  006434  9EF2               	bcf	4082,7,c	;volatile
 20474  006436                     i2l752:
 20475  006436  0012               	return		;funcret
 20476  006438                     __end_ofi2_ENTERCRITICAL:
 20477                           	callstack 0
 20478                           
 20479                           	psect	rparam
 20480  0000                     
 20481                           	psect	temp
 20482  00004E                     btemp:
 20483                           	callstack 0
 20484  00004E                     	ds	1
 20485  0000                     int$flags	set	btemp
 20486  0000                     wtemp8	set	btemp+1
 20487  0000                     ttemp5	set	btemp+1
 20488  0000                     ttemp6	set	btemp+4
 20489  0000                     ttemp7	set	btemp+8
 20490                           
 20491                           	psect	idloc
 20492                           
 20493                           ;Config register IDLOC0 @ 0x200000
 20494                           ;	unspecified, using default values
 20495  200000                     	org	2097152
 20496  200000  FF                 	db	255
 20497                           
 20498                           ;Config register IDLOC1 @ 0x200001
 20499                           ;	unspecified, using default values
 20500  200001                     	org	2097153
 20501  200001  FF                 	db	255
 20502                           
 20503                           ;Config register IDLOC2 @ 0x200002
 20504                           ;	unspecified, using default values
 20505  200002                     	org	2097154
 20506  200002  FF                 	db	255
 20507                           
 20508                           ;Config register IDLOC3 @ 0x200003
 20509                           ;	unspecified, using default values
 20510  200003                     	org	2097155
 20511  200003  FF                 	db	255
 20512                           
 20513                           ;Config register IDLOC4 @ 0x200004
 20514                           ;	unspecified, using default values
 20515  200004                     	org	2097156
 20516  200004  FF                 	db	255
 20517                           
 20518                           ;Config register IDLOC5 @ 0x200005
 20519                           ;	unspecified, using default values
 20520  200005                     	org	2097157
 20521  200005  FF                 	db	255
 20522                           
 20523                           ;Config register IDLOC6 @ 0x200006
 20524                           ;	unspecified, using default values
 20525  200006                     	org	2097158
 20526  200006  FF                 	db	255
 20527                           
 20528                           ;Config register IDLOC7 @ 0x200007
 20529                           ;	unspecified, using default values
 20530  200007                     	org	2097159
 20531  200007  FF                 	db	255
 20532                           
 20533                           	psect	config
 20534                           
 20535                           ; Padding undefined space
 20536  300000                     	org	3145728
 20537  300000  FF                 	db	255
 20538                           
 20539                           ;Config register CONFIG1H @ 0x300001
 20540                           ;	Oscillator Selection bits
 20541                           ;	FOSC = INTIO67, Internal oscillator block
 20542                           ;	4X PLL Enable
 20543                           ;	PLLCFG = ON, Oscillator multiplied by 4
 20544                           ;	Primary clock enable bit
 20545                           ;	PRICLKEN = ON, Primary clock is always enabled
 20546                           ;	Fail-Safe Clock Monitor Enable bit
 20547                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 20548                           ;	Internal/External Oscillator Switchover bit
 20549                           ;	IESO = OFF, Oscillator Switchover mode disabled
 20550  300001                     	org	3145729
 20551  300001  38                 	db	56
 20552                           
 20553                           ;Config register CONFIG2L @ 0x300002
 20554                           ;	Power-up Timer Enable bit
 20555                           ;	PWRTEN = OFF, Power up timer disabled
 20556                           ;	Brown-out Reset Enable bits
 20557                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 20558                           ;	Brown Out Reset Voltage bits
 20559                           ;	BORV = 190, VBOR set to 1.90 V nominal
 20560  300002                     	org	3145730
 20561  300002  1F                 	db	31
 20562                           
 20563                           ;Config register CONFIG2H @ 0x300003
 20564                           ;	Watchdog Timer Enable bits
 20565                           ;	WDTEN = SWON, WDT is controlled by SWDTEN bit of the WDTCON register
 20566                           ;	Watchdog Timer Postscale Select bits
 20567                           ;	WDTPS = 32768, 1:32768
 20568  300003                     	org	3145731
 20569  300003  3E                 	db	62
 20570                           
 20571                           ; Padding undefined space
 20572  300004                     	org	3145732
 20573  300004  FF                 	db	255
 20574                           
 20575                           ;Config register CONFIG3H @ 0x300005
 20576                           ;	CCP2 MUX bit
 20577                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 20578                           ;	PORTB A/D Enable bit
 20579                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 20580                           ;	P3A/CCP3 Mux bit
 20581                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 20582                           ;	HFINTOSC Fast Start-up
 20583                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 20584                           ;	Timer3 Clock input mux bit
 20585                           ;	T3CMX = PORTC0, T3CKI is on RC0
 20586                           ;	ECCP2 B output mux bit
 20587                           ;	P2BMX = PORTB5, P2B is on RB5
 20588                           ;	MCLR Pin Enable bit
 20589                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 20590  300005                     	org	3145733
 20591  300005  BD                 	db	189
 20592                           
 20593                           ;Config register CONFIG4L @ 0x300006
 20594                           ;	Stack Full/Underflow Reset Enable bit
 20595                           ;	STVREN = ON, Stack full/underflow will cause Reset
 20596                           ;	Single-Supply ICSP Enable bit
 20597                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 20598                           ;	Extended Instruction Set Enable bit
 20599                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 20600                           ;	Background Debug
 20601                           ;	DEBUG = 0x1, unprogrammed default
 20602  300006                     	org	3145734
 20603  300006  85                 	db	133
 20604                           
 20605                           ; Padding undefined space
 20606  300007                     	org	3145735
 20607  300007  FF                 	db	255
 20608                           
 20609                           ;Config register CONFIG5L @ 0x300008
 20610                           ;	Code Protection Block 0
 20611                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 20612                           ;	Code Protection Block 1
 20613                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 20614                           ;	Code Protection Block 2
 20615                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 20616                           ;	Code Protection Block 3
 20617                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 20618  300008                     	org	3145736
 20619  300008  0F                 	db	15
 20620                           
 20621                           ;Config register CONFIG5H @ 0x300009
 20622                           ;	Boot Block Code Protection bit
 20623                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 20624                           ;	Data EEPROM Code Protection bit
 20625                           ;	CPD = OFF, Data EEPROM not code-protected
 20626  300009                     	org	3145737
 20627  300009  C0                 	db	192
 20628                           
 20629                           ;Config register CONFIG6L @ 0x30000A
 20630                           ;	Write Protection Block 0
 20631                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 20632                           ;	Write Protection Block 1
 20633                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 20634                           ;	Write Protection Block 2
 20635                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 20636                           ;	Write Protection Block 3
 20637                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 20638  30000A                     	org	3145738
 20639  30000A  0F                 	db	15
 20640                           
 20641                           ;Config register CONFIG6H @ 0x30000B
 20642                           ;	Configuration Register Write Protection bit
 20643                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 20644                           ;	Boot Block Write Protection bit
 20645                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 20646                           ;	Data EEPROM Write Protection bit
 20647                           ;	WRTD = OFF, Data EEPROM not write-protected
 20648  30000B                     	org	3145739
 20649  30000B  E0                 	db	224
 20650                           
 20651                           ;Config register CONFIG7L @ 0x30000C
 20652                           ;	Table Read Protection Block 0
 20653                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 20654                           ;	Table Read Protection Block 1
 20655                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 20656                           ;	Table Read Protection Block 2
 20657                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 20658                           ;	Table Read Protection Block 3
 20659                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 20660  30000C                     	org	3145740
 20661  30000C  0F                 	db	15
 20662                           
 20663                           ;Config register CONFIG7H @ 0x30000D
 20664                           ;	Boot Block Table Read Protection bit
 20665                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 20666  30000D                     	org	3145741
 20667  30000D  40                 	db	64
 20668                           tosu	equ	0xFFF
 20669                           tosh	equ	0xFFE
 20670                           tosl	equ	0xFFD
 20671                           stkptr	equ	0xFFC
 20672                           pclatu	equ	0xFFB
 20673                           pclath	equ	0xFFA
 20674                           pcl	equ	0xFF9
 20675                           tblptru	equ	0xFF8
 20676                           tblptrh	equ	0xFF7
 20677                           tblptrl	equ	0xFF6
 20678                           tablat	equ	0xFF5
 20679                           prodh	equ	0xFF4
 20680                           prodl	equ	0xFF3
 20681                           indf0	equ	0xFEF
 20682                           postinc0	equ	0xFEE
 20683                           postdec0	equ	0xFED
 20684                           preinc0	equ	0xFEC
 20685                           plusw0	equ	0xFEB
 20686                           fsr0h	equ	0xFEA
 20687                           fsr0l	equ	0xFE9
 20688                           wreg	equ	0xFE8
 20689                           indf1	equ	0xFE7
 20690                           postinc1	equ	0xFE6
 20691                           postdec1	equ	0xFE5
 20692                           preinc1	equ	0xFE4
 20693                           plusw1	equ	0xFE3
 20694                           fsr1h	equ	0xFE2
 20695                           fsr1l	equ	0xFE1
 20696                           bsr	equ	0xFE0
 20697                           indf2	equ	0xFDF
 20698                           postinc2	equ	0xFDE
 20699                           postdec2	equ	0xFDD
 20700                           preinc2	equ	0xFDC
 20701                           plusw2	equ	0xFDB
 20702                           fsr2h	equ	0xFDA
 20703                           fsr2l	equ	0xFD9
 20704                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    1867
    Data        0
    BSS         323
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      77
    BANK0           160     85     160
    BANK1           256      3     242
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    g1.font.bitmap	PTR const unsigned char  size(2) Largest target is 0
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    g1.font.descriptor	PTR const struct . size(2) Largest target is 0
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    g1.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    g1.font	PTR struct . size(2) Largest target is 0
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.text	PTR const unsigned char  size(2) Largest target is 0
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.fpPress	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), dbuf(BANK0[32]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), 
		 -> STR_13(CODE[13]), STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S4855_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 253
		 -> touchScreenController@s(BANK0[20]), g1(BANK1[239]), 

    backlightController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    backlightController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    backlightController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    backlightController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    checkCollision@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    checkCollision@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    checkCollision@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    checkCollision@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    mooveBall@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    mooveBall@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    mooveBall@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    mooveBall@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    moovePaddle@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    moovePaddle@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    moovePaddle@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    moovePaddle@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    gameControllerController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    gameControllerController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    gameControllerController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerSM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    gameControllerInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displayController@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    displayController@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    displayController@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    displayController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displaySM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    displayInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    touchScreenController@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    touchScreenSM@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    sleepInit@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_Bitmap@colorTablePtr	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_Bitmap@bmpPtr	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_Bitmap@strPtr	PTR struct . size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    RGB2LCD@colorTableEntry	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_DrawText@font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_DrawText@font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_DrawText@font	PTR const struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_DrawText@msg	PTR const unsigned char  size(2) Largest target is 253
		 -> g1.str(BANK1[2]), touchScreenController@s(BANK0[20]), STR_14(CODE[13]), STR_13(CODE[13]), 
		 -> STR_12(CODE[11]), STR_11(CODE[8]), STR_10(CODE[9]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[9]), 
		 -> STR_4(CODE[11]), g1(BANK1[239]), STR_1(CODE[10]), 

    LCD_InSlider@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InSlider@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_InButton@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_InButton@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_InButton@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_InButton@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonDraw@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonDraw@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonDraw@bmpPtr	PTR struct . size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonDraw@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonDraw@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonDraw@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonDraw@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonUpdate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonUpdate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonUpdate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonUpdate@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_ButtonCreate@fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    LCD_ButtonCreate@button.font.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    LCD_ButtonCreate@font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@textOrBmp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonCreate@button.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_ButtonCreate@button.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    LCD_ButtonCreate@button.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    LCD_ButtonCreate@button	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderDraw@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderDraw@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderUpdate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderUpdate@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    LCD_SliderCreate@fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    LCD_SliderCreate@slider	PTR struct . size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_endGame@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_endGame@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_endGame@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_endGame@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_inGameDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_inGameDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_inGameDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_inGameDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_parametersDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_parametersDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_parametersDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_parametersDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Menu_welcomeDraw@g.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    Menu_welcomeDraw@g.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    Menu_welcomeDraw@g.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    Menu_welcomeDraw@g	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setY@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setY@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setY@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setY@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setX@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setX@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setX@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setX@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_resetPos@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_resetPos@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_resetPos@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_resetPos@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_setPlayer@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setPlayer@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setPlayer@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setPlayer@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_setBackLight@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_setBackLight@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_setBackLight@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    GameParameters_init@s.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    GameParameters_init@s.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    GameParameters_init@s.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    GameParameters_init@s	PTR struct GameParameters size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Score_draw@s	PTR struct Score size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Score_init@s	PTR struct Score size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    S135$fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.sldParam.fpPress	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnRight.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnRight.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnNewGame.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnNewGame.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnNewGame.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnLeft.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeft.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeft.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnLeaveParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnLeaveParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnLeaveParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnTwoPlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnTwoPlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnTwoPlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnOnePlayer.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnOnePlayer.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnOnePlayer.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    S108$fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpOut	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpReleased	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    g1.btnParam.fpPress	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108$font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    g1.btnParam.font	PTR struct . size(2) Largest target is 9
		 -> arialNarrow_12ptFontInfo(CODE[7]), 

    S108$text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    g1.btnParam.text	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[11]), 

    S99$bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    arialNarrow_12ptFontInfo.bitmap	PTR const unsigned char  size(2) Largest target is 1575
		 -> arialNarrow_12ptBitmaps(CODE[1575]), 

    S99$descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    arialNarrow_12ptFontInfo.descriptor	PTR const struct . size(2) Largest target is 285
		 -> arialNarrow_12ptDescriptors(CODE[285]), 

    Paddle_draw@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Paddle_addX@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Paddle_init@p	PTR struct Paddle size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_draw@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_Update@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 

    Ball_init@b	PTR struct Ball size(2) Largest target is 253
		 -> g1(BANK1[239]), 


Critical Paths under _main in COMRAM

    _gameControllerInit->_gameControllerController
    _XF_init->___wmul
    _LCD_Init->_LCD_Lowlevel_Init
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _XF_scheduleTimer->_ENTERCRITICAL
    _XF_scheduleTimer->_LEAVECRITICAL
    _gameControllerSM->_gameControllerController
    _gameControllerController->_LCD_SliderUpdate
    _moovePaddle->_LCD_InButton
    _mooveBall->_checkCollision
    _checkCollision->_XF_pushEvent
    _XF_pushEvent->___awmod
    _backlightController->_GameParameters_setBackLight
    _GameParameters_init->_LCD_ButtonCreate
    _Menu_welcomeDraw->_LCD_DrawText
    _Menu_parametersDraw->_LCD_SliderDraw
    _LCD_SliderDraw->_LCD_SliderUpdate
    _LCD_SliderUpdate->___lwdiv
    _Menu_endGame->_LCD_DrawText
    _LCD_ButtonDraw->_LCD_DrawText
    _LCD_ButtonUpdate->_LCD_DrawRect
    _LCD_Bitmap->___lwdiv
    ___lwdiv->___wmul
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_DrawText->___wmul
    ___wmul->___awdiv
    _Paddle_draw->_LCD_DrawRect
    _Ball_draw->_LCD_DrawRect
    _XF_popEvent->___awmod

Critical Paths under _isr in COMRAM

    _isr->_XF_decrementAndQueueTimers
    i2_XF_scheduleTimer->i2_ENTERCRITICAL
    i2_XF_scheduleTimer->i2_LEAVECRITICAL
    _XF_decrementAndQueueTimers->i2_XF_pushEvent
    i2_XF_pushEvent->i2___awmod
    i2_XF_pushEvent->i2___wmul
    _XF_unscheduleTimer->i2_ENTERCRITICAL
    _XF_unscheduleTimer->i2_LEAVECRITICAL

Critical Paths under _main in BANK0

    _Factory_init->_sleepInit
    _sleepInit->_displayInit
    _displayInit->_displayController
    _Factory_exec->_touchScreenSM
    _touchScreenSM->_touchScreenController
    _touchScreenController->_sprintf
    _displaySM->_displayController
    _displayController->_Menu_endGame
    _displayController->_Menu_parametersDraw
    _displayController->_Menu_welcomeDraw
    _Menu_welcomeDraw->_LCD_ButtonDraw
    _Menu_parametersDraw->_LCD_ButtonDraw
    _Menu_endGame->_LCD_ButtonDraw
    _LCD_ButtonDraw->_LCD_Bitmap
    _Menu_inGameDraw->_Score_draw
    _Score_draw->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Factory_exec
    _Factory_exec->_touchScreenSM

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  690951
                       _Factory_exec
                       _Factory_init
 ---------------------------------------------------------------------------------
 (1) _Factory_init                                         2     2      0  323693
                                             71 BANK0      2     2      0
                _GameParameters_init
                       _LCD_DrawText
                           _LCD_Fill
                           _LCD_Init
                            _XF_init
                          _sleepInit
 ---------------------------------------------------------------------------------
 (2) _sleepInit                                            2     0      2  295095
                                             69 BANK0      2     0      2
                        _displayInit
                 _gameControllerInit
                    _sleepController
                    _touchScreenInit
 ---------------------------------------------------------------------------------
 (3) _touchScreenInit                                      0     0      0       0
                        _configTouch
 ---------------------------------------------------------------------------------
 (3) _sleepController                                      2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _gameControllerInit                                   2     0      2   52674
                                             59 COMRAM     2     0      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (3) _displayInit                                          2     0      2  242269
                                             67 BANK0      2     0      2
                  _displayController
 ---------------------------------------------------------------------------------
 (2) _XF_init                                              2     2      0    3031
                                             31 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      90
                                             22 COMRAM     2     2      0
                  _LCD_Lowlevel_Init
 ---------------------------------------------------------------------------------
 (3) _LCD_Lowlevel_Init                                    5     5      0      60
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Factory_exec                                         1     1      0  367258
                                              2 BANK1      1     1      0
                        _XF_popEvent
                          _displaySM
                   _gameControllerSM
                            _sleepSM
                      _touchScreenSM
 ---------------------------------------------------------------------------------
 (2) _touchScreenSM                                        5     3      2   26905
                                             82 BANK0      3     1      2
                                              0 BANK1      2     2      0
              _touchScreenController
 ---------------------------------------------------------------------------------
 (3) _touchScreenController                               32    30      2   26629
                                             50 BANK0     32    30      2
                _GameParameters_setX
                _GameParameters_setY
                       _LCD_DrawText
                   _XF_scheduleTimer
                            ___fldiv
                            ___fltol
                           ___xxtofl
                      _configMeasure
                        _configTouch
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _configTouch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _configMeasure                                        1     1      0      62
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     566
                                             17 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             56 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2003
                                             31 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _XF_scheduleTimer                                     5     1      4     789
                                             18 COMRAM     5     1      4
                      _ENTERCRITICAL
                      _LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setY                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _GameParameters_setX                                  4     0      4     242
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sleepSM                                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _gameControllerSM                                     5     3      2   52953
                                             59 COMRAM     5     3      2
           _gameControllerController
 ---------------------------------------------------------------------------------
 (4) _gameControllerController                             5     2      3   52553
                                             54 COMRAM     5     2      3
                _GameParameters_init
            _GameParameters_resetPos
                       _LCD_InButton
                       _LCD_InSlider
                   _LCD_SliderUpdate
                       _XF_pushEvent
                _backlightController
                          _mooveBall
                        _moovePaddle
 ---------------------------------------------------------------------------------
 (5) _moovePaddle                                          2     0      2    6462
                                             27 COMRAM     2     0      2
            _GameParameters_resetPos
                       _LCD_InButton
                        _Paddle_addX
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _Paddle_addX                                          8     2      6     881
                                             17 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _LCD_InButton                                        10     4      6    2200
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (6) _GameParameters_resetPos                              2     0      2     692
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _mooveBall                                            2     0      2    7328
                                             36 COMRAM     2     0      2
                        _Ball_Update
                       _XF_pushEvent
                     _checkCollision
 ---------------------------------------------------------------------------------
 (6) _checkCollision                                      30    28      2    4611
                                             26 COMRAM    10     8      2
                       _XF_pushEvent
 ---------------------------------------------------------------------------------
 (6) _XF_pushEvent                                         3     2      1    2289
                                             23 COMRAM     3     2      1
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _Ball_Update                                          6     4      2     276
                                             17 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _backlightController                                  4     2      2    3552
                                             23 COMRAM     4     2      2
        _GameParameters_setBackLight
 ---------------------------------------------------------------------------------
 (6) _GameParameters_setBackLight                          6     2      4    2284
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _LCD_InSlider                                        10     4      6     580
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _GameParameters_init                                  2     0      2   12380
                                             42 COMRAM     2     0      2
                          _Ball_init
                   _LCD_ButtonCreate
                   _LCD_SliderCreate
                        _Paddle_init
                         _Score_init
 ---------------------------------------------------------------------------------
 (6) _Score_init                                           2     0      2     152
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Paddle_init                                          4     0      4     639
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderCreate                                    22     0     22    1672
                                             17 COMRAM    22     0     22
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonCreate                                    25     0     25    8965
                                             17 COMRAM    25     0     25
 ---------------------------------------------------------------------------------
 (6) _Ball_init                                            2     0      2     276
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _displaySM                                            5     3      2  286226
                                             67 BANK0      5     3      2
                    _Menu_inGameDraw
                  _displayController
 ---------------------------------------------------------------------------------
 (4) _displayController                                    5     2      3  242148
                                             62 BANK0      5     2      3
                          _Ball_draw
                       _Menu_endGame
                _Menu_parametersDraw
                   _Menu_welcomeDraw
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Menu_welcomeDraw                                     2     0      2   57566
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (5) _Menu_parametersDraw                                  2     0      2   82977
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
                     _LCD_SliderDraw
 ---------------------------------------------------------------------------------
 (6) _LCD_SliderDraw                                      14    12      2   25380
                                             54 COMRAM    14    12      2
                       _LCD_DrawRect
                   _LCD_SliderUpdate
 ---------------------------------------------------------------------------------
 (5) _LCD_SliderUpdate                                    16    14      2   15116
                                             38 COMRAM    16    14      2
                       _LCD_DrawRect
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _Menu_endGame                                         4     2      2   57535
                                             65 COMRAM     2     2      0
                                             60 BANK0      2     0      2
                     _LCD_ButtonDraw
                       _LCD_DrawText
                           _LCD_Fill
 ---------------------------------------------------------------------------------
 (6) _LCD_ButtonDraw                                      32    30      2   44286
                                             28 BANK0     32    30      2
                         _LCD_Bitmap
                   _LCD_ButtonUpdate
                       _LCD_DrawRect
                       _LCD_DrawText
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _LCD_ButtonUpdate                                    18    16      2   11351
                                             36 COMRAM    18    16      2
                       _LCD_DrawRect
                           _LCD_Read
 ---------------------------------------------------------------------------------
 (8) _LCD_Read                                            10     6      4     548
                                             17 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _LCD_Bitmap                                          38    32      6    7372
                                             38 COMRAM    10     4      6
                                              0 BANK0     28    28      0
                            _RGB2LCD
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     901
                                             31 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _RGB2LCD                                             14    12      2     499
                                             17 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (3) _Menu_inGameDraw                                      2     0      2   43399
                                             52 BANK0      2     0      2
                          _Ball_draw
                           _LCD_Fill
                        _Paddle_draw
                         _Score_draw
 ---------------------------------------------------------------------------------
 (5) _Score_draw                                           2     0      2   21884
                                             50 BANK0      2     0      2
                       _LCD_DrawText
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             16    10      6    9137
                                             36 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (7) _vfprintf                                             8     2      6    8111
                                             28 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (8) _vfpfcnvrt                                           42    36      6    7638
                                             62 COMRAM     6     0      6
                                             18 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _dtoa                                                36    26     10    5863
                                             44 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (10) _pad                                                11     5      6    3597
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _fputs                                               7     3      4    1537
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2     183
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (10) ___aomod                                            18     2     16     613
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (10) ___aodiv                                            26    10     16     625
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawText                                        34    21     13   12381
                                             31 COMRAM    34    21     13
                            ___awdiv
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _strlen                                              4     2      2     400
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2802
                                             25 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1105
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _Paddle_draw                                          6     4      2   10398
                                             36 COMRAM     6     4      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_Fill                                             8     6      2     716
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Ball_draw                                           10     8      2   10187
                                             36 COMRAM    10     8      2
                       _LCD_DrawRect
 ---------------------------------------------------------------------------------
 (6) _LCD_DrawRect                                        19     8     11    9635
                                             17 COMRAM    19     8     11
 ---------------------------------------------------------------------------------
 (2) _XF_popEvent                                          2     2      0    1016
                                             23 COMRAM     2     2      0
                      _ENTERCRITICAL
                      _LEAVECRITICAL
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     793
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _LEAVECRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ENTERCRITICAL                                        1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _isr                                                 4     4      0    2339
                                             13 COMRAM     4     4      0
         _XF_decrementAndQueueTimers
                     i2_XF_pushEvent
                 i2_XF_scheduleTimer
 ---------------------------------------------------------------------------------
 (15) i2_XF_scheduleTimer                                  5     1      4     328
                                              1 COMRAM     5     1      4
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (15) _XF_decrementAndQueueTimers                          4     4      0    1408
                                              9 COMRAM     4     4      0
                 _XF_unscheduleTimer
                     i2_XF_pushEvent
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     419
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2_XF_pushEvent                                      3     2      1     603
                                              6 COMRAM     3     2      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
                          i2___awmod
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) _XF_unscheduleTimer                                  2     1      1     208
                                              1 COMRAM     2     1      1
                    i2_ENTERCRITICAL
                    i2_LEAVECRITICAL
 ---------------------------------------------------------------------------------
 (16) i2_LEAVECRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_ENTERCRITICAL                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Factory_exec
     _XF_popEvent
       _ENTERCRITICAL
       _LEAVECRITICAL
       ___awmod
     _displaySM
       _Menu_inGameDraw
         _Ball_draw
           _LCD_DrawRect
         _LCD_Fill
         _Paddle_draw
           _LCD_DrawRect
         _Score_draw
           _LCD_DrawText
             ___awdiv
             ___wmul
               ___awdiv (ARG)
             _strlen
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                     _strlen
                 _fputc
       _displayController
         _Ball_draw
         _Menu_endGame
           _LCD_ButtonDraw
             _LCD_Bitmap
               _RGB2LCD
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
               ___wmul
             _LCD_ButtonUpdate
               _LCD_DrawRect
               _LCD_Read
             _LCD_DrawRect
             _LCD_DrawText
             ___awdiv
             _strlen
           _LCD_DrawText
           _LCD_Fill
         _Menu_parametersDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
           _LCD_SliderDraw
             _LCD_DrawRect
             _LCD_SliderUpdate
               _LCD_DrawRect
               ___lwdiv
               ___wmul
         _Menu_welcomeDraw
           _LCD_ButtonDraw
           _LCD_DrawText
           _LCD_Fill
         _Paddle_draw
         _Score_draw
     _gameControllerSM
       _gameControllerController
         _GameParameters_init
           _Ball_init
           _LCD_ButtonCreate
           _LCD_SliderCreate
           _Paddle_init
           _Score_init
         _GameParameters_resetPos
         _LCD_InButton
         _LCD_InSlider
         _LCD_SliderUpdate
         _XF_pushEvent
           _ENTERCRITICAL
           _LEAVECRITICAL
           ___awmod
         _backlightController
           _GameParameters_setBackLight
         _mooveBall
           _Ball_Update
           _XF_pushEvent
           _checkCollision
             _XF_pushEvent
         _moovePaddle
           _GameParameters_resetPos
           _LCD_InButton
           _Paddle_addX
           _XF_pushEvent
     _sleepSM
     _touchScreenSM
       _touchScreenController
         _GameParameters_setX
         _GameParameters_setY
         _LCD_DrawText
         _XF_scheduleTimer
           _ENTERCRITICAL
           _LEAVECRITICAL
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _configMeasure
         _configTouch
         _sprintf
   _Factory_init
     _GameParameters_init
     _LCD_DrawText
     _LCD_Fill
     _LCD_Init
       _LCD_Lowlevel_Init
     _XF_init
       ___wmul
     _sleepInit
       _displayInit
         _displayController
       _gameControllerInit
         _gameControllerController
       _sleepController
       _touchScreenInit
         _configTouch

 _isr (ROOT)
   _XF_decrementAndQueueTimers
     _XF_unscheduleTimer
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
     i2_XF_pushEvent
       i2_ENTERCRITICAL
       i2_LEAVECRITICAL
       i2___awmod
       i2___wmul (ARG)
     i2___wmul
   i2_XF_pushEvent
   i2_XF_scheduleTimer
     i2_ENTERCRITICAL
     i2_LEAVECRITICAL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      3      F2       6       94.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     55      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      4D       1       81.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DF       9        0.0%
DATA                 0      0     1DF      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 06 16:10:07 2021

                      _LCD_ButtonDraw 0FB4                           ?_LCD_Bitmap 0027  
                                   l5 5C2C                                     l8 5ABC  
                        ___fldiv@aexp 0038                          ___fldiv@bexp 0037  
                    _LCD_ButtonCreate 49F4                                     _i 004B  
                        ___fldiv@sign 0030                          ?_displayInit 00A3  
                __end_of_Factory_exec 5FCE                  __end_of_Factory_init 558C  
                                  l11 4244                                    l18 56F2  
                                  l26 4F64                                    l29 44B8  
                                  _g1 0100                          ___awdiv@sign 0017  
             __end_of_sleepController 624E                     ??i2_ENTERCRITICAL 0001  
            __end_of_Menu_welcomeDraw 5BB8                   ___wmul@multiplicand 001C  
                backlightController@g 0018                      _LCD_ButtonUpdate 3866  
                       ?_LCD_InButton 0012                         ?_LCD_InSlider 0012  
                       ?_LCD_DrawRect 0012                         ?_LCD_DrawText 0020  
                                 l102 558A                                   l106 5FCC  
                                 l115 631E                                   l124 5036  
                                 l141 2642                                   l224 53CC  
                                 l320 225E                                   l232 4CCE  
                                 l152 62A8                                   l226 5410  
                                 l242 46E8                                   l146 6156  
                                 l323 54CE                                   l251 3A9A  
                                 l155 63DE                                   l219 35F6  
                                 l260 14A0                                   l180 5B3E  
                                 l500 35FC                                   l412 62D0  
                                 l245 4AEC                                   l158 63C8  
                                 l502 3606                                   l183 6022  
                                 l239 1976                                   l271 4E8A  
                                 l415 6454                                   l503 360E  
                                 l264 4DAC                                   l424 624C  
                                 l281 2E18                                   l329 0FB2  
                                 l177 5BB6                                   l521 60C4  
                                 l513 3864                                   l291 2F3A  
                                 l283 2E24                                   l507 36D0  
                                 l188 57A2                                   l516 6384  
                                 l701 1DF8                                   l294 2FD4  
                                 l622 51C8                                   l542 639C  
                                 l607 63B2                                   l288 2EDC  
                                 l560 49F2                                   l297 3042  
                                 l393 59A0                                   l730 5F76  
                                 l722 5642                                   l299 306C  
                                 l811 6344                                   l707 1E14  
                                 l627 2A40                                   l652 62F8  
                                 l644 2D32                                   l628 2A9E  
                                 l661 0546                                   l485 6452  
                                 l805 643C                                   l574 48F2  
                                 l726 5DEC                                   l399 4386  
                                 l655 0172                                   l647 4B62  
                                 l752 640A                                   l672 08B0  
                                 l656 01F8                                   l648 4BD6  
                                 l736 5CA0                                   l496 5A3A  
                                 l681 09BC                                   l649 4BE0  
                                 l756 63F4                                   l925 3F8A  
                                 l938 40EE                                   _GIE 007F97  
                                 _PR2 000FBB                                   _abs 619C  
                                 _pad 528E                                   _isr 0008  
                configMeasure@channel 0012                       ??_ENTERCRITICAL 0012  
                        ___awmod@sign 0017                                   prod 000FF3  
                                 wreg 000FE8                __size_of_touchScreenSM 009A  
                     __end_of_RGB2LCD 54D0                          ___fltol@exp1 0042  
                    _touchScreenState 00DE                           _Ball_Update 5A3C  
                       ??_Paddle_addX 0018                                  l1042 528C  
                                ?_abs 0024                                  l1108 47EE  
                                l1302 5D0C                                  l1055 5852  
                                l1312 5E48                                  l1404 2882  
                                l1309 5D14                                  l1406 28FA  
                                l1319 5E50                                  l1407 28E8  
                                l1521 534E                                  l1516 52D2  
                                l4101 33D4                                  l1519 5314  
                                l1527 310E                                  l4111 33E2  
                                l4103 33D6                                  l1560 5F0E  
                                l1480 3BE6                                  l1529 3116  
                                l1561 5F16                                  l1393 29DC  
                                l1473 3B8A                                  l4201 3474  
                                l4121 33F4                                  l4113 33E8  
                                l4105 33DC                                  l4041 335C  
                                l4033 3350                                  l1554 3E02  
                                l1466 3AF2                                  l1547 334E  
                                l1395 283C                                  l4211 348A  
                                l4203 347A                                  l4131 3406  
                                l4123 33F6                                  l4115 33EA  
                                l4107 33DE                                  l4051 3364  
                                l4043 335E                                  l4035 3354  
                                l1580 5100                                  l1565 61D2  
                                l1469 3C4E                                  l4301 3534  
                                l4221 3498                                  l4213 348C  
                                l4205 347C                                  l4141 3418  
                                l4133 3408                                  l4125 33FC  
                                l4117 33F0                                  l4109 33E0  
                                l4061 338C                                  l4053 3372  
                                l4045 3360                                  l4037 3358  
                                l1398 2800                                  l1591 6456  
                                l4311 354A                                  l4303 353A  
                                l4231 34AE                                  l4223 349E  
                                l4215 348E                                  l4207 3482  
                                l4151 3426                                  l4143 341A  
                                l4135 340A                                  l4127 33FE  
                                l4119 33F2                                  l4071 339E  
                                l4063 338E                                  l4055 3384  
                                l4039 335A                                  l1568 61DA  
                                l1489 6074                                  l4401 35F0  
                                l4321 355C                                  l4313 354C  
                                l4305 353C                                  l4241 34C0  
                                l4233 34B0                                  l4225 34A0  
                                l4217 3490                                  l4209 3484  
                                l4161 3434                                  l4153 3428  
                                l4145 341C                                  l4137 3410  
                                l4129 3404                                  l4081 33B0  
                                l4073 33A0                                  l4065 3394  
                                l4057 3388                                  l4403 35F2  
                                l4331 3572                                  l4323 3562  
                                l4315 3552                                  l4307 3542  
                                l4251 34D6                                  l4243 34C6  
                                l4235 34B6                                  l4227 34A6  
                                l4219 3496                                  l4171 3446  
                                l4163 3436                                  l4155 342A  
                                l4147 341E                                  l4139 3412  
                                l4091 33BE                                  l4083 33B2  
                                l4075 33A2                                  l4067 3396  
                                l4059 338A                                  l1588 619A  
                                l1597 6112                                  l4405 35F4  
                                l4341 3584                                  l4333 3574  
                                l4325 3564                                  l4317 3554  
                                l4309 3544                                  l4261 34E8  
                                l4253 34D8                                  l4245 34C8  
                                l4237 34B8                                  l4229 34A8  
                                l4181 3454                                  l4173 3448  
                                l4165 3438                                  l4157 342C  
                                l4149 3424                                  l4093 33C4  
                                l4085 33B4                                  l4077 33A8  
                                l4069 339C                                  l4351 3596  
                                l4343 3586                                  l4335 357A  
                                l4327 356A                                  l4319 355A  
                                l4271 34FE                                  l4263 34EE  
                                l4255 34DE                                  l4247 34CE  
                                l4239 34BE                                  l4191 3466  
                                l4183 345A                                  l4175 344A  
                                l4167 343E                                  l4159 3432  
                                l4095 33C6                                  l4087 33B6  
                                l4079 33AA                                  l4361 35A8  
                                l4353 3598                                  l4345 3588  
                                l4337 357C                                  l4329 356C  
                                l4281 350C                                  l4273 3500  
                                l4265 34F0                                  l4257 34E0  
                                l4249 34D0                                  l4193 3468  
                                l4185 345C                                  l4177 344C  
                                l4169 3440                                  l4097 33CC  
                                l4089 33BC                                  l4371 35BA  
                                l4363 35AE                                  l4355 359E  
                                l4347 358E                                  l4339 3582  
                                l4291 3522                                  l4283 3512  
                                l4275 3506                                  l4267 34F6  
                                l4259 34E6                                  l4195 346E  
                                l4187 345E                                  l4179 3452  
                                l4099 33CE                                  l3901 5942  
                                l4381 35CC                                  l4373 35BC  
                                l4365 35B0                                  l4357 35A0  
                                l4349 3590                                  l4293 3524  
                                l4285 3514                                  l4277 3508  
                                l4269 34F8                                  l4197 3470  
                                l4189 3460                                  ?_pad 0022  
                                l3911 597A                                  l3903 595C  
                                l4391 35DE                                  l4383 35D2  
                                l4375 35C2                                  l4367 35B2  
                                l4359 35A6                                  l4295 352A  
                                l4287 351A                                  l4279 350A  
                                l4199 3472                                  l8001 3F90  
                                l3913 5986                                  l4393 35E0  
                                l4385 35D4                                  l4377 35C4  
                                l4369 35B4                                  l4297 352C  
                                l4289 351C                                  l8011 3FF0  
                                l8003 3F9E                                  l4395 35E6  
                                l4387 35DA                                  l4379 35CA  
                                l4299 3532                                  l8021 4066  
                                l8013 400E                                  l8005 3FBE  
                                l8101 32A2                                  l3909 596C  
                                l4397 35E8                                  l4389 35DC  
                                l8031 40CE                                  l8023 4086  
                                l8015 4016                                  l8007 3FC2  
                                l8111 32F0                                  l8103 32BC  
                                l4399 35EE                                  l8201 2E0C  
                                l8025 4098                                  l8017 402A  
                                l8009 3FD0                                  l8041 52BE  
                                l8113 3302                                  l8105 32CA  
                                l9001 0B1E                                  l3881 5904  
                                l8203 2E34                                  l8211 2E6C  
                                l8131 2D6A                                  l8123 2D34  
                                l8019 4038                                  l8027 409E  
                                l8051 5322                                  l8043 52CA  
                                l8035 528E                                  l8115 330E  
                                l8107 32DC                                  l9011 0B2A  
                                l9003 0B22                                  l3891 5916  
                                l3883 590C                                  l8301 2F26  
                                l8221 2E7C                                  l8213 2E70  
                                l8205 2E38                                  l8141 2DAE  
                                l8133 2D80                                  l8125 2D38  
                                l8029 40AE                                  l8053 5336  
                                l8045 52DE                                  l8037 529C  
                                l8117 3316                                  l8109 32EA  
                                l8061 306E                                  l9101 0C22  
                                l9021 0B38                                  l9013 0B2E  
                                l9005 0B24                                  l3885 5910  
                                l8311 2F4A                                  l8303 2F28  
                                l8231 2E8C                                  l8223 2E7E  
                                l8215 2E72                                  l8207 2E4E  
                                l8151 2DBC                                  l8143 2DB0  
                                l8135 2D98                                  l8127 2D3C  
                                l8047 52F2                                  l8039 52B0  
                                l8119 3326                                  l8071 30E8  
                                l8063 308E                                  l9103 0C24  
                                l9111 0C30                                  l9031 0B5C  
                                l9023 0B3A                                  l9015 0B30  
                                l9007 0B26                                  l3887 5912  
                                l8401 3016                                  l8321 2F6C  
                                l8313 2F4E                                  l8305 2F2A  
                                l8241 2E9C                                  l8233 2E8E  
                                l8225 2E80                                  l8217 2E74  
                                l8209 2E52                                  l8161 2DCC  
                                l8153 2DC0                                  l8145 2DB2  
                                l8137 2DA8                                  l8129 2D52  
                                l8057 619C                                  l8049 52F6  
                                l8081 3144                                  l8073 3102  
                                l8065 30B8                                  l9201 0E56  
                                l9121 0C72                                  l9113 0C52  
                                l9105 0C28                                  l9041 0B6A  
                                l9033 0B60                                  l9025 0B54  
                                l9017 0B32                                  l9009 0B28  
                                l3897 5928                                  l3889 5914  
                                l8411 3026                                  l8403 3018  
                                l8331 2F7C                                  l8323 2F6E  
                                l8315 2F64                                  l8307 2F2C  
                                l8251 2EAA                                  l8243 2E9E  
                                l8235 2E90                                  l8227 2E84  
                                l8219 2E76                                  l8171 2DDC  
                                l8163 2DD0                                  l8155 2DC2  
                                l8147 2DB8                                  l8139 2DAC  
                                l8059 61B6                                  l8091 31E4  
                                l8083 314C                                  l8075 311E  
                                l8067 30D8                                  l9203 0E5A  
                                l9131 0C7E                                  l9123 0C74  
                                l9115 0C5A                                  l9107 0C2A  
                                l9051 0B98                                  l9043 0B6C  
                                l9035 0B62                                  l9027 0B58  
                                l9019 0B36                                  l3899 5936  
                                l7283 6218                                  ?_isr 0001  
                                l8421 3034                                  l8413 3028  
                                l8405 301E                                  l8341 2F8C  
                                l8333 2F7E                                  l8325 2F74  
                                l8317 2F68                                  l8309 2F2E  
                                l8261 2EBA                                  l8253 2EAC  
                                l8245 2EA0                                  l8237 2E94  
                                l8229 2E86                                  l8181 2DEC  
                                l8173 2DDE                                  l8165 2DD2  
                                l8157 2DC8                                  l8149 2DBA  
                                l8093 31EA                                  l8085 3154  
                                l8077 3130                                  l8069 30E6  
                                l9221 0F50                                  l9205 0E76  
                                l9141 0CB6                                  l9125 0C76  
                                l9133 0C82                                  l9117 0C62  
                                l9109 0C2C                                  l9213 0EB2  
                                l9061 0BA4                                  l9053 0B9A  
                                l9045 0B6E                                  l9037 0B64  
                                l9029 0B5A                                  l8501 42B4  
                                l9301 5BDC                                  l8423 3036  
                                l8415 302E                                  l8407 3020  
                                l8351 2F9A                                  l8343 2F8E  
                                l8335 2F84                                  l8327 2F76  
                                l8319 2F6A                                  l8271 2ECC  
                                l8263 2EC0                                  l8255 2EB0  
                                l8247 2EA2                                  l8239 2E96  
                                l8191 2DFE                                  l8183 2DEE  
                                l8175 2DE4                                  l8167 2DD8  
                                l8159 2DCA                                  l8087 315A  
                                l8095 324E                                  l8079 313E  
                                l9231 0F60                                  l9223 0F54  
                                l9207 0E86                                  l9143 0CB8  
                                l9151 0CC4                                  l9135 0CA4  
                                l9127 0C7A                                  l9119 0C6E  
                                l9215 0EFA                                  l9071 0BC8  
                                l9063 0BBC                                  l9055 0B9C  
                                l9047 0B70                                  l9039 0B68  
                                l8511 42E2                                  l8503 42B6  
                                l8431 424A                                  l9303 5BF0  
                                l9311 5644                                  l7287 6218  
                                l8425 3052                                  l8417 3030  
                                l8409 3022                                  l8361 2FAA  
                                l8353 2FA0                                  l8345 2F94  
                                l8337 2F86                                  l8329 2F78  
                                l8281 2F06                                  l8273 2ECE  
                                l8265 2EC2                                  l8257 2EB2  
                                l8249 2EA8                                  l8193 2E04  
                                l8185 2DF4                                  l8177 2DE6  
                                l8169 2DDA                                  l8601 526C  
                                l8097 326A                                  l8089 31DC  
                                l9233 0F62                                  l9225 0F58  
                                l9217 0F08                                  l9209 0EA6  
                                l9161 0D64                                  l9153 0D00  
                                l9145 0CBC                                  l9137 0CB0  
                                l9129 0C7C                                  l9241 0F8C  
                                l9081 0BD4                                  l9073 0BCA  
                                l9065 0BC0                                  l9057 0BA0  
                                l9049 0B94                                  l8521 430C  
                                l8513 4300                                  l8505 42B8  
                                l8441 4258                                  l8433 424C  
                                l9305 5C04                                  l9321 56BA  
                                l9313 566C                                  l8611 57A8  
                                l8427 3056                                  l8419 3032  
                                l8371 2FC0                                  l8363 2FB0  
                                l8355 2FA2                                  l8347 2F96  
                                l8339 2F88                                  l8291 2F16  
                                l8283 2F0A                                  l8275 2ED0  
                                l8267 2EC8                                  l8259 2EB8  
                                l8195 2E06                                  l8187 2DF6  
                                l8179 2DE8                                  l9411 53E0  
                                l9403 53C4                                  l8603 527C  
                                l8099 3288                                  l9251 0FA8  
                                l9243 0F9E                                  l9235 0F64  
                                l9227 0F5A                                  l9219 0F42  
                                l9171 0D72                                  l9163 0D68  
                                l9155 0D08                                  l9147 0CBE  
                                l9139 0CB4                                  l9083 0BD6  
                                l9075 0BCC                                  l9067 0BC2  
                                l9059 0BA2                                  l8531 434E  
                                l8523 4328                                  l8515 4302  
                                l8507 42BE                                  l8451 4268  
                                l8443 425A                                  l8435 424E  
                                l9307 5C18                                  l9323 56CA  
                                l9315 567E                                  l9331 4EF4  
                                l8621 57D8                                  l8613 57B6  
                                l8381 2FE4                                  l8373 2FC2  
                                l8365 2FB2                                  l8357 2FA4  
                                l8349 2F98                                  l8293 2F18  
                                l8285 2F0C                                  l8277 2EEC  
                                l8269 2ECA                                  l8197 2E08  
                                l8189 2DFC                                  l9413 53F6  
                                l9341 5354                                  l8605 5284  
                                l8701 3D60                                  l9421 6024  
                                l9253 0FAE                                  l9245 0FA2  
                                l9229 0F5C                                  l9237 0F68  
                                l9181 0DD8                                  l9173 0D74  
                                l9165 0D6A                                  l9157 0D54  
                                l9149 0CC0                                  l9093 0C08  
                                l9085 0BD8                                  l9077 0BD0  
                                l9069 0BC4                                  l8533 4350  
                                l8525 4346                                  l8517 4304  
                                l8509 42C0                                  l8461 427A  
                                l8453 426E                                  l8445 425E  
                                l8437 4250                                  l8429 4246  
                                l9501 1012                                  l9325 56DE  
                                l9317 568E                                  l9309 5A3C  
                                l9333 4F08                                  l8551 63F8  
                                l8631 581E                                  l8623 57EA  
                                l8615 57BE                                  l8391 3006  
                                l8383 2FE8                                  l8375 2FC4  
                                l8367 2FB8                                  l8359 2FA8  
                                l8295 2F1A                                  l8287 2F0E  
                                l8279 2EF0                                  l8199 2E0A  
                                l9415 53FA                                  l9351 5368  
                                l9343 535C                                  l8703 3D84  
                                l8711 3DB2                                  l9423 6036  
                                l8543 5412                                  l9255 0FB0  
                                l9247 0FA4                                  l9239 0F84  
                                l9191 0E4A                                  l9183 0DF2  
                                l9167 0D6C                                  l9159 0D60  
                                l9175 0D78                                  l9095 0C10  
                                l9087 0BE0                                  l9079 0BD2  
                                l8535 4372                                  l8527 4348  
                                l8519 430A                                  l8471 428A  
                                l8463 427C                                  l8455 4270  
                                l8447 4260                                  l8439 4256  
                                l9511 1152                                  l9503 1046  
                                l9319 56A2                                  l9271 5DB0  
                                l9335 4F28                                  l9327 4E8C  
                                l8553 6408                                  l8641 584A  
                                l8633 5826                                  l8625 57F2  
                                l8617 57C2                                  l8609 57A4  
                                l8393 3008                                  l8385 2FFE  
                                l8377 2FC6                                  l8369 2FBA  
                                l8297 2F1E                                  l8289 2F10  
                                l9409 53DC                                  l9361 537A  
                                l9353 536A                                  l9345 535E  
                                l8561 633C                                  l8801 207A  
                                l8713 3DC0                                  l8705 3D92  
                                l9425 603E                                  l8545 5486  
                                l9249 0FA6                                  l9193 0E4C  
                                l9185 0DFE                                  l9177 0D8E  
                                l9169 0D70                                  l9097 0C1C  
                                l9089 0BE8                                  l8537 437A  
                                l8529 434A                                  l8481 429C  
                                l8473 428C                                  l8465 4282  
                                l8457 4276                                  l8449 4266  
                                l9521 12EA                                  l9513 1166  
                                l9505 1076                                  l9441 4A40  
                                l9433 49F4                                  l9417 62FA  
                                l9281 5DE0                                  l9273 5DC4  
                                l9601 0476                                  l9337 4F3C  
                                l9329 4E9E                                  l8555 63E2  
                                l8635 582C                                  l8627 57FA  
                                l8619 57D0                                  l8395 300E  
                                l8387 3002                                  l8379 2FC8  
                                l8299 2F20                                  l9371 538C  
                                l9363 5380                                  l9355 5370  
                                l9347 5360                                  l9339 5350  
                                l8571 51E4                                  l8811 20A8  
                                l8803 207E                                  l8731 1EBE  
                                l7931 5084                                  l7923 5038  
                                l8707 3DA6                                  l9291 5EBE  
                                l9427 6046                                  l8547 54C6  
                                l8651 5CC4                                  l9195 0E4E  
                                l9187 0E40                                  l9179 0DCC  
                                l9099 0C20                                  l8539 437E  
                                l8491 42AA                                  l8483 42A2  
                                l8475 4292                                  l8467 4284  
                                l8459 4278                                  l9531 13E0  
                                l9523 12F2                                  l9515 11E2  
                                l9507 10F0                                  l9451 4AA4  
                                l9443 4A54                                  l9435 4A04  
                                l9419 630A                                  l9283 5DE4  
                                l9275 5DCA                                  l9267 5D8C  
                                l9611 05B8                                  l9603 04BC  
                                l8557 63F2                                  l8629 5808  
                                l8637 5832                                  l8397 3010  
                                l8389 3004                                  l9381 539E  
                                l9373 538E                                  l9365 5382  
                                l9357 5372                                  l9349 5362  
                                l8581 520A                                  l8573 51E8  
                                l8565 51CA                                  l7941 60D6  
                                l8901 222E                                  l8821 20B4  
                                l8813 20AA                                  l8805 2080  
                                l8741 1F1C                                  l8733 1EC0  
                                l8725 1E16                                  l7933 50BA  
                                l7925 504A                                  l8717 3DCC  
                                l9293 5ECC                                  l9429 6062  
                                l9701 4FCC                                  l8661 5CFE  
                                l8653 5CCC                                  l8645 5CA2  
                                l9197 0E52                                  l9189 0E46  
                                l8493 42AC                                  l8485 42A4  
                                l8477 4294                                  l8469 4286  
                                l9533 142C                                  l9525 134C  
                                l9517 125A                                  l9509 111A  
                                l9541 461C                                  l9453 4AB8  
                                l9445 4A68                                  l9437 4A18  
                                l9461 4BF2                                  l9285 5DEA  
                                l9269 5D92                                  l9621 0720  
                                l9613 05F6                                  l9605 0502  
                                l8639 5842                                  l8399 3012  
                                l9391 53B4                                  l9383 53A4  
                                l9375 5394                                  l9367 5388  
                                l9359 5378                                  l8591 5240  
                                l8583 521C                                  l8575 51F6  
                                l8567 51CE                                  l8559 6320  
                                l7943 6106                                  l8831 20C0  
                                l8823 20B8                                  l8815 20AC  
                                l8807 2082                                  l8751 2026  
                                l8743 1F3A                                  l8735 1EE8  
                                l8727 1E22                                  l7927 505C  
                                l7951 6176                                  l8719 3DF0  
                                l9295 5EF2                                  l8663 5D00  
                                l8655 5CDA                                  l8647 5CAA  
                                l8671 5E08                                  l9199 0E54  
                                l8495 42AE                                  l8487 42A6  
                                l8479 429A                                  l9527 13A8  
                                l9535 1494                                  l9519 127A  
                                l8911 1598                                  l8903 14A2  
                                l9543 4630                                  l9711 5BA4  
                                l9703 5B40                                  l9455 4ACC  
                                l9447 4A7C                                  l9439 4A2C  
                                l9471 4C56                                  l9463 4C06  
                                l9279 5DD0                                  l9631 086C  
                                l9623 0766                                  l9615 064C  
                                l9607 0558                                  l9551 4CD0  
                                l9393 53B6                                  l9385 53A6  
                                l9377 5396                                  l9369 538A  
                                l8593 5256                                  l8585 5224  
                                l8577 51FE                                  l8569 51DC  
                                l7937 60C6                                  l8841 217E  
                                l8833 20C8                                  l8825 20BA  
                                l8817 20B0                                  l8809 20A4  
                                l8761 2032                                  l8753 2028  
                                l8745 1F7C                                  l8737 1EF8  
                                l8729 1E70                                  l7961 3E36  
                                l7929 5066                                  l7953 617A  
                                l9289 5EB6                                  l8665 5D06  
                                l8657 5CE0                                  l8649 5CBC  
                                l8681 5E42                                  l8673 5E10  
                                l8497 42B0                                  l8489 42A8  
                                l9529 13AA                                  l8921 16C0  
                                l8905 14C0                                  l8913 15D8  
                                l9545 4664                                  l9537 45DC  
                                l9721 5B2E                                  l9713 5ABE  
                                l9705 5B4A                                  l9297 5BB8  
                                l9457 4ADC                                  l9449 4A90  
                                l9481 4CBA                                  l9473 4C6A  
                                l9465 4C1A                                  l9801 1C00  
                                l9641 0948                                  l9633 08C2  
                                l9625 07AC                                  l9617 0692  
                                l9609 0562                                  l9553 4CEE  
                       ??_Paddle_draw 0027                                  l9651 40F0  
                                l9395 53B8                                  l9387 53AC  
                                l9379 539C                                  l8595 525E  
                                l8587 522C                                  l8579 5202  
                                l7939 60D2                                  l8851 219A  
                                l8843 218E                                  l8835 20FE  
                                l8827 20BC                                  l8819 20B2  
                                l8771 203E                                  l8763 2034  
                                l8755 202A                                  l8747 1FD6  
                                l8739 1F0A                                  l7971 3E78  
                                l7963 3E3A                                  l7955 3E04  
                                l7947 6158                                  l8691 3C96  
                                l8683 3C50                                  l8659 5CF6  
                                l8675 5E1E                                  l8667 5DEE  
                                l8499 42B2                                  l9731 576C  
                                l9723 56F4                                  l8931 17C6  
                                l8923 16FC                                  l8915 15F4  
                                l8907 1550                                  l9547 46A0  
                                l9539 45EC                                  l9715 5AC8  
                                l9707 5B80                                  l9299 5BC8  
                                l9475 4C7E                                  l9467 4C2E  
                                l9459 4BE2                                  l9483 6114  
                                l9811 1C9C                                  l9803 1C18  
                                l9643 094C                                  l9627 07E0  
                                l9619 06DA                                  l9635 08CC  
                                l9491 6280                                  l9563 4D3A  
                                l9653 4180                                  l9397 53BA  
                                l9389 53AE                                  l9661 441C  
                                l8597 5260                                  l8589 523A  
                                l8861 21AA                                  l8853 219C  
                                l8845 2192                                  l8837 2106  
                                l8829 20BE                                  l8781 2062  
                                l8773 2056                                  l8765 2036  
                                l8757 202C                                  l8749 2022  
                                l7981 3ED2                                  l7973 3E96  
                                l7965 3E48                                  l7957 3E08  
                                l7949 6164                                  l8693 3CBA  
                                l8685 3C74                                  l8677 5E34  
                                l8669 5E00                                  l9493 0FB4  
                                l9725 5700                                  l8941 18FE  
                                l8933 17E6                                  l8925 171C  
                                l8917 1664                                  l8909 1578  
                                l9549 46DC                                  l9717 5AFE  
                                l9709 5B92                                  l9901 484A  
                                l9477 4C92                                  l9469 4C42  
                                l9733 4DAE                                  l9485 6124  
                                l9821 1D38                                  l9813 1CC0  
                                l9805 1C3C                                  l9645 099A  
                                l9637 092A                                  l9629 0826  
                                l9581 0142                                  l9557 4CF4  
                                l9655 419C                                  l8599 5266  
                                l8871 21C6                                  l8847 2194  
                                l8855 21A2                                  l8839 2156  
                                l8791 206E                                  l8783 2064  
                                l8775 205A                                  l8767 203A  
                                l8759 202E                                  l7983 3F00  
                                l7975 3E9E                                  l7991 3F3A  
                                l7967 3E68                                  l7959 3E16  
                                l8695 3CDE                                  l8687 3C82  
                                l8679 5E3C                                  l8951 38BA  
                                l9495 0FBE                                  l9727 5712  
                                l8943 193A                                  l8927 173A  
                                l8935 1826                                  l8919 1684  
                                l9719 5B10                                  l9911 48A6  
                                l9903 485A                                  l9479 4CA6  
                                l9671 229A                                  l9663 2260  
                                l9751 4E3E                                  l9735 4DCC  
                                l9487 6140                                  l9831 1DE0  
                                l9823 1D5C                                  l9815 1CD8  
                                l9807 1C60                                  l9647 09A4  
                                l9639 0934                                  l9591 0328  
                                l9583 01C8                                  l9575 4DAA  
                                l9657 4388                                  l8881 21E4  
                                l8873 21CA                                  l8857 21A6  
                                l8849 2196                                  l8793 2070  
                                l8785 2066                                  l8777 205C  
                                l8769 203C                                  l7993 3F4A  
                                l7985 3F20                                  l7977 3EB2  
                                l7969 3E6C                                  l8697 3D28  
                                l8689 3C92                                  l8961 396A  
                                l8953 38EE                                  l8945 3866  
                                l9497 0FCE                                  l9729 5732  
                                l8937 18B6                                  l8929 1756  
                                l9905 486E                                  l9681 22FE  
                                l9673 22AE                                  l9665 2270  
                                l9745 4E18                                  l9489 6146  
                                l9825 1D80                                  l9817 1CFC  
                                l9809 1C78                                  l9833 1DF8  
                                l9761 1978                                  l9649 09B8  
                                l9593 0370                                  l9585 024E  
                                l9841 62D2                                  l9569 4D60  
                                l9921 29DE                                  l9659 4400  
                                l8883 21E6                                  l8859 21A8  
                                l8867 21B2                                  l8795 2072  
                                l8787 206A                                  l8779 205E  
                                l7995 3F6A                                  l7987 3F22  
                                l7979 3EC0                                  l8971 0A14  
                                l8963 399A                                  l8955 390A  
                                l8947 3876                                  l9499 0FFE  
                                l8939 18DE                                  l9907 487E  
                                l9915 48B6                                  l9691 2510  
                                l9683 2368                                  l9675 22BE  
                                l9667 2272                                  l9739 4DD2  
                                l9827 1D98                                  l9819 1D20  
                                l9771 1A20                                  l9763 199C  
                                l9595 03B6                                  l9587 028C  
                                l9579 00F4                                  l9835 4AEE  
                                l9931 2B00                                  l9923 29E2  
                                l9843 63CA                                  l9851 637E  
                                l8885 21EA                                  l8893 21F4  
                                l8877 21DE                                  l8869 21B4  
                                l8797 2076                                  l8789 206C  
                                l7989 3F34                                  l8981 0ADE  
                                l8973 0A34                                  l8965 09BE  
                                l8957 3936                                  l8949 38A6  
                                l9909 4892                                  l9693 257A  
                                l9685 23D2                                  l9677 22CE  
                                l9669 2286                                  l9757 4E88  
                                l9829 1DBC                                  l9781 1ABC  
                                l9773 1A38                                  l9765 19C0  
                                l9597 03FC                                  l9589 02E2  
                                l9837 4B36                                  l9941 2BD2  
                                l9933 2B48                                  l9925 2A2A  
                                l9845 63B4                                  l9861 609A  
                                l9853 6380                   __end_of_XF_popEvent 5F78  
                                l8887 21EC                                  l8879 21E2  
                                l8895 21F6                                  l8799 2078  
                                l7999 3F8C                                  l8991 0AEE  
                                l8983 0AE2                                  l8975 0A60  
                                l8967 09C6                                  l8959 3956  
                                l9695 25E4                                  l9687 243C  
                                l9679 22E6                                  l9791 1B58  
                                l9783 1AE0                                  l9775 1A5C  
                                l9767 19D8                                  l9599 0442  
                                l9839 4BAA                                  l9951 2C44  
                                l9943 2BE4                                  l9935 2B64  
                                l9927 2A88                                  l9871 5C34  
                                l9863 609E                                  l9855 6382  
                                l9847 636C                                  STR_1 7FB6  
                                STR_2 7FEE                                  l8897 2212  
                                l8889 21EE                                  l9697 4F66  
                                l8993 0AF0                                  l8985 0AE4  
                                l8977 0A96                                  l8969 09F4  
                                l9689 24A6                                  l9793 1B7C  
                                l9785 1AF8                                  l9777 1A80  
                                l9769 19FC                                  l9961 2CE8  
                                l9953 2C5C                                  l9945 2BF4  
                                l9937 2B70                                  l9929 2AE6  
                                l9881 5C88                                  l9865 60AE  
                                l9857 6078                                  l9849 637A  
                                STR_3 7FEE                                  STR_4 7FAB  
                                l8899 222A                                  l9699 4F90  
                                l8995 0AF2                                  l8987 0AE6  
                                l8979 0AB8                                  l9891 47F4  
                                l9795 1BA0                                  l9787 1B1C  
                                l9779 1A98                                  l9955 2C7C  
                                l9947 2C06                                  l9939 2BB8  
                                l9883 5C8A                                  l9971 2644  
                                l9867 60C0                                  l9859 6088  
                                STR_5 7FC9                                  STR_6 7FD2  
                                l8997 0AFE                                  l8989 0AE8  
                                l9893 4804                                  l9797 1BB8  
                                l9789 1B40                                  l9957 2C8A  
                                l9949 2C12                                  l9965 2CF0  
                                l9885 5C9A                                  l9877 5C38  
                                l9869 5C2E                                  l9981 2680  
                                l9973 2650                                  STR_7 7FE3  
                                STR_8 7FF7                                  l8999 0B0A  
                                l9895 4814                                  l9799 1BDC  
                                l9959 2CD2                                  l9879 5C58  
                                l9991 26B0                                  l9983 2690  
                                l9975 265E                                  STR_9 7FFB  
                                l9897 4826                                  l9889 47F0  
                                l9993 26B6                                  l9985 2692  
                                l9977 2660                                  l9899 4836  
                                l9995 26C4                                  l9979 2670  
                                l9987 269A                                  l9997 26C6  
                                l9989 26AA                                  l9999 26D6  
                       ??_Paddle_init 0016                                  u2300 595C  
                                u2301 5958                                  u2310 59A0  
                                u2311 599C                                  u2450 3384  
                                u2451 3380                                  u6010 6408  
                                u6011 6404                                  u6020 63F2  
                                u6100 57D0                                  u6021 63EE  
                                u6101 57CC                                  u6005 54A6  
                                u6110 57EA                                  u6030 51DC  
                                u6111 57E6                                  u6031 51D8  
                                u6120 5808                                  u6040 51F6  
                                u6200 5E34                                  u7000 1ABC  
                                u6121 5804                                  u6041 51F2  
                                u6201 5E30                                  u7001 1AB8  
                                u6130 581E                                  u6050 521C  
                                u6210 3C74                                  u7010 1AE0  
                                u6131 581A                                  u6051 5218  
                                u6211 3C70                                  u7011 1ADC  
                                u6140 5842                                  u6060 523A  
                                u5500 5084                                  u6220 3CBA  
                                u7100 1C9C                                  u7020 1B1C  
                                u6141 583E                                  u6061 5236  
                                u5501 5080                                  u6221 3CB6  
                                u7101 1C98                                  u7021 1B18  
                                u6070 5256                                  u6310 218E  
                                u5510 50BA                                  u6230 3CDE  
                                u6150 5CBC                                  u7110 1CC0  
                                u7030 1B40                                  u6071 5252  
                                u6311 218A                                  u5511 50B6  
                                u6231 3CDA                                  u6151 5CB8  
                                u7111 1CBC                                  u7031 1B3C  
                                u6080 527C                                  u5520 60F6  
                                u6320 21C6                                  u6304 2172  
                                u5600 3F00                                  u6240 3D84  
                                u6160 5CDA                                  u6400 399A  
                                u7120 1CFC                                  u7040 1B7C  
                                u7200 6088                                  u6081 5278  
                                u6321 21C2                                  u6305 216C  
                                u5601 3EFC                                  u6241 3D80  
                                u6161 5CD6                                  u6401 3996  
                                u7121 1CF8                                  u7041 1B78  
                                u7201 6084                                  u6090 57B6  
                                u5530 6106                                  u6330 21DA  
                                u6250 1E68                                  u5610 3F4A  
                                u6170 5CF6                                  u6410 0A60  
                                u7130 1D20                                  u7050 1BA0  
                                u7210 60AE                                  u6091 57B2  
                                u5531 6102                                  u6331 21D6  
                                u5611 3F46                                  u6171 5CF2  
                                u6411 0A5C                                  u7131 1D1C  
                                u7051 1B9C                                  u7211 60AA  
                                u6340 2212                                  u6260 1EE8  
                                u5620 3F9E                                  u5540 619A  
                                u5700 5314                                  u6180 5E00  
                                u6500 0E76                                  u6420 0A92  
                                u7140 1D5C                                  u7060 1BDC  
                                u7300 2AE6                                  u7220 5C58  
                                u6341 220E                                  u6261 1EE4  
                                u5621 3F9A                                  u5541 6196  
                                u5701 5310                                  u6181 5DFC  
                                u6501 0E72                                  u6421 0A8E  
                                u7141 1D58                                  u7061 1BD8  
                                u7301 2AE2                                  u7221 5C54  
                                u6350 224E                                  u6270 1EF8  
                                u5550 3E16                                  u5630 3FD0  
                                u5710 5322                                  u6190 5E1E  
                                u6510 0E86                                  u6430 0AB8  
                                u7150 1D80                                  u7070 1C00  
                                u7310 2B48                                  u7230 5C9A  
                                u5527 60EC                                  u6271 1EF4  
                                u5551 3E12                                  u5631 3FCC  
                                u5711 531E                                  u6191 5E1A  
                                u6511 0E82                                  u6431 0AB4  
                                u7151 1D7C                                  u7071 1BFC  
                                u7311 2B44                                  u7231 5C96  
                                u8007 592E                                  u6600 53F6  
                                u6360 225E                                  u6280 1F1C  
                                u5560 3E48                                  u5640 400E  
                                u5720 61B6                                  u5480 504A  
                                u5800 326A                                  u6520 0F84  
                                u6440 0ADA                                  u7240 4826  
                                u7160 1DBC                                  u7080 1C3C  
                                u7320 2BB8                                  u7400 26C4  
                                u6601 53F2                                  u6361 225A  
                                u6281 1F18                                  u6257 1E5E  
                                u5561 3E44                                  u5641 400A  
                                u5721 61B2                                  u5481 5046  
                                u5801 3266                                  u6521 0F80  
                                u6441 0AD6                                  u7241 4822  
                                u7161 1DB8                                  u7081 1C38  
                                u7321 2BB4                                  u7401 26C0  
                                u8017 5972                                  u6610 5410  
                                u6290 1F74                                  u5650 4038  
                                u5490 505C                                  u5810 3288  
                                u5730 30A0                                  u6530 0F9E  
                                u6450 0C04                                  u6370 14C0  
                                u7250 484A                                  u7170 1DE0  
                                u7090 1C60                                  u7330 2BE4  
                                u7410 26D6                                  u6611 540C  
                                u5571 3E72                                  u5651 4034  
                                u5491 5058                                  u5811 3284  
                                u5731 309A                                  u6531 0F9A  
                                u6451 0C00                                  u6371 14BC  
                                u7251 4846                                  u7171 1DDC  
                                u7091 1C5C                                  u7331 2BE0  
                                u7411 26D2                                  u5900 2DA8  
                                u5580 3E96                                  u5660 4066  
                                u5820 32A2                                  u5740 30A2  
                                u6460 0C52                                  u6380 173A  
                                u7260 486E                                  u6620 6140  
                                u6540 5DC4                                  u6700 4DA6  
                                u7180 4B36                                  u7340 2C06  
                                u7500 2880                                  u7420 26E6  
                                u5901 2DA4                                  u6357 2244  
                                u5581 3E92                                  u5661 4062  
                                u5821 329E                                  u6461 0C4E  
                                u6381 1736                                  u7261 486A  
                                u6621 613C                                  u6541 5DC0  
                                u6701 4DA2                                  u7181 4B32  
                                u7341 2C02                                  u7501 287C  
                                u7421 26E2                                  u5910 2E4E  
                                u5590 3EC0                                  u5670 40AE  
                                u5830 32BC                                  u5750 30B8  
                                u6550 5F0E                                  u6470 0CA4  
                                u6390 390A                                  u6630 1076  
                                u7270 4892                                  u6710 0142  
                                u7190 4BAA                                  u7350 2C44  
                                u7510 28A0                                  u7430 2726  
                                u5911 2E4A                                  u5591 3EBC  
                                u5671 40AA                                  u5831 32B8  
                                u5751 30B4                                  u6551 5F0A  
                                u6471 0CA0                                  u6391 3906  
                                u6631 1072                                  u7271 488E  
                                u6711 013E                                  u7191 4BA6  
                                u7351 2C40                                  u7511 289C  
                                u7431 2722                                  u5920 2E68  
                                u5680 529C                                  u5840 32CA  
                                u5760 30E6                                  u6480 0D00  
                                u6640 111A                                  u6560 567E  
                                u6800 05B8                                  u6720 01C8  
                                u7360 2CD2                                  u7280 2A2A  
                                u7520 28B2                                  u7440 2766  
                                u7600 4700                                  u5921 2E64  
                                u6297 1F6A                                  u5681 5298  
                                u5841 32C6                                  u5761 30E2  
                                u6481 0CFC                                  u6641 1116  
                                u6561 567A                                  u6801 05B4  
                                u6721 01C4                                  u7361 2CCE  
                                u7281 2A26                                  u7521 28AE  
                                u7441 2762                                  u7601 46FC  
                                u5930 2F06                                  u5690 52BE  
                                u5850 32DC                                  u5770 3102  
                                u6490 0D8E                                  u6650 1152  
                                u6810 05F6                                  u6730 024E  
                                u6570 4E9E                                  u7290 2A88  
                                u7530 28E0                                  u7450 27DC  
                                u7370 265E                                  u7610 4734  
                                u5931 2F02                                  u5691 52BA  
                                u5851 32D8                                  u5771 30FE  
                                u6491 0D8A                                  u6651 114E  
                                u6811 05F2                                  u6731 024A  
                                u6571 4E9A                                  u7291 2A84  
                                u7531 28DC                                  u7451 27D8  
                                u7371 265A                                  u5940 2F64  
                                u5860 32EA                                  u5780 3130  
                                u6660 13E0                                  u6900 4DCC  
                                u6820 064C                                  u6740 028C  
                                u6580 4EF4                                  u7540 28F6  
                                u7460 27FE                                  u7380 2670  
                                u7620 4762                                  u7700 3B6E  
                                u5941 2F60                                  u5861 32E6  
                                u5781 312C                                  u6661 13DC  
                                u6901 4DC8                                  u6821 0648  
                                u6741 0288                                  u6581 4EF0  
                                u7541 28F2                                  u7461 27FA  
                                u7381 266C                                  u7621 475E  
                                u7701 3B6A                                  u5950 2FFE  
                                u5870 3302                                  u5790 313E  
                                u6910 4E14                                  u6830 0692  
                                u6750 02E2                                  u6670 4CEE  
                                u6590 4F28                                  u7550 290A  
                                u7470 2828                                  u7390 2680  
                                u7630 4776                                  u7710 3BB8  
                                u5951 2FFA                                  u5871 32FE  
                                u5791 313A                                  u6911 4E10  
                                u6831 068E                                  u6751 02DE  
                                u6671 4CEA                                  u6591 4F24  
                                u7551 2906                                  u7471 2824  
                                u7391 267C                                  u7631 4772  
                                u7615 472A                                  u7711 3BB4  
                                u5960 306C                                  u5880 2D52  
                                u6920 4E3A                                  u6840 0720  
                                u6760 0328                                  u6680 4D36  
                                u7560 2924                                  u7480 284C  
                                u7640 479E                                  u7720 3BD6  
                                u7800 3708                                  u5961 3068  
                                u5881 2D4E                                  u6921 4E36  
                                u6841 071C                                  u6761 0324  
                                u6681 4D32                                  u7561 2920  
                                u7481 2848                                  u7641 479A  
                                u7721 3BD2                                  u7801 3704  
                                u5890 2D80                                  u6930 4E84  
                                u6850 07AC                                  u6770 03B6  
                                u6690 4D5C                                  u7570 296C  
                                u7490 2862                                  u7650 47BE  
                                u7730 3BE6                                  u7810 3764  
                                u5891 2D7C                                  u6931 4E80  
                                u6851 07A8                                  u6771 03B2  
                                u6691 4D58                                  u7571 2968  
                                u7491 285E                                  u7651 47BA  
                                u7731 3BE2                                  u7811 3760  
                                u7900 4954                                  u6940 199C  
                                u6860 0826                                  u6780 0442  
                                u7580 299C                                  u7660 47CE  
                                u7740 3BF4                                  u7820 55C4  
                                u7901 4950                                  u6941 1998  
                                u6861 0822                                  u6781 043E  
                                u7581 2998                                  u7661 47CA  
                                u7741 3BF0                                  u7821 55C0  
                                _RBPU 007F8F                                  u7910 497E  
                                u6950 19C0                                  u6870 092A  
                                u6790 04BC                                  u7590 29CA  
                                u7750 3C2E                                  u7670 3AAE  
                                u7830 5638                                  u5975 42EC  
                                u7911 497A                                  u6951 19BC  
                                u6871 0926                                  u6791 04B8  
                                u7591 29C6                                  u7751 3C2A  
                                u7671 3AAA                                  u7831 5634  
                                u7840 5F34                                  u7920 4998  
                                u6960 19FC                                  u6880 099A  
                                u7760 3C3C                                  u7680 3ABC  
                                u7841 5F30                                  u5985 4332  
                                u7921 4994                                  u6961 19F8  
                                u6881 0996                                  u7761 3C38  
                                u7681 3AB8                                  u6890 5732  
                                u7930 49B2                                  u6970 1A20  
                                u7690 3B18                                  u7770 361C  
                                u7850 59BC                                  u5995 5490  
                                u6891 572E                                  u7931 49AE  
                                u6971 1A1C                                  u7691 3B14  
                                u7771 3618                                  u7851 59B8  
                                u6980 1A5C                                  u7940 512A  
                                u7780 3646                                  u7860 59E4  
                                u6981 1A58                                  u7941 5126  
                                u7781 3642                                  u7861 59E0  
                                u6990 1A80                                  u7950 5140  
                                u7790 36DE                                  u7870 5A08  
                                u6991 1A7C                                  u7951 513C  
                                u7791 36DA                                  u7871 5A04  
                                u7880 490E                                  u7960 516A  
                                u7881 490A                                  u7961 5166  
                                u7890 4920                                  u7970 5F92  
                                u7891 491C                                  u7971 5F8E  
                                u7987 54E2                                  u7997 336A  
                                _WPUB 000F61                           displaySM@ev 00A7  
                         LCD_Bitmap@i 007A                                  abs@a 0024  
                                _dbuf 00E0                       ?_checkCollision 001B  
           __size_of_LCD_SliderCreate 00EE                                  _main 6438  
                                _dtoa 306E                      _XF_scheduleTimer 5C2E  
                                _prec 0047                                  _nout 00DB  
                                pad@i 0029                                  pad@p 0026  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 002B  
                                fsr2l 000FD9                                  btemp 004E  
                    Menu_inGameDraw@g 0094                        touchScreenSM@g 00B2  
                                prodh 000FF4                                  prodl 000FF3  
    __end_of_arialNarrow_12ptFontInfo 7F86                                  start 00F0  
                         RGB2LCD@blue 001C                __end_of_LCD_ButtonDraw 14A2  
           __size_of_LCD_SliderUpdate 04D6                       ___fldiv@new_exp 0031  
                      _LCD_SliderDraw 45DC                    LCD_InSlider@slider 0012  
                     __end_of_XF_init 5644                          ___param_bank 000000  
                    _gameStateMachine 004D                LCD_ButtonCreate@height 0018  
                  XF_scheduleTimer@ev 0015                    XF_scheduleTimer@tm 0013  
              LCD_ButtonCreate@button 0028                                 ??_abs 0026  
                               ??_pad 0028                                 ??_isr 000E  
                    __end_of_LCD_Fill 5412                        ??_LCD_InButton 0018  
                    __end_of_LCD_Init 35F8                      __end_of_LCD_Read 4388  
                      ??_LCD_InSlider 0018                        ??_LCD_DrawRect 001D  
         LCD_SliderCreate@cursorWidth 0020                                 l10001 26E6  
                               l10011 2726                                 l10003 26F6  
                               l10101 29D2                                 l10013 2736  
                               l10021 2756                                 l10005 26F8  
                               l10031 2794                                 l10023 2766  
                               l10015 273E                                 l10007 2700  
                               l10111 4700                                 l10201 5FDA  
                               l10041 27DC                                 l10033 27A4  
                               l10025 2766                                 l10017 2742  
                               l10009 2710                                 l10121 4750  
                               l10203 5FEC                                 l10051 282A  
                               l10043 27F0                                 l10035 27B4  
                               l10131 477A                                 l10123 4754  
                               l10115 4714                                 l10211 638C  
                               l10205 5FFE                                 l10061 2872  
                               l10053 283A                                 l10045 27FE  
                               l10037 27C4                                 l10029 277A  
                               l10141 47A2                                 l10133 4784  
                               l10125 4762                                 l10117 473E  
                               l10109 46EA                                 l10221 35F8  
                               l10213 639E                                 l10301 62AA  
                               l10311 5F1A                                 l10207 6010  
                               l10071 28B2                                 l10063 2880  
                               l10055 284C                                 l10047 280A  
                               l10039 27CC                                 l10143 47AE  
                               l10135 478E                                 l10119 4740  
                               l10231 364E                                 l10223 35FE  
                               l10215 63A2                                 l10303 62B0  
                               l10313 5F1A                                 l10081 2924  
                               l10073 28E0                                 l10057 2862  
                               l10065 2892                                 l10049 2828  
                               l10145 47BE                                 l10161 3B18  
                               l10153 3A9E                                 l10241 3710  
                               l10233 36B8                                 l10225 3608  
                               l10209 6386                                 l10217 6448  
                               l10305 62BC                                 l10323 5F40  
                               l10315 5F20                                 l10411 512A  
                               l10091 299C                                 l10083 294E  
                               l10067 28A0                                 l10059 2868  
                               l10147 47CE                                 l10171 3B72  
                               l10155 3AAE                                 l10251 3754  
                               l10243 3736                                 l10235 36CA  
                               l10227 361C                                 l10219 644E  
                               l10307 62C8                                 l10325 5F50  
                               l10317 5F34                                 l10421 5148  
                               l10413 512E                                 l10405 5104  
                               l10093 29B8                                 l10077 290A  
                               l10085 2952                                 l10069 28A4  
                               l10149 47DE                                 l10181 3BD6  
                               l10173 3B74                                 l10165 3B2C  
                               l10157 3ABC                                 l10261 37CC  
                               l10253 3756                                 l10245 374A  
                               l10237 36DE                                 l10229 3646  
                               l10341 59D0                                 l10333 59A6  
                               l10501 5F98                                 l10309 62CC  
                               l10327 5F6E                                 l10319 5F3A  
                               l10423 5158                                 l10415 5140  
                               l10407 5108                                 l10095 29BC  
                               l10087 296C                                 l10079 2916  
                               l10191 3C2E                                 l10183 3BF4  
                               l10175 3B80                                 l10167 3B34  
                               l10159 3B02                                 l10263 37EA  
                               l10255 3764                                 l10247 374E  
                               l10239 3708                                 l10343 59E4  
                               l10335 59AA                                 l10503 5FAA  
                               l10329 5F74                                 l10361 48FC  
                               l10425 516A                                 l10409 5118  
                               l10433 5186                                 l10097 29CA  
                               l10089 2982                                 l10193 3C3C  
                               l10185 3BF6                                 l10177 3BBC  
                               l10169 3B40                                 l10257 3782  
                               l10249 3752                                 l10345 59E8  
                               l10337 59BC                                 l10353 5A0C  
                               l10505 5FBC                                 l10281 5594  
                               l10441 54D2                                 l10371 4940  
                               l10363 490E                                 l10427 5172  
                               l10099 29D0                                 l10195 3C3E  
                               l10187 3BFA                                 l10179 3BC8  
                               l10259 37B8                                 l10267 3838  
                               l10347 59F4                                 l10339 59C0  
                               l10283 55A4                                 l10275 558C  
                               l10451 5536                                 l10443 54D6  
                               l10507 6438                                 l10373 4954  
                               l10365 4920                                 l10189 3C1E  
                               l10701 5A24                                 l10293 55CC  
                               l10285 55A8                                 l10461 5540  
                               l10453 5538                                 l10445 54F0  
                               l10199 5FCE                                 l10711 48CC  
                               l10391 49A0                                 l10383 4986  
                               l10375 4958                                 l10367 4924  
                               l10359 48F8                                 l10703 384E  
                               l10295 5618                                 l10287 55C4  
                               l10471 5550                                 l10463 5544  
                               l10455 553A                                 l10447 54F4  
                               l10439 54D0                                 l10713 0EDC  
                               l10385 4998                                 l10377 496C  
                               l10369 4930                                 l10705 519A  
                               l10297 561C                                 l10481 5562  
                               l10473 5552                                 l10465 5548  
                               l10457 553C                                 l10449 5500  
                               l10379 497E                                 l10707 2D04  
                               l10299 5638                                 l10491 5570  
                               l10483 5564                                 l10475 555A  
                               l10467 554C                                 l10459 553E  
                               l10709 49CC                                 l10493 557C  
                               l10485 5566                                 l10477 555C  
                               l10469 554E                                 l10399 49B6  
                               l10495 5F78                                 l10487 5568  
                               l10479 5560                        ??_LCD_DrawText 002D  
                               l10497 5F82                                 l10489 556C  
                               l10499 5F92                                 l10699 622E  
                       ___fltol@sign1 0041                       __end_of___aodiv 3F8C  
                               ?_main 0001                                 ?_dtoa 002D  
                     __end_of___aomod 40F0                       LCD_ButtonDraw@i 0099  
                     __end_of___fldiv 29DE                       __end_of___awdiv 528E  
                               STR_10 7FC0                                 STR_11 7FDB  
                               STR_12 7FA0                                 STR_13 7F93  
                               STR_14 7F86                                 STR_15 7FEB  
                               STR_16 7FF1                       __end_of___awmod 5854  
                               _ANSB1 0079C9                                 _ANSB2 0079CA  
                     __end_of___fltol 47F0                                 _T0CON 000FD5  
                     ___awdiv@divisor 0014                                 _LATB1 007C51  
                               _LATC0 007C58                                 _LATB2 007C52  
                               _LATB3 007C53                                 _LATC2 007C5A  
                               _LATB4 007C54                                 _LATC3 007C5B  
                               _LATC4 007C5C                                 _LATC5 007C5D  
                     __end_of___lwdiv 5D16                       __end_of___lwmod 5E52  
                               i2l800 00DC                                 i2l811 636A  
                               i2l726 5EB4                                 i2l752 6436  
                               i2l736 5D88                                 i2l739 6216  
                               i2l756 6420                                 i2l748 45DA  
                               i2l794 0056                       ___awdiv@counter 0016  
                               _PLLEN 007CDE                          vfpfcnvrt@fmt 0041  
                               _TMR0H 000FD7                                 _TMR0L 000FD6  
                               _PORTA 000F80                       ??_configMeasure 0012  
                               _TRISA 000F92                   LCD_Bitmap@bfOffBits 0060  
                        LCD_Fill@page 0018                                 _flags 0049  
                        displayInit@g 00A3                                 _fputc 5038  
                               _theXF 00B5                                 _fputs 6158  
              LCD_ButtonDraw@tempChar 008A                   __size_of_LCD_Bitmap 05F6  
                               pad@fp 0022                                 _width 0045  
                               _putch 6456                                 dtoa@d 002F  
                               dtoa@i 0070                                 dtoa@n 0068  
                               dtoa@p 0062                                 dtoa@s 0066  
                               dtoa@w 0064            __end_ofi2_XF_scheduleTimer 5D8A  
                __end_of_XF_pushEvent 5DEE                       __end_of_sleepSM 6456  
                        Paddle_addX@p 0012                                 tablat 000FF5  
          ??_gameControllerController 003A                       touchScreenSM@ev 00B4  
                    __end_ofi2___wmul 636C                                 plusw2 000FDB  
         ?_XF_decrementAndQueueTimers 0001                                 ttemp5 004F  
                               ttemp6 0052                                 ttemp7 0056  
                               status 000FD8                                 wtemp8 004F  
                        Paddle_draw@p 0025                       __end_of_sprintf 6076  
                        RGB2LCD@color 001E                          RGB2LCD@green 001A  
              __end_of_LCD_SliderDraw 46EA                         ?_Menu_endGame 009C  
                        Paddle_init@p 0012              __size_of_touchScreenInit 000C  
             LCD_ButtonCreate@bgColor 001C                    __size_ofi2___awmod 00B0  
                 __end_of_Paddle_addX 4F66                       ?_LCD_ButtonDraw 007C  
                   ?_gameControllerSM 003C                   __end_of_Paddle_draw 44BA  
                       _touchScreenSM 59A2                   __end_of_Paddle_init 56F4  
                  __size_of_Ball_draw 0156                          LCD_Read@posX 0012  
                        LCD_Read@posY 0014                    __size_of_Ball_init 0076  
                     __initialization 624E                    ??_gameControllerSM 003E  
                        __end_of_main 6448                          __end_of_dtoa 3350  
             LCD_ButtonCreate@fpPress 0022                touchScreenController@g 0092  
              touchScreenController@s 009A                      ?_sleepController 0001  
                    i2XF_pushEvent@ev 0008                                ??_main 0045  
                              ??_dtoa 0037                         __activetblptr 000002  
                           ??_RGB2LCD 0014                           _XF_popEvent 5F18  
                              _ADCON0 000FC2                                _ADCON2 000FC0  
                    LCD_ButtonDraw@x1 008D                      LCD_ButtonDraw@x2 008F  
                    LCD_ButtonDraw@y1 0091                      LCD_ButtonDraw@y2 0093  
                              ?_fputc 0012                                ?_fputs 001B  
                              _ADRESH 000FC4                                _ADRESL 000FC3  
                              _CCPR2L 000F67                      ___awdiv@dividend 0012  
                              ?_putch 0001                                _INT1IE 007F83  
                              _INT1IF 007F80                    LCD_DrawRect@colorH 0021  
                  LCD_DrawRect@colorL 0022               _GameParameters_resetPos 6280  
                              i2l1055 5902                                i2l7351 640E  
                              i2l7353 641E                                i2l7361 586E  
                              i2l7347 6424                                i2l7371 58A2  
                              i2l7363 5872                                i2l7355 5854  
                              i2l7349 6434                                i2l7381 58DC  
                              i2l7373 58AA                                i2l7365 5880  
                              i2l7357 5858                                i2l7701 001A  
                              i2l7375 58B8                                i2l7383 58E2  
                              i2l7367 5888                                i2l7359 5866  
                              i2l7711 0064                                i2l7703 0028  
                              i2l7561 61E4                                i2l7385 58F2  
                              i2l7377 58CE                                i2l7369 589A  
                              i2l7721 00AA                                i2l7713 0068  
                              i2l7705 0036                                i2l7563 61FC  
                              i2l7387 58FA                                i2l7379 58D6  
                              i2l7571 5E8C                                i2l7723 00B2  
                              i2l7707 0044                                i2l7715 0072  
                              i2l7581 5EAC                                i2l7573 5E92  
                              i2l7565 5E54                                i2l7661 44BA  
                              i2l7725 00C6                                i2l7717 0080  
                              i2l7709 0048                                i2l7559 61DE  
                              i2l7583 5EB2                                i2l7567 5E5A  
                              i2l7671 454A                                i2l7727 00CE  
                              i2l7719 008E                                i2l7577 5E98  
                              i2l7569 5E78                                i2l7673 4584  
                              i2l7681 5D16                                i2l7729 00DA  
                              i2l7579 5EA8                                i2l7587 6346  
                              i2l7675 4592                                i2l7667 44C2  
                              i2l7691 5D40                                i2l7683 5D1C  
                              i2l7589 6362                                i2l7669 44F2  
                              i2l7677 45BA                                i2l7693 5D70  
                              i2l7679 45BE                                i2l7695 5D72  
                              i2l7697 5D82                                i2l7689 5D20  
                              _OSCCON 000FD3                             ??_XF_init 0020  
                              _TMR0IE 007F95                                _TMR0IF 007F92  
                              _TMR2IF 007CF1                        ??_Menu_endGame 0042  
                              _TRISB1 007C99                                _TRISC0 007CA0  
                              _TRISB2 007C9A                                _TRISC1 007CA1  
                              _TRISB3 007C9B                                _TRISC2 007CA2  
                              _TRISB4 007C9C                                _TRISC3 007CA3  
                              _TRISC4 007CA4                                _TRISC5 007CA5  
                        ?_moovePaddle 001C                      __end_of___xxtofl 3C50  
                     ?_LCD_SliderDraw 0037                   i2XF_pushEvent@inISR 0007  
                LCD_DrawText@bg_color 002B                            _Score_draw 4F66  
                          _Score_init 62FA                        ?_touchScreenSM 00B2  
                     i2_LEAVECRITICAL 640C                 __size_of_Factory_exec 0056  
               __size_of_Factory_init 00BC                          vfprintf@cfmt 0082  
                 LCD_Bitmap@jumpColor 0078                   LCD_Bitmap@jumpCount 0065  
                 _Menu_parametersDraw 5ABE                  __size_of_configTouch 001A  
          __end_of_gameControllerInit 63B4                             ??___aodiv 0022  
                           ??___aomod 0022                                ___wmul 6320  
                           ??___fldiv 0028                             ??___awdiv 0016  
                           ??___awmod 0016                         LCD_Fill@color 0012  
                           ??___fltol 003D                LCD_ButtonUpdate@button 0025  
                           ??___lwdiv 0024                             ??___lwmod 0016  
          gameControllerController@ev 0039                  LCD_DrawText@fontByte 0037  
        __size_of_GameParameters_init 03E4                                clear_0 6254  
                              clear_1 6260                                clear_2 626C  
        __size_of_GameParameters_setX 0016          __size_of_GameParameters_setY 0016  
                    ___awdiv@quotient 0018             LCD_ButtonCreate@textOrBmp 001E  
               _touchScreenController 35F8                       ___awmod@divisor 0014  
                              isa$std 000001                       ___awmod@counter 0016  
                __size_of_displayInit 0018                                pad@buf 0024  
                              dtoa@fp 002D                                _strlen 60C6  
                       LCD_DrawRect@i 0023                         LCD_DrawRect@j 001D  
                              fputc@c 0012                                fputs@c 001F  
                              fputs@i 0020                                fputs@s 001B  
        ?_GameParameters_setBackLight 0012                         LCD_DrawText@i 003E  
                   __end_ofi2___awmod 5904                         LCD_DrawText@x 0040  
                       LCD_DrawText@y 003D                  LCD_DrawText@tempChar 003F  
                        __mediumconst 783A                                tblptrh 000FF7  
                           ??_sleepSM 0012                                tblptrl 000FF6  
                              tblptru 000FF8                     __end_of_Ball_draw 4246  
                   __end_of_Ball_init 5C2E                  ?_Menu_parametersDraw 009C  
                 i2XF_scheduleTimer@i 0006                                putch@c 0001  
                    __end_of_vfprintf 5F18                        i2___awmod@sign 0006  
                           ??_sprintf 0045              __end_of_LCD_ButtonCreate 4AEE  
                         _Paddle_addX 4E8C                          _Factory_exec 5F78  
                        _Factory_init 54D0                           _Paddle_draw 4388  
                         _Paddle_init 5644                      XF_pushEvent@temp 001A  
                        ___xxtofl@arg 001C                 LCD_SliderCreate@width 0016  
                        ___xxtofl@exp 001B                          ___xxtofl@val 0012  
                __end_of_LCD_InButton 4DAE                 LCD_SliderCreate@steps 0022  
            __end_of_LCD_ButtonUpdate 3A9C                            __accesstop 0060  
             __end_of__initialization 6272                             ?_LCD_Fill 0012  
                    _LCD_SliderCreate 4BE2                             ?_LCD_Init 0001  
                           ?_LCD_Read 0012                  __end_of_LCD_InSlider 4E8C  
                __end_of_LCD_DrawRect 306E                  __end_of_LCD_DrawText 2260  
         __size_of_XF_unscheduleTimer 003C                       i2_ENTERCRITICAL 6422  
                       ___rparam_used 000001                            ___fltol@f1 0039  
                       LCD_Read@color 0018                      _LCD_SliderUpdate 14A2  
                  LEAVECRITICAL@inISR 0012                             LCD_Init@i 0018  
                      __pcstackCOMRAM 0001                          ??_LCD_Bitmap 002D  
                   ??_touchScreenInit 0012           __end_of_backlightController 1E16  
                       __end_of_fputc 5102                         __end_of_fputs 619C  
                 gameControllerInit@g 003C            LCD_ButtonCreate@fpReleased 0024  
                       __end_of_putch 6458                     LCD_Bitmap@biWidth 0076  
                   ?_Menu_welcomeDraw 009C                  LCD_Bitmap@endOfImage 0064  
            __end_of_XF_scheduleTimer 5CA2                             ?i2___wmul 0001  
                  ??_Menu_welcomeDraw 0042                     LCD_Bitmap@curXPos 006F  
 __size_of_XF_decrementAndQueueTimers 0122                     LCD_Bitmap@curYPos 0067  
               __size_of_XF_pushEvent 0064                 ??_Menu_parametersDraw 0045  
       ??_GameParameters_setBackLight 0016                          Ball_Update@b 0012  
           ??_GameParameters_resetPos 0014               _arialNarrow_12ptBitmaps 783B  
                    ??_checkCollision 001D                    __size_of_displaySM 0100  
               __end_of_LEAVECRITICAL 63F6                    LCD_DrawText@offset 0033  
                             ??_fputc 0016                               ??_fputs 001F  
                        ?_Ball_Update 0012                               ??_putch 0012  
    __end_of_gameControllerController 2D34             gameControllerController@g 0037  
             __end_ofi2_LEAVECRITICAL 6422                        XF_pushEvent@ev 0019  
                          __pbssBANK0 00B5                            __pbssBANK1 0100  
                  __end_of_LCD_Bitmap 0FB4                            ??_LCD_Fill 0014  
                          ??_LCD_Init 0017                            ??_LCD_Read 0016  
                     ??_touchScreenSM 01EF              LCD_ButtonCreate@txtColor 001A  
                         ?_Score_draw 0092                           ?_Score_init 0012  
                  ENTERCRITICAL@inISR 0012              __size_of_Menu_inGameDraw 0056  
                         Score_draw@s 0092                           Score_init@s 0012  
                             ?___wmul 001A                ?_touchScreenController 0092  
                        _XF_pushEvent 5D8A                    __size_of_mooveBall 0028  
                  __size_of_sleepInit 0028                               ?_strlen 0012  
                __end_of_Menu_endGame 57A4                            ??i2___wmul 0005  
             __size_ofi2_XF_pushEvent 0064                               _RGB2LCD 5412  
                             _INTEDG1 007F8D                  GameParameters_init@s 002B  
                           ?___xxtofl 0012                  GameParameters_setX@s 0012  
                GameParameters_setY@s 0012                    __size_of_vfpfcnvrt 01B4  
               __end_of_ENTERCRITICAL 640C               __end_ofi2_ENTERCRITICAL 6438  
                    ??_LCD_ButtonDraw 007E                  Menu_parametersDraw@g 009C  
 __end_of_arialNarrow_12ptDescriptors 7F7F           _arialNarrow_12ptDescriptors 7E62  
                             _XF_init 558C                   LCD_ButtonDraw@xText 0095  
                 LCD_ButtonDraw@yText 0097                   LCD_ButtonDraw@width 008B  
                             __Hparam 0000                  __size_of_moovePaddle 00F4  
                             __Lparam 0000                    i2_XF_scheduleTimer 5D16  
                             ___aodiv 3E04                     __end_of_displaySM 49F4  
                             ___aomod 3F8C                               ___fldiv 2644  
                             ___awdiv 51CA                               ___awmod 57A4  
                             ___fltol 46EA                       __size_of___wmul 0026  
             LCD_ButtonUpdate@colorIn 002D                               ___lwdiv 5CA2  
                             ___lwmod 5DEE                             ?_vfprintf 007C  
                      LCD_Bitmap@newY 0073                        LCD_Bitmap@posX 0029  
                      LCD_Bitmap@posY 002B                        LCD_Fill@colorH 0014  
                      LCD_Fill@colorL 0015                               __pcinit 624E  
                      LCD_Fill@column 0016                               __ramtop 0600  
                             __ptext0 6438                               __ptext1 54D0  
                             __ptext2 62AA                               __ptext3 6448  
                             __ptext4 6218                               __ptext5 639E  
                             __ptext6 6386                               __ptext7 558C  
                             __ptext8 3350                               __ptext9 5904  
                 ?i2_XF_scheduleTimer 0002                       __size_of_strlen 004E  
           __size_of_gameControllerSM 00C8                             _T2CONbits 000FBA  
                        __size_of_abs 0040                          __size_of_pad 00C2  
                        __size_of_isr 00E8                          ?_XF_popEvent 0001  
                          ??___xxtofl 0016                  LCD_Bitmap@pixelCount 0075  
                 __size_of_Score_draw 00D2                      ___awmod@dividend 0012  
                 __size_of_Score_init 0026                 LCD_DrawText@fontPixel 0038  
                             _sleepSM 6454                 __end_of_configMeasure 60C6  
               __size_of_LCD_InButton 00DE               XF_unscheduleTimer@inISR 0002  
               __size_of_LCD_InSlider 00DE                     Menu_welcomeDraw@g 009C  
               __size_of_LCD_DrawRect 033A                               _sprintf 6024  
               __size_of_LCD_DrawText 044A                      ??_LCD_SliderDraw 0039  
                end_of_initialization 6272                      ?i2_LEAVECRITICAL 0001  
                 _GameParameters_init 2260                   _GameParameters_setX 63CA  
                 _GameParameters_setY 63B4                     __end_of_mooveBall 62FA  
                             fputc@fp 0014                  ??i2_XF_scheduleTimer 0006  
                       __Lmediumconst 783A                               fputs@fp 001D  
                      Paddle_addX@add 0016                   i2___wmul@multiplier 0001  
                   __end_of_sleepInit 62D2                   displayController@ev 00A0  
                   __end_of_vfpfcnvrt 3E04                            _sleepState 00DF  
                i2XF_scheduleTimer@ev 0004                  i2XF_scheduleTimer@tm 0002  
                             postdec1 000FE5                               postdec2 000FDD  
                   _LCD_Lowlevel_Init 5904                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                          ??_vfprintf 0045     __size_of_gameControllerController 0356  
                ?_GameParameters_init 002B             ?_gameControllerController 0037  
                   ??_Menu_inGameDraw 0045                  ?_GameParameters_setX 0012  
                  ?_LCD_Lowlevel_Init 0001                  ?_GameParameters_setY 0012  
                             strlen@a 0014                               strlen@s 0012  
                        _LCD_InButton 4CD0                             _PORTBbits 000F81  
            __end_of_LCD_SliderCreate 4CD0                LCD_SliderCreate@height 0018  
                        _LCD_InSlider 4DAE                          _displayState 00DD  
                        _LCD_DrawRect 2D34                          _LCD_DrawText 1E16  
                   XF_pushEvent@inISR 0018              __end_of_LCD_SliderUpdate 1978  
                    XF_popEvent@inISR 0019                LCD_SliderCreate@slider 0026  
                 ??_LCD_Lowlevel_Init 0012                         ___xxtofl@sign 001A  
                  _gameControllerInit 639E              __size_of_sleepController 0036  
                      Factory_exec@ev 01F1                           ___fldiv@grs 0033  
                         ___fldiv@rem 002C                             i2___awmod 5854  
                    ?i2_ENTERCRITICAL 0001                     ?_LCD_ButtonCreate 0012  
                        ?_Paddle_addX 0012                          ?_Paddle_draw 0025  
                           _Ball_draw 40F0                          ?_Paddle_init 0012  
                           _Ball_init 5BB8                   ?_gameControllerInit 003C  
                __size_of_Ball_Update 0082                    ??_LCD_ButtonCreate 002B  
                   ?_LCD_ButtonUpdate 0025                       _touchScreenInit 6448  
                   _displayController 47F0                           _CCP2CONbits 000F66  
                          displaySM@g 00A3                        LCD_Read@temp16 001A  
     __end_of_arialNarrow_12ptBitmaps 7E62                RGB2LCD@colorTableEntry 0012  
                       ??_configTouch 0012                    ??_LCD_ButtonUpdate 0027  
                   __size_of_LCD_Fill 00C2                     __size_of_LCD_Init 02A8  
                   __size_of_LCD_Read 0142                    ?_displayController 009E  
                          RGB2LCD@red 0018             __end_of_LCD_Lowlevel_Init 59A2  
                  LCD_Lowlevel_Init@i 0013                 LCD_ButtonCreate@fpOut 0026  
                   XF_scheduleTimer@i 0017                 LCD_ButtonCreate@index 002A  
               LCD_ButtonCreate@width 0016                         ??_displayInit 0045  
               __size_of_Menu_endGame 00B0                 ??_GameParameters_init 002D  
               ??_GameParameters_setX 0016                 ??_GameParameters_setY 0016  
                 ??_displayController 00A1                           vfpfcnvrt@ap 0043  
                         vfpfcnvrt@fp 003F                           vfpfcnvrt@ll 0074  
                      __end_of___wmul 6346                  ??_gameControllerInit 003E  
                  LCD_Bitmap@biHeight 006B                  XF_unscheduleTimer@id 0003  
                      i2_XF_pushEvent 5E52                      i2___wmul@product 0005  
                   ?_XF_scheduleTimer 0013                        __end_of_strlen 6114  
                       XF_popEvent@ev 0018                   start_initialization 624E  
                   __size_ofi2___wmul 0026                    ??_XF_scheduleTimer 0017  
                         __end_of_abs 61DC                    LCD_InButton@button 0012  
                         __end_of_pad 5350                           __end_of_isr 00F0  
               XF_scheduleTimer@inISR 0016                            ?i2___awmod 0001  
                          ?_Ball_draw 0025                            ?_Ball_init 0012  
           __end_of_displayController 48F4             __size_of_Menu_welcomeDraw 0078  
          __end_of_XF_unscheduleTimer 6218                          ??_Score_draw 0045  
                   LCD_DrawRect@color 001B                          _Menu_endGame 56F4  
                        ??_Score_init 0014                     LCD_DrawRect@posX1 0012  
                   LCD_DrawRect@posX2 0016                     LCD_DrawRect@posY1 0014  
                   LCD_DrawRect@posY2 0018                    i2XF_pushEvent@temp 0009  
             ??_touchScreenController 0094                           vfprintf@fmt 007E  
                            ??___wmul 001E                   LCD_DrawText@yOffset 0035  
                 __end_of_configTouch 6386                __end_ofi2_XF_pushEvent 5EB6  
                 LCD_DrawText@posXEnd 003B                   LCD_DrawText@posYEnd 0039  
            _arialNarrow_12ptFontInfo 7F7F           __end_of_Menu_parametersDraw 5B40  
                            ??_strlen 0014                  LCD_SliderCreate@posX 0012  
                LCD_SliderCreate@posY 0014                      _gameControllerSM 5102  
                 __end_of_displayInit 639E                             ___fldiv@a 0024  
                           ___fldiv@b 0020                              ?_RGB2LCD 0012  
        __size_of_backlightController 049E                           __pbssCOMRAM 0045  
              LCD_SliderUpdate@slider 0027                         Menu_endGame@g 009C  
         XF_decrementAndQueueTimers@i 000C                         __pcstackBANK0 0060  
                       __pcstackBANK1 01EF                    __end_of_Score_draw 5038  
                LCD_SliderDraw@slider 0037                    __end_of_Score_init 6320  
                    ___aodiv@dividend 0012                    gameControllerSM@ev 0040  
             __end_of_touchScreenInit 6454                  __size_of_XF_popEvent 0060  
                   __size_of___xxtofl 01B4                      LCD_InButton@posX 0014  
                    LCD_InButton@posY 0016                      LCD_Bitmap@bmpPtr 0027  
                   LCD_DrawText@align 0024                              ?_XF_init 0001  
                   LCD_DrawText@color 0029                     ??_sleepController 0012  
                    LCD_Bitmap@strPtr 0071          ??_XF_decrementAndQueueTimers 000A  
                   LCD_DrawText@width 0041                 __end_of_touchScreenSM 5A3C  
             LCD_Bitmap@colorTablePtr 0069                  i2LEAVECRITICAL@inISR 0001  
                    LCD_SliderDraw@x1 003D                      LCD_SliderDraw@x2 003F  
                    LCD_SliderDraw@y1 0041                      LCD_SliderDraw@y2 0043  
          __size_of_LCD_Lowlevel_Init 009E                      ___lwdiv@dividend 0020  
                           _dtoa$4924 0060                             __pintcode 0008  
                       __pmediumconst 783A                              ?___aodiv 0012  
                            ?___aomod 0012                              ?___fldiv 0020  
                            ?___awdiv 0012                      ___aodiv@quotient 0024  
                            ?___awmod 0012                              ?___fltol 0039  
                            ?___lwdiv 0020                              ?___lwmod 0012  
              __size_of_LEAVECRITICAL 0016                       ?i2_XF_pushEvent 0007  
                           _displaySM 48F4                     __size_of_vfprintf 0062  
 __end_of_GameParameters_setBackLight 6158           _GameParameters_setBackLight 6114  
            ?_GameParameters_resetPos 0012                            mooveBall@g 0025  
                            ?_sleepSM 0001                      ___lwdiv@quotient 0025  
         touchScreenController@valueX 00B0           touchScreenController@valueY 00AE  
                         ??i2___awmod 0005                              ?_sprintf 0084  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                      __size_of_putch 0002                           ??_Ball_draw 0027  
                         ??_Ball_init 0014            __size_of_displayController 0104  
                          sleepInit@g 00A5                              _LCD_Fill 5350  
                            _LCD_Init 3350                              _LCD_Read 4246  
                       ??_moovePaddle 001E                        ___wmul@product 001E  
                __size_of_Paddle_addX 00DA                  __size_of_Paddle_draw 0132  
                __size_of_Paddle_init 00B0                       _Menu_inGameDraw 5FCE  
                i2ENTERCRITICAL@inISR 0001                    LCD_SliderUpdate@x1 0035  
                  LCD_SliderUpdate@x2 002F                    LCD_SliderUpdate@y1 0031  
                  LCD_SliderUpdate@y2 0033                    displayController@g 009E  
             __size_of_checkCollision 08CA                             _mooveBall 62D2  
                         _configTouch 636C                              i2u510_40 6434  
                            i2u510_41 6430                              i2u511_40 641E  
                            i2u511_41 641A                              i2u512_40 5866  
                            i2u512_41 5862                              i2u513_40 5880  
                            i2u513_41 587C                              i2u514_40 589A  
                            i2u514_41 5896                              i2u515_40 58B8  
                            i2u515_41 58B4                              i2u516_40 58CE  
                            i2u540_40 5D82                              i2u516_41 58CA  
                            i2u540_41 5D7E                              i2u517_40 58F2  
                            i2u533_40 5E8C                              i2u541_40 0028  
                            i2u517_41 58EE                              i2u533_41 5E88  
                            i2u541_41 0024                              XF_init@i 0020  
                            i2u542_40 0036                              i2u542_41 0032  
                            i2u535_40 44F2                              i2u543_40 0044  
                            i2u535_41 44EE                              i2u543_41 0040  
                            i2u536_40 454A                              i2u544_40 0064  
                            i2u536_41 4546                              i2u544_41 0060  
                           _sleepInit 62AA                              i2u537_40 4584  
                            i2u545_40 0080                              i2u537_41 4580  
                            i2u545_41 007C                              i2u538_40 45DA  
                            i2u546_40 008E                              i2u538_41 45D6  
                            i2u546_41 008A                              i2u539_40 5D40  
                            i2u547_40 00AA                              i2u539_41 5D3C  
                            i2u547_41 00A6                __size_of_ENTERCRITICAL 0016  
                         _displayInit 6386                             _vfpfcnvrt 3C50  
                          ?_displaySM 00A3                     ___wmul@multiplier 001A  
                   ?_LCD_SliderCreate 0012                              i2___wmul 6346  
    GameParameters_setBackLight@value 0014                    LCD_ButtonUpdate@x1 0033  
                  LCD_ButtonUpdate@x2 002F                    LCD_ButtonUpdate@y1 0031  
                  LCD_ButtonUpdate@y2 0035               i2XF_scheduleTimer@inISR 0005  
                  ??_LCD_SliderCreate 0028                      __size_of_RGB2LCD 00BE  
                   ?_LCD_SliderUpdate 0027                      LCD_InSlider@posX 0014  
                    LCD_InSlider@posY 0016                  LCD_ButtonCreate@font 0020  
                LCD_ButtonCreate@posX 0012                  LCD_ButtonCreate@posY 0014  
                LCD_ButtonDraw@bmpPtr 009A                      ?_touchScreenInit 0001  
                  ??_LCD_SliderUpdate 0029                  LCD_ButtonDraw@button 007C  
                       _LEAVECRITICAL 63E0                         ?_Factory_exec 0001  
                       ?_Factory_init 0001                    i2___awmod@dividend 0001  
                    _Menu_welcomeDraw 5B40                       checkCollision@g 001B  
         __size_ofi2_XF_scheduleTimer 0074                      __size_of_XF_init 00B8  
                    LCD_DrawRect@fill 001A                            ?_mooveBall 0025  
                            __Hrparam 0000                      LCD_DrawRect@temp 001F  
                          ?_sleepInit 00A5              __size_ofi2_LEAVECRITICAL 0016  
                          vfprintf@ap 0080                              __Lrparam 0000  
                          vfprintf@fp 007C                   __end_of_moovePaddle 4BE2  
             __size_of_LCD_ButtonDraw 04EE                __size_of_configMeasure 0050  
           __size_of_LCD_ButtonCreate 00FA                      __size_of___aodiv 0188  
     __end_of_GameParameters_resetPos 62AA                      __size_of___aomod 0164  
                    __size_of___fldiv 039A                      __size_of___awdiv 00C4  
                    __size_of___awmod 00B0                      __size_of___fltol 0106  
               i2___wmul@multiplicand 0003                            ?_vfpfcnvrt 003F  
                    __size_of___lwdiv 0074                      __size_of___lwmod 0064  
           __size_of_LCD_ButtonUpdate 0236                     gameControllerSM@g 003C  
                     ___aodiv@divisor 001A                      Paddle_addX@value 0014  
            LCD_ButtonUpdate@colorOut 002B                       ___aodiv@counter 0022  
                        moovePaddle@g 001C              GameParameters_setX@value 0014  
                     LCD_Bitmap@color 006D              GameParameters_setY@value 0014  
                    LCD_DrawText@font 0022                            sprintf@fmt 0086  
                    LCD_DrawText@posX 0025                      LCD_DrawText@posY 0027  
                            ___xxtofl 3A9C                            Ball_draw@b 0025  
                     ___lwdiv@divisor 0022                            Ball_init@b 0012  
                     ___lwdiv@counter 0024                              __ptext10 5F78  
                            __ptext11 59A2                              __ptext20 63CA  
                            __ptext12 35F8                              __ptext21 6454  
                            __ptext13 636C                              __ptext30 5D8A  
                            __ptext22 5102                              __ptext14 6076  
                            __ptext31 5A3C                              __ptext23 29DE  
                            __ptext15 3A9C                              __ptext40 5BB8  
                            __ptext32 1978                              __ptext24 4AEE  
                            __ptext16 46EA                              __ptext41 48F4  
                            __ptext33 6114                              __ptext25 4E8C  
                            __ptext17 2644                              __ptext50 4246  
                            __ptext42 47F0                              __ptext34 4DAE  
                            __ptext26 4CD0                              __ptext18 5C2E  
                            __ptext51 09BE                              __ptext43 5B40  
                            __ptext35 2260                              __ptext27 6280  
                            __ptext19 63B4                              __ptext60 306E  
                            __ptext52 5DEE                              __ptext44 5ABE  
                            __ptext36 62FA                              __ptext28 62D2  
                            __ptext61 528E                              __ptext53 5CA2  
                            __ptext45 45DC                              __ptext37 5644  
                            __ptext29 00F4                              __ptext70 6320  
                            __ptext62 6158                              __ptext54 5412  
                            __ptext46 14A2                              __ptext38 4BE2  
                            __ptext71 51CA                              __ptext63 5038  
                            __ptext55 5FCE                              __ptext47 56F4  
                            __ptext39 49F4                              __ptext72 4388  
                            __ptext64 6456                              __ptext56 4F66  
                            __ptext48 0FB4                              __ptext81 5D16  
                            __ptext73 5350                              __ptext65 619C  
                            __ptext57 6024                              __ptext49 3866  
                            __ptext82 44BA                              __ptext74 40F0  
                            __ptext66 3F8C                              __ptext58 5EB6  
                            __ptext83 6346                              __ptext75 2D34  
                            __ptext67 3E04                              __ptext59 3C50  
                            __ptext84 5E52                              __ptext76 5F18  
                            __ptext68 1E16                              __ptext85 5854  
                            __ptext77 57A4                              __ptext69 60C6  
                            __ptext86 61DC                              __ptext78 63E0  
                            __ptext87 640C                              __ptext79 63F6  
                            __ptext88 6422                      __size_of_sleepSM 0002  
                      ?_LEAVECRITICAL 0001                         _ENTERCRITICAL 63F6  
                       ??_Ball_Update 0014                        ??_Factory_exec 0045  
                      ??_Factory_init 00A7               __end_of_Menu_inGameDraw 6024  
            GameParameters_resetPos@s 0012                      __size_of_sprintf 0052  
  __end_of_XF_decrementAndQueueTimers 45DC            _XF_decrementAndQueueTimers 44BA  
                       __size_of_main 0010                             sleepSM@ev 0001  
                       __size_of_dtoa 02E2             __size_of_XF_scheduleTimer 0074  
            __end_of_gameControllerSM 51CA                   _backlightController 1978  
         __end_of_GameParameters_init 2644           __end_of_GameParameters_setX 63E0  
         __end_of_GameParameters_setY 63CA              __size_ofi2_ENTERCRITICAL 0016  
             __size_of_LCD_SliderDraw 010E          GameParameters_setBackLight@s 0012  
            _gameControllerController 29DE                              isa$xinst 000000  
                          _LCD_Bitmap 09BE        __size_of_touchScreenController 026E  
                  _XF_unscheduleTimer 61DC         __end_of_touchScreenController 3866  
                            int$flags 004E                              _vfprintf 5EB6  
                       ?_XF_pushEvent 0018           __size_of_gameControllerInit 0016  
                         ??_displaySM 00A5                      ___aomod@dividend 0012  
                 ?_XF_unscheduleTimer 0002                     i2___awmod@divisor 0003  
                   i2___awmod@counter 0005                  ?_backlightController 0018  
                     _sleepController 6218                        ?_ENTERCRITICAL 0001  
                       _configMeasure 6076                              intlevel2 0000  
                           sprintf@ap 008A                       LCD_DrawText@msg 0020  
                    ___lwmod@dividend 0012                  ??_XF_unscheduleTimer 0003  
                         _moovePaddle 4AEE                   __end_of_Ball_Update 5ABE  
                      _checkCollision 00F4                           ??_mooveBall 0027  
                         ??_sleepInit 0045                      ??i2_XF_pushEvent 0008  
                      ??_XF_pushEvent 0019                       ___aomod@divisor 001A  
                         ??_vfpfcnvrt 0072                       ___aomod@counter 0022  
                   ??i2_LEAVECRITICAL 0001                              sprintf@f 008C  
                            sprintf@s 0084                 ??_backlightController 001A  
                       ??_XF_popEvent 0018                       ___lwmod@divisor 0014  
             LCD_SliderCreate@bgColor 001C                       ___lwmod@counter 0016  
                     ??_LEAVECRITICAL 0012                        ?_configMeasure 0001  
         LCD_SliderCreate@borderColor 001E          __size_of_Menu_parametersDraw 0082  
            LCD_SliderCreate@sldColor 001A               LCD_SliderCreate@fpPress 0024  
                    ?_Menu_inGameDraw 0094                          ___aodiv@sign 0023  
                     Paddle_init@team 0014                __end_of_checkCollision 09BE  
    __size_of_GameParameters_resetPos 002A  __size_of_GameParameters_setBackLight 0044  
                        ___aomod@sign 0023                          ?_configTouch 0001  
